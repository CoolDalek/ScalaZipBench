--- Execution profile ---
Total samples       : 21000
unknown_Java        : 33 (0.16%)

--- 88029074224 ns (41.78%), 8781 samples
  [ 0] /usr/lib/x86_64-linux-gnu/libz.so.1.2.11
  [ 1] java.util.zip.Inflater.inflateBytesBytes
  [ 2] java.util.zip.Inflater.inflate
  [ 3] java.util.zip.InflaterInputStream.read
  [ 4] java.io.InputStream.readNBytes
  [ 5] java.io.InputStream.readAllBytes
  [ 6] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [ 7] jdk.nio.zipfs.ZipPath.newByteChannel
  [ 8] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [ 9] java.nio.file.Files.newByteChannel
  [10] java.nio.file.Files.newByteChannel
  [11] java.nio.file.Files.readAllBytes
  [12] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [13] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [14] cats.effect.IOFiber.$anonfun$8
  [15] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [16] cats.effect.unsafe.WorkerThread.blockOn
  [17] scala.concurrent.package$.blocking
  [18] cats.effect.IOFiber.runLoop
  [19] cats.effect.IOFiber.execR
  [20] cats.effect.IOFiber.run
  [21] cats.effect.unsafe.WorkerThread.run

--- 50466474266 ns (23.95%), 5036 samples
  [ 0] /usr/lib/x86_64-linux-gnu/libz.so.1.2.11
  [ 1] [unknown]
  [ 2] java.util.zip.Inflater.inflateBytesBytes
  [ 3] java.util.zip.Inflater.inflate
  [ 4] java.util.zip.InflaterInputStream.read
  [ 5] java.io.InputStream.readNBytes
  [ 6] java.io.InputStream.readAllBytes
  [ 7] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [ 8] jdk.nio.zipfs.ZipPath.newByteChannel
  [ 9] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [10] java.nio.file.Files.newByteChannel
  [11] java.nio.file.Files.newByteChannel
  [12] java.nio.file.Files.readAllBytes
  [13] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [14] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [15] cats.effect.IOFiber.$anonfun$8
  [16] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [17] cats.effect.unsafe.WorkerThread.blockOn
  [18] scala.concurrent.package$.blocking
  [19] cats.effect.IOFiber.runLoop
  [20] cats.effect.IOFiber.execR
  [21] cats.effect.IOFiber.run
  [22] cats.effect.unsafe.WorkerThread.run

--- 7799546797 ns (3.70%), 778 samples
  [ 0] inflate
  [ 1] java.util.zip.Inflater.inflateBytesBytes
  [ 2] java.util.zip.Inflater.inflate
  [ 3] java.util.zip.InflaterInputStream.read
  [ 4] java.io.InputStream.readNBytes
  [ 5] java.io.InputStream.readAllBytes
  [ 6] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [ 7] jdk.nio.zipfs.ZipPath.newByteChannel
  [ 8] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [ 9] java.nio.file.Files.newByteChannel
  [10] java.nio.file.Files.newByteChannel
  [11] java.nio.file.Files.readAllBytes
  [12] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [13] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [14] cats.effect.IOFiber.$anonfun$8
  [15] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [16] cats.effect.unsafe.WorkerThread.blockOn
  [17] scala.concurrent.package$.blocking
  [18] cats.effect.IOFiber.runLoop
  [19] cats.effect.IOFiber.execR
  [20] cats.effect.IOFiber.run
  [21] cats.effect.unsafe.WorkerThread.run

--- 2255597566 ns (1.07%), 225 samples
  [ 0] java.io.InputStream.readNBytes
  [ 1] java.io.InputStream.readAllBytes
  [ 2] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [ 3] jdk.nio.zipfs.ZipPath.newByteChannel
  [ 4] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [ 5] java.nio.file.Files.newByteChannel
  [ 6] java.nio.file.Files.newByteChannel
  [ 7] java.nio.file.Files.readAllBytes
  [ 8] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [ 9] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [10] cats.effect.IOFiber.$anonfun$8
  [11] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [12] cats.effect.unsafe.WorkerThread.blockOn
  [13] scala.concurrent.package$.blocking
  [14] cats.effect.IOFiber.runLoop
  [15] cats.effect.IOFiber.execR
  [16] cats.effect.IOFiber.run
  [17] cats.effect.unsafe.WorkerThread.run

--- 2074916770 ns (0.98%), 207 samples
  [ 0] java.util.Arrays.copyOfRange
  [ 1] java.lang.String.<init>
  [ 2] java.lang.String.<init>
  [ 3] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [ 4] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [ 5] cats.effect.IOFiber.$anonfun$8
  [ 6] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [ 7] cats.effect.unsafe.WorkerThread.blockOn
  [ 8] scala.concurrent.package$.blocking
  [ 9] cats.effect.IOFiber.runLoop
  [10] cats.effect.IOFiber.execR
  [11] cats.effect.IOFiber.run
  [12] cats.effect.unsafe.WorkerThread.run

--- 1944637480 ns (0.92%), 194 samples
  [ 0] java.lang.System.arraycopy
  [ 1] java.io.InputStream.readNBytes
  [ 2] java.io.InputStream.readAllBytes
  [ 3] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [ 4] jdk.nio.zipfs.ZipPath.newByteChannel
  [ 5] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [ 6] java.nio.file.Files.newByteChannel
  [ 7] java.nio.file.Files.newByteChannel
  [ 8] java.nio.file.Files.readAllBytes
  [ 9] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [10] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [11] cats.effect.IOFiber.$anonfun$8
  [12] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [13] cats.effect.unsafe.WorkerThread.blockOn
  [14] scala.concurrent.package$.blocking
  [15] cats.effect.IOFiber.runLoop
  [16] cats.effect.IOFiber.execR
  [17] cats.effect.IOFiber.run
  [18] cats.effect.unsafe.WorkerThread.run

--- 1873778948 ns (0.89%), 187 samples
  [ 0] java.lang.System.arraycopy
  [ 1] java.nio.HeapByteBuffer.put
  [ 2] jdk.nio.zipfs.ByteArrayChannel.read
  [ 3] sun.nio.ch.ChannelInputStream.read
  [ 4] sun.nio.ch.ChannelInputStream.read
  [ 5] sun.nio.ch.ChannelInputStream.read
  [ 6] java.nio.file.Files.read
  [ 7] java.nio.file.Files.readAllBytes
  [ 8] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [ 9] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [10] cats.effect.IOFiber.$anonfun$8
  [11] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [12] cats.effect.unsafe.WorkerThread.blockOn
  [13] scala.concurrent.package$.blocking
  [14] cats.effect.IOFiber.runLoop
  [15] cats.effect.IOFiber.execR
  [16] cats.effect.IOFiber.run
  [17] cats.effect.unsafe.WorkerThread.run

--- 1483528826 ns (0.70%), 148 samples
  [ 0] java.nio.file.Files.read
  [ 1] java.nio.file.Files.readAllBytes
  [ 2] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [ 3] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [ 4] cats.effect.IOFiber.$anonfun$8
  [ 5] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [ 6] cats.effect.unsafe.WorkerThread.blockOn
  [ 7] scala.concurrent.package$.blocking
  [ 8] cats.effect.IOFiber.runLoop
  [ 9] cats.effect.IOFiber.execR
  [10] cats.effect.IOFiber.run
  [11] cats.effect.unsafe.WorkerThread.run

--- 1403515389 ns (0.67%), 140 samples
  [ 0] __memset_avx2_unaligned_erms
  [ 1] MemAllocator::allocate() const
  [ 2] TypeArrayKlass::allocate_common(int, bool, JavaThread*)
  [ 3] JVMCIRuntime::new_array_common(JavaThread*, Klass*, int, bool)
  [ 4] jdk.nio.zipfs.ZipFileSystem.getInflater
  [ 5] jdk.nio.zipfs.ZipFileSystem.getInputStream
  [ 6] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [ 7] jdk.nio.zipfs.ZipPath.newByteChannel
  [ 8] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [ 9] java.nio.file.Files.newByteChannel
  [10] java.nio.file.Files.newByteChannel
  [11] java.nio.file.Files.readAllBytes
  [12] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [13] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [14] cats.effect.IOFiber.$anonfun$8
  [15] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [16] cats.effect.unsafe.WorkerThread.blockOn
  [17] scala.concurrent.package$.blocking
  [18] cats.effect.IOFiber.runLoop
  [19] cats.effect.IOFiber.execR
  [20] cats.effect.IOFiber.run
  [21] cats.effect.unsafe.WorkerThread.run

--- 1173025442 ns (0.56%), 117 samples
  [ 0] __memset_avx2_unaligned_erms
  [ 1] MemAllocator::allocate() const
  [ 2] TypeArrayKlass::allocate_common(int, bool, JavaThread*)
  [ 3] JVMCIRuntime::new_array_common(JavaThread*, Klass*, int, bool)
  [ 4] java.io.InputStream.readNBytes
  [ 5] java.io.InputStream.readAllBytes
  [ 6] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [ 7] jdk.nio.zipfs.ZipPath.newByteChannel
  [ 8] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [ 9] java.nio.file.Files.newByteChannel
  [10] java.nio.file.Files.newByteChannel
  [11] java.nio.file.Files.readAllBytes
  [12] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [13] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [14] cats.effect.IOFiber.$anonfun$8
  [15] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [16] cats.effect.unsafe.WorkerThread.blockOn
  [17] scala.concurrent.package$.blocking
  [18] cats.effect.IOFiber.runLoop
  [19] cats.effect.IOFiber.execR
  [20] cats.effect.IOFiber.run
  [21] cats.effect.unsafe.WorkerThread.run

--- 1132701257 ns (0.54%), 113 samples
  [ 0] java.io.InputStream.readNBytes
  [ 1] java.io.InputStream.readAllBytes
  [ 2] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [ 3] jdk.nio.zipfs.ZipPath.newByteChannel
  [ 4] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [ 5] java.nio.file.Files.newByteChannel
  [ 6] java.nio.file.Files.newByteChannel
  [ 7] java.nio.file.Files.readAllBytes
  [ 8] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [ 9] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [10] cats.effect.IOFiber.$anonfun$8
  [11] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [12] cats.effect.unsafe.WorkerThread.blockOn
  [13] scala.concurrent.package$.blocking
  [14] cats.effect.IOFiber.runLoop
  [15] cats.effect.IOFiber.execR
  [16] cats.effect.IOFiber.run
  [17] cats.effect.unsafe.WorkerThread.run

--- 1092819226 ns (0.52%), 109 samples
  [ 0] __memmove_avx_unaligned_erms
  [ 1] java.util.zip.Inflater.inflateBytesBytes
  [ 2] java.util.zip.Inflater.inflate
  [ 3] java.util.zip.InflaterInputStream.read
  [ 4] java.io.InputStream.readNBytes
  [ 5] java.io.InputStream.readAllBytes
  [ 6] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [ 7] jdk.nio.zipfs.ZipPath.newByteChannel
  [ 8] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [ 9] java.nio.file.Files.newByteChannel
  [10] java.nio.file.Files.newByteChannel
  [11] java.nio.file.Files.readAllBytes
  [12] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [13] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [14] cats.effect.IOFiber.$anonfun$8
  [15] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [16] cats.effect.unsafe.WorkerThread.blockOn
  [17] scala.concurrent.package$.blocking
  [18] cats.effect.IOFiber.runLoop
  [19] cats.effect.IOFiber.execR
  [20] cats.effect.IOFiber.run
  [21] cats.effect.unsafe.WorkerThread.run

--- 1082544770 ns (0.51%), 108 samples
  [ 0] java.lang.StringCoding.hasNegatives
  [ 1] java.lang.String.<init>
  [ 2] java.lang.String.<init>
  [ 3] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [ 4] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [ 5] cats.effect.IOFiber.$anonfun$8
  [ 6] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [ 7] cats.effect.unsafe.WorkerThread.blockOn
  [ 8] scala.concurrent.package$.blocking
  [ 9] cats.effect.IOFiber.runLoop
  [10] cats.effect.IOFiber.execR
  [11] cats.effect.IOFiber.run
  [12] cats.effect.unsafe.WorkerThread.run

--- 953216791 ns (0.45%), 95 samples
  [ 0] copy_user_generic_string_[k]
  [ 1] zfs_uiomove_iter?[zfs]_[k]
  [ 2] zfs_uiomove?[zfs]_[k]
  [ 3] dmu_read_uio_dnode?[zfs]_[k]
  [ 4] dmu_read_uio_dbuf?[zfs]_[k]
  [ 5] zfs_read?[zfs]_[k]
  [ 6] zpl_iter_read?[zfs]_[k]
  [ 7] new_sync_read_[k]
  [ 8] vfs_read_[k]
  [ 9] __x64_sys_pread64_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] __libc_pread64
  [13] sun.nio.ch.FileDispatcherImpl.pread0
  [14] sun.nio.ch.FileDispatcherImpl.pread
  [15] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [16] sun.nio.ch.IOUtil.read
  [17] sun.nio.ch.IOUtil.read
  [18] sun.nio.ch.FileChannelImpl.readInternal
  [19] sun.nio.ch.FileChannelImpl.read
  [20] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [21] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [22] jdk.nio.zipfs.ZipFileSystem$2.fill
  [23] java.util.zip.InflaterInputStream.read
  [24] java.io.InputStream.readNBytes
  [25] java.io.InputStream.readAllBytes
  [26] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [27] jdk.nio.zipfs.ZipPath.newByteChannel
  [28] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [29] java.nio.file.Files.newByteChannel
  [30] java.nio.file.Files.newByteChannel
  [31] java.nio.file.Files.readAllBytes
  [32] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [33] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [34] cats.effect.IOFiber.$anonfun$8
  [35] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [36] cats.effect.unsafe.WorkerThread.blockOn
  [37] scala.concurrent.package$.blocking
  [38] cats.effect.IOFiber.runLoop
  [39] cats.effect.IOFiber.execR
  [40] cats.effect.IOFiber.run
  [41] cats.effect.unsafe.WorkerThread.run

--- 852199080 ns (0.40%), 85 samples
  [ 0] java.util.zip.InflaterInputStream.<init>
  [ 1] jdk.nio.zipfs.ZipFileSystem$2.<init>
  [ 2] jdk.nio.zipfs.ZipFileSystem.getInputStream
  [ 3] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [ 4] jdk.nio.zipfs.ZipPath.newByteChannel
  [ 5] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [ 6] java.nio.file.Files.newByteChannel
  [ 7] java.nio.file.Files.newByteChannel
  [ 8] java.nio.file.Files.readAllBytes
  [ 9] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [10] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [11] cats.effect.IOFiber.$anonfun$8
  [12] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [13] cats.effect.unsafe.WorkerThread.blockOn
  [14] scala.concurrent.package$.blocking
  [15] cats.effect.IOFiber.runLoop
  [16] cats.effect.IOFiber.execR
  [17] cats.effect.IOFiber.run
  [18] cats.effect.unsafe.WorkerThread.run

--- 691666983 ns (0.33%), 69 samples
  [ 0] __memset_avx2_unaligned_erms
  [ 1] MemAllocator::allocate() const
  [ 2] TypeArrayKlass::allocate_common(int, bool, JavaThread*)
  [ 3] JVMCIRuntime::new_array_common(JavaThread*, Klass*, int, bool)
  [ 4] java.nio.charset.Charset.forName
  [ 5] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [ 6] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [ 7] cats.effect.IOFiber.$anonfun$8
  [ 8] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [ 9] cats.effect.unsafe.WorkerThread.blockOn
  [10] scala.concurrent.package$.blocking
  [11] cats.effect.IOFiber.runLoop
  [12] cats.effect.IOFiber.execR
  [13] cats.effect.IOFiber.run
  [14] cats.effect.unsafe.WorkerThread.run

--- 621430649 ns (0.29%), 62 samples
  [ 0] __memset_avx2_unaligned_erms
  [ 1] MemAllocator::allocate() const
  [ 2] TypeArrayKlass::allocate_common(int, bool, JavaThread*)
  [ 3] JVMCIRuntime::new_array_common(JavaThread*, Klass*, int, bool)
  [ 4] jdk.nio.zipfs.ByteArrayChannel.endRead
  [ 5] jdk.nio.zipfs.ByteArrayChannel.size
  [ 6] java.nio.file.Files.readAllBytes
  [ 7] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [ 8] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [ 9] cats.effect.IOFiber.$anonfun$8
  [10] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [11] cats.effect.unsafe.WorkerThread.blockOn
  [12] scala.concurrent.package$.blocking
  [13] cats.effect.IOFiber.runLoop
  [14] cats.effect.IOFiber.execR
  [15] cats.effect.IOFiber.run
  [16] cats.effect.unsafe.WorkerThread.run

--- 531363101 ns (0.25%), 53 samples
  [ 0] __memset_avx2_unaligned_erms
  [ 1] MemAllocator::allocate() const
  [ 2] TypeArrayKlass::allocate_common(int, bool, JavaThread*)
  [ 3] JVMCIRuntime::new_array_common(JavaThread*, Klass*, int, bool)
  [ 4] java.io.InputStream.readNBytes
  [ 5] java.io.InputStream.readAllBytes
  [ 6] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [ 7] jdk.nio.zipfs.ZipPath.newByteChannel
  [ 8] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [ 9] java.nio.file.Files.newByteChannel
  [10] java.nio.file.Files.newByteChannel
  [11] java.nio.file.Files.readAllBytes
  [12] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [13] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [14] cats.effect.IOFiber.$anonfun$8
  [15] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [16] cats.effect.unsafe.WorkerThread.blockOn
  [17] scala.concurrent.package$.blocking
  [18] cats.effect.IOFiber.runLoop
  [19] cats.effect.IOFiber.execR
  [20] cats.effect.IOFiber.run
  [21] cats.effect.unsafe.WorkerThread.run

--- 502036902 ns (0.24%), 50 samples
  [ 0] __vfprintf_internal
  [ 1] [unknown]
  [ 2] java.lang.Thread.setNativeName
  [ 3] java.lang.Thread.setName
  [ 4] cats.effect.unsafe.WorkerThread.blockOn
  [ 5] scala.concurrent.package$.blocking
  [ 6] cats.effect.IOFiber.runLoop
  [ 7] cats.effect.IOFiber.execR
  [ 8] cats.effect.IOFiber.run
  [ 9] cats.effect.unsafe.WorkerThread.run

--- 485923293 ns (0.23%), 47 samples
  [ 0] _raw_spin_unlock_irqrestore_[k]
  [ 1] try_to_wake_up_[k]
  [ 2] wake_up_q_[k]
  [ 3] futex_wake_[k]
  [ 4] do_futex_[k]
  [ 5] __x64_sys_futex_[k]
  [ 6] do_syscall_64_[k]
  [ 7] entry_SYSCALL_64_after_hwframe_[k]
  [ 8] pthread_cond_signal@@GLIBC_2.3.2
  [ 9] jdk.internal.misc.Unsafe.unpark
  [10] java.util.concurrent.locks.LockSupport.unpark
  [11] cats.effect.unsafe.WorkStealingThreadPool.notifyParked
  [12] cats.effect.unsafe.WorkStealingThreadPool.scheduleExternal
  [13] cats.effect.unsafe.WorkStealingThreadPool.execute
  [14] cats.effect.IO.unsafeRunFiber
  [15] cats.effect.IO.unsafeRunAsync
  [16] cats.effect.IOPlatform.unsafeRunTimed
  [17] cats.effect.IOPlatform.unsafeRunSync
  [18] com.scalamandra.ZipBench.com$scalamandra$ZipBench$$_$nioReadAllBytes$$anonfun$1
  [19] com.scalamandra.ZipBench$$anon$3.apply
  [20] com.scalamandra.ZipBench$$anon$3.apply
  [21] com.scalamandra.ZipBench.nioReadAllBytes
  [22] com.scalamandra.jmh_generated.ZipBench_nioReadAllBytes_jmhTest.nioReadAllBytes_thrpt_jmhStub
  [23] com.scalamandra.jmh_generated.ZipBench_nioReadAllBytes_jmhTest.nioReadAllBytes_Throughput
  [24] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [25] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [26] java.lang.reflect.Method.invoke
  [27] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [28] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [29] java.util.concurrent.FutureTask.run
  [30] java.util.concurrent.Executors$RunnableAdapter.call
  [31] java.util.concurrent.FutureTask.run
  [32] java.util.concurrent.ThreadPoolExecutor.runWorker
  [33] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [34] java.lang.Thread.run

--- 470945134 ns (0.22%), 47 samples
  [ 0] jbyte_disjoint_arraycopy
  [ 1] jdk.internal.misc.Unsafe.copyMemory0
  [ 2] jdk.internal.misc.Unsafe.copyMemory
  [ 3] jdk.internal.misc.ScopedMemoryAccess.copyMemoryInternal
  [ 4] jdk.internal.misc.ScopedMemoryAccess.copyMemory
  [ 5] java.nio.ByteBuffer.putBuffer
  [ 6] java.nio.ByteBuffer.put
  [ 7] java.nio.HeapByteBuffer.put
  [ 8] sun.nio.ch.IOUtil.read
  [ 9] sun.nio.ch.IOUtil.read
  [10] sun.nio.ch.FileChannelImpl.readInternal
  [11] sun.nio.ch.FileChannelImpl.read
  [12] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [13] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [14] jdk.nio.zipfs.ZipFileSystem$2.fill
  [15] java.util.zip.InflaterInputStream.read
  [16] java.io.InputStream.readNBytes
  [17] java.io.InputStream.readAllBytes
  [18] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [19] jdk.nio.zipfs.ZipPath.newByteChannel
  [20] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [21] java.nio.file.Files.newByteChannel
  [22] java.nio.file.Files.newByteChannel
  [23] java.nio.file.Files.readAllBytes
  [24] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [25] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [26] cats.effect.IOFiber.$anonfun$8
  [27] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [28] cats.effect.unsafe.WorkerThread.blockOn
  [29] scala.concurrent.package$.blocking
  [30] cats.effect.IOFiber.runLoop
  [31] cats.effect.IOFiber.execR
  [32] cats.effect.IOFiber.run
  [33] cats.effect.unsafe.WorkerThread.run

--- 452051482 ns (0.21%), 45 samples
  [ 0] _raw_spin_unlock_irqrestore_[k]
  [ 1] try_to_wake_up_[k]
  [ 2] wake_up_q_[k]
  [ 3] futex_wake_[k]
  [ 4] do_futex_[k]
  [ 5] __x64_sys_futex_[k]
  [ 6] do_syscall_64_[k]
  [ 7] entry_SYSCALL_64_after_hwframe_[k]
  [ 8] pthread_cond_signal@@GLIBC_2.3.2
  [ 9] jdk.internal.misc.Unsafe.unpark
  [10] java.util.concurrent.locks.LockSupport.unpark
  [11] cats.effect.unsafe.WorkStealingThreadPool.notifyParked
  [12] cats.effect.unsafe.WorkerThread.blockOn
  [13] scala.concurrent.package$.blocking
  [14] cats.effect.IOFiber.runLoop
  [15] cats.effect.IOFiber.execR
  [16] cats.effect.IOFiber.run
  [17] cats.effect.unsafe.WorkerThread.run

--- 391317035 ns (0.19%), 39 samples
  [ 0] _raw_spin_unlock_irqrestore_[k]
  [ 1] try_to_wake_up_[k]
  [ 2] wake_up_q_[k]
  [ 3] futex_wake_[k]
  [ 4] do_futex_[k]
  [ 5] __x64_sys_futex_[k]
  [ 6] do_syscall_64_[k]
  [ 7] entry_SYSCALL_64_after_hwframe_[k]
  [ 8] pthread_cond_signal@@GLIBC_2.3.2
  [ 9] jdk.internal.misc.Unsafe.unpark
  [10] java.util.concurrent.locks.LockSupport.unpark
  [11] java.util.concurrent.LinkedTransferQueue$Node.tryMatch
  [12] java.util.concurrent.LinkedTransferQueue.xfer
  [13] java.util.concurrent.LinkedTransferQueue.transfer
  [14] cats.effect.unsafe.WorkerThread.blockOn
  [15] scala.concurrent.package$.blocking
  [16] cats.effect.IOFiber.runLoop
  [17] cats.effect.IOFiber.execR
  [18] cats.effect.IOFiber.run
  [19] cats.effect.unsafe.WorkerThread.run

--- 341418472 ns (0.16%), 34 samples
  [ 0] strncpy_from_user_[k]
  [ 1] __do_sys_prctl_[k]
  [ 2] __x64_sys_prctl_[k]
  [ 3] do_syscall_64_[k]
  [ 4] entry_SYSCALL_64_after_hwframe_[k]
  [ 5] __GI___prctl
  [ 6] [unknown]
  [ 7] java.lang.Thread.setNativeName
  [ 8] java.lang.Thread.setName
  [ 9] cats.effect.unsafe.WorkerThread.blockOn
  [10] scala.concurrent.package$.blocking
  [11] cats.effect.IOFiber.runLoop
  [12] cats.effect.IOFiber.execR
  [13] cats.effect.IOFiber.run
  [14] cats.effect.unsafe.WorkerThread.run

--- 340970898 ns (0.16%), 34 samples
  [ 0] _raw_spin_unlock_irqrestore_[k]
  [ 1] try_to_wake_up_[k]
  [ 2] wake_up_q_[k]
  [ 3] futex_wake_[k]
  [ 4] do_futex_[k]
  [ 5] __x64_sys_futex_[k]
  [ 6] do_syscall_64_[k]
  [ 7] entry_SYSCALL_64_after_hwframe_[k]
  [ 8] pthread_cond_signal@@GLIBC_2.3.2
  [ 9] jdk.internal.misc.Unsafe.unpark
  [10] java.util.concurrent.locks.LockSupport.unpark
  [11] java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext
  [12] java.util.concurrent.locks.AbstractQueuedSynchronizer.release
  [13] java.util.concurrent.locks.ReentrantLock.unlock
  [14] java.util.concurrent.ArrayBlockingQueue.offer
  [15] cats.effect.IOPlatform.unsafeRunTimed$$anonfun$1
  [16] cats.effect.IOPlatform$$Lambda$137.0x0000000800d9e8b0.applyVoid
  [17] scala.runtime.function.JProcedure1.apply
  [18] scala.runtime.function.JProcedure1.apply
  [19] cats.effect.IO.unsafeRunAsync$$anonfun$3
  [20] cats.effect.IO$$Lambda$140.0x0000000800d9f380.applyVoid
  [21] scala.runtime.function.JProcedure1.apply
  [22] scala.runtime.function.JProcedure1.apply
  [23] cats.effect.IO.$anonfun$6$$anonfun$3
  [24] cats.effect.IO$$Lambda$149.0x0000000800da19b0.applyVoid
  [25] scala.runtime.function.JProcedure1.apply
  [26] scala.runtime.function.JProcedure1.apply
  [27] cats.effect.kernel.Outcome.fold
  [28] cats.effect.kernel.Outcome.fold$
  [29] cats.effect.kernel.Outcome$Succeeded.fold
  [30] cats.effect.IO.$anonfun$6
  [31] cats.effect.IO$$Lambda$141.0x0000000800d9a530.applyVoid
  [32] scala.runtime.function.JProcedure1.apply
  [33] scala.runtime.function.JProcedure1.apply
  [34] cats.effect.CallbackStack.apply
  [35] cats.effect.IOFiber.done
  [36] cats.effect.IOFiber.runTerminusSuccessK
  [37] cats.effect.IOFiber.succeeded
  [38] cats.effect.IOFiber.runLoop
  [39] cats.effect.IOFiber.execR
  [40] cats.effect.IOFiber.run
  [41] cats.effect.unsafe.WorkerThread.run

--- 311026234 ns (0.15%), 31 samples
  [ 0] find_vmap_area_[k]
  [ 1] check_heap_object_[k]
  [ 2] __check_object_size.part.0_[k]
  [ 3] __check_object_size_[k]
  [ 4] zfs_uiomove_iter?[zfs]_[k]
  [ 5] zfs_uiomove?[zfs]_[k]
  [ 6] dmu_read_uio_dnode?[zfs]_[k]
  [ 7] dmu_read_uio_dbuf?[zfs]_[k]
  [ 8] zfs_read?[zfs]_[k]
  [ 9] zpl_iter_read?[zfs]_[k]
  [10] new_sync_read_[k]
  [11] vfs_read_[k]
  [12] __x64_sys_pread64_[k]
  [13] do_syscall_64_[k]
  [14] entry_SYSCALL_64_after_hwframe_[k]
  [15] __libc_pread64
  [16] sun.nio.ch.FileDispatcherImpl.pread0
  [17] sun.nio.ch.FileDispatcherImpl.pread
  [18] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [19] sun.nio.ch.IOUtil.read
  [20] sun.nio.ch.IOUtil.read
  [21] sun.nio.ch.FileChannelImpl.readInternal
  [22] sun.nio.ch.FileChannelImpl.read
  [23] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [24] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [25] jdk.nio.zipfs.ZipFileSystem$Entry.readLocEXTT
  [26] jdk.nio.zipfs.ZipFileSystem$Entry.readExtra
  [27] jdk.nio.zipfs.ZipFileSystem$Entry.readCEN
  [28] jdk.nio.zipfs.ZipFileSystem$Entry.<init>
  [29] jdk.nio.zipfs.ZipFileSystem.getEntry
  [30] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [31] jdk.nio.zipfs.ZipPath.newByteChannel
  [32] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [33] java.nio.file.Files.newByteChannel
  [34] java.nio.file.Files.newByteChannel
  [35] java.nio.file.Files.readAllBytes
  [36] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [37] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [38] cats.effect.IOFiber.$anonfun$8
  [39] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [40] cats.effect.unsafe.WorkerThread.blockOn
  [41] scala.concurrent.package$.blocking
  [42] cats.effect.IOFiber.runLoop
  [43] cats.effect.IOFiber.execR
  [44] cats.effect.IOFiber.run
  [45] cats.effect.unsafe.WorkerThread.run

--- 310396644 ns (0.15%), 30 samples
  [ 0] pthread_cond_signal@@GLIBC_2.3.2
  [ 1] jdk.internal.misc.Unsafe.unpark
  [ 2] java.util.concurrent.locks.LockSupport.unpark
  [ 3] cats.effect.unsafe.WorkStealingThreadPool.notifyParked
  [ 4] cats.effect.unsafe.WorkStealingThreadPool.scheduleExternal
  [ 5] cats.effect.unsafe.WorkStealingThreadPool.execute
  [ 6] cats.effect.IO.unsafeRunFiber
  [ 7] cats.effect.IO.unsafeRunAsync
  [ 8] cats.effect.IOPlatform.unsafeRunTimed
  [ 9] cats.effect.IOPlatform.unsafeRunSync
  [10] com.scalamandra.ZipBench.com$scalamandra$ZipBench$$_$nioReadAllBytes$$anonfun$1
  [11] com.scalamandra.ZipBench$$anon$3.apply
  [12] com.scalamandra.ZipBench$$anon$3.apply
  [13] com.scalamandra.ZipBench.nioReadAllBytes
  [14] com.scalamandra.jmh_generated.ZipBench_nioReadAllBytes_jmhTest.nioReadAllBytes_thrpt_jmhStub
  [15] com.scalamandra.jmh_generated.ZipBench_nioReadAllBytes_jmhTest.nioReadAllBytes_Throughput
  [16] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [17] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [18] java.lang.reflect.Method.invoke
  [19] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] java.util.concurrent.FutureTask.run
  [22] java.util.concurrent.Executors$RunnableAdapter.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.ThreadPoolExecutor.runWorker
  [25] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [26] java.lang.Thread.run

--- 291241273 ns (0.14%), 29 samples
  [ 0] _IO_default_xsputn
  [ 1] java.lang.Thread.setNativeName
  [ 2] java.lang.Thread.setName
  [ 3] cats.effect.unsafe.WorkerThread.blockOn
  [ 4] scala.concurrent.package$.blocking
  [ 5] cats.effect.IOFiber.runLoop
  [ 6] cats.effect.IOFiber.execR
  [ 7] cats.effect.IOFiber.run
  [ 8] cats.effect.unsafe.WorkerThread.run

--- 280679244 ns (0.13%), 28 samples
  [ 0] java.util.Arrays.copyOfRange
  [ 1] java.io.InputStream.readNBytes
  [ 2] java.io.InputStream.readAllBytes
  [ 3] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [ 4] jdk.nio.zipfs.ZipPath.newByteChannel
  [ 5] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [ 6] java.nio.file.Files.newByteChannel
  [ 7] java.nio.file.Files.newByteChannel
  [ 8] java.nio.file.Files.readAllBytes
  [ 9] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [10] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [11] cats.effect.IOFiber.$anonfun$8
  [12] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [13] cats.effect.unsafe.WorkerThread.blockOn
  [14] scala.concurrent.package$.blocking
  [15] cats.effect.IOFiber.runLoop
  [16] cats.effect.IOFiber.execR
  [17] cats.effect.IOFiber.run
  [18] cats.effect.unsafe.WorkerThread.run

--- 251211526 ns (0.12%), 25 samples
  [ 0] char* UNICODE::as_utf8<signed char>(signed char const*, int&)
  [ 1] java_lang_String::as_utf8_string(oopDesc*)
  [ 2] JVM_SetNativeThreadName
  [ 3] java.lang.Thread.setNativeName
  [ 4] java.lang.Thread.setName
  [ 5] cats.effect.unsafe.WorkerThread.blockOn
  [ 6] scala.concurrent.package$.blocking
  [ 7] cats.effect.IOFiber.runLoop
  [ 8] cats.effect.IOFiber.execR
  [ 9] cats.effect.IOFiber.run
  [10] cats.effect.unsafe.WorkerThread.run

--- 220955821 ns (0.10%), 22 samples
  [ 0] syscall_enter_from_user_mode_[k]
  [ 1] do_syscall_64_[k]
  [ 2] entry_SYSCALL_64_after_hwframe_[k]
  [ 3] __GI___prctl
  [ 4] [unknown]
  [ 5] java.lang.Thread.setNativeName
  [ 6] java.lang.Thread.setName
  [ 7] cats.effect.unsafe.WorkerThread.blockOn
  [ 8] scala.concurrent.package$.blocking
  [ 9] cats.effect.IOFiber.runLoop
  [10] cats.effect.IOFiber.execR
  [11] cats.effect.IOFiber.run
  [12] cats.effect.unsafe.WorkerThread.run

--- 220727580 ns (0.10%), 22 samples
  [ 0] __schedule_[k]
  [ 1] schedule_[k]
  [ 2] do_sched_yield_[k]
  [ 3] __x64_sys_sched_yield_[k]
  [ 4] do_syscall_64_[k]
  [ 5] entry_SYSCALL_64_after_hwframe_[k]
  [ 6] __GI___sched_yield
  [ 7] java.lang.Thread.yield
  [ 8] java.util.concurrent.LinkedTransferQueue.awaitMatch
  [ 9] java.util.concurrent.LinkedTransferQueue.xfer
  [10] java.util.concurrent.LinkedTransferQueue.poll
  [11] cats.effect.unsafe.WorkerThread.run

--- 210873669 ns (0.10%), 21 samples
  [ 0] _IO_strn_overflow
  [ 1] java.lang.Thread.setNativeName
  [ 2] java.lang.Thread.setName
  [ 3] cats.effect.unsafe.WorkerThread.blockOn
  [ 4] scala.concurrent.package$.blocking
  [ 5] cats.effect.IOFiber.runLoop
  [ 6] cats.effect.IOFiber.execR
  [ 7] cats.effect.IOFiber.run
  [ 8] cats.effect.unsafe.WorkerThread.run

--- 200630848 ns (0.10%), 20 samples
  [ 0] pthread_cond_signal@@GLIBC_2.3.2
  [ 1] jdk.internal.misc.Unsafe.unpark
  [ 2] java.util.concurrent.locks.LockSupport.unpark
  [ 3] java.util.concurrent.LinkedTransferQueue$Node.tryMatch
  [ 4] java.util.concurrent.LinkedTransferQueue.xfer
  [ 5] java.util.concurrent.LinkedTransferQueue.transfer
  [ 6] cats.effect.unsafe.WorkerThread.blockOn
  [ 7] scala.concurrent.package$.blocking
  [ 8] cats.effect.IOFiber.runLoop
  [ 9] cats.effect.IOFiber.execR
  [10] cats.effect.IOFiber.run
  [11] cats.effect.unsafe.WorkerThread.run

--- 192184348 ns (0.09%), 19 samples
  [ 0] HeapRegionManager::par_iterate(HeapRegionClosure*, HeapRegionClaimer*, unsigned int) const
  [ 1] G1PrepareEvacuationTask::work(unsigned int)
  [ 2] GangWorker::loop()
  [ 3] GangWorker::run()
  [ 4] Thread::call_run()
  [ 5] thread_native_entry(Thread*)
  [ 6] start_thread

--- 190798908 ns (0.09%), 19 samples
  [ 0] pthread_cond_signal@@GLIBC_2.3.2
  [ 1] jdk.internal.misc.Unsafe.unpark
  [ 2] java.util.concurrent.locks.LockSupport.unpark
  [ 3] cats.effect.unsafe.WorkStealingThreadPool.notifyParked
  [ 4] cats.effect.unsafe.WorkerThread.blockOn
  [ 5] scala.concurrent.package$.blocking
  [ 6] cats.effect.IOFiber.runLoop
  [ 7] cats.effect.IOFiber.execR
  [ 8] cats.effect.IOFiber.run
  [ 9] cats.effect.unsafe.WorkerThread.run

--- 190736368 ns (0.09%), 19 samples
  [ 0] _raw_spin_lock_[k]
  [ 1] __do_sys_prctl_[k]
  [ 2] __x64_sys_prctl_[k]
  [ 3] do_syscall_64_[k]
  [ 4] entry_SYSCALL_64_after_hwframe_[k]
  [ 5] __GI___prctl
  [ 6] [unknown]
  [ 7] java.lang.Thread.setNativeName
  [ 8] java.lang.Thread.setName
  [ 9] cats.effect.unsafe.WorkerThread.blockOn
  [10] scala.concurrent.package$.blocking
  [11] cats.effect.IOFiber.runLoop
  [12] cats.effect.IOFiber.execR
  [13] cats.effect.IOFiber.run
  [14] cats.effect.unsafe.WorkerThread.run

--- 190696581 ns (0.09%), 19 samples
  [ 0] java.util.concurrent.ConcurrentLinkedQueue.poll
  [ 1] cats.effect.unsafe.ScalQueue.poll
  [ 2] cats.effect.unsafe.WorkerThread.run

--- 180836118 ns (0.09%), 18 samples
  [ 0] __GI__IO_setb
  [ 1] java.lang.Thread.setNativeName
  [ 2] java.lang.Thread.setName
  [ 3] cats.effect.unsafe.WorkerThread.blockOn
  [ 4] scala.concurrent.package$.blocking
  [ 5] cats.effect.IOFiber.runLoop
  [ 6] cats.effect.IOFiber.execR
  [ 7] cats.effect.IOFiber.run
  [ 8] cats.effect.unsafe.WorkerThread.run

--- 180646434 ns (0.09%), 18 samples
  [ 0] futex_q_lock_[k]
  [ 1] futex_wait_setup_[k]
  [ 2] futex_wait_[k]
  [ 3] do_futex_[k]
  [ 4] __x64_sys_futex_[k]
  [ 5] do_syscall_64_[k]
  [ 6] entry_SYSCALL_64_after_hwframe_[k]
  [ 7] __futex_abstimed_wait_cancelable64
  [ 8] [unknown]
  [ 9] jdk.internal.misc.Unsafe.park
  [10] java.util.concurrent.locks.LockSupport.park
  [11] cats.effect.unsafe.WorkerThread.parkLoop$1
  [12] cats.effect.unsafe.WorkerThread.run

--- 180584703 ns (0.09%), 18 samples
  [ 0] syscall_enter_from_user_mode_[k]
  [ 1] do_syscall_64_[k]
  [ 2] entry_SYSCALL_64_after_hwframe_[k]
  [ 3] __futex_abstimed_wait_cancelable64
  [ 4] [unknown]
  [ 5] jdk.internal.misc.Unsafe.park
  [ 6] java.util.concurrent.locks.LockSupport.park
  [ 7] cats.effect.unsafe.WorkerThread.parkLoop$1
  [ 8] cats.effect.unsafe.WorkerThread.run

--- 170561384 ns (0.08%), 17 samples
  [ 0] JVM_SetNativeThreadName
  [ 1] java.lang.Thread.setNativeName
  [ 2] java.lang.Thread.setName
  [ 3] cats.effect.unsafe.WorkerThread.blockOn
  [ 4] scala.concurrent.package$.blocking
  [ 5] cats.effect.IOFiber.runLoop
  [ 6] cats.effect.IOFiber.execR
  [ 7] cats.effect.IOFiber.run
  [ 8] cats.effect.unsafe.WorkerThread.run

--- 170540225 ns (0.08%), 17 samples
  [ 0] futex_wake_[k]
  [ 1] do_futex_[k]
  [ 2] __x64_sys_futex_[k]
  [ 3] do_syscall_64_[k]
  [ 4] entry_SYSCALL_64_after_hwframe_[k]
  [ 5] pthread_cond_signal@@GLIBC_2.3.2
  [ 6] jdk.internal.misc.Unsafe.unpark
  [ 7] java.util.concurrent.locks.LockSupport.unpark
  [ 8] java.util.concurrent.LinkedTransferQueue$Node.tryMatch
  [ 9] java.util.concurrent.LinkedTransferQueue.xfer
  [10] java.util.concurrent.LinkedTransferQueue.transfer
  [11] cats.effect.unsafe.WorkerThread.blockOn
  [12] scala.concurrent.package$.blocking
  [13] cats.effect.IOFiber.runLoop
  [14] cats.effect.IOFiber.execR
  [15] cats.effect.IOFiber.run
  [16] cats.effect.unsafe.WorkerThread.run

--- 170507027 ns (0.08%), 17 samples
  [ 0] java.util.concurrent.ConcurrentLinkedQueue.first
  [ 1] java.util.concurrent.ConcurrentLinkedQueue.isEmpty
  [ 2] cats.effect.unsafe.ScalQueue.isEmpty
  [ 3] cats.effect.unsafe.ScalQueue.nonEmpty
  [ 4] cats.effect.unsafe.WorkStealingThreadPool.notifyIfWorkPending
  [ 5] cats.effect.unsafe.WorkerThread.run

--- 170492899 ns (0.08%), 17 samples
  [ 0] java.util.concurrent.ConcurrentLinkedQueue.poll
  [ 1] cats.effect.unsafe.ScalQueue.poll
  [ 2] cats.effect.unsafe.WorkerThread.run

--- 170417230 ns (0.08%), 17 samples
  [ 0] jni_ReleasePrimitiveArrayCritical
  [ 1] Java_java_util_zip_Inflater_inflateBytesBytes
  [ 2] java.util.zip.Inflater.inflateBytesBytes
  [ 3] java.util.zip.Inflater.inflate
  [ 4] java.util.zip.InflaterInputStream.read
  [ 5] java.io.InputStream.readNBytes
  [ 6] java.io.InputStream.readAllBytes
  [ 7] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [ 8] jdk.nio.zipfs.ZipPath.newByteChannel
  [ 9] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [10] java.nio.file.Files.newByteChannel
  [11] java.nio.file.Files.newByteChannel
  [12] java.nio.file.Files.readAllBytes
  [13] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [14] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [15] cats.effect.IOFiber.$anonfun$8
  [16] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [17] cats.effect.unsafe.WorkerThread.blockOn
  [18] scala.concurrent.package$.blocking
  [19] cats.effect.IOFiber.runLoop
  [20] cats.effect.IOFiber.execR
  [21] cats.effect.IOFiber.run
  [22] cats.effect.unsafe.WorkerThread.run

--- 170412238 ns (0.08%), 17 samples
  [ 0] pthread_cond_signal@@GLIBC_2.3.2
  [ 1] jdk.internal.misc.Unsafe.unpark
  [ 2] java.util.concurrent.locks.LockSupport.unpark
  [ 3] java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext
  [ 4] java.util.concurrent.locks.AbstractQueuedSynchronizer.release
  [ 5] java.util.concurrent.locks.ReentrantLock.unlock
  [ 6] java.util.concurrent.ArrayBlockingQueue.offer
  [ 7] cats.effect.IOPlatform.unsafeRunTimed$$anonfun$1
  [ 8] cats.effect.IOPlatform$$Lambda$137.0x0000000800d9e8b0.applyVoid
  [ 9] scala.runtime.function.JProcedure1.apply
  [10] scala.runtime.function.JProcedure1.apply
  [11] cats.effect.IO.unsafeRunAsync$$anonfun$3
  [12] cats.effect.IO$$Lambda$140.0x0000000800d9f380.applyVoid
  [13] scala.runtime.function.JProcedure1.apply
  [14] scala.runtime.function.JProcedure1.apply
  [15] cats.effect.IO.$anonfun$6$$anonfun$3
  [16] cats.effect.IO$$Lambda$149.0x0000000800da19b0.applyVoid
  [17] scala.runtime.function.JProcedure1.apply
  [18] scala.runtime.function.JProcedure1.apply
  [19] cats.effect.kernel.Outcome.fold
  [20] cats.effect.kernel.Outcome.fold$
  [21] cats.effect.kernel.Outcome$Succeeded.fold
  [22] cats.effect.IO.$anonfun$6
  [23] cats.effect.IO$$Lambda$141.0x0000000800d9a530.applyVoid
  [24] scala.runtime.function.JProcedure1.apply
  [25] scala.runtime.function.JProcedure1.apply
  [26] cats.effect.CallbackStack.apply
  [27] cats.effect.IOFiber.done
  [28] cats.effect.IOFiber.runTerminusSuccessK
  [29] cats.effect.IOFiber.succeeded
  [30] cats.effect.IOFiber.runLoop
  [31] cats.effect.IOFiber.execR
  [32] cats.effect.IOFiber.run
  [33] cats.effect.unsafe.WorkerThread.run

--- 165569893 ns (0.08%), 16 samples
  [ 0] syscall_enter_from_user_mode_[k]
  [ 1] do_syscall_64_[k]
  [ 2] entry_SYSCALL_64_after_hwframe_[k]
  [ 3] __futex_abstimed_wait_cancelable64
  [ 4] [unknown]
  [ 5] jdk.internal.misc.Unsafe.park
  [ 6] java.util.concurrent.locks.LockSupport.parkNanos
  [ 7] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos
  [ 8] java.util.concurrent.ArrayBlockingQueue.poll
  [ 9] cats.effect.IOPlatform.$anonfun$1
  [10] cats.effect.IOPlatform$$Lambda$144.0x0000000800d999e0.apply
  [11] scala.concurrent.BlockContext$DefaultBlockContext$.blockOn
  [12] scala.concurrent.package$.blocking
  [13] cats.effect.IOPlatform.unsafeRunTimed
  [14] cats.effect.IOPlatform.unsafeRunSync
  [15] com.scalamandra.ZipBench.com$scalamandra$ZipBench$$_$nioReadAllBytes$$anonfun$1
  [16] com.scalamandra.ZipBench$$anon$3.apply
  [17] com.scalamandra.ZipBench$$anon$3.apply
  [18] com.scalamandra.ZipBench.nioReadAllBytes
  [19] com.scalamandra.jmh_generated.ZipBench_nioReadAllBytes_jmhTest.nioReadAllBytes_thrpt_jmhStub
  [20] com.scalamandra.jmh_generated.ZipBench_nioReadAllBytes_jmhTest.nioReadAllBytes_Throughput
  [21] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [22] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [23] java.lang.reflect.Method.invoke
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.Executors$RunnableAdapter.call
  [28] java.util.concurrent.FutureTask.run
  [29] java.util.concurrent.ThreadPoolExecutor.runWorker
  [30] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [31] java.lang.Thread.run

--- 151738674 ns (0.07%), 15 samples
  [ 0] void WeakProcessor::Task::work<G1STWIsAliveClosure, G1KeepAliveClosure>(unsigned int, G1STWIsAliveClosure*, G1KeepAliveClosure*)
  [ 1] GangWorker::loop()
  [ 2] GangWorker::run()
  [ 3] Thread::call_run()
  [ 4] thread_native_entry(Thread*)
  [ 5] start_thread

--- 150564828 ns (0.07%), 15 samples
  [ 0] jdk.internal.misc.Unsafe.compareAndSetReference
  [ 1] java.lang.invoke.VarHandleReferences$FieldInstanceReadWrite.compareAndSet
  [ 2] java.lang.invoke.VarHandleGuards.guard_LLL_Z
  [ 3] java.util.concurrent.ConcurrentSkipListMap.doRemoveFirstEntry
  [ 4] java.util.concurrent.ConcurrentSkipListMap.pollFirstEntry
  [ 5] java.util.concurrent.ConcurrentSkipListSet.pollFirst
  [ 6] cats.effect.unsafe.WorkerThread.blockOn
  [ 7] scala.concurrent.package$.blocking
  [ 8] cats.effect.IOFiber.runLoop
  [ 9] cats.effect.IOFiber.execR
  [10] cats.effect.IOFiber.run
  [11] cats.effect.unsafe.WorkerThread.run

--- 150510808 ns (0.07%), 15 samples
  [ 0] __get_user_nocheck_4_[k]
  [ 1] futex_wait_setup_[k]
  [ 2] futex_wait_[k]
  [ 3] do_futex_[k]
  [ 4] __x64_sys_futex_[k]
  [ 5] do_syscall_64_[k]
  [ 6] entry_SYSCALL_64_after_hwframe_[k]
  [ 7] __futex_abstimed_wait_cancelable64
  [ 8] [unknown]
  [ 9] jdk.internal.misc.Unsafe.park
  [10] java.util.concurrent.locks.LockSupport.park
  [11] cats.effect.unsafe.WorkerThread.parkLoop$1
  [12] cats.effect.unsafe.WorkerThread.run

--- 150475519 ns (0.07%), 15 samples
  [ 0] __GI___prctl
  [ 1] [unknown]
  [ 2] java.lang.Thread.setNativeName
  [ 3] java.lang.Thread.setName
  [ 4] cats.effect.unsafe.WorkerThread.blockOn
  [ 5] scala.concurrent.package$.blocking
  [ 6] cats.effect.IOFiber.runLoop
  [ 7] cats.effect.IOFiber.execR
  [ 8] cats.effect.IOFiber.run
  [ 9] cats.effect.unsafe.WorkerThread.run

--- 140543672 ns (0.07%), 14 samples
  [ 0] security_task_prctl_[k]
  [ 1] __do_sys_prctl_[k]
  [ 2] __x64_sys_prctl_[k]
  [ 3] do_syscall_64_[k]
  [ 4] entry_SYSCALL_64_after_hwframe_[k]
  [ 5] __GI___prctl
  [ 6] [unknown]
  [ 7] java.lang.Thread.setNativeName
  [ 8] java.lang.Thread.setName
  [ 9] cats.effect.unsafe.WorkerThread.blockOn
  [10] scala.concurrent.package$.blocking
  [11] cats.effect.IOFiber.runLoop
  [12] cats.effect.IOFiber.execR
  [13] cats.effect.IOFiber.run
  [14] cats.effect.unsafe.WorkerThread.run

--- 140498738 ns (0.07%), 14 samples
  [ 0] __fget_light_[k]
  [ 1] __fdget_[k]
  [ 2] __x64_sys_pread64_[k]
  [ 3] do_syscall_64_[k]
  [ 4] entry_SYSCALL_64_after_hwframe_[k]
  [ 5] __libc_pread64
  [ 6] sun.nio.ch.FileDispatcherImpl.pread0
  [ 7] sun.nio.ch.FileDispatcherImpl.pread
  [ 8] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [ 9] sun.nio.ch.IOUtil.read
  [10] sun.nio.ch.IOUtil.read
  [11] sun.nio.ch.FileChannelImpl.readInternal
  [12] sun.nio.ch.FileChannelImpl.read
  [13] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [14] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [15] jdk.nio.zipfs.ZipFileSystem$Entry.readLocEXTT
  [16] jdk.nio.zipfs.ZipFileSystem$Entry.readExtra
  [17] jdk.nio.zipfs.ZipFileSystem$Entry.readCEN
  [18] jdk.nio.zipfs.ZipFileSystem$Entry.<init>
  [19] jdk.nio.zipfs.ZipFileSystem.getEntry
  [20] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [21] jdk.nio.zipfs.ZipPath.newByteChannel
  [22] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [23] java.nio.file.Files.newByteChannel
  [24] java.nio.file.Files.newByteChannel
  [25] java.nio.file.Files.readAllBytes
  [26] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [27] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [28] cats.effect.IOFiber.$anonfun$8
  [29] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [30] cats.effect.unsafe.WorkerThread.blockOn
  [31] scala.concurrent.package$.blocking
  [32] cats.effect.IOFiber.runLoop
  [33] cats.effect.IOFiber.execR
  [34] cats.effect.IOFiber.run
  [35] cats.effect.unsafe.WorkerThread.run

--- 140467268 ns (0.07%), 14 samples
  [ 0] java.util.concurrent.ConcurrentLinkedQueue.poll
  [ 1] cats.effect.unsafe.ScalQueue.poll
  [ 2] cats.effect.unsafe.WorkStealingThreadPool.stealFromOtherWorkerThread
  [ 3] cats.effect.unsafe.WorkerThread.run

--- 134503795 ns (0.06%), 13 samples
  [ 0] copy_user_generic_string_[k]
  [ 1] get_timespec64_[k]
  [ 2] __x64_sys_futex_[k]
  [ 3] do_syscall_64_[k]
  [ 4] entry_SYSCALL_64_after_hwframe_[k]
  [ 5] __futex_abstimed_wait_cancelable64
  [ 6] [unknown]
  [ 7] jdk.internal.misc.Unsafe.park
  [ 8] java.util.concurrent.locks.LockSupport.parkNanos
  [ 9] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos
  [10] java.util.concurrent.ArrayBlockingQueue.poll
  [11] cats.effect.IOPlatform.$anonfun$1
  [12] cats.effect.IOPlatform$$Lambda$144.0x0000000800d999e0.apply
  [13] scala.concurrent.BlockContext$DefaultBlockContext$.blockOn
  [14] scala.concurrent.package$.blocking
  [15] cats.effect.IOPlatform.unsafeRunTimed
  [16] cats.effect.IOPlatform.unsafeRunSync
  [17] com.scalamandra.ZipBench.com$scalamandra$ZipBench$$_$nioReadAllBytes$$anonfun$1
  [18] com.scalamandra.ZipBench$$anon$3.apply
  [19] com.scalamandra.ZipBench$$anon$3.apply
  [20] com.scalamandra.ZipBench.nioReadAllBytes
  [21] com.scalamandra.jmh_generated.ZipBench_nioReadAllBytes_jmhTest.nioReadAllBytes_thrpt_jmhStub
  [22] com.scalamandra.jmh_generated.ZipBench_nioReadAllBytes_jmhTest.nioReadAllBytes_Throughput
  [23] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [24] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [25] java.lang.reflect.Method.invoke
  [26] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [27] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [28] java.util.concurrent.FutureTask.run
  [29] java.util.concurrent.Executors$RunnableAdapter.call
  [30] java.util.concurrent.FutureTask.run
  [31] java.util.concurrent.ThreadPoolExecutor.runWorker
  [32] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [33] java.lang.Thread.run

--- 130472091 ns (0.06%), 13 samples
  [ 0] cats.effect.unsafe.WorkerThread.blockOn
  [ 1] scala.concurrent.package$.blocking
  [ 2] cats.effect.IOFiber.runLoop
  [ 3] cats.effect.IOFiber.execR
  [ 4] cats.effect.IOFiber.run
  [ 5] cats.effect.unsafe.WorkerThread.run

--- 130416068 ns (0.06%), 13 samples
  [ 0] java.util.concurrent.ConcurrentLinkedQueue.first
  [ 1] java.util.concurrent.ConcurrentLinkedQueue.isEmpty
  [ 2] cats.effect.unsafe.ScalQueue.isEmpty
  [ 3] cats.effect.unsafe.ScalQueue.nonEmpty
  [ 4] cats.effect.unsafe.WorkStealingThreadPool.notifyIfWorkPending
  [ 5] cats.effect.unsafe.WorkerThread.run

--- 130331115 ns (0.06%), 13 samples
  [ 0] futex_wake_[k]
  [ 1] do_futex_[k]
  [ 2] __x64_sys_futex_[k]
  [ 3] do_syscall_64_[k]
  [ 4] entry_SYSCALL_64_after_hwframe_[k]
  [ 5] pthread_cond_signal@@GLIBC_2.3.2
  [ 6] jdk.internal.misc.Unsafe.unpark
  [ 7] java.util.concurrent.locks.LockSupport.unpark
  [ 8] java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext
  [ 9] java.util.concurrent.locks.AbstractQueuedSynchronizer.release
  [10] java.util.concurrent.locks.ReentrantLock.unlock
  [11] java.util.concurrent.ArrayBlockingQueue.offer
  [12] cats.effect.IOPlatform.unsafeRunTimed$$anonfun$1
  [13] cats.effect.IOPlatform$$Lambda$137.0x0000000800d9e8b0.applyVoid
  [14] scala.runtime.function.JProcedure1.apply
  [15] scala.runtime.function.JProcedure1.apply
  [16] cats.effect.IO.unsafeRunAsync$$anonfun$3
  [17] cats.effect.IO$$Lambda$140.0x0000000800d9f380.applyVoid
  [18] scala.runtime.function.JProcedure1.apply
  [19] scala.runtime.function.JProcedure1.apply
  [20] cats.effect.IO.$anonfun$6$$anonfun$3
  [21] cats.effect.IO$$Lambda$149.0x0000000800da19b0.applyVoid
  [22] scala.runtime.function.JProcedure1.apply
  [23] scala.runtime.function.JProcedure1.apply
  [24] cats.effect.kernel.Outcome.fold
  [25] cats.effect.kernel.Outcome.fold$
  [26] cats.effect.kernel.Outcome$Succeeded.fold
  [27] cats.effect.IO.$anonfun$6
  [28] cats.effect.IO$$Lambda$141.0x0000000800d9a530.applyVoid
  [29] scala.runtime.function.JProcedure1.apply
  [30] scala.runtime.function.JProcedure1.apply
  [31] cats.effect.CallbackStack.apply
  [32] cats.effect.IOFiber.done
  [33] cats.effect.IOFiber.runTerminusSuccessK
  [34] cats.effect.IOFiber.succeeded
  [35] cats.effect.IOFiber.runLoop
  [36] cats.effect.IOFiber.execR
  [37] cats.effect.IOFiber.run
  [38] cats.effect.unsafe.WorkerThread.run

--- 120353784 ns (0.06%), 12 samples
  [ 0] __strchrnul_avx2
  [ 1] [unknown]
  [ 2] java.lang.Thread.setNativeName
  [ 3] java.lang.Thread.setName
  [ 4] cats.effect.unsafe.WorkerThread.blockOn
  [ 5] scala.concurrent.package$.blocking
  [ 6] cats.effect.IOFiber.runLoop
  [ 7] cats.effect.IOFiber.execR
  [ 8] cats.effect.IOFiber.run
  [ 9] cats.effect.unsafe.WorkerThread.run

--- 120315106 ns (0.06%), 12 samples
  [ 0] cats.effect.unsafe.WorkStealingThreadPool.stealFromOtherWorkerThread
  [ 1] cats.effect.unsafe.WorkerThread.run

--- 120289059 ns (0.06%), 12 samples
  [ 0] jni_GetPrimitiveArrayCritical
  [ 1] Java_java_util_zip_Inflater_inflateBytesBytes
  [ 2] java.util.zip.Inflater.inflateBytesBytes
  [ 3] java.util.zip.Inflater.inflate
  [ 4] java.util.zip.InflaterInputStream.read
  [ 5] java.io.InputStream.readNBytes
  [ 6] java.io.InputStream.readAllBytes
  [ 7] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [ 8] jdk.nio.zipfs.ZipPath.newByteChannel
  [ 9] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [10] java.nio.file.Files.newByteChannel
  [11] java.nio.file.Files.newByteChannel
  [12] java.nio.file.Files.readAllBytes
  [13] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [14] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [15] cats.effect.IOFiber.$anonfun$8
  [16] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [17] cats.effect.unsafe.WorkerThread.blockOn
  [18] scala.concurrent.package$.blocking
  [19] cats.effect.IOFiber.runLoop
  [20] cats.effect.IOFiber.execR
  [21] cats.effect.IOFiber.run
  [22] cats.effect.unsafe.WorkerThread.run

--- 113868878 ns (0.05%), 11 samples
  [ 0] futex_wake_[k]
  [ 1] do_futex_[k]
  [ 2] __x64_sys_futex_[k]
  [ 3] do_syscall_64_[k]
  [ 4] entry_SYSCALL_64_after_hwframe_[k]
  [ 5] pthread_cond_signal@@GLIBC_2.3.2
  [ 6] jdk.internal.misc.Unsafe.unpark
  [ 7] java.util.concurrent.locks.LockSupport.unpark
  [ 8] cats.effect.unsafe.WorkStealingThreadPool.notifyParked
  [ 9] cats.effect.unsafe.WorkStealingThreadPool.scheduleExternal
  [10] cats.effect.unsafe.WorkStealingThreadPool.execute
  [11] cats.effect.IO.unsafeRunFiber
  [12] cats.effect.IO.unsafeRunAsync
  [13] cats.effect.IOPlatform.unsafeRunTimed
  [14] cats.effect.IOPlatform.unsafeRunSync
  [15] com.scalamandra.ZipBench.com$scalamandra$ZipBench$$_$nioReadAllBytes$$anonfun$1
  [16] com.scalamandra.ZipBench$$anon$3.apply
  [17] com.scalamandra.ZipBench$$anon$3.apply
  [18] com.scalamandra.ZipBench.nioReadAllBytes
  [19] com.scalamandra.jmh_generated.ZipBench_nioReadAllBytes_jmhTest.nioReadAllBytes_thrpt_jmhStub
  [20] com.scalamandra.jmh_generated.ZipBench_nioReadAllBytes_jmhTest.nioReadAllBytes_Throughput
  [21] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [22] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [23] java.lang.reflect.Method.invoke
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.Executors$RunnableAdapter.call
  [28] java.util.concurrent.FutureTask.run
  [29] java.util.concurrent.ThreadPoolExecutor.runWorker
  [30] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [31] java.lang.Thread.run

--- 110428065 ns (0.05%), 11 samples
  [ 0] kmem_cache_alloc_[k]
  [ 1] spl_kmem_cache_alloc?[spl]_[k]
  [ 2] zio_create?[zfs]_[k]
  [ 3] zio_null?[zfs]_[k]
  [ 4] zio_root?[zfs]_[k]
  [ 5] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 6] dmu_read_uio_dnode?[zfs]_[k]
  [ 7] dmu_read_uio_dbuf?[zfs]_[k]
  [ 8] zfs_read?[zfs]_[k]
  [ 9] zpl_iter_read?[zfs]_[k]
  [10] new_sync_read_[k]
  [11] vfs_read_[k]
  [12] __x64_sys_pread64_[k]
  [13] do_syscall_64_[k]
  [14] entry_SYSCALL_64_after_hwframe_[k]
  [15] __libc_pread64
  [16] sun.nio.ch.FileDispatcherImpl.pread0
  [17] sun.nio.ch.FileDispatcherImpl.pread
  [18] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [19] sun.nio.ch.IOUtil.read
  [20] sun.nio.ch.IOUtil.read
  [21] sun.nio.ch.FileChannelImpl.readInternal
  [22] sun.nio.ch.FileChannelImpl.read
  [23] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [24] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [25] jdk.nio.zipfs.ZipFileSystem$Entry.readLocEXTT
  [26] jdk.nio.zipfs.ZipFileSystem$Entry.readExtra
  [27] jdk.nio.zipfs.ZipFileSystem$Entry.readCEN
  [28] jdk.nio.zipfs.ZipFileSystem$Entry.<init>
  [29] jdk.nio.zipfs.ZipFileSystem.getEntry
  [30] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [31] jdk.nio.zipfs.ZipPath.newByteChannel
  [32] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [33] java.nio.file.Files.newByteChannel
  [34] java.nio.file.Files.newByteChannel
  [35] java.nio.file.Files.readAllBytes
  [36] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [37] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [38] cats.effect.IOFiber.$anonfun$8
  [39] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [40] cats.effect.unsafe.WorkerThread.blockOn
  [41] scala.concurrent.package$.blocking
  [42] cats.effect.IOFiber.runLoop
  [43] cats.effect.IOFiber.execR
  [44] cats.effect.IOFiber.run
  [45] cats.effect.unsafe.WorkerThread.run

--- 110378168 ns (0.05%), 11 samples
  [ 0] Unsafe_Park
  [ 1] jdk.internal.misc.Unsafe.park
  [ 2] java.util.concurrent.locks.LockSupport.park
  [ 3] cats.effect.unsafe.WorkerThread.parkLoop$1
  [ 4] cats.effect.unsafe.WorkerThread.run

--- 110374574 ns (0.05%), 11 samples
  [ 0] os::set_native_thread_name(char const*)
  [ 1] JVM_SetNativeThreadName
  [ 2] java.lang.Thread.setNativeName
  [ 3] java.lang.Thread.setName
  [ 4] cats.effect.unsafe.WorkerThread.blockOn
  [ 5] scala.concurrent.package$.blocking
  [ 6] cats.effect.IOFiber.runLoop
  [ 7] cats.effect.IOFiber.execR
  [ 8] cats.effect.IOFiber.run
  [ 9] cats.effect.unsafe.WorkerThread.run

--- 110307050 ns (0.05%), 11 samples
  [ 0] ___pthread_cond_wait
  [ 1] [unknown]
  [ 2] jdk.internal.misc.Unsafe.park
  [ 3] java.util.concurrent.locks.LockSupport.park
  [ 4] cats.effect.unsafe.WorkerThread.parkLoop$1
  [ 5] cats.effect.unsafe.WorkerThread.run

--- 110280018 ns (0.05%), 11 samples
  [ 0] syscall_enter_from_user_mode_[k]
  [ 1] do_syscall_64_[k]
  [ 2] entry_SYSCALL_64_after_hwframe_[k]
  [ 3] pthread_cond_signal@@GLIBC_2.3.2
  [ 4] jdk.internal.misc.Unsafe.unpark
  [ 5] java.util.concurrent.locks.LockSupport.unpark
  [ 6] java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext
  [ 7] java.util.concurrent.locks.AbstractQueuedSynchronizer.release
  [ 8] java.util.concurrent.locks.ReentrantLock.unlock
  [ 9] java.util.concurrent.ArrayBlockingQueue.offer
  [10] cats.effect.IOPlatform.unsafeRunTimed$$anonfun$1
  [11] cats.effect.IOPlatform$$Lambda$137.0x0000000800d9e8b0.applyVoid
  [12] scala.runtime.function.JProcedure1.apply
  [13] scala.runtime.function.JProcedure1.apply
  [14] cats.effect.IO.unsafeRunAsync$$anonfun$3
  [15] cats.effect.IO$$Lambda$140.0x0000000800d9f380.applyVoid
  [16] scala.runtime.function.JProcedure1.apply
  [17] scala.runtime.function.JProcedure1.apply
  [18] cats.effect.IO.$anonfun$6$$anonfun$3
  [19] cats.effect.IO$$Lambda$149.0x0000000800da19b0.applyVoid
  [20] scala.runtime.function.JProcedure1.apply
  [21] scala.runtime.function.JProcedure1.apply
  [22] cats.effect.kernel.Outcome.fold
  [23] cats.effect.kernel.Outcome.fold$
  [24] cats.effect.kernel.Outcome$Succeeded.fold
  [25] cats.effect.IO.$anonfun$6
  [26] cats.effect.IO$$Lambda$141.0x0000000800d9a530.applyVoid
  [27] scala.runtime.function.JProcedure1.apply
  [28] scala.runtime.function.JProcedure1.apply
  [29] cats.effect.CallbackStack.apply
  [30] cats.effect.IOFiber.done
  [31] cats.effect.IOFiber.runTerminusSuccessK
  [32] cats.effect.IOFiber.succeeded
  [33] cats.effect.IOFiber.runLoop
  [34] cats.effect.IOFiber.execR
  [35] cats.effect.IOFiber.run
  [36] cats.effect.unsafe.WorkerThread.run

--- 100382696 ns (0.05%), 10 samples
  [ 0] __schedule_[k]
  [ 1] schedule_[k]
  [ 2] futex_wait_queue_[k]
  [ 3] futex_wait_[k]
  [ 4] do_futex_[k]
  [ 5] __x64_sys_futex_[k]
  [ 6] do_syscall_64_[k]
  [ 7] entry_SYSCALL_64_after_hwframe_[k]
  [ 8] __futex_abstimed_wait_cancelable64
  [ 9] [unknown]
  [10] jdk.internal.misc.Unsafe.park
  [11] java.util.concurrent.locks.LockSupport.park
  [12] cats.effect.unsafe.WorkerThread.parkLoop$1
  [13] cats.effect.unsafe.WorkerThread.run

--- 100365254 ns (0.05%), 10 samples
  [ 0] futex_wake_mark_[k]
  [ 1] futex_wake_[k]
  [ 2] do_futex_[k]
  [ 3] __x64_sys_futex_[k]
  [ 4] do_syscall_64_[k]
  [ 5] entry_SYSCALL_64_after_hwframe_[k]
  [ 6] pthread_cond_signal@@GLIBC_2.3.2
  [ 7] jdk.internal.misc.Unsafe.unpark
  [ 8] java.util.concurrent.locks.LockSupport.unpark
  [ 9] java.util.concurrent.LinkedTransferQueue$Node.tryMatch
  [10] java.util.concurrent.LinkedTransferQueue.xfer
  [11] java.util.concurrent.LinkedTransferQueue.transfer
  [12] cats.effect.unsafe.WorkerThread.blockOn
  [13] scala.concurrent.package$.blocking
  [14] cats.effect.IOFiber.runLoop
  [15] cats.effect.IOFiber.execR
  [16] cats.effect.IOFiber.run
  [17] cats.effect.unsafe.WorkerThread.run

--- 100358915 ns (0.05%), 10 samples
  [ 0] jdk.internal.misc.Unsafe.park
  [ 1] java.util.concurrent.locks.LockSupport.park
  [ 2] cats.effect.unsafe.WorkerThread.parkLoop$1
  [ 3] cats.effect.unsafe.WorkerThread.run

--- 100328927 ns (0.05%), 10 samples
  [ 0] zio_create?[zfs]_[k]
  [ 1] zio_null?[zfs]_[k]
  [ 2] zio_root?[zfs]_[k]
  [ 3] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 4] dmu_read_uio_dnode?[zfs]_[k]
  [ 5] dmu_read_uio_dbuf?[zfs]_[k]
  [ 6] zfs_read?[zfs]_[k]
  [ 7] zpl_iter_read?[zfs]_[k]
  [ 8] new_sync_read_[k]
  [ 9] vfs_read_[k]
  [10] __x64_sys_pread64_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] __libc_pread64
  [14] sun.nio.ch.FileDispatcherImpl.pread0
  [15] sun.nio.ch.FileDispatcherImpl.pread
  [16] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [17] sun.nio.ch.IOUtil.read
  [18] sun.nio.ch.IOUtil.read
  [19] sun.nio.ch.FileChannelImpl.readInternal
  [20] sun.nio.ch.FileChannelImpl.read
  [21] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [22] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [23] jdk.nio.zipfs.ZipFileSystem$Entry.readLocEXTT
  [24] jdk.nio.zipfs.ZipFileSystem$Entry.readExtra
  [25] jdk.nio.zipfs.ZipFileSystem$Entry.readCEN
  [26] jdk.nio.zipfs.ZipFileSystem$Entry.<init>
  [27] jdk.nio.zipfs.ZipFileSystem.getEntry
  [28] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [29] jdk.nio.zipfs.ZipPath.newByteChannel
  [30] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [31] java.nio.file.Files.newByteChannel
  [32] java.nio.file.Files.newByteChannel
  [33] java.nio.file.Files.readAllBytes
  [34] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [35] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [36] cats.effect.IOFiber.$anonfun$8
  [37] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [38] cats.effect.unsafe.WorkerThread.blockOn
  [39] scala.concurrent.package$.blocking
  [40] cats.effect.IOFiber.runLoop
  [41] cats.effect.IOFiber.execR
  [42] cats.effect.IOFiber.run
  [43] cats.effect.unsafe.WorkerThread.run

--- 100271849 ns (0.05%), 10 samples
  [ 0] sun.nio.ch.Util$BufferCache.get
  [ 1] sun.nio.ch.Util.getTemporaryDirectBuffer
  [ 2] sun.nio.ch.IOUtil.read
  [ 3] sun.nio.ch.IOUtil.read
  [ 4] sun.nio.ch.FileChannelImpl.readInternal
  [ 5] sun.nio.ch.FileChannelImpl.read
  [ 6] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [ 7] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [ 8] jdk.nio.zipfs.ZipFileSystem$Entry.readLocEXTT
  [ 9] jdk.nio.zipfs.ZipFileSystem$Entry.readExtra
  [10] jdk.nio.zipfs.ZipFileSystem$Entry.readCEN
  [11] jdk.nio.zipfs.ZipFileSystem$Entry.<init>
  [12] jdk.nio.zipfs.ZipFileSystem.getEntry
  [13] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [14] jdk.nio.zipfs.ZipPath.newByteChannel
  [15] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [16] java.nio.file.Files.newByteChannel
  [17] java.nio.file.Files.newByteChannel
  [18] java.nio.file.Files.readAllBytes
  [19] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [20] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [21] cats.effect.IOFiber.$anonfun$8
  [22] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [23] cats.effect.unsafe.WorkerThread.blockOn
  [24] scala.concurrent.package$.blocking
  [25] cats.effect.IOFiber.runLoop
  [26] cats.effect.IOFiber.execR
  [27] cats.effect.IOFiber.run
  [28] cats.effect.unsafe.WorkerThread.run

--- 90362683 ns (0.04%), 9 samples
  [ 0] syscall_enter_from_user_mode_[k]
  [ 1] do_syscall_64_[k]
  [ 2] entry_SYSCALL_64_after_hwframe_[k]
  [ 3] pthread_cond_signal@@GLIBC_2.3.2
  [ 4] jdk.internal.misc.Unsafe.unpark
  [ 5] java.util.concurrent.locks.LockSupport.unpark
  [ 6] java.util.concurrent.LinkedTransferQueue$Node.tryMatch
  [ 7] java.util.concurrent.LinkedTransferQueue.xfer
  [ 8] java.util.concurrent.LinkedTransferQueue.transfer
  [ 9] cats.effect.unsafe.WorkerThread.blockOn
  [10] scala.concurrent.package$.blocking
  [11] cats.effect.IOFiber.runLoop
  [12] cats.effect.IOFiber.execR
  [13] cats.effect.IOFiber.run
  [14] cats.effect.unsafe.WorkerThread.run

--- 90338022 ns (0.04%), 9 samples
  [ 0] _IO_no_init
  [ 1] [unknown]
  [ 2] java.lang.Thread.setNativeName
  [ 3] java.lang.Thread.setName
  [ 4] cats.effect.unsafe.WorkerThread.blockOn
  [ 5] scala.concurrent.package$.blocking
  [ 6] cats.effect.IOFiber.runLoop
  [ 7] cats.effect.IOFiber.execR
  [ 8] cats.effect.IOFiber.run
  [ 9] cats.effect.unsafe.WorkerThread.run

--- 90310899 ns (0.04%), 9 samples
  [ 0] pthread_mutex_trylock@@GLIBC_2.34
  [ 1] [unknown]
  [ 2] jdk.internal.misc.Unsafe.park
  [ 3] java.util.concurrent.locks.LockSupport.park
  [ 4] cats.effect.unsafe.WorkerThread.parkLoop$1
  [ 5] cats.effect.unsafe.WorkerThread.run

--- 90306953 ns (0.04%), 9 samples
  [ 0] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 1] dmu_read_uio_dnode?[zfs]_[k]
  [ 2] dmu_read_uio_dbuf?[zfs]_[k]
  [ 3] zfs_read?[zfs]_[k]
  [ 4] zpl_iter_read?[zfs]_[k]
  [ 5] new_sync_read_[k]
  [ 6] vfs_read_[k]
  [ 7] __x64_sys_pread64_[k]
  [ 8] do_syscall_64_[k]
  [ 9] entry_SYSCALL_64_after_hwframe_[k]
  [10] __libc_pread64
  [11] sun.nio.ch.FileDispatcherImpl.pread0
  [12] sun.nio.ch.FileDispatcherImpl.pread
  [13] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [14] sun.nio.ch.IOUtil.read
  [15] sun.nio.ch.IOUtil.read
  [16] sun.nio.ch.FileChannelImpl.readInternal
  [17] sun.nio.ch.FileChannelImpl.read
  [18] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [19] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [20] jdk.nio.zipfs.ZipFileSystem$Entry.readLocEXTT
  [21] jdk.nio.zipfs.ZipFileSystem$Entry.readExtra
  [22] jdk.nio.zipfs.ZipFileSystem$Entry.readCEN
  [23] jdk.nio.zipfs.ZipFileSystem$Entry.<init>
  [24] jdk.nio.zipfs.ZipFileSystem.getEntry
  [25] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [26] jdk.nio.zipfs.ZipPath.newByteChannel
  [27] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [28] java.nio.file.Files.newByteChannel
  [29] java.nio.file.Files.newByteChannel
  [30] java.nio.file.Files.readAllBytes
  [31] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [32] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [33] cats.effect.IOFiber.$anonfun$8
  [34] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [35] cats.effect.unsafe.WorkerThread.blockOn
  [36] scala.concurrent.package$.blocking
  [37] cats.effect.IOFiber.runLoop
  [38] cats.effect.IOFiber.execR
  [39] cats.effect.IOFiber.run
  [40] cats.effect.unsafe.WorkerThread.run

--- 90306291 ns (0.04%), 9 samples
  [ 0] __kmalloc_node_[k]
  [ 1] spl_kmem_alloc_impl?[spl]_[k]
  [ 2] spl_kmem_zalloc?[spl]_[k]
  [ 3] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 4] dmu_read_uio_dnode?[zfs]_[k]
  [ 5] dmu_read_uio_dbuf?[zfs]_[k]
  [ 6] zfs_read?[zfs]_[k]
  [ 7] zpl_iter_read?[zfs]_[k]
  [ 8] new_sync_read_[k]
  [ 9] vfs_read_[k]
  [10] __x64_sys_pread64_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] __libc_pread64
  [14] sun.nio.ch.FileDispatcherImpl.pread0
  [15] sun.nio.ch.FileDispatcherImpl.pread
  [16] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [17] sun.nio.ch.IOUtil.read
  [18] sun.nio.ch.IOUtil.read
  [19] sun.nio.ch.FileChannelImpl.readInternal
  [20] sun.nio.ch.FileChannelImpl.read
  [21] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [22] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [23] jdk.nio.zipfs.ZipFileSystem$Entry.readLocEXTT
  [24] jdk.nio.zipfs.ZipFileSystem$Entry.readExtra
  [25] jdk.nio.zipfs.ZipFileSystem$Entry.readCEN
  [26] jdk.nio.zipfs.ZipFileSystem$Entry.<init>
  [27] jdk.nio.zipfs.ZipFileSystem.getEntry
  [28] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [29] jdk.nio.zipfs.ZipPath.newByteChannel
  [30] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [31] java.nio.file.Files.newByteChannel
  [32] java.nio.file.Files.newByteChannel
  [33] java.nio.file.Files.readAllBytes
  [34] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [35] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [36] cats.effect.IOFiber.$anonfun$8
  [37] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [38] cats.effect.unsafe.WorkerThread.blockOn
  [39] scala.concurrent.package$.blocking
  [40] cats.effect.IOFiber.runLoop
  [41] cats.effect.IOFiber.execR
  [42] cats.effect.IOFiber.run
  [43] cats.effect.unsafe.WorkerThread.run

--- 90269406 ns (0.04%), 9 samples
  [ 0] find_vmap_area_[k]
  [ 1] check_heap_object_[k]
  [ 2] __check_object_size.part.0_[k]
  [ 3] __check_object_size_[k]
  [ 4] zfs_uiomove_iter?[zfs]_[k]
  [ 5] zfs_uiomove?[zfs]_[k]
  [ 6] dmu_read_uio_dnode?[zfs]_[k]
  [ 7] dmu_read_uio_dbuf?[zfs]_[k]
  [ 8] zfs_read?[zfs]_[k]
  [ 9] zpl_iter_read?[zfs]_[k]
  [10] new_sync_read_[k]
  [11] vfs_read_[k]
  [12] __x64_sys_pread64_[k]
  [13] do_syscall_64_[k]
  [14] entry_SYSCALL_64_after_hwframe_[k]
  [15] __libc_pread64
  [16] sun.nio.ch.FileDispatcherImpl.pread0
  [17] sun.nio.ch.FileDispatcherImpl.pread
  [18] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [19] sun.nio.ch.IOUtil.read
  [20] sun.nio.ch.IOUtil.read
  [21] sun.nio.ch.FileChannelImpl.readInternal
  [22] sun.nio.ch.FileChannelImpl.read
  [23] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [24] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [25] jdk.nio.zipfs.ZipFileSystem$Entry.readLocEXTT
  [26] jdk.nio.zipfs.ZipFileSystem$Entry.readExtra
  [27] jdk.nio.zipfs.ZipFileSystem$Entry.readCEN
  [28] jdk.nio.zipfs.ZipFileSystem$Entry.<init>
  [29] jdk.nio.zipfs.ZipFileSystem.getEntry
  [30] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [31] jdk.nio.zipfs.ZipPath.newByteChannel
  [32] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [33] java.nio.file.Files.newByteChannel
  [34] java.nio.file.Files.newByteChannel
  [35] java.nio.file.Files.readAllBytes
  [36] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [37] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [38] cats.effect.IOFiber.$anonfun$8
  [39] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [40] cats.effect.unsafe.WorkerThread.blockOn
  [41] scala.concurrent.package$.blocking
  [42] cats.effect.IOFiber.runLoop
  [43] cats.effect.IOFiber.execR
  [44] cats.effect.IOFiber.run
  [45] cats.effect.unsafe.WorkerThread.run

--- 90264865 ns (0.04%), 9 samples
  [ 0] syscall_enter_from_user_mode_[k]
  [ 1] do_syscall_64_[k]
  [ 2] entry_SYSCALL_64_after_hwframe_[k]
  [ 3] __libc_pread64
  [ 4] sun.nio.ch.FileDispatcherImpl.pread0
  [ 5] sun.nio.ch.FileDispatcherImpl.pread
  [ 6] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [ 7] sun.nio.ch.IOUtil.read
  [ 8] sun.nio.ch.IOUtil.read
  [ 9] sun.nio.ch.FileChannelImpl.readInternal
  [10] sun.nio.ch.FileChannelImpl.read
  [11] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [12] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [13] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.initDataPos
  [14] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [15] jdk.nio.zipfs.ZipFileSystem$2.fill
  [16] java.util.zip.InflaterInputStream.read
  [17] java.io.InputStream.readNBytes
  [18] java.io.InputStream.readAllBytes
  [19] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [20] jdk.nio.zipfs.ZipPath.newByteChannel
  [21] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [22] java.nio.file.Files.newByteChannel
  [23] java.nio.file.Files.newByteChannel
  [24] java.nio.file.Files.readAllBytes
  [25] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [26] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [27] cats.effect.IOFiber.$anonfun$8
  [28] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [29] cats.effect.unsafe.WorkerThread.blockOn
  [30] scala.concurrent.package$.blocking
  [31] cats.effect.IOFiber.runLoop
  [32] cats.effect.IOFiber.execR
  [33] cats.effect.IOFiber.run
  [34] cats.effect.unsafe.WorkerThread.run

--- 90218646 ns (0.04%), 9 samples
  [ 0] inflate
  [ 1] java.util.zip.Inflater.inflateBytesBytes
  [ 2] java.util.zip.Inflater.inflate
  [ 3] java.util.zip.InflaterInputStream.read
  [ 4] java.io.InputStream.readNBytes
  [ 5] java.io.InputStream.readAllBytes
  [ 6] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [ 7] jdk.nio.zipfs.ZipPath.newByteChannel
  [ 8] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [ 9] java.nio.file.Files.newByteChannel
  [10] java.nio.file.Files.newByteChannel
  [11] java.nio.file.Files.readAllBytes
  [12] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [13] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [14] cats.effect.IOFiber.$anonfun$8
  [15] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [16] cats.effect.unsafe.WorkerThread.blockOn
  [17] scala.concurrent.package$.blocking
  [18] cats.effect.IOFiber.runLoop
  [19] cats.effect.IOFiber.execR
  [20] cats.effect.IOFiber.run
  [21] cats.effect.unsafe.WorkerThread.run

--- 90217811 ns (0.04%), 9 samples
  [ 0] __memcpy_avx_unaligned
  [ 1] java.util.zip.Inflater.inflateBytesBytes
  [ 2] java.util.zip.Inflater.inflate
  [ 3] java.util.zip.InflaterInputStream.read
  [ 4] java.io.InputStream.readNBytes
  [ 5] java.io.InputStream.readAllBytes
  [ 6] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [ 7] jdk.nio.zipfs.ZipPath.newByteChannel
  [ 8] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [ 9] java.nio.file.Files.newByteChannel
  [10] java.nio.file.Files.newByteChannel
  [11] java.nio.file.Files.readAllBytes
  [12] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [13] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [14] cats.effect.IOFiber.$anonfun$8
  [15] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [16] cats.effect.unsafe.WorkerThread.blockOn
  [17] scala.concurrent.package$.blocking
  [18] cats.effect.IOFiber.runLoop
  [19] cats.effect.IOFiber.execR
  [20] cats.effect.IOFiber.run
  [21] cats.effect.unsafe.WorkerThread.run

--- 90206077 ns (0.04%), 9 samples
  [ 0] java.io.InputStream.readNBytes
  [ 1] java.io.InputStream.readAllBytes
  [ 2] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [ 3] jdk.nio.zipfs.ZipPath.newByteChannel
  [ 4] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [ 5] java.nio.file.Files.newByteChannel
  [ 6] java.nio.file.Files.newByteChannel
  [ 7] java.nio.file.Files.readAllBytes
  [ 8] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [ 9] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [10] cats.effect.IOFiber.$anonfun$8
  [11] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [12] cats.effect.unsafe.WorkerThread.blockOn
  [13] scala.concurrent.package$.blocking
  [14] cats.effect.IOFiber.runLoop
  [15] cats.effect.IOFiber.execR
  [16] cats.effect.IOFiber.run
  [17] cats.effect.unsafe.WorkerThread.run

--- 82848475 ns (0.04%), 8 samples
  [ 0] _raw_spin_unlock_irqrestore_[k]
  [ 1] hrtimer_start_range_ns_[k]
  [ 2] hrtimer_sleeper_start_expires_[k]
  [ 3] futex_wait_queue_[k]
  [ 4] futex_wait_[k]
  [ 5] do_futex_[k]
  [ 6] __x64_sys_futex_[k]
  [ 7] do_syscall_64_[k]
  [ 8] entry_SYSCALL_64_after_hwframe_[k]
  [ 9] __futex_abstimed_wait_cancelable64
  [10] [unknown]
  [11] jdk.internal.misc.Unsafe.park
  [12] java.util.concurrent.locks.LockSupport.parkNanos
  [13] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos
  [14] java.util.concurrent.ArrayBlockingQueue.poll
  [15] cats.effect.IOPlatform.$anonfun$1
  [16] cats.effect.IOPlatform$$Lambda$144.0x0000000800d999e0.apply
  [17] scala.concurrent.BlockContext$DefaultBlockContext$.blockOn
  [18] scala.concurrent.package$.blocking
  [19] cats.effect.IOPlatform.unsafeRunTimed
  [20] cats.effect.IOPlatform.unsafeRunSync
  [21] com.scalamandra.ZipBench.com$scalamandra$ZipBench$$_$nioReadAllBytes$$anonfun$1
  [22] com.scalamandra.ZipBench$$anon$3.apply
  [23] com.scalamandra.ZipBench$$anon$3.apply
  [24] com.scalamandra.ZipBench.nioReadAllBytes
  [25] com.scalamandra.jmh_generated.ZipBench_nioReadAllBytes_jmhTest.nioReadAllBytes_thrpt_jmhStub
  [26] com.scalamandra.jmh_generated.ZipBench_nioReadAllBytes_jmhTest.nioReadAllBytes_Throughput
  [27] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [28] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [29] java.lang.reflect.Method.invoke
  [30] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [31] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [32] java.util.concurrent.FutureTask.run
  [33] java.util.concurrent.Executors$RunnableAdapter.call
  [34] java.util.concurrent.FutureTask.run
  [35] java.util.concurrent.ThreadPoolExecutor.runWorker
  [36] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [37] java.lang.Thread.run

--- 82655859 ns (0.04%), 8 samples
  [ 0] futex_q_lock_[k]
  [ 1] futex_wait_setup_[k]
  [ 2] futex_wait_[k]
  [ 3] do_futex_[k]
  [ 4] __x64_sys_futex_[k]
  [ 5] do_syscall_64_[k]
  [ 6] entry_SYSCALL_64_after_hwframe_[k]
  [ 7] __futex_abstimed_wait_cancelable64
  [ 8] [unknown]
  [ 9] jdk.internal.misc.Unsafe.park
  [10] java.util.concurrent.locks.LockSupport.parkNanos
  [11] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos
  [12] java.util.concurrent.ArrayBlockingQueue.poll
  [13] cats.effect.IOPlatform.$anonfun$1
  [14] cats.effect.IOPlatform$$Lambda$144.0x0000000800d999e0.apply
  [15] scala.concurrent.BlockContext$DefaultBlockContext$.blockOn
  [16] scala.concurrent.package$.blocking
  [17] cats.effect.IOPlatform.unsafeRunTimed
  [18] cats.effect.IOPlatform.unsafeRunSync
  [19] com.scalamandra.ZipBench.com$scalamandra$ZipBench$$_$nioReadAllBytes$$anonfun$1
  [20] com.scalamandra.ZipBench$$anon$3.apply
  [21] com.scalamandra.ZipBench$$anon$3.apply
  [22] com.scalamandra.ZipBench.nioReadAllBytes
  [23] com.scalamandra.jmh_generated.ZipBench_nioReadAllBytes_jmhTest.nioReadAllBytes_thrpt_jmhStub
  [24] com.scalamandra.jmh_generated.ZipBench_nioReadAllBytes_jmhTest.nioReadAllBytes_Throughput
  [25] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [26] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [27] java.lang.reflect.Method.invoke
  [28] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [29] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [30] java.util.concurrent.FutureTask.run
  [31] java.util.concurrent.Executors$RunnableAdapter.call
  [32] java.util.concurrent.FutureTask.run
  [33] java.util.concurrent.ThreadPoolExecutor.runWorker
  [34] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [35] java.lang.Thread.run

--- 80880679 ns (0.04%), 8 samples
  [ 0] G1ScanHRForRegionClosure::scan_heap_roots(HeapRegion*)
  [ 1] G1RemSet::scan_heap_roots(G1ParScanThreadState*, unsigned int, G1GCPhaseTimes::GCParPhases, G1GCPhaseTimes::GCParPhases, bool)
  [ 2] G1EvacuateRegionsTask::scan_roots(G1ParScanThreadState*, unsigned int)
  [ 3] G1EvacuateRegionsBaseTask::work(unsigned int)
  [ 4] GangWorker::loop()
  [ 5] GangWorker::run()
  [ 6] Thread::call_run()
  [ 7] thread_native_entry(Thread*)
  [ 8] start_thread

--- 80371709 ns (0.04%), 8 samples
  [ 0] _IO_old_init
  [ 1] [unknown]
  [ 2] java.lang.Thread.setNativeName
  [ 3] java.lang.Thread.setName
  [ 4] cats.effect.unsafe.WorkerThread.blockOn
  [ 5] scala.concurrent.package$.blocking
  [ 6] cats.effect.IOFiber.runLoop
  [ 7] cats.effect.IOFiber.execR
  [ 8] cats.effect.IOFiber.run
  [ 9] cats.effect.unsafe.WorkerThread.run

--- 80347944 ns (0.04%), 8 samples
  [ 0] os::vsnprintf(char*, unsigned long, char const*, __va_list_tag*)
  [ 1] os::set_native_thread_name(char const*)
  [ 2] JVM_SetNativeThreadName
  [ 3] java.lang.Thread.setNativeName
  [ 4] java.lang.Thread.setName
  [ 5] cats.effect.unsafe.WorkerThread.blockOn
  [ 6] scala.concurrent.package$.blocking
  [ 7] cats.effect.IOFiber.runLoop
  [ 8] cats.effect.IOFiber.execR
  [ 9] cats.effect.IOFiber.run
  [10] cats.effect.unsafe.WorkerThread.run

--- 80321612 ns (0.04%), 8 samples
  [ 0] cats.effect.unsafe.ScalQueue.poll
  [ 1] cats.effect.unsafe.WorkStealingThreadPool.stealFromOtherWorkerThread
  [ 2] cats.effect.unsafe.WorkerThread.run

--- 80309279 ns (0.04%), 8 samples
  [ 0] mutex_unlock_[k]
  [ 1] dbuf_hold_impl?[zfs]_[k]
  [ 2] dbuf_hold_level?[zfs]_[k]
  [ 3] dbuf_hold?[zfs]_[k]
  [ 4] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 5] dmu_read_uio_dnode?[zfs]_[k]
  [ 6] dmu_read_uio_dbuf?[zfs]_[k]
  [ 7] zfs_read?[zfs]_[k]
  [ 8] zpl_iter_read?[zfs]_[k]
  [ 9] new_sync_read_[k]
  [10] vfs_read_[k]
  [11] __x64_sys_pread64_[k]
  [12] do_syscall_64_[k]
  [13] entry_SYSCALL_64_after_hwframe_[k]
  [14] __libc_pread64
  [15] sun.nio.ch.FileDispatcherImpl.pread0
  [16] sun.nio.ch.FileDispatcherImpl.pread
  [17] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [18] sun.nio.ch.IOUtil.read
  [19] sun.nio.ch.IOUtil.read
  [20] sun.nio.ch.FileChannelImpl.readInternal
  [21] sun.nio.ch.FileChannelImpl.read
  [22] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [23] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [24] jdk.nio.zipfs.ZipFileSystem$Entry.readLocEXTT
  [25] jdk.nio.zipfs.ZipFileSystem$Entry.readExtra
  [26] jdk.nio.zipfs.ZipFileSystem$Entry.readCEN
  [27] jdk.nio.zipfs.ZipFileSystem$Entry.<init>
  [28] jdk.nio.zipfs.ZipFileSystem.getEntry
  [29] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [30] jdk.nio.zipfs.ZipPath.newByteChannel
  [31] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [32] java.nio.file.Files.newByteChannel
  [33] java.nio.file.Files.newByteChannel
  [34] java.nio.file.Files.readAllBytes
  [35] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [36] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [37] cats.effect.IOFiber.$anonfun$8
  [38] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [39] cats.effect.unsafe.WorkerThread.blockOn
  [40] scala.concurrent.package$.blocking
  [41] cats.effect.IOFiber.runLoop
  [42] cats.effect.IOFiber.execR
  [43] cats.effect.IOFiber.run
  [44] cats.effect.unsafe.WorkerThread.run

--- 80304484 ns (0.04%), 8 samples
  [ 0] __fsnotify_parent_[k]
  [ 1] fsnotify_perm.part.0_[k]
  [ 2] security_file_permission_[k]
  [ 3] rw_verify_area_[k]
  [ 4] vfs_read_[k]
  [ 5] __x64_sys_pread64_[k]
  [ 6] do_syscall_64_[k]
  [ 7] entry_SYSCALL_64_after_hwframe_[k]
  [ 8] __libc_pread64
  [ 9] sun.nio.ch.FileDispatcherImpl.pread0
  [10] sun.nio.ch.FileDispatcherImpl.pread
  [11] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [12] sun.nio.ch.IOUtil.read
  [13] sun.nio.ch.IOUtil.read
  [14] sun.nio.ch.FileChannelImpl.readInternal
  [15] sun.nio.ch.FileChannelImpl.read
  [16] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [17] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [18] jdk.nio.zipfs.ZipFileSystem$Entry.readLocEXTT
  [19] jdk.nio.zipfs.ZipFileSystem$Entry.readExtra
  [20] jdk.nio.zipfs.ZipFileSystem$Entry.readCEN
  [21] jdk.nio.zipfs.ZipFileSystem$Entry.<init>
  [22] jdk.nio.zipfs.ZipFileSystem.getEntry
  [23] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [24] jdk.nio.zipfs.ZipPath.newByteChannel
  [25] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [26] java.nio.file.Files.newByteChannel
  [27] java.nio.file.Files.newByteChannel
  [28] java.nio.file.Files.readAllBytes
  [29] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [30] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [31] cats.effect.IOFiber.$anonfun$8
  [32] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [33] cats.effect.unsafe.WorkerThread.blockOn
  [34] scala.concurrent.package$.blocking
  [35] cats.effect.IOFiber.runLoop
  [36] cats.effect.IOFiber.execR
  [37] cats.effect.IOFiber.run
  [38] cats.effect.unsafe.WorkerThread.run

--- 80295450 ns (0.04%), 8 samples
  [ 0] memset_[k]
  [ 1] spl_kmem_cache_alloc?[spl]_[k]
  [ 2] zio_create?[zfs]_[k]
  [ 3] zio_null?[zfs]_[k]
  [ 4] zio_root?[zfs]_[k]
  [ 5] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 6] dmu_read_uio_dnode?[zfs]_[k]
  [ 7] dmu_read_uio_dbuf?[zfs]_[k]
  [ 8] zfs_read?[zfs]_[k]
  [ 9] zpl_iter_read?[zfs]_[k]
  [10] new_sync_read_[k]
  [11] vfs_read_[k]
  [12] __x64_sys_pread64_[k]
  [13] do_syscall_64_[k]
  [14] entry_SYSCALL_64_after_hwframe_[k]
  [15] __libc_pread64
  [16] sun.nio.ch.FileDispatcherImpl.pread0
  [17] sun.nio.ch.FileDispatcherImpl.pread
  [18] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [19] sun.nio.ch.IOUtil.read
  [20] sun.nio.ch.IOUtil.read
  [21] sun.nio.ch.FileChannelImpl.readInternal
  [22] sun.nio.ch.FileChannelImpl.read
  [23] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [24] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [25] jdk.nio.zipfs.ZipFileSystem$Entry.readLocEXTT
  [26] jdk.nio.zipfs.ZipFileSystem$Entry.readExtra
  [27] jdk.nio.zipfs.ZipFileSystem$Entry.readCEN
  [28] jdk.nio.zipfs.ZipFileSystem$Entry.<init>
  [29] jdk.nio.zipfs.ZipFileSystem.getEntry
  [30] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [31] jdk.nio.zipfs.ZipPath.newByteChannel
  [32] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [33] java.nio.file.Files.newByteChannel
  [34] java.nio.file.Files.newByteChannel
  [35] java.nio.file.Files.readAllBytes
  [36] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [37] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [38] cats.effect.IOFiber.$anonfun$8
  [39] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [40] cats.effect.unsafe.WorkerThread.blockOn
  [41] scala.concurrent.package$.blocking
  [42] cats.effect.IOFiber.runLoop
  [43] cats.effect.IOFiber.execR
  [44] cats.effect.IOFiber.run
  [45] cats.effect.unsafe.WorkerThread.run

--- 80278237 ns (0.04%), 8 samples
  [ 0] int UNICODE::utf8_length<signed char>(signed char const*, int)
  [ 1] java_lang_String::as_utf8_string(oopDesc*)
  [ 2] JVM_SetNativeThreadName
  [ 3] java.lang.Thread.setNativeName
  [ 4] java.lang.Thread.setName
  [ 5] cats.effect.unsafe.WorkerThread.blockOn
  [ 6] scala.concurrent.package$.blocking
  [ 7] cats.effect.IOFiber.runLoop
  [ 8] cats.effect.IOFiber.execR
  [ 9] cats.effect.IOFiber.run
  [10] cats.effect.unsafe.WorkerThread.run

--- 80276272 ns (0.04%), 8 samples
  [ 0] __kmalloc_node_[k]
  [ 1] spl_kmem_alloc_impl?[spl]_[k]
  [ 2] spl_kmem_alloc?[spl]_[k]
  [ 3] zfs_rangelock_enter_impl?[zfs]_[k]
  [ 4] zfs_rangelock_enter?[zfs]_[k]
  [ 5] zfs_read?[zfs]_[k]
  [ 6] zpl_iter_read?[zfs]_[k]
  [ 7] new_sync_read_[k]
  [ 8] vfs_read_[k]
  [ 9] __x64_sys_pread64_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] __libc_pread64
  [13] sun.nio.ch.FileDispatcherImpl.pread0
  [14] sun.nio.ch.FileDispatcherImpl.pread
  [15] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [16] sun.nio.ch.IOUtil.read
  [17] sun.nio.ch.IOUtil.read
  [18] sun.nio.ch.FileChannelImpl.readInternal
  [19] sun.nio.ch.FileChannelImpl.read
  [20] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [21] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [22] jdk.nio.zipfs.ZipFileSystem$Entry.readLocEXTT
  [23] jdk.nio.zipfs.ZipFileSystem$Entry.readExtra
  [24] jdk.nio.zipfs.ZipFileSystem$Entry.readCEN
  [25] jdk.nio.zipfs.ZipFileSystem$Entry.<init>
  [26] jdk.nio.zipfs.ZipFileSystem.getEntry
  [27] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [28] jdk.nio.zipfs.ZipPath.newByteChannel
  [29] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [30] java.nio.file.Files.newByteChannel
  [31] java.nio.file.Files.newByteChannel
  [32] java.nio.file.Files.readAllBytes
  [33] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [34] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [35] cats.effect.IOFiber.$anonfun$8
  [36] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [37] cats.effect.unsafe.WorkerThread.blockOn
  [38] scala.concurrent.package$.blocking
  [39] cats.effect.IOFiber.runLoop
  [40] cats.effect.IOFiber.execR
  [41] cats.effect.IOFiber.run
  [42] cats.effect.unsafe.WorkerThread.run

--- 80262911 ns (0.04%), 8 samples
  [ 0] copy_user_generic_string_[k]
  [ 1] zfs_uiomove_iter?[zfs]_[k]
  [ 2] zfs_uiomove?[zfs]_[k]
  [ 3] dmu_read_uio_dnode?[zfs]_[k]
  [ 4] dmu_read_uio_dbuf?[zfs]_[k]
  [ 5] zfs_read?[zfs]_[k]
  [ 6] zpl_iter_read?[zfs]_[k]
  [ 7] new_sync_read_[k]
  [ 8] vfs_read_[k]
  [ 9] __x64_sys_pread64_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] __libc_pread64
  [13] sun.nio.ch.FileDispatcherImpl.pread0
  [14] sun.nio.ch.FileDispatcherImpl.pread
  [15] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [16] sun.nio.ch.IOUtil.read
  [17] sun.nio.ch.IOUtil.read
  [18] sun.nio.ch.FileChannelImpl.readInternal
  [19] sun.nio.ch.FileChannelImpl.read
  [20] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [21] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [22] jdk.nio.zipfs.ZipFileSystem$Entry.readLocEXTT
  [23] jdk.nio.zipfs.ZipFileSystem$Entry.readExtra
  [24] jdk.nio.zipfs.ZipFileSystem$Entry.readCEN
  [25] jdk.nio.zipfs.ZipFileSystem$Entry.<init>
  [26] jdk.nio.zipfs.ZipFileSystem.getEntry
  [27] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [28] jdk.nio.zipfs.ZipPath.newByteChannel
  [29] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [30] java.nio.file.Files.newByteChannel
  [31] java.nio.file.Files.newByteChannel
  [32] java.nio.file.Files.readAllBytes
  [33] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [34] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [35] cats.effect.IOFiber.$anonfun$8
  [36] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [37] cats.effect.unsafe.WorkerThread.blockOn
  [38] scala.concurrent.package$.blocking
  [39] cats.effect.IOFiber.runLoop
  [40] cats.effect.IOFiber.execR
  [41] cats.effect.IOFiber.run
  [42] cats.effect.unsafe.WorkerThread.run

--- 80256374 ns (0.04%), 8 samples
  [ 0] _raw_spin_unlock_irqrestore_[k]
  [ 1] hrtimer_start_range_ns_[k]
  [ 2] hrtimer_sleeper_start_expires_[k]
  [ 3] futex_wait_queue_[k]
  [ 4] futex_wait_[k]
  [ 5] do_futex_[k]
  [ 6] __x64_sys_futex_[k]
  [ 7] do_syscall_64_[k]
  [ 8] entry_SYSCALL_64_after_hwframe_[k]
  [ 9] __futex_abstimed_wait_cancelable64
  [10] [unknown]
  [11] jdk.internal.misc.Unsafe.park
  [12] java.util.concurrent.locks.LockSupport.parkNanos
  [13] java.util.concurrent.LinkedTransferQueue.awaitMatch
  [14] java.util.concurrent.LinkedTransferQueue.xfer
  [15] java.util.concurrent.LinkedTransferQueue.poll
  [16] cats.effect.unsafe.WorkerThread.run

--- 80250946 ns (0.04%), 8 samples
  [ 0] cats.effect.unsafe.LocalQueue.stealInto
  [ 1] cats.effect.unsafe.WorkStealingThreadPool.stealFromOtherWorkerThread
  [ 2] cats.effect.unsafe.WorkerThread.run

--- 80247462 ns (0.04%), 8 samples
  [ 0] __pthread_self
  [ 1] sun.nio.ch.NativeThread.current
  [ 2] sun.nio.ch.NativeThreadSet.add
  [ 3] sun.nio.ch.FileChannelImpl.readInternal
  [ 4] sun.nio.ch.FileChannelImpl.read
  [ 5] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [ 6] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [ 7] jdk.nio.zipfs.ZipFileSystem$Entry.readLocEXTT
  [ 8] jdk.nio.zipfs.ZipFileSystem$Entry.readExtra
  [ 9] jdk.nio.zipfs.ZipFileSystem$Entry.readCEN
  [10] jdk.nio.zipfs.ZipFileSystem$Entry.<init>
  [11] jdk.nio.zipfs.ZipFileSystem.getEntry
  [12] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [13] jdk.nio.zipfs.ZipPath.newByteChannel
  [14] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [15] java.nio.file.Files.newByteChannel
  [16] java.nio.file.Files.newByteChannel
  [17] java.nio.file.Files.readAllBytes
  [18] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [19] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [20] cats.effect.IOFiber.$anonfun$8
  [21] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [22] cats.effect.unsafe.WorkerThread.blockOn
  [23] scala.concurrent.package$.blocking
  [24] cats.effect.IOFiber.runLoop
  [25] cats.effect.IOFiber.execR
  [26] cats.effect.IOFiber.run
  [27] cats.effect.unsafe.WorkerThread.run

--- 80244093 ns (0.04%), 8 samples
  [ 0] __GI__IO_setb
  [ 1] [unknown]
  [ 2] java.lang.Thread.setNativeName
  [ 3] java.lang.Thread.setName
  [ 4] cats.effect.unsafe.WorkerThread.blockOn
  [ 5] scala.concurrent.package$.blocking
  [ 6] cats.effect.IOFiber.runLoop
  [ 7] cats.effect.IOFiber.execR
  [ 8] cats.effect.IOFiber.run
  [ 9] cats.effect.unsafe.WorkerThread.run

--- 80239311 ns (0.04%), 8 samples
  [ 0] cats.effect.unsafe.ScalQueue.poll
  [ 1] cats.effect.unsafe.WorkStealingThreadPool.stealFromOtherWorkerThread
  [ 2] cats.effect.unsafe.WorkerThread.run

--- 80233198 ns (0.04%), 8 samples
  [ 0] JavaThread::is_interrupted(bool)
  [ 1] Parker::park(bool, long)
  [ 2] Unsafe_Park
  [ 3] jdk.internal.misc.Unsafe.park
  [ 4] java.util.concurrent.locks.LockSupport.park
  [ 5] cats.effect.unsafe.WorkerThread.parkLoop$1
  [ 6] cats.effect.unsafe.WorkerThread.run

--- 80224272 ns (0.04%), 8 samples
  [ 0] java.util.zip.Inflater.inflateBytesBytes
  [ 1] java.util.zip.Inflater.inflate
  [ 2] java.util.zip.InflaterInputStream.read
  [ 3] java.io.InputStream.readNBytes
  [ 4] java.io.InputStream.readAllBytes
  [ 5] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [ 6] jdk.nio.zipfs.ZipPath.newByteChannel
  [ 7] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [ 8] java.nio.file.Files.newByteChannel
  [ 9] java.nio.file.Files.newByteChannel
  [10] java.nio.file.Files.readAllBytes
  [11] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [12] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [13] cats.effect.IOFiber.$anonfun$8
  [14] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [15] cats.effect.unsafe.WorkerThread.blockOn
  [16] scala.concurrent.package$.blocking
  [17] cats.effect.IOFiber.runLoop
  [18] cats.effect.IOFiber.execR
  [19] cats.effect.IOFiber.run
  [20] cats.effect.unsafe.WorkerThread.run

--- 80206657 ns (0.04%), 8 samples
  [ 0] java.util.zip.Inflater.inflate
  [ 1] java.util.zip.InflaterInputStream.read
  [ 2] java.io.InputStream.readNBytes
  [ 3] java.io.InputStream.readAllBytes
  [ 4] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [ 5] jdk.nio.zipfs.ZipPath.newByteChannel
  [ 6] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [ 7] java.nio.file.Files.newByteChannel
  [ 8] java.nio.file.Files.newByteChannel
  [ 9] java.nio.file.Files.readAllBytes
  [10] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [11] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [12] cats.effect.IOFiber.$anonfun$8
  [13] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [14] cats.effect.unsafe.WorkerThread.blockOn
  [15] scala.concurrent.package$.blocking
  [16] cats.effect.IOFiber.runLoop
  [17] cats.effect.IOFiber.execR
  [18] cats.effect.IOFiber.run
  [19] cats.effect.unsafe.WorkerThread.run

--- 80197135 ns (0.04%), 8 samples
  [ 0] __libc_pread64
  [ 1] sun.nio.ch.FileDispatcherImpl.pread0
  [ 2] sun.nio.ch.FileDispatcherImpl.pread
  [ 3] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [ 4] sun.nio.ch.IOUtil.read
  [ 5] sun.nio.ch.IOUtil.read
  [ 6] sun.nio.ch.FileChannelImpl.readInternal
  [ 7] sun.nio.ch.FileChannelImpl.read
  [ 8] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [ 9] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [10] jdk.nio.zipfs.ZipFileSystem$2.fill
  [11] java.util.zip.InflaterInputStream.read
  [12] java.io.InputStream.readNBytes
  [13] java.io.InputStream.readAllBytes
  [14] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [15] jdk.nio.zipfs.ZipPath.newByteChannel
  [16] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [17] java.nio.file.Files.newByteChannel
  [18] java.nio.file.Files.newByteChannel
  [19] java.nio.file.Files.readAllBytes
  [20] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [21] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [22] cats.effect.IOFiber.$anonfun$8
  [23] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [24] cats.effect.unsafe.WorkerThread.blockOn
  [25] scala.concurrent.package$.blocking
  [26] cats.effect.IOFiber.runLoop
  [27] cats.effect.IOFiber.execR
  [28] cats.effect.IOFiber.run
  [29] cats.effect.unsafe.WorkerThread.run

--- 80188850 ns (0.04%), 8 samples
  [ 0] __GI___sched_yield
  [ 1] java.lang.Thread.yield
  [ 2] java.util.concurrent.LinkedTransferQueue.awaitMatch
  [ 3] java.util.concurrent.LinkedTransferQueue.xfer
  [ 4] java.util.concurrent.LinkedTransferQueue.poll
  [ 5] cats.effect.unsafe.WorkerThread.run

--- 72587953 ns (0.03%), 7 samples
  [ 0] Parker::park(bool, long)
  [ 1] Unsafe_Park
  [ 2] jdk.internal.misc.Unsafe.park
  [ 3] java.util.concurrent.locks.LockSupport.parkNanos
  [ 4] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos
  [ 5] java.util.concurrent.ArrayBlockingQueue.poll
  [ 6] cats.effect.IOPlatform.$anonfun$1
  [ 7] cats.effect.IOPlatform$$Lambda$144.0x0000000800d999e0.apply
  [ 8] scala.concurrent.BlockContext$DefaultBlockContext$.blockOn
  [ 9] scala.concurrent.package$.blocking
  [10] cats.effect.IOPlatform.unsafeRunTimed
  [11] cats.effect.IOPlatform.unsafeRunSync
  [12] com.scalamandra.ZipBench.com$scalamandra$ZipBench$$_$nioReadAllBytes$$anonfun$1
  [13] com.scalamandra.ZipBench$$anon$3.apply
  [14] com.scalamandra.ZipBench$$anon$3.apply
  [15] com.scalamandra.ZipBench.nioReadAllBytes
  [16] com.scalamandra.jmh_generated.ZipBench_nioReadAllBytes_jmhTest.nioReadAllBytes_thrpt_jmhStub
  [17] com.scalamandra.jmh_generated.ZipBench_nioReadAllBytes_jmhTest.nioReadAllBytes_Throughput
  [18] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [19] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.run

--- 72314770 ns (0.03%), 7 samples
  [ 0] ___pthread_cond_timedwait64
  [ 1] [unknown]
  [ 2] jdk.internal.misc.Unsafe.park
  [ 3] java.util.concurrent.locks.LockSupport.parkNanos
  [ 4] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos
  [ 5] java.util.concurrent.ArrayBlockingQueue.poll
  [ 6] cats.effect.IOPlatform.$anonfun$1
  [ 7] cats.effect.IOPlatform$$Lambda$144.0x0000000800d999e0.apply
  [ 8] scala.concurrent.BlockContext$DefaultBlockContext$.blockOn
  [ 9] scala.concurrent.package$.blocking
  [10] cats.effect.IOPlatform.unsafeRunTimed
  [11] cats.effect.IOPlatform.unsafeRunSync
  [12] com.scalamandra.ZipBench.com$scalamandra$ZipBench$$_$nioReadAllBytes$$anonfun$1
  [13] com.scalamandra.ZipBench$$anon$3.apply
  [14] com.scalamandra.ZipBench$$anon$3.apply
  [15] com.scalamandra.ZipBench.nioReadAllBytes
  [16] com.scalamandra.jmh_generated.ZipBench_nioReadAllBytes_jmhTest.nioReadAllBytes_thrpt_jmhStub
  [17] com.scalamandra.jmh_generated.ZipBench_nioReadAllBytes_jmhTest.nioReadAllBytes_Throughput
  [18] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [19] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.run

--- 72283597 ns (0.03%), 7 samples
  [ 0] Unsafe_Park
  [ 1] jdk.internal.misc.Unsafe.park
  [ 2] java.util.concurrent.locks.LockSupport.parkNanos
  [ 3] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos
  [ 4] java.util.concurrent.ArrayBlockingQueue.poll
  [ 5] cats.effect.IOPlatform.$anonfun$1
  [ 6] cats.effect.IOPlatform$$Lambda$144.0x0000000800d999e0.apply
  [ 7] scala.concurrent.BlockContext$DefaultBlockContext$.blockOn
  [ 8] scala.concurrent.package$.blocking
  [ 9] cats.effect.IOPlatform.unsafeRunTimed
  [10] cats.effect.IOPlatform.unsafeRunSync
  [11] com.scalamandra.ZipBench.com$scalamandra$ZipBench$$_$nioReadAllBytes$$anonfun$1
  [12] com.scalamandra.ZipBench$$anon$3.apply
  [13] com.scalamandra.ZipBench$$anon$3.apply
  [14] com.scalamandra.ZipBench.nioReadAllBytes
  [15] com.scalamandra.jmh_generated.ZipBench_nioReadAllBytes_jmhTest.nioReadAllBytes_thrpt_jmhStub
  [16] com.scalamandra.jmh_generated.ZipBench_nioReadAllBytes_jmhTest.nioReadAllBytes_Throughput
  [17] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [18] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [19] java.lang.reflect.Method.invoke
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.Executors$RunnableAdapter.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.run

--- 72275496 ns (0.03%), 7 samples
  [ 0] [vdso]
  [ 1] clock_gettime@@GLIBC_2.17
  [ 2] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos
  [ 3] java.util.concurrent.ArrayBlockingQueue.poll
  [ 4] cats.effect.IOPlatform.$anonfun$1
  [ 5] cats.effect.IOPlatform$$Lambda$144.0x0000000800d999e0.apply
  [ 6] scala.concurrent.BlockContext$DefaultBlockContext$.blockOn
  [ 7] scala.concurrent.package$.blocking
  [ 8] cats.effect.IOPlatform.unsafeRunTimed
  [ 9] cats.effect.IOPlatform.unsafeRunSync
  [10] com.scalamandra.ZipBench.com$scalamandra$ZipBench$$_$nioReadAllBytes$$anonfun$1
  [11] com.scalamandra.ZipBench$$anon$3.apply
  [12] com.scalamandra.ZipBench$$anon$3.apply
  [13] com.scalamandra.ZipBench.nioReadAllBytes
  [14] com.scalamandra.jmh_generated.ZipBench_nioReadAllBytes_jmhTest.nioReadAllBytes_thrpt_jmhStub
  [15] com.scalamandra.jmh_generated.ZipBench_nioReadAllBytes_jmhTest.nioReadAllBytes_Throughput
  [16] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [17] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [18] java.lang.reflect.Method.invoke
  [19] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] java.util.concurrent.FutureTask.run
  [22] java.util.concurrent.Executors$RunnableAdapter.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.ThreadPoolExecutor.runWorker
  [25] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [26] java.lang.Thread.run

--- 70357898 ns (0.03%), 7 samples
  [ 0] check_stack_object_[k]
  [ 1] __check_object_size.part.0_[k]
  [ 2] __check_object_size_[k]
  [ 3] strncpy_from_user_[k]
  [ 4] __do_sys_prctl_[k]
  [ 5] __x64_sys_prctl_[k]
  [ 6] do_syscall_64_[k]
  [ 7] entry_SYSCALL_64_after_hwframe_[k]
  [ 8] __GI___prctl
  [ 9] [unknown]
  [10] java.lang.Thread.setNativeName
  [11] java.lang.Thread.setName
  [12] cats.effect.unsafe.WorkerThread.blockOn
  [13] scala.concurrent.package$.blocking
  [14] cats.effect.IOFiber.runLoop
  [15] cats.effect.IOFiber.execR
  [16] cats.effect.IOFiber.run
  [17] cats.effect.unsafe.WorkerThread.run

--- 70324258 ns (0.03%), 7 samples
  [ 0] _IO_default_xsputn
  [ 1] [unknown]
  [ 2] java.lang.Thread.setNativeName
  [ 3] java.lang.Thread.setName
  [ 4] cats.effect.unsafe.WorkerThread.blockOn
  [ 5] scala.concurrent.package$.blocking
  [ 6] cats.effect.IOFiber.runLoop
  [ 7] cats.effect.IOFiber.execR
  [ 8] cats.effect.IOFiber.run
  [ 9] cats.effect.unsafe.WorkerThread.run

--- 70276529 ns (0.03%), 7 samples
  [ 0] ___pthread_cond_wait
  [ 1] Unsafe_Park
  [ 2] jdk.internal.misc.Unsafe.park
  [ 3] java.util.concurrent.locks.LockSupport.park
  [ 4] cats.effect.unsafe.WorkerThread.parkLoop$1
  [ 5] cats.effect.unsafe.WorkerThread.run

--- 70270955 ns (0.03%), 7 samples
  [ 0] java_lang_String::as_utf8_string(oopDesc*)
  [ 1] JVM_SetNativeThreadName
  [ 2] java.lang.Thread.setNativeName
  [ 3] java.lang.Thread.setName
  [ 4] cats.effect.unsafe.WorkerThread.blockOn
  [ 5] scala.concurrent.package$.blocking
  [ 6] cats.effect.IOFiber.runLoop
  [ 7] cats.effect.IOFiber.execR
  [ 8] cats.effect.IOFiber.run
  [ 9] cats.effect.unsafe.WorkerThread.run

--- 70259956 ns (0.03%), 7 samples
  [ 0] mutex_lock_[k]
  [ 1] arc_buf_access?[zfs]_[k]
  [ 2] dbuf_hold_impl?[zfs]_[k]
  [ 3] dbuf_hold_level?[zfs]_[k]
  [ 4] dbuf_hold?[zfs]_[k]
  [ 5] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 6] dmu_read_uio_dnode?[zfs]_[k]
  [ 7] dmu_read_uio_dbuf?[zfs]_[k]
  [ 8] zfs_read?[zfs]_[k]
  [ 9] zpl_iter_read?[zfs]_[k]
  [10] new_sync_read_[k]
  [11] vfs_read_[k]
  [12] __x64_sys_pread64_[k]
  [13] do_syscall_64_[k]
  [14] entry_SYSCALL_64_after_hwframe_[k]
  [15] __libc_pread64
  [16] sun.nio.ch.FileDispatcherImpl.pread0
  [17] sun.nio.ch.FileDispatcherImpl.pread
  [18] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [19] sun.nio.ch.IOUtil.read
  [20] sun.nio.ch.IOUtil.read
  [21] sun.nio.ch.FileChannelImpl.readInternal
  [22] sun.nio.ch.FileChannelImpl.read
  [23] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [24] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [25] jdk.nio.zipfs.ZipFileSystem$Entry.readLocEXTT
  [26] jdk.nio.zipfs.ZipFileSystem$Entry.readExtra
  [27] jdk.nio.zipfs.ZipFileSystem$Entry.readCEN
  [28] jdk.nio.zipfs.ZipFileSystem$Entry.<init>
  [29] jdk.nio.zipfs.ZipFileSystem.getEntry
  [30] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [31] jdk.nio.zipfs.ZipPath.newByteChannel
  [32] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [33] java.nio.file.Files.newByteChannel
  [34] java.nio.file.Files.newByteChannel
  [35] java.nio.file.Files.readAllBytes
  [36] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [37] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [38] cats.effect.IOFiber.$anonfun$8
  [39] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [40] cats.effect.unsafe.WorkerThread.blockOn
  [41] scala.concurrent.package$.blocking
  [42] cats.effect.IOFiber.runLoop
  [43] cats.effect.IOFiber.execR
  [44] cats.effect.IOFiber.run
  [45] cats.effect.unsafe.WorkerThread.run

--- 70259200 ns (0.03%), 7 samples
  [ 0] _IO_str_init_static_internal
  [ 1] [unknown]
  [ 2] java.lang.Thread.setNativeName
  [ 3] java.lang.Thread.setName
  [ 4] cats.effect.unsafe.WorkerThread.blockOn
  [ 5] scala.concurrent.package$.blocking
  [ 6] cats.effect.IOFiber.runLoop
  [ 7] cats.effect.IOFiber.execR
  [ 8] cats.effect.IOFiber.run
  [ 9] cats.effect.unsafe.WorkerThread.run

--- 70253971 ns (0.03%), 7 samples
  [ 0] dbuf_find?[zfs]_[k]
  [ 1] dbuf_hold_impl?[zfs]_[k]
  [ 2] dbuf_hold_level?[zfs]_[k]
  [ 3] dbuf_hold?[zfs]_[k]
  [ 4] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 5] dmu_read_uio_dnode?[zfs]_[k]
  [ 6] dmu_read_uio_dbuf?[zfs]_[k]
  [ 7] zfs_read?[zfs]_[k]
  [ 8] zpl_iter_read?[zfs]_[k]
  [ 9] new_sync_read_[k]
  [10] vfs_read_[k]
  [11] __x64_sys_pread64_[k]
  [12] do_syscall_64_[k]
  [13] entry_SYSCALL_64_after_hwframe_[k]
  [14] __libc_pread64
  [15] sun.nio.ch.FileDispatcherImpl.pread0
  [16] sun.nio.ch.FileDispatcherImpl.pread
  [17] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [18] sun.nio.ch.IOUtil.read
  [19] sun.nio.ch.IOUtil.read
  [20] sun.nio.ch.FileChannelImpl.readInternal
  [21] sun.nio.ch.FileChannelImpl.read
  [22] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [23] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [24] jdk.nio.zipfs.ZipFileSystem$Entry.readLocEXTT
  [25] jdk.nio.zipfs.ZipFileSystem$Entry.readExtra
  [26] jdk.nio.zipfs.ZipFileSystem$Entry.readCEN
  [27] jdk.nio.zipfs.ZipFileSystem$Entry.<init>
  [28] jdk.nio.zipfs.ZipFileSystem.getEntry
  [29] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [30] jdk.nio.zipfs.ZipPath.newByteChannel
  [31] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [32] java.nio.file.Files.newByteChannel
  [33] java.nio.file.Files.newByteChannel
  [34] java.nio.file.Files.readAllBytes
  [35] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [36] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [37] cats.effect.IOFiber.$anonfun$8
  [38] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [39] cats.effect.unsafe.WorkerThread.blockOn
  [40] scala.concurrent.package$.blocking
  [41] cats.effect.IOFiber.runLoop
  [42] cats.effect.IOFiber.execR
  [43] cats.effect.IOFiber.run
  [44] cats.effect.unsafe.WorkerThread.run

--- 70242406 ns (0.03%), 7 samples
  [ 0] dbuf_rele_and_unlock?[zfs]_[k]
  [ 1] dbuf_rele?[zfs]_[k]
  [ 2] dmu_buf_rele_array?[zfs]_[k]
  [ 3] dmu_read_uio_dnode?[zfs]_[k]
  [ 4] dmu_read_uio_dbuf?[zfs]_[k]
  [ 5] zfs_read?[zfs]_[k]
  [ 6] zpl_iter_read?[zfs]_[k]
  [ 7] new_sync_read_[k]
  [ 8] vfs_read_[k]
  [ 9] __x64_sys_pread64_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] __libc_pread64
  [13] sun.nio.ch.FileDispatcherImpl.pread0
  [14] sun.nio.ch.FileDispatcherImpl.pread
  [15] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [16] sun.nio.ch.IOUtil.read
  [17] sun.nio.ch.IOUtil.read
  [18] sun.nio.ch.FileChannelImpl.readInternal
  [19] sun.nio.ch.FileChannelImpl.read
  [20] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [21] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [22] jdk.nio.zipfs.ZipFileSystem$Entry.readLocEXTT
  [23] jdk.nio.zipfs.ZipFileSystem$Entry.readExtra
  [24] jdk.nio.zipfs.ZipFileSystem$Entry.readCEN
  [25] jdk.nio.zipfs.ZipFileSystem$Entry.<init>
  [26] jdk.nio.zipfs.ZipFileSystem.getEntry
  [27] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [28] jdk.nio.zipfs.ZipPath.newByteChannel
  [29] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [30] java.nio.file.Files.newByteChannel
  [31] java.nio.file.Files.newByteChannel
  [32] java.nio.file.Files.readAllBytes
  [33] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [34] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [35] cats.effect.IOFiber.$anonfun$8
  [36] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [37] cats.effect.unsafe.WorkerThread.blockOn
  [38] scala.concurrent.package$.blocking
  [39] cats.effect.IOFiber.runLoop
  [40] cats.effect.IOFiber.execR
  [41] cats.effect.IOFiber.run
  [42] cats.effect.unsafe.WorkerThread.run

--- 70241734 ns (0.03%), 7 samples
  [ 0] percpu_counter_add_batch_[k]
  [ 1] wmsum_add?[zfs]_[k]
  [ 2] dbuf_hold_impl?[zfs]_[k]
  [ 3] dbuf_hold_level?[zfs]_[k]
  [ 4] dbuf_hold?[zfs]_[k]
  [ 5] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 6] dmu_read_uio_dnode?[zfs]_[k]
  [ 7] dmu_read_uio_dbuf?[zfs]_[k]
  [ 8] zfs_read?[zfs]_[k]
  [ 9] zpl_iter_read?[zfs]_[k]
  [10] new_sync_read_[k]
  [11] vfs_read_[k]
  [12] __x64_sys_pread64_[k]
  [13] do_syscall_64_[k]
  [14] entry_SYSCALL_64_after_hwframe_[k]
  [15] __libc_pread64
  [16] sun.nio.ch.FileDispatcherImpl.pread0
  [17] sun.nio.ch.FileDispatcherImpl.pread
  [18] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [19] sun.nio.ch.IOUtil.read
  [20] sun.nio.ch.IOUtil.read
  [21] sun.nio.ch.FileChannelImpl.readInternal
  [22] sun.nio.ch.FileChannelImpl.read
  [23] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [24] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [25] jdk.nio.zipfs.ZipFileSystem$Entry.readLocEXTT
  [26] jdk.nio.zipfs.ZipFileSystem$Entry.readExtra
  [27] jdk.nio.zipfs.ZipFileSystem$Entry.readCEN
  [28] jdk.nio.zipfs.ZipFileSystem$Entry.<init>
  [29] jdk.nio.zipfs.ZipFileSystem.getEntry
  [30] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [31] jdk.nio.zipfs.ZipPath.newByteChannel
  [32] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [33] java.nio.file.Files.newByteChannel
  [34] java.nio.file.Files.newByteChannel
  [35] java.nio.file.Files.readAllBytes
  [36] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [37] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [38] cats.effect.IOFiber.$anonfun$8
  [39] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [40] cats.effect.unsafe.WorkerThread.blockOn
  [41] scala.concurrent.package$.blocking
  [42] cats.effect.IOFiber.runLoop
  [43] cats.effect.IOFiber.execR
  [44] cats.effect.IOFiber.run
  [45] cats.effect.unsafe.WorkerThread.run

--- 70240028 ns (0.03%), 7 samples
  [ 0] __do_sys_prctl_[k]
  [ 1] __x64_sys_prctl_[k]
  [ 2] do_syscall_64_[k]
  [ 3] entry_SYSCALL_64_after_hwframe_[k]
  [ 4] __GI___prctl
  [ 5] [unknown]
  [ 6] java.lang.Thread.setNativeName
  [ 7] java.lang.Thread.setName
  [ 8] cats.effect.unsafe.WorkerThread.blockOn
  [ 9] scala.concurrent.package$.blocking
  [10] cats.effect.IOFiber.runLoop
  [11] cats.effect.IOFiber.execR
  [12] cats.effect.IOFiber.run
  [13] cats.effect.unsafe.WorkerThread.run

--- 70227963 ns (0.03%), 7 samples
  [ 0] vfs_read_[k]
  [ 1] __x64_sys_pread64_[k]
  [ 2] do_syscall_64_[k]
  [ 3] entry_SYSCALL_64_after_hwframe_[k]
  [ 4] __libc_pread64
  [ 5] sun.nio.ch.FileDispatcherImpl.pread0
  [ 6] sun.nio.ch.FileDispatcherImpl.pread
  [ 7] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [ 8] sun.nio.ch.IOUtil.read
  [ 9] sun.nio.ch.IOUtil.read
  [10] sun.nio.ch.FileChannelImpl.readInternal
  [11] sun.nio.ch.FileChannelImpl.read
  [12] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [13] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [14] jdk.nio.zipfs.ZipFileSystem$Entry.readLocEXTT
  [15] jdk.nio.zipfs.ZipFileSystem$Entry.readExtra
  [16] jdk.nio.zipfs.ZipFileSystem$Entry.readCEN
  [17] jdk.nio.zipfs.ZipFileSystem$Entry.<init>
  [18] jdk.nio.zipfs.ZipFileSystem.getEntry
  [19] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [20] jdk.nio.zipfs.ZipPath.newByteChannel
  [21] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [22] java.nio.file.Files.newByteChannel
  [23] java.nio.file.Files.newByteChannel
  [24] java.nio.file.Files.readAllBytes
  [25] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [26] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [27] cats.effect.IOFiber.$anonfun$8
  [28] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [29] cats.effect.unsafe.WorkerThread.blockOn
  [30] scala.concurrent.package$.blocking
  [31] cats.effect.IOFiber.runLoop
  [32] cats.effect.IOFiber.execR
  [33] cats.effect.IOFiber.run
  [34] cats.effect.unsafe.WorkerThread.run

--- 70221835 ns (0.03%), 7 samples
  [ 0] syscall_enter_from_user_mode_[k]
  [ 1] do_syscall_64_[k]
  [ 2] entry_SYSCALL_64_after_hwframe_[k]
  [ 3] __GI___sched_yield
  [ 4] java.lang.Thread.yield
  [ 5] java.util.concurrent.LinkedTransferQueue.awaitMatch
  [ 6] java.util.concurrent.LinkedTransferQueue.xfer
  [ 7] java.util.concurrent.LinkedTransferQueue.poll
  [ 8] cats.effect.unsafe.WorkerThread.run

--- 70221108 ns (0.03%), 7 samples
  [ 0] __vsnprintf
  [ 1] os::snprintf(char*, unsigned long, char const*, ...)
  [ 2] os::set_native_thread_name(char const*)
  [ 3] JVM_SetNativeThreadName
  [ 4] java.lang.Thread.setNativeName
  [ 5] java.lang.Thread.setName
  [ 6] cats.effect.unsafe.WorkerThread.blockOn
  [ 7] scala.concurrent.package$.blocking
  [ 8] cats.effect.IOFiber.runLoop
  [ 9] cats.effect.IOFiber.execR
  [10] cats.effect.IOFiber.run
  [11] cats.effect.unsafe.WorkerThread.run

--- 70213731 ns (0.03%), 7 samples
  [ 0] percpu_counter_add_batch_[k]
  [ 1] wmsum_add?[zfs]_[k]
  [ 2] arc_access?[zfs]_[k]
  [ 3] arc_buf_access?[zfs]_[k]
  [ 4] dbuf_hold_impl?[zfs]_[k]
  [ 5] dbuf_hold_level?[zfs]_[k]
  [ 6] dbuf_hold?[zfs]_[k]
  [ 7] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 8] dmu_read_uio_dnode?[zfs]_[k]
  [ 9] dmu_read_uio_dbuf?[zfs]_[k]
  [10] zfs_read?[zfs]_[k]
  [11] zpl_iter_read?[zfs]_[k]
  [12] new_sync_read_[k]
  [13] vfs_read_[k]
  [14] __x64_sys_pread64_[k]
  [15] do_syscall_64_[k]
  [16] entry_SYSCALL_64_after_hwframe_[k]
  [17] __libc_pread64
  [18] sun.nio.ch.FileDispatcherImpl.pread0
  [19] sun.nio.ch.FileDispatcherImpl.pread
  [20] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [21] sun.nio.ch.IOUtil.read
  [22] sun.nio.ch.IOUtil.read
  [23] sun.nio.ch.FileChannelImpl.readInternal
  [24] sun.nio.ch.FileChannelImpl.read
  [25] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [26] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [27] jdk.nio.zipfs.ZipFileSystem$Entry.readLocEXTT
  [28] jdk.nio.zipfs.ZipFileSystem$Entry.readExtra
  [29] jdk.nio.zipfs.ZipFileSystem$Entry.readCEN
  [30] jdk.nio.zipfs.ZipFileSystem$Entry.<init>
  [31] jdk.nio.zipfs.ZipFileSystem.getEntry
  [32] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [33] jdk.nio.zipfs.ZipPath.newByteChannel
  [34] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [35] java.nio.file.Files.newByteChannel
  [36] java.nio.file.Files.newByteChannel
  [37] java.nio.file.Files.readAllBytes
  [38] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [39] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [40] cats.effect.IOFiber.$anonfun$8
  [41] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [42] cats.effect.unsafe.WorkerThread.blockOn
  [43] scala.concurrent.package$.blocking
  [44] cats.effect.IOFiber.runLoop
  [45] cats.effect.IOFiber.execR
  [46] cats.effect.IOFiber.run
  [47] cats.effect.unsafe.WorkerThread.run

--- 70200058 ns (0.03%), 7 samples
  [ 0] __get_user_nocheck_4_[k]
  [ 1] futex_wait_setup_[k]
  [ 2] futex_wait_[k]
  [ 3] do_futex_[k]
  [ 4] __x64_sys_futex_[k]
  [ 5] do_syscall_64_[k]
  [ 6] entry_SYSCALL_64_after_hwframe_[k]
  [ 7] __futex_abstimed_wait_cancelable64
  [ 8] [unknown]
  [ 9] jdk.internal.misc.Unsafe.park
  [10] java.util.concurrent.locks.LockSupport.parkNanos
  [11] java.util.concurrent.LinkedTransferQueue.awaitMatch
  [12] java.util.concurrent.LinkedTransferQueue.xfer
  [13] java.util.concurrent.LinkedTransferQueue.poll
  [14] cats.effect.unsafe.WorkerThread.run

--- 70199992 ns (0.03%), 7 samples
  [ 0] zfs_read?[zfs]_[k]
  [ 1] zpl_iter_read?[zfs]_[k]
  [ 2] new_sync_read_[k]
  [ 3] vfs_read_[k]
  [ 4] __x64_sys_pread64_[k]
  [ 5] do_syscall_64_[k]
  [ 6] entry_SYSCALL_64_after_hwframe_[k]
  [ 7] __libc_pread64
  [ 8] sun.nio.ch.FileDispatcherImpl.pread0
  [ 9] sun.nio.ch.FileDispatcherImpl.pread
  [10] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [11] sun.nio.ch.IOUtil.read
  [12] sun.nio.ch.IOUtil.read
  [13] sun.nio.ch.FileChannelImpl.readInternal
  [14] sun.nio.ch.FileChannelImpl.read
  [15] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [16] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [17] jdk.nio.zipfs.ZipFileSystem$Entry.readLocEXTT
  [18] jdk.nio.zipfs.ZipFileSystem$Entry.readExtra
  [19] jdk.nio.zipfs.ZipFileSystem$Entry.readCEN
  [20] jdk.nio.zipfs.ZipFileSystem$Entry.<init>
  [21] jdk.nio.zipfs.ZipFileSystem.getEntry
  [22] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [23] jdk.nio.zipfs.ZipPath.newByteChannel
  [24] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [25] java.nio.file.Files.newByteChannel
  [26] java.nio.file.Files.newByteChannel
  [27] java.nio.file.Files.readAllBytes
  [28] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [29] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [30] cats.effect.IOFiber.$anonfun$8
  [31] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [32] cats.effect.unsafe.WorkerThread.blockOn
  [33] scala.concurrent.package$.blocking
  [34] cats.effect.IOFiber.runLoop
  [35] cats.effect.IOFiber.execR
  [36] cats.effect.IOFiber.run
  [37] cats.effect.unsafe.WorkerThread.run

--- 70180805 ns (0.03%), 7 samples
  [ 0] syscall_enter_from_user_mode_[k]
  [ 1] do_syscall_64_[k]
  [ 2] entry_SYSCALL_64_after_hwframe_[k]
  [ 3] __libc_pread64
  [ 4] sun.nio.ch.FileDispatcherImpl.pread0
  [ 5] sun.nio.ch.FileDispatcherImpl.pread
  [ 6] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [ 7] sun.nio.ch.IOUtil.read
  [ 8] sun.nio.ch.IOUtil.read
  [ 9] sun.nio.ch.FileChannelImpl.readInternal
  [10] sun.nio.ch.FileChannelImpl.read
  [11] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [12] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [13] jdk.nio.zipfs.ZipFileSystem$2.fill
  [14] java.util.zip.InflaterInputStream.read
  [15] java.io.InputStream.readNBytes
  [16] java.io.InputStream.readAllBytes
  [17] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [18] jdk.nio.zipfs.ZipPath.newByteChannel
  [19] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [20] java.nio.file.Files.newByteChannel
  [21] java.nio.file.Files.newByteChannel
  [22] java.nio.file.Files.readAllBytes
  [23] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [24] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [25] cats.effect.IOFiber.$anonfun$8
  [26] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [27] cats.effect.unsafe.WorkerThread.blockOn
  [28] scala.concurrent.package$.blocking
  [29] cats.effect.IOFiber.runLoop
  [30] cats.effect.IOFiber.execR
  [31] cats.effect.IOFiber.run
  [32] cats.effect.unsafe.WorkerThread.run

--- 62951718 ns (0.03%), 6 samples
  [ 0] java.lang.ThreadLocal$ThreadLocalMap.getEntry
  [ 1] java.lang.ThreadLocal.get
  [ 2] scala.concurrent.BlockContext$.current
  [ 3] scala.concurrent.package$.blocking
  [ 4] cats.effect.IOPlatform.unsafeRunTimed
  [ 5] cats.effect.IOPlatform.unsafeRunSync
  [ 6] com.scalamandra.ZipBench.com$scalamandra$ZipBench$$_$nioReadAllBytes$$anonfun$1
  [ 7] com.scalamandra.ZipBench$$anon$3.apply
  [ 8] com.scalamandra.ZipBench$$anon$3.apply
  [ 9] com.scalamandra.ZipBench.nioReadAllBytes
  [10] com.scalamandra.jmh_generated.ZipBench_nioReadAllBytes_jmhTest.nioReadAllBytes_thrpt_jmhStub
  [11] com.scalamandra.jmh_generated.ZipBench_nioReadAllBytes_jmhTest.nioReadAllBytes_Throughput
  [12] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [13] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [14] java.lang.reflect.Method.invoke
  [15] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [16] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [17] java.util.concurrent.FutureTask.run
  [18] java.util.concurrent.Executors$RunnableAdapter.call
  [19] java.util.concurrent.FutureTask.run
  [20] java.util.concurrent.ThreadPoolExecutor.runWorker
  [21] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [22] java.lang.Thread.run

--- 61997017 ns (0.03%), 6 samples
  [ 0] AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<544868ul, G1BarrierSet>, (AccessInternal::BarrierType)2, 544868ul>::oop_access_barrier(void*)
  [ 1] Parker::park(bool, long)
  [ 2] Unsafe_Park
  [ 3] jdk.internal.misc.Unsafe.park
  [ 4] java.util.concurrent.locks.LockSupport.parkNanos
  [ 5] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos
  [ 6] java.util.concurrent.ArrayBlockingQueue.poll
  [ 7] cats.effect.IOPlatform.$anonfun$1
  [ 8] cats.effect.IOPlatform$$Lambda$144.0x0000000800d999e0.apply
  [ 9] scala.concurrent.BlockContext$DefaultBlockContext$.blockOn
  [10] scala.concurrent.package$.blocking
  [11] cats.effect.IOPlatform.unsafeRunTimed
  [12] cats.effect.IOPlatform.unsafeRunSync
  [13] com.scalamandra.ZipBench.com$scalamandra$ZipBench$$_$nioReadAllBytes$$anonfun$1
  [14] com.scalamandra.ZipBench$$anon$3.apply
  [15] com.scalamandra.ZipBench$$anon$3.apply
  [16] com.scalamandra.ZipBench.nioReadAllBytes
  [17] com.scalamandra.jmh_generated.ZipBench_nioReadAllBytes_jmhTest.nioReadAllBytes_thrpt_jmhStub
  [18] com.scalamandra.jmh_generated.ZipBench_nioReadAllBytes_jmhTest.nioReadAllBytes_Throughput
  [19] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [20] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [21] java.lang.reflect.Method.invoke
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.Executors$RunnableAdapter.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.ThreadPoolExecutor.runWorker
  [28] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [29] java.lang.Thread.run

--- 61919180 ns (0.03%), 6 samples
  [ 0] [vdso]
  [ 1] clock_gettime@@GLIBC_2.17
  [ 2] Unsafe_Park
  [ 3] jdk.internal.misc.Unsafe.park
  [ 4] java.util.concurrent.locks.LockSupport.parkNanos
  [ 5] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos
  [ 6] java.util.concurrent.ArrayBlockingQueue.poll
  [ 7] cats.effect.IOPlatform.$anonfun$1
  [ 8] cats.effect.IOPlatform$$Lambda$144.0x0000000800d999e0.apply
  [ 9] scala.concurrent.BlockContext$DefaultBlockContext$.blockOn
  [10] scala.concurrent.package$.blocking
  [11] cats.effect.IOPlatform.unsafeRunTimed
  [12] cats.effect.IOPlatform.unsafeRunSync
  [13] com.scalamandra.ZipBench.com$scalamandra$ZipBench$$_$nioReadAllBytes$$anonfun$1
  [14] com.scalamandra.ZipBench$$anon$3.apply
  [15] com.scalamandra.ZipBench$$anon$3.apply
  [16] com.scalamandra.ZipBench.nioReadAllBytes
  [17] com.scalamandra.jmh_generated.ZipBench_nioReadAllBytes_jmhTest.nioReadAllBytes_thrpt_jmhStub
  [18] com.scalamandra.jmh_generated.ZipBench_nioReadAllBytes_jmhTest.nioReadAllBytes_Throughput
  [19] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [20] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [21] java.lang.reflect.Method.invoke
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.Executors$RunnableAdapter.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.ThreadPoolExecutor.runWorker
  [28] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [29] java.lang.Thread.run

--- 60672023 ns (0.03%), 6 samples
  [ 0] nmethod::fix_oop_relocations(unsigned char*, unsigned char*, bool)
  [ 1] nmethod::oops_do_process_weak(nmethod::OopsDoProcessor*)
  [ 2] G1CodeBlobClosure::do_code_blob(CodeBlob*)
  [ 3] JavaThread::oops_do_frames(OopClosure*, CodeBlobClosure*) [clone .part.0]
  [ 4] Threads::possibly_parallel_oops_do(bool, OopClosure*, CodeBlobClosure*)
  [ 5] G1RootProcessor::process_java_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int)
  [ 6] G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int)
  [ 7] G1EvacuateRegionsTask::scan_roots(G1ParScanThreadState*, unsigned int)
  [ 8] G1EvacuateRegionsBaseTask::work(unsigned int)
  [ 9] GangWorker::loop()
  [10] GangWorker::run()
  [11] Thread::call_run()
  [12] thread_native_entry(Thread*)
  [13] start_thread

--- 60303106 ns (0.03%), 6 samples
  [ 0] java_lang_String::as_utf8_string(oopDesc*)
  [ 1] java.lang.Thread.setNativeName
  [ 2] java.lang.Thread.setName
  [ 3] cats.effect.unsafe.WorkerThread.blockOn
  [ 4] scala.concurrent.package$.blocking
  [ 5] cats.effect.IOFiber.runLoop
  [ 6] cats.effect.IOFiber.execR
  [ 7] cats.effect.IOFiber.run
  [ 8] cats.effect.unsafe.WorkerThread.run

--- 60229399 ns (0.03%), 6 samples
  [ 0] ___pthread_mutex_lock
  [ 1] Unsafe_Unpark
  [ 2] jdk.internal.misc.Unsafe.unpark
  [ 3] java.util.concurrent.locks.LockSupport.unpark
  [ 4] java.util.concurrent.LinkedTransferQueue$Node.tryMatch
  [ 5] java.util.concurrent.LinkedTransferQueue.xfer
  [ 6] java.util.concurrent.LinkedTransferQueue.transfer
  [ 7] cats.effect.unsafe.WorkerThread.blockOn
  [ 8] scala.concurrent.package$.blocking
  [ 9] cats.effect.IOFiber.runLoop
  [10] cats.effect.IOFiber.execR
  [11] cats.effect.IOFiber.run
  [12] cats.effect.unsafe.WorkerThread.run

--- 60228058 ns (0.03%), 6 samples
  [ 0] kfree_[k]
  [ 1] spl_kmem_free_impl?[spl]_[k]
  [ 2] spl_kmem_free?[spl]_[k]
  [ 3] zfs_rangelock_free?[zfs]_[k]
  [ 4] zfs_rangelock_exit?[zfs]_[k]
  [ 5] zfs_read?[zfs]_[k]
  [ 6] zpl_iter_read?[zfs]_[k]
  [ 7] new_sync_read_[k]
  [ 8] vfs_read_[k]
  [ 9] __x64_sys_pread64_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] __libc_pread64
  [13] sun.nio.ch.FileDispatcherImpl.pread0
  [14] sun.nio.ch.FileDispatcherImpl.pread
  [15] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [16] sun.nio.ch.IOUtil.read
  [17] sun.nio.ch.IOUtil.read
  [18] sun.nio.ch.FileChannelImpl.readInternal
  [19] sun.nio.ch.FileChannelImpl.read
  [20] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [21] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [22] jdk.nio.zipfs.ZipFileSystem$Entry.readLocEXTT
  [23] jdk.nio.zipfs.ZipFileSystem$Entry.readExtra
  [24] jdk.nio.zipfs.ZipFileSystem$Entry.readCEN
  [25] jdk.nio.zipfs.ZipFileSystem$Entry.<init>
  [26] jdk.nio.zipfs.ZipFileSystem.getEntry
  [27] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [28] jdk.nio.zipfs.ZipPath.newByteChannel
  [29] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [30] java.nio.file.Files.newByteChannel
  [31] java.nio.file.Files.newByteChannel
  [32] java.nio.file.Files.readAllBytes
  [33] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [34] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [35] cats.effect.IOFiber.$anonfun$8
  [36] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [37] cats.effect.unsafe.WorkerThread.blockOn
  [38] scala.concurrent.package$.blocking
  [39] cats.effect.IOFiber.runLoop
  [40] cats.effect.IOFiber.execR
  [41] cats.effect.IOFiber.run
  [42] cats.effect.unsafe.WorkerThread.run

--- 60226536 ns (0.03%), 6 samples
  [ 0] AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<544868ul, G1BarrierSet>, (AccessInternal::BarrierType)2, 544868ul>::oop_access_barrier(void*)
  [ 1] Parker::park(bool, long)
  [ 2] Unsafe_Park
  [ 3] jdk.internal.misc.Unsafe.park
  [ 4] java.util.concurrent.locks.LockSupport.park
  [ 5] cats.effect.unsafe.WorkerThread.parkLoop$1
  [ 6] cats.effect.unsafe.WorkerThread.run

--- 60221091 ns (0.03%), 6 samples
  [ 0] percpu_counter_add_batch_[k]
  [ 1] wmsum_add?[zfs]_[k]
  [ 2] arc_buf_access?[zfs]_[k]
  [ 3] dbuf_hold_impl?[zfs]_[k]
  [ 4] dbuf_hold_level?[zfs]_[k]
  [ 5] dbuf_hold?[zfs]_[k]
  [ 6] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 7] dmu_read_uio_dnode?[zfs]_[k]
  [ 8] dmu_read_uio_dbuf?[zfs]_[k]
  [ 9] zfs_read?[zfs]_[k]
  [10] zpl_iter_read?[zfs]_[k]
  [11] new_sync_read_[k]
  [12] vfs_read_[k]
  [13] __x64_sys_pread64_[k]
  [14] do_syscall_64_[k]
  [15] entry_SYSCALL_64_after_hwframe_[k]
  [16] __libc_pread64
  [17] sun.nio.ch.FileDispatcherImpl.pread0
  [18] sun.nio.ch.FileDispatcherImpl.pread
  [19] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [20] sun.nio.ch.IOUtil.read
  [21] sun.nio.ch.IOUtil.read
  [22] sun.nio.ch.FileChannelImpl.readInternal
  [23] sun.nio.ch.FileChannelImpl.read
  [24] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [25] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [26] jdk.nio.zipfs.ZipFileSystem$Entry.readLocEXTT
  [27] jdk.nio.zipfs.ZipFileSystem$Entry.readExtra
  [28] jdk.nio.zipfs.ZipFileSystem$Entry.readCEN
  [29] jdk.nio.zipfs.ZipFileSystem$Entry.<init>
  [30] jdk.nio.zipfs.ZipFileSystem.getEntry
  [31] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [32] jdk.nio.zipfs.ZipPath.newByteChannel
  [33] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [34] java.nio.file.Files.newByteChannel
  [35] java.nio.file.Files.newByteChannel
  [36] java.nio.file.Files.readAllBytes
  [37] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [38] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [39] cats.effect.IOFiber.$anonfun$8
  [40] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [41] cats.effect.unsafe.WorkerThread.blockOn
  [42] scala.concurrent.package$.blocking
  [43] cats.effect.IOFiber.runLoop
  [44] cats.effect.IOFiber.execR
  [45] cats.effect.IOFiber.run
  [46] cats.effect.unsafe.WorkerThread.run

--- 60218537 ns (0.03%), 6 samples
  [ 0] percpu_counter_add_batch_[k]
  [ 1] wmsum_add?[zfs]_[k]
  [ 2] dataset_kstats_update_read_kstats?[zfs]_[k]
  [ 3] zfs_read?[zfs]_[k]
  [ 4] zpl_iter_read?[zfs]_[k]
  [ 5] new_sync_read_[k]
  [ 6] vfs_read_[k]
  [ 7] __x64_sys_pread64_[k]
  [ 8] do_syscall_64_[k]
  [ 9] entry_SYSCALL_64_after_hwframe_[k]
  [10] __libc_pread64
  [11] sun.nio.ch.FileDispatcherImpl.pread0
  [12] sun.nio.ch.FileDispatcherImpl.pread
  [13] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [14] sun.nio.ch.IOUtil.read
  [15] sun.nio.ch.IOUtil.read
  [16] sun.nio.ch.FileChannelImpl.readInternal
  [17] sun.nio.ch.FileChannelImpl.read
  [18] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [19] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [20] jdk.nio.zipfs.ZipFileSystem$Entry.readLocEXTT
  [21] jdk.nio.zipfs.ZipFileSystem$Entry.readExtra
  [22] jdk.nio.zipfs.ZipFileSystem$Entry.readCEN
  [23] jdk.nio.zipfs.ZipFileSystem$Entry.<init>
  [24] jdk.nio.zipfs.ZipFileSystem.getEntry
  [25] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [26] jdk.nio.zipfs.ZipPath.newByteChannel
  [27] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [28] java.nio.file.Files.newByteChannel
  [29] java.nio.file.Files.newByteChannel
  [30] java.nio.file.Files.readAllBytes
  [31] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [32] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [33] cats.effect.IOFiber.$anonfun$8
  [34] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [35] cats.effect.unsafe.WorkerThread.blockOn
  [36] scala.concurrent.package$.blocking
  [37] cats.effect.IOFiber.runLoop
  [38] cats.effect.IOFiber.execR
  [39] cats.effect.IOFiber.run
  [40] cats.effect.unsafe.WorkerThread.run

--- 60216140 ns (0.03%), 6 samples
  [ 0] ThreadsListHandle::ThreadsListHandle(Thread*)
  [ 1] Unsafe_Unpark
  [ 2] jdk.internal.misc.Unsafe.unpark
  [ 3] java.util.concurrent.locks.LockSupport.unpark
  [ 4] java.util.concurrent.LinkedTransferQueue$Node.tryMatch
  [ 5] java.util.concurrent.LinkedTransferQueue.xfer
  [ 6] java.util.concurrent.LinkedTransferQueue.transfer
  [ 7] cats.effect.unsafe.WorkerThread.blockOn
  [ 8] scala.concurrent.package$.blocking
  [ 9] cats.effect.IOFiber.runLoop
  [10] cats.effect.IOFiber.execR
  [11] cats.effect.IOFiber.run
  [12] cats.effect.unsafe.WorkerThread.run

--- 60215493 ns (0.03%), 6 samples
  [ 0] java.lang.Thread.setNativeName
  [ 1] java.lang.Thread.setName
  [ 2] cats.effect.unsafe.WorkerThread.blockOn
  [ 3] scala.concurrent.package$.blocking
  [ 4] cats.effect.IOFiber.runLoop
  [ 5] cats.effect.IOFiber.execR
  [ 6] cats.effect.IOFiber.run
  [ 7] cats.effect.unsafe.WorkerThread.run

--- 60212987 ns (0.03%), 6 samples
  [ 0] apparmor_file_permission_[k]
  [ 1] security_file_permission_[k]
  [ 2] rw_verify_area_[k]
  [ 3] vfs_read_[k]
  [ 4] __x64_sys_pread64_[k]
  [ 5] do_syscall_64_[k]
  [ 6] entry_SYSCALL_64_after_hwframe_[k]
  [ 7] __libc_pread64
  [ 8] sun.nio.ch.FileDispatcherImpl.pread0
  [ 9] sun.nio.ch.FileDispatcherImpl.pread
  [10] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [11] sun.nio.ch.IOUtil.read
  [12] sun.nio.ch.IOUtil.read
  [13] sun.nio.ch.FileChannelImpl.readInternal
  [14] sun.nio.ch.FileChannelImpl.read
  [15] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [16] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [17] jdk.nio.zipfs.ZipFileSystem$Entry.readLocEXTT
  [18] jdk.nio.zipfs.ZipFileSystem$Entry.readExtra
  [19] jdk.nio.zipfs.ZipFileSystem$Entry.readCEN
  [20] jdk.nio.zipfs.ZipFileSystem$Entry.<init>
  [21] jdk.nio.zipfs.ZipFileSystem.getEntry
  [22] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [23] jdk.nio.zipfs.ZipPath.newByteChannel
  [24] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [25] java.nio.file.Files.newByteChannel
  [26] java.nio.file.Files.newByteChannel
  [27] java.nio.file.Files.readAllBytes
  [28] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [29] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [30] cats.effect.IOFiber.$anonfun$8
  [31] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [32] cats.effect.unsafe.WorkerThread.blockOn
  [33] scala.concurrent.package$.blocking
  [34] cats.effect.IOFiber.runLoop
  [35] cats.effect.IOFiber.execR
  [36] cats.effect.IOFiber.run
  [37] cats.effect.unsafe.WorkerThread.run

--- 60210752 ns (0.03%), 6 samples
  [ 0] zio_wait?[zfs]_[k]
  [ 1] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 2] dmu_read_uio_dnode?[zfs]_[k]
  [ 3] dmu_read_uio_dbuf?[zfs]_[k]
  [ 4] zfs_read?[zfs]_[k]
  [ 5] zpl_iter_read?[zfs]_[k]
  [ 6] new_sync_read_[k]
  [ 7] vfs_read_[k]
  [ 8] __x64_sys_pread64_[k]
  [ 9] do_syscall_64_[k]
  [10] entry_SYSCALL_64_after_hwframe_[k]
  [11] __libc_pread64
  [12] sun.nio.ch.FileDispatcherImpl.pread0
  [13] sun.nio.ch.FileDispatcherImpl.pread
  [14] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [15] sun.nio.ch.IOUtil.read
  [16] sun.nio.ch.IOUtil.read
  [17] sun.nio.ch.FileChannelImpl.readInternal
  [18] sun.nio.ch.FileChannelImpl.read
  [19] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [20] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [21] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.initDataPos
  [22] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [23] jdk.nio.zipfs.ZipFileSystem$2.fill
  [24] java.util.zip.InflaterInputStream.read
  [25] java.io.InputStream.readNBytes
  [26] java.io.InputStream.readAllBytes
  [27] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [28] jdk.nio.zipfs.ZipPath.newByteChannel
  [29] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [30] java.nio.file.Files.newByteChannel
  [31] java.nio.file.Files.newByteChannel
  [32] java.nio.file.Files.readAllBytes
  [33] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [34] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [35] cats.effect.IOFiber.$anonfun$8
  [36] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [37] cats.effect.unsafe.WorkerThread.blockOn
  [38] scala.concurrent.package$.blocking
  [39] cats.effect.IOFiber.runLoop
  [40] cats.effect.IOFiber.execR
  [41] cats.effect.IOFiber.run
  [42] cats.effect.unsafe.WorkerThread.run

--- 60200764 ns (0.03%), 6 samples
  [ 0] fsnotify_perm.part.0_[k]
  [ 1] security_file_permission_[k]
  [ 2] rw_verify_area_[k]
  [ 3] vfs_read_[k]
  [ 4] __x64_sys_pread64_[k]
  [ 5] do_syscall_64_[k]
  [ 6] entry_SYSCALL_64_after_hwframe_[k]
  [ 7] __libc_pread64
  [ 8] sun.nio.ch.FileDispatcherImpl.pread0
  [ 9] sun.nio.ch.FileDispatcherImpl.pread
  [10] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [11] sun.nio.ch.IOUtil.read
  [12] sun.nio.ch.IOUtil.read
  [13] sun.nio.ch.FileChannelImpl.readInternal
  [14] sun.nio.ch.FileChannelImpl.read
  [15] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [16] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [17] jdk.nio.zipfs.ZipFileSystem$Entry.readLocEXTT
  [18] jdk.nio.zipfs.ZipFileSystem$Entry.readExtra
  [19] jdk.nio.zipfs.ZipFileSystem$Entry.readCEN
  [20] jdk.nio.zipfs.ZipFileSystem$Entry.<init>
  [21] jdk.nio.zipfs.ZipFileSystem.getEntry
  [22] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [23] jdk.nio.zipfs.ZipPath.newByteChannel
  [24] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [25] java.nio.file.Files.newByteChannel
  [26] java.nio.file.Files.newByteChannel
  [27] java.nio.file.Files.readAllBytes
  [28] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [29] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [30] cats.effect.IOFiber.$anonfun$8
  [31] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [32] cats.effect.unsafe.WorkerThread.blockOn
  [33] scala.concurrent.package$.blocking
  [34] cats.effect.IOFiber.runLoop
  [35] cats.effect.IOFiber.execR
  [36] cats.effect.IOFiber.run
  [37] cats.effect.unsafe.WorkerThread.run

--- 60197430 ns (0.03%), 6 samples
  [ 0] zio_create?[zfs]_[k]
  [ 1] zio_null?[zfs]_[k]
  [ 2] zio_root?[zfs]_[k]
  [ 3] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 4] dmu_read_uio_dnode?[zfs]_[k]
  [ 5] dmu_read_uio_dbuf?[zfs]_[k]
  [ 6] zfs_read?[zfs]_[k]
  [ 7] zpl_iter_read?[zfs]_[k]
  [ 8] new_sync_read_[k]
  [ 9] vfs_read_[k]
  [10] __x64_sys_pread64_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] __libc_pread64
  [14] sun.nio.ch.FileDispatcherImpl.pread0
  [15] sun.nio.ch.FileDispatcherImpl.pread
  [16] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [17] sun.nio.ch.IOUtil.read
  [18] sun.nio.ch.IOUtil.read
  [19] sun.nio.ch.FileChannelImpl.readInternal
  [20] sun.nio.ch.FileChannelImpl.read
  [21] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [22] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [23] jdk.nio.zipfs.ZipFileSystem$2.fill
  [24] java.util.zip.InflaterInputStream.read
  [25] java.io.InputStream.readNBytes
  [26] java.io.InputStream.readAllBytes
  [27] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [28] jdk.nio.zipfs.ZipPath.newByteChannel
  [29] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [30] java.nio.file.Files.newByteChannel
  [31] java.nio.file.Files.newByteChannel
  [32] java.nio.file.Files.readAllBytes
  [33] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [34] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [35] cats.effect.IOFiber.$anonfun$8
  [36] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [37] cats.effect.unsafe.WorkerThread.blockOn
  [38] scala.concurrent.package$.blocking
  [39] cats.effect.IOFiber.runLoop
  [40] cats.effect.IOFiber.execR
  [41] cats.effect.IOFiber.run
  [42] cats.effect.unsafe.WorkerThread.run

--- 60188862 ns (0.03%), 6 samples
  [ 0] syscall_enter_from_user_mode_[k]
  [ 1] do_syscall_64_[k]
  [ 2] entry_SYSCALL_64_after_hwframe_[k]
  [ 3] __libc_pread64
  [ 4] sun.nio.ch.FileDispatcherImpl.pread0
  [ 5] sun.nio.ch.FileDispatcherImpl.pread
  [ 6] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [ 7] sun.nio.ch.IOUtil.read
  [ 8] sun.nio.ch.IOUtil.read
  [ 9] sun.nio.ch.FileChannelImpl.readInternal
  [10] sun.nio.ch.FileChannelImpl.read
  [11] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [12] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [13] jdk.nio.zipfs.ZipFileSystem$Entry.readLocEXTT
  [14] jdk.nio.zipfs.ZipFileSystem$Entry.readExtra
  [15] jdk.nio.zipfs.ZipFileSystem$Entry.readCEN
  [16] jdk.nio.zipfs.ZipFileSystem$Entry.<init>
  [17] jdk.nio.zipfs.ZipFileSystem.getEntry
  [18] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [19] jdk.nio.zipfs.ZipPath.newByteChannel
  [20] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [21] java.nio.file.Files.newByteChannel
  [22] java.nio.file.Files.newByteChannel
  [23] java.nio.file.Files.readAllBytes
  [24] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [25] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [26] cats.effect.IOFiber.$anonfun$8
  [27] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [28] cats.effect.unsafe.WorkerThread.blockOn
  [29] scala.concurrent.package$.blocking
  [30] cats.effect.IOFiber.runLoop
  [31] cats.effect.IOFiber.execR
  [32] cats.effect.IOFiber.run
  [33] cats.effect.unsafe.WorkerThread.run

--- 60186578 ns (0.03%), 6 samples
  [ 0] syscall_enter_from_user_mode_[k]
  [ 1] do_syscall_64_[k]
  [ 2] entry_SYSCALL_64_after_hwframe_[k]
  [ 3] __futex_abstimed_wait_cancelable64
  [ 4] [unknown]
  [ 5] jdk.internal.misc.Unsafe.park
  [ 6] java.util.concurrent.locks.LockSupport.parkNanos
  [ 7] java.util.concurrent.LinkedTransferQueue.awaitMatch
  [ 8] java.util.concurrent.LinkedTransferQueue.xfer
  [ 9] java.util.concurrent.LinkedTransferQueue.poll
  [10] cats.effect.unsafe.WorkerThread.run

--- 60181398 ns (0.03%), 6 samples
  [ 0] jni_GetPrimitiveArrayCritical
  [ 1] Java_java_util_zip_Inflater_inflateBytesBytes
  [ 2] java.util.zip.Inflater.inflateBytesBytes
  [ 3] java.util.zip.Inflater.inflate
  [ 4] java.util.zip.InflaterInputStream.read
  [ 5] java.io.InputStream.readNBytes
  [ 6] java.io.InputStream.readAllBytes
  [ 7] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [ 8] jdk.nio.zipfs.ZipPath.newByteChannel
  [ 9] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [10] java.nio.file.Files.newByteChannel
  [11] java.nio.file.Files.newByteChannel
  [12] java.nio.file.Files.readAllBytes
  [13] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [14] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [15] cats.effect.IOFiber.$anonfun$8
  [16] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [17] cats.effect.unsafe.WorkerThread.blockOn
  [18] scala.concurrent.package$.blocking
  [19] cats.effect.IOFiber.runLoop
  [20] cats.effect.IOFiber.execR
  [21] cats.effect.IOFiber.run
  [22] cats.effect.unsafe.WorkerThread.run

--- 60170700 ns (0.03%), 6 samples
  [ 0] do_sched_yield_[k]
  [ 1] __x64_sys_sched_yield_[k]
  [ 2] do_syscall_64_[k]
  [ 3] entry_SYSCALL_64_after_hwframe_[k]
  [ 4] __GI___sched_yield
  [ 5] java.lang.Thread.yield
  [ 6] java.util.concurrent.LinkedTransferQueue.awaitMatch
  [ 7] java.util.concurrent.LinkedTransferQueue.xfer
  [ 8] java.util.concurrent.LinkedTransferQueue.poll
  [ 9] cats.effect.unsafe.WorkerThread.run

--- 60157083 ns (0.03%), 6 samples
  [ 0] Unsafe_Unpark
  [ 1] jdk.internal.misc.Unsafe.unpark
  [ 2] java.util.concurrent.locks.LockSupport.unpark
  [ 3] java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext
  [ 4] java.util.concurrent.locks.AbstractQueuedSynchronizer.release
  [ 5] java.util.concurrent.locks.ReentrantLock.unlock
  [ 6] java.util.concurrent.ArrayBlockingQueue.offer
  [ 7] cats.effect.IOPlatform.unsafeRunTimed$$anonfun$1
  [ 8] cats.effect.IOPlatform$$Lambda$137.0x0000000800d9e8b0.applyVoid
  [ 9] scala.runtime.function.JProcedure1.apply
  [10] scala.runtime.function.JProcedure1.apply
  [11] cats.effect.IO.unsafeRunAsync$$anonfun$3
  [12] cats.effect.IO$$Lambda$140.0x0000000800d9f380.applyVoid
  [13] scala.runtime.function.JProcedure1.apply
  [14] scala.runtime.function.JProcedure1.apply
  [15] cats.effect.IO.$anonfun$6$$anonfun$3
  [16] cats.effect.IO$$Lambda$149.0x0000000800da19b0.applyVoid
  [17] scala.runtime.function.JProcedure1.apply
  [18] scala.runtime.function.JProcedure1.apply
  [19] cats.effect.kernel.Outcome.fold
  [20] cats.effect.kernel.Outcome.fold$
  [21] cats.effect.kernel.Outcome$Succeeded.fold
  [22] cats.effect.IO.$anonfun$6
  [23] cats.effect.IO$$Lambda$141.0x0000000800d9a530.applyVoid
  [24] scala.runtime.function.JProcedure1.apply
  [25] scala.runtime.function.JProcedure1.apply
  [26] cats.effect.CallbackStack.apply
  [27] cats.effect.IOFiber.done
  [28] cats.effect.IOFiber.runTerminusSuccessK
  [29] cats.effect.IOFiber.succeeded
  [30] cats.effect.IOFiber.runLoop
  [31] cats.effect.IOFiber.execR
  [32] cats.effect.IOFiber.run
  [33] cats.effect.unsafe.WorkerThread.run

--- 60154190 ns (0.03%), 6 samples
  [ 0] ObjArrayAllocator::initialize(HeapWordImpl**) const
  [ 1] MemAllocator::allocate() const
  [ 2] TypeArrayKlass::allocate_common(int, bool, JavaThread*)
  [ 3] JVMCIRuntime::new_array_common(JavaThread*, Klass*, int, bool)
  [ 4] jdk.nio.zipfs.ZipFileSystem.getInflater
  [ 5] jdk.nio.zipfs.ZipFileSystem.getInputStream
  [ 6] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [ 7] jdk.nio.zipfs.ZipPath.newByteChannel
  [ 8] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [ 9] java.nio.file.Files.newByteChannel
  [10] java.nio.file.Files.newByteChannel
  [11] java.nio.file.Files.readAllBytes
  [12] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [13] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [14] cats.effect.IOFiber.$anonfun$8
  [15] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [16] cats.effect.unsafe.WorkerThread.blockOn
  [17] scala.concurrent.package$.blocking
  [18] cats.effect.IOFiber.runLoop
  [19] cats.effect.IOFiber.execR
  [20] cats.effect.IOFiber.run
  [21] cats.effect.unsafe.WorkerThread.run

--- 60151277 ns (0.03%), 6 samples
  [ 0] checkInflateStatus
  [ 1] java.util.zip.Inflater.inflateBytesBytes
  [ 2] java.util.zip.Inflater.inflate
  [ 3] java.util.zip.InflaterInputStream.read
  [ 4] java.io.InputStream.readNBytes
  [ 5] java.io.InputStream.readAllBytes
  [ 6] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [ 7] jdk.nio.zipfs.ZipPath.newByteChannel
  [ 8] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [ 9] java.nio.file.Files.newByteChannel
  [10] java.nio.file.Files.newByteChannel
  [11] java.nio.file.Files.readAllBytes
  [12] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [13] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [14] cats.effect.IOFiber.$anonfun$8
  [15] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [16] cats.effect.unsafe.WorkerThread.blockOn
  [17] scala.concurrent.package$.blocking
  [18] cats.effect.IOFiber.runLoop
  [19] cats.effect.IOFiber.execR
  [20] cats.effect.IOFiber.run
  [21] cats.effect.unsafe.WorkerThread.run

--- 60132893 ns (0.03%), 6 samples
  [ 0] inflate
  [ 1] java.util.zip.Inflater.inflateBytesBytes
  [ 2] java.util.zip.Inflater.inflate
  [ 3] java.util.zip.InflaterInputStream.read
  [ 4] java.io.InputStream.readNBytes
  [ 5] java.io.InputStream.readAllBytes
  [ 6] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [ 7] jdk.nio.zipfs.ZipPath.newByteChannel
  [ 8] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [ 9] java.nio.file.Files.newByteChannel
  [10] java.nio.file.Files.newByteChannel
  [11] java.nio.file.Files.readAllBytes
  [12] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [13] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [14] cats.effect.IOFiber.$anonfun$8
  [15] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [16] cats.effect.unsafe.WorkerThread.blockOn
  [17] scala.concurrent.package$.blocking
  [18] cats.effect.IOFiber.runLoop
  [19] cats.effect.IOFiber.execR
  [20] cats.effect.IOFiber.run
  [21] cats.effect.unsafe.WorkerThread.run

--- 51786918 ns (0.02%), 5 samples
  [ 0] JavaThread::is_interrupted(bool)
  [ 1] Parker::park(bool, long)
  [ 2] Unsafe_Park
  [ 3] jdk.internal.misc.Unsafe.park
  [ 4] java.util.concurrent.locks.LockSupport.parkNanos
  [ 5] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos
  [ 6] java.util.concurrent.ArrayBlockingQueue.poll
  [ 7] cats.effect.IOPlatform.$anonfun$1
  [ 8] cats.effect.IOPlatform$$Lambda$144.0x0000000800d999e0.apply
  [ 9] scala.concurrent.BlockContext$DefaultBlockContext$.blockOn
  [10] scala.concurrent.package$.blocking
  [11] cats.effect.IOPlatform.unsafeRunTimed
  [12] cats.effect.IOPlatform.unsafeRunSync
  [13] com.scalamandra.ZipBench.com$scalamandra$ZipBench$$_$nioReadAllBytes$$anonfun$1
  [14] com.scalamandra.ZipBench$$anon$3.apply
  [15] com.scalamandra.ZipBench$$anon$3.apply
  [16] com.scalamandra.ZipBench.nioReadAllBytes
  [17] com.scalamandra.jmh_generated.ZipBench_nioReadAllBytes_jmhTest.nioReadAllBytes_thrpt_jmhStub
  [18] com.scalamandra.jmh_generated.ZipBench_nioReadAllBytes_jmhTest.nioReadAllBytes_Throughput
  [19] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [20] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [21] java.lang.reflect.Method.invoke
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.Executors$RunnableAdapter.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.ThreadPoolExecutor.runWorker
  [28] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [29] java.lang.Thread.run

--- 51757289 ns (0.02%), 5 samples
  [ 0] SafeThreadsListPtr::release_stable_list()
  [ 1] Unsafe_Unpark
  [ 2] jdk.internal.misc.Unsafe.unpark
  [ 3] java.util.concurrent.locks.LockSupport.unpark
  [ 4] cats.effect.unsafe.WorkStealingThreadPool.notifyParked
  [ 5] cats.effect.unsafe.WorkStealingThreadPool.scheduleExternal
  [ 6] cats.effect.unsafe.WorkStealingThreadPool.execute
  [ 7] cats.effect.IO.unsafeRunFiber
  [ 8] cats.effect.IO.unsafeRunAsync
  [ 9] cats.effect.IOPlatform.unsafeRunTimed
  [10] cats.effect.IOPlatform.unsafeRunSync
  [11] com.scalamandra.ZipBench.com$scalamandra$ZipBench$$_$nioReadAllBytes$$anonfun$1
  [12] com.scalamandra.ZipBench$$anon$3.apply
  [13] com.scalamandra.ZipBench$$anon$3.apply
  [14] com.scalamandra.ZipBench.nioReadAllBytes
  [15] com.scalamandra.jmh_generated.ZipBench_nioReadAllBytes_jmhTest.nioReadAllBytes_thrpt_jmhStub
  [16] com.scalamandra.jmh_generated.ZipBench_nioReadAllBytes_jmhTest.nioReadAllBytes_Throughput
  [17] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [18] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [19] java.lang.reflect.Method.invoke
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.Executors$RunnableAdapter.call
  [24] java.util.concurrent.FutureTask.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.run

--- 51745434 ns (0.02%), 5 samples
  [ 0] jdk.internal.misc.Unsafe.unpark
  [ 1] java.util.concurrent.locks.LockSupport.unpark
  [ 2] cats.effect.unsafe.WorkStealingThreadPool.notifyParked
  [ 3] cats.effect.unsafe.WorkStealingThreadPool.scheduleExternal
  [ 4] cats.effect.unsafe.WorkStealingThreadPool.execute
  [ 5] cats.effect.IO.unsafeRunFiber
  [ 6] cats.effect.IO.unsafeRunAsync
  [ 7] cats.effect.IOPlatform.unsafeRunTimed
  [ 8] cats.effect.IOPlatform.unsafeRunSync
  [ 9] com.scalamandra.ZipBench.com$scalamandra$ZipBench$$_$nioReadAllBytes$$anonfun$1
  [10] com.scalamandra.ZipBench$$anon$3.apply
  [11] com.scalamandra.ZipBench$$anon$3.apply
  [12] com.scalamandra.ZipBench.nioReadAllBytes
  [13] com.scalamandra.jmh_generated.ZipBench_nioReadAllBytes_jmhTest.nioReadAllBytes_thrpt_jmhStub
  [14] com.scalamandra.jmh_generated.ZipBench_nioReadAllBytes_jmhTest.nioReadAllBytes_Throughput
  [15] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [16] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [17] java.lang.reflect.Method.invoke
  [18] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [19] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [20] java.util.concurrent.FutureTask.run
  [21] java.util.concurrent.Executors$RunnableAdapter.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.ThreadPoolExecutor.runWorker
  [24] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [25] java.lang.Thread.run

--- 51687074 ns (0.02%), 5 samples
  [ 0] __get_user_nocheck_4_[k]
  [ 1] futex_wait_setup_[k]
  [ 2] futex_wait_[k]
  [ 3] do_futex_[k]
  [ 4] __x64_sys_futex_[k]
  [ 5] do_syscall_64_[k]
  [ 6] entry_SYSCALL_64_after_hwframe_[k]
  [ 7] __futex_abstimed_wait_cancelable64
  [ 8] [unknown]
  [ 9] jdk.internal.misc.Unsafe.park
  [10] java.util.concurrent.locks.LockSupport.parkNanos
  [11] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos
  [12] java.util.concurrent.ArrayBlockingQueue.poll
  [13] cats.effect.IOPlatform.$anonfun$1
  [14] cats.effect.IOPlatform$$Lambda$144.0x0000000800d999e0.apply
  [15] scala.concurrent.BlockContext$DefaultBlockContext$.blockOn
  [16] scala.concurrent.package$.blocking
  [17] cats.effect.IOPlatform.unsafeRunTimed
  [18] cats.effect.IOPlatform.unsafeRunSync
  [19] com.scalamandra.ZipBench.com$scalamandra$ZipBench$$_$nioReadAllBytes$$anonfun$1
  [20] com.scalamandra.ZipBench$$anon$3.apply
  [21] com.scalamandra.ZipBench$$anon$3.apply
  [22] com.scalamandra.ZipBench.nioReadAllBytes
  [23] com.scalamandra.jmh_generated.ZipBench_nioReadAllBytes_jmhTest.nioReadAllBytes_thrpt_jmhStub
  [24] com.scalamandra.jmh_generated.ZipBench_nioReadAllBytes_jmhTest.nioReadAllBytes_Throughput
  [25] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [26] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [27] java.lang.reflect.Method.invoke
  [28] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [29] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [30] java.util.concurrent.FutureTask.run
  [31] java.util.concurrent.Executors$RunnableAdapter.call
  [32] java.util.concurrent.FutureTask.run
  [33] java.util.concurrent.ThreadPoolExecutor.runWorker
  [34] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [35] java.lang.Thread.run

--- 51655535 ns (0.02%), 5 samples
  [ 0] cats.effect.IO.unsafeRunFiber
  [ 1] cats.effect.IO.unsafeRunAsync
  [ 2] cats.effect.IOPlatform.unsafeRunTimed
  [ 3] cats.effect.IOPlatform.unsafeRunSync
  [ 4] com.scalamandra.ZipBench.com$scalamandra$ZipBench$$_$nioReadAllBytes$$anonfun$1
  [ 5] com.scalamandra.ZipBench$$anon$3.apply
  [ 6] com.scalamandra.ZipBench$$anon$3.apply
  [ 7] com.scalamandra.ZipBench.nioReadAllBytes
  [ 8] com.scalamandra.jmh_generated.ZipBench_nioReadAllBytes_jmhTest.nioReadAllBytes_thrpt_jmhStub
  [ 9] com.scalamandra.jmh_generated.ZipBench_nioReadAllBytes_jmhTest.nioReadAllBytes_Throughput
  [10] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [11] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [12] java.lang.reflect.Method.invoke
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [15] java.util.concurrent.FutureTask.run
  [16] java.util.concurrent.Executors$RunnableAdapter.call
  [17] java.util.concurrent.FutureTask.run
  [18] java.util.concurrent.ThreadPoolExecutor.runWorker
  [19] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [20] java.lang.Thread.run

--- 51603172 ns (0.02%), 5 samples
  [ 0] __x64_sys_futex_[k]
  [ 1] do_syscall_64_[k]
  [ 2] entry_SYSCALL_64_after_hwframe_[k]
  [ 3] __futex_abstimed_wait_cancelable64
  [ 4] [unknown]
  [ 5] jdk.internal.misc.Unsafe.park
  [ 6] java.util.concurrent.locks.LockSupport.parkNanos
  [ 7] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos
  [ 8] java.util.concurrent.ArrayBlockingQueue.poll
  [ 9] cats.effect.IOPlatform.$anonfun$1
  [10] cats.effect.IOPlatform$$Lambda$144.0x0000000800d999e0.apply
  [11] scala.concurrent.BlockContext$DefaultBlockContext$.blockOn
  [12] scala.concurrent.package$.blocking
  [13] cats.effect.IOPlatform.unsafeRunTimed
  [14] cats.effect.IOPlatform.unsafeRunSync
  [15] com.scalamandra.ZipBench.com$scalamandra$ZipBench$$_$nioReadAllBytes$$anonfun$1
  [16] com.scalamandra.ZipBench$$anon$3.apply
  [17] com.scalamandra.ZipBench$$anon$3.apply
  [18] com.scalamandra.ZipBench.nioReadAllBytes
  [19] com.scalamandra.jmh_generated.ZipBench_nioReadAllBytes_jmhTest.nioReadAllBytes_thrpt_jmhStub
  [20] com.scalamandra.jmh_generated.ZipBench_nioReadAllBytes_jmhTest.nioReadAllBytes_Throughput
  [21] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [22] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [23] java.lang.reflect.Method.invoke
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.Executors$RunnableAdapter.call
  [28] java.util.concurrent.FutureTask.run
  [29] java.util.concurrent.ThreadPoolExecutor.runWorker
  [30] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [31] java.lang.Thread.run

--- 50590910 ns (0.02%), 5 samples
  [ 0] void OopOopIterateDispatch<G1ScanCardClosure>::Table::oop_oop_iterate<InstanceKlass, narrowOop>(G1ScanCardClosure*, oopDesc*, Klass*)
  [ 1] G1ScanHRForRegionClosure::scan_heap_roots(HeapRegion*)
  [ 2] G1RemSet::scan_heap_roots(G1ParScanThreadState*, unsigned int, G1GCPhaseTimes::GCParPhases, G1GCPhaseTimes::GCParPhases, bool)
  [ 3] G1EvacuateRegionsTask::scan_roots(G1ParScanThreadState*, unsigned int)
  [ 4] G1EvacuateRegionsBaseTask::work(unsigned int)
  [ 5] GangWorker::loop()
  [ 6] GangWorker::run()
  [ 7] Thread::call_run()
  [ 8] thread_native_entry(Thread*)
  [ 9] start_thread

--- 50576016 ns (0.02%), 5 samples
  [ 0] G1CodeRootSet::contains(nmethod*)
  [ 1] nmethod::oops_do(OopClosure*, bool)
  [ 2] G1NmethodProcessor::do_regular_processing(nmethod*)
  [ 3] nmethod::oops_do_process_weak(nmethod::OopsDoProcessor*)
  [ 4] G1CodeBlobClosure::do_code_blob(CodeBlob*)
  [ 5] JavaThread::oops_do_frames(OopClosure*, CodeBlobClosure*) [clone .part.0]
  [ 6] Threads::possibly_parallel_oops_do(bool, OopClosure*, CodeBlobClosure*)
  [ 7] G1RootProcessor::process_java_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int)
  [ 8] G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int)
  [ 9] G1EvacuateRegionsTask::scan_roots(G1ParScanThreadState*, unsigned int)
  [10] G1EvacuateRegionsBaseTask::work(unsigned int)
  [11] GangWorker::loop()
  [12] GangWorker::run()
  [13] Thread::call_run()
  [14] thread_native_entry(Thread*)
  [15] start_thread

--- 50549841 ns (0.02%), 5 samples
  [ 0] G1ParScanThreadState::trim_queue_to_threshold(unsigned int)
  [ 1] G1ParEvacuateFollowersClosure::do_void()
  [ 2] G1EvacuateRegionsTask::evacuate_live_objects(G1ParScanThreadState*, unsigned int)
  [ 3] G1EvacuateRegionsBaseTask::work(unsigned int)
  [ 4] GangWorker::loop()
  [ 5] GangWorker::run()
  [ 6] Thread::call_run()
  [ 7] thread_native_entry(Thread*)
  [ 8] start_thread

--- 50254919 ns (0.02%), 5 samples
  [ 0] syscall_enter_from_user_mode_[k]
  [ 1] do_syscall_64_[k]
  [ 2] entry_SYSCALL_64_after_hwframe_[k]
  [ 3] pthread_cond_signal@@GLIBC_2.3.2
  [ 4] jdk.internal.misc.Unsafe.unpark
  [ 5] java.util.concurrent.locks.LockSupport.unpark
  [ 6] cats.effect.unsafe.WorkStealingThreadPool.notifyParked
  [ 7] cats.effect.unsafe.WorkerThread.blockOn
  [ 8] scala.concurrent.package$.blocking
  [ 9] cats.effect.IOFiber.runLoop
  [10] cats.effect.IOFiber.execR
  [11] cats.effect.IOFiber.run
  [12] cats.effect.unsafe.WorkerThread.run

--- 50250297 ns (0.02%), 5 samples
  [ 0] futex_wake_[k]
  [ 1] do_futex_[k]
  [ 2] __x64_sys_futex_[k]
  [ 3] do_syscall_64_[k]
  [ 4] entry_SYSCALL_64_after_hwframe_[k]
  [ 5] pthread_cond_signal@@GLIBC_2.3.2
  [ 6] jdk.internal.misc.Unsafe.unpark
  [ 7] java.util.concurrent.locks.LockSupport.unpark
  [ 8] cats.effect.unsafe.WorkStealingThreadPool.notifyParked
  [ 9] cats.effect.unsafe.WorkerThread.blockOn
  [10] scala.concurrent.package$.blocking
  [11] cats.effect.IOFiber.runLoop
  [12] cats.effect.IOFiber.execR
  [13] cats.effect.IOFiber.run
  [14] cats.effect.unsafe.WorkerThread.run

--- 50249191 ns (0.02%), 5 samples
  [ 0] _IO_no_init
  [ 1] java_lang_String::as_utf8_string(oopDesc*)
  [ 2] JVM_SetNativeThreadName
  [ 3] java.lang.Thread.setNativeName
  [ 4] java.lang.Thread.setName
  [ 5] cats.effect.unsafe.WorkerThread.blockOn
  [ 6] scala.concurrent.package$.blocking
  [ 7] cats.effect.IOFiber.runLoop
  [ 8] cats.effect.IOFiber.execR
  [ 9] cats.effect.IOFiber.run
  [10] cats.effect.unsafe.WorkerThread.run

--- 50236068 ns (0.02%), 5 samples
  [ 0] cap_task_prctl_[k]
  [ 1] __do_sys_prctl_[k]
  [ 2] __x64_sys_prctl_[k]
  [ 3] do_syscall_64_[k]
  [ 4] entry_SYSCALL_64_after_hwframe_[k]
  [ 5] __GI___prctl
  [ 6] [unknown]
  [ 7] java.lang.Thread.setNativeName
  [ 8] java.lang.Thread.setName
  [ 9] cats.effect.unsafe.WorkerThread.blockOn
  [10] scala.concurrent.package$.blocking
  [11] cats.effect.IOFiber.runLoop
  [12] cats.effect.IOFiber.execR
  [13] cats.effect.IOFiber.run
  [14] cats.effect.unsafe.WorkerThread.run

--- 50215415 ns (0.02%), 5 samples
  [ 0] mutex_lock_[k]
  [ 1] rrw_enter_read_impl?[zfs]_[k]
  [ 2] rrw_enter_read?[zfs]_[k]
  [ 3] rrm_enter_read?[zfs]_[k]
  [ 4] zfs_read?[zfs]_[k]
  [ 5] zpl_iter_read?[zfs]_[k]
  [ 6] new_sync_read_[k]
  [ 7] vfs_read_[k]
  [ 8] __x64_sys_pread64_[k]
  [ 9] do_syscall_64_[k]
  [10] entry_SYSCALL_64_after_hwframe_[k]
  [11] __libc_pread64
  [12] sun.nio.ch.FileDispatcherImpl.pread0
  [13] sun.nio.ch.FileDispatcherImpl.pread
  [14] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [15] sun.nio.ch.IOUtil.read
  [16] sun.nio.ch.IOUtil.read
  [17] sun.nio.ch.FileChannelImpl.readInternal
  [18] sun.nio.ch.FileChannelImpl.read
  [19] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [20] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [21] jdk.nio.zipfs.ZipFileSystem$Entry.readLocEXTT
  [22] jdk.nio.zipfs.ZipFileSystem$Entry.readExtra
  [23] jdk.nio.zipfs.ZipFileSystem$Entry.readCEN
  [24] jdk.nio.zipfs.ZipFileSystem$Entry.<init>
  [25] jdk.nio.zipfs.ZipFileSystem.getEntry
  [26] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [27] jdk.nio.zipfs.ZipPath.newByteChannel
  [28] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [29] java.nio.file.Files.newByteChannel
  [30] java.nio.file.Files.newByteChannel
  [31] java.nio.file.Files.readAllBytes
  [32] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [33] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [34] cats.effect.IOFiber.$anonfun$8
  [35] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [36] cats.effect.unsafe.WorkerThread.blockOn
  [37] scala.concurrent.package$.blocking
  [38] cats.effect.IOFiber.runLoop
  [39] cats.effect.IOFiber.execR
  [40] cats.effect.IOFiber.run
  [41] cats.effect.unsafe.WorkerThread.run

--- 50203710 ns (0.02%), 5 samples
  [ 0] java.util.concurrent.ConcurrentSkipListMap.doRemoveFirstEntry
  [ 1] java.util.concurrent.ConcurrentSkipListMap.pollFirstEntry
  [ 2] java.util.concurrent.ConcurrentSkipListSet.pollFirst
  [ 3] cats.effect.unsafe.WorkerThread.blockOn
  [ 4] scala.concurrent.package$.blocking
  [ 5] cats.effect.IOFiber.runLoop
  [ 6] cats.effect.IOFiber.execR
  [ 7] cats.effect.IOFiber.run
  [ 8] cats.effect.unsafe.WorkerThread.run

--- 50200151 ns (0.02%), 5 samples
  [ 0] kmem_cache_free_[k]
  [ 1] spl_kmem_cache_free?[spl]_[k]
  [ 2] zio_destroy?[zfs]_[k]
  [ 3] zio_wait?[zfs]_[k]
  [ 4] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 5] dmu_read_uio_dnode?[zfs]_[k]
  [ 6] dmu_read_uio_dbuf?[zfs]_[k]
  [ 7] zfs_read?[zfs]_[k]
  [ 8] zpl_iter_read?[zfs]_[k]
  [ 9] new_sync_read_[k]
  [10] vfs_read_[k]
  [11] __x64_sys_pread64_[k]
  [12] do_syscall_64_[k]
  [13] entry_SYSCALL_64_after_hwframe_[k]
  [14] __libc_pread64
  [15] sun.nio.ch.FileDispatcherImpl.pread0
  [16] sun.nio.ch.FileDispatcherImpl.pread
  [17] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [18] sun.nio.ch.IOUtil.read
  [19] sun.nio.ch.IOUtil.read
  [20] sun.nio.ch.FileChannelImpl.readInternal
  [21] sun.nio.ch.FileChannelImpl.read
  [22] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [23] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [24] jdk.nio.zipfs.ZipFileSystem$Entry.readLocEXTT
  [25] jdk.nio.zipfs.ZipFileSystem$Entry.readExtra
  [26] jdk.nio.zipfs.ZipFileSystem$Entry.readCEN
  [27] jdk.nio.zipfs.ZipFileSystem$Entry.<init>
  [28] jdk.nio.zipfs.ZipFileSystem.getEntry
  [29] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [30] jdk.nio.zipfs.ZipPath.newByteChannel
  [31] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [32] java.nio.file.Files.newByteChannel
  [33] java.nio.file.Files.newByteChannel
  [34] java.nio.file.Files.readAllBytes
  [35] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [36] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [37] cats.effect.IOFiber.$anonfun$8
  [38] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [39] cats.effect.unsafe.WorkerThread.blockOn
  [40] scala.concurrent.package$.blocking
  [41] cats.effect.IOFiber.runLoop
  [42] cats.effect.IOFiber.execR
  [43] cats.effect.IOFiber.run
  [44] cats.effect.unsafe.WorkerThread.run

--- 50196473 ns (0.02%), 5 samples
  [ 0] java.util.concurrent.ConcurrentSkipListMap.doRemoveFirstEntry
  [ 1] java.util.concurrent.ConcurrentSkipListMap.pollFirstEntry
  [ 2] java.util.concurrent.ConcurrentSkipListSet.pollFirst
  [ 3] cats.effect.unsafe.WorkerThread.blockOn
  [ 4] scala.concurrent.package$.blocking
  [ 5] cats.effect.IOFiber.runLoop
  [ 6] cats.effect.IOFiber.execR
  [ 7] cats.effect.IOFiber.run
  [ 8] cats.effect.unsafe.WorkerThread.run

--- 50195194 ns (0.02%), 5 samples
  [ 0] java.util.concurrent.ConcurrentSkipListMap.unlinkNode
  [ 1] java.util.concurrent.ConcurrentSkipListMap.doRemoveFirstEntry
  [ 2] java.util.concurrent.ConcurrentSkipListMap.pollFirstEntry
  [ 3] java.util.concurrent.ConcurrentSkipListSet.pollFirst
  [ 4] cats.effect.unsafe.WorkerThread.blockOn
  [ 5] scala.concurrent.package$.blocking
  [ 6] cats.effect.IOFiber.runLoop
  [ 7] cats.effect.IOFiber.execR
  [ 8] cats.effect.IOFiber.run
  [ 9] cats.effect.unsafe.WorkerThread.run

--- 50192107 ns (0.02%), 5 samples
  [ 0] futex_wait_[k]
  [ 1] do_futex_[k]
  [ 2] __x64_sys_futex_[k]
  [ 3] do_syscall_64_[k]
  [ 4] entry_SYSCALL_64_after_hwframe_[k]
  [ 5] __futex_abstimed_wait_cancelable64
  [ 6] [unknown]
  [ 7] jdk.internal.misc.Unsafe.park
  [ 8] java.util.concurrent.locks.LockSupport.park
  [ 9] cats.effect.unsafe.WorkerThread.parkLoop$1
  [10] cats.effect.unsafe.WorkerThread.run

--- 50192101 ns (0.02%), 5 samples
  [ 0] zio_wait_for_children?[zfs]_[k]
  [ 1] zio_ready?[zfs]_[k]
  [ 2] zio_wait?[zfs]_[k]
  [ 3] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 4] dmu_read_uio_dnode?[zfs]_[k]
  [ 5] dmu_read_uio_dbuf?[zfs]_[k]
  [ 6] zfs_read?[zfs]_[k]
  [ 7] zpl_iter_read?[zfs]_[k]
  [ 8] new_sync_read_[k]
  [ 9] vfs_read_[k]
  [10] __x64_sys_pread64_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] __libc_pread64
  [14] sun.nio.ch.FileDispatcherImpl.pread0
  [15] sun.nio.ch.FileDispatcherImpl.pread
  [16] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [17] sun.nio.ch.IOUtil.read
  [18] sun.nio.ch.IOUtil.read
  [19] sun.nio.ch.FileChannelImpl.readInternal
  [20] sun.nio.ch.FileChannelImpl.read
  [21] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [22] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [23] jdk.nio.zipfs.ZipFileSystem$Entry.readLocEXTT
  [24] jdk.nio.zipfs.ZipFileSystem$Entry.readExtra
  [25] jdk.nio.zipfs.ZipFileSystem$Entry.readCEN
  [26] jdk.nio.zipfs.ZipFileSystem$Entry.<init>
  [27] jdk.nio.zipfs.ZipFileSystem.getEntry
  [28] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [29] jdk.nio.zipfs.ZipPath.newByteChannel
  [30] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [31] java.nio.file.Files.newByteChannel
  [32] java.nio.file.Files.newByteChannel
  [33] java.nio.file.Files.readAllBytes
  [34] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [35] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [36] cats.effect.IOFiber.$anonfun$8
  [37] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [38] cats.effect.unsafe.WorkerThread.blockOn
  [39] scala.concurrent.package$.blocking
  [40] cats.effect.IOFiber.runLoop
  [41] cats.effect.IOFiber.execR
  [42] cats.effect.IOFiber.run
  [43] cats.effect.unsafe.WorkerThread.run

--- 50190270 ns (0.02%), 5 samples
  [ 0] pthread_setname_np@GLIBC_2.12
  [ 1] JVM_SetNativeThreadName
  [ 2] java.lang.Thread.setNativeName
  [ 3] java.lang.Thread.setName
  [ 4] cats.effect.unsafe.WorkerThread.blockOn
  [ 5] scala.concurrent.package$.blocking
  [ 6] cats.effect.IOFiber.runLoop
  [ 7] cats.effect.IOFiber.execR
  [ 8] cats.effect.IOFiber.run
  [ 9] cats.effect.unsafe.WorkerThread.run

--- 50185154 ns (0.02%), 5 samples
  [ 0] __vfprintf_internal
  [ 1] java_lang_String::as_utf8_string(oopDesc*)
  [ 2] [unknown]
  [ 3] [unknown]
  [ 4] java.lang.Thread.setNativeName
  [ 5] java.lang.Thread.setName
  [ 6] cats.effect.unsafe.WorkerThread.blockOn
  [ 7] scala.concurrent.package$.blocking
  [ 8] cats.effect.IOFiber.runLoop
  [ 9] cats.effect.IOFiber.execR
  [10] cats.effect.IOFiber.run
  [11] cats.effect.unsafe.WorkerThread.run

--- 50182136 ns (0.02%), 5 samples
  [ 0] os::vsnprintf(char*, unsigned long, char const*, __va_list_tag*)
  [ 1] os::snprintf(char*, unsigned long, char const*, ...)
  [ 2] os::set_native_thread_name(char const*)
  [ 3] JVM_SetNativeThreadName
  [ 4] java.lang.Thread.setNativeName
  [ 5] java.lang.Thread.setName
  [ 6] cats.effect.unsafe.WorkerThread.blockOn
  [ 7] scala.concurrent.package$.blocking
  [ 8] cats.effect.IOFiber.runLoop
  [ 9] cats.effect.IOFiber.execR
  [10] cats.effect.IOFiber.run
  [11] cats.effect.unsafe.WorkerThread.run

--- 50181307 ns (0.02%), 5 samples
  [ 0] java.util.HashMap.hash
  [ 1] java.util.HashMap.getNode
  [ 2] java.util.LinkedHashMap.get
  [ 3] jdk.nio.zipfs.ZipFileSystem.getInode
  [ 4] jdk.nio.zipfs.ZipFileSystem.getEntry
  [ 5] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [ 6] jdk.nio.zipfs.ZipPath.newByteChannel
  [ 7] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [ 8] java.nio.file.Files.newByteChannel
  [ 9] java.nio.file.Files.newByteChannel
  [10] java.nio.file.Files.readAllBytes
  [11] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [12] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [13] cats.effect.IOFiber.$anonfun$8
  [14] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [15] cats.effect.unsafe.WorkerThread.blockOn
  [16] scala.concurrent.package$.blocking
  [17] cats.effect.IOFiber.runLoop
  [18] cats.effect.IOFiber.execR
  [19] cats.effect.IOFiber.run
  [20] cats.effect.unsafe.WorkerThread.run

--- 50180482 ns (0.02%), 5 samples
  [ 0] cats.effect.unsafe.LocalQueue.isEmpty
  [ 1] cats.effect.unsafe.LocalQueue.nonEmpty
  [ 2] cats.effect.unsafe.WorkStealingThreadPool.notifyIfWorkPending
  [ 3] cats.effect.unsafe.WorkerThread.run

--- 50177462 ns (0.02%), 5 samples
  [ 0] zio_done?[zfs]_[k]
  [ 1] zio_wait?[zfs]_[k]
  [ 2] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 3] dmu_read_uio_dnode?[zfs]_[k]
  [ 4] dmu_read_uio_dbuf?[zfs]_[k]
  [ 5] zfs_read?[zfs]_[k]
  [ 6] zpl_iter_read?[zfs]_[k]
  [ 7] new_sync_read_[k]
  [ 8] vfs_read_[k]
  [ 9] __x64_sys_pread64_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] __libc_pread64
  [13] sun.nio.ch.FileDispatcherImpl.pread0
  [14] sun.nio.ch.FileDispatcherImpl.pread
  [15] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [16] sun.nio.ch.IOUtil.read
  [17] sun.nio.ch.IOUtil.read
  [18] sun.nio.ch.FileChannelImpl.readInternal
  [19] sun.nio.ch.FileChannelImpl.read
  [20] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [21] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [22] jdk.nio.zipfs.ZipFileSystem$Entry.readLocEXTT
  [23] jdk.nio.zipfs.ZipFileSystem$Entry.readExtra
  [24] jdk.nio.zipfs.ZipFileSystem$Entry.readCEN
  [25] jdk.nio.zipfs.ZipFileSystem$Entry.<init>
  [26] jdk.nio.zipfs.ZipFileSystem.getEntry
  [27] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [28] jdk.nio.zipfs.ZipPath.newByteChannel
  [29] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [30] java.nio.file.Files.newByteChannel
  [31] java.nio.file.Files.newByteChannel
  [32] java.nio.file.Files.readAllBytes
  [33] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [34] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [35] cats.effect.IOFiber.$anonfun$8
  [36] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [37] cats.effect.unsafe.WorkerThread.blockOn
  [38] scala.concurrent.package$.blocking
  [39] cats.effect.IOFiber.runLoop
  [40] cats.effect.IOFiber.execR
  [41] cats.effect.IOFiber.run
  [42] cats.effect.unsafe.WorkerThread.run

--- 50172538 ns (0.02%), 5 samples
  [ 0] jdk.internal.misc.Unsafe.compareAndSetReference
  [ 1] java.lang.invoke.VarHandleReferences$FieldInstanceReadWrite.compareAndSet
  [ 2] java.lang.invoke.VarHandleGuards.guard_LLL_Z
  [ 3] java.util.concurrent.ConcurrentSkipListMap.doRemoveFirstEntry
  [ 4] java.util.concurrent.ConcurrentSkipListMap.pollFirstEntry
  [ 5] java.util.concurrent.ConcurrentSkipListSet.pollFirst
  [ 6] cats.effect.unsafe.WorkerThread.blockOn
  [ 7] scala.concurrent.package$.blocking
  [ 8] cats.effect.IOFiber.runLoop
  [ 9] cats.effect.IOFiber.execR
  [10] cats.effect.IOFiber.run
  [11] cats.effect.unsafe.WorkerThread.run

--- 50164966 ns (0.02%), 5 samples
  [ 0] kmem_cache_alloc_[k]
  [ 1] zio_create?[zfs]_[k]
  [ 2] zio_null?[zfs]_[k]
  [ 3] zio_root?[zfs]_[k]
  [ 4] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 5] dmu_read_uio_dnode?[zfs]_[k]
  [ 6] dmu_read_uio_dbuf?[zfs]_[k]
  [ 7] zfs_read?[zfs]_[k]
  [ 8] zpl_iter_read?[zfs]_[k]
  [ 9] new_sync_read_[k]
  [10] vfs_read_[k]
  [11] __x64_sys_pread64_[k]
  [12] do_syscall_64_[k]
  [13] entry_SYSCALL_64_after_hwframe_[k]
  [14] __libc_pread64
  [15] sun.nio.ch.FileDispatcherImpl.pread0
  [16] sun.nio.ch.FileDispatcherImpl.pread
  [17] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [18] sun.nio.ch.IOUtil.read
  [19] sun.nio.ch.IOUtil.read
  [20] sun.nio.ch.FileChannelImpl.readInternal
  [21] sun.nio.ch.FileChannelImpl.read
  [22] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [23] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [24] jdk.nio.zipfs.ZipFileSystem$Entry.readLocEXTT
  [25] jdk.nio.zipfs.ZipFileSystem$Entry.readExtra
  [26] jdk.nio.zipfs.ZipFileSystem$Entry.readCEN
  [27] jdk.nio.zipfs.ZipFileSystem$Entry.<init>
  [28] jdk.nio.zipfs.ZipFileSystem.getEntry
  [29] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [30] jdk.nio.zipfs.ZipPath.newByteChannel
  [31] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [32] java.nio.file.Files.newByteChannel
  [33] java.nio.file.Files.newByteChannel
  [34] java.nio.file.Files.readAllBytes
  [35] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [36] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [37] cats.effect.IOFiber.$anonfun$8
  [38] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [39] cats.effect.unsafe.WorkerThread.blockOn
  [40] scala.concurrent.package$.blocking
  [41] cats.effect.IOFiber.runLoop
  [42] cats.effect.IOFiber.execR
  [43] cats.effect.IOFiber.run
  [44] cats.effect.unsafe.WorkerThread.run

--- 50162205 ns (0.02%), 5 samples
  [ 0] cats.effect.unsafe.WorkStealingThreadPool.notifyIfWorkPending
  [ 1] cats.effect.unsafe.WorkerThread.run

--- 50160420 ns (0.02%), 5 samples
  [ 0] kmem_cache_alloc_[k]
  [ 1] spl_kmem_cache_alloc?[spl]_[k]
  [ 2] zio_create?[zfs]_[k]
  [ 3] zio_null?[zfs]_[k]
  [ 4] zio_root?[zfs]_[k]
  [ 5] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 6] dmu_read_uio_dnode?[zfs]_[k]
  [ 7] dmu_read_uio_dbuf?[zfs]_[k]
  [ 8] zfs_read?[zfs]_[k]
  [ 9] zpl_iter_read?[zfs]_[k]
  [10] new_sync_read_[k]
  [11] vfs_read_[k]
  [12] __x64_sys_pread64_[k]
  [13] do_syscall_64_[k]
  [14] entry_SYSCALL_64_after_hwframe_[k]
  [15] __libc_pread64
  [16] sun.nio.ch.FileDispatcherImpl.pread0
  [17] sun.nio.ch.FileDispatcherImpl.pread
  [18] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [19] sun.nio.ch.IOUtil.read
  [20] sun.nio.ch.IOUtil.read
  [21] sun.nio.ch.FileChannelImpl.readInternal
  [22] sun.nio.ch.FileChannelImpl.read
  [23] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [24] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [25] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.initDataPos
  [26] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [27] jdk.nio.zipfs.ZipFileSystem$2.fill
  [28] java.util.zip.InflaterInputStream.read
  [29] java.io.InputStream.readNBytes
  [30] java.io.InputStream.readAllBytes
  [31] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [32] jdk.nio.zipfs.ZipPath.newByteChannel
  [33] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [34] java.nio.file.Files.newByteChannel
  [35] java.nio.file.Files.newByteChannel
  [36] java.nio.file.Files.readAllBytes
  [37] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [38] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [39] cats.effect.IOFiber.$anonfun$8
  [40] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [41] cats.effect.unsafe.WorkerThread.blockOn
  [42] scala.concurrent.package$.blocking
  [43] cats.effect.IOFiber.runLoop
  [44] cats.effect.IOFiber.execR
  [45] cats.effect.IOFiber.run
  [46] cats.effect.unsafe.WorkerThread.run

--- 50153276 ns (0.02%), 5 samples
  [ 0] __x64_sys_sched_yield_[k]
  [ 1] entry_SYSCALL_64_after_hwframe_[k]
  [ 2] __GI___sched_yield
  [ 3] java.lang.Thread.yield
  [ 4] java.util.concurrent.LinkedTransferQueue.awaitMatch
  [ 5] java.util.concurrent.LinkedTransferQueue.xfer
  [ 6] java.util.concurrent.LinkedTransferQueue.poll
  [ 7] cats.effect.unsafe.WorkerThread.run

--- 50149868 ns (0.02%), 5 samples
  [ 0] java.lang.Thread.blockedOn
  [ 1] java.lang.System$2.blockedOn
  [ 2] java.nio.channels.spi.AbstractInterruptibleChannel.blockedOn
  [ 3] java.nio.channels.spi.AbstractInterruptibleChannel.begin
  [ 4] sun.nio.ch.FileChannelImpl.beginBlocking
  [ 5] sun.nio.ch.FileChannelImpl.readInternal
  [ 6] sun.nio.ch.FileChannelImpl.read
  [ 7] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [ 8] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [ 9] jdk.nio.zipfs.ZipFileSystem$Entry.readLocEXTT
  [10] jdk.nio.zipfs.ZipFileSystem$Entry.readExtra
  [11] jdk.nio.zipfs.ZipFileSystem$Entry.readCEN
  [12] jdk.nio.zipfs.ZipFileSystem$Entry.<init>
  [13] jdk.nio.zipfs.ZipFileSystem.getEntry
  [14] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [15] jdk.nio.zipfs.ZipPath.newByteChannel
  [16] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [17] java.nio.file.Files.newByteChannel
  [18] java.nio.file.Files.newByteChannel
  [19] java.nio.file.Files.readAllBytes
  [20] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [21] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [22] cats.effect.IOFiber.$anonfun$8
  [23] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [24] cats.effect.unsafe.WorkerThread.blockOn
  [25] scala.concurrent.package$.blocking
  [26] cats.effect.IOFiber.runLoop
  [27] cats.effect.IOFiber.execR
  [28] cats.effect.IOFiber.run
  [29] cats.effect.unsafe.WorkerThread.run

--- 50149283 ns (0.02%), 5 samples
  [ 0] new_sync_read_[k]
  [ 1] vfs_read_[k]
  [ 2] __x64_sys_pread64_[k]
  [ 3] do_syscall_64_[k]
  [ 4] entry_SYSCALL_64_after_hwframe_[k]
  [ 5] __libc_pread64
  [ 6] sun.nio.ch.FileDispatcherImpl.pread0
  [ 7] sun.nio.ch.FileDispatcherImpl.pread
  [ 8] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [ 9] sun.nio.ch.IOUtil.read
  [10] sun.nio.ch.IOUtil.read
  [11] sun.nio.ch.FileChannelImpl.readInternal
  [12] sun.nio.ch.FileChannelImpl.read
  [13] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [14] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [15] jdk.nio.zipfs.ZipFileSystem$Entry.readLocEXTT
  [16] jdk.nio.zipfs.ZipFileSystem$Entry.readExtra
  [17] jdk.nio.zipfs.ZipFileSystem$Entry.readCEN
  [18] jdk.nio.zipfs.ZipFileSystem$Entry.<init>
  [19] jdk.nio.zipfs.ZipFileSystem.getEntry
  [20] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [21] jdk.nio.zipfs.ZipPath.newByteChannel
  [22] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [23] java.nio.file.Files.newByteChannel
  [24] java.nio.file.Files.newByteChannel
  [25] java.nio.file.Files.readAllBytes
  [26] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [27] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [28] cats.effect.IOFiber.$anonfun$8
  [29] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [30] cats.effect.unsafe.WorkerThread.blockOn
  [31] scala.concurrent.package$.blocking
  [32] cats.effect.IOFiber.runLoop
  [33] cats.effect.IOFiber.execR
  [34] cats.effect.IOFiber.run
  [35] cats.effect.unsafe.WorkerThread.run

--- 50148738 ns (0.02%), 5 samples
  [ 0] Parker::park(bool, long)
  [ 1] Unsafe_Park
  [ 2] jdk.internal.misc.Unsafe.park
  [ 3] java.util.concurrent.locks.LockSupport.parkNanos
  [ 4] java.util.concurrent.LinkedTransferQueue.awaitMatch
  [ 5] java.util.concurrent.LinkedTransferQueue.xfer
  [ 6] java.util.concurrent.LinkedTransferQueue.poll
  [ 7] cats.effect.unsafe.WorkerThread.run

--- 50147239 ns (0.02%), 5 samples
  [ 0] cats.effect.unsafe.ScalQueue.isEmpty
  [ 1] cats.effect.unsafe.ScalQueue.nonEmpty
  [ 2] cats.effect.unsafe.WorkStealingThreadPool.notifyIfWorkPending
  [ 3] cats.effect.unsafe.WorkerThread.run

--- 50143686 ns (0.02%), 5 samples
  [ 0] java.util.concurrent.ConcurrentLinkedQueue.first
  [ 1] java.util.concurrent.ConcurrentLinkedQueue.isEmpty
  [ 2] cats.effect.unsafe.ScalQueue.isEmpty
  [ 3] cats.effect.unsafe.ScalQueue.nonEmpty
  [ 4] cats.effect.unsafe.WorkStealingThreadPool.notifyIfWorkPending
  [ 5] cats.effect.unsafe.WorkerThread.run

--- 50142599 ns (0.02%), 5 samples
  [ 0] zio_wait?[zfs]_[k]
  [ 1] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 2] dmu_read_uio_dnode?[zfs]_[k]
  [ 3] dmu_read_uio_dbuf?[zfs]_[k]
  [ 4] zfs_read?[zfs]_[k]
  [ 5] zpl_iter_read?[zfs]_[k]
  [ 6] new_sync_read_[k]
  [ 7] vfs_read_[k]
  [ 8] __x64_sys_pread64_[k]
  [ 9] do_syscall_64_[k]
  [10] entry_SYSCALL_64_after_hwframe_[k]
  [11] __libc_pread64
  [12] sun.nio.ch.FileDispatcherImpl.pread0
  [13] sun.nio.ch.FileDispatcherImpl.pread
  [14] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [15] sun.nio.ch.IOUtil.read
  [16] sun.nio.ch.IOUtil.read
  [17] sun.nio.ch.FileChannelImpl.readInternal
  [18] sun.nio.ch.FileChannelImpl.read
  [19] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [20] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [21] jdk.nio.zipfs.ZipFileSystem$Entry.readLocEXTT
  [22] jdk.nio.zipfs.ZipFileSystem$Entry.readExtra
  [23] jdk.nio.zipfs.ZipFileSystem$Entry.readCEN
  [24] jdk.nio.zipfs.ZipFileSystem$Entry.<init>
  [25] jdk.nio.zipfs.ZipFileSystem.getEntry
  [26] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [27] jdk.nio.zipfs.ZipPath.newByteChannel
  [28] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [29] java.nio.file.Files.newByteChannel
  [30] java.nio.file.Files.newByteChannel
  [31] java.nio.file.Files.readAllBytes
  [32] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [33] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [34] cats.effect.IOFiber.$anonfun$8
  [35] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [36] cats.effect.unsafe.WorkerThread.blockOn
  [37] scala.concurrent.package$.blocking
  [38] cats.effect.IOFiber.runLoop
  [39] cats.effect.IOFiber.execR
  [40] cats.effect.IOFiber.run
  [41] cats.effect.unsafe.WorkerThread.run

--- 50141977 ns (0.02%), 5 samples
  [ 0] zio_ready?[zfs]_[k]
  [ 1] zio_wait?[zfs]_[k]
  [ 2] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 3] dmu_read_uio_dnode?[zfs]_[k]
  [ 4] dmu_read_uio_dbuf?[zfs]_[k]
  [ 5] zfs_read?[zfs]_[k]
  [ 6] zpl_iter_read?[zfs]_[k]
  [ 7] new_sync_read_[k]
  [ 8] vfs_read_[k]
  [ 9] __x64_sys_pread64_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] __libc_pread64
  [13] sun.nio.ch.FileDispatcherImpl.pread0
  [14] sun.nio.ch.FileDispatcherImpl.pread
  [15] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [16] sun.nio.ch.IOUtil.read
  [17] sun.nio.ch.IOUtil.read
  [18] sun.nio.ch.FileChannelImpl.readInternal
  [19] sun.nio.ch.FileChannelImpl.read
  [20] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [21] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [22] jdk.nio.zipfs.ZipFileSystem$Entry.readLocEXTT
  [23] jdk.nio.zipfs.ZipFileSystem$Entry.readExtra
  [24] jdk.nio.zipfs.ZipFileSystem$Entry.readCEN
  [25] jdk.nio.zipfs.ZipFileSystem$Entry.<init>
  [26] jdk.nio.zipfs.ZipFileSystem.getEntry
  [27] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [28] jdk.nio.zipfs.ZipPath.newByteChannel
  [29] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [30] java.nio.file.Files.newByteChannel
  [31] java.nio.file.Files.newByteChannel
  [32] java.nio.file.Files.readAllBytes
  [33] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [34] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [35] cats.effect.IOFiber.$anonfun$8
  [36] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [37] cats.effect.unsafe.WorkerThread.blockOn
  [38] scala.concurrent.package$.blocking
  [39] cats.effect.IOFiber.runLoop
  [40] cats.effect.IOFiber.execR
  [41] cats.effect.IOFiber.run
  [42] cats.effect.unsafe.WorkerThread.run

--- 50141273 ns (0.02%), 5 samples
  [ 0] G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*)
  [ 1] MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&) const
  [ 2] MemAllocator::allocate() const
  [ 3] TypeArrayKlass::allocate_common(int, bool, JavaThread*)
  [ 4] JVMCIRuntime::new_array_common(JavaThread*, Klass*, int, bool)
  [ 5] java.io.InputStream.readNBytes
  [ 6] java.io.InputStream.readAllBytes
  [ 7] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [ 8] jdk.nio.zipfs.ZipPath.newByteChannel
  [ 9] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [10] java.nio.file.Files.newByteChannel
  [11] java.nio.file.Files.newByteChannel
  [12] java.nio.file.Files.readAllBytes
  [13] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [14] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [15] cats.effect.IOFiber.$anonfun$8
  [16] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [17] cats.effect.unsafe.WorkerThread.blockOn
  [18] scala.concurrent.package$.blocking
  [19] cats.effect.IOFiber.runLoop
  [20] cats.effect.IOFiber.execR
  [21] cats.effect.IOFiber.run
  [22] cats.effect.unsafe.WorkerThread.run

--- 50137620 ns (0.02%), 5 samples
  [ 0] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 1] dmu_read_uio_dnode?[zfs]_[k]
  [ 2] dmu_read_uio_dbuf?[zfs]_[k]
  [ 3] zfs_read?[zfs]_[k]
  [ 4] zpl_iter_read?[zfs]_[k]
  [ 5] new_sync_read_[k]
  [ 6] vfs_read_[k]
  [ 7] __x64_sys_pread64_[k]
  [ 8] do_syscall_64_[k]
  [ 9] entry_SYSCALL_64_after_hwframe_[k]
  [10] __libc_pread64
  [11] sun.nio.ch.FileDispatcherImpl.pread0
  [12] sun.nio.ch.FileDispatcherImpl.pread
  [13] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [14] sun.nio.ch.IOUtil.read
  [15] sun.nio.ch.IOUtil.read
  [16] sun.nio.ch.FileChannelImpl.readInternal
  [17] sun.nio.ch.FileChannelImpl.read
  [18] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [19] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [20] jdk.nio.zipfs.ZipFileSystem$2.fill
  [21] java.util.zip.InflaterInputStream.read
  [22] java.io.InputStream.readNBytes
  [23] java.io.InputStream.readAllBytes
  [24] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [25] jdk.nio.zipfs.ZipPath.newByteChannel
  [26] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [27] java.nio.file.Files.newByteChannel
  [28] java.nio.file.Files.newByteChannel
  [29] java.nio.file.Files.readAllBytes
  [30] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [31] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [32] cats.effect.IOFiber.$anonfun$8
  [33] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [34] cats.effect.unsafe.WorkerThread.blockOn
  [35] scala.concurrent.package$.blocking
  [36] cats.effect.IOFiber.runLoop
  [37] cats.effect.IOFiber.execR
  [38] cats.effect.IOFiber.run
  [39] cats.effect.unsafe.WorkerThread.run

--- 50134261 ns (0.02%), 5 samples
  [ 0] jdk.internal.misc.Unsafe.unpark
  [ 1] java.util.concurrent.locks.LockSupport.unpark
  [ 2] java.util.concurrent.LinkedTransferQueue$Node.tryMatch
  [ 3] java.util.concurrent.LinkedTransferQueue.xfer
  [ 4] java.util.concurrent.LinkedTransferQueue.transfer
  [ 5] cats.effect.unsafe.WorkerThread.blockOn
  [ 6] scala.concurrent.package$.blocking
  [ 7] cats.effect.IOFiber.runLoop
  [ 8] cats.effect.IOFiber.execR
  [ 9] cats.effect.IOFiber.run
  [10] cats.effect.unsafe.WorkerThread.run

--- 50131607 ns (0.02%), 5 samples
  [ 0] CollectedHeap::supports_object_pinning() const
  [ 1] Java_java_util_zip_Inflater_inflateBytesBytes
  [ 2] java.util.zip.Inflater.inflateBytesBytes
  [ 3] java.util.zip.Inflater.inflate
  [ 4] java.util.zip.InflaterInputStream.read
  [ 5] java.io.InputStream.readNBytes
  [ 6] java.io.InputStream.readAllBytes
  [ 7] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [ 8] jdk.nio.zipfs.ZipPath.newByteChannel
  [ 9] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [10] java.nio.file.Files.newByteChannel
  [11] java.nio.file.Files.newByteChannel
  [12] java.nio.file.Files.readAllBytes
  [13] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [14] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [15] cats.effect.IOFiber.$anonfun$8
  [16] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [17] cats.effect.unsafe.WorkerThread.blockOn
  [18] scala.concurrent.package$.blocking
  [19] cats.effect.IOFiber.runLoop
  [20] cats.effect.IOFiber.execR
  [21] cats.effect.IOFiber.run
  [22] cats.effect.unsafe.WorkerThread.run

--- 50128998 ns (0.02%), 5 samples
  [ 0] jni_GetPrimitiveArrayCritical
  [ 1] java.util.zip.Inflater.inflateBytesBytes
  [ 2] java.util.zip.Inflater.inflate
  [ 3] java.util.zip.InflaterInputStream.read
  [ 4] java.io.InputStream.readNBytes
  [ 5] java.io.InputStream.readAllBytes
  [ 6] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [ 7] jdk.nio.zipfs.ZipPath.newByteChannel
  [ 8] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [ 9] java.nio.file.Files.newByteChannel
  [10] java.nio.file.Files.newByteChannel
  [11] java.nio.file.Files.readAllBytes
  [12] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [13] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [14] cats.effect.IOFiber.$anonfun$8
  [15] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [16] cats.effect.unsafe.WorkerThread.blockOn
  [17] scala.concurrent.package$.blocking
  [18] cats.effect.IOFiber.runLoop
  [19] cats.effect.IOFiber.execR
  [20] cats.effect.IOFiber.run
  [21] cats.effect.unsafe.WorkerThread.run

--- 50128017 ns (0.02%), 5 samples
  [ 0] jni_ReleasePrimitiveArrayCritical
  [ 1] java.util.zip.Inflater.inflateBytesBytes
  [ 2] java.util.zip.Inflater.inflate
  [ 3] java.util.zip.InflaterInputStream.read
  [ 4] java.io.InputStream.readNBytes
  [ 5] java.io.InputStream.readAllBytes
  [ 6] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [ 7] jdk.nio.zipfs.ZipPath.newByteChannel
  [ 8] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [ 9] java.nio.file.Files.newByteChannel
  [10] java.nio.file.Files.newByteChannel
  [11] java.nio.file.Files.readAllBytes
  [12] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [13] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [14] cats.effect.IOFiber.$anonfun$8
  [15] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [16] cats.effect.unsafe.WorkerThread.blockOn
  [17] scala.concurrent.package$.blocking
  [18] cats.effect.IOFiber.runLoop
  [19] cats.effect.IOFiber.execR
  [20] cats.effect.IOFiber.run
  [21] cats.effect.unsafe.WorkerThread.run

--- 50121047 ns (0.02%), 5 samples
  [ 0] MemAllocator::allocate() const
  [ 1] TypeArrayKlass::allocate_common(int, bool, JavaThread*)
  [ 2] JVMCIRuntime::new_array_common(JavaThread*, Klass*, int, bool)
  [ 3] java.io.InputStream.readNBytes
  [ 4] java.io.InputStream.readAllBytes
  [ 5] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [ 6] jdk.nio.zipfs.ZipPath.newByteChannel
  [ 7] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [ 8] java.nio.file.Files.newByteChannel
  [ 9] java.nio.file.Files.newByteChannel
  [10] java.nio.file.Files.readAllBytes
  [11] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [12] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [13] cats.effect.IOFiber.$anonfun$8
  [14] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [15] cats.effect.unsafe.WorkerThread.blockOn
  [16] scala.concurrent.package$.blocking
  [17] cats.effect.IOFiber.runLoop
  [18] cats.effect.IOFiber.execR
  [19] cats.effect.IOFiber.run
  [20] cats.effect.unsafe.WorkerThread.run

--- 50120627 ns (0.02%), 5 samples
  [ 0] inflate
  [ 1] java.util.zip.Inflater.inflateBytesBytes
  [ 2] java.util.zip.Inflater.inflate
  [ 3] java.util.zip.InflaterInputStream.read
  [ 4] java.io.InputStream.readNBytes
  [ 5] java.io.InputStream.readAllBytes
  [ 6] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [ 7] jdk.nio.zipfs.ZipPath.newByteChannel
  [ 8] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [ 9] java.nio.file.Files.newByteChannel
  [10] java.nio.file.Files.newByteChannel
  [11] java.nio.file.Files.readAllBytes
  [12] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [13] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [14] cats.effect.IOFiber.$anonfun$8
  [15] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [16] cats.effect.unsafe.WorkerThread.blockOn
  [17] scala.concurrent.package$.blocking
  [18] cats.effect.IOFiber.runLoop
  [19] cats.effect.IOFiber.execR
  [20] cats.effect.IOFiber.run
  [21] cats.effect.unsafe.WorkerThread.run

--- 50120010 ns (0.02%), 5 samples
  [ 0] __libc_pread64
  [ 1] sun.nio.ch.FileDispatcherImpl.pread0
  [ 2] sun.nio.ch.FileDispatcherImpl.pread
  [ 3] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [ 4] sun.nio.ch.IOUtil.read
  [ 5] sun.nio.ch.IOUtil.read
  [ 6] sun.nio.ch.FileChannelImpl.readInternal
  [ 7] sun.nio.ch.FileChannelImpl.read
  [ 8] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [ 9] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [10] jdk.nio.zipfs.ZipFileSystem$Entry.readLocEXTT
  [11] jdk.nio.zipfs.ZipFileSystem$Entry.readExtra
  [12] jdk.nio.zipfs.ZipFileSystem$Entry.readCEN
  [13] jdk.nio.zipfs.ZipFileSystem$Entry.<init>
  [14] jdk.nio.zipfs.ZipFileSystem.getEntry
  [15] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [16] jdk.nio.zipfs.ZipPath.newByteChannel
  [17] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [18] java.nio.file.Files.newByteChannel
  [19] java.nio.file.Files.newByteChannel
  [20] java.nio.file.Files.readAllBytes
  [21] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [22] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [23] cats.effect.IOFiber.$anonfun$8
  [24] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [25] cats.effect.unsafe.WorkerThread.blockOn
  [26] scala.concurrent.package$.blocking
  [27] cats.effect.IOFiber.runLoop
  [28] cats.effect.IOFiber.execR
  [29] cats.effect.IOFiber.run
  [30] cats.effect.unsafe.WorkerThread.run

--- 50119608 ns (0.02%), 5 samples
  [ 0] SharedRuntime::on_slowpath_allocation_exit(JavaThread*)
  [ 1] jdk.nio.zipfs.ZipFileSystem.getInflater
  [ 2] jdk.nio.zipfs.ZipFileSystem.getInputStream
  [ 3] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [ 4] jdk.nio.zipfs.ZipPath.newByteChannel
  [ 5] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [ 6] java.nio.file.Files.newByteChannel
  [ 7] java.nio.file.Files.newByteChannel
  [ 8] java.nio.file.Files.readAllBytes
  [ 9] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [10] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [11] cats.effect.IOFiber.$anonfun$8
  [12] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [13] cats.effect.unsafe.WorkerThread.blockOn
  [14] scala.concurrent.package$.blocking
  [15] cats.effect.IOFiber.runLoop
  [16] cats.effect.IOFiber.execR
  [17] cats.effect.IOFiber.run
  [18] cats.effect.unsafe.WorkerThread.run

--- 50108915 ns (0.02%), 5 samples
  [ 0] java.util.HashMap.hash
  [ 1] java.util.HashMap.remove
  [ 2] java.util.HashSet.remove
  [ 3] java.util.Collections$SynchronizedCollection.remove
  [ 4] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.close
  [ 5] jdk.nio.zipfs.ZipFileSystem$2.close
  [ 6] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [ 7] jdk.nio.zipfs.ZipPath.newByteChannel
  [ 8] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [ 9] java.nio.file.Files.newByteChannel
  [10] java.nio.file.Files.newByteChannel
  [11] java.nio.file.Files.readAllBytes
  [12] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [13] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [14] cats.effect.IOFiber.$anonfun$8
  [15] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [16] cats.effect.unsafe.WorkerThread.blockOn
  [17] scala.concurrent.package$.blocking
  [18] cats.effect.IOFiber.runLoop
  [19] cats.effect.IOFiber.execR
  [20] cats.effect.IOFiber.run
  [21] cats.effect.unsafe.WorkerThread.run

--- 50108135 ns (0.02%), 5 samples
  [ 0] __fsnotify_parent_[k]
  [ 1] vfs_read_[k]
  [ 2] __x64_sys_pread64_[k]
  [ 3] do_syscall_64_[k]
  [ 4] entry_SYSCALL_64_after_hwframe_[k]
  [ 5] __libc_pread64
  [ 6] sun.nio.ch.FileDispatcherImpl.pread0
  [ 7] sun.nio.ch.FileDispatcherImpl.pread
  [ 8] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [ 9] sun.nio.ch.IOUtil.read
  [10] sun.nio.ch.IOUtil.read
  [11] sun.nio.ch.FileChannelImpl.readInternal
  [12] sun.nio.ch.FileChannelImpl.read
  [13] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [14] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [15] jdk.nio.zipfs.ZipFileSystem$Entry.readLocEXTT
  [16] jdk.nio.zipfs.ZipFileSystem$Entry.readExtra
  [17] jdk.nio.zipfs.ZipFileSystem$Entry.readCEN
  [18] jdk.nio.zipfs.ZipFileSystem$Entry.<init>
  [19] jdk.nio.zipfs.ZipFileSystem.getEntry
  [20] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [21] jdk.nio.zipfs.ZipPath.newByteChannel
  [22] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [23] java.nio.file.Files.newByteChannel
  [24] java.nio.file.Files.newByteChannel
  [25] java.nio.file.Files.readAllBytes
  [26] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [27] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [28] cats.effect.IOFiber.$anonfun$8
  [29] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [30] cats.effect.unsafe.WorkerThread.blockOn
  [31] scala.concurrent.package$.blocking
  [32] cats.effect.IOFiber.runLoop
  [33] cats.effect.IOFiber.execR
  [34] cats.effect.IOFiber.run
  [35] cats.effect.unsafe.WorkerThread.run

          ns  percent  samples  top
  ----------  -------  -------  ---
138495548490   65.74%    13817  /usr/lib/x86_64-linux-gnu/libz.so.1.2.11
  8000018963    3.80%      798  inflate
  4501631700    2.14%      449  __memset_avx2_unaligned_erms
  3848479190    1.83%      384  java.lang.System.arraycopy
  3538642953    1.68%      353  java.io.InputStream.readNBytes
  2385666797    1.13%      238  java.util.Arrays.copyOfRange
  1914588290    0.91%      189  _raw_spin_unlock_irqrestore_[k]
  1533649513    0.73%      153  java.nio.file.Files.read
  1300906856    0.62%      129  syscall_enter_from_user_mode_[k]
  1228171864    0.58%      122  copy_user_generic_string_[k]
  1102814262    0.52%      110  __memmove_avx_unaligned_erms
  1082544770    0.51%      108  java.lang.StringCoding.hasNegatives
   932714683    0.44%       92  pthread_cond_signal@@GLIBC_2.3.2
   872259844    0.41%       87  java.util.zip.InflaterInputStream.<init>
   682272697    0.32%       68  java.util.concurrent.ConcurrentLinkedQueue.poll
   632132030    0.30%       63  mutex_unlock_[k]
   572335657    0.27%       57  __vfprintf_internal
   552225900    0.26%       55  _raw_spin_lock_[k]
   521697728    0.25%       52  find_vmap_area_[k]
   521177450    0.25%       52  jbyte_disjoint_arraycopy
   515535215    0.24%       51  futex_wake_[k]
   501673257    0.24%       50  percpu_counter_add_batch_[k]
   491666979    0.23%       49  mutex_lock_[k]
   482809288    0.23%       48  jdk.internal.misc.Unsafe.compareAndSetReference
   411394287    0.20%       41  cats.effect.unsafe.ScalQueue.poll
   411249356    0.20%       41  java.util.concurrent.ConcurrentLinkedQueue.first
   372528483    0.18%       37  __schedule_[k]
   371598066    0.18%       37  _IO_default_xsputn
   367352222    0.17%       36  [vdso]
   361489461    0.17%       36  strncpy_from_user_[k]
   340965640    0.16%       34  cats.effect.unsafe.WorkStealingThreadPool.stealFromOtherWorkerThread
   323617962    0.15%       32  futex_q_lock_[k]
   321094930    0.15%       32  __kmalloc_node_[k]
   292628960    0.14%       29  __get_user_nocheck_4_[k]
   290966935    0.14%       29  cats.effect.unsafe.WorkerThread.run
   261080211    0.12%       26  __GI__IO_setb
   254170090    0.12%       25  __x64_sys_futex_[k]
   251211526    0.12%       25  char* UNICODE::as_utf8<signed char>(signed char const*, int&)
   233711902    0.11%       23  pthread_mutex_trylock@@GLIBC_2.34
   230831018    0.11%       23  kmem_cache_alloc_[k]
   230764522    0.11%       23  __fsnotify_parent_[k]
   230752429    0.11%       23  zio_create?[zfs]_[k]
   230599455    0.11%       23  jni_GetPrimitiveArrayCritical
   230565398    0.11%       23  jni_ReleasePrimitiveArrayCritical
   220612127    0.10%       22  java.lang.Thread.blockedOn
   212722566    0.10%       21  Unsafe_Park
   211341585    0.10%       21  __tls_get_addr
   210873669    0.10%       21  _IO_strn_overflow
   210685584    0.10%       21  JVM_SetNativeThreadName
   210673513    0.10%       21  dmu_buf_hold_array_by_dnode?[zfs]_[k]
   210628323    0.10%       21  java.util.concurrent.LinkedTransferQueue.xfer
   200682871    0.10%       20  zio_ready?[zfs]_[k]
   200621403    0.10%       20  apparmor_file_permission_[k]
   192497676    0.09%       19  JavaThread::is_interrupted(bool)
   192184348    0.09%       19  HeapRegionManager::par_iterate(HeapRegionClosure*, HeapRegionClaimer*, unsigned int) const
   190903615    0.09%       19  ObjArrayAllocator::initialize(HeapWordImpl**) const
   190696701    0.09%       19  zio_done?[zfs]_[k]
   190594903    0.09%       19  kfree_[k]
   180642916    0.09%       18  memset_[k]
   180583579    0.09%       18  ___pthread_cond_wait
   180472928    0.09%       18  __libc_pread64
   173212511    0.08%       17  Parker::park(bool, long)
   172654187    0.08%       17  clock_gettime@@GLIBC_2.17
   170547618    0.08%       17  zio_wait?[zfs]_[k]
   170535619    0.08%       17  vfs_read_[k]
   160602303    0.08%       16  security_task_prctl_[k]
   160555559    0.08%       16  __fget_light_[k]
   160548714    0.08%       16  cats.effect.unsafe.WorkerThread.blockOn
   160528830    0.08%       16  cityhash4?[zcommon]_[k]
   160491979    0.08%       16  __GI___prctl
   160429676    0.08%       16  java.util.zip.Inflater.inflate
   153289257    0.07%       15  SafeThreadsListPtr::release_stable_list()
   151738674    0.07%       15  void WeakProcessor::Task::work<G1STWIsAliveClosure, G1KeepAliveClosure>(unsigned int, G1STWIsAliveClosure*, G1KeepAliveClosure*)
   150824631    0.07%       15  jdk.internal.misc.Unsafe.park
   150547907    0.07%       15  zrl_add_impl?[zfs]_[k]
   142276393    0.07%       14  AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<544868ul, G1BarrierSet>, (AccessInternal::BarrierType)2, 544868ul>::oop_access_barrier(void*)
   141362454    0.07%       14  ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**)
   140822489    0.07%       14  futex_wake_mark_[k]
   140587213    0.07%       14  _IO_no_init
   140520191    0.07%       14  __strchrnul_avx2
   140492803    0.07%       14  os::set_native_thread_name(char const*)
   140458780    0.07%       14  zpl_iter_read?[zfs]_[k]
   140370185    0.07%       14  sun.nio.ch.Util$BufferCache.get
   139999564    0.07%       14  GreyObjectsWalker_walkGreyObjects_eb32754f646620dd6416e9c72990a79fa796f775
   133690610    0.06%       13  java.lang.ThreadLocal$ThreadLocalMap.getEntry
   133056689    0.06%       13  ___pthread_cond_timedwait64
   131419090    0.06%       13  futex_hash_[k]
   130574061    0.06%       13  java_lang_String::as_utf8_string(oopDesc*)
   130530080    0.06%       13  os::vsnprintf(char*, unsigned long, char const*, __va_list_tag*)
   130435712    0.06%       13  dbuf_hold_impl?[zfs]_[k]
   130415169    0.06%       13  multilist_remove?[zfs]_[k]
   130403924    0.06%       13  zfs_read?[zfs]_[k]
   130348614    0.06%       13  java.util.zip.Inflater.inflateBytesBytes
   130309852    0.06%       13  TypeArrayKlass::allocate_common(int, bool, JavaThread*)
   121244676    0.06%       12  ___pthread_mutex_lock
   120914530    0.06%       12  MemAllocator::allocate() const
   120451853    0.06%       12  java.util.concurrent.ConcurrentSkipListMap.doRemoveFirstEntry
   120438364    0.06%       12  spl_mutex_set_owner?[zfs]_[k]
   120347863    0.06%       12  java.util.HashMap.hash
   111910499    0.05%       11  jdk.internal.misc.Unsafe.unpark
   110652400    0.05%       11  futex_wait_[k]
   110597815    0.05%       11  Unsafe_Unpark
   110478145    0.05%       11  yama_task_prctl_[k]
   110418723    0.05%       11  java.lang.Thread.setName
   110411800    0.05%       11  kmem_cache_free_[k]
   110374502    0.05%       11  dbuf_rele_and_unlock?[zfs]_[k]
   110362193    0.05%       11  down_read_[k]
   110345471    0.05%       11  arc_buf_access?[zfs]_[k]
   110319696    0.05%       11  __list_del_entry?[zfs]_[k]
   101218044    0.05%       10  SharedRuntime::on_slowpath_allocation_exit(JavaThread*)
   100498715    0.05%       10  check_stack_object_[k]
   100456146    0.05%       10  cap_task_prctl_[k]
   100430291    0.05%       10  _IO_old_init
   100398453    0.05%       10  _IO_str_init_static_internal
   100368802    0.05%       10  dbuf_find?[zfs]_[k]
   100358617    0.05%       10  _raw_spin_unlock_[k]
   100356486    0.05%       10  dbuf_cache_multilist_index_func?[zfs]_[k]
   100327474    0.05%       10  __check_object_size.part.0_[k]
   100277929    0.05%       10  new_sync_read_[k]
    91668711    0.04%        9  pthread_mutex_unlock@@GLIBC_2.2.5
    91250067    0.04%        9  wake_q_add_safe_[k]
    90964606    0.04%        9  futex_wait_setup_[k]
    90825395    0.04%        9  MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&) const
    90487555    0.04%        9  JVMCIRuntime::identity_hash_code(JavaThread*, oopDesc*)
    90369427    0.04%        9  java.util.concurrent.ConcurrentSkipListMap.unlinkNode
    90337307    0.04%        9  __do_sys_prctl_[k]
    90328303    0.04%        9  __vsnprintf_internal
    90319246    0.04%        9  pthread_setname_np@GLIBC_2.12
    90317721    0.04%        9  zio_wait_for_children?[zfs]_[k]
    90312617    0.04%        9  int UNICODE::utf8_length<signed char>(signed char const*, int)
    90298362    0.04%        9  dmu_zfetch_prepare?[zfs]_[k]
    90287785    0.04%        9  ThreadsListHandle::ThreadsListHandle(Thread*)
    90287071    0.04%        9  jdk.nio.zipfs.ZipFileSystem$Entry.readCEN
    90276923    0.04%        9  __pthread_self
    90217811    0.04%        9  __memcpy_avx_unaligned
    90214113    0.04%        9  JVMCIRuntime::new_array_common(JavaThread*, Klass*, int, bool)
    90202232    0.04%        9  sun.nio.ch.NativeThreadSet.remove
    80880679    0.04%        8  G1ScanHRForRegionClosure::scan_heap_roots(HeapRegion*)
    80807046    0.04%        8  G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*)
    80785982    0.04%        8  futex_wait_queue_[k]
    80544957    0.04%        8  JfrObjectAllocationSample::send_event(Klass const*, unsigned long, bool, Thread*)
    80285040    0.04%        8  spl_kmem_alloc_impl?[spl]_[k]
    80283978    0.04%        8  cats.effect.unsafe.WorkStealingThreadPool.notifyIfWorkPending
    80276481    0.04%        8  rrm_enter_read?[zfs]_[k]
    80262375    0.04%        8  __rcu_read_unlock_[k]
    80250946    0.04%        8  cats.effect.unsafe.LocalQueue.stealInto
    80247706    0.04%        8  Java_java_util_zip_Inflater_inflateBytesBytes
    80246660    0.04%        8  CollectedHeap::tlab_alloc_reserve() const
    80242156    0.04%        8  fsnotify_perm.part.0_[k]
    80233087    0.04%        8  __x64_sys_pread64_[k]
    80221415    0.04%        8  CollectedHeap::supports_object_pinning() const
    80205852    0.04%        8  checkInflateStatus
    80203339    0.04%        8  sun.nio.ch.ChannelInputStream.read
    80188850    0.04%        8  __GI___sched_yield
    71795174    0.03%        7  __hrtimer_init_[k]
    71184118    0.03%        7  get_futex_key_[k]
    70752059    0.03%        7  CardTableBarrierSet::on_slowpath_allocation_exit(JavaThread*, oopDesc*)
    70273122    0.03%        7  java.lang.Thread.setNativeName
    70254779    0.03%        7  taskq_init_ent?[spl]_[k]
    70253749    0.03%        7  lockref_get_not_zero_[k]
    70252879    0.03%        7  RW_WRITE_HELD?[zfs]_[k]
    70252362    0.03%        7  zio_walk_parents?[zfs]_[k]
    70242288    0.03%        7  dataset_kstats_update_read_kstats?[zfs]_[k]
    70241739    0.03%        7  zfs_exit_fs?[zfs]_[k]
    70239311    0.03%        7  cats.effect.unsafe.LocalQueue.isEmpty
    70235775    0.03%        7  memcg_slab_free_hook_[k]
    70231407    0.03%        7  list_remove_head?[zfs]_[k]
    70230265    0.03%        7  arc_access?[zfs]_[k]
    70223940    0.03%        7  cats.effect.unsafe.WorkerThread.indexTransfer
    70221108    0.03%        7  __vsnprintf
    70219535    0.03%        7  zpl_file_accessed?[zfs]_[k]
    70214047    0.03%        7  cats.effect.unsafe.ScalQueue.isEmpty
    70209560    0.03%        7  list_create.constprop.0?[zfs]_[k]
    70206357    0.03%        7  fsnotify_[k]
    70202688    0.03%        7  do_sched_yield_[k]
    70200126    0.03%        7  Java_sun_nio_ch_FileDispatcherImpl_pread0
    70193161    0.03%        7  spl_mutex_clear_owner?[zfs]_[k]
    70191068    0.03%        7  AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<548964ul, G1BarrierSet>, (AccessInternal::BarrierType)2, 548964ul>::oop_access_barrier(void*)
    70188619    0.03%        7  java.util.concurrent.locks.ReentrantReadWriteLock$Sync.tryAcquireShared
    70182641    0.03%        7  java.util.concurrent.atomic.AtomicBoolean.get
    70154913    0.03%        7  sun.nio.ch.FileDispatcherImpl.pread0
    70150908    0.03%        7  G1CollectedHeap::mem_allocate(unsigned long, bool*)
    61390312    0.03%        6  __GI___pthread_mutex_unlock_usercnt
    61185398    0.03%        6  plist_add_[k]
    60711021    0.03%        6  HeapRegionClaimer::claim_region(unsigned int)
    60672023    0.03%        6  nmethod::fix_oop_relocations(unsigned char*, unsigned char*, bool)
    60516124    0.03%        6  do_syscall_64_[k]
    60309044    0.03%        6  java.lang.StringBuilder.toString
    60280593    0.03%        6  G1FromCardCache::clear(unsigned int)
    60243002    0.03%        6  dbuf_read?[zfs]_[k]
    60236359    0.03%        6  read_tsc_[k]
    60230364    0.03%        6  memcg_slab_post_alloc_hook_[k]
    60228001    0.03%        6  spl_kmem_cache_free?[spl]_[k]
    60214899    0.03%        6  proc_comm_connector_[k]
    60206402    0.03%        6  __cond_resched_[k]
    60202568    0.03%        6  ResourceArea::rollback_to(ResourceArea::SavedState const&)
    60199564    0.03%        6  arch_atomic64_sub_return.constprop.0?[zfs]_[k]
    60198487    0.03%        6  __cv_destroy?[spl]_[k]
    60188693    0.03%        6  _copy_to_iter_[k]
    60187606    0.03%        6  INIT_LIST_HEAD?[zfs]_[k]
