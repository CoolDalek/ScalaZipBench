--- Execution profile ---
Total samples       : 20607
unknown_Java        : 6 (0.03%)
not_walkable_Java   : 1 (0.00%)

--- 84287940328 ns (40.89%), 8429 samples
  [ 0] /usr/lib/x86_64-linux-gnu/libz.so.1.2.11
  [ 1] java.util.zip.Inflater.inflateBytesBytes
  [ 2] java.util.zip.Inflater.inflate
  [ 3] java.util.zip.InflaterInputStream.read
  [ 4] java.io.InputStream.readNBytes
  [ 5] java.io.InputStream.readAllBytes
  [ 6] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [ 7] jdk.nio.zipfs.ZipPath.newByteChannel
  [ 8] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [ 9] java.nio.file.Files.newByteChannel
  [10] java.nio.file.Files.newByteChannel
  [11] java.nio.file.Files.readAllBytes
  [12] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [13] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [14] cats.effect.IOFiber.$anonfun$8
  [15] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [16] cats.effect.unsafe.WorkerThread.blockOn
  [17] scala.concurrent.package$.blocking
  [18] cats.effect.IOFiber.runLoop
  [19] cats.effect.IOFiber.execR
  [20] cats.effect.IOFiber.run
  [21] cats.effect.unsafe.WorkerThread.run

--- 67417119917 ns (32.71%), 6744 samples
  [ 0] /usr/lib/x86_64-linux-gnu/libz.so.1.2.11
  [ 1] [unknown]
  [ 2] java.util.zip.Inflater.inflateBytesBytes
  [ 3] java.util.zip.Inflater.inflate
  [ 4] java.util.zip.InflaterInputStream.read
  [ 5] java.io.InputStream.readNBytes
  [ 6] java.io.InputStream.readAllBytes
  [ 7] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [ 8] jdk.nio.zipfs.ZipPath.newByteChannel
  [ 9] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [10] java.nio.file.Files.newByteChannel
  [11] java.nio.file.Files.newByteChannel
  [12] java.nio.file.Files.readAllBytes
  [13] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [14] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [15] cats.effect.IOFiber.$anonfun$8
  [16] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [17] cats.effect.unsafe.WorkerThread.blockOn
  [18] scala.concurrent.package$.blocking
  [19] cats.effect.IOFiber.runLoop
  [20] cats.effect.IOFiber.execR
  [21] cats.effect.IOFiber.run
  [22] cats.effect.unsafe.WorkerThread.run

--- 9089925072 ns (4.41%), 909 samples
  [ 0] inflate
  [ 1] java.util.zip.Inflater.inflateBytesBytes
  [ 2] java.util.zip.Inflater.inflate
  [ 3] java.util.zip.InflaterInputStream.read
  [ 4] java.io.InputStream.readNBytes
  [ 5] java.io.InputStream.readAllBytes
  [ 6] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [ 7] jdk.nio.zipfs.ZipPath.newByteChannel
  [ 8] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [ 9] java.nio.file.Files.newByteChannel
  [10] java.nio.file.Files.newByteChannel
  [11] java.nio.file.Files.readAllBytes
  [12] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [13] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [14] cats.effect.IOFiber.$anonfun$8
  [15] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [16] cats.effect.unsafe.WorkerThread.blockOn
  [17] scala.concurrent.package$.blocking
  [18] cats.effect.IOFiber.runLoop
  [19] cats.effect.IOFiber.execR
  [20] cats.effect.IOFiber.run
  [21] cats.effect.unsafe.WorkerThread.run

--- 3564785793 ns (1.73%), 356 samples
  [ 0] java.util.Arrays.copyOfRange
  [ 1] java.lang.String.<init>
  [ 2] java.lang.String.<init>
  [ 3] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [ 4] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [ 5] cats.effect.IOFiber.$anonfun$8
  [ 6] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [ 7] cats.effect.unsafe.WorkerThread.blockOn
  [ 8] scala.concurrent.package$.blocking
  [ 9] cats.effect.IOFiber.runLoop
  [10] cats.effect.IOFiber.execR
  [11] cats.effect.IOFiber.run
  [12] cats.effect.unsafe.WorkerThread.run

--- 3083350215 ns (1.50%), 308 samples
  [ 0] java.lang.System.arraycopy
  [ 1] java.nio.HeapByteBuffer.put
  [ 2] jdk.nio.zipfs.ByteArrayChannel.read
  [ 3] sun.nio.ch.ChannelInputStream.read
  [ 4] sun.nio.ch.ChannelInputStream.read
  [ 5] sun.nio.ch.ChannelInputStream.read
  [ 6] java.nio.file.Files.read
  [ 7] java.nio.file.Files.readAllBytes
  [ 8] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [ 9] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [10] cats.effect.IOFiber.$anonfun$8
  [11] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [12] cats.effect.unsafe.WorkerThread.blockOn
  [13] scala.concurrent.package$.blocking
  [14] cats.effect.IOFiber.runLoop
  [15] cats.effect.IOFiber.execR
  [16] cats.effect.IOFiber.run
  [17] cats.effect.unsafe.WorkerThread.run

--- 3063303824 ns (1.49%), 306 samples
  [ 0] __memset_avx2_unaligned_erms
  [ 1] MemAllocator::allocate() const
  [ 2] TypeArrayKlass::allocate_common(int, bool, JavaThread*)
  [ 3] JVMCIRuntime::new_array_common(JavaThread*, Klass*, int, bool)
  [ 4] java.io.InputStream.readNBytes
  [ 5] java.io.InputStream.readAllBytes
  [ 6] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [ 7] jdk.nio.zipfs.ZipPath.newByteChannel
  [ 8] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [ 9] java.nio.file.Files.newByteChannel
  [10] java.nio.file.Files.newByteChannel
  [11] java.nio.file.Files.readAllBytes
  [12] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [13] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [14] cats.effect.IOFiber.$anonfun$8
  [15] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [16] cats.effect.unsafe.WorkerThread.blockOn
  [17] scala.concurrent.package$.blocking
  [18] cats.effect.IOFiber.runLoop
  [19] cats.effect.IOFiber.execR
  [20] cats.effect.IOFiber.run
  [21] cats.effect.unsafe.WorkerThread.run

--- 2623466628 ns (1.27%), 262 samples
  [ 0] java.lang.System.arraycopy
  [ 1] java.io.InputStream.readNBytes
  [ 2] java.io.InputStream.readAllBytes
  [ 3] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [ 4] jdk.nio.zipfs.ZipPath.newByteChannel
  [ 5] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [ 6] java.nio.file.Files.newByteChannel
  [ 7] java.nio.file.Files.newByteChannel
  [ 8] java.nio.file.Files.readAllBytes
  [ 9] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [10] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [11] cats.effect.IOFiber.$anonfun$8
  [12] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [13] cats.effect.unsafe.WorkerThread.blockOn
  [14] scala.concurrent.package$.blocking
  [15] cats.effect.IOFiber.runLoop
  [16] cats.effect.IOFiber.execR
  [17] cats.effect.IOFiber.run
  [18] cats.effect.unsafe.WorkerThread.run

--- 2233638001 ns (1.08%), 223 samples
  [ 0] __memset_avx2_unaligned_erms
  [ 1] MemAllocator::allocate() const
  [ 2] TypeArrayKlass::allocate_common(int, bool, JavaThread*)
  [ 3] Runtime1::new_type_array(JavaThread*, Klass*, int)
  [ 4] java.nio.file.Files.read
  [ 5] java.nio.file.Files.readAllBytes
  [ 6] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [ 7] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [ 8] cats.effect.IOFiber.$anonfun$8
  [ 9] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [10] cats.effect.unsafe.WorkerThread.blockOn
  [11] scala.concurrent.package$.blocking
  [12] cats.effect.IOFiber.runLoop
  [13] cats.effect.IOFiber.execR
  [14] cats.effect.IOFiber.run
  [15] cats.effect.unsafe.WorkerThread.run

--- 1801104149 ns (0.87%), 179 samples
  [ 0] __memcpy_sse2_unaligned_erms
  [ 1] G1ParScanThreadState::steal_and_trim_queue(GenericTaskQueueSet<OverflowTaskQueue<ScannerTask, (MEMFLAGS)5, 131072u>, (MEMFLAGS)5>*)
  [ 2] G1ParEvacuateFollowersClosure::do_void()
  [ 3] G1EvacuateRegionsTask::evacuate_live_objects(G1ParScanThreadState*, unsigned int)
  [ 4] G1EvacuateRegionsBaseTask::work(unsigned int)
  [ 5] GangWorker::loop()
  [ 6] GangWorker::run()
  [ 7] Thread::call_run()
  [ 8] thread_native_entry(Thread*)
  [ 9] start_thread

--- 1792360341 ns (0.87%), 179 samples
  [ 0] java.lang.StringCoding.hasNegatives
  [ 1] java.lang.String.<init>
  [ 2] java.lang.String.<init>
  [ 3] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [ 4] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [ 5] cats.effect.IOFiber.$anonfun$8
  [ 6] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [ 7] cats.effect.unsafe.WorkerThread.blockOn
  [ 8] scala.concurrent.package$.blocking
  [ 9] cats.effect.IOFiber.runLoop
  [10] cats.effect.IOFiber.execR
  [11] cats.effect.IOFiber.run
  [12] cats.effect.unsafe.WorkerThread.run

--- 1759904311 ns (0.85%), 176 samples
  [ 0] java.io.InputStream.readNBytes
  [ 1] java.io.InputStream.readAllBytes
  [ 2] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [ 3] jdk.nio.zipfs.ZipPath.newByteChannel
  [ 4] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [ 5] java.nio.file.Files.newByteChannel
  [ 6] java.nio.file.Files.newByteChannel
  [ 7] java.nio.file.Files.readAllBytes
  [ 8] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [ 9] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [10] cats.effect.IOFiber.$anonfun$8
  [11] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [12] cats.effect.unsafe.WorkerThread.blockOn
  [13] scala.concurrent.package$.blocking
  [14] cats.effect.IOFiber.runLoop
  [15] cats.effect.IOFiber.execR
  [16] cats.effect.IOFiber.run
  [17] cats.effect.unsafe.WorkerThread.run

--- 1742296316 ns (0.85%), 174 samples
  [ 0] __memset_avx2_unaligned_erms
  [ 1] MemAllocator::allocate() const
  [ 2] TypeArrayKlass::allocate_common(int, bool, JavaThread*)
  [ 3] JVMCIRuntime::new_array_common(JavaThread*, Klass*, int, bool)
  [ 4] java.lang.String.<init>
  [ 5] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [ 6] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [ 7] cats.effect.IOFiber.$anonfun$8
  [ 8] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [ 9] cats.effect.unsafe.WorkerThread.blockOn
  [10] scala.concurrent.package$.blocking
  [11] cats.effect.IOFiber.runLoop
  [12] cats.effect.IOFiber.execR
  [13] cats.effect.IOFiber.run
  [14] cats.effect.unsafe.WorkerThread.run

--- 1582156772 ns (0.77%), 158 samples
  [ 0] java.lang.System.arraycopy
  [ 1] java.io.InputStream.readNBytes
  [ 2] java.io.InputStream.readAllBytes
  [ 3] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [ 4] jdk.nio.zipfs.ZipPath.newByteChannel
  [ 5] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [ 6] java.nio.file.Files.newByteChannel
  [ 7] java.nio.file.Files.newByteChannel
  [ 8] java.nio.file.Files.readAllBytes
  [ 9] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [10] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [11] cats.effect.IOFiber.$anonfun$8
  [12] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [13] cats.effect.unsafe.WorkerThread.blockOn
  [14] scala.concurrent.package$.blocking
  [15] cats.effect.IOFiber.runLoop
  [16] cats.effect.IOFiber.execR
  [17] cats.effect.IOFiber.run
  [18] cats.effect.unsafe.WorkerThread.run

--- 1120874453 ns (0.54%), 112 samples
  [ 0] copy_user_generic_string_[k]
  [ 1] zfs_uiomove_iter?[zfs]_[k]
  [ 2] zfs_uiomove?[zfs]_[k]
  [ 3] dmu_read_uio_dnode?[zfs]_[k]
  [ 4] dmu_read_uio_dbuf?[zfs]_[k]
  [ 5] zfs_read?[zfs]_[k]
  [ 6] zpl_iter_read?[zfs]_[k]
  [ 7] new_sync_read_[k]
  [ 8] vfs_read_[k]
  [ 9] __x64_sys_pread64_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] __libc_pread64
  [13] sun.nio.ch.FileDispatcherImpl.pread0
  [14] sun.nio.ch.FileDispatcherImpl.pread
  [15] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [16] sun.nio.ch.IOUtil.read
  [17] sun.nio.ch.IOUtil.read
  [18] sun.nio.ch.FileChannelImpl.readInternal
  [19] sun.nio.ch.FileChannelImpl.read
  [20] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [21] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [22] jdk.nio.zipfs.ZipFileSystem$2.fill
  [23] java.util.zip.InflaterInputStream.read
  [24] java.io.InputStream.readNBytes
  [25] java.io.InputStream.readAllBytes
  [26] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [27] jdk.nio.zipfs.ZipPath.newByteChannel
  [28] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [29] java.nio.file.Files.newByteChannel
  [30] java.nio.file.Files.newByteChannel
  [31] java.nio.file.Files.readAllBytes
  [32] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [33] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [34] cats.effect.IOFiber.$anonfun$8
  [35] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [36] cats.effect.unsafe.WorkerThread.blockOn
  [37] scala.concurrent.package$.blocking
  [38] cats.effect.IOFiber.runLoop
  [39] cats.effect.IOFiber.execR
  [40] cats.effect.IOFiber.run
  [41] cats.effect.unsafe.WorkerThread.run

--- 1099853168 ns (0.53%), 110 samples
  [ 0] __memmove_avx_unaligned_erms
  [ 1] java.util.zip.Inflater.inflateBytesBytes
  [ 2] java.util.zip.Inflater.inflate
  [ 3] java.util.zip.InflaterInputStream.read
  [ 4] java.io.InputStream.readNBytes
  [ 5] java.io.InputStream.readAllBytes
  [ 6] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [ 7] jdk.nio.zipfs.ZipPath.newByteChannel
  [ 8] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [ 9] java.nio.file.Files.newByteChannel
  [10] java.nio.file.Files.newByteChannel
  [11] java.nio.file.Files.readAllBytes
  [12] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [13] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [14] cats.effect.IOFiber.$anonfun$8
  [15] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [16] cats.effect.unsafe.WorkerThread.blockOn
  [17] scala.concurrent.package$.blocking
  [18] cats.effect.IOFiber.runLoop
  [19] cats.effect.IOFiber.execR
  [20] cats.effect.IOFiber.run
  [21] cats.effect.unsafe.WorkerThread.run

--- 1000018534 ns (0.49%), 100 samples
  [ 0] java.io.InputStream.readNBytes
  [ 1] java.io.InputStream.readAllBytes
  [ 2] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [ 3] jdk.nio.zipfs.ZipPath.newByteChannel
  [ 4] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [ 5] java.nio.file.Files.newByteChannel
  [ 6] java.nio.file.Files.newByteChannel
  [ 7] java.nio.file.Files.readAllBytes
  [ 8] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [ 9] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [10] cats.effect.IOFiber.$anonfun$8
  [11] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [12] cats.effect.unsafe.WorkerThread.blockOn
  [13] scala.concurrent.package$.blocking
  [14] cats.effect.IOFiber.runLoop
  [15] cats.effect.IOFiber.execR
  [16] cats.effect.IOFiber.run
  [17] cats.effect.unsafe.WorkerThread.run

--- 821222946 ns (0.40%), 82 samples
  [ 0] java.lang.System.arraycopy
  [ 1] java.nio.HeapByteBuffer.put
  [ 2] jdk.nio.zipfs.ByteArrayChannel.read
  [ 3] sun.nio.ch.ChannelInputStream.read
  [ 4] sun.nio.ch.ChannelInputStream.read
  [ 5] sun.nio.ch.ChannelInputStream.read
  [ 6] java.nio.file.Files.read
  [ 7] java.nio.file.Files.readAllBytes
  [ 8] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [ 9] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [10] cats.effect.IOFiber.$anonfun$8
  [11] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [12] cats.effect.unsafe.WorkerThread.blockOn
  [13] scala.concurrent.package$.blocking
  [14] cats.effect.IOFiber.runLoop
  [15] cats.effect.IOFiber.execR
  [16] cats.effect.IOFiber.run
  [17] cats.effect.unsafe.WorkerThread.run

--- 650978171 ns (0.32%), 65 samples
  [ 0] java.util.Arrays.copyOfRange
  [ 1] java.lang.String.<init>
  [ 2] java.lang.String.<init>
  [ 3] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [ 4] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [ 5] cats.effect.IOFiber.$anonfun$8
  [ 6] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [ 7] cats.effect.unsafe.WorkerThread.blockOn
  [ 8] scala.concurrent.package$.blocking
  [ 9] cats.effect.IOFiber.runLoop
  [10] cats.effect.IOFiber.execR
  [11] cats.effect.IOFiber.run
  [12] cats.effect.unsafe.WorkerThread.run

--- 560843645 ns (0.27%), 56 samples
  [ 0] __memset_avx2_unaligned_erms
  [ 1] MarkBitMap::do_clear(MemRegion, bool)
  [ 2] G1ClearBitMapTask::G1ClearBitmapHRClosure::do_heap_region(HeapRegion*)
  [ 3] HeapRegionManager::par_iterate(HeapRegionClosure*, HeapRegionClaimer*, unsigned int) const
  [ 4] G1ClearBitMapTask::work(unsigned int)
  [ 5] GangWorker::loop()
  [ 6] GangWorker::run()
  [ 7] Thread::call_run()
  [ 8] thread_native_entry(Thread*)
  [ 9] start_thread

--- 470485056 ns (0.23%), 47 samples
  [ 0] __memset_avx2_unaligned_erms
  [ 1] MemAllocator::allocate() const
  [ 2] TypeArrayKlass::allocate_common(int, bool, JavaThread*)
  [ 3] JVMCIRuntime::new_array_common(JavaThread*, Klass*, int, bool)
  [ 4] java.nio.file.Files.read
  [ 5] java.nio.file.Files.readAllBytes
  [ 6] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [ 7] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [ 8] cats.effect.IOFiber.$anonfun$8
  [ 9] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [10] cats.effect.unsafe.WorkerThread.blockOn
  [11] scala.concurrent.package$.blocking
  [12] cats.effect.IOFiber.runLoop
  [13] cats.effect.IOFiber.execR
  [14] cats.effect.IOFiber.run
  [15] cats.effect.unsafe.WorkerThread.run

--- 442572498 ns (0.21%), 44 samples
  [ 0] G1ParCopyClosure<(G1Barrier)1, true>::do_oop(oopDesc**)
  [ 1] ClassLoaderData::ChunkedHandleList::oops_do(OopClosure*)
  [ 2] G1CLDScanClosure::do_cld(ClassLoaderData*)
  [ 3] ClassLoaderDataGraph::roots_cld_do(CLDClosure*, CLDClosure*)
  [ 4] G1RootProcessor::process_java_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int)
  [ 5] G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int)
  [ 6] G1EvacuateRegionsTask::scan_roots(G1ParScanThreadState*, unsigned int)
  [ 7] G1EvacuateRegionsBaseTask::work(unsigned int)
  [ 8] GangWorker::loop()
  [ 9] GangWorker::run()
  [10] Thread::call_run()
  [11] thread_native_entry(Thread*)
  [12] start_thread

--- 430714497 ns (0.21%), 43 samples
  [ 0] __memset_avx2_unaligned_erms
  [ 1] MemAllocator::allocate() const
  [ 2] TypeArrayKlass::allocate_common(int, bool, JavaThread*)
  [ 3] JVMCIRuntime::new_array_common(JavaThread*, Klass*, int, bool)
  [ 4] java.lang.String.<init>
  [ 5] java.lang.String.<init>
  [ 6] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [ 7] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [ 8] cats.effect.IOFiber.$anonfun$8
  [ 9] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [10] cats.effect.unsafe.WorkerThread.blockOn
  [11] scala.concurrent.package$.blocking
  [12] cats.effect.IOFiber.runLoop
  [13] cats.effect.IOFiber.execR
  [14] cats.effect.IOFiber.run
  [15] cats.effect.unsafe.WorkerThread.run

--- 350258299 ns (0.17%), 35 samples
  [ 0] java.lang.StringCoding.hasNegatives
  [ 1] java.lang.String.<init>
  [ 2] java.lang.String.<init>
  [ 3] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [ 4] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [ 5] cats.effect.IOFiber.$anonfun$8
  [ 6] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [ 7] cats.effect.unsafe.WorkerThread.blockOn
  [ 8] scala.concurrent.package$.blocking
  [ 9] cats.effect.IOFiber.runLoop
  [10] cats.effect.IOFiber.execR
  [11] cats.effect.IOFiber.run
  [12] cats.effect.unsafe.WorkerThread.run

--- 270199224 ns (0.13%), 27 samples
  [ 0] find_vmap_area_[k]
  [ 1] check_heap_object_[k]
  [ 2] __check_object_size.part.0_[k]
  [ 3] __check_object_size_[k]
  [ 4] zfs_uiomove_iter?[zfs]_[k]
  [ 5] zfs_uiomove?[zfs]_[k]
  [ 6] dmu_read_uio_dnode?[zfs]_[k]
  [ 7] dmu_read_uio_dbuf?[zfs]_[k]
  [ 8] zfs_read?[zfs]_[k]
  [ 9] zpl_iter_read?[zfs]_[k]
  [10] new_sync_read_[k]
  [11] vfs_read_[k]
  [12] __x64_sys_pread64_[k]
  [13] do_syscall_64_[k]
  [14] entry_SYSCALL_64_after_hwframe_[k]
  [15] __libc_pread64
  [16] sun.nio.ch.FileDispatcherImpl.pread0
  [17] sun.nio.ch.FileDispatcherImpl.pread
  [18] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [19] sun.nio.ch.IOUtil.read
  [20] sun.nio.ch.IOUtil.read
  [21] sun.nio.ch.FileChannelImpl.readInternal
  [22] sun.nio.ch.FileChannelImpl.read
  [23] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [24] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [25] jdk.nio.zipfs.ZipFileSystem$2.fill
  [26] java.util.zip.InflaterInputStream.read
  [27] java.io.InputStream.readNBytes
  [28] java.io.InputStream.readAllBytes
  [29] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [30] jdk.nio.zipfs.ZipPath.newByteChannel
  [31] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [32] java.nio.file.Files.newByteChannel
  [33] java.nio.file.Files.newByteChannel
  [34] java.nio.file.Files.readAllBytes
  [35] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [36] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [37] cats.effect.IOFiber.$anonfun$8
  [38] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [39] cats.effect.unsafe.WorkerThread.blockOn
  [40] scala.concurrent.package$.blocking
  [41] cats.effect.IOFiber.runLoop
  [42] cats.effect.IOFiber.execR
  [43] cats.effect.IOFiber.run
  [44] cats.effect.unsafe.WorkerThread.run

--- 249918527 ns (0.12%), 25 samples
  [ 0] java.util.zip.Inflater.inflateBytesBytes
  [ 1] java.util.zip.Inflater.inflate
  [ 2] java.util.zip.InflaterInputStream.read
  [ 3] java.io.InputStream.readNBytes
  [ 4] java.io.InputStream.readAllBytes
  [ 5] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [ 6] jdk.nio.zipfs.ZipPath.newByteChannel
  [ 7] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [ 8] java.nio.file.Files.newByteChannel
  [ 9] java.nio.file.Files.newByteChannel
  [10] java.nio.file.Files.readAllBytes
  [11] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [12] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [13] cats.effect.IOFiber.$anonfun$8
  [14] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [15] cats.effect.unsafe.WorkerThread.blockOn
  [16] scala.concurrent.package$.blocking
  [17] cats.effect.IOFiber.runLoop
  [18] cats.effect.IOFiber.execR
  [19] cats.effect.IOFiber.run
  [20] cats.effect.unsafe.WorkerThread.run

--- 240015980 ns (0.12%), 24 samples
  [ 0] jlong_disjoint_arraycopy
  [ 1] jdk.internal.misc.Unsafe.copyMemory0
  [ 2] jdk.internal.misc.Unsafe.copyMemory
  [ 3] jdk.internal.misc.ScopedMemoryAccess.copyMemoryInternal
  [ 4] jdk.internal.misc.ScopedMemoryAccess.copyMemory
  [ 5] java.nio.ByteBuffer.putBuffer
  [ 6] java.nio.ByteBuffer.put
  [ 7] java.nio.HeapByteBuffer.put
  [ 8] sun.nio.ch.IOUtil.read
  [ 9] sun.nio.ch.IOUtil.read
  [10] sun.nio.ch.FileChannelImpl.readInternal
  [11] sun.nio.ch.FileChannelImpl.read
  [12] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [13] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [14] jdk.nio.zipfs.ZipFileSystem$2.fill
  [15] java.util.zip.InflaterInputStream.read
  [16] java.io.InputStream.readNBytes
  [17] java.io.InputStream.readAllBytes
  [18] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [19] jdk.nio.zipfs.ZipPath.newByteChannel
  [20] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [21] java.nio.file.Files.newByteChannel
  [22] java.nio.file.Files.newByteChannel
  [23] java.nio.file.Files.readAllBytes
  [24] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [25] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [26] cats.effect.IOFiber.$anonfun$8
  [27] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [28] cats.effect.unsafe.WorkerThread.blockOn
  [29] scala.concurrent.package$.blocking
  [30] cats.effect.IOFiber.runLoop
  [31] cats.effect.IOFiber.execR
  [32] cats.effect.IOFiber.run
  [33] cats.effect.unsafe.WorkerThread.run

--- 230015511 ns (0.11%), 23 samples
  [ 0] jlong_disjoint_arraycopy
  [ 1] jdk.internal.misc.Unsafe.copyMemory0
  [ 2] jdk.internal.misc.Unsafe.copyMemory
  [ 3] jdk.internal.misc.ScopedMemoryAccess.copyMemoryInternal
  [ 4] jdk.internal.misc.ScopedMemoryAccess.copyMemory
  [ 5] java.nio.ByteBuffer.putBuffer
  [ 6] java.nio.ByteBuffer.put
  [ 7] java.nio.HeapByteBuffer.put
  [ 8] sun.nio.ch.IOUtil.read
  [ 9] sun.nio.ch.IOUtil.read
  [10] sun.nio.ch.FileChannelImpl.readInternal
  [11] sun.nio.ch.FileChannelImpl.read
  [12] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [13] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [14] jdk.nio.zipfs.ZipFileSystem$2.fill
  [15] java.util.zip.InflaterInputStream.read
  [16] java.io.InputStream.readNBytes
  [17] java.io.InputStream.readAllBytes
  [18] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [19] jdk.nio.zipfs.ZipPath.newByteChannel
  [20] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [21] java.nio.file.Files.newByteChannel
  [22] java.nio.file.Files.newByteChannel
  [23] java.nio.file.Files.readAllBytes
  [24] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [25] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [26] cats.effect.IOFiber.$anonfun$8
  [27] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [28] cats.effect.unsafe.WorkerThread.blockOn
  [29] scala.concurrent.package$.blocking
  [30] cats.effect.IOFiber.runLoop
  [31] cats.effect.IOFiber.execR
  [32] cats.effect.IOFiber.run
  [33] cats.effect.unsafe.WorkerThread.run

--- 190292190 ns (0.09%), 19 samples
  [ 0] HeapRegionManager::par_iterate(HeapRegionClosure*, HeapRegionClaimer*, unsigned int) const
  [ 1] G1PrepareEvacuationTask::work(unsigned int)
  [ 2] GangWorker::loop()
  [ 3] GangWorker::run()
  [ 4] Thread::call_run()
  [ 5] thread_native_entry(Thread*)
  [ 6] start_thread

--- 181098254 ns (0.09%), 18 samples
  [ 0] __memcpy_sse2_unaligned_erms
  [ 1] G1ParEvacuateFollowersClosure::do_void()
  [ 2] G1EvacuateRegionsTask::evacuate_live_objects(G1ParScanThreadState*, unsigned int)
  [ 3] G1EvacuateRegionsBaseTask::work(unsigned int)
  [ 4] GangWorker::loop()
  [ 5] GangWorker::run()
  [ 6] Thread::call_run()
  [ 7] thread_native_entry(Thread*)
  [ 8] start_thread

--- 179978214 ns (0.09%), 18 samples
  [ 0] jni_GetPrimitiveArrayCritical
  [ 1] Java_java_util_zip_Inflater_inflateBytesBytes
  [ 2] java.util.zip.Inflater.inflateBytesBytes
  [ 3] java.util.zip.Inflater.inflate
  [ 4] java.util.zip.InflaterInputStream.read
  [ 5] java.io.InputStream.readNBytes
  [ 6] java.io.InputStream.readAllBytes
  [ 7] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [ 8] jdk.nio.zipfs.ZipPath.newByteChannel
  [ 9] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [10] java.nio.file.Files.newByteChannel
  [11] java.nio.file.Files.newByteChannel
  [12] java.nio.file.Files.readAllBytes
  [13] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [14] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [15] cats.effect.IOFiber.$anonfun$8
  [16] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [17] cats.effect.unsafe.WorkerThread.blockOn
  [18] scala.concurrent.package$.blocking
  [19] cats.effect.IOFiber.runLoop
  [20] cats.effect.IOFiber.execR
  [21] cats.effect.IOFiber.run
  [22] cats.effect.unsafe.WorkerThread.run

--- 170060072 ns (0.08%), 17 samples
  [ 0] syscall_enter_from_user_mode_[k]
  [ 1] do_syscall_64_[k]
  [ 2] entry_SYSCALL_64_after_hwframe_[k]
  [ 3] __libc_pread64
  [ 4] sun.nio.ch.FileDispatcherImpl.pread0
  [ 5] sun.nio.ch.FileDispatcherImpl.pread
  [ 6] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [ 7] sun.nio.ch.IOUtil.read
  [ 8] sun.nio.ch.IOUtil.read
  [ 9] sun.nio.ch.FileChannelImpl.readInternal
  [10] sun.nio.ch.FileChannelImpl.read
  [11] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [12] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [13] jdk.nio.zipfs.ZipFileSystem$2.fill
  [14] java.util.zip.InflaterInputStream.read
  [15] java.io.InputStream.readNBytes
  [16] java.io.InputStream.readAllBytes
  [17] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [18] jdk.nio.zipfs.ZipPath.newByteChannel
  [19] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [20] java.nio.file.Files.newByteChannel
  [21] java.nio.file.Files.newByteChannel
  [22] java.nio.file.Files.readAllBytes
  [23] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [24] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [25] cats.effect.IOFiber.$anonfun$8
  [26] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [27] cats.effect.unsafe.WorkerThread.blockOn
  [28] scala.concurrent.package$.blocking
  [29] cats.effect.IOFiber.runLoop
  [30] cats.effect.IOFiber.execR
  [31] cats.effect.IOFiber.run
  [32] cats.effect.unsafe.WorkerThread.run

--- 130507854 ns (0.06%), 13 samples
  [ 0] void WeakProcessor::Task::work<G1STWIsAliveClosure, G1KeepAliveClosure>(unsigned int, G1STWIsAliveClosure*, G1KeepAliveClosure*)
  [ 1] GangWorker::loop()
  [ 2] GangWorker::run()
  [ 3] Thread::call_run()
  [ 4] thread_native_entry(Thread*)
  [ 5] start_thread

--- 129945815 ns (0.06%), 13 samples
  [ 0] jni_ReleasePrimitiveArrayCritical
  [ 1] Java_java_util_zip_Inflater_inflateBytesBytes
  [ 2] java.util.zip.Inflater.inflateBytesBytes
  [ 3] java.util.zip.Inflater.inflate
  [ 4] java.util.zip.InflaterInputStream.read
  [ 5] java.io.InputStream.readNBytes
  [ 6] java.io.InputStream.readAllBytes
  [ 7] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [ 8] jdk.nio.zipfs.ZipPath.newByteChannel
  [ 9] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [10] java.nio.file.Files.newByteChannel
  [11] java.nio.file.Files.newByteChannel
  [12] java.nio.file.Files.readAllBytes
  [13] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [14] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [15] cats.effect.IOFiber.$anonfun$8
  [16] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [17] cats.effect.unsafe.WorkerThread.blockOn
  [18] scala.concurrent.package$.blocking
  [19] cats.effect.IOFiber.runLoop
  [20] cats.effect.IOFiber.execR
  [21] cats.effect.IOFiber.run
  [22] cats.effect.unsafe.WorkerThread.run

--- 120697821 ns (0.06%), 12 samples
  [ 0] G1ParScanThreadState::trim_queue_to_threshold(unsigned int)
  [ 1] G1ParScanThreadState::steal_and_trim_queue(GenericTaskQueueSet<OverflowTaskQueue<ScannerTask, (MEMFLAGS)5, 131072u>, (MEMFLAGS)5>*)
  [ 2] G1ParEvacuateFollowersClosure::do_void()
  [ 3] G1EvacuateRegionsTask::evacuate_live_objects(G1ParScanThreadState*, unsigned int)
  [ 4] G1EvacuateRegionsBaseTask::work(unsigned int)
  [ 5] GangWorker::loop()
  [ 6] GangWorker::run()
  [ 7] Thread::call_run()
  [ 8] thread_native_entry(Thread*)
  [ 9] start_thread

--- 110074588 ns (0.05%), 11 samples
  [ 0] zio_create?[zfs]_[k]
  [ 1] zio_null?[zfs]_[k]
  [ 2] zio_root?[zfs]_[k]
  [ 3] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 4] dmu_read_uio_dnode?[zfs]_[k]
  [ 5] dmu_read_uio_dbuf?[zfs]_[k]
  [ 6] zfs_read?[zfs]_[k]
  [ 7] zpl_iter_read?[zfs]_[k]
  [ 8] new_sync_read_[k]
  [ 9] vfs_read_[k]
  [10] __x64_sys_pread64_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] __libc_pread64
  [14] sun.nio.ch.FileDispatcherImpl.pread0
  [15] sun.nio.ch.FileDispatcherImpl.pread
  [16] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [17] sun.nio.ch.IOUtil.read
  [18] sun.nio.ch.IOUtil.read
  [19] sun.nio.ch.FileChannelImpl.readInternal
  [20] sun.nio.ch.FileChannelImpl.read
  [21] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [22] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [23] jdk.nio.zipfs.ZipFileSystem$2.fill
  [24] java.util.zip.InflaterInputStream.read
  [25] java.io.InputStream.readNBytes
  [26] java.io.InputStream.readAllBytes
  [27] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [28] jdk.nio.zipfs.ZipPath.newByteChannel
  [29] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [30] java.nio.file.Files.newByteChannel
  [31] java.nio.file.Files.newByteChannel
  [32] java.nio.file.Files.readAllBytes
  [33] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [34] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [35] cats.effect.IOFiber.$anonfun$8
  [36] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [37] cats.effect.unsafe.WorkerThread.blockOn
  [38] scala.concurrent.package$.blocking
  [39] cats.effect.IOFiber.runLoop
  [40] cats.effect.IOFiber.execR
  [41] cats.effect.IOFiber.run
  [42] cats.effect.unsafe.WorkerThread.run

--- 100438849 ns (0.05%), 10 samples
  [ 0] ClassLoaderData::ChunkedHandleList::oops_do(OopClosure*)
  [ 1] G1CLDScanClosure::do_cld(ClassLoaderData*)
  [ 2] ClassLoaderDataGraph::roots_cld_do(CLDClosure*, CLDClosure*)
  [ 3] G1RootProcessor::process_java_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int)
  [ 4] G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int)
  [ 5] G1EvacuateRegionsTask::scan_roots(G1ParScanThreadState*, unsigned int)
  [ 6] G1EvacuateRegionsBaseTask::work(unsigned int)
  [ 7] GangWorker::loop()
  [ 8] GangWorker::run()
  [ 9] Thread::call_run()
  [10] thread_native_entry(Thread*)
  [11] start_thread

--- 100063160 ns (0.05%), 10 samples
  [ 0] Java_java_util_zip_Inflater_inflateBytesBytes
  [ 1] java.util.zip.Inflater.inflateBytesBytes
  [ 2] java.util.zip.Inflater.inflate
  [ 3] java.util.zip.InflaterInputStream.read
  [ 4] java.io.InputStream.readNBytes
  [ 5] java.io.InputStream.readAllBytes
  [ 6] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [ 7] jdk.nio.zipfs.ZipPath.newByteChannel
  [ 8] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [ 9] java.nio.file.Files.newByteChannel
  [10] java.nio.file.Files.newByteChannel
  [11] java.nio.file.Files.readAllBytes
  [12] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [13] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [14] cats.effect.IOFiber.$anonfun$8
  [15] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [16] cats.effect.unsafe.WorkerThread.blockOn
  [17] scala.concurrent.package$.blocking
  [18] cats.effect.IOFiber.runLoop
  [19] cats.effect.IOFiber.execR
  [20] cats.effect.IOFiber.run
  [21] cats.effect.unsafe.WorkerThread.run

--- 100015902 ns (0.05%), 10 samples
  [ 0] checkInflateStatus
  [ 1] java.util.zip.Inflater.inflateBytesBytes
  [ 2] java.util.zip.Inflater.inflate
  [ 3] java.util.zip.InflaterInputStream.read
  [ 4] java.io.InputStream.readNBytes
  [ 5] java.io.InputStream.readAllBytes
  [ 6] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [ 7] jdk.nio.zipfs.ZipPath.newByteChannel
  [ 8] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [ 9] java.nio.file.Files.newByteChannel
  [10] java.nio.file.Files.newByteChannel
  [11] java.nio.file.Files.readAllBytes
  [12] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [13] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [14] cats.effect.IOFiber.$anonfun$8
  [15] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [16] cats.effect.unsafe.WorkerThread.blockOn
  [17] scala.concurrent.package$.blocking
  [18] cats.effect.IOFiber.runLoop
  [19] cats.effect.IOFiber.execR
  [20] cats.effect.IOFiber.run
  [21] cats.effect.unsafe.WorkerThread.run

--- 99995084 ns (0.05%), 10 samples
  [ 0] __libc_pread64
  [ 1] sun.nio.ch.FileDispatcherImpl.pread0
  [ 2] sun.nio.ch.FileDispatcherImpl.pread
  [ 3] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [ 4] sun.nio.ch.IOUtil.read
  [ 5] sun.nio.ch.IOUtil.read
  [ 6] sun.nio.ch.FileChannelImpl.readInternal
  [ 7] sun.nio.ch.FileChannelImpl.read
  [ 8] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [ 9] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [10] jdk.nio.zipfs.ZipFileSystem$2.fill
  [11] java.util.zip.InflaterInputStream.read
  [12] java.io.InputStream.readNBytes
  [13] java.io.InputStream.readAllBytes
  [14] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [15] jdk.nio.zipfs.ZipPath.newByteChannel
  [16] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [17] java.nio.file.Files.newByteChannel
  [18] java.nio.file.Files.newByteChannel
  [19] java.nio.file.Files.readAllBytes
  [20] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [21] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [22] cats.effect.IOFiber.$anonfun$8
  [23] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [24] cats.effect.unsafe.WorkerThread.blockOn
  [25] scala.concurrent.package$.blocking
  [26] cats.effect.IOFiber.runLoop
  [27] cats.effect.IOFiber.execR
  [28] cats.effect.IOFiber.run
  [29] cats.effect.unsafe.WorkerThread.run

--- 90076831 ns (0.04%), 9 samples
  [ 0] zio_done?[zfs]_[k]
  [ 1] zio_wait?[zfs]_[k]
  [ 2] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 3] dmu_read_uio_dnode?[zfs]_[k]
  [ 4] dmu_read_uio_dbuf?[zfs]_[k]
  [ 5] zfs_read?[zfs]_[k]
  [ 6] zpl_iter_read?[zfs]_[k]
  [ 7] new_sync_read_[k]
  [ 8] vfs_read_[k]
  [ 9] __x64_sys_pread64_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] __libc_pread64
  [13] sun.nio.ch.FileDispatcherImpl.pread0
  [14] sun.nio.ch.FileDispatcherImpl.pread
  [15] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [16] sun.nio.ch.IOUtil.read
  [17] sun.nio.ch.IOUtil.read
  [18] sun.nio.ch.FileChannelImpl.readInternal
  [19] sun.nio.ch.FileChannelImpl.read
  [20] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [21] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [22] jdk.nio.zipfs.ZipFileSystem$2.fill
  [23] java.util.zip.InflaterInputStream.read
  [24] java.io.InputStream.readNBytes
  [25] java.io.InputStream.readAllBytes
  [26] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [27] jdk.nio.zipfs.ZipPath.newByteChannel
  [28] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [29] java.nio.file.Files.newByteChannel
  [30] java.nio.file.Files.newByteChannel
  [31] java.nio.file.Files.readAllBytes
  [32] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [33] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [34] cats.effect.IOFiber.$anonfun$8
  [35] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [36] cats.effect.unsafe.WorkerThread.blockOn
  [37] scala.concurrent.package$.blocking
  [38] cats.effect.IOFiber.runLoop
  [39] cats.effect.IOFiber.execR
  [40] cats.effect.IOFiber.run
  [41] cats.effect.unsafe.WorkerThread.run

--- 80099027 ns (0.04%), 8 samples
  [ 0] __kmalloc_node_[k]
  [ 1] spl_kmem_alloc_impl?[spl]_[k]
  [ 2] spl_kmem_alloc?[spl]_[k]
  [ 3] zfs_rangelock_enter_impl?[zfs]_[k]
  [ 4] zfs_rangelock_enter?[zfs]_[k]
  [ 5] zfs_read?[zfs]_[k]
  [ 6] zpl_iter_read?[zfs]_[k]
  [ 7] new_sync_read_[k]
  [ 8] vfs_read_[k]
  [ 9] __x64_sys_pread64_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] __libc_pread64
  [13] sun.nio.ch.FileDispatcherImpl.pread0
  [14] sun.nio.ch.FileDispatcherImpl.pread
  [15] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [16] sun.nio.ch.IOUtil.read
  [17] sun.nio.ch.IOUtil.read
  [18] sun.nio.ch.FileChannelImpl.readInternal
  [19] sun.nio.ch.FileChannelImpl.read
  [20] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [21] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [22] jdk.nio.zipfs.ZipFileSystem$2.fill
  [23] java.util.zip.InflaterInputStream.read
  [24] java.io.InputStream.readNBytes
  [25] java.io.InputStream.readAllBytes
  [26] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [27] jdk.nio.zipfs.ZipPath.newByteChannel
  [28] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [29] java.nio.file.Files.newByteChannel
  [30] java.nio.file.Files.newByteChannel
  [31] java.nio.file.Files.readAllBytes
  [32] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [33] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [34] cats.effect.IOFiber.$anonfun$8
  [35] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [36] cats.effect.unsafe.WorkerThread.blockOn
  [37] scala.concurrent.package$.blocking
  [38] cats.effect.IOFiber.runLoop
  [39] cats.effect.IOFiber.execR
  [40] cats.effect.IOFiber.run
  [41] cats.effect.unsafe.WorkerThread.run

--- 80082778 ns (0.04%), 8 samples
  [ 0] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 1] dmu_read_uio_dnode?[zfs]_[k]
  [ 2] dmu_read_uio_dbuf?[zfs]_[k]
  [ 3] zfs_read?[zfs]_[k]
  [ 4] zpl_iter_read?[zfs]_[k]
  [ 5] new_sync_read_[k]
  [ 6] vfs_read_[k]
  [ 7] __x64_sys_pread64_[k]
  [ 8] do_syscall_64_[k]
  [ 9] entry_SYSCALL_64_after_hwframe_[k]
  [10] __libc_pread64
  [11] sun.nio.ch.FileDispatcherImpl.pread0
  [12] sun.nio.ch.FileDispatcherImpl.pread
  [13] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [14] sun.nio.ch.IOUtil.read
  [15] sun.nio.ch.IOUtil.read
  [16] sun.nio.ch.FileChannelImpl.readInternal
  [17] sun.nio.ch.FileChannelImpl.read
  [18] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [19] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [20] jdk.nio.zipfs.ZipFileSystem$2.fill
  [21] java.util.zip.InflaterInputStream.read
  [22] java.io.InputStream.readNBytes
  [23] java.io.InputStream.readAllBytes
  [24] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [25] jdk.nio.zipfs.ZipPath.newByteChannel
  [26] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [27] java.nio.file.Files.newByteChannel
  [28] java.nio.file.Files.newByteChannel
  [29] java.nio.file.Files.readAllBytes
  [30] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [31] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [32] cats.effect.IOFiber.$anonfun$8
  [33] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [34] cats.effect.unsafe.WorkerThread.blockOn
  [35] scala.concurrent.package$.blocking
  [36] cats.effect.IOFiber.runLoop
  [37] cats.effect.IOFiber.execR
  [38] cats.effect.IOFiber.run
  [39] cats.effect.unsafe.WorkerThread.run

--- 80074729 ns (0.04%), 8 samples
  [ 0] kmem_cache_alloc_[k]
  [ 1] spl_kmem_cache_alloc?[spl]_[k]
  [ 2] zio_create?[zfs]_[k]
  [ 3] zio_null?[zfs]_[k]
  [ 4] zio_root?[zfs]_[k]
  [ 5] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 6] dmu_read_uio_dnode?[zfs]_[k]
  [ 7] dmu_read_uio_dbuf?[zfs]_[k]
  [ 8] zfs_read?[zfs]_[k]
  [ 9] zpl_iter_read?[zfs]_[k]
  [10] new_sync_read_[k]
  [11] vfs_read_[k]
  [12] __x64_sys_pread64_[k]
  [13] do_syscall_64_[k]
  [14] entry_SYSCALL_64_after_hwframe_[k]
  [15] __libc_pread64
  [16] sun.nio.ch.FileDispatcherImpl.pread0
  [17] sun.nio.ch.FileDispatcherImpl.pread
  [18] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [19] sun.nio.ch.IOUtil.read
  [20] sun.nio.ch.IOUtil.read
  [21] sun.nio.ch.FileChannelImpl.readInternal
  [22] sun.nio.ch.FileChannelImpl.read
  [23] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [24] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [25] jdk.nio.zipfs.ZipFileSystem$2.fill
  [26] java.util.zip.InflaterInputStream.read
  [27] java.io.InputStream.readNBytes
  [28] java.io.InputStream.readAllBytes
  [29] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [30] jdk.nio.zipfs.ZipPath.newByteChannel
  [31] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [32] java.nio.file.Files.newByteChannel
  [33] java.nio.file.Files.newByteChannel
  [34] java.nio.file.Files.readAllBytes
  [35] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [36] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [37] cats.effect.IOFiber.$anonfun$8
  [38] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [39] cats.effect.unsafe.WorkerThread.blockOn
  [40] scala.concurrent.package$.blocking
  [41] cats.effect.IOFiber.runLoop
  [42] cats.effect.IOFiber.execR
  [43] cats.effect.IOFiber.run
  [44] cats.effect.unsafe.WorkerThread.run

--- 70140408 ns (0.03%), 7 samples
  [ 0] cats.effect.unsafe.WorkerThread.run

--- 70128008 ns (0.03%), 7 samples
  [ 0] cats.effect.unsafe.WorkerThread.run

--- 70116105 ns (0.03%), 7 samples
  [ 0] java.io.InputStream.readNBytes
  [ 1] java.io.InputStream.readAllBytes
  [ 2] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [ 3] jdk.nio.zipfs.ZipPath.newByteChannel
  [ 4] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [ 5] java.nio.file.Files.newByteChannel
  [ 6] java.nio.file.Files.newByteChannel
  [ 7] java.nio.file.Files.readAllBytes
  [ 8] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [ 9] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [10] cats.effect.IOFiber.$anonfun$8
  [11] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [12] cats.effect.unsafe.WorkerThread.blockOn
  [13] scala.concurrent.package$.blocking
  [14] cats.effect.IOFiber.runLoop
  [15] cats.effect.IOFiber.execR
  [16] cats.effect.IOFiber.run
  [17] cats.effect.unsafe.WorkerThread.run

--- 70105945 ns (0.03%), 7 samples
  [ 0] memset_[k]
  [ 1] spl_kmem_cache_alloc?[spl]_[k]
  [ 2] zio_create?[zfs]_[k]
  [ 3] zio_null?[zfs]_[k]
  [ 4] zio_root?[zfs]_[k]
  [ 5] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 6] dmu_read_uio_dnode?[zfs]_[k]
  [ 7] dmu_read_uio_dbuf?[zfs]_[k]
  [ 8] zfs_read?[zfs]_[k]
  [ 9] zpl_iter_read?[zfs]_[k]
  [10] new_sync_read_[k]
  [11] vfs_read_[k]
  [12] __x64_sys_pread64_[k]
  [13] do_syscall_64_[k]
  [14] entry_SYSCALL_64_after_hwframe_[k]
  [15] __libc_pread64
  [16] sun.nio.ch.FileDispatcherImpl.pread0
  [17] sun.nio.ch.FileDispatcherImpl.pread
  [18] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [19] sun.nio.ch.IOUtil.read
  [20] sun.nio.ch.IOUtil.read
  [21] sun.nio.ch.FileChannelImpl.readInternal
  [22] sun.nio.ch.FileChannelImpl.read
  [23] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [24] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [25] jdk.nio.zipfs.ZipFileSystem$2.fill
  [26] java.util.zip.InflaterInputStream.read
  [27] java.io.InputStream.readNBytes
  [28] java.io.InputStream.readAllBytes
  [29] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [30] jdk.nio.zipfs.ZipPath.newByteChannel
  [31] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [32] java.nio.file.Files.newByteChannel
  [33] java.nio.file.Files.newByteChannel
  [34] java.nio.file.Files.readAllBytes
  [35] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [36] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [37] cats.effect.IOFiber.$anonfun$8
  [38] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [39] cats.effect.unsafe.WorkerThread.blockOn
  [40] scala.concurrent.package$.blocking
  [41] cats.effect.IOFiber.runLoop
  [42] cats.effect.IOFiber.execR
  [43] cats.effect.IOFiber.run
  [44] cats.effect.unsafe.WorkerThread.run

--- 70083465 ns (0.03%), 7 samples
  [ 0] __kmalloc_node_[k]
  [ 1] spl_kmem_alloc_impl?[spl]_[k]
  [ 2] spl_kmem_zalloc?[spl]_[k]
  [ 3] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 4] dmu_read_uio_dnode?[zfs]_[k]
  [ 5] dmu_read_uio_dbuf?[zfs]_[k]
  [ 6] zfs_read?[zfs]_[k]
  [ 7] zpl_iter_read?[zfs]_[k]
  [ 8] new_sync_read_[k]
  [ 9] vfs_read_[k]
  [10] __x64_sys_pread64_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] __libc_pread64
  [14] sun.nio.ch.FileDispatcherImpl.pread0
  [15] sun.nio.ch.FileDispatcherImpl.pread
  [16] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [17] sun.nio.ch.IOUtil.read
  [18] sun.nio.ch.IOUtil.read
  [19] sun.nio.ch.FileChannelImpl.readInternal
  [20] sun.nio.ch.FileChannelImpl.read
  [21] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [22] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [23] jdk.nio.zipfs.ZipFileSystem$2.fill
  [24] java.util.zip.InflaterInputStream.read
  [25] java.io.InputStream.readNBytes
  [26] java.io.InputStream.readAllBytes
  [27] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [28] jdk.nio.zipfs.ZipPath.newByteChannel
  [29] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [30] java.nio.file.Files.newByteChannel
  [31] java.nio.file.Files.newByteChannel
  [32] java.nio.file.Files.readAllBytes
  [33] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [34] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [35] cats.effect.IOFiber.$anonfun$8
  [36] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [37] cats.effect.unsafe.WorkerThread.blockOn
  [38] scala.concurrent.package$.blocking
  [39] cats.effect.IOFiber.runLoop
  [40] cats.effect.IOFiber.execR
  [41] cats.effect.IOFiber.run
  [42] cats.effect.unsafe.WorkerThread.run

--- 70038599 ns (0.03%), 7 samples
  [ 0] dbuf_rele_and_unlock?[zfs]_[k]
  [ 1] dbuf_rele?[zfs]_[k]
  [ 2] dmu_buf_rele_array?[zfs]_[k]
  [ 3] dmu_read_uio_dnode?[zfs]_[k]
  [ 4] dmu_read_uio_dbuf?[zfs]_[k]
  [ 5] zfs_read?[zfs]_[k]
  [ 6] zpl_iter_read?[zfs]_[k]
  [ 7] new_sync_read_[k]
  [ 8] vfs_read_[k]
  [ 9] __x64_sys_pread64_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] __libc_pread64
  [13] sun.nio.ch.FileDispatcherImpl.pread0
  [14] sun.nio.ch.FileDispatcherImpl.pread
  [15] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [16] sun.nio.ch.IOUtil.read
  [17] sun.nio.ch.IOUtil.read
  [18] sun.nio.ch.FileChannelImpl.readInternal
  [19] sun.nio.ch.FileChannelImpl.read
  [20] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [21] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [22] jdk.nio.zipfs.ZipFileSystem$2.fill
  [23] java.util.zip.InflaterInputStream.read
  [24] java.io.InputStream.readNBytes
  [25] java.io.InputStream.readAllBytes
  [26] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [27] jdk.nio.zipfs.ZipPath.newByteChannel
  [28] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [29] java.nio.file.Files.newByteChannel
  [30] java.nio.file.Files.newByteChannel
  [31] java.nio.file.Files.readAllBytes
  [32] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [33] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [34] cats.effect.IOFiber.$anonfun$8
  [35] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [36] cats.effect.unsafe.WorkerThread.blockOn
  [37] scala.concurrent.package$.blocking
  [38] cats.effect.IOFiber.runLoop
  [39] cats.effect.IOFiber.execR
  [40] cats.effect.IOFiber.run
  [41] cats.effect.unsafe.WorkerThread.run

--- 69998374 ns (0.03%), 7 samples
  [ 0] __memset_avx2_unaligned_erms
  [ 1] MemAllocator::allocate() const
  [ 2] TypeArrayKlass::allocate_common(int, bool, JavaThread*)
  [ 3] JVMCIRuntime::new_array_common(JavaThread*, Klass*, int, bool)
  [ 4] java.io.InputStream.readNBytes
  [ 5] java.io.InputStream.readAllBytes
  [ 6] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [ 7] jdk.nio.zipfs.ZipPath.newByteChannel
  [ 8] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [ 9] java.nio.file.Files.newByteChannel
  [10] java.nio.file.Files.newByteChannel
  [11] java.nio.file.Files.readAllBytes
  [12] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [13] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [14] cats.effect.IOFiber.$anonfun$8
  [15] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [16] cats.effect.unsafe.WorkerThread.blockOn
  [17] scala.concurrent.package$.blocking
  [18] cats.effect.IOFiber.runLoop
  [19] cats.effect.IOFiber.execR
  [20] cats.effect.IOFiber.run
  [21] cats.effect.unsafe.WorkerThread.run

--- 69992884 ns (0.03%), 7 samples
  [ 0] jni_ReleasePrimitiveArrayCritical
  [ 1] java.util.zip.Inflater.inflateBytesBytes
  [ 2] java.util.zip.Inflater.inflate
  [ 3] java.util.zip.InflaterInputStream.read
  [ 4] java.io.InputStream.readNBytes
  [ 5] java.io.InputStream.readAllBytes
  [ 6] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [ 7] jdk.nio.zipfs.ZipPath.newByteChannel
  [ 8] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [ 9] java.nio.file.Files.newByteChannel
  [10] java.nio.file.Files.newByteChannel
  [11] java.nio.file.Files.readAllBytes
  [12] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [13] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [14] cats.effect.IOFiber.$anonfun$8
  [15] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [16] cats.effect.unsafe.WorkerThread.blockOn
  [17] scala.concurrent.package$.blocking
  [18] cats.effect.IOFiber.runLoop
  [19] cats.effect.IOFiber.execR
  [20] cats.effect.IOFiber.run
  [21] cats.effect.unsafe.WorkerThread.run

--- 60178338 ns (0.03%), 6 samples
  [ 0] G1ScanHRForRegionClosure::scan_heap_roots(HeapRegion*)
  [ 1] G1RemSet::scan_heap_roots(G1ParScanThreadState*, unsigned int, G1GCPhaseTimes::GCParPhases, G1GCPhaseTimes::GCParPhases, bool)
  [ 2] G1EvacuateRegionsTask::scan_roots(G1ParScanThreadState*, unsigned int)
  [ 3] G1EvacuateRegionsBaseTask::work(unsigned int)
  [ 4] GangWorker::loop()
  [ 5] GangWorker::run()
  [ 6] Thread::call_run()
  [ 7] thread_native_entry(Thread*)
  [ 8] start_thread

--- 60055925 ns (0.03%), 6 samples
  [ 0] dmu_zfetch_prepare?[zfs]_[k]
  [ 1] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 2] dmu_read_uio_dnode?[zfs]_[k]
  [ 3] dmu_read_uio_dbuf?[zfs]_[k]
  [ 4] zfs_read?[zfs]_[k]
  [ 5] zpl_iter_read?[zfs]_[k]
  [ 6] new_sync_read_[k]
  [ 7] vfs_read_[k]
  [ 8] __x64_sys_pread64_[k]
  [ 9] do_syscall_64_[k]
  [10] entry_SYSCALL_64_after_hwframe_[k]
  [11] __libc_pread64
  [12] sun.nio.ch.FileDispatcherImpl.pread0
  [13] sun.nio.ch.FileDispatcherImpl.pread
  [14] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [15] sun.nio.ch.IOUtil.read
  [16] sun.nio.ch.IOUtil.read
  [17] sun.nio.ch.FileChannelImpl.readInternal
  [18] sun.nio.ch.FileChannelImpl.read
  [19] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [20] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [21] jdk.nio.zipfs.ZipFileSystem$2.fill
  [22] java.util.zip.InflaterInputStream.read
  [23] java.io.InputStream.readNBytes
  [24] java.io.InputStream.readAllBytes
  [25] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [26] jdk.nio.zipfs.ZipPath.newByteChannel
  [27] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [28] java.nio.file.Files.newByteChannel
  [29] java.nio.file.Files.newByteChannel
  [30] java.nio.file.Files.readAllBytes
  [31] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [32] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [33] cats.effect.IOFiber.$anonfun$8
  [34] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [35] cats.effect.unsafe.WorkerThread.blockOn
  [36] scala.concurrent.package$.blocking
  [37] cats.effect.IOFiber.runLoop
  [38] cats.effect.IOFiber.execR
  [39] cats.effect.IOFiber.run
  [40] cats.effect.unsafe.WorkerThread.run

--- 60051880 ns (0.03%), 6 samples
  [ 0] mutex_unlock_[k]
  [ 1] zio_wait?[zfs]_[k]
  [ 2] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 3] dmu_read_uio_dnode?[zfs]_[k]
  [ 4] dmu_read_uio_dbuf?[zfs]_[k]
  [ 5] zfs_read?[zfs]_[k]
  [ 6] zpl_iter_read?[zfs]_[k]
  [ 7] new_sync_read_[k]
  [ 8] vfs_read_[k]
  [ 9] __x64_sys_pread64_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] __libc_pread64
  [13] sun.nio.ch.FileDispatcherImpl.pread0
  [14] sun.nio.ch.FileDispatcherImpl.pread
  [15] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [16] sun.nio.ch.IOUtil.read
  [17] sun.nio.ch.IOUtil.read
  [18] sun.nio.ch.FileChannelImpl.readInternal
  [19] sun.nio.ch.FileChannelImpl.read
  [20] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [21] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [22] jdk.nio.zipfs.ZipFileSystem$2.fill
  [23] java.util.zip.InflaterInputStream.read
  [24] java.io.InputStream.readNBytes
  [25] java.io.InputStream.readAllBytes
  [26] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [27] jdk.nio.zipfs.ZipPath.newByteChannel
  [28] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [29] java.nio.file.Files.newByteChannel
  [30] java.nio.file.Files.newByteChannel
  [31] java.nio.file.Files.readAllBytes
  [32] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [33] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [34] cats.effect.IOFiber.$anonfun$8
  [35] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [36] cats.effect.unsafe.WorkerThread.blockOn
  [37] scala.concurrent.package$.blocking
  [38] cats.effect.IOFiber.runLoop
  [39] cats.effect.IOFiber.execR
  [40] cats.effect.IOFiber.run
  [41] cats.effect.unsafe.WorkerThread.run

--- 60050746 ns (0.03%), 6 samples
  [ 0] zio_wait?[zfs]_[k]
  [ 1] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 2] dmu_read_uio_dnode?[zfs]_[k]
  [ 3] dmu_read_uio_dbuf?[zfs]_[k]
  [ 4] zfs_read?[zfs]_[k]
  [ 5] zpl_iter_read?[zfs]_[k]
  [ 6] new_sync_read_[k]
  [ 7] vfs_read_[k]
  [ 8] __x64_sys_pread64_[k]
  [ 9] do_syscall_64_[k]
  [10] entry_SYSCALL_64_after_hwframe_[k]
  [11] __libc_pread64
  [12] sun.nio.ch.FileDispatcherImpl.pread0
  [13] sun.nio.ch.FileDispatcherImpl.pread
  [14] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [15] sun.nio.ch.IOUtil.read
  [16] sun.nio.ch.IOUtil.read
  [17] sun.nio.ch.FileChannelImpl.readInternal
  [18] sun.nio.ch.FileChannelImpl.read
  [19] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [20] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [21] jdk.nio.zipfs.ZipFileSystem$2.fill
  [22] java.util.zip.InflaterInputStream.read
  [23] java.io.InputStream.readNBytes
  [24] java.io.InputStream.readAllBytes
  [25] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [26] jdk.nio.zipfs.ZipPath.newByteChannel
  [27] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [28] java.nio.file.Files.newByteChannel
  [29] java.nio.file.Files.newByteChannel
  [30] java.nio.file.Files.readAllBytes
  [31] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [32] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [33] cats.effect.IOFiber.$anonfun$8
  [34] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [35] cats.effect.unsafe.WorkerThread.blockOn
  [36] scala.concurrent.package$.blocking
  [37] cats.effect.IOFiber.runLoop
  [38] cats.effect.IOFiber.execR
  [39] cats.effect.IOFiber.run
  [40] cats.effect.unsafe.WorkerThread.run

--- 59996524 ns (0.03%), 6 samples
  [ 0] new_sync_read_[k]
  [ 1] vfs_read_[k]
  [ 2] __x64_sys_pread64_[k]
  [ 3] do_syscall_64_[k]
  [ 4] entry_SYSCALL_64_after_hwframe_[k]
  [ 5] __libc_pread64
  [ 6] sun.nio.ch.FileDispatcherImpl.pread0
  [ 7] sun.nio.ch.FileDispatcherImpl.pread
  [ 8] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [ 9] sun.nio.ch.IOUtil.read
  [10] sun.nio.ch.IOUtil.read
  [11] sun.nio.ch.FileChannelImpl.readInternal
  [12] sun.nio.ch.FileChannelImpl.read
  [13] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [14] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [15] jdk.nio.zipfs.ZipFileSystem$2.fill
  [16] java.util.zip.InflaterInputStream.read
  [17] java.io.InputStream.readNBytes
  [18] java.io.InputStream.readAllBytes
  [19] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [20] jdk.nio.zipfs.ZipPath.newByteChannel
  [21] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [22] java.nio.file.Files.newByteChannel
  [23] java.nio.file.Files.newByteChannel
  [24] java.nio.file.Files.readAllBytes
  [25] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [26] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [27] cats.effect.IOFiber.$anonfun$8
  [28] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [29] cats.effect.unsafe.WorkerThread.blockOn
  [30] scala.concurrent.package$.blocking
  [31] cats.effect.IOFiber.runLoop
  [32] cats.effect.IOFiber.execR
  [33] cats.effect.IOFiber.run
  [34] cats.effect.unsafe.WorkerThread.run

--- 50241619 ns (0.02%), 5 samples
  [ 0] G1ParScanThreadState::steal_and_trim_queue(GenericTaskQueueSet<OverflowTaskQueue<ScannerTask, (MEMFLAGS)5, 131072u>, (MEMFLAGS)5>*)
  [ 1] G1ParEvacuateFollowersClosure::do_void()
  [ 2] G1EvacuateRegionsTask::evacuate_live_objects(G1ParScanThreadState*, unsigned int)
  [ 3] G1EvacuateRegionsBaseTask::work(unsigned int)
  [ 4] GangWorker::loop()
  [ 5] GangWorker::run()
  [ 6] Thread::call_run()
  [ 7] thread_native_entry(Thread*)
  [ 8] start_thread

--- 50073807 ns (0.02%), 5 samples
  [ 0] java.io.InputStream.readNBytes
  [ 1] java.io.InputStream.readAllBytes
  [ 2] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [ 3] jdk.nio.zipfs.ZipPath.newByteChannel
  [ 4] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [ 5] java.nio.file.Files.newByteChannel
  [ 6] java.nio.file.Files.newByteChannel
  [ 7] java.nio.file.Files.readAllBytes
  [ 8] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [ 9] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [10] cats.effect.IOFiber.$anonfun$8
  [11] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [12] cats.effect.unsafe.WorkerThread.blockOn
  [13] scala.concurrent.package$.blocking
  [14] cats.effect.IOFiber.runLoop
  [15] cats.effect.IOFiber.execR
  [16] cats.effect.IOFiber.run
  [17] cats.effect.unsafe.WorkerThread.run

--- 50060280 ns (0.02%), 5 samples
  [ 0] mutex_unlock_[k]
  [ 1] dbuf_rele_and_unlock?[zfs]_[k]
  [ 2] dbuf_rele?[zfs]_[k]
  [ 3] dmu_buf_rele_array?[zfs]_[k]
  [ 4] dmu_read_uio_dnode?[zfs]_[k]
  [ 5] dmu_read_uio_dbuf?[zfs]_[k]
  [ 6] zfs_read?[zfs]_[k]
  [ 7] zpl_iter_read?[zfs]_[k]
  [ 8] new_sync_read_[k]
  [ 9] vfs_read_[k]
  [10] __x64_sys_pread64_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] __libc_pread64
  [14] sun.nio.ch.FileDispatcherImpl.pread0
  [15] sun.nio.ch.FileDispatcherImpl.pread
  [16] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [17] sun.nio.ch.IOUtil.read
  [18] sun.nio.ch.IOUtil.read
  [19] sun.nio.ch.FileChannelImpl.readInternal
  [20] sun.nio.ch.FileChannelImpl.read
  [21] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [22] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [23] jdk.nio.zipfs.ZipFileSystem$2.fill
  [24] java.util.zip.InflaterInputStream.read
  [25] java.io.InputStream.readNBytes
  [26] java.io.InputStream.readAllBytes
  [27] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [28] jdk.nio.zipfs.ZipPath.newByteChannel
  [29] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [30] java.nio.file.Files.newByteChannel
  [31] java.nio.file.Files.newByteChannel
  [32] java.nio.file.Files.readAllBytes
  [33] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [34] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [35] cats.effect.IOFiber.$anonfun$8
  [36] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [37] cats.effect.unsafe.WorkerThread.blockOn
  [38] scala.concurrent.package$.blocking
  [39] cats.effect.IOFiber.runLoop
  [40] cats.effect.IOFiber.execR
  [41] cats.effect.IOFiber.run
  [42] cats.effect.unsafe.WorkerThread.run

--- 50052585 ns (0.02%), 5 samples
  [ 0] mutex_lock_[k]
  [ 1] arc_buf_access?[zfs]_[k]
  [ 2] dbuf_hold_impl?[zfs]_[k]
  [ 3] dbuf_hold_level?[zfs]_[k]
  [ 4] dbuf_hold?[zfs]_[k]
  [ 5] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 6] dmu_read_uio_dnode?[zfs]_[k]
  [ 7] dmu_read_uio_dbuf?[zfs]_[k]
  [ 8] zfs_read?[zfs]_[k]
  [ 9] zpl_iter_read?[zfs]_[k]
  [10] new_sync_read_[k]
  [11] vfs_read_[k]
  [12] __x64_sys_pread64_[k]
  [13] do_syscall_64_[k]
  [14] entry_SYSCALL_64_after_hwframe_[k]
  [15] __libc_pread64
  [16] sun.nio.ch.FileDispatcherImpl.pread0
  [17] sun.nio.ch.FileDispatcherImpl.pread
  [18] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [19] sun.nio.ch.IOUtil.read
  [20] sun.nio.ch.IOUtil.read
  [21] sun.nio.ch.FileChannelImpl.readInternal
  [22] sun.nio.ch.FileChannelImpl.read
  [23] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [24] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [25] jdk.nio.zipfs.ZipFileSystem$2.fill
  [26] java.util.zip.InflaterInputStream.read
  [27] java.io.InputStream.readNBytes
  [28] java.io.InputStream.readAllBytes
  [29] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [30] jdk.nio.zipfs.ZipPath.newByteChannel
  [31] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [32] java.nio.file.Files.newByteChannel
  [33] java.nio.file.Files.newByteChannel
  [34] java.nio.file.Files.readAllBytes
  [35] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [36] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [37] cats.effect.IOFiber.$anonfun$8
  [38] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [39] cats.effect.unsafe.WorkerThread.blockOn
  [40] scala.concurrent.package$.blocking
  [41] cats.effect.IOFiber.runLoop
  [42] cats.effect.IOFiber.execR
  [43] cats.effect.IOFiber.run
  [44] cats.effect.unsafe.WorkerThread.run

--- 50040263 ns (0.02%), 5 samples
  [ 0] kmem_cache_free_[k]
  [ 1] spl_kmem_cache_free?[spl]_[k]
  [ 2] zio_destroy?[zfs]_[k]
  [ 3] zio_wait?[zfs]_[k]
  [ 4] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 5] dmu_read_uio_dnode?[zfs]_[k]
  [ 6] dmu_read_uio_dbuf?[zfs]_[k]
  [ 7] zfs_read?[zfs]_[k]
  [ 8] zpl_iter_read?[zfs]_[k]
  [ 9] new_sync_read_[k]
  [10] vfs_read_[k]
  [11] __x64_sys_pread64_[k]
  [12] do_syscall_64_[k]
  [13] entry_SYSCALL_64_after_hwframe_[k]
  [14] __libc_pread64
  [15] sun.nio.ch.FileDispatcherImpl.pread0
  [16] sun.nio.ch.FileDispatcherImpl.pread
  [17] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [18] sun.nio.ch.IOUtil.read
  [19] sun.nio.ch.IOUtil.read
  [20] sun.nio.ch.FileChannelImpl.readInternal
  [21] sun.nio.ch.FileChannelImpl.read
  [22] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [23] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [24] jdk.nio.zipfs.ZipFileSystem$2.fill
  [25] java.util.zip.InflaterInputStream.read
  [26] java.io.InputStream.readNBytes
  [27] java.io.InputStream.readAllBytes
  [28] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [29] jdk.nio.zipfs.ZipPath.newByteChannel
  [30] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [31] java.nio.file.Files.newByteChannel
  [32] java.nio.file.Files.newByteChannel
  [33] java.nio.file.Files.readAllBytes
  [34] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [35] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [36] cats.effect.IOFiber.$anonfun$8
  [37] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [38] cats.effect.unsafe.WorkerThread.blockOn
  [39] scala.concurrent.package$.blocking
  [40] cats.effect.IOFiber.runLoop
  [41] cats.effect.IOFiber.execR
  [42] cats.effect.IOFiber.run
  [43] cats.effect.unsafe.WorkerThread.run

--- 50038139 ns (0.02%), 5 samples
  [ 0] zfs_read?[zfs]_[k]
  [ 1] zpl_iter_read?[zfs]_[k]
  [ 2] new_sync_read_[k]
  [ 3] vfs_read_[k]
  [ 4] __x64_sys_pread64_[k]
  [ 5] do_syscall_64_[k]
  [ 6] entry_SYSCALL_64_after_hwframe_[k]
  [ 7] __libc_pread64
  [ 8] sun.nio.ch.FileDispatcherImpl.pread0
  [ 9] sun.nio.ch.FileDispatcherImpl.pread
  [10] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [11] sun.nio.ch.IOUtil.read
  [12] sun.nio.ch.IOUtil.read
  [13] sun.nio.ch.FileChannelImpl.readInternal
  [14] sun.nio.ch.FileChannelImpl.read
  [15] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [16] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [17] jdk.nio.zipfs.ZipFileSystem$2.fill
  [18] java.util.zip.InflaterInputStream.read
  [19] java.io.InputStream.readNBytes
  [20] java.io.InputStream.readAllBytes
  [21] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [22] jdk.nio.zipfs.ZipPath.newByteChannel
  [23] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [24] java.nio.file.Files.newByteChannel
  [25] java.nio.file.Files.newByteChannel
  [26] java.nio.file.Files.readAllBytes
  [27] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [28] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [29] cats.effect.IOFiber.$anonfun$8
  [30] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [31] cats.effect.unsafe.WorkerThread.blockOn
  [32] scala.concurrent.package$.blocking
  [33] cats.effect.IOFiber.runLoop
  [34] cats.effect.IOFiber.execR
  [35] cats.effect.IOFiber.run
  [36] cats.effect.unsafe.WorkerThread.run

--- 50009103 ns (0.02%), 5 samples
  [ 0] zpl_iter_read?[zfs]_[k]
  [ 1] new_sync_read_[k]
  [ 2] vfs_read_[k]
  [ 3] __x64_sys_pread64_[k]
  [ 4] do_syscall_64_[k]
  [ 5] entry_SYSCALL_64_after_hwframe_[k]
  [ 6] __libc_pread64
  [ 7] sun.nio.ch.FileDispatcherImpl.pread0
  [ 8] sun.nio.ch.FileDispatcherImpl.pread
  [ 9] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [10] sun.nio.ch.IOUtil.read
  [11] sun.nio.ch.IOUtil.read
  [12] sun.nio.ch.FileChannelImpl.readInternal
  [13] sun.nio.ch.FileChannelImpl.read
  [14] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [15] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [16] jdk.nio.zipfs.ZipFileSystem$2.fill
  [17] java.util.zip.InflaterInputStream.read
  [18] java.io.InputStream.readNBytes
  [19] java.io.InputStream.readAllBytes
  [20] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [21] jdk.nio.zipfs.ZipPath.newByteChannel
  [22] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [23] java.nio.file.Files.newByteChannel
  [24] java.nio.file.Files.newByteChannel
  [25] java.nio.file.Files.readAllBytes
  [26] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [27] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [28] cats.effect.IOFiber.$anonfun$8
  [29] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [30] cats.effect.unsafe.WorkerThread.blockOn
  [31] scala.concurrent.package$.blocking
  [32] cats.effect.IOFiber.runLoop
  [33] cats.effect.IOFiber.execR
  [34] cats.effect.IOFiber.run
  [35] cats.effect.unsafe.WorkerThread.run

--- 49994716 ns (0.02%), 5 samples
  [ 0] java.util.zip.Inflater.inflate
  [ 1] java.util.zip.InflaterInputStream.read
  [ 2] java.io.InputStream.readNBytes
  [ 3] java.io.InputStream.readAllBytes
  [ 4] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [ 5] jdk.nio.zipfs.ZipPath.newByteChannel
  [ 6] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [ 7] java.nio.file.Files.newByteChannel
  [ 8] java.nio.file.Files.newByteChannel
  [ 9] java.nio.file.Files.readAllBytes
  [10] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [11] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [12] cats.effect.IOFiber.$anonfun$8
  [13] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [14] cats.effect.unsafe.WorkerThread.blockOn
  [15] scala.concurrent.package$.blocking
  [16] cats.effect.IOFiber.runLoop
  [17] cats.effect.IOFiber.execR
  [18] cats.effect.IOFiber.run
  [19] cats.effect.unsafe.WorkerThread.run

--- 49992792 ns (0.02%), 5 samples
  [ 0] java.util.zip.Inflater.inflate
  [ 1] java.util.zip.InflaterInputStream.read
  [ 2] java.io.InputStream.readNBytes
  [ 3] java.io.InputStream.readAllBytes
  [ 4] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [ 5] jdk.nio.zipfs.ZipPath.newByteChannel
  [ 6] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [ 7] java.nio.file.Files.newByteChannel
  [ 8] java.nio.file.Files.newByteChannel
  [ 9] java.nio.file.Files.readAllBytes
  [10] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [11] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [12] cats.effect.IOFiber.$anonfun$8
  [13] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [14] cats.effect.unsafe.WorkerThread.blockOn
  [15] scala.concurrent.package$.blocking
  [16] cats.effect.IOFiber.runLoop
  [17] cats.effect.IOFiber.execR
  [18] cats.effect.IOFiber.run
  [19] cats.effect.unsafe.WorkerThread.run

--- 49989427 ns (0.02%), 5 samples
  [ 0] __fget_light_[k]
  [ 1] __fdget_[k]
  [ 2] __x64_sys_pread64_[k]
  [ 3] do_syscall_64_[k]
  [ 4] entry_SYSCALL_64_after_hwframe_[k]
  [ 5] __libc_pread64
  [ 6] sun.nio.ch.FileDispatcherImpl.pread0
  [ 7] sun.nio.ch.FileDispatcherImpl.pread
  [ 8] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [ 9] sun.nio.ch.IOUtil.read
  [10] sun.nio.ch.IOUtil.read
  [11] sun.nio.ch.FileChannelImpl.readInternal
  [12] sun.nio.ch.FileChannelImpl.read
  [13] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [14] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [15] jdk.nio.zipfs.ZipFileSystem$2.fill
  [16] java.util.zip.InflaterInputStream.read
  [17] java.io.InputStream.readNBytes
  [18] java.io.InputStream.readAllBytes
  [19] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [20] jdk.nio.zipfs.ZipPath.newByteChannel
  [21] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [22] java.nio.file.Files.newByteChannel
  [23] java.nio.file.Files.newByteChannel
  [24] java.nio.file.Files.readAllBytes
  [25] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [26] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [27] cats.effect.IOFiber.$anonfun$8
  [28] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [29] cats.effect.unsafe.WorkerThread.blockOn
  [30] scala.concurrent.package$.blocking
  [31] cats.effect.IOFiber.runLoop
  [32] cats.effect.IOFiber.execR
  [33] cats.effect.IOFiber.run
  [34] cats.effect.unsafe.WorkerThread.run

--- 40202610 ns (0.02%), 4 samples
  [ 0] TaskTerminator::offer_termination(TerminatorTerminator*)
  [ 1] G1ParEvacuateFollowersClosure::do_void()
  [ 2] G1EvacuateRegionsTask::evacuate_live_objects(G1ParScanThreadState*, unsigned int)
  [ 3] G1EvacuateRegionsBaseTask::work(unsigned int)
  [ 4] GangWorker::loop()
  [ 5] GangWorker::run()
  [ 6] Thread::call_run()
  [ 7] thread_native_entry(Thread*)
  [ 8] start_thread

--- 40153099 ns (0.02%), 4 samples
  [ 0] InstanceMirrorKlass::oop_size(oopDesc*) const
  [ 1] ClassLoaderData::ChunkedHandleList::oops_do(OopClosure*)
  [ 2] G1CLDScanClosure::do_cld(ClassLoaderData*)
  [ 3] ClassLoaderDataGraph::roots_cld_do(CLDClosure*, CLDClosure*)
  [ 4] G1RootProcessor::process_java_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int)
  [ 5] G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int)
  [ 6] G1EvacuateRegionsTask::scan_roots(G1ParScanThreadState*, unsigned int)
  [ 7] G1EvacuateRegionsBaseTask::work(unsigned int)
  [ 8] GangWorker::loop()
  [ 9] GangWorker::run()
  [10] Thread::call_run()
  [11] thread_native_entry(Thread*)
  [12] start_thread

--- 40131110 ns (0.02%), 4 samples
  [ 0] __memset_avx2_unaligned_erms
  [ 1] G1FreeHumongousRegionClosure::do_heap_region(HeapRegion*)
  [ 2] HeapRegionManager::iterate(HeapRegionClosure*) const
  [ 3] G1PostEvacuateCollectionSetCleanupTask2::EagerlyReclaimHumongousObjectsTask::do_work(unsigned int)
  [ 4] G1BatchedGangTask::work(unsigned int)
  [ 5] GangWorker::loop()
  [ 6] GangWorker::run()
  [ 7] Thread::call_run()
  [ 8] thread_native_entry(Thread*)
  [ 9] start_thread

--- 40128466 ns (0.02%), 4 samples
  [ 0] nmethod::fix_oop_relocations(unsigned char*, unsigned char*, bool)
  [ 1] nmethod::oops_do_process_strong(nmethod::OopsDoProcessor*)
  [ 2] G1CodeBlobClosure::do_code_blob(CodeBlob*)
  [ 3] JavaThread::oops_do_frames(OopClosure*, CodeBlobClosure*) [clone .part.0]
  [ 4] Threads::possibly_parallel_oops_do(bool, OopClosure*, CodeBlobClosure*)
  [ 5] G1RootProcessor::process_java_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int)
  [ 6] G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int)
  [ 7] G1EvacuateRegionsTask::scan_roots(G1ParScanThreadState*, unsigned int)
  [ 8] G1EvacuateRegionsBaseTask::work(unsigned int)
  [ 9] GangWorker::loop()
  [10] GangWorker::run()
  [11] Thread::call_run()
  [12] thread_native_entry(Thread*)
  [13] start_thread

--- 40061015 ns (0.02%), 4 samples
  [ 0] zio_inherit_child_errors?[zfs]_[k]
  [ 1] zio_done?[zfs]_[k]
  [ 2] zio_wait?[zfs]_[k]
  [ 3] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 4] dmu_read_uio_dnode?[zfs]_[k]
  [ 5] dmu_read_uio_dbuf?[zfs]_[k]
  [ 6] zfs_read?[zfs]_[k]
  [ 7] zpl_iter_read?[zfs]_[k]
  [ 8] new_sync_read_[k]
  [ 9] vfs_read_[k]
  [10] __x64_sys_pread64_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] __libc_pread64
  [14] sun.nio.ch.FileDispatcherImpl.pread0
  [15] sun.nio.ch.FileDispatcherImpl.pread
  [16] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [17] sun.nio.ch.IOUtil.read
  [18] sun.nio.ch.IOUtil.read
  [19] sun.nio.ch.FileChannelImpl.readInternal
  [20] sun.nio.ch.FileChannelImpl.read
  [21] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [22] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [23] jdk.nio.zipfs.ZipFileSystem$2.fill
  [24] java.util.zip.InflaterInputStream.read
  [25] java.io.InputStream.readNBytes
  [26] java.io.InputStream.readAllBytes
  [27] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [28] jdk.nio.zipfs.ZipPath.newByteChannel
  [29] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [30] java.nio.file.Files.newByteChannel
  [31] java.nio.file.Files.newByteChannel
  [32] java.nio.file.Files.readAllBytes
  [33] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [34] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [35] cats.effect.IOFiber.$anonfun$8
  [36] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [37] cats.effect.unsafe.WorkerThread.blockOn
  [38] scala.concurrent.package$.blocking
  [39] cats.effect.IOFiber.runLoop
  [40] cats.effect.IOFiber.execR
  [41] cats.effect.IOFiber.run
  [42] cats.effect.unsafe.WorkerThread.run

--- 40051768 ns (0.02%), 4 samples
  [ 0] zrl_add_impl?[zfs]_[k]
  [ 1] dmu_read_uio_dbuf?[zfs]_[k]
  [ 2] zfs_read?[zfs]_[k]
  [ 3] zpl_iter_read?[zfs]_[k]
  [ 4] new_sync_read_[k]
  [ 5] vfs_read_[k]
  [ 6] __x64_sys_pread64_[k]
  [ 7] do_syscall_64_[k]
  [ 8] entry_SYSCALL_64_after_hwframe_[k]
  [ 9] __libc_pread64
  [10] sun.nio.ch.FileDispatcherImpl.pread0
  [11] sun.nio.ch.FileDispatcherImpl.pread
  [12] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [13] sun.nio.ch.IOUtil.read
  [14] sun.nio.ch.IOUtil.read
  [15] sun.nio.ch.FileChannelImpl.readInternal
  [16] sun.nio.ch.FileChannelImpl.read
  [17] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [18] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [19] jdk.nio.zipfs.ZipFileSystem$2.fill
  [20] java.util.zip.InflaterInputStream.read
  [21] java.io.InputStream.readNBytes
  [22] java.io.InputStream.readAllBytes
  [23] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [24] jdk.nio.zipfs.ZipPath.newByteChannel
  [25] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [26] java.nio.file.Files.newByteChannel
  [27] java.nio.file.Files.newByteChannel
  [28] java.nio.file.Files.readAllBytes
  [29] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [30] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [31] cats.effect.IOFiber.$anonfun$8
  [32] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [33] cats.effect.unsafe.WorkerThread.blockOn
  [34] scala.concurrent.package$.blocking
  [35] cats.effect.IOFiber.runLoop
  [36] cats.effect.IOFiber.execR
  [37] cats.effect.IOFiber.run
  [38] cats.effect.unsafe.WorkerThread.run

--- 40042119 ns (0.02%), 4 samples
  [ 0] _raw_spin_lock_[k]
  [ 1] dbuf_hold_impl?[zfs]_[k]
  [ 2] dbuf_hold_level?[zfs]_[k]
  [ 3] dbuf_hold?[zfs]_[k]
  [ 4] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 5] dmu_read_uio_dnode?[zfs]_[k]
  [ 6] dmu_read_uio_dbuf?[zfs]_[k]
  [ 7] zfs_read?[zfs]_[k]
  [ 8] zpl_iter_read?[zfs]_[k]
  [ 9] new_sync_read_[k]
  [10] vfs_read_[k]
  [11] __x64_sys_pread64_[k]
  [12] do_syscall_64_[k]
  [13] entry_SYSCALL_64_after_hwframe_[k]
  [14] __libc_pread64
  [15] sun.nio.ch.FileDispatcherImpl.pread0
  [16] sun.nio.ch.FileDispatcherImpl.pread
  [17] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [18] sun.nio.ch.IOUtil.read
  [19] sun.nio.ch.IOUtil.read
  [20] sun.nio.ch.FileChannelImpl.readInternal
  [21] sun.nio.ch.FileChannelImpl.read
  [22] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [23] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [24] jdk.nio.zipfs.ZipFileSystem$2.fill
  [25] java.util.zip.InflaterInputStream.read
  [26] java.io.InputStream.readNBytes
  [27] java.io.InputStream.readAllBytes
  [28] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [29] jdk.nio.zipfs.ZipPath.newByteChannel
  [30] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [31] java.nio.file.Files.newByteChannel
  [32] java.nio.file.Files.newByteChannel
  [33] java.nio.file.Files.readAllBytes
  [34] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [35] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [36] cats.effect.IOFiber.$anonfun$8
  [37] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [38] cats.effect.unsafe.WorkerThread.blockOn
  [39] scala.concurrent.package$.blocking
  [40] cats.effect.IOFiber.runLoop
  [41] cats.effect.IOFiber.execR
  [42] cats.effect.IOFiber.run
  [43] cats.effect.unsafe.WorkerThread.run

--- 40041941 ns (0.02%), 4 samples
  [ 0] zio_ready?[zfs]_[k]
  [ 1] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 2] dmu_read_uio_dnode?[zfs]_[k]
  [ 3] dmu_read_uio_dbuf?[zfs]_[k]
  [ 4] zfs_read?[zfs]_[k]
  [ 5] zpl_iter_read?[zfs]_[k]
  [ 6] new_sync_read_[k]
  [ 7] vfs_read_[k]
  [ 8] __x64_sys_pread64_[k]
  [ 9] do_syscall_64_[k]
  [10] entry_SYSCALL_64_after_hwframe_[k]
  [11] __libc_pread64
  [12] sun.nio.ch.FileDispatcherImpl.pread0
  [13] sun.nio.ch.FileDispatcherImpl.pread
  [14] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [15] sun.nio.ch.IOUtil.read
  [16] sun.nio.ch.IOUtil.read
  [17] sun.nio.ch.FileChannelImpl.readInternal
  [18] sun.nio.ch.FileChannelImpl.read
  [19] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [20] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [21] jdk.nio.zipfs.ZipFileSystem$2.fill
  [22] java.util.zip.InflaterInputStream.read
  [23] java.io.InputStream.readNBytes
  [24] java.io.InputStream.readAllBytes
  [25] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [26] jdk.nio.zipfs.ZipPath.newByteChannel
  [27] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [28] java.nio.file.Files.newByteChannel
  [29] java.nio.file.Files.newByteChannel
  [30] java.nio.file.Files.readAllBytes
  [31] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [32] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [33] cats.effect.IOFiber.$anonfun$8
  [34] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [35] cats.effect.unsafe.WorkerThread.blockOn
  [36] scala.concurrent.package$.blocking
  [37] cats.effect.IOFiber.runLoop
  [38] cats.effect.IOFiber.execR
  [39] cats.effect.IOFiber.run
  [40] cats.effect.unsafe.WorkerThread.run

--- 40036530 ns (0.02%), 4 samples
  [ 0] read_tsc_[k]
  [ 1] gethrtime?[zfs]_[k]
  [ 2] zio_wait?[zfs]_[k]
  [ 3] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 4] dmu_read_uio_dnode?[zfs]_[k]
  [ 5] dmu_read_uio_dbuf?[zfs]_[k]
  [ 6] zfs_read?[zfs]_[k]
  [ 7] zpl_iter_read?[zfs]_[k]
  [ 8] new_sync_read_[k]
  [ 9] vfs_read_[k]
  [10] __x64_sys_pread64_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] __libc_pread64
  [14] sun.nio.ch.FileDispatcherImpl.pread0
  [15] sun.nio.ch.FileDispatcherImpl.pread
  [16] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [17] sun.nio.ch.IOUtil.read
  [18] sun.nio.ch.IOUtil.read
  [19] sun.nio.ch.FileChannelImpl.readInternal
  [20] sun.nio.ch.FileChannelImpl.read
  [21] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [22] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [23] jdk.nio.zipfs.ZipFileSystem$2.fill
  [24] java.util.zip.InflaterInputStream.read
  [25] java.io.InputStream.readNBytes
  [26] java.io.InputStream.readAllBytes
  [27] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [28] jdk.nio.zipfs.ZipPath.newByteChannel
  [29] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [30] java.nio.file.Files.newByteChannel
  [31] java.nio.file.Files.newByteChannel
  [32] java.nio.file.Files.readAllBytes
  [33] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [34] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [35] cats.effect.IOFiber.$anonfun$8
  [36] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [37] cats.effect.unsafe.WorkerThread.blockOn
  [38] scala.concurrent.package$.blocking
  [39] cats.effect.IOFiber.runLoop
  [40] cats.effect.IOFiber.execR
  [41] cats.effect.IOFiber.run
  [42] cats.effect.unsafe.WorkerThread.run

--- 40029817 ns (0.02%), 4 samples
  [ 0] mutex_unlock_[k]
  [ 1] dbuf_hold_impl?[zfs]_[k]
  [ 2] dbuf_hold_level?[zfs]_[k]
  [ 3] dbuf_hold?[zfs]_[k]
  [ 4] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 5] dmu_read_uio_dnode?[zfs]_[k]
  [ 6] dmu_read_uio_dbuf?[zfs]_[k]
  [ 7] zfs_read?[zfs]_[k]
  [ 8] zpl_iter_read?[zfs]_[k]
  [ 9] new_sync_read_[k]
  [10] vfs_read_[k]
  [11] __x64_sys_pread64_[k]
  [12] do_syscall_64_[k]
  [13] entry_SYSCALL_64_after_hwframe_[k]
  [14] __libc_pread64
  [15] sun.nio.ch.FileDispatcherImpl.pread0
  [16] sun.nio.ch.FileDispatcherImpl.pread
  [17] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [18] sun.nio.ch.IOUtil.read
  [19] sun.nio.ch.IOUtil.read
  [20] sun.nio.ch.FileChannelImpl.readInternal
  [21] sun.nio.ch.FileChannelImpl.read
  [22] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [23] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [24] jdk.nio.zipfs.ZipFileSystem$2.fill
  [25] java.util.zip.InflaterInputStream.read
  [26] java.io.InputStream.readNBytes
  [27] java.io.InputStream.readAllBytes
  [28] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [29] jdk.nio.zipfs.ZipPath.newByteChannel
  [30] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [31] java.nio.file.Files.newByteChannel
  [32] java.nio.file.Files.newByteChannel
  [33] java.nio.file.Files.readAllBytes
  [34] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [35] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [36] cats.effect.IOFiber.$anonfun$8
  [37] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [38] cats.effect.unsafe.WorkerThread.blockOn
  [39] scala.concurrent.package$.blocking
  [40] cats.effect.IOFiber.runLoop
  [41] cats.effect.IOFiber.execR
  [42] cats.effect.IOFiber.run
  [43] cats.effect.unsafe.WorkerThread.run

--- 40025207 ns (0.02%), 4 samples
  [ 0] dbuf_cache_target_bytes?[zfs]_[k]
  [ 1] dbuf_evict_notify?[zfs]_[k]
  [ 2] dbuf_rele_and_unlock?[zfs]_[k]
  [ 3] dbuf_rele?[zfs]_[k]
  [ 4] dmu_buf_rele_array?[zfs]_[k]
  [ 5] dmu_read_uio_dnode?[zfs]_[k]
  [ 6] dmu_read_uio_dbuf?[zfs]_[k]
  [ 7] zfs_read?[zfs]_[k]
  [ 8] zpl_iter_read?[zfs]_[k]
  [ 9] new_sync_read_[k]
  [10] vfs_read_[k]
  [11] __x64_sys_pread64_[k]
  [12] do_syscall_64_[k]
  [13] entry_SYSCALL_64_after_hwframe_[k]
  [14] __libc_pread64
  [15] sun.nio.ch.FileDispatcherImpl.pread0
  [16] sun.nio.ch.FileDispatcherImpl.pread
  [17] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [18] sun.nio.ch.IOUtil.read
  [19] sun.nio.ch.IOUtil.read
  [20] sun.nio.ch.FileChannelImpl.readInternal
  [21] sun.nio.ch.FileChannelImpl.read
  [22] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [23] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [24] jdk.nio.zipfs.ZipFileSystem$2.fill
  [25] java.util.zip.InflaterInputStream.read
  [26] java.io.InputStream.readNBytes
  [27] java.io.InputStream.readAllBytes
  [28] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [29] jdk.nio.zipfs.ZipPath.newByteChannel
  [30] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [31] java.nio.file.Files.newByteChannel
  [32] java.nio.file.Files.newByteChannel
  [33] java.nio.file.Files.readAllBytes
  [34] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [35] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [36] cats.effect.IOFiber.$anonfun$8
  [37] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [38] cats.effect.unsafe.WorkerThread.blockOn
  [39] scala.concurrent.package$.blocking
  [40] cats.effect.IOFiber.runLoop
  [41] cats.effect.IOFiber.execR
  [42] cats.effect.IOFiber.run
  [43] cats.effect.unsafe.WorkerThread.run

--- 40016051 ns (0.02%), 4 samples
  [ 0] CollectedHeap::supports_object_pinning() const
  [ 1] Java_java_util_zip_Inflater_inflateBytesBytes
  [ 2] java.util.zip.Inflater.inflateBytesBytes
  [ 3] java.util.zip.Inflater.inflate
  [ 4] java.util.zip.InflaterInputStream.read
  [ 5] java.io.InputStream.readNBytes
  [ 6] java.io.InputStream.readAllBytes
  [ 7] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [ 8] jdk.nio.zipfs.ZipPath.newByteChannel
  [ 9] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [10] java.nio.file.Files.newByteChannel
  [11] java.nio.file.Files.newByteChannel
  [12] java.nio.file.Files.readAllBytes
  [13] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [14] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [15] cats.effect.IOFiber.$anonfun$8
  [16] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [17] cats.effect.unsafe.WorkerThread.blockOn
  [18] scala.concurrent.package$.blocking
  [19] cats.effect.IOFiber.runLoop
  [20] cats.effect.IOFiber.execR
  [21] cats.effect.IOFiber.run
  [22] cats.effect.unsafe.WorkerThread.run

--- 40010080 ns (0.02%), 4 samples
  [ 0] fsnotify_perm.part.0_[k]
  [ 1] security_file_permission_[k]
  [ 2] rw_verify_area_[k]
  [ 3] vfs_read_[k]
  [ 4] __x64_sys_pread64_[k]
  [ 5] do_syscall_64_[k]
  [ 6] entry_SYSCALL_64_after_hwframe_[k]
  [ 7] __libc_pread64
  [ 8] sun.nio.ch.FileDispatcherImpl.pread0
  [ 9] sun.nio.ch.FileDispatcherImpl.pread
  [10] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [11] sun.nio.ch.IOUtil.read
  [12] sun.nio.ch.IOUtil.read
  [13] sun.nio.ch.FileChannelImpl.readInternal
  [14] sun.nio.ch.FileChannelImpl.read
  [15] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [16] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [17] jdk.nio.zipfs.ZipFileSystem$2.fill
  [18] java.util.zip.InflaterInputStream.read
  [19] java.io.InputStream.readNBytes
  [20] java.io.InputStream.readAllBytes
  [21] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [22] jdk.nio.zipfs.ZipPath.newByteChannel
  [23] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [24] java.nio.file.Files.newByteChannel
  [25] java.nio.file.Files.newByteChannel
  [26] java.nio.file.Files.readAllBytes
  [27] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [28] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [29] cats.effect.IOFiber.$anonfun$8
  [30] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [31] cats.effect.unsafe.WorkerThread.blockOn
  [32] scala.concurrent.package$.blocking
  [33] cats.effect.IOFiber.runLoop
  [34] cats.effect.IOFiber.execR
  [35] cats.effect.IOFiber.run
  [36] cats.effect.unsafe.WorkerThread.run

--- 40006812 ns (0.02%), 4 samples
  [ 0] __x64_sys_pread64_[k]
  [ 1] do_syscall_64_[k]
  [ 2] entry_SYSCALL_64_after_hwframe_[k]
  [ 3] __libc_pread64
  [ 4] sun.nio.ch.FileDispatcherImpl.pread0
  [ 5] sun.nio.ch.FileDispatcherImpl.pread
  [ 6] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [ 7] sun.nio.ch.IOUtil.read
  [ 8] sun.nio.ch.IOUtil.read
  [ 9] sun.nio.ch.FileChannelImpl.readInternal
  [10] sun.nio.ch.FileChannelImpl.read
  [11] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [12] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [13] jdk.nio.zipfs.ZipFileSystem$2.fill
  [14] java.util.zip.InflaterInputStream.read
  [15] java.io.InputStream.readNBytes
  [16] java.io.InputStream.readAllBytes
  [17] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [18] jdk.nio.zipfs.ZipPath.newByteChannel
  [19] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [20] java.nio.file.Files.newByteChannel
  [21] java.nio.file.Files.newByteChannel
  [22] java.nio.file.Files.readAllBytes
  [23] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [24] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [25] cats.effect.IOFiber.$anonfun$8
  [26] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [27] cats.effect.unsafe.WorkerThread.blockOn
  [28] scala.concurrent.package$.blocking
  [29] cats.effect.IOFiber.runLoop
  [30] cats.effect.IOFiber.execR
  [31] cats.effect.IOFiber.run
  [32] cats.effect.unsafe.WorkerThread.run

--- 40000800 ns (0.02%), 4 samples
  [ 0] inflate
  [ 1] java.util.zip.Inflater.inflateBytesBytes
  [ 2] java.util.zip.Inflater.inflate
  [ 3] java.util.zip.InflaterInputStream.read
  [ 4] java.io.InputStream.readNBytes
  [ 5] java.io.InputStream.readAllBytes
  [ 6] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [ 7] jdk.nio.zipfs.ZipPath.newByteChannel
  [ 8] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [ 9] java.nio.file.Files.newByteChannel
  [10] java.nio.file.Files.newByteChannel
  [11] java.nio.file.Files.readAllBytes
  [12] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [13] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [14] cats.effect.IOFiber.$anonfun$8
  [15] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [16] cats.effect.unsafe.WorkerThread.blockOn
  [17] scala.concurrent.package$.blocking
  [18] cats.effect.IOFiber.runLoop
  [19] cats.effect.IOFiber.execR
  [20] cats.effect.IOFiber.run
  [21] cats.effect.unsafe.WorkerThread.run

--- 39997386 ns (0.02%), 4 samples
  [ 0] JavaFrameAnchor::make_walkable(JavaThread*)
  [ 1] Java_java_util_zip_Inflater_inflateBytesBytes
  [ 2] java.util.zip.Inflater.inflateBytesBytes
  [ 3] java.util.zip.Inflater.inflate
  [ 4] java.util.zip.InflaterInputStream.read
  [ 5] java.io.InputStream.readNBytes
  [ 6] java.io.InputStream.readAllBytes
  [ 7] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [ 8] jdk.nio.zipfs.ZipPath.newByteChannel
  [ 9] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [10] java.nio.file.Files.newByteChannel
  [11] java.nio.file.Files.newByteChannel
  [12] java.nio.file.Files.readAllBytes
  [13] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [14] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [15] cats.effect.IOFiber.$anonfun$8
  [16] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [17] cats.effect.unsafe.WorkerThread.blockOn
  [18] scala.concurrent.package$.blocking
  [19] cats.effect.IOFiber.runLoop
  [20] cats.effect.IOFiber.execR
  [21] cats.effect.IOFiber.run
  [22] cats.effect.unsafe.WorkerThread.run

--- 39995904 ns (0.02%), 4 samples
  [ 0] mutex_unlock_[k]
  [ 1] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 2] dmu_read_uio_dnode?[zfs]_[k]
  [ 3] dmu_read_uio_dbuf?[zfs]_[k]
  [ 4] zfs_read?[zfs]_[k]
  [ 5] zpl_iter_read?[zfs]_[k]
  [ 6] new_sync_read_[k]
  [ 7] vfs_read_[k]
  [ 8] __x64_sys_pread64_[k]
  [ 9] do_syscall_64_[k]
  [10] entry_SYSCALL_64_after_hwframe_[k]
  [11] __libc_pread64
  [12] sun.nio.ch.FileDispatcherImpl.pread0
  [13] sun.nio.ch.FileDispatcherImpl.pread
  [14] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [15] sun.nio.ch.IOUtil.read
  [16] sun.nio.ch.IOUtil.read
  [17] sun.nio.ch.FileChannelImpl.readInternal
  [18] sun.nio.ch.FileChannelImpl.read
  [19] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [20] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [21] jdk.nio.zipfs.ZipFileSystem$2.fill
  [22] java.util.zip.InflaterInputStream.read
  [23] java.io.InputStream.readNBytes
  [24] java.io.InputStream.readAllBytes
  [25] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [26] jdk.nio.zipfs.ZipPath.newByteChannel
  [27] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [28] java.nio.file.Files.newByteChannel
  [29] java.nio.file.Files.newByteChannel
  [30] java.nio.file.Files.readAllBytes
  [31] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [32] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [33] cats.effect.IOFiber.$anonfun$8
  [34] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [35] cats.effect.unsafe.WorkerThread.blockOn
  [36] scala.concurrent.package$.blocking
  [37] cats.effect.IOFiber.runLoop
  [38] cats.effect.IOFiber.execR
  [39] cats.effect.IOFiber.run
  [40] cats.effect.unsafe.WorkerThread.run

--- 30303689 ns (0.01%), 3 samples
  [ 0] G1RegionMarkStatsCache::reset()
  [ 1] G1ConcurrentMark::pre_concurrent_start(GCCause::Cause)
  [ 2] G1CollectedHeap::pre_evacuate_collection_set(G1EvacuationInfo&, G1ParScanThreadStateSet*)
  [ 3] G1CollectedHeap::do_collection_pause_at_safepoint_helper(double)
  [ 4] G1CollectedHeap::do_collection_pause_at_safepoint(double)
  [ 5] VM_G1TryInitiateConcMark::doit()
  [ 6] VM_Operation::evaluate()
  [ 7] VMThread::evaluate_operation(VM_Operation*)
  [ 8] VMThread::inner_execute(VM_Operation*)
  [ 9] VMThread::run()
  [10] Thread::call_run()
  [11] thread_native_entry(Thread*)
  [12] start_thread

--- 30264508 ns (0.01%), 3 samples
  [ 0] ClassLoaderDataGraph::clear_claimed_marks()
  [ 1] G1CollectedHeap::do_collection_pause_at_safepoint_helper(double)
  [ 2] G1CollectedHeap::do_collection_pause_at_safepoint(double)
  [ 3] VM_G1TryInitiateConcMark::doit()
  [ 4] VM_Operation::evaluate()
  [ 5] VMThread::evaluate_operation(VM_Operation*)
  [ 6] VMThread::inner_execute(VM_Operation*)
  [ 7] VMThread::run()
  [ 8] Thread::call_run()
  [ 9] thread_native_entry(Thread*)
  [10] start_thread

--- 30192632 ns (0.01%), 3 samples
  [ 0] G1ParCopyClosure<(G1Barrier)2, true>::do_oop(oopDesc**)
  [ 1] G1CodeBlobClosure::HeapRegionGatheringOopClosure::do_oop(oopDesc**)
  [ 2] nmethod::oops_do(OopClosure*, bool)
  [ 3] G1NmethodProcessor::do_regular_processing(nmethod*)
  [ 4] nmethod::oops_do_process_strong(nmethod::OopsDoProcessor*)
  [ 5] G1CodeBlobClosure::do_code_blob(CodeBlob*)
  [ 6] JavaThread::oops_do_frames(OopClosure*, CodeBlobClosure*) [clone .part.0]
  [ 7] Threads::possibly_parallel_oops_do(bool, OopClosure*, CodeBlobClosure*)
  [ 8] G1RootProcessor::process_java_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int)
  [ 9] G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int)
  [10] G1EvacuateRegionsTask::scan_roots(G1ParScanThreadState*, unsigned int)
  [11] G1EvacuateRegionsBaseTask::work(unsigned int)
  [12] GangWorker::loop()
  [13] GangWorker::run()
  [14] Thread::call_run()
  [15] thread_native_entry(Thread*)
  [16] start_thread

--- 30171110 ns (0.01%), 3 samples
  [ 0] G1CollectionSet::iterate_part_from(HeapRegionClosure*, HeapRegionClaimer*, unsigned long, unsigned long, unsigned int, unsigned int) const [clone .part.0]
  [ 1] G1CollectionSet::par_iterate(HeapRegionClosure*, HeapRegionClaimer*, unsigned int, unsigned int) const
  [ 2] G1PostEvacuateCollectionSetCleanupTask2::FreeCollectionSetTask::do_work(unsigned int)
  [ 3] G1BatchedGangTask::work(unsigned int)
  [ 4] GangWorker::loop()
  [ 5] GangWorker::run()
  [ 6] Thread::call_run()
  [ 7] thread_native_entry(Thread*)
  [ 8] start_thread

--- 30097241 ns (0.01%), 3 samples
  [ 0] nmethod::oops_do(OopClosure*, bool)
  [ 1] G1NmethodProcessor::do_regular_processing(nmethod*)
  [ 2] nmethod::oops_do_process_strong(nmethod::OopsDoProcessor*)
  [ 3] G1CodeBlobClosure::do_code_blob(CodeBlob*)
  [ 4] JavaThread::oops_do_frames(OopClosure*, CodeBlobClosure*) [clone .part.0]
  [ 5] Threads::possibly_parallel_oops_do(bool, OopClosure*, CodeBlobClosure*)
  [ 6] G1RootProcessor::process_java_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int)
  [ 7] G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int)
  [ 8] G1EvacuateRegionsTask::scan_roots(G1ParScanThreadState*, unsigned int)
  [ 9] G1EvacuateRegionsBaseTask::work(unsigned int)
  [10] GangWorker::loop()
  [11] GangWorker::run()
  [12] Thread::call_run()
  [13] thread_native_entry(Thread*)
  [14] start_thread

--- 30065042 ns (0.01%), 3 samples
  [ 0] G1PrepareEvacuationTask::G1PrepareRegionsClosure::do_heap_region(HeapRegion*)
  [ 1] HeapRegionManager::par_iterate(HeapRegionClosure*, HeapRegionClaimer*, unsigned int) const
  [ 2] G1PrepareEvacuationTask::work(unsigned int)
  [ 3] GangWorker::loop()
  [ 4] GangWorker::run()
  [ 5] Thread::call_run()
  [ 6] thread_native_entry(Thread*)
  [ 7] start_thread

--- 30060751 ns (0.01%), 3 samples
  [ 0] java.nio.file.Files.read
  [ 1] java.nio.file.Files.readAllBytes
  [ 2] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [ 3] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [ 4] cats.effect.IOFiber.$anonfun$8
  [ 5] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [ 6] cats.effect.unsafe.WorkerThread.blockOn
  [ 7] scala.concurrent.package$.blocking
  [ 8] cats.effect.IOFiber.runLoop
  [ 9] cats.effect.IOFiber.execR
  [10] cats.effect.IOFiber.run
  [11] cats.effect.unsafe.WorkerThread.run

--- 30056972 ns (0.01%), 3 samples
  [ 0] _raw_spin_unlock_irqrestore_[k]
  [ 1] try_to_wake_up_[k]
  [ 2] wake_up_q_[k]
  [ 3] futex_wake_[k]
  [ 4] do_futex_[k]
  [ 5] __x64_sys_futex_[k]
  [ 6] do_syscall_64_[k]
  [ 7] entry_SYSCALL_64_after_hwframe_[k]
  [ 8] pthread_cond_signal@@GLIBC_2.3.2
  [ 9] jdk.internal.misc.Unsafe.unpark
  [10] java.util.concurrent.locks.LockSupport.unpark
  [11] java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext
  [12] java.util.concurrent.locks.AbstractQueuedSynchronizer.release
  [13] java.util.concurrent.locks.ReentrantLock.unlock
  [14] java.util.concurrent.ArrayBlockingQueue.offer
  [15] cats.effect.IOPlatform.unsafeRunTimed$$anonfun$1
  [16] cats.effect.IOPlatform$$Lambda$137.0x0000000800d9e8b0.applyVoid
  [17] scala.runtime.function.JProcedure1.apply
  [18] scala.runtime.function.JProcedure1.apply
  [19] cats.effect.IO.unsafeRunAsync$$anonfun$3
  [20] cats.effect.IO$$Lambda$140.0x0000000800d9f380.applyVoid
  [21] scala.runtime.function.JProcedure1.apply
  [22] scala.runtime.function.JProcedure1.apply
  [23] cats.effect.IO.$anonfun$6$$anonfun$3
  [24] cats.effect.IO$$Lambda$149.0x0000000800da19b0.applyVoid
  [25] scala.runtime.function.JProcedure1.apply
  [26] scala.runtime.function.JProcedure1.apply
  [27] cats.effect.kernel.Outcome.fold
  [28] cats.effect.kernel.Outcome.fold$
  [29] cats.effect.kernel.Outcome$Succeeded.fold
  [30] cats.effect.IO.$anonfun$6
  [31] cats.effect.IO$$Lambda$141.0x0000000800d9a530.applyVoid
  [32] scala.runtime.function.JProcedure1.apply
  [33] scala.runtime.function.JProcedure1.apply
  [34] cats.effect.CallbackStack.apply
  [35] cats.effect.IOFiber.done
  [36] cats.effect.IOFiber.runTerminusSuccessK
  [37] cats.effect.IOFiber.succeeded
  [38] cats.effect.IOFiber.runLoop
  [39] cats.effect.IOFiber.execR
  [40] cats.effect.IOFiber.run
  [41] cats.effect.unsafe.WorkerThread.run

--- 30055802 ns (0.01%), 3 samples
  [ 0] cats.effect.unsafe.ScalQueue.poll
  [ 1] cats.effect.unsafe.WorkerThread.run

--- 30053587 ns (0.01%), 3 samples
  [ 0] memset_[k]
  [ 1] spl_kmem_alloc_impl?[spl]_[k]
  [ 2] spl_kmem_alloc?[spl]_[k]
  [ 3] zfs_rangelock_enter_impl?[zfs]_[k]
  [ 4] zfs_rangelock_enter?[zfs]_[k]
  [ 5] zfs_read?[zfs]_[k]
  [ 6] zpl_iter_read?[zfs]_[k]
  [ 7] new_sync_read_[k]
  [ 8] vfs_read_[k]
  [ 9] __x64_sys_pread64_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] __libc_pread64
  [13] sun.nio.ch.FileDispatcherImpl.pread0
  [14] sun.nio.ch.FileDispatcherImpl.pread
  [15] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [16] sun.nio.ch.IOUtil.read
  [17] sun.nio.ch.IOUtil.read
  [18] sun.nio.ch.FileChannelImpl.readInternal
  [19] sun.nio.ch.FileChannelImpl.read
  [20] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [21] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [22] jdk.nio.zipfs.ZipFileSystem$2.fill
  [23] java.util.zip.InflaterInputStream.read
  [24] java.io.InputStream.readNBytes
  [25] java.io.InputStream.readAllBytes
  [26] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [27] jdk.nio.zipfs.ZipPath.newByteChannel
  [28] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [29] java.nio.file.Files.newByteChannel
  [30] java.nio.file.Files.newByteChannel
  [31] java.nio.file.Files.readAllBytes
  [32] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [33] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [34] cats.effect.IOFiber.$anonfun$8
  [35] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [36] cats.effect.unsafe.WorkerThread.blockOn
  [37] scala.concurrent.package$.blocking
  [38] cats.effect.IOFiber.runLoop
  [39] cats.effect.IOFiber.execR
  [40] cats.effect.IOFiber.run
  [41] cats.effect.unsafe.WorkerThread.run

--- 30053536 ns (0.01%), 3 samples
  [ 0] mutex_lock_[k]
  [ 1] zfs_rangelock_exit?[zfs]_[k]
  [ 2] zfs_read?[zfs]_[k]
  [ 3] zpl_iter_read?[zfs]_[k]
  [ 4] new_sync_read_[k]
  [ 5] vfs_read_[k]
  [ 6] __x64_sys_pread64_[k]
  [ 7] do_syscall_64_[k]
  [ 8] entry_SYSCALL_64_after_hwframe_[k]
  [ 9] __libc_pread64
  [10] sun.nio.ch.FileDispatcherImpl.pread0
  [11] sun.nio.ch.FileDispatcherImpl.pread
  [12] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [13] sun.nio.ch.IOUtil.read
  [14] sun.nio.ch.IOUtil.read
  [15] sun.nio.ch.FileChannelImpl.readInternal
  [16] sun.nio.ch.FileChannelImpl.read
  [17] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [18] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [19] jdk.nio.zipfs.ZipFileSystem$2.fill
  [20] java.util.zip.InflaterInputStream.read
  [21] java.io.InputStream.readNBytes
  [22] java.io.InputStream.readAllBytes
  [23] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [24] jdk.nio.zipfs.ZipPath.newByteChannel
  [25] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [26] java.nio.file.Files.newByteChannel
  [27] java.nio.file.Files.newByteChannel
  [28] java.nio.file.Files.readAllBytes
  [29] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [30] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [31] cats.effect.IOFiber.$anonfun$8
  [32] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [33] cats.effect.unsafe.WorkerThread.blockOn
  [34] scala.concurrent.package$.blocking
  [35] cats.effect.IOFiber.runLoop
  [36] cats.effect.IOFiber.execR
  [37] cats.effect.IOFiber.run
  [38] cats.effect.unsafe.WorkerThread.run

--- 30053315 ns (0.01%), 3 samples
  [ 0] dbuf_find?[zfs]_[k]
  [ 1] dbuf_hold_impl?[zfs]_[k]
  [ 2] dbuf_hold_level?[zfs]_[k]
  [ 3] dbuf_hold?[zfs]_[k]
  [ 4] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 5] dmu_read_uio_dnode?[zfs]_[k]
  [ 6] dmu_read_uio_dbuf?[zfs]_[k]
  [ 7] zfs_read?[zfs]_[k]
  [ 8] zpl_iter_read?[zfs]_[k]
  [ 9] new_sync_read_[k]
  [10] vfs_read_[k]
  [11] __x64_sys_pread64_[k]
  [12] do_syscall_64_[k]
  [13] entry_SYSCALL_64_after_hwframe_[k]
  [14] __libc_pread64
  [15] sun.nio.ch.FileDispatcherImpl.pread0
  [16] sun.nio.ch.FileDispatcherImpl.pread
  [17] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [18] sun.nio.ch.IOUtil.read
  [19] sun.nio.ch.IOUtil.read
  [20] sun.nio.ch.FileChannelImpl.readInternal
  [21] sun.nio.ch.FileChannelImpl.read
  [22] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [23] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [24] jdk.nio.zipfs.ZipFileSystem$2.fill
  [25] java.util.zip.InflaterInputStream.read
  [26] java.io.InputStream.readNBytes
  [27] java.io.InputStream.readAllBytes
  [28] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [29] jdk.nio.zipfs.ZipPath.newByteChannel
  [30] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [31] java.nio.file.Files.newByteChannel
  [32] java.nio.file.Files.newByteChannel
  [33] java.nio.file.Files.readAllBytes
  [34] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [35] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [36] cats.effect.IOFiber.$anonfun$8
  [37] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [38] cats.effect.unsafe.WorkerThread.blockOn
  [39] scala.concurrent.package$.blocking
  [40] cats.effect.IOFiber.runLoop
  [41] cats.effect.IOFiber.execR
  [42] cats.effect.IOFiber.run
  [43] cats.effect.unsafe.WorkerThread.run

--- 30045742 ns (0.01%), 3 samples
  [ 0] cats.effect.unsafe.WorkerThread.run

--- 30042767 ns (0.01%), 3 samples
  [ 0] spl_kmem_cache_alloc?[spl]_[k]
  [ 1] zio_create?[zfs]_[k]
  [ 2] zio_null?[zfs]_[k]
  [ 3] zio_root?[zfs]_[k]
  [ 4] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 5] dmu_read_uio_dnode?[zfs]_[k]
  [ 6] dmu_read_uio_dbuf?[zfs]_[k]
  [ 7] zfs_read?[zfs]_[k]
  [ 8] zpl_iter_read?[zfs]_[k]
  [ 9] new_sync_read_[k]
  [10] vfs_read_[k]
  [11] __x64_sys_pread64_[k]
  [12] do_syscall_64_[k]
  [13] entry_SYSCALL_64_after_hwframe_[k]
  [14] __libc_pread64
  [15] sun.nio.ch.FileDispatcherImpl.pread0
  [16] sun.nio.ch.FileDispatcherImpl.pread
  [17] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [18] sun.nio.ch.IOUtil.read
  [19] sun.nio.ch.IOUtil.read
  [20] sun.nio.ch.FileChannelImpl.readInternal
  [21] sun.nio.ch.FileChannelImpl.read
  [22] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [23] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [24] jdk.nio.zipfs.ZipFileSystem$2.fill
  [25] java.util.zip.InflaterInputStream.read
  [26] java.io.InputStream.readNBytes
  [27] java.io.InputStream.readAllBytes
  [28] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [29] jdk.nio.zipfs.ZipPath.newByteChannel
  [30] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [31] java.nio.file.Files.newByteChannel
  [32] java.nio.file.Files.newByteChannel
  [33] java.nio.file.Files.readAllBytes
  [34] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [35] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [36] cats.effect.IOFiber.$anonfun$8
  [37] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [38] cats.effect.unsafe.WorkerThread.blockOn
  [39] scala.concurrent.package$.blocking
  [40] cats.effect.IOFiber.runLoop
  [41] cats.effect.IOFiber.execR
  [42] cats.effect.IOFiber.run
  [43] cats.effect.unsafe.WorkerThread.run

--- 30041924 ns (0.01%), 3 samples
  [ 0] kfree_[k]
  [ 1] spl_kmem_free_impl?[spl]_[k]
  [ 2] spl_kmem_free?[spl]_[k]
  [ 3] dmu_buf_rele_array?[zfs]_[k]
  [ 4] dmu_read_uio_dnode?[zfs]_[k]
  [ 5] dmu_read_uio_dbuf?[zfs]_[k]
  [ 6] zfs_read?[zfs]_[k]
  [ 7] zpl_iter_read?[zfs]_[k]
  [ 8] new_sync_read_[k]
  [ 9] vfs_read_[k]
  [10] __x64_sys_pread64_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] __libc_pread64
  [14] sun.nio.ch.FileDispatcherImpl.pread0
  [15] sun.nio.ch.FileDispatcherImpl.pread
  [16] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [17] sun.nio.ch.IOUtil.read
  [18] sun.nio.ch.IOUtil.read
  [19] sun.nio.ch.FileChannelImpl.readInternal
  [20] sun.nio.ch.FileChannelImpl.read
  [21] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [22] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [23] jdk.nio.zipfs.ZipFileSystem$2.fill
  [24] java.util.zip.InflaterInputStream.read
  [25] java.io.InputStream.readNBytes
  [26] java.io.InputStream.readAllBytes
  [27] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [28] jdk.nio.zipfs.ZipPath.newByteChannel
  [29] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [30] java.nio.file.Files.newByteChannel
  [31] java.nio.file.Files.newByteChannel
  [32] java.nio.file.Files.readAllBytes
  [33] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [34] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [35] cats.effect.IOFiber.$anonfun$8
  [36] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [37] cats.effect.unsafe.WorkerThread.blockOn
  [38] scala.concurrent.package$.blocking
  [39] cats.effect.IOFiber.runLoop
  [40] cats.effect.IOFiber.execR
  [41] cats.effect.IOFiber.run
  [42] cats.effect.unsafe.WorkerThread.run

--- 30039300 ns (0.01%), 3 samples
  [ 0] _copy_to_iter_[k]
  [ 1] zfs_uiomove_iter?[zfs]_[k]
  [ 2] zfs_uiomove?[zfs]_[k]
  [ 3] dmu_read_uio_dnode?[zfs]_[k]
  [ 4] dmu_read_uio_dbuf?[zfs]_[k]
  [ 5] zfs_read?[zfs]_[k]
  [ 6] zpl_iter_read?[zfs]_[k]
  [ 7] new_sync_read_[k]
  [ 8] vfs_read_[k]
  [ 9] __x64_sys_pread64_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] __libc_pread64
  [13] sun.nio.ch.FileDispatcherImpl.pread0
  [14] sun.nio.ch.FileDispatcherImpl.pread
  [15] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [16] sun.nio.ch.IOUtil.read
  [17] sun.nio.ch.IOUtil.read
  [18] sun.nio.ch.FileChannelImpl.readInternal
  [19] sun.nio.ch.FileChannelImpl.read
  [20] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [21] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [22] jdk.nio.zipfs.ZipFileSystem$2.fill
  [23] java.util.zip.InflaterInputStream.read
  [24] java.io.InputStream.readNBytes
  [25] java.io.InputStream.readAllBytes
  [26] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [27] jdk.nio.zipfs.ZipPath.newByteChannel
  [28] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [29] java.nio.file.Files.newByteChannel
  [30] java.nio.file.Files.newByteChannel
  [31] java.nio.file.Files.readAllBytes
  [32] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [33] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [34] cats.effect.IOFiber.$anonfun$8
  [35] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [36] cats.effect.unsafe.WorkerThread.blockOn
  [37] scala.concurrent.package$.blocking
  [38] cats.effect.IOFiber.runLoop
  [39] cats.effect.IOFiber.execR
  [40] cats.effect.IOFiber.run
  [41] cats.effect.unsafe.WorkerThread.run

--- 30035143 ns (0.01%), 3 samples
  [ 0] apparmor_file_permission_[k]
  [ 1] security_file_permission_[k]
  [ 2] rw_verify_area_[k]
  [ 3] vfs_read_[k]
  [ 4] __x64_sys_pread64_[k]
  [ 5] do_syscall_64_[k]
  [ 6] entry_SYSCALL_64_after_hwframe_[k]
  [ 7] __libc_pread64
  [ 8] sun.nio.ch.FileDispatcherImpl.pread0
  [ 9] sun.nio.ch.FileDispatcherImpl.pread
  [10] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [11] sun.nio.ch.IOUtil.read
  [12] sun.nio.ch.IOUtil.read
  [13] sun.nio.ch.FileChannelImpl.readInternal
  [14] sun.nio.ch.FileChannelImpl.read
  [15] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [16] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [17] jdk.nio.zipfs.ZipFileSystem$2.fill
  [18] java.util.zip.InflaterInputStream.read
  [19] java.io.InputStream.readNBytes
  [20] java.io.InputStream.readAllBytes
  [21] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [22] jdk.nio.zipfs.ZipPath.newByteChannel
  [23] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [24] java.nio.file.Files.newByteChannel
  [25] java.nio.file.Files.newByteChannel
  [26] java.nio.file.Files.readAllBytes
  [27] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [28] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [29] cats.effect.IOFiber.$anonfun$8
  [30] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [31] cats.effect.unsafe.WorkerThread.blockOn
  [32] scala.concurrent.package$.blocking
  [33] cats.effect.IOFiber.runLoop
  [34] cats.effect.IOFiber.execR
  [35] cats.effect.IOFiber.run
  [36] cats.effect.unsafe.WorkerThread.run

--- 30032808 ns (0.01%), 3 samples
  [ 0] scala.concurrent.duration.FiniteDuration.length
  [ 1] cats.effect.unsafe.WorkerThread.run

--- 30031354 ns (0.01%), 3 samples
  [ 0] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 1] dmu_read_uio_dbuf?[zfs]_[k]
  [ 2] zfs_read?[zfs]_[k]
  [ 3] zpl_iter_read?[zfs]_[k]
  [ 4] new_sync_read_[k]
  [ 5] vfs_read_[k]
  [ 6] __x64_sys_pread64_[k]
  [ 7] do_syscall_64_[k]
  [ 8] entry_SYSCALL_64_after_hwframe_[k]
  [ 9] __libc_pread64
  [10] sun.nio.ch.FileDispatcherImpl.pread0
  [11] sun.nio.ch.FileDispatcherImpl.pread
  [12] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [13] sun.nio.ch.IOUtil.read
  [14] sun.nio.ch.IOUtil.read
  [15] sun.nio.ch.FileChannelImpl.readInternal
  [16] sun.nio.ch.FileChannelImpl.read
  [17] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [18] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [19] jdk.nio.zipfs.ZipFileSystem$2.fill
  [20] java.util.zip.InflaterInputStream.read
  [21] java.io.InputStream.readNBytes
  [22] java.io.InputStream.readAllBytes
  [23] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [24] jdk.nio.zipfs.ZipPath.newByteChannel
  [25] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [26] java.nio.file.Files.newByteChannel
  [27] java.nio.file.Files.newByteChannel
  [28] java.nio.file.Files.readAllBytes
  [29] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [30] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [31] cats.effect.IOFiber.$anonfun$8
  [32] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [33] cats.effect.unsafe.WorkerThread.blockOn
  [34] scala.concurrent.package$.blocking
  [35] cats.effect.IOFiber.runLoop
  [36] cats.effect.IOFiber.execR
  [37] cats.effect.IOFiber.run
  [38] cats.effect.unsafe.WorkerThread.run

--- 30030545 ns (0.01%), 3 samples
  [ 0] arch_atomic64_sub_return.constprop.0?[zfs]_[k]
  [ 1] dbuf_rele?[zfs]_[k]
  [ 2] dmu_buf_rele_array?[zfs]_[k]
  [ 3] dmu_read_uio_dnode?[zfs]_[k]
  [ 4] dmu_read_uio_dbuf?[zfs]_[k]
  [ 5] zfs_read?[zfs]_[k]
  [ 6] zpl_iter_read?[zfs]_[k]
  [ 7] new_sync_read_[k]
  [ 8] vfs_read_[k]
  [ 9] __x64_sys_pread64_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] __libc_pread64
  [13] sun.nio.ch.FileDispatcherImpl.pread0
  [14] sun.nio.ch.FileDispatcherImpl.pread
  [15] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [16] sun.nio.ch.IOUtil.read
  [17] sun.nio.ch.IOUtil.read
  [18] sun.nio.ch.FileChannelImpl.readInternal
  [19] sun.nio.ch.FileChannelImpl.read
  [20] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [21] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [22] jdk.nio.zipfs.ZipFileSystem$2.fill
  [23] java.util.zip.InflaterInputStream.read
  [24] java.io.InputStream.readNBytes
  [25] java.io.InputStream.readAllBytes
  [26] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [27] jdk.nio.zipfs.ZipPath.newByteChannel
  [28] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [29] java.nio.file.Files.newByteChannel
  [30] java.nio.file.Files.newByteChannel
  [31] java.nio.file.Files.readAllBytes
  [32] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [33] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [34] cats.effect.IOFiber.$anonfun$8
  [35] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [36] cats.effect.unsafe.WorkerThread.blockOn
  [37] scala.concurrent.package$.blocking
  [38] cats.effect.IOFiber.runLoop
  [39] cats.effect.IOFiber.execR
  [40] cats.effect.IOFiber.run
  [41] cats.effect.unsafe.WorkerThread.run

--- 30026595 ns (0.01%), 3 samples
  [ 0] zrl_add_impl?[zfs]_[k]
  [ 1] dbuf_read?[zfs]_[k]
  [ 2] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 3] dmu_read_uio_dnode?[zfs]_[k]
  [ 4] dmu_read_uio_dbuf?[zfs]_[k]
  [ 5] zfs_read?[zfs]_[k]
  [ 6] zpl_iter_read?[zfs]_[k]
  [ 7] new_sync_read_[k]
  [ 8] vfs_read_[k]
  [ 9] __x64_sys_pread64_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] __libc_pread64
  [13] sun.nio.ch.FileDispatcherImpl.pread0
  [14] sun.nio.ch.FileDispatcherImpl.pread
  [15] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [16] sun.nio.ch.IOUtil.read
  [17] sun.nio.ch.IOUtil.read
  [18] sun.nio.ch.FileChannelImpl.readInternal
  [19] sun.nio.ch.FileChannelImpl.read
  [20] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [21] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [22] jdk.nio.zipfs.ZipFileSystem$2.fill
  [23] java.util.zip.InflaterInputStream.read
  [24] java.io.InputStream.readNBytes
  [25] java.io.InputStream.readAllBytes
  [26] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [27] jdk.nio.zipfs.ZipPath.newByteChannel
  [28] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [29] java.nio.file.Files.newByteChannel
  [30] java.nio.file.Files.newByteChannel
  [31] java.nio.file.Files.readAllBytes
  [32] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [33] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [34] cats.effect.IOFiber.$anonfun$8
  [35] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [36] cats.effect.unsafe.WorkerThread.blockOn
  [37] scala.concurrent.package$.blocking
  [38] cats.effect.IOFiber.runLoop
  [39] cats.effect.IOFiber.execR
  [40] cats.effect.IOFiber.run
  [41] cats.effect.unsafe.WorkerThread.run

--- 30025184 ns (0.01%), 3 samples
  [ 0] _raw_spin_lock_[k]
  [ 1] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 2] dmu_read_uio_dnode?[zfs]_[k]
  [ 3] dmu_read_uio_dbuf?[zfs]_[k]
  [ 4] zfs_read?[zfs]_[k]
  [ 5] zpl_iter_read?[zfs]_[k]
  [ 6] new_sync_read_[k]
  [ 7] vfs_read_[k]
  [ 8] __x64_sys_pread64_[k]
  [ 9] do_syscall_64_[k]
  [10] entry_SYSCALL_64_after_hwframe_[k]
  [11] __libc_pread64
  [12] sun.nio.ch.FileDispatcherImpl.pread0
  [13] sun.nio.ch.FileDispatcherImpl.pread
  [14] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [15] sun.nio.ch.IOUtil.read
  [16] sun.nio.ch.IOUtil.read
  [17] sun.nio.ch.FileChannelImpl.readInternal
  [18] sun.nio.ch.FileChannelImpl.read
  [19] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [20] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [21] jdk.nio.zipfs.ZipFileSystem$2.fill
  [22] java.util.zip.InflaterInputStream.read
  [23] java.io.InputStream.readNBytes
  [24] java.io.InputStream.readAllBytes
  [25] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [26] jdk.nio.zipfs.ZipPath.newByteChannel
  [27] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [28] java.nio.file.Files.newByteChannel
  [29] java.nio.file.Files.newByteChannel
  [30] java.nio.file.Files.readAllBytes
  [31] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [32] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [33] cats.effect.IOFiber.$anonfun$8
  [34] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [35] cats.effect.unsafe.WorkerThread.blockOn
  [36] scala.concurrent.package$.blocking
  [37] cats.effect.IOFiber.runLoop
  [38] cats.effect.IOFiber.execR
  [39] cats.effect.IOFiber.run
  [40] cats.effect.unsafe.WorkerThread.run

--- 30022919 ns (0.01%), 3 samples
  [ 0] kfree_[k]
  [ 1] spl_kmem_free?[spl]_[k]
  [ 2] dmu_buf_rele_array?[zfs]_[k]
  [ 3] dmu_read_uio_dnode?[zfs]_[k]
  [ 4] dmu_read_uio_dbuf?[zfs]_[k]
  [ 5] zfs_read?[zfs]_[k]
  [ 6] zpl_iter_read?[zfs]_[k]
  [ 7] new_sync_read_[k]
  [ 8] vfs_read_[k]
  [ 9] __x64_sys_pread64_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] __libc_pread64
  [13] sun.nio.ch.FileDispatcherImpl.pread0
  [14] sun.nio.ch.FileDispatcherImpl.pread
  [15] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [16] sun.nio.ch.IOUtil.read
  [17] sun.nio.ch.IOUtil.read
  [18] sun.nio.ch.FileChannelImpl.readInternal
  [19] sun.nio.ch.FileChannelImpl.read
  [20] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [21] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [22] jdk.nio.zipfs.ZipFileSystem$2.fill
  [23] java.util.zip.InflaterInputStream.read
  [24] java.io.InputStream.readNBytes
  [25] java.io.InputStream.readAllBytes
  [26] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [27] jdk.nio.zipfs.ZipPath.newByteChannel
  [28] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [29] java.nio.file.Files.newByteChannel
  [30] java.nio.file.Files.newByteChannel
  [31] java.nio.file.Files.readAllBytes
  [32] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [33] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [34] cats.effect.IOFiber.$anonfun$8
  [35] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [36] cats.effect.unsafe.WorkerThread.blockOn
  [37] scala.concurrent.package$.blocking
  [38] cats.effect.IOFiber.runLoop
  [39] cats.effect.IOFiber.execR
  [40] cats.effect.IOFiber.run
  [41] cats.effect.unsafe.WorkerThread.run

--- 30022839 ns (0.01%), 3 samples
  [ 0] mutex_lock_[k]
  [ 1] rrw_enter_read_impl?[zfs]_[k]
  [ 2] rrw_enter_read?[zfs]_[k]
  [ 3] rrm_enter_read?[zfs]_[k]
  [ 4] zfs_read?[zfs]_[k]
  [ 5] zpl_iter_read?[zfs]_[k]
  [ 6] new_sync_read_[k]
  [ 7] vfs_read_[k]
  [ 8] __x64_sys_pread64_[k]
  [ 9] do_syscall_64_[k]
  [10] entry_SYSCALL_64_after_hwframe_[k]
  [11] __libc_pread64
  [12] sun.nio.ch.FileDispatcherImpl.pread0
  [13] sun.nio.ch.FileDispatcherImpl.pread
  [14] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [15] sun.nio.ch.IOUtil.read
  [16] sun.nio.ch.IOUtil.read
  [17] sun.nio.ch.FileChannelImpl.readInternal
  [18] sun.nio.ch.FileChannelImpl.read
  [19] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [20] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [21] jdk.nio.zipfs.ZipFileSystem$2.fill
  [22] java.util.zip.InflaterInputStream.read
  [23] java.io.InputStream.readNBytes
  [24] java.io.InputStream.readAllBytes
  [25] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [26] jdk.nio.zipfs.ZipPath.newByteChannel
  [27] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [28] java.nio.file.Files.newByteChannel
  [29] java.nio.file.Files.newByteChannel
  [30] java.nio.file.Files.readAllBytes
  [31] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [32] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [33] cats.effect.IOFiber.$anonfun$8
  [34] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [35] cats.effect.unsafe.WorkerThread.blockOn
  [36] scala.concurrent.package$.blocking
  [37] cats.effect.IOFiber.runLoop
  [38] cats.effect.IOFiber.execR
  [39] cats.effect.IOFiber.run
  [40] cats.effect.unsafe.WorkerThread.run

--- 30021827 ns (0.01%), 3 samples
  [ 0] __fsnotify_parent_[k]
  [ 1] fsnotify_perm.part.0_[k]
  [ 2] security_file_permission_[k]
  [ 3] rw_verify_area_[k]
  [ 4] vfs_read_[k]
  [ 5] __x64_sys_pread64_[k]
  [ 6] do_syscall_64_[k]
  [ 7] entry_SYSCALL_64_after_hwframe_[k]
  [ 8] __libc_pread64
  [ 9] sun.nio.ch.FileDispatcherImpl.pread0
  [10] sun.nio.ch.FileDispatcherImpl.pread
  [11] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [12] sun.nio.ch.IOUtil.read
  [13] sun.nio.ch.IOUtil.read
  [14] sun.nio.ch.FileChannelImpl.readInternal
  [15] sun.nio.ch.FileChannelImpl.read
  [16] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [17] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [18] jdk.nio.zipfs.ZipFileSystem$2.fill
  [19] java.util.zip.InflaterInputStream.read
  [20] java.io.InputStream.readNBytes
  [21] java.io.InputStream.readAllBytes
  [22] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [23] jdk.nio.zipfs.ZipPath.newByteChannel
  [24] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [25] java.nio.file.Files.newByteChannel
  [26] java.nio.file.Files.newByteChannel
  [27] java.nio.file.Files.readAllBytes
  [28] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [29] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [30] cats.effect.IOFiber.$anonfun$8
  [31] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [32] cats.effect.unsafe.WorkerThread.blockOn
  [33] scala.concurrent.package$.blocking
  [34] cats.effect.IOFiber.runLoop
  [35] cats.effect.IOFiber.execR
  [36] cats.effect.IOFiber.run
  [37] cats.effect.unsafe.WorkerThread.run

--- 30019924 ns (0.01%), 3 samples
  [ 0] mutex_lock_[k]
  [ 1] rrw_exit?[zfs]_[k]
  [ 2] rrm_exit?[zfs]_[k]
  [ 3] zfs_read?[zfs]_[k]
  [ 4] zpl_iter_read?[zfs]_[k]
  [ 5] new_sync_read_[k]
  [ 6] vfs_read_[k]
  [ 7] __x64_sys_pread64_[k]
  [ 8] do_syscall_64_[k]
  [ 9] entry_SYSCALL_64_after_hwframe_[k]
  [10] __libc_pread64
  [11] sun.nio.ch.FileDispatcherImpl.pread0
  [12] sun.nio.ch.FileDispatcherImpl.pread
  [13] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [14] sun.nio.ch.IOUtil.read
  [15] sun.nio.ch.IOUtil.read
  [16] sun.nio.ch.FileChannelImpl.readInternal
  [17] sun.nio.ch.FileChannelImpl.read
  [18] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [19] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [20] jdk.nio.zipfs.ZipFileSystem$2.fill
  [21] java.util.zip.InflaterInputStream.read
  [22] java.io.InputStream.readNBytes
  [23] java.io.InputStream.readAllBytes
  [24] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [25] jdk.nio.zipfs.ZipPath.newByteChannel
  [26] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [27] java.nio.file.Files.newByteChannel
  [28] java.nio.file.Files.newByteChannel
  [29] java.nio.file.Files.readAllBytes
  [30] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [31] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [32] cats.effect.IOFiber.$anonfun$8
  [33] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [34] cats.effect.unsafe.WorkerThread.blockOn
  [35] scala.concurrent.package$.blocking
  [36] cats.effect.IOFiber.runLoop
  [37] cats.effect.IOFiber.execR
  [38] cats.effect.IOFiber.run
  [39] cats.effect.unsafe.WorkerThread.run

--- 30016787 ns (0.01%), 3 samples
  [ 0] cityhash4?[zcommon]_[k]
  [ 1] dbuf_cache_multilist_index_func?[zfs]_[k]
  [ 2] multilist_insert?[zfs]_[k]
  [ 3] dbuf_rele_and_unlock?[zfs]_[k]
  [ 4] dbuf_rele?[zfs]_[k]
  [ 5] dmu_buf_rele_array?[zfs]_[k]
  [ 6] dmu_read_uio_dnode?[zfs]_[k]
  [ 7] dmu_read_uio_dbuf?[zfs]_[k]
  [ 8] zfs_read?[zfs]_[k]
  [ 9] zpl_iter_read?[zfs]_[k]
  [10] new_sync_read_[k]
  [11] vfs_read_[k]
  [12] __x64_sys_pread64_[k]
  [13] do_syscall_64_[k]
  [14] entry_SYSCALL_64_after_hwframe_[k]
  [15] __libc_pread64
  [16] sun.nio.ch.FileDispatcherImpl.pread0
  [17] sun.nio.ch.FileDispatcherImpl.pread
  [18] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [19] sun.nio.ch.IOUtil.read
  [20] sun.nio.ch.IOUtil.read
  [21] sun.nio.ch.FileChannelImpl.readInternal
  [22] sun.nio.ch.FileChannelImpl.read
  [23] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [24] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [25] jdk.nio.zipfs.ZipFileSystem$2.fill
  [26] java.util.zip.InflaterInputStream.read
  [27] java.io.InputStream.readNBytes
  [28] java.io.InputStream.readAllBytes
  [29] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [30] jdk.nio.zipfs.ZipPath.newByteChannel
  [31] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [32] java.nio.file.Files.newByteChannel
  [33] java.nio.file.Files.newByteChannel
  [34] java.nio.file.Files.readAllBytes
  [35] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [36] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [37] cats.effect.IOFiber.$anonfun$8
  [38] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [39] cats.effect.unsafe.WorkerThread.blockOn
  [40] scala.concurrent.package$.blocking
  [41] cats.effect.IOFiber.runLoop
  [42] cats.effect.IOFiber.execR
  [43] cats.effect.IOFiber.run
  [44] cats.effect.unsafe.WorkerThread.run

--- 30016756 ns (0.01%), 3 samples
  [ 0] avl_remove?[zavl]_[k]
  [ 1] zfs_rangelock_exit_reader?[zfs]_[k]
  [ 2] zfs_rangelock_exit?[zfs]_[k]
  [ 3] zfs_read?[zfs]_[k]
  [ 4] zpl_iter_read?[zfs]_[k]
  [ 5] new_sync_read_[k]
  [ 6] vfs_read_[k]
  [ 7] __x64_sys_pread64_[k]
  [ 8] do_syscall_64_[k]
  [ 9] entry_SYSCALL_64_after_hwframe_[k]
  [10] __libc_pread64
  [11] sun.nio.ch.FileDispatcherImpl.pread0
  [12] sun.nio.ch.FileDispatcherImpl.pread
  [13] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [14] sun.nio.ch.IOUtil.read
  [15] sun.nio.ch.IOUtil.read
  [16] sun.nio.ch.FileChannelImpl.readInternal
  [17] sun.nio.ch.FileChannelImpl.read
  [18] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [19] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [20] jdk.nio.zipfs.ZipFileSystem$2.fill
  [21] java.util.zip.InflaterInputStream.read
  [22] java.io.InputStream.readNBytes
  [23] java.io.InputStream.readAllBytes
  [24] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [25] jdk.nio.zipfs.ZipPath.newByteChannel
  [26] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [27] java.nio.file.Files.newByteChannel
  [28] java.nio.file.Files.newByteChannel
  [29] java.nio.file.Files.readAllBytes
  [30] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [31] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [32] cats.effect.IOFiber.$anonfun$8
  [33] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [34] cats.effect.unsafe.WorkerThread.blockOn
  [35] scala.concurrent.package$.blocking
  [36] cats.effect.IOFiber.runLoop
  [37] cats.effect.IOFiber.execR
  [38] cats.effect.IOFiber.run
  [39] cats.effect.unsafe.WorkerThread.run

--- 30013210 ns (0.01%), 3 samples
  [ 0] dbuf_hold_impl?[zfs]_[k]
  [ 1] dbuf_hold_level?[zfs]_[k]
  [ 2] dbuf_hold?[zfs]_[k]
  [ 3] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 4] dmu_read_uio_dnode?[zfs]_[k]
  [ 5] dmu_read_uio_dbuf?[zfs]_[k]
  [ 6] zfs_read?[zfs]_[k]
  [ 7] zpl_iter_read?[zfs]_[k]
  [ 8] new_sync_read_[k]
  [ 9] vfs_read_[k]
  [10] __x64_sys_pread64_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] __libc_pread64
  [14] sun.nio.ch.FileDispatcherImpl.pread0
  [15] sun.nio.ch.FileDispatcherImpl.pread
  [16] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [17] sun.nio.ch.IOUtil.read
  [18] sun.nio.ch.IOUtil.read
  [19] sun.nio.ch.FileChannelImpl.readInternal
  [20] sun.nio.ch.FileChannelImpl.read
  [21] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [22] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [23] jdk.nio.zipfs.ZipFileSystem$2.fill
  [24] java.util.zip.InflaterInputStream.read
  [25] java.io.InputStream.readNBytes
  [26] java.io.InputStream.readAllBytes
  [27] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [28] jdk.nio.zipfs.ZipPath.newByteChannel
  [29] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [30] java.nio.file.Files.newByteChannel
  [31] java.nio.file.Files.newByteChannel
  [32] java.nio.file.Files.readAllBytes
  [33] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [34] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [35] cats.effect.IOFiber.$anonfun$8
  [36] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [37] cats.effect.unsafe.WorkerThread.blockOn
  [38] scala.concurrent.package$.blocking
  [39] cats.effect.IOFiber.runLoop
  [40] cats.effect.IOFiber.execR
  [41] cats.effect.IOFiber.run
  [42] cats.effect.unsafe.WorkerThread.run

--- 30008982 ns (0.01%), 3 samples
  [ 0] zio_wait_for_children?[zfs]_[k]
  [ 1] zio_ready?[zfs]_[k]
  [ 2] zio_wait?[zfs]_[k]
  [ 3] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 4] dmu_read_uio_dnode?[zfs]_[k]
  [ 5] dmu_read_uio_dbuf?[zfs]_[k]
  [ 6] zfs_read?[zfs]_[k]
  [ 7] zpl_iter_read?[zfs]_[k]
  [ 8] new_sync_read_[k]
  [ 9] vfs_read_[k]
  [10] __x64_sys_pread64_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] __libc_pread64
  [14] sun.nio.ch.FileDispatcherImpl.pread0
  [15] sun.nio.ch.FileDispatcherImpl.pread
  [16] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [17] sun.nio.ch.IOUtil.read
  [18] sun.nio.ch.IOUtil.read
  [19] sun.nio.ch.FileChannelImpl.readInternal
  [20] sun.nio.ch.FileChannelImpl.read
  [21] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [22] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [23] jdk.nio.zipfs.ZipFileSystem$2.fill
  [24] java.util.zip.InflaterInputStream.read
  [25] java.io.InputStream.readNBytes
  [26] java.io.InputStream.readAllBytes
  [27] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [28] jdk.nio.zipfs.ZipPath.newByteChannel
  [29] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [30] java.nio.file.Files.newByteChannel
  [31] java.nio.file.Files.newByteChannel
  [32] java.nio.file.Files.readAllBytes
  [33] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [34] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [35] cats.effect.IOFiber.$anonfun$8
  [36] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [37] cats.effect.unsafe.WorkerThread.blockOn
  [38] scala.concurrent.package$.blocking
  [39] cats.effect.IOFiber.runLoop
  [40] cats.effect.IOFiber.execR
  [41] cats.effect.IOFiber.run
  [42] cats.effect.unsafe.WorkerThread.run

--- 30007428 ns (0.01%), 3 samples
  [ 0] multilist_get_num_sublists?[zfs]_[k]
  [ 1] multilist_insert?[zfs]_[k]
  [ 2] dbuf_rele_and_unlock?[zfs]_[k]
  [ 3] dbuf_rele?[zfs]_[k]
  [ 4] dmu_buf_rele_array?[zfs]_[k]
  [ 5] dmu_read_uio_dnode?[zfs]_[k]
  [ 6] dmu_read_uio_dbuf?[zfs]_[k]
  [ 7] zfs_read?[zfs]_[k]
  [ 8] zpl_iter_read?[zfs]_[k]
  [ 9] new_sync_read_[k]
  [10] vfs_read_[k]
  [11] __x64_sys_pread64_[k]
  [12] do_syscall_64_[k]
  [13] entry_SYSCALL_64_after_hwframe_[k]
  [14] __libc_pread64
  [15] sun.nio.ch.FileDispatcherImpl.pread0
  [16] sun.nio.ch.FileDispatcherImpl.pread
  [17] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [18] sun.nio.ch.IOUtil.read
  [19] sun.nio.ch.IOUtil.read
  [20] sun.nio.ch.FileChannelImpl.readInternal
  [21] sun.nio.ch.FileChannelImpl.read
  [22] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [23] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [24] jdk.nio.zipfs.ZipFileSystem$2.fill
  [25] java.util.zip.InflaterInputStream.read
  [26] java.io.InputStream.readNBytes
  [27] java.io.InputStream.readAllBytes
  [28] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [29] jdk.nio.zipfs.ZipPath.newByteChannel
  [30] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [31] java.nio.file.Files.newByteChannel
  [32] java.nio.file.Files.newByteChannel
  [33] java.nio.file.Files.readAllBytes
  [34] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [35] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [36] cats.effect.IOFiber.$anonfun$8
  [37] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [38] cats.effect.unsafe.WorkerThread.blockOn
  [39] scala.concurrent.package$.blocking
  [40] cats.effect.IOFiber.runLoop
  [41] cats.effect.IOFiber.execR
  [42] cats.effect.IOFiber.run
  [43] cats.effect.unsafe.WorkerThread.run

--- 30007420 ns (0.01%), 3 samples
  [ 0] spl_mutex_clear_owner?[zfs]_[k]
  [ 1] dbuf_rele_and_unlock?[zfs]_[k]
  [ 2] dbuf_rele?[zfs]_[k]
  [ 3] dmu_buf_rele_array?[zfs]_[k]
  [ 4] dmu_read_uio_dnode?[zfs]_[k]
  [ 5] dmu_read_uio_dbuf?[zfs]_[k]
  [ 6] zfs_read?[zfs]_[k]
  [ 7] zpl_iter_read?[zfs]_[k]
  [ 8] new_sync_read_[k]
  [ 9] vfs_read_[k]
  [10] __x64_sys_pread64_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] __libc_pread64
  [14] sun.nio.ch.FileDispatcherImpl.pread0
  [15] sun.nio.ch.FileDispatcherImpl.pread
  [16] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [17] sun.nio.ch.IOUtil.read
  [18] sun.nio.ch.IOUtil.read
  [19] sun.nio.ch.FileChannelImpl.readInternal
  [20] sun.nio.ch.FileChannelImpl.read
  [21] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [22] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [23] jdk.nio.zipfs.ZipFileSystem$2.fill
  [24] java.util.zip.InflaterInputStream.read
  [25] java.io.InputStream.readNBytes
  [26] java.io.InputStream.readAllBytes
  [27] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [28] jdk.nio.zipfs.ZipPath.newByteChannel
  [29] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [30] java.nio.file.Files.newByteChannel
  [31] java.nio.file.Files.newByteChannel
  [32] java.nio.file.Files.readAllBytes
  [33] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [34] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [35] cats.effect.IOFiber.$anonfun$8
  [36] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [37] cats.effect.unsafe.WorkerThread.blockOn
  [38] scala.concurrent.package$.blocking
  [39] cats.effect.IOFiber.runLoop
  [40] cats.effect.IOFiber.execR
  [41] cats.effect.IOFiber.run
  [42] cats.effect.unsafe.WorkerThread.run

--- 30005418 ns (0.01%), 3 samples
  [ 0] __memcpy_avx_unaligned
  [ 1] java.util.zip.Inflater.inflateBytesBytes
  [ 2] java.util.zip.Inflater.inflate
  [ 3] java.util.zip.InflaterInputStream.read
  [ 4] java.io.InputStream.readNBytes
  [ 5] java.io.InputStream.readAllBytes
  [ 6] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [ 7] jdk.nio.zipfs.ZipPath.newByteChannel
  [ 8] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [ 9] java.nio.file.Files.newByteChannel
  [10] java.nio.file.Files.newByteChannel
  [11] java.nio.file.Files.readAllBytes
  [12] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [13] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [14] cats.effect.IOFiber.$anonfun$8
  [15] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [16] cats.effect.unsafe.WorkerThread.blockOn
  [17] scala.concurrent.package$.blocking
  [18] cats.effect.IOFiber.runLoop
  [19] cats.effect.IOFiber.execR
  [20] cats.effect.IOFiber.run
  [21] cats.effect.unsafe.WorkerThread.run

--- 30004032 ns (0.01%), 3 samples
  [ 0] ktime_get_raw_ts64_[k]
  [ 1] gethrtime?[zfs]_[k]
  [ 2] zio_wait?[zfs]_[k]
  [ 3] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 4] dmu_read_uio_dnode?[zfs]_[k]
  [ 5] dmu_read_uio_dbuf?[zfs]_[k]
  [ 6] zfs_read?[zfs]_[k]
  [ 7] zpl_iter_read?[zfs]_[k]
  [ 8] new_sync_read_[k]
  [ 9] vfs_read_[k]
  [10] __x64_sys_pread64_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] __libc_pread64
  [14] sun.nio.ch.FileDispatcherImpl.pread0
  [15] sun.nio.ch.FileDispatcherImpl.pread
  [16] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [17] sun.nio.ch.IOUtil.read
  [18] sun.nio.ch.IOUtil.read
  [19] sun.nio.ch.FileChannelImpl.readInternal
  [20] sun.nio.ch.FileChannelImpl.read
  [21] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [22] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [23] jdk.nio.zipfs.ZipFileSystem$2.fill
  [24] java.util.zip.InflaterInputStream.read
  [25] java.io.InputStream.readNBytes
  [26] java.io.InputStream.readAllBytes
  [27] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [28] jdk.nio.zipfs.ZipPath.newByteChannel
  [29] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [30] java.nio.file.Files.newByteChannel
  [31] java.nio.file.Files.newByteChannel
  [32] java.nio.file.Files.readAllBytes
  [33] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [34] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [35] cats.effect.IOFiber.$anonfun$8
  [36] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [37] cats.effect.unsafe.WorkerThread.blockOn
  [38] scala.concurrent.package$.blocking
  [39] cats.effect.IOFiber.runLoop
  [40] cats.effect.IOFiber.execR
  [41] cats.effect.IOFiber.run
  [42] cats.effect.unsafe.WorkerThread.run

--- 30003441 ns (0.01%), 3 samples
  [ 0] zpl_iter_read?[zfs]_[k]
  [ 1] vfs_read_[k]
  [ 2] __x64_sys_pread64_[k]
  [ 3] do_syscall_64_[k]
  [ 4] entry_SYSCALL_64_after_hwframe_[k]
  [ 5] __libc_pread64
  [ 6] sun.nio.ch.FileDispatcherImpl.pread0
  [ 7] sun.nio.ch.FileDispatcherImpl.pread
  [ 8] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [ 9] sun.nio.ch.IOUtil.read
  [10] sun.nio.ch.IOUtil.read
  [11] sun.nio.ch.FileChannelImpl.readInternal
  [12] sun.nio.ch.FileChannelImpl.read
  [13] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [14] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [15] jdk.nio.zipfs.ZipFileSystem$2.fill
  [16] java.util.zip.InflaterInputStream.read
  [17] java.io.InputStream.readNBytes
  [18] java.io.InputStream.readAllBytes
  [19] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [20] jdk.nio.zipfs.ZipPath.newByteChannel
  [21] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [22] java.nio.file.Files.newByteChannel
  [23] java.nio.file.Files.newByteChannel
  [24] java.nio.file.Files.readAllBytes
  [25] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [26] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [27] cats.effect.IOFiber.$anonfun$8
  [28] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [29] cats.effect.unsafe.WorkerThread.blockOn
  [30] scala.concurrent.package$.blocking
  [31] cats.effect.IOFiber.runLoop
  [32] cats.effect.IOFiber.execR
  [33] cats.effect.IOFiber.run
  [34] cats.effect.unsafe.WorkerThread.run

--- 30000286 ns (0.01%), 3 samples
  [ 0] zio_execute_stack_check.constprop.0?[zfs]_[k]
  [ 1] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 2] dmu_read_uio_dnode?[zfs]_[k]
  [ 3] dmu_read_uio_dbuf?[zfs]_[k]
  [ 4] zfs_read?[zfs]_[k]
  [ 5] zpl_iter_read?[zfs]_[k]
  [ 6] new_sync_read_[k]
  [ 7] vfs_read_[k]
  [ 8] __x64_sys_pread64_[k]
  [ 9] do_syscall_64_[k]
  [10] entry_SYSCALL_64_after_hwframe_[k]
  [11] __libc_pread64
  [12] sun.nio.ch.FileDispatcherImpl.pread0
  [13] sun.nio.ch.FileDispatcherImpl.pread
  [14] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [15] sun.nio.ch.IOUtil.read
  [16] sun.nio.ch.IOUtil.read
  [17] sun.nio.ch.FileChannelImpl.readInternal
  [18] sun.nio.ch.FileChannelImpl.read
  [19] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [20] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [21] jdk.nio.zipfs.ZipFileSystem$2.fill
  [22] java.util.zip.InflaterInputStream.read
  [23] java.io.InputStream.readNBytes
  [24] java.io.InputStream.readAllBytes
  [25] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [26] jdk.nio.zipfs.ZipPath.newByteChannel
  [27] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [28] java.nio.file.Files.newByteChannel
  [29] java.nio.file.Files.newByteChannel
  [30] java.nio.file.Files.readAllBytes
  [31] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [32] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [33] cats.effect.IOFiber.$anonfun$8
  [34] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [35] cats.effect.unsafe.WorkerThread.blockOn
  [36] scala.concurrent.package$.blocking
  [37] cats.effect.IOFiber.runLoop
  [38] cats.effect.IOFiber.execR
  [39] cats.effect.IOFiber.run
  [40] cats.effect.unsafe.WorkerThread.run

--- 30000117 ns (0.01%), 3 samples
  [ 0] AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<548964ul, G1BarrierSet>, (AccessInternal::BarrierType)2, 548964ul>::oop_access_barrier(void*)
  [ 1] Java_java_util_zip_Inflater_inflateBytesBytes
  [ 2] java.util.zip.Inflater.inflateBytesBytes
  [ 3] java.util.zip.Inflater.inflate
  [ 4] java.util.zip.InflaterInputStream.read
  [ 5] java.io.InputStream.readNBytes
  [ 6] java.io.InputStream.readAllBytes
  [ 7] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [ 8] jdk.nio.zipfs.ZipPath.newByteChannel
  [ 9] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [10] java.nio.file.Files.newByteChannel
  [11] java.nio.file.Files.newByteChannel
  [12] java.nio.file.Files.readAllBytes
  [13] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [14] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [15] cats.effect.IOFiber.$anonfun$8
  [16] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [17] cats.effect.unsafe.WorkerThread.blockOn
  [18] scala.concurrent.package$.blocking
  [19] cats.effect.IOFiber.runLoop
  [20] cats.effect.IOFiber.execR
  [21] cats.effect.IOFiber.run
  [22] cats.effect.unsafe.WorkerThread.run

--- 29999195 ns (0.01%), 3 samples
  [ 0] __cv_destroy?[spl]_[k]
  [ 1] zio_destroy?[zfs]_[k]
  [ 2] zio_wait?[zfs]_[k]
  [ 3] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 4] dmu_read_uio_dnode?[zfs]_[k]
  [ 5] dmu_read_uio_dbuf?[zfs]_[k]
  [ 6] zfs_read?[zfs]_[k]
  [ 7] zpl_iter_read?[zfs]_[k]
  [ 8] new_sync_read_[k]
  [ 9] vfs_read_[k]
  [10] __x64_sys_pread64_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] __libc_pread64
  [14] sun.nio.ch.FileDispatcherImpl.pread0
  [15] sun.nio.ch.FileDispatcherImpl.pread
  [16] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [17] sun.nio.ch.IOUtil.read
  [18] sun.nio.ch.IOUtil.read
  [19] sun.nio.ch.FileChannelImpl.readInternal
  [20] sun.nio.ch.FileChannelImpl.read
  [21] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [22] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [23] jdk.nio.zipfs.ZipFileSystem$2.fill
  [24] java.util.zip.InflaterInputStream.read
  [25] java.io.InputStream.readNBytes
  [26] java.io.InputStream.readAllBytes
  [27] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [28] jdk.nio.zipfs.ZipPath.newByteChannel
  [29] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [30] java.nio.file.Files.newByteChannel
  [31] java.nio.file.Files.newByteChannel
  [32] java.nio.file.Files.readAllBytes
  [33] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [34] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [35] cats.effect.IOFiber.$anonfun$8
  [36] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [37] cats.effect.unsafe.WorkerThread.blockOn
  [38] scala.concurrent.package$.blocking
  [39] cats.effect.IOFiber.runLoop
  [40] cats.effect.IOFiber.execR
  [41] cats.effect.IOFiber.run
  [42] cats.effect.unsafe.WorkerThread.run

--- 29995508 ns (0.01%), 3 samples
  [ 0] java.util.zip.Inflater.needsDictionary
  [ 1] java.util.zip.InflaterInputStream.read
  [ 2] java.io.InputStream.readNBytes
  [ 3] java.io.InputStream.readAllBytes
  [ 4] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [ 5] jdk.nio.zipfs.ZipPath.newByteChannel
  [ 6] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [ 7] java.nio.file.Files.newByteChannel
  [ 8] java.nio.file.Files.newByteChannel
  [ 9] java.nio.file.Files.readAllBytes
  [10] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [11] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [12] cats.effect.IOFiber.$anonfun$8
  [13] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [14] cats.effect.unsafe.WorkerThread.blockOn
  [15] scala.concurrent.package$.blocking
  [16] cats.effect.IOFiber.runLoop
  [17] cats.effect.IOFiber.execR
  [18] cats.effect.IOFiber.run
  [19] cats.effect.unsafe.WorkerThread.run

--- 29992041 ns (0.01%), 3 samples
  [ 0] java.util.zip.Inflater.inflate
  [ 1] java.util.zip.InflaterInputStream.read
  [ 2] java.io.InputStream.readNBytes
  [ 3] java.io.InputStream.readAllBytes
  [ 4] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [ 5] jdk.nio.zipfs.ZipPath.newByteChannel
  [ 6] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [ 7] java.nio.file.Files.newByteChannel
  [ 8] java.nio.file.Files.newByteChannel
  [ 9] java.nio.file.Files.readAllBytes
  [10] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [11] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [12] cats.effect.IOFiber.$anonfun$8
  [13] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [14] cats.effect.unsafe.WorkerThread.blockOn
  [15] scala.concurrent.package$.blocking
  [16] cats.effect.IOFiber.runLoop
  [17] cats.effect.IOFiber.execR
  [18] cats.effect.IOFiber.run
  [19] cats.effect.unsafe.WorkerThread.run

--- 29985940 ns (0.01%), 3 samples
  [ 0] sun.nio.ch.FileChannelImpl.endBlocking
  [ 1] sun.nio.ch.FileChannelImpl.readInternal
  [ 2] sun.nio.ch.FileChannelImpl.read
  [ 3] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [ 4] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [ 5] jdk.nio.zipfs.ZipFileSystem$2.fill
  [ 6] java.util.zip.InflaterInputStream.read
  [ 7] java.io.InputStream.readNBytes
  [ 8] java.io.InputStream.readAllBytes
  [ 9] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [10] jdk.nio.zipfs.ZipPath.newByteChannel
  [11] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [12] java.nio.file.Files.newByteChannel
  [13] java.nio.file.Files.newByteChannel
  [14] java.nio.file.Files.readAllBytes
  [15] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [16] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [17] cats.effect.IOFiber.$anonfun$8
  [18] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [19] cats.effect.unsafe.WorkerThread.blockOn
  [20] scala.concurrent.package$.blocking
  [21] cats.effect.IOFiber.runLoop
  [22] cats.effect.IOFiber.execR
  [23] cats.effect.IOFiber.run
  [24] cats.effect.unsafe.WorkerThread.run

--- 29969818 ns (0.01%), 3 samples
  [ 0] sun.nio.ch.NativeThreadSet.add
  [ 1] sun.nio.ch.FileChannelImpl.readInternal
  [ 2] sun.nio.ch.FileChannelImpl.read
  [ 3] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [ 4] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [ 5] jdk.nio.zipfs.ZipFileSystem$2.fill
  [ 6] java.util.zip.InflaterInputStream.read
  [ 7] java.io.InputStream.readNBytes
  [ 8] java.io.InputStream.readAllBytes
  [ 9] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [10] jdk.nio.zipfs.ZipPath.newByteChannel
  [11] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [12] java.nio.file.Files.newByteChannel
  [13] java.nio.file.Files.newByteChannel
  [14] java.nio.file.Files.readAllBytes
  [15] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [16] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [17] cats.effect.IOFiber.$anonfun$8
  [18] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [19] cats.effect.unsafe.WorkerThread.blockOn
  [20] scala.concurrent.package$.blocking
  [21] cats.effect.IOFiber.runLoop
  [22] cats.effect.IOFiber.execR
  [23] cats.effect.IOFiber.run
  [24] cats.effect.unsafe.WorkerThread.run

--- 29955091 ns (0.01%), 3 samples
  [ 0] GreyObjectsWalker_walkGreyObjects_eb32754f646620dd6416e9c72990a79fa796f775
  [ 1] GCImpl_scanGreyObjectsLoop_cf921a6125ebaf446005800a19e90321e197fe49
  [ 2] GCImpl_cheneyScanFromDirtyRoots_152b568eb6b8adaa0e9eb97af9f0aaf1c6de3b96
  [ 3] GCImpl_scavenge_4d80ab5cde8ae47e5684dec80f1899364cc1f1e4
  [ 4] GCImpl_doCollectOnce_3160ee000a0bd915c7af59cb5e57a0ed89f543eb
  [ 5] GCImpl_doCollectImpl_83d1dcc66311335def4f6f03c4b9e0baf3b23258
  [ 6] GCImpl_collectOperation_108a3edfdad79517c2b206533a653ca5fe52a12b
  [ 7] VMOperationControl$WorkQueues_drain_fc251cfc5f5ad2ffe0a4c5f439a2f84dcde8481c
  [ 8] VMOperationControl$WorkQueues_executeAllQueuedVMOperations_25b2bf3190fe2a774058bff8d39933d94865ff3c
  [ 9] VMOperationControl$WorkQueues_enqueueAndExecute_607383fb6e6bc84e65ff317d4677ca194ec5dadb
  [10] NativeVMOperation_enqueue_8e9693900fe03773a622f8bdf4cb56b579d8dbd2
  [11] GCImpl_collectWithoutAllocating_a9c1c4d555d68ece8c1e7086d3ebd4046d549b12
  [12] GCImpl_collect_0c6e127511c920f274c3758a46a72e1205510906
  [13] BaseTier_run_452c2cb1b8cbe93c2c1e0721e00f05de04a0754a
  [14] BasePhase_apply_a7a34a5581cb5bc9dd94a67363b0d35949922111
  [15] GraalCompiler_emitFrontEnd_ca4f472adcd3262192293d187aa8b916d506307f
  [16] GraalCompiler_compile_ceb52c95b6a3c674ccaed5facbfe09d5e9f54cc5
  [17] GraalCompiler_compileGraph_f280e33c706d40a0afcca65e1d60adc30f56adda
  [18] HotSpotGraalCompiler_compileHelper_c01bd275b980103513b125f179385a980b92cd51
  [19] CompilationTask$HotSpotCompilationWrapper_performCompilation_427b3010ad884e165b85b188dcc115cc72ac542f
  [20] CompilationTask_runCompilation_b757e01c868ec3e0e8fed71a764850de44da1a1b
  [21] CompilationTask_runCompilation_d1bd90bb87908e90179175e8d6c5e780d0547ca2
  [22] HotSpotGraalCompiler_compileMethod_0ff35a48b2496422594578a94354f0ef9b35beb7
  [23] HotSpotGraalCompiler_compileMethod_1d8dfc2fbb5478d3b7400bbb97604e7defc50a57
  [24] HotSpotJVMCIRuntime_compileMethod_d0551eb00a95b4c222b2a67a9746353d2d54cfa9
  [25] JNIJavaCallWrapperHolder_invoke_933534d18920673463b37187ac6a37fffc051899_d7572e28f4028f5f5b18a826fd2d7af0608204fc
  [26] JNIJavaCallVariantWrapperHolder_invokeJJIJIJI_J_VA_LIST_Nonvirtual_6f4000c7b26b332becfc76557b165731801a6b35
  [27] JNIEnv_::CallNonvirtualObjectMethod(_jobject*, _jclass*, _jmethodID*, ...)
  [28] JVMCIEnv::call_HotSpotJVMCIRuntime_compileMethod(JVMCIObject, JVMCIObject, int, long, int)
  [29] JVMCIRuntime::compile_method(JVMCIEnv*, JVMCICompiler*, methodHandle const&, int)
  [30] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [31] CompileBroker::compiler_thread_loop()
  [32] JavaThread::thread_main_inner()
  [33] Thread::call_run()
  [34] thread_native_entry(Thread*)
  [35] start_thread

--- 20227327 ns (0.01%), 2 samples
  [ 0] _raw_spin_unlock_irqrestore_[k]
  [ 1] try_to_wake_up_[k]
  [ 2] wake_up_q_[k]
  [ 3] futex_wake_[k]
  [ 4] do_futex_[k]
  [ 5] __x64_sys_futex_[k]
  [ 6] do_syscall_64_[k]
  [ 7] entry_SYSCALL_64_after_hwframe_[k]
  [ 8] pthread_cond_signal@@GLIBC_2.3.2
  [ 9] jdk.internal.misc.Unsafe.unpark
  [10] java.util.concurrent.locks.LockSupport.unpark
  [11] cats.effect.unsafe.WorkStealingThreadPool.notifyParked
  [12] cats.effect.unsafe.WorkStealingThreadPool.scheduleExternal
  [13] cats.effect.unsafe.WorkStealingThreadPool.execute
  [14] cats.effect.IO.unsafeRunFiber
  [15] cats.effect.IO.unsafeRunAsync
  [16] cats.effect.IOPlatform.unsafeRunTimed
  [17] cats.effect.IOPlatform.unsafeRunSync
  [18] com.scalamandra.ZipBench.com$scalamandra$ZipBench$$_$nioReadAllBytes$$anonfun$1
  [19] com.scalamandra.ZipBench$$anon$3.apply
  [20] com.scalamandra.ZipBench$$anon$3.apply
  [21] com.scalamandra.ZipBench.nioReadAllBytes
  [22] com.scalamandra.jmh_generated.ZipBench_nioReadAllBytes_jmhTest.nioReadAllBytes_thrpt_jmhStub
  [23] com.scalamandra.jmh_generated.ZipBench_nioReadAllBytes_jmhTest.nioReadAllBytes_Throughput
  [24] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [25] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [26] java.lang.reflect.Method.invoke
  [27] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [28] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [29] java.util.concurrent.FutureTask.run
  [30] java.util.concurrent.Executors$RunnableAdapter.call
  [31] java.util.concurrent.FutureTask.run
  [32] java.util.concurrent.ThreadPoolExecutor.runWorker
  [33] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [34] java.lang.Thread.run

--- 20206590 ns (0.01%), 2 samples
  [ 0] com.scalamandra.jmh_generated.ZipBench_nioReadAllBytes_jmhTest.nioReadAllBytes_thrpt_jmhStub
  [ 1] com.scalamandra.jmh_generated.ZipBench_nioReadAllBytes_jmhTest.nioReadAllBytes_Throughput
  [ 2] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [ 3] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [ 4] java.lang.reflect.Method.invoke
  [ 5] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [ 6] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [ 7] java.util.concurrent.FutureTask.run
  [ 8] java.util.concurrent.Executors$RunnableAdapter.call
  [ 9] java.util.concurrent.FutureTask.run
  [10] java.util.concurrent.ThreadPoolExecutor.runWorker
  [11] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [12] java.lang.Thread.run

--- 20188061 ns (0.01%), 2 samples
  [ 0] __vfprintf_internal
  [ 1] [unknown]

--- 20184777 ns (0.01%), 2 samples
  [ 0] CardTableBarrierSet::make_parsable(JavaThread*)
  [ 1] CollectedHeap::ensure_parsability(bool)
  [ 2] G1CollectedHeap::gc_prologue(bool)
  [ 3] G1CollectedHeap::do_collection_pause_at_safepoint_helper(double)
  [ 4] G1CollectedHeap::do_collection_pause_at_safepoint(double)
  [ 5] VM_G1TryInitiateConcMark::doit()
  [ 6] VM_Operation::evaluate()
  [ 7] VMThread::evaluate_operation(VM_Operation*)
  [ 8] VMThread::inner_execute(VM_Operation*)
  [ 9] VMThread::run()
  [10] Thread::call_run()
  [11] thread_native_entry(Thread*)
  [12] start_thread

--- 20161444 ns (0.01%), 2 samples
  [ 0] _raw_spin_unlock_irqrestore_[k]
  [ 1] try_to_wake_up_[k]
  [ 2] wake_up_q_[k]
  [ 3] futex_wake_[k]
  [ 4] do_futex_[k]
  [ 5] __x64_sys_futex_[k]
  [ 6] do_syscall_64_[k]
  [ 7] entry_SYSCALL_64_after_hwframe_[k]
  [ 8] __lll_lock_wake
  [ 9] [unknown]

--- 20152360 ns (0.01%), 2 samples
  [ 0] syscall_enter_from_user_mode_[k]
  [ 1] do_syscall_64_[k]
  [ 2] entry_SYSCALL_64_after_hwframe_[k]
  [ 3] __futex_abstimed_wait_cancelable64

--- 20118993 ns (0.01%), 2 samples
  [ 0] Assembler::locate_operand(unsigned char*, Assembler::WhichOperand)
  [ 1] oop_Relocation::oop_value()
  [ 2] nmethod::oops_do(OopClosure*, bool)
  [ 3] G1NmethodProcessor::do_regular_processing(nmethod*)
  [ 4] nmethod::oops_do_process_strong(nmethod::OopsDoProcessor*)
  [ 5] G1CodeBlobClosure::do_code_blob(CodeBlob*)
  [ 6] JavaThread::oops_do_frames(OopClosure*, CodeBlobClosure*) [clone .part.0]
  [ 7] Threads::possibly_parallel_oops_do(bool, OopClosure*, CodeBlobClosure*)
  [ 8] G1RootProcessor::process_java_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int)
  [ 9] G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int)
  [10] G1EvacuateRegionsTask::scan_roots(G1ParScanThreadState*, unsigned int)
  [11] G1EvacuateRegionsBaseTask::work(unsigned int)
  [12] GangWorker::loop()
  [13] GangWorker::run()
  [14] Thread::call_run()
  [15] thread_native_entry(Thread*)
  [16] start_thread

--- 20110965 ns (0.01%), 2 samples
  [ 0] G1ScanCollectionSetRegionClosure::do_heap_region(HeapRegion*)
  [ 1] G1CollectionSet::iterate_part_from(HeapRegionClosure*, HeapRegionClaimer*, unsigned long, unsigned long, unsigned int, unsigned int) const [clone .part.0]
  [ 2] G1CollectionSet::iterate_incremental_part_from(HeapRegionClosure*, HeapRegionClaimer*, unsigned int, unsigned int) const
  [ 3] G1RemSet::scan_collection_set_regions(G1ParScanThreadState*, unsigned int, G1GCPhaseTimes::GCParPhases, G1GCPhaseTimes::GCParPhases, G1GCPhaseTimes::GCParPhases)
  [ 4] G1EvacuateRegionsBaseTask::work(unsigned int)
  [ 5] GangWorker::loop()
  [ 6] GangWorker::run()
  [ 7] Thread::call_run()
  [ 8] thread_native_entry(Thread*)
  [ 9] start_thread

--- 20104014 ns (0.01%), 2 samples
  [ 0] G1CodeRootSet::contains(nmethod*)
  [ 1] nmethod::oops_do(OopClosure*, bool)
  [ 2] G1NmethodProcessor::do_regular_processing(nmethod*)
  [ 3] nmethod::oops_do_process_strong(nmethod::OopsDoProcessor*)
  [ 4] G1CodeBlobClosure::do_code_blob(CodeBlob*)
  [ 5] JavaThread::oops_do_frames(OopClosure*, CodeBlobClosure*) [clone .part.0]
  [ 6] Threads::possibly_parallel_oops_do(bool, OopClosure*, CodeBlobClosure*)
  [ 7] G1RootProcessor::process_java_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int)
  [ 8] G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int)
  [ 9] G1EvacuateRegionsTask::scan_roots(G1ParScanThreadState*, unsigned int)
  [10] G1EvacuateRegionsBaseTask::work(unsigned int)
  [11] GangWorker::loop()
  [12] GangWorker::run()
  [13] Thread::call_run()
  [14] thread_native_entry(Thread*)
  [15] start_thread

--- 20089626 ns (0.01%), 2 samples
  [ 0] G1RemSet::prepare_region_for_scan(HeapRegion*)
  [ 1] HeapRegionManager::par_iterate(HeapRegionClosure*, HeapRegionClaimer*, unsigned int) const
  [ 2] G1PrepareEvacuationTask::work(unsigned int)
  [ 3] GangWorker::loop()
  [ 4] GangWorker::run()
  [ 5] Thread::call_run()
  [ 6] thread_native_entry(Thread*)
  [ 7] start_thread

--- 20089391 ns (0.01%), 2 samples
  [ 0] PtrQueueSet::deallocate_buffer(BufferNode*)
  [ 1] G1MergeHeapRootsTask::work(unsigned int)
  [ 2] GangWorker::loop()
  [ 3] GangWorker::run()
  [ 4] Thread::call_run()
  [ 5] thread_native_entry(Thread*)
  [ 6] start_thread

--- 20083517 ns (0.01%), 2 samples
  [ 0] void OopOopIterateDispatch<G1ScanCardClosure>::Table::oop_oop_iterate<InstanceKlass, narrowOop>(G1ScanCardClosure*, oopDesc*, Klass*)
  [ 1] G1ScanHRForRegionClosure::scan_heap_roots(HeapRegion*)
  [ 2] G1RemSet::scan_heap_roots(G1ParScanThreadState*, unsigned int, G1GCPhaseTimes::GCParPhases, G1GCPhaseTimes::GCParPhases, bool)
  [ 3] G1EvacuateRegionsTask::scan_roots(G1ParScanThreadState*, unsigned int)
  [ 4] G1EvacuateRegionsBaseTask::work(unsigned int)
  [ 5] GangWorker::loop()
  [ 6] GangWorker::run()
  [ 7] Thread::call_run()
  [ 8] thread_native_entry(Thread*)
  [ 9] start_thread

--- 20080018 ns (0.01%), 2 samples
  [ 0] HeapRegionRemSet::clear_locked(bool)
  [ 1] HeapRegion::hr_clear(bool)
  [ 2] G1CollectedHeap::free_region(HeapRegion*, FreeRegionList*)
  [ 3] FreeCSetClosure::do_heap_region(HeapRegion*)
  [ 4] G1CollectionSet::iterate_part_from(HeapRegionClosure*, HeapRegionClaimer*, unsigned long, unsigned long, unsigned int, unsigned int) const [clone .part.0]
  [ 5] G1CollectionSet::par_iterate(HeapRegionClosure*, HeapRegionClaimer*, unsigned int, unsigned int) const
  [ 6] G1PostEvacuateCollectionSetCleanupTask2::FreeCollectionSetTask::do_work(unsigned int)
  [ 7] G1BatchedGangTask::work(unsigned int)
  [ 8] GangWorker::loop()
  [ 9] GangWorker::run()
  [10] Thread::call_run()
  [11] thread_native_entry(Thread*)
  [12] start_thread

--- 20077181 ns (0.01%), 2 samples
  [ 0] HeapRegionManager::iterate(HeapRegionClosure*) const
  [ 1] G1PostEvacuateCollectionSetCleanupTask2::EagerlyReclaimHumongousObjectsTask::do_work(unsigned int)
  [ 2] G1BatchedGangTask::work(unsigned int)
  [ 3] GangWorker::loop()
  [ 4] GangWorker::run()
  [ 5] Thread::call_run()
  [ 6] thread_native_entry(Thread*)
  [ 7] start_thread

--- 20074625 ns (0.01%), 2 samples
  [ 0] __GI___pthread_cond_broadcast

--- 20064813 ns (0.01%), 2 samples
  [ 0] G1MergeHeapRootsTask::work(unsigned int)
  [ 1] GangWorker::loop()
  [ 2] GangWorker::run()
  [ 3] Thread::call_run()
  [ 4] thread_native_entry(Thread*)
  [ 5] start_thread

--- 20055978 ns (0.01%), 2 samples
  [ 0] G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*)
  [ 1] MemAllocator::allocate() const
  [ 2] TypeArrayKlass::allocate_common(int, bool, JavaThread*)
  [ 3] Runtime1::new_type_array(JavaThread*, Klass*, int)
  [ 4] cats.effect.IOFiber.execR
  [ 5] cats.effect.IOFiber.run
  [ 6] cats.effect.unsafe.WorkerThread.run

--- 20045777 ns (0.01%), 2 samples
  [ 0] spl_mutex_clear_owner?[zfs]_[k]
  [ 1] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 2] dmu_read_uio_dnode?[zfs]_[k]
  [ 3] dmu_read_uio_dbuf?[zfs]_[k]
  [ 4] zfs_read?[zfs]_[k]
  [ 5] zpl_iter_read?[zfs]_[k]
  [ 6] new_sync_read_[k]
  [ 7] vfs_read_[k]
  [ 8] __x64_sys_pread64_[k]
  [ 9] do_syscall_64_[k]
  [10] entry_SYSCALL_64_after_hwframe_[k]
  [11] __libc_pread64
  [12] sun.nio.ch.FileDispatcherImpl.pread0
  [13] sun.nio.ch.FileDispatcherImpl.pread
  [14] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [15] sun.nio.ch.IOUtil.read
  [16] sun.nio.ch.IOUtil.read
  [17] sun.nio.ch.FileChannelImpl.readInternal
  [18] sun.nio.ch.FileChannelImpl.read
  [19] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [20] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [21] jdk.nio.zipfs.ZipFileSystem$2.fill
  [22] java.util.zip.InflaterInputStream.read
  [23] java.io.InputStream.readNBytes
  [24] java.io.InputStream.readAllBytes
  [25] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [26] jdk.nio.zipfs.ZipPath.newByteChannel
  [27] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [28] java.nio.file.Files.newByteChannel
  [29] java.nio.file.Files.newByteChannel
  [30] java.nio.file.Files.readAllBytes
  [31] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [32] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [33] cats.effect.IOFiber.$anonfun$8
  [34] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [35] cats.effect.unsafe.WorkerThread.blockOn
  [36] scala.concurrent.package$.blocking
  [37] cats.effect.IOFiber.runLoop
  [38] cats.effect.IOFiber.execR
  [39] cats.effect.IOFiber.run
  [40] cats.effect.unsafe.WorkerThread.run

--- 20044183 ns (0.01%), 2 samples
  [ 0] java.util.zip.InflaterInputStream.<init>
  [ 1] jdk.nio.zipfs.ZipFileSystem$2.<init>
  [ 2] jdk.nio.zipfs.ZipFileSystem.getInputStream
  [ 3] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [ 4] jdk.nio.zipfs.ZipPath.newByteChannel
  [ 5] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [ 6] java.nio.file.Files.newByteChannel
  [ 7] java.nio.file.Files.newByteChannel
  [ 8] java.nio.file.Files.readAllBytes
  [ 9] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [10] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [11] cats.effect.IOFiber.$anonfun$8
  [12] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [13] cats.effect.unsafe.WorkerThread.blockOn
  [14] scala.concurrent.package$.blocking
  [15] cats.effect.IOFiber.runLoop
  [16] cats.effect.IOFiber.execR
  [17] cats.effect.IOFiber.run
  [18] cats.effect.unsafe.WorkerThread.run

--- 20044083 ns (0.01%), 2 samples
  [ 0] avl_add?[zavl]_[k]
  [ 1] zfs_rangelock_enter_impl?[zfs]_[k]
  [ 2] zfs_rangelock_enter?[zfs]_[k]
  [ 3] zfs_read?[zfs]_[k]
  [ 4] zpl_iter_read?[zfs]_[k]
  [ 5] new_sync_read_[k]
  [ 6] vfs_read_[k]
  [ 7] __x64_sys_pread64_[k]
  [ 8] do_syscall_64_[k]
  [ 9] entry_SYSCALL_64_after_hwframe_[k]
  [10] __libc_pread64
  [11] sun.nio.ch.FileDispatcherImpl.pread0
  [12] sun.nio.ch.FileDispatcherImpl.pread
  [13] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [14] sun.nio.ch.IOUtil.read
  [15] sun.nio.ch.IOUtil.read
  [16] sun.nio.ch.FileChannelImpl.readInternal
  [17] sun.nio.ch.FileChannelImpl.read
  [18] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [19] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [20] jdk.nio.zipfs.ZipFileSystem$2.fill
  [21] java.util.zip.InflaterInputStream.read
  [22] java.io.InputStream.readNBytes
  [23] java.io.InputStream.readAllBytes
  [24] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [25] jdk.nio.zipfs.ZipPath.newByteChannel
  [26] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [27] java.nio.file.Files.newByteChannel
  [28] java.nio.file.Files.newByteChannel
  [29] java.nio.file.Files.readAllBytes
  [30] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [31] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [32] cats.effect.IOFiber.$anonfun$8
  [33] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [34] cats.effect.unsafe.WorkerThread.blockOn
  [35] scala.concurrent.package$.blocking
  [36] cats.effect.IOFiber.runLoop
  [37] cats.effect.IOFiber.execR
  [38] cats.effect.IOFiber.run
  [39] cats.effect.unsafe.WorkerThread.run

--- 20040687 ns (0.01%), 2 samples
  [ 0] cats.effect.unsafe.WorkerThread.parkLoop$1
  [ 1] cats.effect.unsafe.WorkerThread.run

--- 20039058 ns (0.01%), 2 samples
  [ 0] futex_q_lock_[k]
  [ 1] futex_wait_setup_[k]
  [ 2] futex_wait_[k]
  [ 3] do_futex_[k]
  [ 4] __x64_sys_futex_[k]
  [ 5] do_syscall_64_[k]
  [ 6] entry_SYSCALL_64_after_hwframe_[k]
  [ 7] __lll_lock_wait
  [ 8] TaskTerminator::offer_termination(TerminatorTerminator*)
  [ 9] G1ParEvacuateFollowersClosure::do_void()
  [10] G1EvacuateRegionsTask::evacuate_live_objects(G1ParScanThreadState*, unsigned int)
  [11] G1EvacuateRegionsBaseTask::work(unsigned int)
  [12] GangWorker::loop()
  [13] GangWorker::run()
  [14] Thread::call_run()
  [15] thread_native_entry(Thread*)
  [16] start_thread

--- 20037149 ns (0.01%), 2 samples
  [ 0] cats.effect.IOFiber$.TypeBlocking
  [ 1] cats.effect.IOFiber.runLoop
  [ 2] cats.effect.IOFiber.execR
  [ 3] cats.effect.IOFiber.run
  [ 4] cats.effect.unsafe.WorkerThread.run

--- 20036298 ns (0.01%), 2 samples
  [ 0] _Copy_conjoint_jlongs_atomic
  [ 1] JVM_Clone
  [ 2] java.lang.Object.clone
  [ 3] java.util.TimeZone.clone
  [ 4] sun.util.calendar.ZoneInfo.clone
  [ 5] java.util.TimeZone.getDefault
  [ 6] java.time.ZoneId.systemDefault
  [ 7] jdk.nio.zipfs.ZipUtils.dosToJavaTime
  [ 8] jdk.nio.zipfs.ZipFileSystem$Entry.readCEN
  [ 9] jdk.nio.zipfs.ZipFileSystem$Entry.<init>
  [10] jdk.nio.zipfs.ZipFileSystem.getEntry
  [11] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [12] jdk.nio.zipfs.ZipPath.newByteChannel
  [13] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [14] java.nio.file.Files.newByteChannel
  [15] java.nio.file.Files.newByteChannel
  [16] java.nio.file.Files.readAllBytes
  [17] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [18] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [19] cats.effect.IOFiber.$anonfun$8
  [20] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [21] cats.effect.unsafe.WorkerThread.blockOn
  [22] scala.concurrent.package$.blocking
  [23] cats.effect.IOFiber.runLoop
  [24] cats.effect.IOFiber.execR
  [25] cats.effect.IOFiber.run
  [26] cats.effect.unsafe.WorkerThread.run

--- 20036026 ns (0.01%), 2 samples
  [ 0] java.time.zone.ZoneRules.getOffsetInfo
  [ 1] java.time.zone.ZoneRules.getOffset
  [ 2] jdk.nio.zipfs.ZipUtils.dosToJavaTime
  [ 3] jdk.nio.zipfs.ZipFileSystem$Entry.readCEN
  [ 4] jdk.nio.zipfs.ZipFileSystem$Entry.<init>
  [ 5] jdk.nio.zipfs.ZipFileSystem.getEntry
  [ 6] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [ 7] jdk.nio.zipfs.ZipPath.newByteChannel
  [ 8] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [ 9] java.nio.file.Files.newByteChannel
  [10] java.nio.file.Files.newByteChannel
  [11] java.nio.file.Files.readAllBytes
  [12] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [13] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [14] cats.effect.IOFiber.$anonfun$8
  [15] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [16] cats.effect.unsafe.WorkerThread.blockOn
  [17] scala.concurrent.package$.blocking
  [18] cats.effect.IOFiber.runLoop
  [19] cats.effect.IOFiber.execR
  [20] cats.effect.IOFiber.run
  [21] cats.effect.unsafe.WorkerThread.run

--- 20031720 ns (0.01%), 2 samples
  [ 0] char* UNICODE::as_utf8<signed char>(signed char const*, int&)
  [ 1] java_lang_String::as_utf8_string(oopDesc*)
  [ 2] JVM_SetNativeThreadName
  [ 3] java.lang.Thread.setNativeName
  [ 4] java.lang.Thread.setName
  [ 5] cats.effect.unsafe.WorkerThread.blockOn
  [ 6] scala.concurrent.package$.blocking
  [ 7] cats.effect.IOFiber.runLoop
  [ 8] cats.effect.IOFiber.execR
  [ 9] cats.effect.IOFiber.run
  [10] cats.effect.unsafe.WorkerThread.run

--- 20028364 ns (0.01%), 2 samples
  [ 0] spl_kmem_free?[spl]_[k]
  [ 1] dmu_read_uio_dnode?[zfs]_[k]
  [ 2] dmu_read_uio_dbuf?[zfs]_[k]
  [ 3] zfs_read?[zfs]_[k]
  [ 4] zpl_iter_read?[zfs]_[k]
  [ 5] new_sync_read_[k]
  [ 6] vfs_read_[k]
  [ 7] __x64_sys_pread64_[k]
  [ 8] do_syscall_64_[k]
  [ 9] entry_SYSCALL_64_after_hwframe_[k]
  [10] __libc_pread64
  [11] sun.nio.ch.FileDispatcherImpl.pread0
  [12] sun.nio.ch.FileDispatcherImpl.pread
  [13] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [14] sun.nio.ch.IOUtil.read
  [15] sun.nio.ch.IOUtil.read
  [16] sun.nio.ch.FileChannelImpl.readInternal
  [17] sun.nio.ch.FileChannelImpl.read
  [18] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [19] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [20] jdk.nio.zipfs.ZipFileSystem$2.fill
  [21] java.util.zip.InflaterInputStream.read
  [22] java.io.InputStream.readNBytes
  [23] java.io.InputStream.readAllBytes
  [24] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [25] jdk.nio.zipfs.ZipPath.newByteChannel
  [26] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [27] java.nio.file.Files.newByteChannel
  [28] java.nio.file.Files.newByteChannel
  [29] java.nio.file.Files.readAllBytes
  [30] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [31] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [32] cats.effect.IOFiber.$anonfun$8
  [33] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [34] cats.effect.unsafe.WorkerThread.blockOn
  [35] scala.concurrent.package$.blocking
  [36] cats.effect.IOFiber.runLoop
  [37] cats.effect.IOFiber.execR
  [38] cats.effect.IOFiber.run
  [39] cats.effect.unsafe.WorkerThread.run

--- 20028182 ns (0.01%), 2 samples
  [ 0] timespec64_compare?[zfs]_[k]
  [ 1] zpl_file_accessed?[zfs]_[k]
  [ 2] zpl_iter_read?[zfs]_[k]
  [ 3] new_sync_read_[k]
  [ 4] vfs_read_[k]
  [ 5] __x64_sys_pread64_[k]
  [ 6] do_syscall_64_[k]
  [ 7] entry_SYSCALL_64_after_hwframe_[k]
  [ 8] __libc_pread64
  [ 9] sun.nio.ch.FileDispatcherImpl.pread0
  [10] sun.nio.ch.FileDispatcherImpl.pread
  [11] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [12] sun.nio.ch.IOUtil.read
  [13] sun.nio.ch.IOUtil.read
  [14] sun.nio.ch.FileChannelImpl.readInternal
  [15] sun.nio.ch.FileChannelImpl.read
  [16] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [17] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [18] jdk.nio.zipfs.ZipFileSystem$2.fill
  [19] java.util.zip.InflaterInputStream.read
  [20] java.io.InputStream.readNBytes
  [21] java.io.InputStream.readAllBytes
  [22] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [23] jdk.nio.zipfs.ZipPath.newByteChannel
  [24] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [25] java.nio.file.Files.newByteChannel
  [26] java.nio.file.Files.newByteChannel
  [27] java.nio.file.Files.readAllBytes
  [28] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [29] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [30] cats.effect.IOFiber.$anonfun$8
  [31] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [32] cats.effect.unsafe.WorkerThread.blockOn
  [33] scala.concurrent.package$.blocking
  [34] cats.effect.IOFiber.runLoop
  [35] cats.effect.IOFiber.execR
  [36] cats.effect.IOFiber.run
  [37] cats.effect.unsafe.WorkerThread.run

--- 20027642 ns (0.01%), 2 samples
  [ 0] spl_kmem_cache_free?[spl]_[k]
  [ 1] zio_wait?[zfs]_[k]
  [ 2] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 3] dmu_read_uio_dnode?[zfs]_[k]
  [ 4] dmu_read_uio_dbuf?[zfs]_[k]
  [ 5] zfs_read?[zfs]_[k]
  [ 6] zpl_iter_read?[zfs]_[k]
  [ 7] new_sync_read_[k]
  [ 8] vfs_read_[k]
  [ 9] __x64_sys_pread64_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] __libc_pread64
  [13] sun.nio.ch.FileDispatcherImpl.pread0
  [14] sun.nio.ch.FileDispatcherImpl.pread
  [15] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [16] sun.nio.ch.IOUtil.read
  [17] sun.nio.ch.IOUtil.read
  [18] sun.nio.ch.FileChannelImpl.readInternal
  [19] sun.nio.ch.FileChannelImpl.read
  [20] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [21] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [22] jdk.nio.zipfs.ZipFileSystem$2.fill
  [23] java.util.zip.InflaterInputStream.read
  [24] java.io.InputStream.readNBytes
  [25] java.io.InputStream.readAllBytes
  [26] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [27] jdk.nio.zipfs.ZipPath.newByteChannel
  [28] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [29] java.nio.file.Files.newByteChannel
  [30] java.nio.file.Files.newByteChannel
  [31] java.nio.file.Files.readAllBytes
  [32] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [33] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [34] cats.effect.IOFiber.$anonfun$8
  [35] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [36] cats.effect.unsafe.WorkerThread.blockOn
  [37] scala.concurrent.package$.blocking
  [38] cats.effect.IOFiber.runLoop
  [39] cats.effect.IOFiber.execR
  [40] cats.effect.IOFiber.run
  [41] cats.effect.unsafe.WorkerThread.run

--- 20026925 ns (0.01%), 2 samples
  [ 0] G1ParCopyClosure<(G1Barrier)0, true>::do_oop(oopDesc**)
  [ 1] G1RootProcessor::process_vm_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int)
  [ 2] G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int)
  [ 3] G1EvacuateRegionsTask::scan_roots(G1ParScanThreadState*, unsigned int)
  [ 4] G1EvacuateRegionsBaseTask::work(unsigned int)
  [ 5] GangWorker::loop()
  [ 6] GangWorker::run()
  [ 7] Thread::call_run()
  [ 8] thread_native_entry(Thread*)
  [ 9] start_thread

--- 20026920 ns (0.01%), 2 samples
  [ 0] __rcu_read_unlock_[k]
  [ 1] __fsnotify_parent_[k]
  [ 2] vfs_read_[k]
  [ 3] __x64_sys_pread64_[k]
  [ 4] do_syscall_64_[k]
  [ 5] entry_SYSCALL_64_after_hwframe_[k]
  [ 6] __libc_pread64
  [ 7] sun.nio.ch.FileDispatcherImpl.pread0
  [ 8] sun.nio.ch.FileDispatcherImpl.pread
  [ 9] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [10] sun.nio.ch.IOUtil.read
  [11] sun.nio.ch.IOUtil.read
  [12] sun.nio.ch.FileChannelImpl.readInternal
  [13] sun.nio.ch.FileChannelImpl.read
  [14] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [15] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [16] jdk.nio.zipfs.ZipFileSystem$2.fill
  [17] java.util.zip.InflaterInputStream.read
  [18] java.io.InputStream.readNBytes
  [19] java.io.InputStream.readAllBytes
  [20] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [21] jdk.nio.zipfs.ZipPath.newByteChannel
  [22] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [23] java.nio.file.Files.newByteChannel
  [24] java.nio.file.Files.newByteChannel
  [25] java.nio.file.Files.readAllBytes
  [26] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [27] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [28] cats.effect.IOFiber.$anonfun$8
  [29] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [30] cats.effect.unsafe.WorkerThread.blockOn
  [31] scala.concurrent.package$.blocking
  [32] cats.effect.IOFiber.runLoop
  [33] cats.effect.IOFiber.execR
  [34] cats.effect.IOFiber.run
  [35] cats.effect.unsafe.WorkerThread.run

--- 20025298 ns (0.01%), 2 samples
  [ 0] __cv_broadcast?[spl]_[k]
  [ 1] rrw_exit?[zfs]_[k]
  [ 2] rrm_exit?[zfs]_[k]
  [ 3] zfs_read?[zfs]_[k]
  [ 4] zpl_iter_read?[zfs]_[k]
  [ 5] new_sync_read_[k]
  [ 6] vfs_read_[k]
  [ 7] __x64_sys_pread64_[k]
  [ 8] do_syscall_64_[k]
  [ 9] entry_SYSCALL_64_after_hwframe_[k]
  [10] __libc_pread64
  [11] sun.nio.ch.FileDispatcherImpl.pread0
  [12] sun.nio.ch.FileDispatcherImpl.pread
  [13] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [14] sun.nio.ch.IOUtil.read
  [15] sun.nio.ch.IOUtil.read
  [16] sun.nio.ch.FileChannelImpl.readInternal
  [17] sun.nio.ch.FileChannelImpl.read
  [18] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [19] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [20] jdk.nio.zipfs.ZipFileSystem$2.fill
  [21] java.util.zip.InflaterInputStream.read
  [22] java.io.InputStream.readNBytes
  [23] java.io.InputStream.readAllBytes
  [24] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [25] jdk.nio.zipfs.ZipPath.newByteChannel
  [26] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [27] java.nio.file.Files.newByteChannel
  [28] java.nio.file.Files.newByteChannel
  [29] java.nio.file.Files.readAllBytes
  [30] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [31] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [32] cats.effect.IOFiber.$anonfun$8
  [33] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [34] cats.effect.unsafe.WorkerThread.blockOn
  [35] scala.concurrent.package$.blocking
  [36] cats.effect.IOFiber.runLoop
  [37] cats.effect.IOFiber.execR
  [38] cats.effect.IOFiber.run
  [39] cats.effect.unsafe.WorkerThread.run

--- 20024918 ns (0.01%), 2 samples
  [ 0] dmu_buf_rele_array?[zfs]_[k]
  [ 1] dmu_read_uio_dnode?[zfs]_[k]
  [ 2] dmu_read_uio_dbuf?[zfs]_[k]
  [ 3] zfs_read?[zfs]_[k]
  [ 4] zpl_iter_read?[zfs]_[k]
  [ 5] new_sync_read_[k]
  [ 6] vfs_read_[k]
  [ 7] __x64_sys_pread64_[k]
  [ 8] do_syscall_64_[k]
  [ 9] entry_SYSCALL_64_after_hwframe_[k]
  [10] __libc_pread64
  [11] sun.nio.ch.FileDispatcherImpl.pread0
  [12] sun.nio.ch.FileDispatcherImpl.pread
  [13] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [14] sun.nio.ch.IOUtil.read
  [15] sun.nio.ch.IOUtil.read
  [16] sun.nio.ch.FileChannelImpl.readInternal
  [17] sun.nio.ch.FileChannelImpl.read
  [18] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [19] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [20] jdk.nio.zipfs.ZipFileSystem$2.fill
  [21] java.util.zip.InflaterInputStream.read
  [22] java.io.InputStream.readNBytes
  [23] java.io.InputStream.readAllBytes
  [24] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [25] jdk.nio.zipfs.ZipPath.newByteChannel
  [26] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [27] java.nio.file.Files.newByteChannel
  [28] java.nio.file.Files.newByteChannel
  [29] java.nio.file.Files.readAllBytes
  [30] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [31] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [32] cats.effect.IOFiber.$anonfun$8
  [33] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [34] cats.effect.unsafe.WorkerThread.blockOn
  [35] scala.concurrent.package$.blocking
  [36] cats.effect.IOFiber.runLoop
  [37] cats.effect.IOFiber.execR
  [38] cats.effect.IOFiber.run
  [39] cats.effect.unsafe.WorkerThread.run

--- 20024154 ns (0.01%), 2 samples
  [ 0] dbuf_hold?[zfs]_[k]
  [ 1] dmu_read_uio_dnode?[zfs]_[k]
  [ 2] dmu_read_uio_dbuf?[zfs]_[k]
  [ 3] zfs_read?[zfs]_[k]
  [ 4] zpl_iter_read?[zfs]_[k]
  [ 5] new_sync_read_[k]
  [ 6] vfs_read_[k]
  [ 7] __x64_sys_pread64_[k]
  [ 8] do_syscall_64_[k]
  [ 9] entry_SYSCALL_64_after_hwframe_[k]
  [10] __libc_pread64
  [11] sun.nio.ch.FileDispatcherImpl.pread0
  [12] sun.nio.ch.FileDispatcherImpl.pread
  [13] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [14] sun.nio.ch.IOUtil.read
  [15] sun.nio.ch.IOUtil.read
  [16] sun.nio.ch.FileChannelImpl.readInternal
  [17] sun.nio.ch.FileChannelImpl.read
  [18] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [19] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [20] jdk.nio.zipfs.ZipFileSystem$2.fill
  [21] java.util.zip.InflaterInputStream.read
  [22] java.io.InputStream.readNBytes
  [23] java.io.InputStream.readAllBytes
  [24] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [25] jdk.nio.zipfs.ZipPath.newByteChannel
  [26] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [27] java.nio.file.Files.newByteChannel
  [28] java.nio.file.Files.newByteChannel
  [29] java.nio.file.Files.readAllBytes
  [30] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [31] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [32] cats.effect.IOFiber.$anonfun$8
  [33] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [34] cats.effect.unsafe.WorkerThread.blockOn
  [35] scala.concurrent.package$.blocking
  [36] cats.effect.IOFiber.runLoop
  [37] cats.effect.IOFiber.execR
  [38] cats.effect.IOFiber.run
  [39] cats.effect.unsafe.WorkerThread.run

--- 20024076 ns (0.01%), 2 samples
  [ 0] dbuf_read?[zfs]_[k]
  [ 1] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 2] dmu_read_uio_dnode?[zfs]_[k]
  [ 3] dmu_read_uio_dbuf?[zfs]_[k]
  [ 4] zfs_read?[zfs]_[k]
  [ 5] zpl_iter_read?[zfs]_[k]
  [ 6] new_sync_read_[k]
  [ 7] vfs_read_[k]
  [ 8] __x64_sys_pread64_[k]
  [ 9] do_syscall_64_[k]
  [10] entry_SYSCALL_64_after_hwframe_[k]
  [11] __libc_pread64
  [12] sun.nio.ch.FileDispatcherImpl.pread0
  [13] sun.nio.ch.FileDispatcherImpl.pread
  [14] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [15] sun.nio.ch.IOUtil.read
  [16] sun.nio.ch.IOUtil.read
  [17] sun.nio.ch.FileChannelImpl.readInternal
  [18] sun.nio.ch.FileChannelImpl.read
  [19] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [20] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [21] jdk.nio.zipfs.ZipFileSystem$2.fill
  [22] java.util.zip.InflaterInputStream.read
  [23] java.io.InputStream.readNBytes
  [24] java.io.InputStream.readAllBytes
  [25] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [26] jdk.nio.zipfs.ZipPath.newByteChannel
  [27] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [28] java.nio.file.Files.newByteChannel
  [29] java.nio.file.Files.newByteChannel
  [30] java.nio.file.Files.readAllBytes
  [31] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [32] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [33] cats.effect.IOFiber.$anonfun$8
  [34] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [35] cats.effect.unsafe.WorkerThread.blockOn
  [36] scala.concurrent.package$.blocking
  [37] cats.effect.IOFiber.runLoop
  [38] cats.effect.IOFiber.execR
  [39] cats.effect.IOFiber.run
  [40] cats.effect.unsafe.WorkerThread.run

--- 20024067 ns (0.01%), 2 samples
  [ 0] percpu_counter_add_batch_[k]
  [ 1] wmsum_add?[zfs]_[k]
  [ 2] dataset_kstats_update_read_kstats?[zfs]_[k]
  [ 3] zfs_read?[zfs]_[k]
  [ 4] zpl_iter_read?[zfs]_[k]
  [ 5] new_sync_read_[k]
  [ 6] vfs_read_[k]
  [ 7] __x64_sys_pread64_[k]
  [ 8] do_syscall_64_[k]
  [ 9] entry_SYSCALL_64_after_hwframe_[k]
  [10] __libc_pread64
  [11] sun.nio.ch.FileDispatcherImpl.pread0
  [12] sun.nio.ch.FileDispatcherImpl.pread
  [13] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [14] sun.nio.ch.IOUtil.read
  [15] sun.nio.ch.IOUtil.read
  [16] sun.nio.ch.FileChannelImpl.readInternal
  [17] sun.nio.ch.FileChannelImpl.read
  [18] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [19] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [20] jdk.nio.zipfs.ZipFileSystem$2.fill
  [21] java.util.zip.InflaterInputStream.read
  [22] java.io.InputStream.readNBytes
  [23] java.io.InputStream.readAllBytes
  [24] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [25] jdk.nio.zipfs.ZipPath.newByteChannel
  [26] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [27] java.nio.file.Files.newByteChannel
  [28] java.nio.file.Files.newByteChannel
  [29] java.nio.file.Files.readAllBytes
  [30] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [31] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [32] cats.effect.IOFiber.$anonfun$8
  [33] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [34] cats.effect.unsafe.WorkerThread.blockOn
  [35] scala.concurrent.package$.blocking
  [36] cats.effect.IOFiber.runLoop
  [37] cats.effect.IOFiber.execR
  [38] cats.effect.IOFiber.run
  [39] cats.effect.unsafe.WorkerThread.run

--- 20023164 ns (0.01%), 2 samples
  [ 0] list_create.constprop.0?[zfs]_[k]
  [ 1] zio_create?[zfs]_[k]
  [ 2] zio_null?[zfs]_[k]
  [ 3] zio_root?[zfs]_[k]
  [ 4] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 5] dmu_read_uio_dnode?[zfs]_[k]
  [ 6] dmu_read_uio_dbuf?[zfs]_[k]
  [ 7] zfs_read?[zfs]_[k]
  [ 8] zpl_iter_read?[zfs]_[k]
  [ 9] new_sync_read_[k]
  [10] vfs_read_[k]
  [11] __x64_sys_pread64_[k]
  [12] do_syscall_64_[k]
  [13] entry_SYSCALL_64_after_hwframe_[k]
  [14] __libc_pread64
  [15] sun.nio.ch.FileDispatcherImpl.pread0
  [16] sun.nio.ch.FileDispatcherImpl.pread
  [17] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [18] sun.nio.ch.IOUtil.read
  [19] sun.nio.ch.IOUtil.read
  [20] sun.nio.ch.FileChannelImpl.readInternal
  [21] sun.nio.ch.FileChannelImpl.read
  [22] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [23] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [24] jdk.nio.zipfs.ZipFileSystem$2.fill
  [25] java.util.zip.InflaterInputStream.read
  [26] java.io.InputStream.readNBytes
  [27] java.io.InputStream.readAllBytes
  [28] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [29] jdk.nio.zipfs.ZipPath.newByteChannel
  [30] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [31] java.nio.file.Files.newByteChannel
  [32] java.nio.file.Files.newByteChannel
  [33] java.nio.file.Files.readAllBytes
  [34] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [35] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [36] cats.effect.IOFiber.$anonfun$8
  [37] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [38] cats.effect.unsafe.WorkerThread.blockOn
  [39] scala.concurrent.package$.blocking
  [40] cats.effect.IOFiber.runLoop
  [41] cats.effect.IOFiber.execR
  [42] cats.effect.IOFiber.run
  [43] cats.effect.unsafe.WorkerThread.run

--- 20022894 ns (0.01%), 2 samples
  [ 0] _raw_spin_lock_[k]
  [ 1] dbuf_rele_and_unlock?[zfs]_[k]
  [ 2] dbuf_rele?[zfs]_[k]
  [ 3] dmu_buf_rele_array?[zfs]_[k]
  [ 4] dmu_read_uio_dnode?[zfs]_[k]
  [ 5] dmu_read_uio_dbuf?[zfs]_[k]
  [ 6] zfs_read?[zfs]_[k]
  [ 7] zpl_iter_read?[zfs]_[k]
  [ 8] new_sync_read_[k]
  [ 9] vfs_read_[k]
  [10] __x64_sys_pread64_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] __libc_pread64
  [14] sun.nio.ch.FileDispatcherImpl.pread0
  [15] sun.nio.ch.FileDispatcherImpl.pread
  [16] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [17] sun.nio.ch.IOUtil.read
  [18] sun.nio.ch.IOUtil.read
  [19] sun.nio.ch.FileChannelImpl.readInternal
  [20] sun.nio.ch.FileChannelImpl.read
  [21] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [22] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [23] jdk.nio.zipfs.ZipFileSystem$2.fill
  [24] java.util.zip.InflaterInputStream.read
  [25] java.io.InputStream.readNBytes
  [26] java.io.InputStream.readAllBytes
  [27] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [28] jdk.nio.zipfs.ZipPath.newByteChannel
  [29] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [30] java.nio.file.Files.newByteChannel
  [31] java.nio.file.Files.newByteChannel
  [32] java.nio.file.Files.readAllBytes
  [33] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [34] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [35] cats.effect.IOFiber.$anonfun$8
  [36] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [37] cats.effect.unsafe.WorkerThread.blockOn
  [38] scala.concurrent.package$.blocking
  [39] cats.effect.IOFiber.runLoop
  [40] cats.effect.IOFiber.execR
  [41] cats.effect.IOFiber.run
  [42] cats.effect.unsafe.WorkerThread.run

--- 20022803 ns (0.01%), 2 samples
  [ 0] kmem_cache_free_[k]
  [ 1] zio_destroy?[zfs]_[k]
  [ 2] zio_wait?[zfs]_[k]
  [ 3] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 4] dmu_read_uio_dnode?[zfs]_[k]
  [ 5] dmu_read_uio_dbuf?[zfs]_[k]
  [ 6] zfs_read?[zfs]_[k]
  [ 7] zpl_iter_read?[zfs]_[k]
  [ 8] new_sync_read_[k]
  [ 9] vfs_read_[k]
  [10] __x64_sys_pread64_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] __libc_pread64
  [14] sun.nio.ch.FileDispatcherImpl.pread0
  [15] sun.nio.ch.FileDispatcherImpl.pread
  [16] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [17] sun.nio.ch.IOUtil.read
  [18] sun.nio.ch.IOUtil.read
  [19] sun.nio.ch.FileChannelImpl.readInternal
  [20] sun.nio.ch.FileChannelImpl.read
  [21] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [22] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [23] jdk.nio.zipfs.ZipFileSystem$2.fill
  [24] java.util.zip.InflaterInputStream.read
  [25] java.io.InputStream.readNBytes
  [26] java.io.InputStream.readAllBytes
  [27] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [28] jdk.nio.zipfs.ZipPath.newByteChannel
  [29] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [30] java.nio.file.Files.newByteChannel
  [31] java.nio.file.Files.newByteChannel
  [32] java.nio.file.Files.readAllBytes
  [33] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [34] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [35] cats.effect.IOFiber.$anonfun$8
  [36] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [37] cats.effect.unsafe.WorkerThread.blockOn
  [38] scala.concurrent.package$.blocking
  [39] cats.effect.IOFiber.runLoop
  [40] cats.effect.IOFiber.execR
  [41] cats.effect.IOFiber.run
  [42] cats.effect.unsafe.WorkerThread.run

--- 20022793 ns (0.01%), 2 samples
  [ 0] __tls_get_addr
  [ 1] TypeArrayKlass::allocate_common(int, bool, JavaThread*)
  [ 2] JVMCIRuntime::new_array_common(JavaThread*, Klass*, int, bool)
  [ 3] java.io.InputStream.readNBytes
  [ 4] java.io.InputStream.readAllBytes
  [ 5] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [ 6] jdk.nio.zipfs.ZipPath.newByteChannel
  [ 7] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [ 8] java.nio.file.Files.newByteChannel
  [ 9] java.nio.file.Files.newByteChannel
  [10] java.nio.file.Files.readAllBytes
  [11] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [12] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [13] cats.effect.IOFiber.$anonfun$8
  [14] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [15] cats.effect.unsafe.WorkerThread.blockOn
  [16] scala.concurrent.package$.blocking
  [17] cats.effect.IOFiber.runLoop
  [18] cats.effect.IOFiber.execR
  [19] cats.effect.IOFiber.run
  [20] cats.effect.unsafe.WorkerThread.run

--- 20021650 ns (0.01%), 2 samples
  [ 0] kfree_[k]
  [ 1] spl_kmem_free_impl?[spl]_[k]
  [ 2] spl_kmem_free?[spl]_[k]
  [ 3] zfs_rangelock_free?[zfs]_[k]
  [ 4] zfs_rangelock_exit?[zfs]_[k]
  [ 5] zfs_read?[zfs]_[k]
  [ 6] zpl_iter_read?[zfs]_[k]
  [ 7] new_sync_read_[k]
  [ 8] vfs_read_[k]
  [ 9] __x64_sys_pread64_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] __libc_pread64
  [13] sun.nio.ch.FileDispatcherImpl.pread0
  [14] sun.nio.ch.FileDispatcherImpl.pread
  [15] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [16] sun.nio.ch.IOUtil.read
  [17] sun.nio.ch.IOUtil.read
  [18] sun.nio.ch.FileChannelImpl.readInternal
  [19] sun.nio.ch.FileChannelImpl.read
  [20] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [21] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [22] jdk.nio.zipfs.ZipFileSystem$2.fill
  [23] java.util.zip.InflaterInputStream.read
  [24] java.io.InputStream.readNBytes
  [25] java.io.InputStream.readAllBytes
  [26] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [27] jdk.nio.zipfs.ZipPath.newByteChannel
  [28] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [29] java.nio.file.Files.newByteChannel
  [30] java.nio.file.Files.newByteChannel
  [31] java.nio.file.Files.readAllBytes
  [32] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [33] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [34] cats.effect.IOFiber.$anonfun$8
  [35] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [36] cats.effect.unsafe.WorkerThread.blockOn
  [37] scala.concurrent.package$.blocking
  [38] cats.effect.IOFiber.runLoop
  [39] cats.effect.IOFiber.execR
  [40] cats.effect.IOFiber.run
  [41] cats.effect.unsafe.WorkerThread.run

--- 20020930 ns (0.01%), 2 samples
  [ 0] dbuf_hold_level?[zfs]_[k]
  [ 1] dbuf_hold?[zfs]_[k]
  [ 2] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 3] dmu_read_uio_dnode?[zfs]_[k]
  [ 4] dmu_read_uio_dbuf?[zfs]_[k]
  [ 5] zfs_read?[zfs]_[k]
  [ 6] zpl_iter_read?[zfs]_[k]
  [ 7] new_sync_read_[k]
  [ 8] vfs_read_[k]
  [ 9] __x64_sys_pread64_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] __libc_pread64
  [13] sun.nio.ch.FileDispatcherImpl.pread0
  [14] sun.nio.ch.FileDispatcherImpl.pread
  [15] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [16] sun.nio.ch.IOUtil.read
  [17] sun.nio.ch.IOUtil.read
  [18] sun.nio.ch.FileChannelImpl.readInternal
  [19] sun.nio.ch.FileChannelImpl.read
  [20] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [21] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [22] jdk.nio.zipfs.ZipFileSystem$2.fill
  [23] java.util.zip.InflaterInputStream.read
  [24] java.io.InputStream.readNBytes
  [25] java.io.InputStream.readAllBytes
  [26] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [27] jdk.nio.zipfs.ZipPath.newByteChannel
  [28] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [29] java.nio.file.Files.newByteChannel
  [30] java.nio.file.Files.newByteChannel
  [31] java.nio.file.Files.readAllBytes
  [32] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [33] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [34] cats.effect.IOFiber.$anonfun$8
  [35] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [36] cats.effect.unsafe.WorkerThread.blockOn
  [37] scala.concurrent.package$.blocking
  [38] cats.effect.IOFiber.runLoop
  [39] cats.effect.IOFiber.execR
  [40] cats.effect.IOFiber.run
  [41] cats.effect.unsafe.WorkerThread.run

--- 20020638 ns (0.01%), 2 samples
  [ 0] percpu_counter_add_batch_[k]
  [ 1] wmsum_add?[zfs]_[k]
  [ 2] dbuf_hold_impl?[zfs]_[k]
  [ 3] dbuf_hold_level?[zfs]_[k]
  [ 4] dbuf_hold?[zfs]_[k]
  [ 5] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 6] dmu_read_uio_dnode?[zfs]_[k]
  [ 7] dmu_read_uio_dbuf?[zfs]_[k]
  [ 8] zfs_read?[zfs]_[k]
  [ 9] zpl_iter_read?[zfs]_[k]
  [10] new_sync_read_[k]
  [11] vfs_read_[k]
  [12] __x64_sys_pread64_[k]
  [13] do_syscall_64_[k]
  [14] entry_SYSCALL_64_after_hwframe_[k]
  [15] __libc_pread64
  [16] sun.nio.ch.FileDispatcherImpl.pread0
  [17] sun.nio.ch.FileDispatcherImpl.pread
  [18] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [19] sun.nio.ch.IOUtil.read
  [20] sun.nio.ch.IOUtil.read
  [21] sun.nio.ch.FileChannelImpl.readInternal
  [22] sun.nio.ch.FileChannelImpl.read
  [23] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [24] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [25] jdk.nio.zipfs.ZipFileSystem$2.fill
  [26] java.util.zip.InflaterInputStream.read
  [27] java.io.InputStream.readNBytes
  [28] java.io.InputStream.readAllBytes
  [29] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [30] jdk.nio.zipfs.ZipPath.newByteChannel
  [31] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [32] java.nio.file.Files.newByteChannel
  [33] java.nio.file.Files.newByteChannel
  [34] java.nio.file.Files.readAllBytes
  [35] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [36] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [37] cats.effect.IOFiber.$anonfun$8
  [38] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [39] cats.effect.unsafe.WorkerThread.blockOn
  [40] scala.concurrent.package$.blocking
  [41] cats.effect.IOFiber.runLoop
  [42] cats.effect.IOFiber.execR
  [43] cats.effect.IOFiber.run
  [44] cats.effect.unsafe.WorkerThread.run

--- 20019788 ns (0.01%), 2 samples
  [ 0] __fsnotify_parent_[k]
  [ 1] vfs_read_[k]
  [ 2] __x64_sys_pread64_[k]
  [ 3] do_syscall_64_[k]
  [ 4] entry_SYSCALL_64_after_hwframe_[k]
  [ 5] __libc_pread64
  [ 6] sun.nio.ch.FileDispatcherImpl.pread0
  [ 7] sun.nio.ch.FileDispatcherImpl.pread
  [ 8] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [ 9] sun.nio.ch.IOUtil.read
  [10] sun.nio.ch.IOUtil.read
  [11] sun.nio.ch.FileChannelImpl.readInternal
  [12] sun.nio.ch.FileChannelImpl.read
  [13] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [14] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [15] jdk.nio.zipfs.ZipFileSystem$2.fill
  [16] java.util.zip.InflaterInputStream.read
  [17] java.io.InputStream.readNBytes
  [18] java.io.InputStream.readAllBytes
  [19] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [20] jdk.nio.zipfs.ZipPath.newByteChannel
  [21] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [22] java.nio.file.Files.newByteChannel
  [23] java.nio.file.Files.newByteChannel
  [24] java.nio.file.Files.readAllBytes
  [25] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [26] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [27] cats.effect.IOFiber.$anonfun$8
  [28] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [29] cats.effect.unsafe.WorkerThread.blockOn
  [30] scala.concurrent.package$.blocking
  [31] cats.effect.IOFiber.runLoop
  [32] cats.effect.IOFiber.execR
  [33] cats.effect.IOFiber.run
  [34] cats.effect.unsafe.WorkerThread.run

--- 20019568 ns (0.01%), 2 samples
  [ 0] is_vmalloc_addr_[k]
  [ 1] spl_kmem_free?[spl]_[k]
  [ 2] zfs_rangelock_free?[zfs]_[k]
  [ 3] zfs_rangelock_exit?[zfs]_[k]
  [ 4] zfs_read?[zfs]_[k]
  [ 5] zpl_iter_read?[zfs]_[k]
  [ 6] new_sync_read_[k]
  [ 7] vfs_read_[k]
  [ 8] __x64_sys_pread64_[k]
  [ 9] do_syscall_64_[k]
  [10] entry_SYSCALL_64_after_hwframe_[k]
  [11] __libc_pread64
  [12] sun.nio.ch.FileDispatcherImpl.pread0
  [13] sun.nio.ch.FileDispatcherImpl.pread
  [14] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [15] sun.nio.ch.IOUtil.read
  [16] sun.nio.ch.IOUtil.read
  [17] sun.nio.ch.FileChannelImpl.readInternal
  [18] sun.nio.ch.FileChannelImpl.read
  [19] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [20] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [21] jdk.nio.zipfs.ZipFileSystem$2.fill
  [22] java.util.zip.InflaterInputStream.read
  [23] java.io.InputStream.readNBytes
  [24] java.io.InputStream.readAllBytes
  [25] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [26] jdk.nio.zipfs.ZipPath.newByteChannel
  [27] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [28] java.nio.file.Files.newByteChannel
  [29] java.nio.file.Files.newByteChannel
  [30] java.nio.file.Files.readAllBytes
  [31] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [32] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [33] cats.effect.IOFiber.$anonfun$8
  [34] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [35] cats.effect.unsafe.WorkerThread.blockOn
  [36] scala.concurrent.package$.blocking
  [37] cats.effect.IOFiber.runLoop
  [38] cats.effect.IOFiber.execR
  [39] cats.effect.IOFiber.run
  [40] cats.effect.unsafe.WorkerThread.run

--- 20018374 ns (0.01%), 2 samples
  [ 0] zfs_rangelock_free?[zfs]_[k]
  [ 1] zfs_read?[zfs]_[k]
  [ 2] zpl_iter_read?[zfs]_[k]
  [ 3] new_sync_read_[k]
  [ 4] vfs_read_[k]
  [ 5] __x64_sys_pread64_[k]
  [ 6] do_syscall_64_[k]
  [ 7] entry_SYSCALL_64_after_hwframe_[k]
  [ 8] __libc_pread64
  [ 9] sun.nio.ch.FileDispatcherImpl.pread0
  [10] sun.nio.ch.FileDispatcherImpl.pread
  [11] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [12] sun.nio.ch.IOUtil.read
  [13] sun.nio.ch.IOUtil.read
  [14] sun.nio.ch.FileChannelImpl.readInternal
  [15] sun.nio.ch.FileChannelImpl.read
  [16] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [17] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [18] jdk.nio.zipfs.ZipFileSystem$2.fill
  [19] java.util.zip.InflaterInputStream.read
  [20] java.io.InputStream.readNBytes
  [21] java.io.InputStream.readAllBytes
  [22] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [23] jdk.nio.zipfs.ZipPath.newByteChannel
  [24] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [25] java.nio.file.Files.newByteChannel
  [26] java.nio.file.Files.newByteChannel
  [27] java.nio.file.Files.readAllBytes
  [28] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [29] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [30] cats.effect.IOFiber.$anonfun$8
  [31] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [32] cats.effect.unsafe.WorkerThread.blockOn
  [33] scala.concurrent.package$.blocking
  [34] cats.effect.IOFiber.runLoop
  [35] cats.effect.IOFiber.execR
  [36] cats.effect.IOFiber.run
  [37] cats.effect.unsafe.WorkerThread.run

--- 20018216 ns (0.01%), 2 samples
  [ 0] __memmove_avx_unaligned_erms
  [ 1] EnterpriseAddressRangeCommittedMemoryProvider_initialize_db429a297cbf2672637c946a599719df70b48cd7
  [ 2] CEntryPointSnippets_createIsolate_bb00f99aac090dc55c4d720184b7788129da5b4b
  [ 3] IsolateEnterStub_JNIInvocationInterface$Exports_JNI_CreateJavaVM_5039eb5aa99cf9f72730ab2d0e29ae6c12b19e97_6f26f759c4dc3632fadc91c510a779de59b468b6
  [ 4] JVMCIRuntime::init_shared_library_javavm()
  [ 5] JVMCIEnv::init_env_mode_runtime(JavaThread*, JNIEnv_*, bool)
  [ 6] JVMCIEnv::JVMCIEnv(JavaThread*, JVMCICompileState*, char const*, int)
  [ 7] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [ 8] CompileBroker::compiler_thread_loop()
  [ 9] JavaThread::thread_main_inner()
  [10] Thread::call_run()
  [11] thread_native_entry(Thread*)
  [12] start_thread

--- 20018194 ns (0.01%), 2 samples
  [ 0] spl_kmem_alloc_impl?[spl]_[k]
  [ 1] spl_kmem_zalloc?[spl]_[k]
  [ 2] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 3] dmu_read_uio_dnode?[zfs]_[k]
  [ 4] dmu_read_uio_dbuf?[zfs]_[k]
  [ 5] zfs_read?[zfs]_[k]
  [ 6] zpl_iter_read?[zfs]_[k]
  [ 7] new_sync_read_[k]
  [ 8] vfs_read_[k]
  [ 9] __x64_sys_pread64_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] __libc_pread64
  [13] sun.nio.ch.FileDispatcherImpl.pread0
  [14] sun.nio.ch.FileDispatcherImpl.pread
  [15] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [16] sun.nio.ch.IOUtil.read
  [17] sun.nio.ch.IOUtil.read
  [18] sun.nio.ch.FileChannelImpl.readInternal
  [19] sun.nio.ch.FileChannelImpl.read
  [20] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [21] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [22] jdk.nio.zipfs.ZipFileSystem$2.fill
  [23] java.util.zip.InflaterInputStream.read
  [24] java.io.InputStream.readNBytes
  [25] java.io.InputStream.readAllBytes
  [26] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [27] jdk.nio.zipfs.ZipPath.newByteChannel
  [28] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [29] java.nio.file.Files.newByteChannel
  [30] java.nio.file.Files.newByteChannel
  [31] java.nio.file.Files.readAllBytes
  [32] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [33] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [34] cats.effect.IOFiber.$anonfun$8
  [35] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [36] cats.effect.unsafe.WorkerThread.blockOn
  [37] scala.concurrent.package$.blocking
  [38] cats.effect.IOFiber.runLoop
  [39] cats.effect.IOFiber.execR
  [40] cats.effect.IOFiber.run
  [41] cats.effect.unsafe.WorkerThread.run

--- 20017894 ns (0.01%), 2 samples
  [ 0] spl_kmem_free_impl?[spl]_[k]
  [ 1] spl_kmem_free?[spl]_[k]
  [ 2] dmu_buf_rele_array?[zfs]_[k]
  [ 3] dmu_read_uio_dnode?[zfs]_[k]
  [ 4] dmu_read_uio_dbuf?[zfs]_[k]
  [ 5] zfs_read?[zfs]_[k]
  [ 6] zpl_iter_read?[zfs]_[k]
  [ 7] new_sync_read_[k]
  [ 8] vfs_read_[k]
  [ 9] __x64_sys_pread64_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] __libc_pread64
  [13] sun.nio.ch.FileDispatcherImpl.pread0
  [14] sun.nio.ch.FileDispatcherImpl.pread
  [15] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [16] sun.nio.ch.IOUtil.read
  [17] sun.nio.ch.IOUtil.read
  [18] sun.nio.ch.FileChannelImpl.readInternal
  [19] sun.nio.ch.FileChannelImpl.read
  [20] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [21] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [22] jdk.nio.zipfs.ZipFileSystem$2.fill
  [23] java.util.zip.InflaterInputStream.read
  [24] java.io.InputStream.readNBytes
  [25] java.io.InputStream.readAllBytes
  [26] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [27] jdk.nio.zipfs.ZipPath.newByteChannel
  [28] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [29] java.nio.file.Files.newByteChannel
  [30] java.nio.file.Files.newByteChannel
  [31] java.nio.file.Files.readAllBytes
  [32] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [33] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [34] cats.effect.IOFiber.$anonfun$8
  [35] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [36] cats.effect.unsafe.WorkerThread.blockOn
  [37] scala.concurrent.package$.blocking
  [38] cats.effect.IOFiber.runLoop
  [39] cats.effect.IOFiber.execR
  [40] cats.effect.IOFiber.run
  [41] cats.effect.unsafe.WorkerThread.run

--- 20017423 ns (0.01%), 2 samples
  [ 0] HeapRegionManager::par_iterate(HeapRegionClosure*, HeapRegionClaimer*, unsigned int) const
  [ 1] G1ClearBitMapTask::work(unsigned int)
  [ 2] GangWorker::loop()
  [ 3] GangWorker::run()
  [ 4] Thread::call_run()
  [ 5] thread_native_entry(Thread*)
  [ 6] start_thread

--- 20017262 ns (0.01%), 2 samples
  [ 0] arc_buf_access?[zfs]_[k]
  [ 1] dbuf_hold_impl?[zfs]_[k]
  [ 2] dbuf_hold_level?[zfs]_[k]
  [ 3] dbuf_hold?[zfs]_[k]
  [ 4] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 5] dmu_read_uio_dnode?[zfs]_[k]
  [ 6] dmu_read_uio_dbuf?[zfs]_[k]
  [ 7] zfs_read?[zfs]_[k]
  [ 8] zpl_iter_read?[zfs]_[k]
  [ 9] new_sync_read_[k]
  [10] vfs_read_[k]
  [11] __x64_sys_pread64_[k]
  [12] do_syscall_64_[k]
  [13] entry_SYSCALL_64_after_hwframe_[k]
  [14] __libc_pread64
  [15] sun.nio.ch.FileDispatcherImpl.pread0
  [16] sun.nio.ch.FileDispatcherImpl.pread
  [17] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [18] sun.nio.ch.IOUtil.read
  [19] sun.nio.ch.IOUtil.read
  [20] sun.nio.ch.FileChannelImpl.readInternal
  [21] sun.nio.ch.FileChannelImpl.read
  [22] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [23] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [24] jdk.nio.zipfs.ZipFileSystem$2.fill
  [25] java.util.zip.InflaterInputStream.read
  [26] java.io.InputStream.readNBytes
  [27] java.io.InputStream.readAllBytes
  [28] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [29] jdk.nio.zipfs.ZipPath.newByteChannel
  [30] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [31] java.nio.file.Files.newByteChannel
  [32] java.nio.file.Files.newByteChannel
  [33] java.nio.file.Files.readAllBytes
  [34] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [35] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [36] cats.effect.IOFiber.$anonfun$8
  [37] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [38] cats.effect.unsafe.WorkerThread.blockOn
  [39] scala.concurrent.package$.blocking
  [40] cats.effect.IOFiber.runLoop
  [41] cats.effect.IOFiber.execR
  [42] cats.effect.IOFiber.run
  [43] cats.effect.unsafe.WorkerThread.run

--- 20016742 ns (0.01%), 2 samples
  [ 0] lockref_get_not_zero_[k]
  [ 1] dget_parent_[k]
  [ 2] __fsnotify_parent_[k]
  [ 3] fsnotify_perm.part.0_[k]
  [ 4] security_file_permission_[k]
  [ 5] rw_verify_area_[k]
  [ 6] vfs_read_[k]
  [ 7] __x64_sys_pread64_[k]
  [ 8] do_syscall_64_[k]
  [ 9] entry_SYSCALL_64_after_hwframe_[k]
  [10] __libc_pread64
  [11] sun.nio.ch.FileDispatcherImpl.pread0
  [12] sun.nio.ch.FileDispatcherImpl.pread
  [13] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [14] sun.nio.ch.IOUtil.read
  [15] sun.nio.ch.IOUtil.read
  [16] sun.nio.ch.FileChannelImpl.readInternal
  [17] sun.nio.ch.FileChannelImpl.read
  [18] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [19] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [20] jdk.nio.zipfs.ZipFileSystem$2.fill
  [21] java.util.zip.InflaterInputStream.read
  [22] java.io.InputStream.readNBytes
  [23] java.io.InputStream.readAllBytes
  [24] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [25] jdk.nio.zipfs.ZipPath.newByteChannel
  [26] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [27] java.nio.file.Files.newByteChannel
  [28] java.nio.file.Files.newByteChannel
  [29] java.nio.file.Files.readAllBytes
  [30] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [31] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [32] cats.effect.IOFiber.$anonfun$8
  [33] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [34] cats.effect.unsafe.WorkerThread.blockOn
  [35] scala.concurrent.package$.blocking
  [36] cats.effect.IOFiber.runLoop
  [37] cats.effect.IOFiber.execR
  [38] cats.effect.IOFiber.run
  [39] cats.effect.unsafe.WorkerThread.run

--- 20016401 ns (0.01%), 2 samples
  [ 0] zio_gang_tree_free?[zfs]_[k]
  [ 1] zio_done?[zfs]_[k]
  [ 2] zio_wait?[zfs]_[k]
  [ 3] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 4] dmu_read_uio_dnode?[zfs]_[k]
  [ 5] dmu_read_uio_dbuf?[zfs]_[k]
  [ 6] zfs_read?[zfs]_[k]
  [ 7] zpl_iter_read?[zfs]_[k]
  [ 8] new_sync_read_[k]
  [ 9] vfs_read_[k]
  [10] __x64_sys_pread64_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] __libc_pread64
  [14] sun.nio.ch.FileDispatcherImpl.pread0
  [15] sun.nio.ch.FileDispatcherImpl.pread
  [16] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [17] sun.nio.ch.IOUtil.read
  [18] sun.nio.ch.IOUtil.read
  [19] sun.nio.ch.FileChannelImpl.readInternal
  [20] sun.nio.ch.FileChannelImpl.read
  [21] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [22] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [23] jdk.nio.zipfs.ZipFileSystem$2.fill
  [24] java.util.zip.InflaterInputStream.read
  [25] java.io.InputStream.readNBytes
  [26] java.io.InputStream.readAllBytes
  [27] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [28] jdk.nio.zipfs.ZipPath.newByteChannel
  [29] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [30] java.nio.file.Files.newByteChannel
  [31] java.nio.file.Files.newByteChannel
  [32] java.nio.file.Files.readAllBytes
  [33] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [34] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [35] cats.effect.IOFiber.$anonfun$8
  [36] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [37] cats.effect.unsafe.WorkerThread.blockOn
  [38] scala.concurrent.package$.blocking
  [39] cats.effect.IOFiber.runLoop
  [40] cats.effect.IOFiber.execR
  [41] cats.effect.IOFiber.run
  [42] cats.effect.unsafe.WorkerThread.run

--- 20016181 ns (0.01%), 2 samples
  [ 0] down_read_[k]
  [ 1] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 2] dmu_read_uio_dnode?[zfs]_[k]
  [ 3] dmu_read_uio_dbuf?[zfs]_[k]
  [ 4] zfs_read?[zfs]_[k]
  [ 5] zpl_iter_read?[zfs]_[k]
  [ 6] new_sync_read_[k]
  [ 7] vfs_read_[k]
  [ 8] __x64_sys_pread64_[k]
  [ 9] do_syscall_64_[k]
  [10] entry_SYSCALL_64_after_hwframe_[k]
  [11] __libc_pread64
  [12] sun.nio.ch.FileDispatcherImpl.pread0
  [13] sun.nio.ch.FileDispatcherImpl.pread
  [14] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [15] sun.nio.ch.IOUtil.read
  [16] sun.nio.ch.IOUtil.read
  [17] sun.nio.ch.FileChannelImpl.readInternal
  [18] sun.nio.ch.FileChannelImpl.read
  [19] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [20] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [21] jdk.nio.zipfs.ZipFileSystem$2.fill
  [22] java.util.zip.InflaterInputStream.read
  [23] java.io.InputStream.readNBytes
  [24] java.io.InputStream.readAllBytes
  [25] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [26] jdk.nio.zipfs.ZipPath.newByteChannel
  [27] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [28] java.nio.file.Files.newByteChannel
  [29] java.nio.file.Files.newByteChannel
  [30] java.nio.file.Files.readAllBytes
  [31] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [32] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [33] cats.effect.IOFiber.$anonfun$8
  [34] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [35] cats.effect.unsafe.WorkerThread.blockOn
  [36] scala.concurrent.package$.blocking
  [37] cats.effect.IOFiber.runLoop
  [38] cats.effect.IOFiber.execR
  [39] cats.effect.IOFiber.run
  [40] cats.effect.unsafe.WorkerThread.run

--- 20016041 ns (0.01%), 2 samples
  [ 0] _raw_spin_lock_[k]
  [ 1] zio_wait?[zfs]_[k]
  [ 2] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 3] dmu_read_uio_dnode?[zfs]_[k]
  [ 4] dmu_read_uio_dbuf?[zfs]_[k]
  [ 5] zfs_read?[zfs]_[k]
  [ 6] zpl_iter_read?[zfs]_[k]
  [ 7] new_sync_read_[k]
  [ 8] vfs_read_[k]
  [ 9] __x64_sys_pread64_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] __libc_pread64
  [13] sun.nio.ch.FileDispatcherImpl.pread0
  [14] sun.nio.ch.FileDispatcherImpl.pread
  [15] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [16] sun.nio.ch.IOUtil.read
  [17] sun.nio.ch.IOUtil.read
  [18] sun.nio.ch.FileChannelImpl.readInternal
  [19] sun.nio.ch.FileChannelImpl.read
  [20] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [21] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [22] jdk.nio.zipfs.ZipFileSystem$2.fill
  [23] java.util.zip.InflaterInputStream.read
  [24] java.io.InputStream.readNBytes
  [25] java.io.InputStream.readAllBytes
  [26] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [27] jdk.nio.zipfs.ZipPath.newByteChannel
  [28] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [29] java.nio.file.Files.newByteChannel
  [30] java.nio.file.Files.newByteChannel
  [31] java.nio.file.Files.readAllBytes
  [32] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [33] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [34] cats.effect.IOFiber.$anonfun$8
  [35] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [36] cats.effect.unsafe.WorkerThread.blockOn
  [37] scala.concurrent.package$.blocking
  [38] cats.effect.IOFiber.runLoop
  [39] cats.effect.IOFiber.execR
  [40] cats.effect.IOFiber.run
  [41] cats.effect.unsafe.WorkerThread.run

--- 20015890 ns (0.01%), 2 samples
  [ 0] mutex_lock_[k]
  [ 1] zio_wait_for_children?[zfs]_[k]
  [ 2] zio_ready?[zfs]_[k]
  [ 3] zio_wait?[zfs]_[k]
  [ 4] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 5] dmu_read_uio_dnode?[zfs]_[k]
  [ 6] dmu_read_uio_dbuf?[zfs]_[k]
  [ 7] zfs_read?[zfs]_[k]
  [ 8] zpl_iter_read?[zfs]_[k]
  [ 9] new_sync_read_[k]
  [10] vfs_read_[k]
  [11] __x64_sys_pread64_[k]
  [12] do_syscall_64_[k]
  [13] entry_SYSCALL_64_after_hwframe_[k]
  [14] __libc_pread64
  [15] sun.nio.ch.FileDispatcherImpl.pread0
  [16] sun.nio.ch.FileDispatcherImpl.pread
  [17] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [18] sun.nio.ch.IOUtil.read
  [19] sun.nio.ch.IOUtil.read
  [20] sun.nio.ch.FileChannelImpl.readInternal
  [21] sun.nio.ch.FileChannelImpl.read
  [22] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [23] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [24] jdk.nio.zipfs.ZipFileSystem$2.fill
  [25] java.util.zip.InflaterInputStream.read
  [26] java.io.InputStream.readNBytes
  [27] java.io.InputStream.readAllBytes
  [28] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [29] jdk.nio.zipfs.ZipPath.newByteChannel
  [30] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [31] java.nio.file.Files.newByteChannel
  [32] java.nio.file.Files.newByteChannel
  [33] java.nio.file.Files.readAllBytes
  [34] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [35] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [36] cats.effect.IOFiber.$anonfun$8
  [37] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [38] cats.effect.unsafe.WorkerThread.blockOn
  [39] scala.concurrent.package$.blocking
  [40] cats.effect.IOFiber.runLoop
  [41] cats.effect.IOFiber.execR
  [42] cats.effect.IOFiber.run
  [43] cats.effect.unsafe.WorkerThread.run

--- 20015408 ns (0.01%), 2 samples
  [ 0] dbuf_cache_target_bytes?[zfs]_[k]
  [ 1] dbuf_rele_and_unlock?[zfs]_[k]
  [ 2] dbuf_rele?[zfs]_[k]
  [ 3] dmu_buf_rele_array?[zfs]_[k]
  [ 4] dmu_read_uio_dnode?[zfs]_[k]
  [ 5] dmu_read_uio_dbuf?[zfs]_[k]
  [ 6] zfs_read?[zfs]_[k]
  [ 7] zpl_iter_read?[zfs]_[k]
  [ 8] new_sync_read_[k]
  [ 9] vfs_read_[k]
  [10] __x64_sys_pread64_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] __libc_pread64
  [14] sun.nio.ch.FileDispatcherImpl.pread0
  [15] sun.nio.ch.FileDispatcherImpl.pread
  [16] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [17] sun.nio.ch.IOUtil.read
  [18] sun.nio.ch.IOUtil.read
  [19] sun.nio.ch.FileChannelImpl.readInternal
  [20] sun.nio.ch.FileChannelImpl.read
  [21] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [22] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [23] jdk.nio.zipfs.ZipFileSystem$2.fill
  [24] java.util.zip.InflaterInputStream.read
  [25] java.io.InputStream.readNBytes
  [26] java.io.InputStream.readAllBytes
  [27] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [28] jdk.nio.zipfs.ZipPath.newByteChannel
  [29] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [30] java.nio.file.Files.newByteChannel
  [31] java.nio.file.Files.newByteChannel
  [32] java.nio.file.Files.readAllBytes
  [33] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [34] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [35] cats.effect.IOFiber.$anonfun$8
  [36] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [37] cats.effect.unsafe.WorkerThread.blockOn
  [38] scala.concurrent.package$.blocking
  [39] cats.effect.IOFiber.runLoop
  [40] cats.effect.IOFiber.execR
  [41] cats.effect.IOFiber.run
  [42] cats.effect.unsafe.WorkerThread.run

--- 20015379 ns (0.01%), 2 samples
  [ 0] dmu_read_uio_dbuf?[zfs]_[k]
  [ 1] zfs_read?[zfs]_[k]
  [ 2] zpl_iter_read?[zfs]_[k]
  [ 3] new_sync_read_[k]
  [ 4] vfs_read_[k]
  [ 5] __x64_sys_pread64_[k]
  [ 6] do_syscall_64_[k]
  [ 7] entry_SYSCALL_64_after_hwframe_[k]
  [ 8] __libc_pread64
  [ 9] sun.nio.ch.FileDispatcherImpl.pread0
  [10] sun.nio.ch.FileDispatcherImpl.pread
  [11] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [12] sun.nio.ch.IOUtil.read
  [13] sun.nio.ch.IOUtil.read
  [14] sun.nio.ch.FileChannelImpl.readInternal
  [15] sun.nio.ch.FileChannelImpl.read
  [16] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [17] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [18] jdk.nio.zipfs.ZipFileSystem$2.fill
  [19] java.util.zip.InflaterInputStream.read
  [20] java.io.InputStream.readNBytes
  [21] java.io.InputStream.readAllBytes
  [22] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [23] jdk.nio.zipfs.ZipPath.newByteChannel
  [24] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [25] java.nio.file.Files.newByteChannel
  [26] java.nio.file.Files.newByteChannel
  [27] java.nio.file.Files.readAllBytes
  [28] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [29] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [30] cats.effect.IOFiber.$anonfun$8
  [31] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [32] cats.effect.unsafe.WorkerThread.blockOn
  [33] scala.concurrent.package$.blocking
  [34] cats.effect.IOFiber.runLoop
  [35] cats.effect.IOFiber.execR
  [36] cats.effect.IOFiber.run
  [37] cats.effect.unsafe.WorkerThread.run

--- 20015329 ns (0.01%), 2 samples
  [ 0] percpu_counter_add_batch_[k]
  [ 1] wmsum_add?[zfs]_[k]
  [ 2] dbuf_rele_and_unlock?[zfs]_[k]
  [ 3] dbuf_rele?[zfs]_[k]
  [ 4] dmu_buf_rele_array?[zfs]_[k]
  [ 5] dmu_read_uio_dnode?[zfs]_[k]
  [ 6] dmu_read_uio_dbuf?[zfs]_[k]
  [ 7] zfs_read?[zfs]_[k]
  [ 8] zpl_iter_read?[zfs]_[k]
  [ 9] new_sync_read_[k]
  [10] vfs_read_[k]
  [11] __x64_sys_pread64_[k]
  [12] do_syscall_64_[k]
  [13] entry_SYSCALL_64_after_hwframe_[k]
  [14] __libc_pread64
  [15] sun.nio.ch.FileDispatcherImpl.pread0
  [16] sun.nio.ch.FileDispatcherImpl.pread
  [17] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [18] sun.nio.ch.IOUtil.read
  [19] sun.nio.ch.IOUtil.read
  [20] sun.nio.ch.FileChannelImpl.readInternal
  [21] sun.nio.ch.FileChannelImpl.read
  [22] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [23] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [24] jdk.nio.zipfs.ZipFileSystem$2.fill
  [25] java.util.zip.InflaterInputStream.read
  [26] java.io.InputStream.readNBytes
  [27] java.io.InputStream.readAllBytes
  [28] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [29] jdk.nio.zipfs.ZipPath.newByteChannel
  [30] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [31] java.nio.file.Files.newByteChannel
  [32] java.nio.file.Files.newByteChannel
  [33] java.nio.file.Files.readAllBytes
  [34] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [35] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [36] cats.effect.IOFiber.$anonfun$8
  [37] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [38] cats.effect.unsafe.WorkerThread.blockOn
  [39] scala.concurrent.package$.blocking
  [40] cats.effect.IOFiber.runLoop
  [41] cats.effect.IOFiber.execR
  [42] cats.effect.IOFiber.run
  [43] cats.effect.unsafe.WorkerThread.run

--- 20015209 ns (0.01%), 2 samples
  [ 0] arc_buf_access?[zfs]_[k]
  [ 1] dbuf_hold_level?[zfs]_[k]
  [ 2] dbuf_hold?[zfs]_[k]
  [ 3] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 4] dmu_read_uio_dnode?[zfs]_[k]
  [ 5] dmu_read_uio_dbuf?[zfs]_[k]
  [ 6] zfs_read?[zfs]_[k]
  [ 7] zpl_iter_read?[zfs]_[k]
  [ 8] new_sync_read_[k]
  [ 9] vfs_read_[k]
  [10] __x64_sys_pread64_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] __libc_pread64
  [14] sun.nio.ch.FileDispatcherImpl.pread0
  [15] sun.nio.ch.FileDispatcherImpl.pread
  [16] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [17] sun.nio.ch.IOUtil.read
  [18] sun.nio.ch.IOUtil.read
  [19] sun.nio.ch.FileChannelImpl.readInternal
  [20] sun.nio.ch.FileChannelImpl.read
  [21] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [22] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [23] jdk.nio.zipfs.ZipFileSystem$2.fill
  [24] java.util.zip.InflaterInputStream.read
  [25] java.io.InputStream.readNBytes
  [26] java.io.InputStream.readAllBytes
  [27] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [28] jdk.nio.zipfs.ZipPath.newByteChannel
  [29] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [30] java.nio.file.Files.newByteChannel
  [31] java.nio.file.Files.newByteChannel
  [32] java.nio.file.Files.readAllBytes
  [33] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [34] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [35] cats.effect.IOFiber.$anonfun$8
  [36] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [37] cats.effect.unsafe.WorkerThread.blockOn
  [38] scala.concurrent.package$.blocking
  [39] cats.effect.IOFiber.runLoop
  [40] cats.effect.IOFiber.execR
  [41] cats.effect.IOFiber.run
  [42] cats.effect.unsafe.WorkerThread.run

--- 20014940 ns (0.01%), 2 samples
  [ 0] G1ParCopyClosure<(G1Barrier)0, true>::do_oop(oopDesc**)
  [ 1] InterpreterOopMap::iterate_oop(OffsetClosure*) const
  [ 2] frame::oops_interpreted_do(OopClosure*, RegisterMap const*, bool) const
  [ 3] JavaThread::oops_do_frames(OopClosure*, CodeBlobClosure*) [clone .part.0]
  [ 4] Threads::possibly_parallel_oops_do(bool, OopClosure*, CodeBlobClosure*)
  [ 5] G1RootProcessor::process_java_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int)
  [ 6] G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int)
  [ 7] G1EvacuateRegionsTask::scan_roots(G1ParScanThreadState*, unsigned int)
  [ 8] G1EvacuateRegionsBaseTask::work(unsigned int)
  [ 9] GangWorker::loop()
  [10] GangWorker::run()
  [11] Thread::call_run()
  [12] thread_native_entry(Thread*)
  [13] start_thread

--- 20014356 ns (0.01%), 2 samples
  [ 0] spl_fstrans_mark?[zfs]_[k]
  [ 1] new_sync_read_[k]
  [ 2] vfs_read_[k]
  [ 3] __x64_sys_pread64_[k]
  [ 4] do_syscall_64_[k]
  [ 5] entry_SYSCALL_64_after_hwframe_[k]
  [ 6] __libc_pread64
  [ 7] sun.nio.ch.FileDispatcherImpl.pread0
  [ 8] sun.nio.ch.FileDispatcherImpl.pread
  [ 9] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [10] sun.nio.ch.IOUtil.read
  [11] sun.nio.ch.IOUtil.read
  [12] sun.nio.ch.FileChannelImpl.readInternal
  [13] sun.nio.ch.FileChannelImpl.read
  [14] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [15] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [16] jdk.nio.zipfs.ZipFileSystem$2.fill
  [17] java.util.zip.InflaterInputStream.read
  [18] java.io.InputStream.readNBytes
  [19] java.io.InputStream.readAllBytes
  [20] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [21] jdk.nio.zipfs.ZipPath.newByteChannel
  [22] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [23] java.nio.file.Files.newByteChannel
  [24] java.nio.file.Files.newByteChannel
  [25] java.nio.file.Files.readAllBytes
  [26] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [27] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [28] cats.effect.IOFiber.$anonfun$8
  [29] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [30] cats.effect.unsafe.WorkerThread.blockOn
  [31] scala.concurrent.package$.blocking
  [32] cats.effect.IOFiber.runLoop
  [33] cats.effect.IOFiber.execR
  [34] cats.effect.IOFiber.run
  [35] cats.effect.unsafe.WorkerThread.run

--- 20013776 ns (0.01%), 2 samples
  [ 0] _raw_spin_lock_[k]
  [ 1] check_heap_object_[k]
  [ 2] __check_object_size.part.0_[k]
  [ 3] __check_object_size_[k]
  [ 4] zfs_uiomove_iter?[zfs]_[k]
  [ 5] zfs_uiomove?[zfs]_[k]
  [ 6] dmu_read_uio_dnode?[zfs]_[k]
  [ 7] dmu_read_uio_dbuf?[zfs]_[k]
  [ 8] zfs_read?[zfs]_[k]
  [ 9] zpl_iter_read?[zfs]_[k]
  [10] new_sync_read_[k]
  [11] vfs_read_[k]
  [12] __x64_sys_pread64_[k]
  [13] do_syscall_64_[k]
  [14] entry_SYSCALL_64_after_hwframe_[k]
  [15] __libc_pread64
  [16] sun.nio.ch.FileDispatcherImpl.pread0
  [17] sun.nio.ch.FileDispatcherImpl.pread
  [18] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [19] sun.nio.ch.IOUtil.read
  [20] sun.nio.ch.IOUtil.read
  [21] sun.nio.ch.FileChannelImpl.readInternal
  [22] sun.nio.ch.FileChannelImpl.read
  [23] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [24] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [25] jdk.nio.zipfs.ZipFileSystem$2.fill
  [26] java.util.zip.InflaterInputStream.read
  [27] java.io.InputStream.readNBytes
  [28] java.io.InputStream.readAllBytes
  [29] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [30] jdk.nio.zipfs.ZipPath.newByteChannel
  [31] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [32] java.nio.file.Files.newByteChannel
  [33] java.nio.file.Files.newByteChannel
  [34] java.nio.file.Files.readAllBytes
  [35] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [36] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [37] cats.effect.IOFiber.$anonfun$8
  [38] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [39] cats.effect.unsafe.WorkerThread.blockOn
  [40] scala.concurrent.package$.blocking
  [41] cats.effect.IOFiber.runLoop
  [42] cats.effect.IOFiber.execR
  [43] cats.effect.IOFiber.run
  [44] cats.effect.unsafe.WorkerThread.run

--- 20013617 ns (0.01%), 2 samples
  [ 0] HeapRegionManager::find_contiguous_in_free_list(unsigned int)
  [ 1] HeapRegionManager::allocate_humongous(unsigned int)
  [ 2] G1CollectedHeap::humongous_obj_allocate(unsigned long)
  [ 3] G1CollectedHeap::attempt_allocation_humongous(unsigned long)
  [ 4] MemAllocator::allocate() const
  [ 5] TypeArrayKlass::allocate_common(int, bool, JavaThread*)
  [ 6] JVMCIRuntime::new_array_common(JavaThread*, Klass*, int, bool)
  [ 7] java.io.InputStream.readNBytes
  [ 8] java.io.InputStream.readAllBytes
  [ 9] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [10] jdk.nio.zipfs.ZipPath.newByteChannel
  [11] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [12] java.nio.file.Files.newByteChannel
  [13] java.nio.file.Files.newByteChannel
  [14] java.nio.file.Files.readAllBytes
  [15] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [16] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [17] cats.effect.IOFiber.$anonfun$8
  [18] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [19] cats.effect.unsafe.WorkerThread.blockOn
  [20] scala.concurrent.package$.blocking
  [21] cats.effect.IOFiber.runLoop
  [22] cats.effect.IOFiber.execR
  [23] cats.effect.IOFiber.run
  [24] cats.effect.unsafe.WorkerThread.run

--- 20013556 ns (0.01%), 2 samples
  [ 0] _raw_spin_lock_[k]
  [ 1] rrm_exit?[zfs]_[k]
  [ 2] zfs_read?[zfs]_[k]
  [ 3] zpl_iter_read?[zfs]_[k]
  [ 4] new_sync_read_[k]
  [ 5] vfs_read_[k]
  [ 6] __x64_sys_pread64_[k]
  [ 7] do_syscall_64_[k]
  [ 8] entry_SYSCALL_64_after_hwframe_[k]
  [ 9] __libc_pread64
  [10] sun.nio.ch.FileDispatcherImpl.pread0
  [11] sun.nio.ch.FileDispatcherImpl.pread
  [12] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [13] sun.nio.ch.IOUtil.read
  [14] sun.nio.ch.IOUtil.read
  [15] sun.nio.ch.FileChannelImpl.readInternal
  [16] sun.nio.ch.FileChannelImpl.read
  [17] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [18] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [19] jdk.nio.zipfs.ZipFileSystem$2.fill
  [20] java.util.zip.InflaterInputStream.read
  [21] java.io.InputStream.readNBytes
  [22] java.io.InputStream.readAllBytes
  [23] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [24] jdk.nio.zipfs.ZipPath.newByteChannel
  [25] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [26] java.nio.file.Files.newByteChannel
  [27] java.nio.file.Files.newByteChannel
  [28] java.nio.file.Files.readAllBytes
  [29] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [30] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [31] cats.effect.IOFiber.$anonfun$8
  [32] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [33] cats.effect.unsafe.WorkerThread.blockOn
  [34] scala.concurrent.package$.blocking
  [35] cats.effect.IOFiber.runLoop
  [36] cats.effect.IOFiber.execR
  [37] cats.effect.IOFiber.run
  [38] cats.effect.unsafe.WorkerThread.run

--- 20013487 ns (0.01%), 2 samples
  [ 0] java.nio.Buffer.position
  [ 1] java.nio.ByteBuffer.position
  [ 2] java.nio.MappedByteBuffer.position
  [ 3] java.nio.MappedByteBuffer.position
  [ 4] java.nio.ByteBuffer.put
  [ 5] java.nio.HeapByteBuffer.put
  [ 6] sun.nio.ch.IOUtil.read
  [ 7] sun.nio.ch.IOUtil.read
  [ 8] sun.nio.ch.FileChannelImpl.readInternal
  [ 9] sun.nio.ch.FileChannelImpl.read
  [10] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [11] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [12] jdk.nio.zipfs.ZipFileSystem$2.fill
  [13] java.util.zip.InflaterInputStream.read
  [14] java.io.InputStream.readNBytes
  [15] java.io.InputStream.readAllBytes
  [16] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [17] jdk.nio.zipfs.ZipPath.newByteChannel
  [18] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [19] java.nio.file.Files.newByteChannel
  [20] java.nio.file.Files.newByteChannel
  [21] java.nio.file.Files.readAllBytes
  [22] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [23] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [24] cats.effect.IOFiber.$anonfun$8
  [25] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [26] cats.effect.unsafe.WorkerThread.blockOn
  [27] scala.concurrent.package$.blocking
  [28] cats.effect.IOFiber.runLoop
  [29] cats.effect.IOFiber.execR
  [30] cats.effect.IOFiber.run
  [31] cats.effect.unsafe.WorkerThread.run

--- 20013306 ns (0.01%), 2 samples
  [ 0] list_create.constprop.0?[zfs]_[k]
  [ 1] zio_null?[zfs]_[k]
  [ 2] zio_root?[zfs]_[k]
  [ 3] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 4] dmu_read_uio_dnode?[zfs]_[k]
  [ 5] dmu_read_uio_dbuf?[zfs]_[k]
  [ 6] zfs_read?[zfs]_[k]
  [ 7] zpl_iter_read?[zfs]_[k]
  [ 8] new_sync_read_[k]
  [ 9] vfs_read_[k]
  [10] __x64_sys_pread64_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] __libc_pread64
  [14] sun.nio.ch.FileDispatcherImpl.pread0
  [15] sun.nio.ch.FileDispatcherImpl.pread
  [16] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [17] sun.nio.ch.IOUtil.read
  [18] sun.nio.ch.IOUtil.read
  [19] sun.nio.ch.FileChannelImpl.readInternal
  [20] sun.nio.ch.FileChannelImpl.read
  [21] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [22] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [23] jdk.nio.zipfs.ZipFileSystem$2.fill
  [24] java.util.zip.InflaterInputStream.read
  [25] java.io.InputStream.readNBytes
  [26] java.io.InputStream.readAllBytes
  [27] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [28] jdk.nio.zipfs.ZipPath.newByteChannel
  [29] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [30] java.nio.file.Files.newByteChannel
  [31] java.nio.file.Files.newByteChannel
  [32] java.nio.file.Files.readAllBytes
  [33] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [34] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [35] cats.effect.IOFiber.$anonfun$8
  [36] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [37] cats.effect.unsafe.WorkerThread.blockOn
  [38] scala.concurrent.package$.blocking
  [39] cats.effect.IOFiber.runLoop
  [40] cats.effect.IOFiber.execR
  [41] cats.effect.IOFiber.run
  [42] cats.effect.unsafe.WorkerThread.run

--- 20011422 ns (0.01%), 2 samples
  [ 0] __cv_broadcast?[spl]_[k]
  [ 1] zio_done?[zfs]_[k]
  [ 2] zio_wait?[zfs]_[k]
  [ 3] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 4] dmu_read_uio_dnode?[zfs]_[k]
  [ 5] dmu_read_uio_dbuf?[zfs]_[k]
  [ 6] zfs_read?[zfs]_[k]
  [ 7] zpl_iter_read?[zfs]_[k]
  [ 8] new_sync_read_[k]
  [ 9] vfs_read_[k]
  [10] __x64_sys_pread64_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] __libc_pread64
  [14] sun.nio.ch.FileDispatcherImpl.pread0
  [15] sun.nio.ch.FileDispatcherImpl.pread
  [16] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [17] sun.nio.ch.IOUtil.read
  [18] sun.nio.ch.IOUtil.read
  [19] sun.nio.ch.FileChannelImpl.readInternal
  [20] sun.nio.ch.FileChannelImpl.read
  [21] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [22] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [23] jdk.nio.zipfs.ZipFileSystem$2.fill
  [24] java.util.zip.InflaterInputStream.read
  [25] java.io.InputStream.readNBytes
  [26] java.io.InputStream.readAllBytes
  [27] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [28] jdk.nio.zipfs.ZipPath.newByteChannel
  [29] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [30] java.nio.file.Files.newByteChannel
  [31] java.nio.file.Files.newByteChannel
  [32] java.nio.file.Files.readAllBytes
  [33] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [34] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [35] cats.effect.IOFiber.$anonfun$8
  [36] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [37] cats.effect.unsafe.WorkerThread.blockOn
  [38] scala.concurrent.package$.blocking
  [39] cats.effect.IOFiber.runLoop
  [40] cats.effect.IOFiber.execR
  [41] cats.effect.IOFiber.run
  [42] cats.effect.unsafe.WorkerThread.run

--- 20011401 ns (0.01%), 2 samples
  [ 0] lockref_put_return_[k]
  [ 1] __fsnotify_parent_[k]
  [ 2] fsnotify_perm.part.0_[k]
  [ 3] security_file_permission_[k]
  [ 4] rw_verify_area_[k]
  [ 5] vfs_read_[k]
  [ 6] __x64_sys_pread64_[k]
  [ 7] do_syscall_64_[k]
  [ 8] entry_SYSCALL_64_after_hwframe_[k]
  [ 9] __libc_pread64
  [10] sun.nio.ch.FileDispatcherImpl.pread0
  [11] sun.nio.ch.FileDispatcherImpl.pread
  [12] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [13] sun.nio.ch.IOUtil.read
  [14] sun.nio.ch.IOUtil.read
  [15] sun.nio.ch.FileChannelImpl.readInternal
  [16] sun.nio.ch.FileChannelImpl.read
  [17] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [18] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [19] jdk.nio.zipfs.ZipFileSystem$2.fill
  [20] java.util.zip.InflaterInputStream.read
  [21] java.io.InputStream.readNBytes
  [22] java.io.InputStream.readAllBytes
  [23] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [24] jdk.nio.zipfs.ZipPath.newByteChannel
  [25] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [26] java.nio.file.Files.newByteChannel
  [27] java.nio.file.Files.newByteChannel
  [28] java.nio.file.Files.readAllBytes
  [29] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [30] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [31] cats.effect.IOFiber.$anonfun$8
  [32] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [33] cats.effect.unsafe.WorkerThread.blockOn
  [34] scala.concurrent.package$.blocking
  [35] cats.effect.IOFiber.runLoop
  [36] cats.effect.IOFiber.execR
  [37] cats.effect.IOFiber.run
  [38] cats.effect.unsafe.WorkerThread.run

--- 20011372 ns (0.01%), 2 samples
  [ 0] percpu_counter_add_batch_[k]
  [ 1] wmsum_add?[zfs]_[k]
  [ 2] arc_access?[zfs]_[k]
  [ 3] arc_buf_access?[zfs]_[k]
  [ 4] dbuf_hold_impl?[zfs]_[k]
  [ 5] dbuf_hold_level?[zfs]_[k]
  [ 6] dbuf_hold?[zfs]_[k]
  [ 7] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 8] dmu_read_uio_dnode?[zfs]_[k]
  [ 9] dmu_read_uio_dbuf?[zfs]_[k]
  [10] zfs_read?[zfs]_[k]
  [11] zpl_iter_read?[zfs]_[k]
  [12] new_sync_read_[k]
  [13] vfs_read_[k]
  [14] __x64_sys_pread64_[k]
  [15] do_syscall_64_[k]
  [16] entry_SYSCALL_64_after_hwframe_[k]
  [17] __libc_pread64
  [18] sun.nio.ch.FileDispatcherImpl.pread0
  [19] sun.nio.ch.FileDispatcherImpl.pread
  [20] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [21] sun.nio.ch.IOUtil.read
  [22] sun.nio.ch.IOUtil.read
  [23] sun.nio.ch.FileChannelImpl.readInternal
  [24] sun.nio.ch.FileChannelImpl.read
  [25] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [26] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [27] jdk.nio.zipfs.ZipFileSystem$2.fill
  [28] java.util.zip.InflaterInputStream.read
  [29] java.io.InputStream.readNBytes
  [30] java.io.InputStream.readAllBytes
  [31] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [32] jdk.nio.zipfs.ZipPath.newByteChannel
  [33] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [34] java.nio.file.Files.newByteChannel
  [35] java.nio.file.Files.newByteChannel
  [36] java.nio.file.Files.readAllBytes
  [37] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [38] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [39] cats.effect.IOFiber.$anonfun$8
  [40] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [41] cats.effect.unsafe.WorkerThread.blockOn
  [42] scala.concurrent.package$.blocking
  [43] cats.effect.IOFiber.runLoop
  [44] cats.effect.IOFiber.execR
  [45] cats.effect.IOFiber.run
  [46] cats.effect.unsafe.WorkerThread.run

--- 20011230 ns (0.01%), 2 samples
  [ 0] mutex_unlock_[k]
  [ 1] dbuf_rele?[zfs]_[k]
  [ 2] dmu_buf_rele_array?[zfs]_[k]
  [ 3] dmu_read_uio_dnode?[zfs]_[k]
  [ 4] dmu_read_uio_dbuf?[zfs]_[k]
  [ 5] zfs_read?[zfs]_[k]
  [ 6] zpl_iter_read?[zfs]_[k]
  [ 7] new_sync_read_[k]
  [ 8] vfs_read_[k]
  [ 9] __x64_sys_pread64_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] __libc_pread64
  [13] sun.nio.ch.FileDispatcherImpl.pread0
  [14] sun.nio.ch.FileDispatcherImpl.pread
  [15] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [16] sun.nio.ch.IOUtil.read
  [17] sun.nio.ch.IOUtil.read
  [18] sun.nio.ch.FileChannelImpl.readInternal
  [19] sun.nio.ch.FileChannelImpl.read
  [20] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [21] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [22] jdk.nio.zipfs.ZipFileSystem$2.fill
  [23] java.util.zip.InflaterInputStream.read
  [24] java.io.InputStream.readNBytes
  [25] java.io.InputStream.readAllBytes
  [26] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [27] jdk.nio.zipfs.ZipPath.newByteChannel
  [28] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [29] java.nio.file.Files.newByteChannel
  [30] java.nio.file.Files.newByteChannel
  [31] java.nio.file.Files.readAllBytes
  [32] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [33] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [34] cats.effect.IOFiber.$anonfun$8
  [35] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [36] cats.effect.unsafe.WorkerThread.blockOn
  [37] scala.concurrent.package$.blocking
  [38] cats.effect.IOFiber.runLoop
  [39] cats.effect.IOFiber.execR
  [40] cats.effect.IOFiber.run
  [41] cats.effect.unsafe.WorkerThread.run

--- 20010963 ns (0.01%), 2 samples
  [ 0] fsnotify_[k]
  [ 1] __fsnotify_parent_[k]
  [ 2] vfs_read_[k]
  [ 3] __x64_sys_pread64_[k]
  [ 4] do_syscall_64_[k]
  [ 5] entry_SYSCALL_64_after_hwframe_[k]
  [ 6] __libc_pread64
  [ 7] sun.nio.ch.FileDispatcherImpl.pread0
  [ 8] sun.nio.ch.FileDispatcherImpl.pread
  [ 9] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [10] sun.nio.ch.IOUtil.read
  [11] sun.nio.ch.IOUtil.read
  [12] sun.nio.ch.FileChannelImpl.readInternal
  [13] sun.nio.ch.FileChannelImpl.read
  [14] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [15] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [16] jdk.nio.zipfs.ZipFileSystem$2.fill
  [17] java.util.zip.InflaterInputStream.read
  [18] java.io.InputStream.readNBytes
  [19] java.io.InputStream.readAllBytes
  [20] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [21] jdk.nio.zipfs.ZipPath.newByteChannel
  [22] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [23] java.nio.file.Files.newByteChannel
  [24] java.nio.file.Files.newByteChannel
  [25] java.nio.file.Files.readAllBytes
  [26] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [27] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [28] cats.effect.IOFiber.$anonfun$8
  [29] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [30] cats.effect.unsafe.WorkerThread.blockOn
  [31] scala.concurrent.package$.blocking
  [32] cats.effect.IOFiber.runLoop
  [33] cats.effect.IOFiber.execR
  [34] cats.effect.IOFiber.run
  [35] cats.effect.unsafe.WorkerThread.run

--- 20010961 ns (0.01%), 2 samples
  [ 0] _raw_spin_lock_[k]
  [ 1] zio_ready?[zfs]_[k]
  [ 2] zio_wait?[zfs]_[k]
  [ 3] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 4] dmu_read_uio_dnode?[zfs]_[k]
  [ 5] dmu_read_uio_dbuf?[zfs]_[k]
  [ 6] zfs_read?[zfs]_[k]
  [ 7] zpl_iter_read?[zfs]_[k]
  [ 8] new_sync_read_[k]
  [ 9] vfs_read_[k]
  [10] __x64_sys_pread64_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] __libc_pread64
  [14] sun.nio.ch.FileDispatcherImpl.pread0
  [15] sun.nio.ch.FileDispatcherImpl.pread
  [16] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [17] sun.nio.ch.IOUtil.read
  [18] sun.nio.ch.IOUtil.read
  [19] sun.nio.ch.FileChannelImpl.readInternal
  [20] sun.nio.ch.FileChannelImpl.read
  [21] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [22] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [23] jdk.nio.zipfs.ZipFileSystem$2.fill
  [24] java.util.zip.InflaterInputStream.read
  [25] java.io.InputStream.readNBytes
  [26] java.io.InputStream.readAllBytes
  [27] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [28] jdk.nio.zipfs.ZipPath.newByteChannel
  [29] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [30] java.nio.file.Files.newByteChannel
  [31] java.nio.file.Files.newByteChannel
  [32] java.nio.file.Files.readAllBytes
  [33] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [34] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [35] cats.effect.IOFiber.$anonfun$8
  [36] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [37] cats.effect.unsafe.WorkerThread.blockOn
  [38] scala.concurrent.package$.blocking
  [39] cats.effect.IOFiber.runLoop
  [40] cats.effect.IOFiber.execR
  [41] cats.effect.IOFiber.run
  [42] cats.effect.unsafe.WorkerThread.run

--- 20010330 ns (0.01%), 2 samples
  [ 0] java.util.zip.Inflater.inflate
  [ 1] java.util.zip.InflaterInputStream.read
  [ 2] java.io.InputStream.readNBytes
  [ 3] java.io.InputStream.readAllBytes
  [ 4] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [ 5] jdk.nio.zipfs.ZipPath.newByteChannel
  [ 6] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [ 7] java.nio.file.Files.newByteChannel
  [ 8] java.nio.file.Files.newByteChannel
  [ 9] java.nio.file.Files.readAllBytes
  [10] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [11] com.scalamandra.ZipLib$$anon$1$$Lambda$60.0x0000000800d27048.apply
  [12] cats.effect.IOFiber.$anonfun$8
  [13] cats.effect.IOFiber$$Lambda$145.0x0000000800da0b28.apply
  [14] cats.effect.unsafe.WorkerThread.blockOn
  [15] scala.concurrent.package$.blocking
  [16] cats.effect.IOFiber.runLoop
  [17] cats.effect.IOFiber.execR
  [18] cats.effect.IOFiber.run
  [19] cats.effect.unsafe.WorkerThread.run

          ns  percent  samples  top
  ----------  -------  -------  ---
151705060245   73.60%    15173  /usr/lib/x86_64-linux-gnu/libz.so.1.2.11
  9129925872    4.43%      913  inflate
  8641538393    4.19%      863  __memset_avx2_unaligned_erms
  8110196561    3.93%      810  java.lang.System.arraycopy
  4215763964    2.05%      421  java.util.Arrays.copyOfRange
  2950130857    1.43%      295  java.io.InputStream.readNBytes
  2142618640    1.04%      214  java.lang.StringCoding.hasNegatives
  1982202403    0.96%      197  __memcpy_sse2_unaligned_erms
  1130894526    0.55%      113  copy_user_generic_string_[k]
  1119871384    0.54%      112  __memmove_avx_unaligned_erms
   470031491    0.23%       47  jlong_disjoint_arraycopy
   442572498    0.21%       44  G1ParCopyClosure<(G1Barrier)1, true>::do_oop(oopDesc**)
   280209829    0.14%       28  find_vmap_area_[k]
   270280136    0.13%       27  mutex_lock_[k]
   250193024    0.12%       25  mutex_unlock_[k]
   249918527    0.12%       25  java.util.zip.Inflater.inflateBytesBytes
   240414491    0.12%       24  syscall_enter_from_user_mode_[k]
   230396525    0.11%       23  cats.effect.unsafe.WorkerThread.run
   210309613    0.10%       21  HeapRegionManager::par_iterate(HeapRegionClosure*, HeapRegionClaimer*, unsigned int) const
   210177877    0.10%       21  _raw_spin_lock_[k]
   199938699    0.10%       20  jni_ReleasePrimitiveArrayCritical
   189973210    0.09%       19  jni_GetPrimitiveArrayCritical
   180014481    0.09%       18  java.util.zip.Inflater.inflate
   161031914    0.08%       16  _raw_spin_unlock_irqrestore_[k]
   160202366    0.08%       16  __kmalloc_node_[k]
   140135995    0.07%       14  percpu_counter_add_batch_[k]
   130742033    0.06%       13  G1ParScanThreadState::trim_queue_to_threshold(unsigned int)
   130507854    0.06%       13  void WeakProcessor::Task::work<G1STWIsAliveClosure, G1KeepAliveClosure>(unsigned int, G1STWIsAliveClosure*, G1KeepAliveClosure*)
   120114239    0.06%       12  dmu_buf_hold_array_by_dnode?[zfs]_[k]
   120085776    0.06%       12  spl_mutex_clear_owner?[zfs]_[k]
   110082983    0.05%       11  Java_java_util_zip_Inflater_inflateBytesBytes
   110074588    0.05%       11  zio_create?[zfs]_[k]
   110024222    0.05%       11  checkInflateStatus
   100438849    0.05%       10  ClassLoaderData::ChunkedHandleList::oops_do(OopClosure*)
   100159532    0.05%       10  memset_[k]
   100113465    0.05%       10  kfree_[k]
   100070654    0.05%       10  zio_done?[zfs]_[k]
   100065545    0.05%       10  __cond_resched_[k]
    99995084    0.05%       10  __libc_pread64
    90101294    0.04%        9  kmem_cache_alloc_[k]
    89961165    0.04%        9  java.lang.Thread.blockedOn
    80080411    0.04%        8  G1ParCopyClosure<(G1Barrier)0, true>::do_oop(oopDesc**)
    80041951    0.04%        8  dbuf_rele_and_unlock?[zfs]_[k]
    80012544    0.04%        8  zpl_iter_read?[zfs]_[k]
    70078363    0.03%        7  zrl_add_impl?[zfs]_[k]
    70063066    0.03%        7  kmem_cache_free_[k]
    70053125    0.03%        7  __x86_return_thunk_[k]
    70049329    0.03%        7  cityhash4?[zcommon]_[k]
    60178338    0.03%        6  G1ScanHRForRegionClosure::scan_heap_roots(HeapRegion*)
    60066968    0.03%        6  __list_del_entry?[zfs]_[k]
    60060897    0.03%        6  list_create.constprop.0?[zfs]_[k]
    60055925    0.03%        6  dmu_zfetch_prepare?[zfs]_[k]
    60054825    0.03%        6  zfs_read?[zfs]_[k]
    60050746    0.03%        6  zio_wait?[zfs]_[k]
    60040615    0.03%        6  dbuf_cache_target_bytes?[zfs]_[k]
    60010681    0.03%        6  EconomicMapImpl_findHash_595b1a7030b26791e24407c4bc79ff32adf29a73
    60008419    0.03%        6  __fget_light_[k]
    59996735    0.03%        6  java.util.zip.Inflater.setInput
    59996524    0.03%        6  new_sync_read_[k]
    59914881    0.03%        6  GreyObjectsWalker_walkGreyObjects_eb32754f646620dd6416e9c72990a79fa796f775
    50241619    0.02%        5  G1ParScanThreadState::steal_and_trim_queue(GenericTaskQueueSet<OverflowTaskQueue<ScannerTask, (MEMFLAGS)5, 131072u>, (MEMFLAGS)5>*)
    50193139    0.02%        5  InstanceMirrorKlass::oop_size(oopDesc*) const
    50067222    0.02%        5  zio_inherit_child_errors?[zfs]_[k]
    50051565    0.02%        5  zio_ready?[zfs]_[k]
    50046974    0.02%        5  __cv_broadcast?[spl]_[k]
    50041615    0.02%        5  __fsnotify_parent_[k]
    50029142    0.02%        5  CollectedHeap::supports_object_pinning() const
    50026196    0.02%        5  java.util.ArrayList.add
    50014743    0.02%        5  multilist_get_num_sublists?[zfs]_[k]
    50004042    0.02%        5  __x64_sys_pread64_[k]
    49992181    0.02%        5  java.util.zip.Inflater.needsDictionary
    49969679    0.02%        5  sun.nio.ch.NativeThreadSet.add
    40557735    0.02%        4  [vdso]
    40224142    0.02%        4  G1ParCopyClosure<(G1Barrier)2, true>::do_oop(oopDesc**)
    40202610    0.02%        4  TaskTerminator::offer_termination(TerminatorTerminator*)
    40128466    0.02%        4  nmethod::fix_oop_relocations(unsigned char*, unsigned char*, bool)
    40088710    0.02%        4  __tls_get_addr
    40088205    0.02%        4  G1FromCardCache::clear(unsigned int)
    40072769    0.02%        4  cats.effect.unsafe.ScalQueue.poll
    40067117    0.02%        4  java.time.zone.ZoneRules.getOffsetInfo
    40048002    0.02%        4  apparmor_file_permission_[k]
    40044293    0.02%        4  down_read_[k]
    40038324    0.02%        4  dbuf_cache_multilist_index_func?[zfs]_[k]
    40036530    0.02%        4  read_tsc_[k]
    40035137    0.02%        4  _raw_spin_unlock_[k]
    40032471    0.02%        4  arc_buf_access?[zfs]_[k]
    40024898    0.02%        4  G1DirtyCardQueueSet::num_par_ids()
    40016260    0.02%        4  ControlFlowGraph_identifyBlocks_70bfdd6fbe709d30c1efd3b8b3658b9e029342cd
    40011765    0.02%        4  list_del?[zfs]_[k]
    40010080    0.02%        4  fsnotify_perm.part.0_[k]
    39997386    0.02%        4  JavaFrameAnchor::make_walkable(JavaThread*)
    39963513    0.02%        4  PredicatedProxyNodeIterator_forward_0b274971e4c4bca53c7e0b46d8171c6603300b12
    30338991    0.01%        3  __tls_get_addr_slow
    30303689    0.01%        3  G1RegionMarkStatsCache::reset()
    30279784    0.01%        3  __new_sem_post
    30264508    0.01%        3  ClassLoaderDataGraph::clear_claimed_marks()
    30196455    0.01%        3  futex_hash_[k]
    30171110    0.01%        3  G1CollectionSet::iterate_part_from(HeapRegionClosure*, HeapRegionClaimer*, unsigned long, unsigned long, unsigned int, unsigned int) const [clone .part.0]
    30097241    0.01%        3  nmethod::oops_do(OopClosure*, bool)
    30087986    0.01%        3  Assembler::locate_operand(unsigned char*, Assembler::WhichOperand)
    30065042    0.01%        3  G1PrepareEvacuationTask::G1PrepareRegionsClosure::do_heap_region(HeapRegion*)
    30060751    0.01%        3  java.nio.file.Files.read
    30053315    0.01%        3  dbuf_find?[zfs]_[k]
    30047374    0.01%        3  char* UNICODE::as_utf8<signed char>(signed char const*, int&)
    30046072    0.01%        3  avl_add?[zavl]_[k]
    30044091    0.01%        3  G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*)
    30042767    0.01%        3  spl_kmem_cache_alloc?[spl]_[k]
    30042476    0.01%        3  is_vmalloc_addr_[k]
    30039300    0.01%        3  _copy_to_iter_[k]
    30032808    0.01%        3  scala.concurrent.duration.FiniteDuration.length
    30032467    0.01%        3  spl_kmem_free?[spl]_[k]
    30031845    0.01%        3  spl_kmem_free_impl?[spl]_[k]
    30030545    0.01%        3  arch_atomic64_sub_return.constprop.0?[zfs]_[k]
    30025884    0.01%        3  Node_clone_05c9003c4bba4d6504e96c3125a47cb42636be70
    30024712    0.01%        3  spl_kmem_alloc_impl?[spl]_[k]
    30024193    0.01%        3  HeapRegionManager::find_contiguous_in_free_list(unsigned int)
    30023659    0.01%        3  spl_kmem_cache_free?[spl]_[k]
    30020462    0.01%        3  dbuf_hold?[zfs]_[k]
    30017739    0.01%        3  __list_del?[zfs]_[k]
    30016756    0.01%        3  avl_remove?[zavl]_[k]
    30014434    0.01%        3  list_destroy?[zfs]_[k]
    30013210    0.01%        3  dbuf_hold_impl?[zfs]_[k]
    30013024    0.01%        3  fsnotify_[k]
    30011477    0.01%        3  security_file_permission_[k]
    30010636    0.01%        3  t_byteConjointArraycopy_92a9ef9c8a7edf696eb8eb1b02f64004db085ae9
    30008982    0.01%        3  zio_wait_for_children?[zfs]_[k]
    30005418    0.01%        3  __memcpy_avx_unaligned
    30004032    0.01%        3  ktime_get_raw_ts64_[k]
    30002769    0.01%        3  sun.nio.ch.FileDispatcherImpl.pread0
    30000286    0.01%        3  zio_execute_stack_check.constprop.0?[zfs]_[k]
    30000117    0.01%        3  AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<548964ul, G1BarrierSet>, (AccessInternal::BarrierType)2, 548964ul>::oop_access_barrier(void*)
    29999195    0.01%        3  __cv_destroy?[spl]_[k]
    29998814    0.01%        3  ReversePostOrder_compute_6eb03163e139642196b89ec4098c779a6907c6c2
    29994936    0.01%        3  Fields_copy_22b7b18691c3de8bb25373bf51a5667febcd426a
    29989505    0.01%        3  java.util.zip.Inflater.needsInput
    29988686    0.01%        3  java.nio.Buffer.position
    29985940    0.01%        3  sun.nio.ch.FileChannelImpl.endBlocking
    29983043    0.01%        3  DebugInformationRecorder::find_sharable_decode_offset(int)
    20691442    0.01%        2  clock_gettime@@GLIBC_2.17
    20250303    0.01%        2  com.scalamandra.ZipBench.nioReadAllBytes
    20207334    0.01%        2  jdk.internal.misc.Unsafe.park
    20206590    0.01%        2  com.scalamandra.jmh_generated.ZipBench_nioReadAllBytes_jmhTest.nioReadAllBytes_thrpt_jmhStub
    20188061    0.01%        2  __vfprintf_internal
    20185989    0.01%        2  ___pthread_mutex_lock
    20184777    0.01%        2  CardTableBarrierSet::make_parsable(JavaThread*)
    20178980    0.01%        2  futex_wake_mark_[k]
    20111758    0.01%        2  os::elapsed_counter()
    20110965    0.01%        2  G1ScanCollectionSetRegionClosure::do_heap_region(HeapRegion*)
    20110942    0.01%        2  java.lang.ThreadLocal$ThreadLocalMap.getEntry
    20106556    0.01%        2  __vsnprintf
    20104014    0.01%        2  G1CodeRootSet::contains(nmethod*)
    20100968    0.01%        2  clear_page_rep_[k]
    20089626    0.01%        2  G1RemSet::prepare_region_for_scan(HeapRegion*)
    20089391    0.01%        2  PtrQueueSet::deallocate_buffer(BufferNode*)
    20087716    0.01%        2  RelocIterator::advance_over_prefix()
    20083517    0.01%        2  void OopOopIterateDispatch<G1ScanCardClosure>::Table::oop_oop_iterate<InstanceKlass, narrowOop>(G1ScanCardClosure*, oopDesc*, Klass*)
    20080018    0.01%        2  HeapRegionRemSet::clear_locked(bool)
    20079112    0.01%        2  G1CodeRootSet::clear()
    20077181    0.01%        2  HeapRegionManager::iterate(HeapRegionClosure*) const
    20074625    0.01%        2  __GI___pthread_cond_broadcast
    20071603    0.01%        2  get_timespec64_[k]
    20064813    0.01%        2  G1MergeHeapRootsTask::work(unsigned int)
    20062455    0.01%        2  __GI___pthread_enable_asynccancel
    20045175    0.01%        2  kmem_flags_convert?[spl]_[k]
    20044183    0.01%        2  java.util.zip.InflaterInputStream.<init>
    20040687    0.01%        2  cats.effect.unsafe.WorkerThread.parkLoop$1
    20039162    0.01%        2  wmsum_add?[zfs]_[k]
    20039058    0.01%        2  futex_q_lock_[k]
    20037149    0.01%        2  cats.effect.IOFiber$.TypeBlocking
    20037130    0.01%        2  g1_post_barrier_slow
    20036298    0.01%        2  _Copy_conjoint_jlongs_atomic
    20034756    0.01%        2  jdk.nio.zipfs.ZipConstants.SH
    20034726    0.01%        2  cats.effect.IOFiber.runLoop
    20033764    0.01%        2  JVMCIEnv::create_string(char const*, JVMCIEnv*)
    20033593    0.01%        2  java.nio.charset.Charset.lookup
    20032874    0.01%        2  up_read_[k]
    20031670    0.01%        2  ObjArrayAllocator::initialize(HeapWordImpl**) const
    20028845    0.01%        2  list_head?[zfs]_[k]
    20028454    0.01%        2  I2C/C2I adapters
    20028182    0.01%        2  timespec64_compare?[zfs]_[k]
    20026920    0.01%        2  __rcu_read_unlock_[k]
    20026000    0.01%        2  INIT_LIST_HEAD?[zfs]_[k]
    20025598    0.01%        2  java.util.HashMap.hash
    20024918    0.01%        2  dmu_buf_rele_array?[zfs]_[k]
    20024076    0.01%        2  dbuf_read?[zfs]_[k]
    20022343    0.01%        2  sun.nio.ch.ChannelInputStream.read
    20020968    0.01%        2  ControlFlowGraph_rpoInnerLoopsFirst_d18d07e00a91c2cc6c5e65bd12ba58d572ef7043
    20020930    0.01%        2  dbuf_hold_level?[zfs]_[k]
    20020571    0.01%        2  HeapRegionManager::allocate_free_region(HeapRegionType, unsigned int)
    20020428    0.01%        2  Graph_register_555a98ce7d6e291e9f3ce7e6aa977195b5085fb5
    20019966    0.01%        2  jdk.nio.zipfs.ZipFileSystem$Entry.readExtra
    20019237    0.01%        2  cityhash_helper.constprop.0?[zcommon]_[k]
    20018374    0.01%        2  zfs_rangelock_free?[zfs]_[k]
    20017341    0.01%        2  get_futex_key_[k]
    20016742    0.01%        2  lockref_get_not_zero_[k]
    20016401    0.01%        2  zio_gang_tree_free?[zfs]_[k]
    20015379    0.01%        2  dmu_read_uio_dbuf?[zfs]_[k]
    20014356    0.01%        2  spl_fstrans_mark?[zfs]_[k]
    20013686    0.01%        2  HeapRegion::set_continues_humongous(HeapRegion*)
    20013666    0.01%        2  sun.nio.ch.Util.getTemporaryDirectBuffer
