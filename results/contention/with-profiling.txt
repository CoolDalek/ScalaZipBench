# Detecting actual CPU count: 8 detected
# JMH version: 1.32
# VM version: JDK 17.0.6, Java HotSpot(TM) 64-Bit Server VM, 17.0.6+9-LTS-jvmci-22.3-b11
# VM invoker: /home/rajven/graal/java17/bin/java
# VM options: -XX:ThreadPriorityPolicy=1 -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCIProduct -XX:JVMCIThreadsPerNativeLibraryRuntime=1 -XX:-UnlockExperimentalVMOptions
# Blackhole mode: full + dont-inline hint
# Warmup: 20 iterations, 10 s each
# Measurement: 20 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.scalamandra.ZipBench.fs2ReadAllBytes
# Parameters: (fileName = under64kb.txt)

# Run progress: 0,00% complete, ETA 01:06:40
# Fork: 1 of 1
# Preparing profilers: AsyncProfiler 
Java HotSpot(TM) 64-Bit Server VM warning: -XX:ThreadPriorityPolicy=1 may require system level permission, e.g., being the root user. If the necessary permission is not possessed, changes to priority will be silently ignored.
# Warmup Iteration   1: 1417,923 ops/s
# Warmup Iteration   2: 2166,996 ops/s
# Warmup Iteration   3: 2152,212 ops/s
# Warmup Iteration   4: 1979,556 ops/s
# Warmup Iteration   5: 2127,895 ops/s
# Warmup Iteration   6: 2122,209 ops/s
# Warmup Iteration   7: 2216,070 ops/s
# Warmup Iteration   8: 1996,643 ops/s
# Warmup Iteration   9: 1753,665 ops/s
# Warmup Iteration  10: 2283,997 ops/s
# Warmup Iteration  11: 2320,927 ops/s
# Warmup Iteration  12: 2254,415 ops/s
# Warmup Iteration  13: 2337,828 ops/s
# Warmup Iteration  14: 2358,596 ops/s
# Warmup Iteration  15: 2376,850 ops/s
# Warmup Iteration  16: 2362,310 ops/s
# Warmup Iteration  17: 2396,696 ops/s
# Warmup Iteration  18: 2369,280 ops/s
# Warmup Iteration  19: 2303,663 ops/s
# Warmup Iteration  20: 2276,565 ops/s
Iteration   1: 2293,515 ops/s
Iteration   2: 2282,773 ops/s
Iteration   3: 2340,416 ops/s
Iteration   4: 2285,669 ops/s
Iteration   5: 2349,496 ops/s
Iteration   6: 2319,571 ops/s
Iteration   7: 2317,560 ops/s
Iteration   8: 2336,894 ops/s
Iteration   9: 2355,321 ops/s
Iteration  10: 2291,622 ops/s
Iteration  11: 2325,351 ops/s
Iteration  12: 2315,028 ops/s
Iteration  13: 2309,724 ops/s
Iteration  14: 2284,432 ops/s
Iteration  15: 2278,301 ops/s
Iteration  16: 2318,853 ops/s
Iteration  17: 2355,890 ops/s
Iteration  18: 2344,697 ops/s
Iteration  19: 2359,878 ops/s
Iteration  20: [WARN] Unknown argument: summary
2347,773 ops/s
                 ·async: (text only)

# Processing profiler results: AsyncProfiler 


Result "com.scalamandra.ZipBench.fs2ReadAllBytes":
  2320,638 ±(99.9%) 23,833 ops/s [Average]
  (min, avg, max) = (2278,301, 2320,638, 2359,878), stdev = 27,446
  CI (99.9%): [2296,805, 2344,471] (assumes normal distribution)

Secondary result "com.scalamandra.ZipBench.fs2ReadAllBytes:·async":
--- Execution profile ---
Total samples       : 71148
GC_active           : 33 (0.05%)
unknown_Java        : 290 (0.41%)
deoptimization      : 1 (0.00%)

--- 51797816080 ns (7.26%), 5170 samples
  [ 0] /usr/lib/x86_64-linux-gnu/libz.so.1.2.11
  [ 1] java.util.zip.Inflater.inflateBytesBytes
  [ 2] java.util.zip.Inflater.inflate
  [ 3] java.util.zip.InflaterInputStream.read
  [ 4] java.io.InputStream.transferTo
  [ 5] java.nio.file.Files.copy
  [ 6] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [ 7] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [ 8] jdk.nio.zipfs.ZipPath.newFileChannel
  [ 9] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [10] java.nio.channels.FileChannel.open
  [11] java.nio.channels.FileChannel.open
  [12] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [13] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25440.apply
  [14] cats.effect.IOFiber.$anonfun$8
  [15] cats.effect.IOFiber$$Lambda$291.0x0000000800de1900.apply
  [16] cats.effect.unsafe.WorkerThread.blockOn
  [17] scala.concurrent.package$.blocking
  [18] cats.effect.IOFiber.runLoop
  [19] cats.effect.IOFiber.execR
  [20] cats.effect.IOFiber.run
  [21] cats.effect.unsafe.WorkerThread.run

--- 34415988532 ns (4.83%), 3436 samples
  [ 0] /usr/lib/x86_64-linux-gnu/libz.so.1.2.11
  [ 1] java.util.zip.Inflater.inflateBytesBytes
  [ 2] java.util.zip.Inflater.inflate
  [ 3] java.util.zip.InflaterInputStream.read
  [ 4] java.io.InputStream.transferTo
  [ 5] java.nio.file.Files.copy
  [ 6] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [ 7] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [ 8] jdk.nio.zipfs.ZipPath.newFileChannel
  [ 9] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [10] java.nio.channels.FileChannel.open
  [11] java.nio.channels.FileChannel.open
  [12] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [13] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25440.apply
  [14] cats.effect.IOFiber.$anonfun$8
  [15] cats.effect.IOFiber$$Lambda$291.0x0000000800de1900.apply
  [16] cats.effect.unsafe.WorkerThread.blockOn
  [17] scala.concurrent.package$.blocking
  [18] cats.effect.IOFiber.runLoop
  [19] cats.effect.IOFiber.execR
  [20] cats.effect.IOFiber.run
  [21] cats.effect.unsafe.WorkerThread.run

--- 29485258209 ns (4.13%), 2944 samples
  [ 0] /usr/lib/x86_64-linux-gnu/libz.so.1.2.11
  [ 1] [unknown]
  [ 2] java.util.zip.Inflater.inflateBytesBytes
  [ 3] java.util.zip.Inflater.inflate
  [ 4] java.util.zip.InflaterInputStream.read
  [ 5] java.io.InputStream.transferTo
  [ 6] java.nio.file.Files.copy
  [ 7] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [ 8] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [ 9] jdk.nio.zipfs.ZipPath.newFileChannel
  [10] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [11] java.nio.channels.FileChannel.open
  [12] java.nio.channels.FileChannel.open
  [13] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [14] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25440.apply
  [15] cats.effect.IOFiber.$anonfun$8
  [16] cats.effect.IOFiber$$Lambda$291.0x0000000800de1900.apply
  [17] cats.effect.unsafe.WorkerThread.blockOn
  [18] scala.concurrent.package$.blocking
  [19] cats.effect.IOFiber.runLoop
  [20] cats.effect.IOFiber.execR
  [21] cats.effect.IOFiber.run
  [22] cats.effect.unsafe.WorkerThread.run

--- 20355758815 ns (2.85%), 2033 samples
  [ 0] /usr/lib/x86_64-linux-gnu/libz.so.1.2.11
  [ 1] [unknown]
  [ 2] java.util.zip.Inflater.inflateBytesBytes
  [ 3] java.util.zip.Inflater.inflate
  [ 4] java.util.zip.InflaterInputStream.read
  [ 5] java.io.InputStream.transferTo
  [ 6] java.nio.file.Files.copy
  [ 7] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [ 8] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [ 9] jdk.nio.zipfs.ZipPath.newFileChannel
  [10] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [11] java.nio.channels.FileChannel.open
  [12] java.nio.channels.FileChannel.open
  [13] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [14] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25440.apply
  [15] cats.effect.IOFiber.$anonfun$8
  [16] cats.effect.IOFiber$$Lambda$291.0x0000000800de1900.apply
  [17] cats.effect.unsafe.WorkerThread.blockOn
  [18] scala.concurrent.package$.blocking
  [19] cats.effect.IOFiber.runLoop
  [20] cats.effect.IOFiber.execR
  [21] cats.effect.IOFiber.run
  [22] cats.effect.unsafe.WorkerThread.run

--- 9390054569 ns (1.32%), 937 samples
  [ 0] rwsem_spin_on_owner_[k]
  [ 1] rwsem_optimistic_spin_[k]
  [ 2] rwsem_down_write_slowpath_[k]
  [ 3] down_write_[k]
  [ 4] do_unlinkat_[k]
  [ 5] __x64_sys_unlink_[k]
  [ 6] do_syscall_64_[k]
  [ 7] entry_SYSCALL_64_after_hwframe_[k]
  [ 8] __GI_unlink
  [ 9] sun.nio.fs.UnixNativeDispatcher.unlink0
  [10] sun.nio.fs.UnixNativeDispatcher.unlink
  [11] sun.nio.fs.UnixFileSystemProvider.implDelete
  [12] sun.nio.fs.AbstractFileSystemProvider.deleteIfExists
  [13] java.nio.file.Files.deleteIfExists
  [14] java.nio.file.Files.copy
  [15] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [16] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [17] jdk.nio.zipfs.ZipPath.newFileChannel
  [18] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [19] java.nio.channels.FileChannel.open
  [20] java.nio.channels.FileChannel.open
  [21] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [22] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25440.apply
  [23] cats.effect.IOFiber.$anonfun$8
  [24] cats.effect.IOFiber$$Lambda$291.0x0000000800de1900.apply
  [25] cats.effect.unsafe.WorkerThread.blockOn
  [26] scala.concurrent.package$.blocking
  [27] cats.effect.IOFiber.runLoop
  [28] cats.effect.IOFiber.execR
  [29] cats.effect.IOFiber.run
  [30] cats.effect.unsafe.WorkerThread.run

--- 8294734155 ns (1.16%), 828 samples
  [ 0] rwsem_spin_on_owner_[k]
  [ 1] rwsem_optimistic_spin_[k]
  [ 2] rwsem_down_write_slowpath_[k]
  [ 3] down_write_[k]
  [ 4] open_last_lookups_[k]
  [ 5] path_openat_[k]
  [ 6] do_filp_open_[k]
  [ 7] do_sys_openat2_[k]
  [ 8] __x64_sys_openat_[k]
  [ 9] do_syscall_64_[k]
  [10] entry_SYSCALL_64_after_hwframe_[k]
  [11] __open64
  [12] [unknown]
  [13] sun.nio.fs.UnixNativeDispatcher.open0
  [14] sun.nio.fs.UnixNativeDispatcher.open
  [15] sun.nio.fs.UnixChannelFactory.open
  [16] sun.nio.fs.UnixChannelFactory.newFileChannel
  [17] sun.nio.fs.UnixChannelFactory.newFileChannel
  [18] sun.nio.fs.UnixFileSystemProvider.newByteChannel
  [19] java.nio.file.spi.FileSystemProvider.newOutputStream
  [20] java.nio.file.Files.newOutputStream
  [21] java.nio.file.Files.copy
  [22] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [23] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [24] jdk.nio.zipfs.ZipPath.newFileChannel
  [25] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [26] java.nio.channels.FileChannel.open
  [27] java.nio.channels.FileChannel.open
  [28] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [29] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25440.apply
  [30] cats.effect.IOFiber.$anonfun$8
  [31] cats.effect.IOFiber$$Lambda$291.0x0000000800de1900.apply
  [32] cats.effect.unsafe.WorkerThread.blockOn
  [33] scala.concurrent.package$.blocking
  [34] cats.effect.IOFiber.runLoop
  [35] cats.effect.IOFiber.execR
  [36] cats.effect.IOFiber.run
  [37] cats.effect.unsafe.WorkerThread.run

--- 7794401609 ns (1.09%), 778 samples
  [ 0] rwsem_spin_on_owner_[k]
  [ 1] rwsem_optimistic_spin_[k]
  [ 2] rwsem_down_write_slowpath_[k]
  [ 3] down_write_[k]
  [ 4] open_last_lookups_[k]
  [ 5] path_openat_[k]
  [ 6] do_filp_open_[k]
  [ 7] do_sys_openat2_[k]
  [ 8] __x64_sys_openat_[k]
  [ 9] do_syscall_64_[k]
  [10] entry_SYSCALL_64_after_hwframe_[k]
  [11] __open64
  [12] [unknown]
  [13] sun.nio.fs.UnixNativeDispatcher.open0
  [14] sun.nio.fs.UnixNativeDispatcher.open
  [15] sun.nio.fs.UnixChannelFactory.open
  [16] sun.nio.fs.UnixChannelFactory.newFileChannel
  [17] sun.nio.fs.UnixChannelFactory.newFileChannel
  [18] sun.nio.fs.UnixFileSystemProvider.newByteChannel
  [19] java.nio.file.Files.newByteChannel
  [20] java.nio.file.Files.createFile
  [21] java.nio.file.TempFileHelper.create
  [22] java.nio.file.TempFileHelper.createTempFile
  [23] java.nio.file.Files.createTempFile
  [24] jdk.nio.zipfs.ZipFileSystem.createTempFileInSameDirectoryAs
  [25] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [26] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [27] jdk.nio.zipfs.ZipPath.newFileChannel
  [28] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [29] java.nio.channels.FileChannel.open
  [30] java.nio.channels.FileChannel.open
  [31] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [32] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25440.apply
  [33] cats.effect.IOFiber.$anonfun$8
  [34] cats.effect.IOFiber$$Lambda$291.0x0000000800de1900.apply
  [35] cats.effect.unsafe.WorkerThread.blockOn
  [36] scala.concurrent.package$.blocking
  [37] cats.effect.IOFiber.runLoop
  [38] cats.effect.IOFiber.execR
  [39] cats.effect.IOFiber.run
  [40] cats.effect.unsafe.WorkerThread.run

--- 7447744156 ns (1.04%), 743 samples
  [ 0] _raw_spin_unlock_irqrestore_[k]
  [ 1] __wake_up_common_lock_[k]
  [ 2] __wake_up_[k]
  [ 3] fsnotify_insert_event_[k]
  [ 4] inotify_handle_inode_event_[k]
  [ 5] fsnotify_handle_inode_event.isra.0_[k]
  [ 6] send_to_group_[k]
  [ 7] fsnotify_[k]
  [ 8] __fsnotify_parent_[k]
  [ 9] vfs_write_[k]
  [10] ksys_write_[k]
  [11] __x64_sys_write_[k]
  [12] do_syscall_64_[k]
  [13] entry_SYSCALL_64_after_hwframe_[k]
  [14] write
  [15] sun.nio.ch.FileDispatcherImpl.write0
  [16] sun.nio.ch.FileDispatcherImpl.write
  [17] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.IOUtil.write
  [20] sun.nio.ch.FileChannelImpl.write
  [21] java.nio.channels.Channels.writeFullyImpl
  [22] java.nio.channels.Channels.writeFully
  [23] java.nio.channels.Channels$1.write
  [24] java.io.InputStream.transferTo
  [25] java.nio.file.Files.copy
  [26] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [27] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [28] jdk.nio.zipfs.ZipPath.newFileChannel
  [29] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [30] java.nio.channels.FileChannel.open
  [31] java.nio.channels.FileChannel.open
  [32] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [33] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25440.apply
  [34] cats.effect.IOFiber.$anonfun$8
  [35] cats.effect.IOFiber$$Lambda$291.0x0000000800de1900.apply
  [36] cats.effect.unsafe.WorkerThread.blockOn
  [37] scala.concurrent.package$.blocking
  [38] cats.effect.IOFiber.runLoop
  [39] cats.effect.IOFiber.execR
  [40] cats.effect.IOFiber.run
  [41] cats.effect.unsafe.WorkerThread.run

--- 7215275149 ns (1.01%), 720 samples
  [ 0] rwsem_spin_on_owner_[k]
  [ 1] rwsem_optimistic_spin_[k]
  [ 2] rwsem_down_write_slowpath_[k]
  [ 3] down_write_[k]
  [ 4] do_unlinkat_[k]
  [ 5] __x64_sys_unlink_[k]
  [ 6] do_syscall_64_[k]
  [ 7] entry_SYSCALL_64_after_hwframe_[k]
  [ 8] __GI_unlink
  [ 9] sun.nio.fs.UnixNativeDispatcher.unlink0
  [10] sun.nio.fs.UnixNativeDispatcher.unlink
  [11] sun.nio.fs.UnixFileSystemProvider.implDelete
  [12] sun.nio.fs.AbstractFileSystemProvider.delete
  [13] java.nio.file.Files.delete
  [14] jdk.nio.zipfs.ZipFileSystem.removeTempPathForEntry
  [15] jdk.nio.zipfs.ZipFileSystem$1.implCloseChannel
  [16] java.nio.channels.spi.AbstractInterruptibleChannel.close
  [17] fs2.io.file.FilesCompanionPlatform.openFileChannel$$anonfun$1$$anonfun$1
  [18] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$openFileChannel$$anonfun$1$$anonfun$adapted$1
  [19] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$307.0x0000000800de3370.apply
  [20] cats.effect.IOFiber.$anonfun$8
  [21] cats.effect.IOFiber$$Lambda$291.0x0000000800de1900.apply
  [22] cats.effect.unsafe.WorkerThread.blockOn
  [23] scala.concurrent.package$.blocking
  [24] cats.effect.IOFiber.runLoop
  [25] cats.effect.IOFiber.execR
  [26] cats.effect.IOFiber.run
  [27] cats.effect.unsafe.WorkerThread.run

--- 6716455968 ns (0.94%), 670 samples
  [ 0] memmove_[k]
  [ 1] dnode_set_blksz?[zfs]_[k]
  [ 2] dmu_object_set_blocksize?[zfs]_[k]
  [ 3] zfs_grow_blocksize?[zfs]_[k]
  [ 4] zfs_write?[zfs]_[k]
  [ 5] zpl_iter_write?[zfs]_[k]
  [ 6] new_sync_write_[k]
  [ 7] vfs_write_[k]
  [ 8] ksys_write_[k]
  [ 9] __x64_sys_write_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] write
  [13] sun.nio.ch.FileDispatcherImpl.write0
  [14] sun.nio.ch.FileDispatcherImpl.write
  [15] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [16] sun.nio.ch.IOUtil.write
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.FileChannelImpl.write
  [19] java.nio.channels.Channels.writeFullyImpl
  [20] java.nio.channels.Channels.writeFully
  [21] java.nio.channels.Channels$1.write
  [22] java.io.InputStream.transferTo
  [23] java.nio.file.Files.copy
  [24] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [25] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [26] jdk.nio.zipfs.ZipPath.newFileChannel
  [27] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [28] java.nio.channels.FileChannel.open
  [29] java.nio.channels.FileChannel.open
  [30] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [31] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25440.apply
  [32] cats.effect.IOFiber.$anonfun$8
  [33] cats.effect.IOFiber$$Lambda$291.0x0000000800de1900.apply
  [34] cats.effect.unsafe.WorkerThread.blockOn
  [35] scala.concurrent.package$.blocking
  [36] cats.effect.IOFiber.runLoop
  [37] cats.effect.IOFiber.execR
  [38] cats.effect.IOFiber.run
  [39] cats.effect.unsafe.WorkerThread.run

--- 6452204426 ns (0.90%), 644 samples
  [ 0] rwsem_spin_on_owner_[k]
  [ 1] rwsem_optimistic_spin_[k]
  [ 2] rwsem_down_write_slowpath_[k]
  [ 3] down_write_[k]
  [ 4] do_unlinkat_[k]
  [ 5] __x64_sys_unlink_[k]
  [ 6] do_syscall_64_[k]
  [ 7] entry_SYSCALL_64_after_hwframe_[k]
  [ 8] __GI_unlink
  [ 9] sun.nio.fs.UnixNativeDispatcher.unlink0
  [10] sun.nio.fs.UnixNativeDispatcher.unlink
  [11] sun.nio.fs.UnixFileSystemProvider.implDelete
  [12] sun.nio.fs.AbstractFileSystemProvider.deleteIfExists
  [13] java.nio.file.Files.deleteIfExists
  [14] java.nio.file.Files.copy
  [15] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [16] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [17] jdk.nio.zipfs.ZipPath.newFileChannel
  [18] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [19] java.nio.channels.FileChannel.open
  [20] java.nio.channels.FileChannel.open
  [21] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [22] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25440.apply
  [23] cats.effect.IOFiber.$anonfun$8
  [24] cats.effect.IOFiber$$Lambda$291.0x0000000800de1900.apply
  [25] cats.effect.unsafe.WorkerThread.blockOn
  [26] scala.concurrent.package$.blocking
  [27] cats.effect.IOFiber.runLoop
  [28] cats.effect.IOFiber.execR
  [29] cats.effect.IOFiber.run
  [30] cats.effect.unsafe.WorkerThread.run

--- 6310202627 ns (0.88%), 630 samples
  [ 0] rwsem_spin_on_owner_[k]
  [ 1] rwsem_optimistic_spin_[k]
  [ 2] rwsem_down_write_slowpath_[k]
  [ 3] down_write_[k]
  [ 4] open_last_lookups_[k]
  [ 5] path_openat_[k]
  [ 6] do_filp_open_[k]
  [ 7] do_sys_openat2_[k]
  [ 8] __x64_sys_openat_[k]
  [ 9] do_syscall_64_[k]
  [10] entry_SYSCALL_64_after_hwframe_[k]
  [11] __open64
  [12] [unknown]
  [13] sun.nio.fs.UnixNativeDispatcher.open0
  [14] sun.nio.fs.UnixNativeDispatcher.open
  [15] sun.nio.fs.UnixChannelFactory.open
  [16] sun.nio.fs.UnixChannelFactory.newFileChannel
  [17] sun.nio.fs.UnixChannelFactory.newFileChannel
  [18] sun.nio.fs.UnixFileSystemProvider.newByteChannel
  [19] java.nio.file.spi.FileSystemProvider.newOutputStream
  [20] java.nio.file.Files.newOutputStream
  [21] java.nio.file.Files.copy
  [22] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [23] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [24] jdk.nio.zipfs.ZipPath.newFileChannel
  [25] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [26] java.nio.channels.FileChannel.open
  [27] java.nio.channels.FileChannel.open
  [28] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [29] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25440.apply
  [30] cats.effect.IOFiber.$anonfun$8
  [31] cats.effect.IOFiber$$Lambda$291.0x0000000800de1900.apply
  [32] cats.effect.unsafe.WorkerThread.blockOn
  [33] scala.concurrent.package$.blocking
  [34] cats.effect.IOFiber.runLoop
  [35] cats.effect.IOFiber.execR
  [36] cats.effect.IOFiber.run
  [37] cats.effect.unsafe.WorkerThread.run

--- 5999847488 ns (0.84%), 599 samples
  [ 0] rwsem_spin_on_owner_[k]
  [ 1] rwsem_optimistic_spin_[k]
  [ 2] rwsem_down_write_slowpath_[k]
  [ 3] down_write_[k]
  [ 4] open_last_lookups_[k]
  [ 5] path_openat_[k]
  [ 6] do_filp_open_[k]
  [ 7] do_sys_openat2_[k]
  [ 8] __x64_sys_openat_[k]
  [ 9] do_syscall_64_[k]
  [10] entry_SYSCALL_64_after_hwframe_[k]
  [11] __open64
  [12] [unknown]
  [13] sun.nio.fs.UnixNativeDispatcher.open0
  [14] sun.nio.fs.UnixNativeDispatcher.open
  [15] sun.nio.fs.UnixChannelFactory.open
  [16] sun.nio.fs.UnixChannelFactory.newFileChannel
  [17] sun.nio.fs.UnixChannelFactory.newFileChannel
  [18] sun.nio.fs.UnixFileSystemProvider.newByteChannel
  [19] java.nio.file.Files.newByteChannel
  [20] java.nio.file.Files.createFile
  [21] java.nio.file.TempFileHelper.create
  [22] java.nio.file.TempFileHelper.createTempFile
  [23] java.nio.file.Files.createTempFile
  [24] jdk.nio.zipfs.ZipFileSystem.createTempFileInSameDirectoryAs
  [25] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [26] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [27] jdk.nio.zipfs.ZipPath.newFileChannel
  [28] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [29] java.nio.channels.FileChannel.open
  [30] java.nio.channels.FileChannel.open
  [31] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [32] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25440.apply
  [33] cats.effect.IOFiber.$anonfun$8
  [34] cats.effect.IOFiber$$Lambda$291.0x0000000800de1900.apply
  [35] cats.effect.unsafe.WorkerThread.blockOn
  [36] scala.concurrent.package$.blocking
  [37] cats.effect.IOFiber.runLoop
  [38] cats.effect.IOFiber.execR
  [39] cats.effect.IOFiber.run
  [40] cats.effect.unsafe.WorkerThread.run

--- 5751212533 ns (0.81%), 574 samples
  [ 0] osq_lock_[k]
  [ 1] rwsem_optimistic_spin_[k]
  [ 2] rwsem_down_write_slowpath_[k]
  [ 3] down_write_[k]
  [ 4] do_unlinkat_[k]
  [ 5] __x64_sys_unlink_[k]
  [ 6] do_syscall_64_[k]
  [ 7] entry_SYSCALL_64_after_hwframe_[k]
  [ 8] __GI_unlink
  [ 9] sun.nio.fs.UnixNativeDispatcher.unlink0
  [10] sun.nio.fs.UnixNativeDispatcher.unlink
  [11] sun.nio.fs.UnixFileSystemProvider.implDelete
  [12] sun.nio.fs.AbstractFileSystemProvider.deleteIfExists
  [13] java.nio.file.Files.deleteIfExists
  [14] java.nio.file.Files.copy
  [15] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [16] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [17] jdk.nio.zipfs.ZipPath.newFileChannel
  [18] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [19] java.nio.channels.FileChannel.open
  [20] java.nio.channels.FileChannel.open
  [21] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [22] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25440.apply
  [23] cats.effect.IOFiber.$anonfun$8
  [24] cats.effect.IOFiber$$Lambda$291.0x0000000800de1900.apply
  [25] cats.effect.unsafe.WorkerThread.blockOn
  [26] scala.concurrent.package$.blocking
  [27] cats.effect.IOFiber.runLoop
  [28] cats.effect.IOFiber.execR
  [29] cats.effect.IOFiber.run
  [30] cats.effect.unsafe.WorkerThread.run

--- 5300054736 ns (0.74%), 529 samples
  [ 0] inflate
  [ 1] java.util.zip.Inflater.inflateBytesBytes
  [ 2] java.util.zip.Inflater.inflate
  [ 3] java.util.zip.InflaterInputStream.read
  [ 4] java.io.InputStream.transferTo
  [ 5] java.nio.file.Files.copy
  [ 6] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [ 7] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [ 8] jdk.nio.zipfs.ZipPath.newFileChannel
  [ 9] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [10] java.nio.channels.FileChannel.open
  [11] java.nio.channels.FileChannel.open
  [12] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [13] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25440.apply
  [14] cats.effect.IOFiber.$anonfun$8
  [15] cats.effect.IOFiber$$Lambda$291.0x0000000800de1900.apply
  [16] cats.effect.unsafe.WorkerThread.blockOn
  [17] scala.concurrent.package$.blocking
  [18] cats.effect.IOFiber.runLoop
  [19] cats.effect.IOFiber.execR
  [20] cats.effect.IOFiber.run
  [21] cats.effect.unsafe.WorkerThread.run

--- 5191293262 ns (0.73%), 518 samples
  [ 0] _raw_spin_unlock_irqrestore_[k]
  [ 1] __wake_up_common_lock_[k]
  [ 2] __wake_up_[k]
  [ 3] fsnotify_insert_event_[k]
  [ 4] inotify_handle_inode_event_[k]
  [ 5] fsnotify_handle_inode_event.isra.0_[k]
  [ 6] send_to_group_[k]
  [ 7] fsnotify_[k]
  [ 8] __fsnotify_parent_[k]
  [ 9] vfs_write_[k]
  [10] ksys_write_[k]
  [11] __x64_sys_write_[k]
  [12] do_syscall_64_[k]
  [13] entry_SYSCALL_64_after_hwframe_[k]
  [14] write
  [15] sun.nio.ch.FileDispatcherImpl.write0
  [16] sun.nio.ch.FileDispatcherImpl.write
  [17] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.IOUtil.write
  [20] sun.nio.ch.FileChannelImpl.write
  [21] java.nio.channels.Channels.writeFullyImpl
  [22] java.nio.channels.Channels.writeFully
  [23] java.nio.channels.Channels$1.write
  [24] java.io.InputStream.transferTo
  [25] java.nio.file.Files.copy
  [26] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [27] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [28] jdk.nio.zipfs.ZipPath.newFileChannel
  [29] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [30] java.nio.channels.FileChannel.open
  [31] java.nio.channels.FileChannel.open
  [32] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [33] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25440.apply
  [34] cats.effect.IOFiber.$anonfun$8
  [35] cats.effect.IOFiber$$Lambda$291.0x0000000800de1900.apply
  [36] cats.effect.unsafe.WorkerThread.blockOn
  [37] scala.concurrent.package$.blocking
  [38] cats.effect.IOFiber.runLoop
  [39] cats.effect.IOFiber.execR
  [40] cats.effect.IOFiber.run
  [41] cats.effect.unsafe.WorkerThread.run

--- 4978076306 ns (0.70%), 497 samples
  [ 0] osq_lock_[k]
  [ 1] rwsem_optimistic_spin_[k]
  [ 2] rwsem_down_write_slowpath_[k]
  [ 3] down_write_[k]
  [ 4] open_last_lookups_[k]
  [ 5] path_openat_[k]
  [ 6] do_filp_open_[k]
  [ 7] do_sys_openat2_[k]
  [ 8] __x64_sys_openat_[k]
  [ 9] do_syscall_64_[k]
  [10] entry_SYSCALL_64_after_hwframe_[k]
  [11] __open64
  [12] [unknown]
  [13] sun.nio.fs.UnixNativeDispatcher.open0
  [14] sun.nio.fs.UnixNativeDispatcher.open
  [15] sun.nio.fs.UnixChannelFactory.open
  [16] sun.nio.fs.UnixChannelFactory.newFileChannel
  [17] sun.nio.fs.UnixChannelFactory.newFileChannel
  [18] sun.nio.fs.UnixFileSystemProvider.newByteChannel
  [19] java.nio.file.spi.FileSystemProvider.newOutputStream
  [20] java.nio.file.Files.newOutputStream
  [21] java.nio.file.Files.copy
  [22] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [23] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [24] jdk.nio.zipfs.ZipPath.newFileChannel
  [25] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [26] java.nio.channels.FileChannel.open
  [27] java.nio.channels.FileChannel.open
  [28] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [29] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25440.apply
  [30] cats.effect.IOFiber.$anonfun$8
  [31] cats.effect.IOFiber$$Lambda$291.0x0000000800de1900.apply
  [32] cats.effect.unsafe.WorkerThread.blockOn
  [33] scala.concurrent.package$.blocking
  [34] cats.effect.IOFiber.runLoop
  [35] cats.effect.IOFiber.execR
  [36] cats.effect.IOFiber.run
  [37] cats.effect.unsafe.WorkerThread.run

--- 4828423309 ns (0.68%), 482 samples
  [ 0] osq_lock_[k]
  [ 1] rwsem_optimistic_spin_[k]
  [ 2] rwsem_down_write_slowpath_[k]
  [ 3] down_write_[k]
  [ 4] do_unlinkat_[k]
  [ 5] __x64_sys_unlink_[k]
  [ 6] do_syscall_64_[k]
  [ 7] entry_SYSCALL_64_after_hwframe_[k]
  [ 8] __GI_unlink
  [ 9] sun.nio.fs.UnixNativeDispatcher.unlink0
  [10] sun.nio.fs.UnixNativeDispatcher.unlink
  [11] sun.nio.fs.UnixFileSystemProvider.implDelete
  [12] sun.nio.fs.AbstractFileSystemProvider.deleteIfExists
  [13] java.nio.file.Files.deleteIfExists
  [14] java.nio.file.Files.copy
  [15] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [16] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [17] jdk.nio.zipfs.ZipPath.newFileChannel
  [18] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [19] java.nio.channels.FileChannel.open
  [20] java.nio.channels.FileChannel.open
  [21] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [22] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25440.apply
  [23] cats.effect.IOFiber.$anonfun$8
  [24] cats.effect.IOFiber$$Lambda$291.0x0000000800de1900.apply
  [25] cats.effect.unsafe.WorkerThread.blockOn
  [26] scala.concurrent.package$.blocking
  [27] cats.effect.IOFiber.runLoop
  [28] cats.effect.IOFiber.execR
  [29] cats.effect.IOFiber.run
  [30] cats.effect.unsafe.WorkerThread.run

--- 4738754153 ns (0.66%), 473 samples
  [ 0] rwsem_spin_on_owner_[k]
  [ 1] rwsem_optimistic_spin_[k]
  [ 2] rwsem_down_write_slowpath_[k]
  [ 3] down_write_[k]
  [ 4] do_unlinkat_[k]
  [ 5] __x64_sys_unlink_[k]
  [ 6] do_syscall_64_[k]
  [ 7] entry_SYSCALL_64_after_hwframe_[k]
  [ 8] __GI_unlink
  [ 9] sun.nio.fs.UnixNativeDispatcher.unlink0
  [10] sun.nio.fs.UnixNativeDispatcher.unlink
  [11] sun.nio.fs.UnixFileSystemProvider.implDelete
  [12] sun.nio.fs.AbstractFileSystemProvider.delete
  [13] java.nio.file.Files.delete
  [14] jdk.nio.zipfs.ZipFileSystem.removeTempPathForEntry
  [15] jdk.nio.zipfs.ZipFileSystem$1.implCloseChannel
  [16] java.nio.channels.spi.AbstractInterruptibleChannel.close
  [17] fs2.io.file.FilesCompanionPlatform.openFileChannel$$anonfun$1$$anonfun$1
  [18] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$openFileChannel$$anonfun$1$$anonfun$adapted$1
  [19] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$307.0x0000000800de3370.apply
  [20] cats.effect.IOFiber.$anonfun$8
  [21] cats.effect.IOFiber$$Lambda$291.0x0000000800de1900.apply
  [22] cats.effect.unsafe.WorkerThread.blockOn
  [23] scala.concurrent.package$.blocking
  [24] cats.effect.IOFiber.runLoop
  [25] cats.effect.IOFiber.execR
  [26] cats.effect.IOFiber.run
  [27] cats.effect.unsafe.WorkerThread.run

--- 4289204079 ns (0.60%), 428 samples
  [ 0] memmove_[k]
  [ 1] dnode_set_blksz?[zfs]_[k]
  [ 2] dmu_object_set_blocksize?[zfs]_[k]
  [ 3] zfs_grow_blocksize?[zfs]_[k]
  [ 4] zfs_write?[zfs]_[k]
  [ 5] zpl_iter_write?[zfs]_[k]
  [ 6] new_sync_write_[k]
  [ 7] vfs_write_[k]
  [ 8] ksys_write_[k]
  [ 9] __x64_sys_write_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] write
  [13] sun.nio.ch.FileDispatcherImpl.write0
  [14] sun.nio.ch.FileDispatcherImpl.write
  [15] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [16] sun.nio.ch.IOUtil.write
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.FileChannelImpl.write
  [19] java.nio.channels.Channels.writeFullyImpl
  [20] java.nio.channels.Channels.writeFully
  [21] java.nio.channels.Channels$1.write
  [22] java.io.InputStream.transferTo
  [23] java.nio.file.Files.copy
  [24] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [25] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [26] jdk.nio.zipfs.ZipPath.newFileChannel
  [27] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [28] java.nio.channels.FileChannel.open
  [29] java.nio.channels.FileChannel.open
  [30] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [31] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25440.apply
  [32] cats.effect.IOFiber.$anonfun$8
  [33] cats.effect.IOFiber$$Lambda$291.0x0000000800de1900.apply
  [34] cats.effect.unsafe.WorkerThread.blockOn
  [35] scala.concurrent.package$.blocking
  [36] cats.effect.IOFiber.runLoop
  [37] cats.effect.IOFiber.execR
  [38] cats.effect.IOFiber.run
  [39] cats.effect.unsafe.WorkerThread.run

--- 4025339541 ns (0.56%), 402 samples
  [ 0] osq_lock_[k]
  [ 1] rwsem_optimistic_spin_[k]
  [ 2] rwsem_down_write_slowpath_[k]
  [ 3] down_write_[k]
  [ 4] open_last_lookups_[k]
  [ 5] path_openat_[k]
  [ 6] do_filp_open_[k]
  [ 7] do_sys_openat2_[k]
  [ 8] __x64_sys_openat_[k]
  [ 9] do_syscall_64_[k]
  [10] entry_SYSCALL_64_after_hwframe_[k]
  [11] __open64
  [12] [unknown]
  [13] sun.nio.fs.UnixNativeDispatcher.open0
  [14] sun.nio.fs.UnixNativeDispatcher.open
  [15] sun.nio.fs.UnixChannelFactory.open
  [16] sun.nio.fs.UnixChannelFactory.newFileChannel
  [17] sun.nio.fs.UnixChannelFactory.newFileChannel
  [18] sun.nio.fs.UnixFileSystemProvider.newByteChannel
  [19] java.nio.file.spi.FileSystemProvider.newOutputStream
  [20] java.nio.file.Files.newOutputStream
  [21] java.nio.file.Files.copy
  [22] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [23] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [24] jdk.nio.zipfs.ZipPath.newFileChannel
  [25] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [26] java.nio.channels.FileChannel.open
  [27] java.nio.channels.FileChannel.open
  [28] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [29] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25440.apply
  [30] cats.effect.IOFiber.$anonfun$8
  [31] cats.effect.IOFiber$$Lambda$291.0x0000000800de1900.apply
  [32] cats.effect.unsafe.WorkerThread.blockOn
  [33] scala.concurrent.package$.blocking
  [34] cats.effect.IOFiber.runLoop
  [35] cats.effect.IOFiber.execR
  [36] cats.effect.IOFiber.run
  [37] cats.effect.unsafe.WorkerThread.run

--- 3746599485 ns (0.53%), 374 samples
  [ 0] inflate
  [ 1] java.util.zip.Inflater.inflateBytesBytes
  [ 2] java.util.zip.Inflater.inflate
  [ 3] java.util.zip.InflaterInputStream.read
  [ 4] java.io.InputStream.transferTo
  [ 5] java.nio.file.Files.copy
  [ 6] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [ 7] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [ 8] jdk.nio.zipfs.ZipPath.newFileChannel
  [ 9] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [10] java.nio.channels.FileChannel.open
  [11] java.nio.channels.FileChannel.open
  [12] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [13] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25440.apply
  [14] cats.effect.IOFiber.$anonfun$8
  [15] cats.effect.IOFiber$$Lambda$291.0x0000000800de1900.apply
  [16] cats.effect.unsafe.WorkerThread.blockOn
  [17] scala.concurrent.package$.blocking
  [18] cats.effect.IOFiber.runLoop
  [19] cats.effect.IOFiber.execR
  [20] cats.effect.IOFiber.run
  [21] cats.effect.unsafe.WorkerThread.run

--- 3556214131 ns (0.50%), 355 samples
  [ 0] osq_lock_[k]
  [ 1] rwsem_optimistic_spin_[k]
  [ 2] rwsem_down_write_slowpath_[k]
  [ 3] down_write_[k]
  [ 4] open_last_lookups_[k]
  [ 5] path_openat_[k]
  [ 6] do_filp_open_[k]
  [ 7] do_sys_openat2_[k]
  [ 8] __x64_sys_openat_[k]
  [ 9] do_syscall_64_[k]
  [10] entry_SYSCALL_64_after_hwframe_[k]
  [11] __open64
  [12] [unknown]
  [13] sun.nio.fs.UnixNativeDispatcher.open0
  [14] sun.nio.fs.UnixNativeDispatcher.open
  [15] sun.nio.fs.UnixChannelFactory.open
  [16] sun.nio.fs.UnixChannelFactory.newFileChannel
  [17] sun.nio.fs.UnixChannelFactory.newFileChannel
  [18] sun.nio.fs.UnixFileSystemProvider.newByteChannel
  [19] java.nio.file.Files.newByteChannel
  [20] java.nio.file.Files.createFile
  [21] java.nio.file.TempFileHelper.create
  [22] java.nio.file.TempFileHelper.createTempFile
  [23] java.nio.file.Files.createTempFile
  [24] jdk.nio.zipfs.ZipFileSystem.createTempFileInSameDirectoryAs
  [25] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [26] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [27] jdk.nio.zipfs.ZipPath.newFileChannel
  [28] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [29] java.nio.channels.FileChannel.open
  [30] java.nio.channels.FileChannel.open
  [31] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [32] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25440.apply
  [33] cats.effect.IOFiber.$anonfun$8
  [34] cats.effect.IOFiber$$Lambda$291.0x0000000800de1900.apply
  [35] cats.effect.unsafe.WorkerThread.blockOn
  [36] scala.concurrent.package$.blocking
  [37] cats.effect.IOFiber.runLoop
  [38] cats.effect.IOFiber.execR
  [39] cats.effect.IOFiber.run
  [40] cats.effect.unsafe.WorkerThread.run

--- 3546766569 ns (0.50%), 354 samples
  [ 0] osq_lock_[k]
  [ 1] rwsem_optimistic_spin_[k]
  [ 2] rwsem_down_write_slowpath_[k]
  [ 3] down_write_[k]
  [ 4] do_unlinkat_[k]
  [ 5] __x64_sys_unlink_[k]
  [ 6] do_syscall_64_[k]
  [ 7] entry_SYSCALL_64_after_hwframe_[k]
  [ 8] __GI_unlink
  [ 9] sun.nio.fs.UnixNativeDispatcher.unlink0
  [10] sun.nio.fs.UnixNativeDispatcher.unlink
  [11] sun.nio.fs.UnixFileSystemProvider.implDelete
  [12] sun.nio.fs.AbstractFileSystemProvider.delete
  [13] java.nio.file.Files.delete
  [14] jdk.nio.zipfs.ZipFileSystem.removeTempPathForEntry
  [15] jdk.nio.zipfs.ZipFileSystem$1.implCloseChannel
  [16] java.nio.channels.spi.AbstractInterruptibleChannel.close
  [17] fs2.io.file.FilesCompanionPlatform.openFileChannel$$anonfun$1$$anonfun$1
  [18] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$openFileChannel$$anonfun$1$$anonfun$adapted$1
  [19] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$307.0x0000000800de3370.apply
  [20] cats.effect.IOFiber.$anonfun$8
  [21] cats.effect.IOFiber$$Lambda$291.0x0000000800de1900.apply
  [22] cats.effect.unsafe.WorkerThread.blockOn
  [23] scala.concurrent.package$.blocking
  [24] cats.effect.IOFiber.runLoop
  [25] cats.effect.IOFiber.execR
  [26] cats.effect.IOFiber.run
  [27] cats.effect.unsafe.WorkerThread.run

--- 3545477384 ns (0.50%), 354 samples
  [ 0] osq_lock_[k]
  [ 1] rwsem_optimistic_spin_[k]
  [ 2] rwsem_down_write_slowpath_[k]
  [ 3] down_write_[k]
  [ 4] open_last_lookups_[k]
  [ 5] path_openat_[k]
  [ 6] do_filp_open_[k]
  [ 7] do_sys_openat2_[k]
  [ 8] __x64_sys_openat_[k]
  [ 9] do_syscall_64_[k]
  [10] entry_SYSCALL_64_after_hwframe_[k]
  [11] __open64
  [12] [unknown]
  [13] sun.nio.fs.UnixNativeDispatcher.open0
  [14] sun.nio.fs.UnixNativeDispatcher.open
  [15] sun.nio.fs.UnixChannelFactory.open
  [16] sun.nio.fs.UnixChannelFactory.newFileChannel
  [17] sun.nio.fs.UnixChannelFactory.newFileChannel
  [18] sun.nio.fs.UnixFileSystemProvider.newByteChannel
  [19] java.nio.file.Files.newByteChannel
  [20] java.nio.file.Files.createFile
  [21] java.nio.file.TempFileHelper.create
  [22] java.nio.file.TempFileHelper.createTempFile
  [23] java.nio.file.Files.createTempFile
  [24] jdk.nio.zipfs.ZipFileSystem.createTempFileInSameDirectoryAs
  [25] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [26] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [27] jdk.nio.zipfs.ZipPath.newFileChannel
  [28] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [29] java.nio.channels.FileChannel.open
  [30] java.nio.channels.FileChannel.open
  [31] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [32] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25440.apply
  [33] cats.effect.IOFiber.$anonfun$8
  [34] cats.effect.IOFiber$$Lambda$291.0x0000000800de1900.apply
  [35] cats.effect.unsafe.WorkerThread.blockOn
  [36] scala.concurrent.package$.blocking
  [37] cats.effect.IOFiber.runLoop
  [38] cats.effect.IOFiber.execR
  [39] cats.effect.IOFiber.run
  [40] cats.effect.unsafe.WorkerThread.run

--- 3061233143 ns (0.43%), 305 samples
  [ 0] _raw_spin_unlock_irqrestore_[k]
  [ 1] try_to_wake_up_[k]
  [ 2] wake_up_q_[k]
  [ 3] futex_wake_[k]
  [ 4] do_futex_[k]
  [ 5] __x64_sys_futex_[k]
  [ 6] do_syscall_64_[k]
  [ 7] entry_SYSCALL_64_after_hwframe_[k]
  [ 8] pthread_cond_signal@@GLIBC_2.3.2
  [ 9] jdk.internal.misc.Unsafe.unpark
  [10] java.util.concurrent.locks.LockSupport.unpark
  [11] cats.effect.unsafe.WorkStealingThreadPool.notifyParked
  [12] cats.effect.unsafe.WorkerThread.blockOn
  [13] scala.concurrent.package$.blocking
  [14] cats.effect.IOFiber.runLoop
  [15] cats.effect.IOFiber.execR
  [16] cats.effect.IOFiber.run
  [17] cats.effect.unsafe.WorkerThread.run

--- 2914823858 ns (0.41%), 291 samples
  [ 0] osq_lock_[k]
  [ 1] rwsem_optimistic_spin_[k]
  [ 2] rwsem_down_write_slowpath_[k]
  [ 3] down_write_[k]
  [ 4] do_unlinkat_[k]
  [ 5] __x64_sys_unlink_[k]
  [ 6] do_syscall_64_[k]
  [ 7] entry_SYSCALL_64_after_hwframe_[k]
  [ 8] __GI_unlink
  [ 9] sun.nio.fs.UnixNativeDispatcher.unlink0
  [10] sun.nio.fs.UnixNativeDispatcher.unlink
  [11] sun.nio.fs.UnixFileSystemProvider.implDelete
  [12] sun.nio.fs.AbstractFileSystemProvider.delete
  [13] java.nio.file.Files.delete
  [14] jdk.nio.zipfs.ZipFileSystem.removeTempPathForEntry
  [15] jdk.nio.zipfs.ZipFileSystem$1.implCloseChannel
  [16] java.nio.channels.spi.AbstractInterruptibleChannel.close
  [17] fs2.io.file.FilesCompanionPlatform.openFileChannel$$anonfun$1$$anonfun$1
  [18] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$openFileChannel$$anonfun$1$$anonfun$adapted$1
  [19] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$307.0x0000000800de3370.apply
  [20] cats.effect.IOFiber.$anonfun$8
  [21] cats.effect.IOFiber$$Lambda$291.0x0000000800de1900.apply
  [22] cats.effect.unsafe.WorkerThread.blockOn
  [23] scala.concurrent.package$.blocking
  [24] cats.effect.IOFiber.runLoop
  [25] cats.effect.IOFiber.execR
  [26] cats.effect.IOFiber.run
  [27] cats.effect.unsafe.WorkerThread.run

--- 2175124535 ns (0.30%), 217 samples
  [ 0] find_vmap_area_[k]
  [ 1] check_heap_object_[k]
  [ 2] __check_object_size.part.0_[k]
  [ 3] __check_object_size_[k]
  [ 4] zfs_uiomove_iter?[zfs]_[k]
  [ 5] zfs_uiomove?[zfs]_[k]
  [ 6] dmu_write_uio_dnode?[zfs]_[k]
  [ 7] dmu_write_uio_dbuf?[zfs]_[k]
  [ 8] zfs_write?[zfs]_[k]
  [ 9] zpl_iter_write?[zfs]_[k]
  [10] new_sync_write_[k]
  [11] vfs_write_[k]
  [12] ksys_write_[k]
  [13] __x64_sys_write_[k]
  [14] do_syscall_64_[k]
  [15] entry_SYSCALL_64_after_hwframe_[k]
  [16] write
  [17] sun.nio.ch.FileDispatcherImpl.write0
  [18] sun.nio.ch.FileDispatcherImpl.write
  [19] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [20] sun.nio.ch.IOUtil.write
  [21] sun.nio.ch.IOUtil.write
  [22] sun.nio.ch.FileChannelImpl.write
  [23] java.nio.channels.Channels.writeFullyImpl
  [24] java.nio.channels.Channels.writeFully
  [25] java.nio.channels.Channels$1.write
  [26] java.io.InputStream.transferTo
  [27] java.nio.file.Files.copy
  [28] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [29] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [30] jdk.nio.zipfs.ZipPath.newFileChannel
  [31] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [32] java.nio.channels.FileChannel.open
  [33] java.nio.channels.FileChannel.open
  [34] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [35] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25440.apply
  [36] cats.effect.IOFiber.$anonfun$8
  [37] cats.effect.IOFiber$$Lambda$291.0x0000000800de1900.apply
  [38] cats.effect.unsafe.WorkerThread.blockOn
  [39] scala.concurrent.package$.blocking
  [40] cats.effect.IOFiber.runLoop
  [41] cats.effect.IOFiber.execR
  [42] cats.effect.IOFiber.run
  [43] cats.effect.unsafe.WorkerThread.run

--- 1864643475 ns (0.26%), 186 samples
  [ 0] copy_user_generic_string_[k]
  [ 1] zfs_uiomove_iter?[zfs]_[k]
  [ 2] zfs_uiomove?[zfs]_[k]
  [ 3] dmu_read_uio_dnode?[zfs]_[k]
  [ 4] dmu_read_uio_dbuf?[zfs]_[k]
  [ 5] zfs_read?[zfs]_[k]
  [ 6] zpl_iter_read?[zfs]_[k]
  [ 7] new_sync_read_[k]
  [ 8] vfs_read_[k]
  [ 9] __x64_sys_pread64_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] __libc_pread64
  [13] sun.nio.ch.FileDispatcherImpl.pread0
  [14] sun.nio.ch.FileDispatcherImpl.pread
  [15] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [16] sun.nio.ch.IOUtil.read
  [17] sun.nio.ch.IOUtil.read
  [18] sun.nio.ch.FileChannelImpl.readInternal
  [19] sun.nio.ch.FileChannelImpl.read
  [20] jdk.nio.zipfs.ZipFileSystem$1.read
  [21] fs2.io.file.FileHandleCompanionPlatform$$anon$1.read$$anonfun$1
  [22] fs2.io.file.FileHandleCompanionPlatform$$anon$1$$Lambda$383.0x0000000800dfe068.apply
  [23] cats.effect.IOFiber.$anonfun$8
  [24] cats.effect.IOFiber$$Lambda$291.0x0000000800de1900.apply
  [25] cats.effect.unsafe.WorkerThread.blockOn
  [26] scala.concurrent.package$.blocking
  [27] cats.effect.IOFiber.runLoop
  [28] cats.effect.IOFiber.execR
  [29] cats.effect.IOFiber.run
  [30] cats.effect.unsafe.WorkerThread.run

--- 1743399538 ns (0.24%), 174 samples
  [ 0] __memset_avx2_unaligned_erms
  [ 1] MemAllocator::allocate() const
  [ 2] TypeArrayKlass::allocate_common(int, bool, JavaThread*)
  [ 3] JVMCIRuntime::new_array_common(JavaThread*, Klass*, int, bool)
  [ 4] java.nio.charset.Charset.forName
  [ 5] com.scalamandra.ZipLib$.com$scalamandra$ZipLib$$anon$1$$_$fs2ReadAllBytes$$anonfun$1$$anonfun$1$$anonfun$2$$anonfun$2
  [ 6] com.scalamandra.ZipLib$$anon$1$$Lambda$394.0x0000000800e06000.apply
  [ 7] cats.effect.IOFiber.succeeded
  [ 8] cats.effect.IOFiber.runLoop
  [ 9] cats.effect.IOFiber.execR
  [10] cats.effect.IOFiber.run
  [11] cats.effect.unsafe.WorkerThread.run

--- 1522776492 ns (0.21%), 152 samples
  [ 0] jlong_disjoint_arraycopy
  [ 1] jdk.internal.misc.Unsafe.copyMemory0
  [ 2] jdk.internal.misc.Unsafe.copyMemory
  [ 3] jdk.internal.misc.ScopedMemoryAccess.copyMemoryInternal
  [ 4] jdk.internal.misc.ScopedMemoryAccess.copyMemory
  [ 5] java.nio.ByteBuffer.putBuffer
  [ 6] java.nio.ByteBuffer.put
  [ 7] sun.nio.ch.IOUtil.write
  [ 8] sun.nio.ch.IOUtil.write
  [ 9] sun.nio.ch.FileChannelImpl.write
  [10] java.nio.channels.Channels.writeFullyImpl
  [11] java.nio.channels.Channels.writeFully
  [12] java.nio.channels.Channels$1.write
  [13] java.io.InputStream.transferTo
  [14] java.nio.file.Files.copy
  [15] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [16] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [17] jdk.nio.zipfs.ZipPath.newFileChannel
  [18] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [19] java.nio.channels.FileChannel.open
  [20] java.nio.channels.FileChannel.open
  [21] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [22] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25440.apply
  [23] cats.effect.IOFiber.$anonfun$8
  [24] cats.effect.IOFiber$$Lambda$291.0x0000000800de1900.apply
  [25] cats.effect.unsafe.WorkerThread.blockOn
  [26] scala.concurrent.package$.blocking
  [27] cats.effect.IOFiber.runLoop
  [28] cats.effect.IOFiber.execR
  [29] cats.effect.IOFiber.run
  [30] cats.effect.unsafe.WorkerThread.run

--- 1482889516 ns (0.21%), 148 samples
  [ 0] __memset_avx2_unaligned_erms
  [ 1] MemAllocator::allocate() const
  [ 2] TypeArrayKlass::allocate_common(int, bool, JavaThread*)
  [ 3] JVMCIRuntime::new_array_common(JavaThread*, Klass*, int, bool)
  [ 4] jdk.nio.zipfs.ZipFileSystem.getInflater
  [ 5] jdk.nio.zipfs.ZipFileSystem.getInputStream
  [ 6] jdk.nio.zipfs.ZipFileSystem.newInputStream
  [ 7] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [ 8] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [ 9] jdk.nio.zipfs.ZipPath.newFileChannel
  [10] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [11] java.nio.channels.FileChannel.open
  [12] java.nio.channels.FileChannel.open
  [13] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [14] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25440.apply
  [15] cats.effect.IOFiber.$anonfun$8
  [16] cats.effect.IOFiber$$Lambda$291.0x0000000800de1900.apply
  [17] cats.effect.unsafe.WorkerThread.blockOn
  [18] scala.concurrent.package$.blocking
  [19] cats.effect.IOFiber.runLoop
  [20] cats.effect.IOFiber.execR
  [21] cats.effect.IOFiber.run
  [22] cats.effect.unsafe.WorkerThread.run

--- 1443429407 ns (0.20%), 144 samples
  [ 0] copy_user_generic_string_[k]
  [ 1] zfs_uiomove_iter?[zfs]_[k]
  [ 2] zfs_uiomove?[zfs]_[k]
  [ 3] dmu_write_uio_dnode?[zfs]_[k]
  [ 4] dmu_write_uio_dbuf?[zfs]_[k]
  [ 5] zfs_write?[zfs]_[k]
  [ 6] zpl_iter_write?[zfs]_[k]
  [ 7] new_sync_write_[k]
  [ 8] vfs_write_[k]
  [ 9] ksys_write_[k]
  [10] __x64_sys_write_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] write
  [14] sun.nio.ch.FileDispatcherImpl.write0
  [15] sun.nio.ch.FileDispatcherImpl.write
  [16] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.FileChannelImpl.write
  [20] java.nio.channels.Channels.writeFullyImpl
  [21] java.nio.channels.Channels.writeFully
  [22] java.nio.channels.Channels$1.write
  [23] java.io.InputStream.transferTo
  [24] java.nio.file.Files.copy
  [25] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [26] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [27] jdk.nio.zipfs.ZipPath.newFileChannel
  [28] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [29] java.nio.channels.FileChannel.open
  [30] java.nio.channels.FileChannel.open
  [31] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [32] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25440.apply
  [33] cats.effect.IOFiber.$anonfun$8
  [34] cats.effect.IOFiber$$Lambda$291.0x0000000800de1900.apply
  [35] cats.effect.unsafe.WorkerThread.blockOn
  [36] scala.concurrent.package$.blocking
  [37] cats.effect.IOFiber.runLoop
  [38] cats.effect.IOFiber.execR
  [39] cats.effect.IOFiber.run
  [40] cats.effect.unsafe.WorkerThread.run

--- 1402623316 ns (0.20%), 140 samples
  [ 0] __memmove_avx_unaligned_erms
  [ 1] java.util.zip.Inflater.inflateBytesBytes
  [ 2] java.util.zip.Inflater.inflate
  [ 3] java.util.zip.InflaterInputStream.read
  [ 4] java.io.InputStream.transferTo
  [ 5] java.nio.file.Files.copy
  [ 6] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [ 7] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [ 8] jdk.nio.zipfs.ZipPath.newFileChannel
  [ 9] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [10] java.nio.channels.FileChannel.open
  [11] java.nio.channels.FileChannel.open
  [12] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [13] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25440.apply
  [14] cats.effect.IOFiber.$anonfun$8
  [15] cats.effect.IOFiber$$Lambda$291.0x0000000800de1900.apply
  [16] cats.effect.unsafe.WorkerThread.blockOn
  [17] scala.concurrent.package$.blocking
  [18] cats.effect.IOFiber.runLoop
  [19] cats.effect.IOFiber.execR
  [20] cats.effect.IOFiber.run
  [21] cats.effect.unsafe.WorkerThread.run

--- 1393030065 ns (0.20%), 139 samples
  [ 0] find_vmap_area_[k]
  [ 1] check_heap_object_[k]
  [ 2] __check_object_size.part.0_[k]
  [ 3] __check_object_size_[k]
  [ 4] zfs_uiomove_iter?[zfs]_[k]
  [ 5] zfs_uiomove?[zfs]_[k]
  [ 6] dmu_write_uio_dnode?[zfs]_[k]
  [ 7] dmu_write_uio_dbuf?[zfs]_[k]
  [ 8] zfs_write?[zfs]_[k]
  [ 9] zpl_iter_write?[zfs]_[k]
  [10] new_sync_write_[k]
  [11] vfs_write_[k]
  [12] ksys_write_[k]
  [13] __x64_sys_write_[k]
  [14] do_syscall_64_[k]
  [15] entry_SYSCALL_64_after_hwframe_[k]
  [16] write
  [17] sun.nio.ch.FileDispatcherImpl.write0
  [18] sun.nio.ch.FileDispatcherImpl.write
  [19] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [20] sun.nio.ch.IOUtil.write
  [21] sun.nio.ch.IOUtil.write
  [22] sun.nio.ch.FileChannelImpl.write
  [23] java.nio.channels.Channels.writeFullyImpl
  [24] java.nio.channels.Channels.writeFully
  [25] java.nio.channels.Channels$1.write
  [26] java.io.InputStream.transferTo
  [27] java.nio.file.Files.copy
  [28] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [29] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [30] jdk.nio.zipfs.ZipPath.newFileChannel
  [31] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [32] java.nio.channels.FileChannel.open
  [33] java.nio.channels.FileChannel.open
  [34] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [35] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25440.apply
  [36] cats.effect.IOFiber.$anonfun$8
  [37] cats.effect.IOFiber$$Lambda$291.0x0000000800de1900.apply
  [38] cats.effect.unsafe.WorkerThread.blockOn
  [39] scala.concurrent.package$.blocking
  [40] cats.effect.IOFiber.runLoop
  [41] cats.effect.IOFiber.execR
  [42] cats.effect.IOFiber.run
  [43] cats.effect.unsafe.WorkerThread.run

--- 1382983271 ns (0.19%), 138 samples
  [ 0] refill_stock_[k]
  [ 1] try_charge_memcg_[k]
  [ 2] obj_cgroup_charge_[k]
  [ 3] __kmalloc_[k]
  [ 4] inotify_handle_inode_event_[k]
  [ 5] fsnotify_handle_inode_event.isra.0_[k]
  [ 6] send_to_group_[k]
  [ 7] fsnotify_[k]
  [ 8] __fsnotify_parent_[k]
  [ 9] vfs_write_[k]
  [10] ksys_write_[k]
  [11] __x64_sys_write_[k]
  [12] do_syscall_64_[k]
  [13] entry_SYSCALL_64_after_hwframe_[k]
  [14] write
  [15] sun.nio.ch.FileDispatcherImpl.write0
  [16] sun.nio.ch.FileDispatcherImpl.write
  [17] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.IOUtil.write
  [20] sun.nio.ch.FileChannelImpl.write
  [21] java.nio.channels.Channels.writeFullyImpl
  [22] java.nio.channels.Channels.writeFully
  [23] java.nio.channels.Channels$1.write
  [24] java.io.InputStream.transferTo
  [25] java.nio.file.Files.copy
  [26] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [27] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [28] jdk.nio.zipfs.ZipPath.newFileChannel
  [29] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [30] java.nio.channels.FileChannel.open
  [31] java.nio.channels.FileChannel.open
  [32] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [33] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25440.apply
  [34] cats.effect.IOFiber.$anonfun$8
  [35] cats.effect.IOFiber$$Lambda$291.0x0000000800de1900.apply
  [36] cats.effect.unsafe.WorkerThread.blockOn
  [37] scala.concurrent.package$.blocking
  [38] cats.effect.IOFiber.runLoop
  [39] cats.effect.IOFiber.execR
  [40] cats.effect.IOFiber.run
  [41] cats.effect.unsafe.WorkerThread.run

--- 1312405475 ns (0.18%), 131 samples
  [ 0] java.util.Arrays.copyOfRange
  [ 1] java.lang.String.<init>
  [ 2] java.lang.String.<init>
  [ 3] com.scalamandra.ZipLib$.com$scalamandra$ZipLib$$anon$1$$_$fs2ReadAllBytes$$anonfun$1$$anonfun$1$$anonfun$2$$anonfun$2
  [ 4] com.scalamandra.ZipLib$$anon$1$$Lambda$394.0x0000000800e06000.apply
  [ 5] cats.effect.IOFiber.succeeded
  [ 6] cats.effect.IOFiber.runLoop
  [ 7] cats.effect.IOFiber.execR
  [ 8] cats.effect.IOFiber.run
  [ 9] cats.effect.unsafe.WorkerThread.run

--- 1293390253 ns (0.18%), 129 samples
  [ 0] memset_[k]
  [ 1] dnode_set_blksz?[zfs]_[k]
  [ 2] dmu_object_set_blocksize?[zfs]_[k]
  [ 3] zfs_grow_blocksize?[zfs]_[k]
  [ 4] zfs_write?[zfs]_[k]
  [ 5] zpl_iter_write?[zfs]_[k]
  [ 6] new_sync_write_[k]
  [ 7] vfs_write_[k]
  [ 8] ksys_write_[k]
  [ 9] __x64_sys_write_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] write
  [13] sun.nio.ch.FileDispatcherImpl.write0
  [14] sun.nio.ch.FileDispatcherImpl.write
  [15] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [16] sun.nio.ch.IOUtil.write
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.FileChannelImpl.write
  [19] java.nio.channels.Channels.writeFullyImpl
  [20] java.nio.channels.Channels.writeFully
  [21] java.nio.channels.Channels$1.write
  [22] java.io.InputStream.transferTo
  [23] java.nio.file.Files.copy
  [24] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [25] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [26] jdk.nio.zipfs.ZipPath.newFileChannel
  [27] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [28] java.nio.channels.FileChannel.open
  [29] java.nio.channels.FileChannel.open
  [30] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [31] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25440.apply
  [32] cats.effect.IOFiber.$anonfun$8
  [33] cats.effect.IOFiber$$Lambda$291.0x0000000800de1900.apply
  [34] cats.effect.unsafe.WorkerThread.blockOn
  [35] scala.concurrent.package$.blocking
  [36] cats.effect.IOFiber.runLoop
  [37] cats.effect.IOFiber.execR
  [38] cats.effect.IOFiber.run
  [39] cats.effect.unsafe.WorkerThread.run

--- 1232904965 ns (0.17%), 123 samples
  [ 0] fsnotify_[k]
  [ 1] __fsnotify_parent_[k]
  [ 2] vfs_write_[k]
  [ 3] ksys_write_[k]
  [ 4] __x64_sys_write_[k]
  [ 5] do_syscall_64_[k]
  [ 6] entry_SYSCALL_64_after_hwframe_[k]
  [ 7] write
  [ 8] sun.nio.ch.FileDispatcherImpl.write0
  [ 9] sun.nio.ch.FileDispatcherImpl.write
  [10] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [11] sun.nio.ch.IOUtil.write
  [12] sun.nio.ch.IOUtil.write
  [13] sun.nio.ch.FileChannelImpl.write
  [14] java.nio.channels.Channels.writeFullyImpl
  [15] java.nio.channels.Channels.writeFully
  [16] java.nio.channels.Channels$1.write
  [17] java.io.InputStream.transferTo
  [18] java.nio.file.Files.copy
  [19] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [20] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [21] jdk.nio.zipfs.ZipPath.newFileChannel
  [22] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [23] java.nio.channels.FileChannel.open
  [24] java.nio.channels.FileChannel.open
  [25] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [26] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25440.apply
  [27] cats.effect.IOFiber.$anonfun$8
  [28] cats.effect.IOFiber$$Lambda$291.0x0000000800de1900.apply
  [29] cats.effect.unsafe.WorkerThread.blockOn
  [30] scala.concurrent.package$.blocking
  [31] cats.effect.IOFiber.runLoop
  [32] cats.effect.IOFiber.execR
  [33] cats.effect.IOFiber.run
  [34] cats.effect.unsafe.WorkerThread.run

--- 1212646053 ns (0.17%), 121 samples
  [ 0] _raw_spin_unlock_irqrestore_[k]
  [ 1] __wake_up_common_lock_[k]
  [ 2] __wake_up_[k]
  [ 3] fsnotify_insert_event_[k]
  [ 4] inotify_handle_inode_event_[k]
  [ 5] fsnotify_handle_inode_event.isra.0_[k]
  [ 6] send_to_group_[k]
  [ 7] fsnotify_[k]
  [ 8] vfs_unlink_[k]
  [ 9] do_unlinkat_[k]
  [10] __x64_sys_unlink_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] __GI_unlink
  [14] sun.nio.fs.UnixNativeDispatcher.unlink0
  [15] sun.nio.fs.UnixNativeDispatcher.unlink
  [16] sun.nio.fs.UnixFileSystemProvider.implDelete
  [17] sun.nio.fs.AbstractFileSystemProvider.delete
  [18] java.nio.file.Files.delete
  [19] jdk.nio.zipfs.ZipFileSystem.removeTempPathForEntry
  [20] jdk.nio.zipfs.ZipFileSystem$1.implCloseChannel
  [21] java.nio.channels.spi.AbstractInterruptibleChannel.close
  [22] fs2.io.file.FilesCompanionPlatform.openFileChannel$$anonfun$1$$anonfun$1
  [23] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$openFileChannel$$anonfun$1$$anonfun$adapted$1
  [24] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$307.0x0000000800de3370.apply
  [25] cats.effect.IOFiber.$anonfun$8
  [26] cats.effect.IOFiber$$Lambda$291.0x0000000800de1900.apply
  [27] cats.effect.unsafe.WorkerThread.blockOn
  [28] scala.concurrent.package$.blocking
  [29] cats.effect.IOFiber.runLoop
  [30] cats.effect.IOFiber.execR
  [31] cats.effect.IOFiber.run
  [32] cats.effect.unsafe.WorkerThread.run

--- 1202000722 ns (0.17%), 120 samples
  [ 0] __memset_avx2_unaligned_erms
  [ 1] MemAllocator::allocate() const
  [ 2] TypeArrayKlass::allocate_common(int, bool, JavaThread*)
  [ 3] JVMCIRuntime::new_array_common(JavaThread*, Klass*, int, bool)
  [ 4] fs2.io.file.FileHandleCompanionPlatform$$anon$1.read$$anonfun$1
  [ 5] fs2.io.file.FileHandleCompanionPlatform$$anon$1$$Lambda$383.0x0000000800dfe068.apply
  [ 6] cats.effect.IOFiber.$anonfun$8
  [ 7] cats.effect.IOFiber$$Lambda$291.0x0000000800de1900.apply
  [ 8] cats.effect.unsafe.WorkerThread.blockOn
  [ 9] scala.concurrent.package$.blocking
  [10] cats.effect.IOFiber.runLoop
  [11] cats.effect.IOFiber.execR
  [12] cats.effect.IOFiber.run
  [13] cats.effect.unsafe.WorkerThread.run

--- 1192616038 ns (0.17%), 119 samples
  [ 0] copy_user_generic_string_[k]
  [ 1] zfs_uiomove_iter?[zfs]_[k]
  [ 2] zfs_uiomove?[zfs]_[k]
  [ 3] dmu_read_uio_dnode?[zfs]_[k]
  [ 4] dmu_read_uio_dbuf?[zfs]_[k]
  [ 5] zfs_read?[zfs]_[k]
  [ 6] zpl_iter_read?[zfs]_[k]
  [ 7] new_sync_read_[k]
  [ 8] vfs_read_[k]
  [ 9] __x64_sys_pread64_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] __libc_pread64
  [13] sun.nio.ch.FileDispatcherImpl.pread0
  [14] sun.nio.ch.FileDispatcherImpl.pread
  [15] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [16] sun.nio.ch.IOUtil.read
  [17] sun.nio.ch.IOUtil.read
  [18] sun.nio.ch.FileChannelImpl.readInternal
  [19] sun.nio.ch.FileChannelImpl.read
  [20] jdk.nio.zipfs.ZipFileSystem$1.read
  [21] fs2.io.file.FileHandleCompanionPlatform$$anon$1.read$$anonfun$1
  [22] fs2.io.file.FileHandleCompanionPlatform$$anon$1$$Lambda$383.0x0000000800dfe068.apply
  [23] cats.effect.IOFiber.$anonfun$8
  [24] cats.effect.IOFiber$$Lambda$291.0x0000000800de1900.apply
  [25] cats.effect.unsafe.WorkerThread.blockOn
  [26] scala.concurrent.package$.blocking
  [27] cats.effect.IOFiber.runLoop
  [28] cats.effect.IOFiber.execR
  [29] cats.effect.IOFiber.run
  [30] cats.effect.unsafe.WorkerThread.run

--- 1192517278 ns (0.17%), 119 samples
  [ 0] _raw_spin_unlock_irqrestore_[k]
  [ 1] __wake_up_common_lock_[k]
  [ 2] __wake_up_[k]
  [ 3] fsnotify_insert_event_[k]
  [ 4] inotify_handle_inode_event_[k]
  [ 5] fsnotify_handle_inode_event.isra.0_[k]
  [ 6] send_to_group_[k]
  [ 7] fsnotify_[k]
  [ 8] open_last_lookups_[k]
  [ 9] path_openat_[k]
  [10] do_filp_open_[k]
  [11] do_sys_openat2_[k]
  [12] __x64_sys_openat_[k]
  [13] do_syscall_64_[k]
  [14] entry_SYSCALL_64_after_hwframe_[k]
  [15] __open64
  [16] [unknown]
  [17] sun.nio.fs.UnixNativeDispatcher.open0
  [18] sun.nio.fs.UnixNativeDispatcher.open
  [19] sun.nio.fs.UnixChannelFactory.open
  [20] sun.nio.fs.UnixChannelFactory.newFileChannel
  [21] sun.nio.fs.UnixChannelFactory.newFileChannel
  [22] sun.nio.fs.UnixFileSystemProvider.newByteChannel
  [23] java.nio.file.Files.newByteChannel
  [24] java.nio.file.Files.createFile
  [25] java.nio.file.TempFileHelper.create
  [26] java.nio.file.TempFileHelper.createTempFile
  [27] java.nio.file.Files.createTempFile
  [28] jdk.nio.zipfs.ZipFileSystem.createTempFileInSameDirectoryAs
  [29] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [30] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [31] jdk.nio.zipfs.ZipPath.newFileChannel
  [32] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [33] java.nio.channels.FileChannel.open
  [34] java.nio.channels.FileChannel.open
  [35] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [36] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25440.apply
  [37] cats.effect.IOFiber.$anonfun$8
  [38] cats.effect.IOFiber$$Lambda$291.0x0000000800de1900.apply
  [39] cats.effect.unsafe.WorkerThread.blockOn
  [40] scala.concurrent.package$.blocking
  [41] cats.effect.IOFiber.runLoop
  [42] cats.effect.IOFiber.execR
  [43] cats.effect.IOFiber.run
  [44] cats.effect.unsafe.WorkerThread.run

--- 1152132063 ns (0.16%), 115 samples
  [ 0] __memset_avx2_unaligned_erms
  [ 1] MemAllocator::allocate() const
  [ 2] TypeArrayKlass::allocate_common(int, bool, JavaThread*)
  [ 3] JVMCIRuntime::new_array_common(JavaThread*, Klass*, int, bool)
  [ 4] java.nio.charset.Charset.forName
  [ 5] com.scalamandra.ZipLib$.com$scalamandra$ZipLib$$anon$1$$_$fs2ReadAllBytes$$anonfun$1$$anonfun$1$$anonfun$2$$anonfun$2
  [ 6] com.scalamandra.ZipLib$$anon$1$$Lambda$394.0x0000000800e06000.apply
  [ 7] cats.effect.IOFiber.succeeded
  [ 8] cats.effect.IOFiber.runLoop
  [ 9] cats.effect.IOFiber.execR
  [10] cats.effect.IOFiber.run
  [11] cats.effect.unsafe.WorkerThread.run

--- 1151903476 ns (0.16%), 115 samples
  [ 0] /usr/lib/x86_64-linux-gnu/libz.so.1.2.11
  [ 1] java.util.zip.Inflater.inflateBytesBytes
  [ 2] java.util.zip.Inflater.inflate
  [ 3] java.util.zip.InflaterInputStream.read
  [ 4] java.io.InputStream.transferTo
  [ 5] java.nio.file.Files.copy
  [ 6] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [ 7] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [ 8] jdk.nio.zipfs.ZipPath.newFileChannel
  [ 9] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [10] java.nio.channels.FileChannel.open
  [11] java.nio.channels.FileChannel.open
  [12] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [13] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25440.apply
  [14] cats.effect.IOFiber.$anonfun$8
  [15] cats.effect.IOFiber$$Lambda$291.0x0000000800de1900.apply
  [16] cats.effect.unsafe.WorkerThread.blockOn
  [17] scala.concurrent.package$.blocking
  [18] cats.effect.IOFiber.runLoop
  [19] cats.effect.IOFiber.execR
  [20] cats.effect.IOFiber.run
  [21] cats.effect.unsafe.WorkerThread.run

--- 1101717164 ns (0.15%), 110 samples
  [ 0] __memset_avx2_unaligned_erms
  [ 1] MemAllocator::allocate() const
  [ 2] TypeArrayKlass::allocate_common(int, bool, JavaThread*)
  [ 3] JVMCIRuntime::new_array_common(JavaThread*, Klass*, int, bool)
  [ 4] com.scalamandra.ZipLib$.$anonfun$1
  [ 5] com.scalamandra.ZipLib$$$Lambda$401.0x0000000800e0ccb8.apply
  [ 6] scala.Option.map
  [ 7] com.scalamandra.ZipLib$.com$scalamandra$ZipLib$$anon$1$$_$fs2ReadAllBytes$$anonfun$1$$anonfun$1$$anonfun$2$$anonfun$1
  [ 8] com.scalamandra.ZipLib$$anon$1$$Lambda$391.0x0000000800dfef30.apply
  [ 9] cats.effect.IOFiber.succeeded
  [10] cats.effect.IOFiber.runLoop
  [11] cats.effect.IOFiber.execR
  [12] cats.effect.IOFiber.run
  [13] cats.effect.unsafe.WorkerThread.run

--- 1082716982 ns (0.15%), 108 samples
  [ 0] _raw_spin_unlock_irqrestore_[k]
  [ 1] __wake_up_common_lock_[k]
  [ 2] __wake_up_[k]
  [ 3] fsnotify_insert_event_[k]
  [ 4] inotify_handle_inode_event_[k]
  [ 5] fsnotify_handle_inode_event.isra.0_[k]
  [ 6] send_to_group_[k]
  [ 7] fsnotify_[k]
  [ 8] vfs_unlink_[k]
  [ 9] do_unlinkat_[k]
  [10] __x64_sys_unlink_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] __GI_unlink
  [14] sun.nio.fs.UnixNativeDispatcher.unlink0
  [15] sun.nio.fs.UnixNativeDispatcher.unlink
  [16] sun.nio.fs.UnixFileSystemProvider.implDelete
  [17] sun.nio.fs.AbstractFileSystemProvider.deleteIfExists
  [18] java.nio.file.Files.deleteIfExists
  [19] java.nio.file.Files.copy
  [20] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [21] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [22] jdk.nio.zipfs.ZipPath.newFileChannel
  [23] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [24] java.nio.channels.FileChannel.open
  [25] java.nio.channels.FileChannel.open
  [26] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [27] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25440.apply
  [28] cats.effect.IOFiber.$anonfun$8
  [29] cats.effect.IOFiber$$Lambda$291.0x0000000800de1900.apply
  [30] cats.effect.unsafe.WorkerThread.blockOn
  [31] scala.concurrent.package$.blocking
  [32] cats.effect.IOFiber.runLoop
  [33] cats.effect.IOFiber.execR
  [34] cats.effect.IOFiber.run
  [35] cats.effect.unsafe.WorkerThread.run

--- 1071844927 ns (0.15%), 107 samples
  [ 0] java.lang.System.arraycopy
  [ 1] fs2.Chunk$ArraySlice.copyToArray
  [ 2] fs2.Chunk.toArray
  [ 3] com.scalamandra.ZipLib$.$anonfun$1
  [ 4] com.scalamandra.ZipLib$$$Lambda$401.0x0000000800e0ccb8.apply
  [ 5] scala.Option.map
  [ 6] com.scalamandra.ZipLib$.com$scalamandra$ZipLib$$anon$1$$_$fs2ReadAllBytes$$anonfun$1$$anonfun$1$$anonfun$2$$anonfun$1
  [ 7] com.scalamandra.ZipLib$$anon$1$$Lambda$391.0x0000000800dfef30.apply
  [ 8] cats.effect.IOFiber.succeeded
  [ 9] cats.effect.IOFiber.runLoop
  [10] cats.effect.IOFiber.execR
  [11] cats.effect.IOFiber.run
  [12] cats.effect.unsafe.WorkerThread.run

--- 1022347476 ns (0.14%), 102 samples
  [ 0] refill_obj_stock_[k]
  [ 1] obj_cgroup_charge_[k]
  [ 2] __kmalloc_[k]
  [ 3] inotify_handle_inode_event_[k]
  [ 4] fsnotify_handle_inode_event.isra.0_[k]
  [ 5] send_to_group_[k]
  [ 6] fsnotify_[k]
  [ 7] __fsnotify_parent_[k]
  [ 8] vfs_write_[k]
  [ 9] ksys_write_[k]
  [10] __x64_sys_write_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] write
  [14] sun.nio.ch.FileDispatcherImpl.write0
  [15] sun.nio.ch.FileDispatcherImpl.write
  [16] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.FileChannelImpl.write
  [20] java.nio.channels.Channels.writeFullyImpl
  [21] java.nio.channels.Channels.writeFully
  [22] java.nio.channels.Channels$1.write
  [23] java.io.InputStream.transferTo
  [24] java.nio.file.Files.copy
  [25] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [26] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [27] jdk.nio.zipfs.ZipPath.newFileChannel
  [28] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [29] java.nio.channels.FileChannel.open
  [30] java.nio.channels.FileChannel.open
  [31] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [32] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25440.apply
  [33] cats.effect.IOFiber.$anonfun$8
  [34] cats.effect.IOFiber$$Lambda$291.0x0000000800de1900.apply
  [35] cats.effect.unsafe.WorkerThread.blockOn
  [36] scala.concurrent.package$.blocking
  [37] cats.effect.IOFiber.runLoop
  [38] cats.effect.IOFiber.execR
  [39] cats.effect.IOFiber.run
  [40] cats.effect.unsafe.WorkerThread.run

--- 1002320869 ns (0.14%), 100 samples
  [ 0] send_to_group_[k]
  [ 1] fsnotify_[k]
  [ 2] __fsnotify_parent_[k]
  [ 3] vfs_write_[k]
  [ 4] ksys_write_[k]
  [ 5] __x64_sys_write_[k]
  [ 6] do_syscall_64_[k]
  [ 7] entry_SYSCALL_64_after_hwframe_[k]
  [ 8] write
  [ 9] sun.nio.ch.FileDispatcherImpl.write0
  [10] sun.nio.ch.FileDispatcherImpl.write
  [11] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [12] sun.nio.ch.IOUtil.write
  [13] sun.nio.ch.IOUtil.write
  [14] sun.nio.ch.FileChannelImpl.write
  [15] java.nio.channels.Channels.writeFullyImpl
  [16] java.nio.channels.Channels.writeFully
  [17] java.nio.channels.Channels$1.write
  [18] java.io.InputStream.transferTo
  [19] java.nio.file.Files.copy
  [20] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [21] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [22] jdk.nio.zipfs.ZipPath.newFileChannel
  [23] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [24] java.nio.channels.FileChannel.open
  [25] java.nio.channels.FileChannel.open
  [26] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [27] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25440.apply
  [28] cats.effect.IOFiber.$anonfun$8
  [29] cats.effect.IOFiber$$Lambda$291.0x0000000800de1900.apply
  [30] cats.effect.unsafe.WorkerThread.blockOn
  [31] scala.concurrent.package$.blocking
  [32] cats.effect.IOFiber.runLoop
  [33] cats.effect.IOFiber.execR
  [34] cats.effect.IOFiber.run
  [35] cats.effect.unsafe.WorkerThread.run

--- 1002195179 ns (0.14%), 100 samples
  [ 0] _raw_spin_unlock_irqrestore_[k]
  [ 1] __wake_up_common_lock_[k]
  [ 2] __wake_up_[k]
  [ 3] fsnotify_insert_event_[k]
  [ 4] inotify_handle_inode_event_[k]
  [ 5] fsnotify_handle_inode_event.isra.0_[k]
  [ 6] send_to_group_[k]
  [ 7] fsnotify_[k]
  [ 8] open_last_lookups_[k]
  [ 9] path_openat_[k]
  [10] do_filp_open_[k]
  [11] do_sys_openat2_[k]
  [12] __x64_sys_openat_[k]
  [13] do_syscall_64_[k]
  [14] entry_SYSCALL_64_after_hwframe_[k]
  [15] __open64
  [16] [unknown]
  [17] sun.nio.fs.UnixNativeDispatcher.open0
  [18] sun.nio.fs.UnixNativeDispatcher.open
  [19] sun.nio.fs.UnixChannelFactory.open
  [20] sun.nio.fs.UnixChannelFactory.newFileChannel
  [21] sun.nio.fs.UnixChannelFactory.newFileChannel
  [22] sun.nio.fs.UnixFileSystemProvider.newByteChannel
  [23] java.nio.file.spi.FileSystemProvider.newOutputStream
  [24] java.nio.file.Files.newOutputStream
  [25] java.nio.file.Files.copy
  [26] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [27] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [28] jdk.nio.zipfs.ZipPath.newFileChannel
  [29] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [30] java.nio.channels.FileChannel.open
  [31] java.nio.channels.FileChannel.open
  [32] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [33] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25440.apply
  [34] cats.effect.IOFiber.$anonfun$8
  [35] cats.effect.IOFiber$$Lambda$291.0x0000000800de1900.apply
  [36] cats.effect.unsafe.WorkerThread.blockOn
  [37] scala.concurrent.package$.blocking
  [38] cats.effect.IOFiber.runLoop
  [39] cats.effect.IOFiber.execR
  [40] cats.effect.IOFiber.run
  [41] cats.effect.unsafe.WorkerThread.run

--- 991803564 ns (0.14%), 99 samples
  [ 0] jbyte_disjoint_arraycopy
  [ 1] jdk.internal.misc.Unsafe.copyMemory0
  [ 2] jdk.internal.misc.Unsafe.copyMemory
  [ 3] jdk.internal.misc.ScopedMemoryAccess.copyMemoryInternal
  [ 4] jdk.internal.misc.ScopedMemoryAccess.copyMemory
  [ 5] java.nio.ByteBuffer.putBuffer
  [ 6] java.nio.ByteBuffer.put
  [ 7] java.nio.HeapByteBuffer.put
  [ 8] sun.nio.ch.IOUtil.read
  [ 9] sun.nio.ch.IOUtil.read
  [10] sun.nio.ch.FileChannelImpl.readInternal
  [11] sun.nio.ch.FileChannelImpl.read
  [12] jdk.nio.zipfs.ZipFileSystem$1.read
  [13] fs2.io.file.FileHandleCompanionPlatform$$anon$1.read$$anonfun$1
  [14] fs2.io.file.FileHandleCompanionPlatform$$anon$1$$Lambda$383.0x0000000800dfe068.apply
  [15] cats.effect.IOFiber.$anonfun$8
  [16] cats.effect.IOFiber$$Lambda$291.0x0000000800de1900.apply
  [17] cats.effect.unsafe.WorkerThread.blockOn
  [18] scala.concurrent.package$.blocking
  [19] cats.effect.IOFiber.runLoop
  [20] cats.effect.IOFiber.execR
  [21] cats.effect.IOFiber.run
  [22] cats.effect.unsafe.WorkerThread.run

--- 981368722 ns (0.14%), 98 samples
  [ 0] __memset_avx2_unaligned_erms
  [ 1] MemAllocator::allocate() const
  [ 2] TypeArrayKlass::allocate_common(int, bool, JavaThread*)
  [ 3] JVMCIRuntime::new_array_common(JavaThread*, Klass*, int, bool)
  [ 4] fs2.io.file.FileHandleCompanionPlatform$$anon$1.read$$anonfun$1
  [ 5] fs2.io.file.FileHandleCompanionPlatform$$anon$1$$Lambda$383.0x0000000800dfe068.apply
  [ 6] cats.effect.IOFiber.$anonfun$8
  [ 7] cats.effect.IOFiber$$Lambda$291.0x0000000800de1900.apply
  [ 8] cats.effect.unsafe.WorkerThread.blockOn
  [ 9] scala.concurrent.package$.blocking
  [10] cats.effect.IOFiber.runLoop
  [11] cats.effect.IOFiber.execR
  [12] cats.effect.IOFiber.run
  [13] cats.effect.unsafe.WorkerThread.run

--- 951354735 ns (0.13%), 95 samples
  [ 0] __memmove_avx_unaligned_erms
  [ 1] java.util.zip.Inflater.inflateBytesBytes
  [ 2] java.util.zip.Inflater.inflate
  [ 3] java.util.zip.InflaterInputStream.read
  [ 4] java.io.InputStream.transferTo
  [ 5] java.nio.file.Files.copy
  [ 6] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [ 7] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [ 8] jdk.nio.zipfs.ZipPath.newFileChannel
  [ 9] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [10] java.nio.channels.FileChannel.open
  [11] java.nio.channels.FileChannel.open
  [12] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [13] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25440.apply
  [14] cats.effect.IOFiber.$anonfun$8
  [15] cats.effect.IOFiber$$Lambda$291.0x0000000800de1900.apply
  [16] cats.effect.unsafe.WorkerThread.blockOn
  [17] scala.concurrent.package$.blocking
  [18] cats.effect.IOFiber.runLoop
  [19] cats.effect.IOFiber.execR
  [20] cats.effect.IOFiber.run
  [21] cats.effect.unsafe.WorkerThread.run

--- 932070345 ns (0.13%), 93 samples
  [ 0] memset_[k]
  [ 1] dnode_set_blksz?[zfs]_[k]
  [ 2] dmu_object_set_blocksize?[zfs]_[k]
  [ 3] zfs_grow_blocksize?[zfs]_[k]
  [ 4] zfs_write?[zfs]_[k]
  [ 5] zpl_iter_write?[zfs]_[k]
  [ 6] new_sync_write_[k]
  [ 7] vfs_write_[k]
  [ 8] ksys_write_[k]
  [ 9] __x64_sys_write_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] write
  [13] sun.nio.ch.FileDispatcherImpl.write0
  [14] sun.nio.ch.FileDispatcherImpl.write
  [15] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [16] sun.nio.ch.IOUtil.write
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.FileChannelImpl.write
  [19] java.nio.channels.Channels.writeFullyImpl
  [20] java.nio.channels.Channels.writeFully
  [21] java.nio.channels.Channels$1.write
  [22] java.io.InputStream.transferTo
  [23] java.nio.file.Files.copy
  [24] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [25] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [26] jdk.nio.zipfs.ZipPath.newFileChannel
  [27] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [28] java.nio.channels.FileChannel.open
  [29] java.nio.channels.FileChannel.open
  [30] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [31] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25440.apply
  [32] cats.effect.IOFiber.$anonfun$8
  [33] cats.effect.IOFiber$$Lambda$291.0x0000000800de1900.apply
  [34] cats.effect.unsafe.WorkerThread.blockOn
  [35] scala.concurrent.package$.blocking
  [36] cats.effect.IOFiber.runLoop
  [37] cats.effect.IOFiber.execR
  [38] cats.effect.IOFiber.run
  [39] cats.effect.unsafe.WorkerThread.run

--- 922015147 ns (0.13%), 92 samples
  [ 0] copy_user_generic_string_[k]
  [ 1] zfs_uiomove_iter?[zfs]_[k]
  [ 2] zfs_uiomove?[zfs]_[k]
  [ 3] dmu_write_uio_dnode?[zfs]_[k]
  [ 4] dmu_write_uio_dbuf?[zfs]_[k]
  [ 5] zfs_write?[zfs]_[k]
  [ 6] zpl_iter_write?[zfs]_[k]
  [ 7] new_sync_write_[k]
  [ 8] vfs_write_[k]
  [ 9] ksys_write_[k]
  [10] __x64_sys_write_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] write
  [14] sun.nio.ch.FileDispatcherImpl.write0
  [15] sun.nio.ch.FileDispatcherImpl.write
  [16] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.FileChannelImpl.write
  [20] java.nio.channels.Channels.writeFullyImpl
  [21] java.nio.channels.Channels.writeFully
  [22] java.nio.channels.Channels$1.write
  [23] java.io.InputStream.transferTo
  [24] java.nio.file.Files.copy
  [25] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [26] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [27] jdk.nio.zipfs.ZipPath.newFileChannel
  [28] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [29] java.nio.channels.FileChannel.open
  [30] java.nio.channels.FileChannel.open
  [31] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [32] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25440.apply
  [33] cats.effect.IOFiber.$anonfun$8
  [34] cats.effect.IOFiber$$Lambda$291.0x0000000800de1900.apply
  [35] cats.effect.unsafe.WorkerThread.blockOn
  [36] scala.concurrent.package$.blocking
  [37] cats.effect.IOFiber.runLoop
  [38] cats.effect.IOFiber.execR
  [39] cats.effect.IOFiber.run
  [40] cats.effect.unsafe.WorkerThread.run

--- 921791501 ns (0.13%), 92 samples
  [ 0] refill_stock_[k]
  [ 1] try_charge_memcg_[k]
  [ 2] obj_cgroup_charge_[k]
  [ 3] __kmalloc_[k]
  [ 4] inotify_handle_inode_event_[k]
  [ 5] fsnotify_handle_inode_event.isra.0_[k]
  [ 6] send_to_group_[k]
  [ 7] fsnotify_[k]
  [ 8] __fsnotify_parent_[k]
  [ 9] vfs_write_[k]
  [10] ksys_write_[k]
  [11] __x64_sys_write_[k]
  [12] do_syscall_64_[k]
  [13] entry_SYSCALL_64_after_hwframe_[k]
  [14] write
  [15] sun.nio.ch.FileDispatcherImpl.write0
  [16] sun.nio.ch.FileDispatcherImpl.write
  [17] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.IOUtil.write
  [20] sun.nio.ch.FileChannelImpl.write
  [21] java.nio.channels.Channels.writeFullyImpl
  [22] java.nio.channels.Channels.writeFully
  [23] java.nio.channels.Channels$1.write
  [24] java.io.InputStream.transferTo
  [25] java.nio.file.Files.copy
  [26] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [27] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [28] jdk.nio.zipfs.ZipPath.newFileChannel
  [29] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [30] java.nio.channels.FileChannel.open
  [31] java.nio.channels.FileChannel.open
  [32] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [33] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25440.apply
  [34] cats.effect.IOFiber.$anonfun$8
  [35] cats.effect.IOFiber$$Lambda$291.0x0000000800de1900.apply
  [36] cats.effect.unsafe.WorkerThread.blockOn
  [37] scala.concurrent.package$.blocking
  [38] cats.effect.IOFiber.runLoop
  [39] cats.effect.IOFiber.execR
  [40] cats.effect.IOFiber.run
  [41] cats.effect.unsafe.WorkerThread.run

--- 921198530 ns (0.13%), 92 samples
  [ 0] __memset_avx2_unaligned_erms
  [ 1] MemAllocator::allocate() const
  [ 2] TypeArrayKlass::allocate_common(int, bool, JavaThread*)
  [ 3] JVMCIRuntime::new_array_common(JavaThread*, Klass*, int, bool)
  [ 4] com.scalamandra.ZipLib$.$anonfun$1
  [ 5] com.scalamandra.ZipLib$$$Lambda$401.0x0000000800e0ccb8.apply
  [ 6] scala.Option.map
  [ 7] com.scalamandra.ZipLib$.com$scalamandra$ZipLib$$anon$1$$_$fs2ReadAllBytes$$anonfun$1$$anonfun$1$$anonfun$2$$anonfun$1
  [ 8] com.scalamandra.ZipLib$$anon$1$$Lambda$391.0x0000000800dfef30.apply
  [ 9] cats.effect.IOFiber.succeeded
  [10] cats.effect.IOFiber.runLoop
  [11] cats.effect.IOFiber.execR
  [12] cats.effect.IOFiber.run
  [13] cats.effect.unsafe.WorkerThread.run

--- 901997968 ns (0.13%), 90 samples
  [ 0] fsnotify_[k]
  [ 1] __fsnotify_parent_[k]
  [ 2] vfs_write_[k]
  [ 3] ksys_write_[k]
  [ 4] __x64_sys_write_[k]
  [ 5] do_syscall_64_[k]
  [ 6] entry_SYSCALL_64_after_hwframe_[k]
  [ 7] write
  [ 8] sun.nio.ch.FileDispatcherImpl.write0
  [ 9] sun.nio.ch.FileDispatcherImpl.write
  [10] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [11] sun.nio.ch.IOUtil.write
  [12] sun.nio.ch.IOUtil.write
  [13] sun.nio.ch.FileChannelImpl.write
  [14] java.nio.channels.Channels.writeFullyImpl
  [15] java.nio.channels.Channels.writeFully
  [16] java.nio.channels.Channels$1.write
  [17] java.io.InputStream.transferTo
  [18] java.nio.file.Files.copy
  [19] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [20] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [21] jdk.nio.zipfs.ZipPath.newFileChannel
  [22] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [23] java.nio.channels.FileChannel.open
  [24] java.nio.channels.FileChannel.open
  [25] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [26] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25440.apply
  [27] cats.effect.IOFiber.$anonfun$8
  [28] cats.effect.IOFiber$$Lambda$291.0x0000000800de1900.apply
  [29] cats.effect.unsafe.WorkerThread.blockOn
  [30] scala.concurrent.package$.blocking
  [31] cats.effect.IOFiber.runLoop
  [32] cats.effect.IOFiber.execR
  [33] cats.effect.IOFiber.run
  [34] cats.effect.unsafe.WorkerThread.run

--- 901513466 ns (0.13%), 90 samples
  [ 0] __memset_avx2_unaligned_erms
  [ 1] MemAllocator::allocate() const
  [ 2] TypeArrayKlass::allocate_common(int, bool, JavaThread*)
  [ 3] JVMCIRuntime::new_array_common(JavaThread*, Klass*, int, bool)
  [ 4] jdk.nio.zipfs.ZipFileSystem.getInflater
  [ 5] jdk.nio.zipfs.ZipFileSystem.getInputStream
  [ 6] jdk.nio.zipfs.ZipFileSystem.newInputStream
  [ 7] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [ 8] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [ 9] jdk.nio.zipfs.ZipPath.newFileChannel
  [10] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [11] java.nio.channels.FileChannel.open
  [12] java.nio.channels.FileChannel.open
  [13] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [14] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25440.apply
  [15] cats.effect.IOFiber.$anonfun$8
  [16] cats.effect.IOFiber$$Lambda$291.0x0000000800de1900.apply
  [17] cats.effect.unsafe.WorkerThread.blockOn
  [18] scala.concurrent.package$.blocking
  [19] cats.effect.IOFiber.runLoop
  [20] cats.effect.IOFiber.execR
  [21] cats.effect.IOFiber.run
  [22] cats.effect.unsafe.WorkerThread.run

--- 842082322 ns (0.12%), 84 samples
  [ 0] _raw_spin_unlock_irqrestore_[k]
  [ 1] try_to_wake_up_[k]
  [ 2] wake_up_q_[k]
  [ 3] futex_wake_[k]
  [ 4] do_futex_[k]
  [ 5] __x64_sys_futex_[k]
  [ 6] do_syscall_64_[k]
  [ 7] entry_SYSCALL_64_after_hwframe_[k]
  [ 8] pthread_cond_signal@@GLIBC_2.3.2
  [ 9] jdk.internal.misc.Unsafe.unpark
  [10] java.util.concurrent.locks.LockSupport.unpark
  [11] java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext
  [12] java.util.concurrent.locks.AbstractQueuedSynchronizer.release
  [13] java.util.concurrent.locks.ReentrantLock.unlock
  [14] java.util.concurrent.ArrayBlockingQueue.offer
  [15] cats.effect.IOPlatform.unsafeRunTimed$$anonfun$1
  [16] cats.effect.IOPlatform$$Lambda$231.0x0000000800dcea18.applyVoid
  [17] scala.runtime.function.JProcedure1.apply
  [18] scala.runtime.function.JProcedure1.apply
  [19] cats.effect.IO.unsafeRunAsync$$anonfun$3
  [20] cats.effect.IO$$Lambda$249.0x0000000800dd1830.applyVoid
  [21] scala.runtime.function.JProcedure1.apply
  [22] scala.runtime.function.JProcedure1.apply
  [23] cats.effect.IO.$anonfun$6$$anonfun$3
  [24] cats.effect.IO$$Lambda$432.0x0000000800e16408.applyVoid
  [25] scala.runtime.function.JProcedure1.apply
  [26] scala.runtime.function.JProcedure1.apply
  [27] cats.effect.kernel.Outcome.fold
  [28] cats.effect.kernel.Outcome.fold$
  [29] cats.effect.kernel.Outcome$Succeeded.fold
  [30] cats.effect.IO.$anonfun$6
  [31] cats.effect.IO$$Lambda$260.0x0000000800dd5650.applyVoid
  [32] scala.runtime.function.JProcedure1.apply
  [33] scala.runtime.function.JProcedure1.apply
  [34] cats.effect.CallbackStack.apply
  [35] cats.effect.IOFiber.done
  [36] cats.effect.IOFiber.runTerminusSuccessK
  [37] cats.effect.IOFiber.succeeded
  [38] cats.effect.IOFiber.runLoop
  [39] cats.effect.IOFiber.execR
  [40] cats.effect.IOFiber.run
  [41] cats.effect.unsafe.WorkerThread.run

--- 801388733 ns (0.11%), 80 samples
  [ 0] jlong_disjoint_arraycopy
  [ 1] jdk.internal.misc.Unsafe.copyMemory0
  [ 2] jdk.internal.misc.Unsafe.copyMemory
  [ 3] jdk.internal.misc.ScopedMemoryAccess.copyMemoryInternal
  [ 4] jdk.internal.misc.ScopedMemoryAccess.copyMemory
  [ 5] java.nio.ByteBuffer.putBuffer
  [ 6] java.nio.ByteBuffer.put
  [ 7] sun.nio.ch.IOUtil.write
  [ 8] sun.nio.ch.IOUtil.write
  [ 9] sun.nio.ch.FileChannelImpl.write
  [10] java.nio.channels.Channels.writeFullyImpl
  [11] java.nio.channels.Channels.writeFully
  [12] java.nio.channels.Channels$1.write
  [13] java.io.InputStream.transferTo
  [14] java.nio.file.Files.copy
  [15] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [16] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [17] jdk.nio.zipfs.ZipPath.newFileChannel
  [18] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [19] java.nio.channels.FileChannel.open
  [20] java.nio.channels.FileChannel.open
  [21] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [22] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25440.apply
  [23] cats.effect.IOFiber.$anonfun$8
  [24] cats.effect.IOFiber$$Lambda$291.0x0000000800de1900.apply
  [25] cats.effect.unsafe.WorkerThread.blockOn
  [26] scala.concurrent.package$.blocking
  [27] cats.effect.IOFiber.runLoop
  [28] cats.effect.IOFiber.execR
  [29] cats.effect.IOFiber.run
  [30] cats.effect.unsafe.WorkerThread.run

--- 791169405 ns (0.11%), 79 samples
  [ 0] /usr/lib/x86_64-linux-gnu/libz.so.1.2.11
  [ 1] [unknown]
  [ 2] java.util.zip.Inflater.inflateBytesBytes
  [ 3] java.util.zip.Inflater.inflate
  [ 4] java.util.zip.InflaterInputStream.read
  [ 5] java.io.InputStream.transferTo
  [ 6] java.nio.file.Files.copy
  [ 7] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [ 8] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [ 9] jdk.nio.zipfs.ZipPath.newFileChannel
  [10] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [11] java.nio.channels.FileChannel.open
  [12] java.nio.channels.FileChannel.open
  [13] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [14] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25440.apply
  [15] cats.effect.IOFiber.$anonfun$8
  [16] cats.effect.IOFiber$$Lambda$291.0x0000000800de1900.apply
  [17] cats.effect.unsafe.WorkerThread.blockOn
  [18] scala.concurrent.package$.blocking
  [19] cats.effect.IOFiber.runLoop
  [20] cats.effect.IOFiber.execR
  [21] cats.effect.IOFiber.run
  [22] cats.effect.unsafe.WorkerThread.run

--- 771769819 ns (0.11%), 77 samples
  [ 0] page_counter_try_charge_[k]
  [ 1] try_charge_memcg_[k]
  [ 2] obj_cgroup_charge_[k]
  [ 3] __kmalloc_[k]
  [ 4] inotify_handle_inode_event_[k]
  [ 5] fsnotify_handle_inode_event.isra.0_[k]
  [ 6] send_to_group_[k]
  [ 7] fsnotify_[k]
  [ 8] __fsnotify_parent_[k]
  [ 9] vfs_write_[k]
  [10] ksys_write_[k]
  [11] __x64_sys_write_[k]
  [12] do_syscall_64_[k]
  [13] entry_SYSCALL_64_after_hwframe_[k]
  [14] write
  [15] sun.nio.ch.FileDispatcherImpl.write0
  [16] sun.nio.ch.FileDispatcherImpl.write
  [17] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.IOUtil.write
  [20] sun.nio.ch.FileChannelImpl.write
  [21] java.nio.channels.Channels.writeFullyImpl
  [22] java.nio.channels.Channels.writeFully
  [23] java.nio.channels.Channels$1.write
  [24] java.io.InputStream.transferTo
  [25] java.nio.file.Files.copy
  [26] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [27] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [28] jdk.nio.zipfs.ZipPath.newFileChannel
  [29] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [30] java.nio.channels.FileChannel.open
  [31] java.nio.channels.FileChannel.open
  [32] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [33] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25440.apply
  [34] cats.effect.IOFiber.$anonfun$8
  [35] cats.effect.IOFiber$$Lambda$291.0x0000000800de1900.apply
  [36] cats.effect.unsafe.WorkerThread.blockOn
  [37] scala.concurrent.package$.blocking
  [38] cats.effect.IOFiber.runLoop
  [39] cats.effect.IOFiber.execR
  [40] cats.effect.IOFiber.run
  [41] cats.effect.unsafe.WorkerThread.run

--- 761853167 ns (0.11%), 76 samples
  [ 0] copy_user_generic_string_[k]
  [ 1] zfs_uiomove_iter?[zfs]_[k]
  [ 2] zfs_uiomove?[zfs]_[k]
  [ 3] dmu_read_uio_dnode?[zfs]_[k]
  [ 4] dmu_read_uio_dbuf?[zfs]_[k]
  [ 5] mappedread?[zfs]_[k]
  [ 6] zfs_read?[zfs]_[k]
  [ 7] zpl_iter_read?[zfs]_[k]
  [ 8] new_sync_read_[k]
  [ 9] vfs_read_[k]
  [10] __x64_sys_pread64_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] __libc_pread64
  [14] sun.nio.ch.FileDispatcherImpl.pread0
  [15] sun.nio.ch.FileDispatcherImpl.pread
  [16] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [17] sun.nio.ch.IOUtil.read
  [18] sun.nio.ch.IOUtil.read
  [19] sun.nio.ch.FileChannelImpl.readInternal
  [20] sun.nio.ch.FileChannelImpl.read
  [21] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [22] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [23] jdk.nio.zipfs.ZipFileSystem$2.fill
  [24] java.util.zip.InflaterInputStream.read
  [25] java.io.InputStream.transferTo
  [26] java.nio.file.Files.copy
  [27] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [28] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [29] jdk.nio.zipfs.ZipPath.newFileChannel
  [30] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [31] java.nio.channels.FileChannel.open
  [32] java.nio.channels.FileChannel.open
  [33] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [34] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25440.apply
  [35] cats.effect.IOFiber.$anonfun$8
  [36] cats.effect.IOFiber$$Lambda$291.0x0000000800de1900.apply
  [37] cats.effect.unsafe.WorkerThread.blockOn
  [38] scala.concurrent.package$.blocking
  [39] cats.effect.IOFiber.runLoop
  [40] cats.effect.IOFiber.execR
  [41] cats.effect.IOFiber.run
  [42] cats.effect.unsafe.WorkerThread.run

--- 751392275 ns (0.11%), 75 samples
  [ 0] _raw_spin_unlock_irqrestore_[k]
  [ 1] __wake_up_common_lock_[k]
  [ 2] __wake_up_[k]
  [ 3] fsnotify_insert_event_[k]
  [ 4] inotify_handle_inode_event_[k]
  [ 5] fsnotify_handle_inode_event.isra.0_[k]
  [ 6] send_to_group_[k]
  [ 7] fsnotify_[k]
  [ 8] open_last_lookups_[k]
  [ 9] path_openat_[k]
  [10] do_filp_open_[k]
  [11] do_sys_openat2_[k]
  [12] __x64_sys_openat_[k]
  [13] do_syscall_64_[k]
  [14] entry_SYSCALL_64_after_hwframe_[k]
  [15] __open64
  [16] [unknown]
  [17] sun.nio.fs.UnixNativeDispatcher.open0
  [18] sun.nio.fs.UnixNativeDispatcher.open
  [19] sun.nio.fs.UnixChannelFactory.open
  [20] sun.nio.fs.UnixChannelFactory.newFileChannel
  [21] sun.nio.fs.UnixChannelFactory.newFileChannel
  [22] sun.nio.fs.UnixFileSystemProvider.newByteChannel
  [23] java.nio.file.Files.newByteChannel
  [24] java.nio.file.Files.createFile
  [25] java.nio.file.TempFileHelper.create
  [26] java.nio.file.TempFileHelper.createTempFile
  [27] java.nio.file.Files.createTempFile
  [28] jdk.nio.zipfs.ZipFileSystem.createTempFileInSameDirectoryAs
  [29] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [30] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [31] jdk.nio.zipfs.ZipPath.newFileChannel
  [32] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [33] java.nio.channels.FileChannel.open
  [34] java.nio.channels.FileChannel.open
  [35] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [36] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25440.apply
  [37] cats.effect.IOFiber.$anonfun$8
  [38] cats.effect.IOFiber$$Lambda$291.0x0000000800de1900.apply
  [39] cats.effect.unsafe.WorkerThread.blockOn
  [40] scala.concurrent.package$.blocking
  [41] cats.effect.IOFiber.runLoop
  [42] cats.effect.IOFiber.execR
  [43] cats.effect.IOFiber.run
  [44] cats.effect.unsafe.WorkerThread.run

--- 751250565 ns (0.11%), 75 samples
  [ 0] java.util.Arrays.copyOfRange
  [ 1] java.lang.String.<init>
  [ 2] java.lang.String.<init>
  [ 3] com.scalamandra.ZipLib$.com$scalamandra$ZipLib$$anon$1$$_$fs2ReadAllBytes$$anonfun$1$$anonfun$1$$anonfun$2$$anonfun$2
  [ 4] com.scalamandra.ZipLib$$anon$1$$Lambda$394.0x0000000800e06000.apply
  [ 5] cats.effect.IOFiber.succeeded
  [ 6] cats.effect.IOFiber.runLoop
  [ 7] cats.effect.IOFiber.execR
  [ 8] cats.effect.IOFiber.run
  [ 9] cats.effect.unsafe.WorkerThread.run

--- 741372213 ns (0.10%), 74 samples
  [ 0] java.lang.StringCoding.hasNegatives
  [ 1] java.lang.String.<init>
  [ 2] java.lang.String.<init>
  [ 3] com.scalamandra.ZipLib$.com$scalamandra$ZipLib$$anon$1$$_$fs2ReadAllBytes$$anonfun$1$$anonfun$1$$anonfun$2$$anonfun$2
  [ 4] com.scalamandra.ZipLib$$anon$1$$Lambda$394.0x0000000800e06000.apply
  [ 5] cats.effect.IOFiber.succeeded
  [ 6] cats.effect.IOFiber.runLoop
  [ 7] cats.effect.IOFiber.execR
  [ 8] cats.effect.IOFiber.run
  [ 9] cats.effect.unsafe.WorkerThread.run

--- 731194216 ns (0.10%), 73 samples
  [ 0] jbyte_disjoint_arraycopy
  [ 1] jdk.internal.misc.Unsafe.copyMemory0
  [ 2] jdk.internal.misc.Unsafe.copyMemory
  [ 3] jdk.internal.misc.ScopedMemoryAccess.copyMemoryInternal
  [ 4] jdk.internal.misc.ScopedMemoryAccess.copyMemory
  [ 5] java.nio.ByteBuffer.putBuffer
  [ 6] java.nio.ByteBuffer.put
  [ 7] java.nio.HeapByteBuffer.put
  [ 8] sun.nio.ch.IOUtil.read
  [ 9] sun.nio.ch.IOUtil.read
  [10] sun.nio.ch.FileChannelImpl.readInternal
  [11] sun.nio.ch.FileChannelImpl.read
  [12] jdk.nio.zipfs.ZipFileSystem$1.read
  [13] fs2.io.file.FileHandleCompanionPlatform$$anon$1.read$$anonfun$1
  [14] fs2.io.file.FileHandleCompanionPlatform$$anon$1$$Lambda$383.0x0000000800dfe068.apply
  [15] cats.effect.IOFiber.$anonfun$8
  [16] cats.effect.IOFiber$$Lambda$291.0x0000000800de1900.apply
  [17] cats.effect.unsafe.WorkerThread.blockOn
  [18] scala.concurrent.package$.blocking
  [19] cats.effect.IOFiber.runLoop
  [20] cats.effect.IOFiber.execR
  [21] cats.effect.IOFiber.run
  [22] cats.effect.unsafe.WorkerThread.run

--- 721854049 ns (0.10%), 72 samples
  [ 0] spl_kmem_cache_alloc?[spl]_[k]
  [ 1] zio_data_buf_alloc?[zfs]_[k]
  [ 2] arc_get_data_buf?[zfs]_[k]
  [ 3] arc_buf_alloc_impl?[zfs]_[k]
  [ 4] arc_alloc_buf?[zfs]_[k]
  [ 5] dbuf_new_size?[zfs]_[k]
  [ 6] dnode_set_blksz?[zfs]_[k]
  [ 7] dmu_object_set_blocksize?[zfs]_[k]
  [ 8] zfs_grow_blocksize?[zfs]_[k]
  [ 9] zfs_write?[zfs]_[k]
  [10] zpl_iter_write?[zfs]_[k]
  [11] new_sync_write_[k]
  [12] vfs_write_[k]
  [13] ksys_write_[k]
  [14] __x64_sys_write_[k]
  [15] do_syscall_64_[k]
  [16] entry_SYSCALL_64_after_hwframe_[k]
  [17] write
  [18] sun.nio.ch.FileDispatcherImpl.write0
  [19] sun.nio.ch.FileDispatcherImpl.write
  [20] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [21] sun.nio.ch.IOUtil.write
  [22] sun.nio.ch.IOUtil.write
  [23] sun.nio.ch.FileChannelImpl.write
  [24] java.nio.channels.Channels.writeFullyImpl
  [25] java.nio.channels.Channels.writeFully
  [26] java.nio.channels.Channels$1.write
  [27] java.io.InputStream.transferTo
  [28] java.nio.file.Files.copy
  [29] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [30] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [31] jdk.nio.zipfs.ZipPath.newFileChannel
  [32] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [33] java.nio.channels.FileChannel.open
  [34] java.nio.channels.FileChannel.open
  [35] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [36] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25440.apply
  [37] cats.effect.IOFiber.$anonfun$8
  [38] cats.effect.IOFiber$$Lambda$291.0x0000000800de1900.apply
  [39] cats.effect.unsafe.WorkerThread.blockOn
  [40] scala.concurrent.package$.blocking
  [41] cats.effect.IOFiber.runLoop
  [42] cats.effect.IOFiber.execR
  [43] cats.effect.IOFiber.run
  [44] cats.effect.unsafe.WorkerThread.run

--- 701756097 ns (0.10%), 70 samples
  [ 0] _raw_spin_unlock_irqrestore_[k]
  [ 1] __wake_up_common_lock_[k]
  [ 2] __wake_up_[k]
  [ 3] fsnotify_insert_event_[k]
  [ 4] inotify_handle_inode_event_[k]
  [ 5] fsnotify_handle_inode_event.isra.0_[k]
  [ 6] send_to_group_[k]
  [ 7] fsnotify_[k]
  [ 8] vfs_unlink_[k]
  [ 9] do_unlinkat_[k]
  [10] __x64_sys_unlink_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] __GI_unlink
  [14] sun.nio.fs.UnixNativeDispatcher.unlink0
  [15] sun.nio.fs.UnixNativeDispatcher.unlink
  [16] sun.nio.fs.UnixFileSystemProvider.implDelete
  [17] sun.nio.fs.AbstractFileSystemProvider.deleteIfExists
  [18] java.nio.file.Files.deleteIfExists
  [19] java.nio.file.Files.copy
  [20] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [21] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [22] jdk.nio.zipfs.ZipPath.newFileChannel
  [23] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [24] java.nio.channels.FileChannel.open
  [25] java.nio.channels.FileChannel.open
  [26] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [27] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25440.apply
  [28] cats.effect.IOFiber.$anonfun$8
  [29] cats.effect.IOFiber$$Lambda$291.0x0000000800de1900.apply
  [30] cats.effect.unsafe.WorkerThread.blockOn
  [31] scala.concurrent.package$.blocking
  [32] cats.effect.IOFiber.runLoop
  [33] cats.effect.IOFiber.execR
  [34] cats.effect.IOFiber.run
  [35] cats.effect.unsafe.WorkerThread.run

--- 692055024 ns (0.10%), 69 samples
  [ 0] java.util.concurrent.ConcurrentLinkedQueue.poll
  [ 1] cats.effect.unsafe.ScalQueue.poll
  [ 2] cats.effect.unsafe.WorkerThread.run

--- 691478028 ns (0.10%), 69 samples
  [ 0] _raw_spin_unlock_irqrestore_[k]
  [ 1] __wake_up_common_lock_[k]
  [ 2] __wake_up_[k]
  [ 3] fsnotify_insert_event_[k]
  [ 4] inotify_handle_inode_event_[k]
  [ 5] fsnotify_handle_inode_event.isra.0_[k]
  [ 6] send_to_group_[k]
  [ 7] fsnotify_[k]
  [ 8] vfs_unlink_[k]
  [ 9] do_unlinkat_[k]
  [10] __x64_sys_unlink_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] __GI_unlink
  [14] sun.nio.fs.UnixNativeDispatcher.unlink0
  [15] sun.nio.fs.UnixNativeDispatcher.unlink
  [16] sun.nio.fs.UnixFileSystemProvider.implDelete
  [17] sun.nio.fs.AbstractFileSystemProvider.delete
  [18] java.nio.file.Files.delete
  [19] jdk.nio.zipfs.ZipFileSystem.removeTempPathForEntry
  [20] jdk.nio.zipfs.ZipFileSystem$1.implCloseChannel
  [21] java.nio.channels.spi.AbstractInterruptibleChannel.close
  [22] fs2.io.file.FilesCompanionPlatform.openFileChannel$$anonfun$1$$anonfun$1
  [23] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$openFileChannel$$anonfun$1$$anonfun$adapted$1
  [24] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$307.0x0000000800de3370.apply
  [25] cats.effect.IOFiber.$anonfun$8
  [26] cats.effect.IOFiber$$Lambda$291.0x0000000800de1900.apply
  [27] cats.effect.unsafe.WorkerThread.blockOn
  [28] scala.concurrent.package$.blocking
  [29] cats.effect.IOFiber.runLoop
  [30] cats.effect.IOFiber.execR
  [31] cats.effect.IOFiber.run
  [32] cats.effect.unsafe.WorkerThread.run

--- 680973242 ns (0.10%), 68 samples
  [ 0] java.lang.System.arraycopy
  [ 1] fs2.Chunk$ArraySlice.copyToArray
  [ 2] fs2.Chunk.toArray
  [ 3] com.scalamandra.ZipLib$.$anonfun$1
  [ 4] com.scalamandra.ZipLib$$$Lambda$401.0x0000000800e0ccb8.apply
  [ 5] scala.Option.map
  [ 6] com.scalamandra.ZipLib$.com$scalamandra$ZipLib$$anon$1$$_$fs2ReadAllBytes$$anonfun$1$$anonfun$1$$anonfun$2$$anonfun$1
  [ 7] com.scalamandra.ZipLib$$anon$1$$Lambda$391.0x0000000800dfef30.apply
  [ 8] cats.effect.IOFiber.succeeded
  [ 9] cats.effect.IOFiber.runLoop
  [10] cats.effect.IOFiber.execR
  [11] cats.effect.IOFiber.run
  [12] cats.effect.unsafe.WorkerThread.run

--- 671312529 ns (0.09%), 67 samples
  [ 0] refill_obj_stock_[k]
  [ 1] obj_cgroup_charge_[k]
  [ 2] __kmalloc_[k]
  [ 3] inotify_handle_inode_event_[k]
  [ 4] fsnotify_handle_inode_event.isra.0_[k]
  [ 5] send_to_group_[k]
  [ 6] fsnotify_[k]
  [ 7] __fsnotify_parent_[k]
  [ 8] vfs_write_[k]
  [ 9] ksys_write_[k]
  [10] __x64_sys_write_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] write
  [14] sun.nio.ch.FileDispatcherImpl.write0
  [15] sun.nio.ch.FileDispatcherImpl.write
  [16] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.FileChannelImpl.write
  [20] java.nio.channels.Channels.writeFullyImpl
  [21] java.nio.channels.Channels.writeFully
  [22] java.nio.channels.Channels$1.write
  [23] java.io.InputStream.transferTo
  [24] java.nio.file.Files.copy
  [25] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [26] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [27] jdk.nio.zipfs.ZipPath.newFileChannel
  [28] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [29] java.nio.channels.FileChannel.open
  [30] java.nio.channels.FileChannel.open
  [31] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [32] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25440.apply
  [33] cats.effect.IOFiber.$anonfun$8
  [34] cats.effect.IOFiber$$Lambda$291.0x0000000800de1900.apply
  [35] cats.effect.unsafe.WorkerThread.blockOn
  [36] scala.concurrent.package$.blocking
  [37] cats.effect.IOFiber.runLoop
  [38] cats.effect.IOFiber.execR
  [39] cats.effect.IOFiber.run
  [40] cats.effect.unsafe.WorkerThread.run

--- 641601393 ns (0.09%), 64 samples
  [ 0] zfs_write?[zfs]_[k]
  [ 1] zpl_iter_write?[zfs]_[k]
  [ 2] new_sync_write_[k]
  [ 3] vfs_write_[k]
  [ 4] ksys_write_[k]
  [ 5] __x64_sys_write_[k]
  [ 6] do_syscall_64_[k]
  [ 7] entry_SYSCALL_64_after_hwframe_[k]
  [ 8] write
  [ 9] sun.nio.ch.FileDispatcherImpl.write0
  [10] sun.nio.ch.FileDispatcherImpl.write
  [11] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [12] sun.nio.ch.IOUtil.write
  [13] sun.nio.ch.IOUtil.write
  [14] sun.nio.ch.FileChannelImpl.write
  [15] java.nio.channels.Channels.writeFullyImpl
  [16] java.nio.channels.Channels.writeFully
  [17] java.nio.channels.Channels$1.write
  [18] java.io.InputStream.transferTo
  [19] java.nio.file.Files.copy
  [20] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [21] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [22] jdk.nio.zipfs.ZipPath.newFileChannel
  [23] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [24] java.nio.channels.FileChannel.open
  [25] java.nio.channels.FileChannel.open
  [26] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [27] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25440.apply
  [28] cats.effect.IOFiber.$anonfun$8
  [29] cats.effect.IOFiber$$Lambda$291.0x0000000800de1900.apply
  [30] cats.effect.unsafe.WorkerThread.blockOn
  [31] scala.concurrent.package$.blocking
  [32] cats.effect.IOFiber.runLoop
  [33] cats.effect.IOFiber.execR
  [34] cats.effect.IOFiber.run
  [35] cats.effect.unsafe.WorkerThread.run

--- 641242512 ns (0.09%), 64 samples
  [ 0] _raw_spin_unlock_irqrestore_[k]
  [ 1] __wake_up_common_lock_[k]
  [ 2] __wake_up_[k]
  [ 3] fsnotify_insert_event_[k]
  [ 4] inotify_handle_inode_event_[k]
  [ 5] fsnotify_handle_inode_event.isra.0_[k]
  [ 6] send_to_group_[k]
  [ 7] fsnotify_[k]
  [ 8] open_last_lookups_[k]
  [ 9] path_openat_[k]
  [10] do_filp_open_[k]
  [11] do_sys_openat2_[k]
  [12] __x64_sys_openat_[k]
  [13] do_syscall_64_[k]
  [14] entry_SYSCALL_64_after_hwframe_[k]
  [15] __open64
  [16] [unknown]
  [17] sun.nio.fs.UnixNativeDispatcher.open0
  [18] sun.nio.fs.UnixNativeDispatcher.open
  [19] sun.nio.fs.UnixChannelFactory.open
  [20] sun.nio.fs.UnixChannelFactory.newFileChannel
  [21] sun.nio.fs.UnixChannelFactory.newFileChannel
  [22] sun.nio.fs.UnixFileSystemProvider.newByteChannel
  [23] java.nio.file.spi.FileSystemProvider.newOutputStream
  [24] java.nio.file.Files.newOutputStream
  [25] java.nio.file.Files.copy
  [26] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [27] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [28] jdk.nio.zipfs.ZipPath.newFileChannel
  [29] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [30] java.nio.channels.FileChannel.open
  [31] java.nio.channels.FileChannel.open
  [32] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [33] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25440.apply
  [34] cats.effect.IOFiber.$anonfun$8
  [35] cats.effect.IOFiber$$Lambda$291.0x0000000800de1900.apply
  [36] cats.effect.unsafe.WorkerThread.blockOn
  [37] scala.concurrent.package$.blocking
  [38] cats.effect.IOFiber.runLoop
  [39] cats.effect.IOFiber.execR
  [40] cats.effect.IOFiber.run
  [41] cats.effect.unsafe.WorkerThread.run

--- 611081202 ns (0.09%), 61 samples
  [ 0] send_to_group_[k]
  [ 1] fsnotify_[k]
  [ 2] __fsnotify_parent_[k]
  [ 3] vfs_write_[k]
  [ 4] ksys_write_[k]
  [ 5] __x64_sys_write_[k]
  [ 6] do_syscall_64_[k]
  [ 7] entry_SYSCALL_64_after_hwframe_[k]
  [ 8] write
  [ 9] sun.nio.ch.FileDispatcherImpl.write0
  [10] sun.nio.ch.FileDispatcherImpl.write
  [11] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [12] sun.nio.ch.IOUtil.write
  [13] sun.nio.ch.IOUtil.write
  [14] sun.nio.ch.FileChannelImpl.write
  [15] java.nio.channels.Channels.writeFullyImpl
  [16] java.nio.channels.Channels.writeFully
  [17] java.nio.channels.Channels$1.write
  [18] java.io.InputStream.transferTo
  [19] java.nio.file.Files.copy
  [20] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [21] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [22] jdk.nio.zipfs.ZipPath.newFileChannel
  [23] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [24] java.nio.channels.FileChannel.open
  [25] java.nio.channels.FileChannel.open
  [26] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [27] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25440.apply
  [28] cats.effect.IOFiber.$anonfun$8
  [29] cats.effect.IOFiber$$Lambda$291.0x0000000800de1900.apply
  [30] cats.effect.unsafe.WorkerThread.blockOn
  [31] scala.concurrent.package$.blocking
  [32] cats.effect.IOFiber.runLoop
  [33] cats.effect.IOFiber.execR
  [34] cats.effect.IOFiber.run
  [35] cats.effect.unsafe.WorkerThread.run

--- 591531281 ns (0.08%), 59 samples
  [ 0] memcg_slab_post_alloc_hook_[k]
  [ 1] __kmalloc_[k]
  [ 2] inotify_handle_inode_event_[k]
  [ 3] fsnotify_handle_inode_event.isra.0_[k]
  [ 4] send_to_group_[k]
  [ 5] fsnotify_[k]
  [ 6] __fsnotify_parent_[k]
  [ 7] vfs_write_[k]
  [ 8] ksys_write_[k]
  [ 9] __x64_sys_write_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] write
  [13] sun.nio.ch.FileDispatcherImpl.write0
  [14] sun.nio.ch.FileDispatcherImpl.write
  [15] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [16] sun.nio.ch.IOUtil.write
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.FileChannelImpl.write
  [19] java.nio.channels.Channels.writeFullyImpl
  [20] java.nio.channels.Channels.writeFully
  [21] java.nio.channels.Channels$1.write
  [22] java.io.InputStream.transferTo
  [23] java.nio.file.Files.copy
  [24] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [25] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [26] jdk.nio.zipfs.ZipPath.newFileChannel
  [27] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [28] java.nio.channels.FileChannel.open
  [29] java.nio.channels.FileChannel.open
  [30] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [31] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25440.apply
  [32] cats.effect.IOFiber.$anonfun$8
  [33] cats.effect.IOFiber$$Lambda$291.0x0000000800de1900.apply
  [34] cats.effect.unsafe.WorkerThread.blockOn
  [35] scala.concurrent.package$.blocking
  [36] cats.effect.IOFiber.runLoop
  [37] cats.effect.IOFiber.execR
  [38] cats.effect.IOFiber.run
  [39] cats.effect.unsafe.WorkerThread.run

--- 591209760 ns (0.08%), 59 samples
  [ 0] page_counter_try_charge_[k]
  [ 1] try_charge_memcg_[k]
  [ 2] obj_cgroup_charge_[k]
  [ 3] __kmalloc_[k]
  [ 4] inotify_handle_inode_event_[k]
  [ 5] fsnotify_handle_inode_event.isra.0_[k]
  [ 6] send_to_group_[k]
  [ 7] fsnotify_[k]
  [ 8] __fsnotify_parent_[k]
  [ 9] vfs_write_[k]
  [10] ksys_write_[k]
  [11] __x64_sys_write_[k]
  [12] do_syscall_64_[k]
  [13] entry_SYSCALL_64_after_hwframe_[k]
  [14] write
  [15] sun.nio.ch.FileDispatcherImpl.write0
  [16] sun.nio.ch.FileDispatcherImpl.write
  [17] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.IOUtil.write
  [20] sun.nio.ch.FileChannelImpl.write
  [21] java.nio.channels.Channels.writeFullyImpl
  [22] java.nio.channels.Channels.writeFully
  [23] java.nio.channels.Channels$1.write
  [24] java.io.InputStream.transferTo
  [25] java.nio.file.Files.copy
  [26] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [27] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [28] jdk.nio.zipfs.ZipPath.newFileChannel
  [29] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [30] java.nio.channels.FileChannel.open
  [31] java.nio.channels.FileChannel.open
  [32] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [33] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25440.apply
  [34] cats.effect.IOFiber.$anonfun$8
  [35] cats.effect.IOFiber$$Lambda$291.0x0000000800de1900.apply
  [36] cats.effect.unsafe.WorkerThread.blockOn
  [37] scala.concurrent.package$.blocking
  [38] cats.effect.IOFiber.runLoop
  [39] cats.effect.IOFiber.execR
  [40] cats.effect.IOFiber.run
  [41] cats.effect.unsafe.WorkerThread.run

--- 571227612 ns (0.08%), 57 samples
  [ 0] try_charge_memcg_[k]
  [ 1] obj_cgroup_charge_[k]
  [ 2] __kmalloc_[k]
  [ 3] inotify_handle_inode_event_[k]
  [ 4] fsnotify_handle_inode_event.isra.0_[k]
  [ 5] send_to_group_[k]
  [ 6] fsnotify_[k]
  [ 7] __fsnotify_parent_[k]
  [ 8] vfs_write_[k]
  [ 9] ksys_write_[k]
  [10] __x64_sys_write_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] write
  [14] sun.nio.ch.FileDispatcherImpl.write0
  [15] sun.nio.ch.FileDispatcherImpl.write
  [16] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.FileChannelImpl.write
  [20] java.nio.channels.Channels.writeFullyImpl
  [21] java.nio.channels.Channels.writeFully
  [22] java.nio.channels.Channels$1.write
  [23] java.io.InputStream.transferTo
  [24] java.nio.file.Files.copy
  [25] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [26] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [27] jdk.nio.zipfs.ZipPath.newFileChannel
  [28] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [29] java.nio.channels.FileChannel.open
  [30] java.nio.channels.FileChannel.open
  [31] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [32] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25440.apply
  [33] cats.effect.IOFiber.$anonfun$8
  [34] cats.effect.IOFiber$$Lambda$291.0x0000000800de1900.apply
  [35] cats.effect.unsafe.WorkerThread.blockOn
  [36] scala.concurrent.package$.blocking
  [37] cats.effect.IOFiber.runLoop
  [38] cats.effect.IOFiber.execR
  [39] cats.effect.IOFiber.run
  [40] cats.effect.unsafe.WorkerThread.run

--- 570956889 ns (0.08%), 57 samples
  [ 0] java.lang.StringCoding.hasNegatives
  [ 1] java.lang.String.<init>
  [ 2] java.lang.String.<init>
  [ 3] com.scalamandra.ZipLib$.com$scalamandra$ZipLib$$anon$1$$_$fs2ReadAllBytes$$anonfun$1$$anonfun$1$$anonfun$2$$anonfun$2
  [ 4] com.scalamandra.ZipLib$$anon$1$$Lambda$394.0x0000000800e06000.apply
  [ 5] cats.effect.IOFiber.succeeded
  [ 6] cats.effect.IOFiber.runLoop
  [ 7] cats.effect.IOFiber.execR
  [ 8] cats.effect.IOFiber.run
  [ 9] cats.effect.unsafe.WorkerThread.run

--- 551308187 ns (0.08%), 55 samples
  [ 0] __kmalloc_[k]
  [ 1] inotify_handle_inode_event_[k]
  [ 2] fsnotify_handle_inode_event.isra.0_[k]
  [ 3] send_to_group_[k]
  [ 4] fsnotify_[k]
  [ 5] __fsnotify_parent_[k]
  [ 6] vfs_write_[k]
  [ 7] ksys_write_[k]
  [ 8] __x64_sys_write_[k]
  [ 9] do_syscall_64_[k]
  [10] entry_SYSCALL_64_after_hwframe_[k]
  [11] write
  [12] sun.nio.ch.FileDispatcherImpl.write0
  [13] sun.nio.ch.FileDispatcherImpl.write
  [14] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [15] sun.nio.ch.IOUtil.write
  [16] sun.nio.ch.IOUtil.write
  [17] sun.nio.ch.FileChannelImpl.write
  [18] java.nio.channels.Channels.writeFullyImpl
  [19] java.nio.channels.Channels.writeFully
  [20] java.nio.channels.Channels$1.write
  [21] java.io.InputStream.transferTo
  [22] java.nio.file.Files.copy
  [23] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [24] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [25] jdk.nio.zipfs.ZipPath.newFileChannel
  [26] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [27] java.nio.channels.FileChannel.open
  [28] java.nio.channels.FileChannel.open
  [29] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [30] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25440.apply
  [31] cats.effect.IOFiber.$anonfun$8
  [32] cats.effect.IOFiber$$Lambda$291.0x0000000800de1900.apply
  [33] cats.effect.unsafe.WorkerThread.blockOn
  [34] scala.concurrent.package$.blocking
  [35] cats.effect.IOFiber.runLoop
  [36] cats.effect.IOFiber.execR
  [37] cats.effect.IOFiber.run
  [38] cats.effect.unsafe.WorkerThread.run

--- 531111928 ns (0.07%), 53 samples
  [ 0] _raw_spin_unlock_irqrestore_[k]
  [ 1] try_to_wake_up_[k]
  [ 2] wake_up_q_[k]
  [ 3] futex_wake_[k]
  [ 4] do_futex_[k]
  [ 5] __x64_sys_futex_[k]
  [ 6] do_syscall_64_[k]
  [ 7] entry_SYSCALL_64_after_hwframe_[k]
  [ 8] pthread_cond_signal@@GLIBC_2.3.2
  [ 9] jdk.internal.misc.Unsafe.unpark
  [10] java.util.concurrent.locks.LockSupport.unpark
  [11] java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext
  [12] java.util.concurrent.locks.AbstractQueuedSynchronizer.release
  [13] java.util.concurrent.locks.ReentrantLock.unlock
  [14] java.util.concurrent.ArrayBlockingQueue.offer
  [15] cats.effect.IOPlatform.unsafeRunTimed$$anonfun$1
  [16] cats.effect.IOPlatform$$Lambda$231.0x0000000800dcea18.applyVoid
  [17] scala.runtime.function.JProcedure1.apply
  [18] scala.runtime.function.JProcedure1.apply
  [19] cats.effect.IO.unsafeRunAsync$$anonfun$3
  [20] cats.effect.IO$$Lambda$249.0x0000000800dd1830.applyVoid
  [21] scala.runtime.function.JProcedure1.apply
  [22] scala.runtime.function.JProcedure1.apply
  [23] cats.effect.IO.$anonfun$6$$anonfun$3
  [24] cats.effect.IO$$Lambda$432.0x0000000800e16408.applyVoid
  [25] scala.runtime.function.JProcedure1.apply
  [26] scala.runtime.function.JProcedure1.apply
  [27] cats.effect.kernel.Outcome.fold
  [28] cats.effect.kernel.Outcome.fold$
  [29] cats.effect.kernel.Outcome$Succeeded.fold
  [30] cats.effect.IO.$anonfun$6
  [31] cats.effect.IO$$Lambda$260.0x0000000800dd5650.applyVoid
  [32] scala.runtime.function.JProcedure1.apply
  [33] scala.runtime.function.JProcedure1.apply
  [34] cats.effect.CallbackStack.apply
  [35] cats.effect.IOFiber.done
  [36] cats.effect.IOFiber.runTerminusSuccessK
  [37] cats.effect.IOFiber.succeeded
  [38] cats.effect.IOFiber.runLoop
  [39] cats.effect.IOFiber.execR
  [40] cats.effect.IOFiber.run
  [41] cats.effect.unsafe.WorkerThread.run

--- 511080484 ns (0.07%), 51 samples
  [ 0] spl_kmem_cache_alloc?[spl]_[k]
  [ 1] zio_data_buf_alloc?[zfs]_[k]
  [ 2] arc_get_data_buf?[zfs]_[k]
  [ 3] arc_buf_alloc_impl?[zfs]_[k]
  [ 4] arc_alloc_buf?[zfs]_[k]
  [ 5] dbuf_new_size?[zfs]_[k]
  [ 6] dnode_set_blksz?[zfs]_[k]
  [ 7] dmu_object_set_blocksize?[zfs]_[k]
  [ 8] zfs_grow_blocksize?[zfs]_[k]
  [ 9] zfs_write?[zfs]_[k]
  [10] zpl_iter_write?[zfs]_[k]
  [11] new_sync_write_[k]
  [12] vfs_write_[k]
  [13] ksys_write_[k]
  [14] __x64_sys_write_[k]
  [15] do_syscall_64_[k]
  [16] entry_SYSCALL_64_after_hwframe_[k]
  [17] write
  [18] sun.nio.ch.FileDispatcherImpl.write0
  [19] sun.nio.ch.FileDispatcherImpl.write
  [20] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [21] sun.nio.ch.IOUtil.write
  [22] sun.nio.ch.IOUtil.write
  [23] sun.nio.ch.FileChannelImpl.write
  [24] java.nio.channels.Channels.writeFullyImpl
  [25] java.nio.channels.Channels.writeFully
  [26] java.nio.channels.Channels$1.write
  [27] java.io.InputStream.transferTo
  [28] java.nio.file.Files.copy
  [29] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [30] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [31] jdk.nio.zipfs.ZipPath.newFileChannel
  [32] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [33] java.nio.channels.FileChannel.open
  [34] java.nio.channels.FileChannel.open
  [35] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [36] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25440.apply
  [37] cats.effect.IOFiber.$anonfun$8
  [38] cats.effect.IOFiber$$Lambda$291.0x0000000800de1900.apply
  [39] cats.effect.unsafe.WorkerThread.blockOn
  [40] scala.concurrent.package$.blocking
  [41] cats.effect.IOFiber.runLoop
  [42] cats.effect.IOFiber.execR
  [43] cats.effect.IOFiber.run
  [44] cats.effect.unsafe.WorkerThread.run

--- 501020984 ns (0.07%), 50 samples
  [ 0] zfs_write?[zfs]_[k]
  [ 1] zpl_iter_write?[zfs]_[k]
  [ 2] new_sync_write_[k]
  [ 3] vfs_write_[k]
  [ 4] ksys_write_[k]
  [ 5] __x64_sys_write_[k]
  [ 6] do_syscall_64_[k]
  [ 7] entry_SYSCALL_64_after_hwframe_[k]
  [ 8] write
  [ 9] sun.nio.ch.FileDispatcherImpl.write0
  [10] sun.nio.ch.FileDispatcherImpl.write
  [11] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [12] sun.nio.ch.IOUtil.write
  [13] sun.nio.ch.IOUtil.write
  [14] sun.nio.ch.FileChannelImpl.write
  [15] java.nio.channels.Channels.writeFullyImpl
  [16] java.nio.channels.Channels.writeFully
  [17] java.nio.channels.Channels$1.write
  [18] java.io.InputStream.transferTo
  [19] java.nio.file.Files.copy
  [20] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [21] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [22] jdk.nio.zipfs.ZipPath.newFileChannel
  [23] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [24] java.nio.channels.FileChannel.open
  [25] java.nio.channels.FileChannel.open
  [26] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [27] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25440.apply
  [28] cats.effect.IOFiber.$anonfun$8
  [29] cats.effect.IOFiber$$Lambda$291.0x0000000800de1900.apply
  [30] cats.effect.unsafe.WorkerThread.blockOn
  [31] scala.concurrent.package$.blocking
  [32] cats.effect.IOFiber.runLoop
  [33] cats.effect.IOFiber.execR
  [34] cats.effect.IOFiber.run
  [35] cats.effect.unsafe.WorkerThread.run

--- 492171715 ns (0.07%), 48 samples
  [ 0] _raw_spin_unlock_irqrestore_[k]
  [ 1] try_to_wake_up_[k]
  [ 2] wake_up_q_[k]
  [ 3] futex_wake_[k]
  [ 4] do_futex_[k]
  [ 5] __x64_sys_futex_[k]
  [ 6] do_syscall_64_[k]
  [ 7] entry_SYSCALL_64_after_hwframe_[k]
  [ 8] pthread_cond_signal@@GLIBC_2.3.2
  [ 9] jdk.internal.misc.Unsafe.unpark
  [10] java.util.concurrent.locks.LockSupport.unpark
  [11] cats.effect.unsafe.WorkStealingThreadPool.notifyParked
  [12] cats.effect.unsafe.WorkStealingThreadPool.scheduleExternal
  [13] cats.effect.unsafe.WorkStealingThreadPool.execute
  [14] cats.effect.IO.unsafeRunFiber
  [15] cats.effect.IO.unsafeRunAsync
  [16] cats.effect.IOPlatform.unsafeRunTimed
  [17] cats.effect.IOPlatform.unsafeRunSync
  [18] com.scalamandra.ZipBench.fs2ReadAllBytes
  [19] com.scalamandra.jmh_generated.ZipBench_fs2ReadAllBytes_jmhTest.fs2ReadAllBytes_thrpt_jmhStub
  [20] com.scalamandra.jmh_generated.ZipBench_fs2ReadAllBytes_jmhTest.fs2ReadAllBytes_Throughput
  [21] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [22] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [23] java.lang.reflect.Method.invoke
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.Executors$RunnableAdapter.call
  [28] java.util.concurrent.FutureTask.run
  [29] java.util.concurrent.ThreadPoolExecutor.runWorker
  [30] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [31] java.lang.Thread.run

--- 490897954 ns (0.07%), 49 samples
  [ 0] jbyte_disjoint_arraycopy
  [ 1] jdk.internal.misc.Unsafe.copyMemory0
  [ 2] jdk.internal.misc.Unsafe.copyMemory
  [ 3] jdk.internal.misc.ScopedMemoryAccess.copyMemoryInternal
  [ 4] jdk.internal.misc.ScopedMemoryAccess.copyMemory
  [ 5] java.nio.ByteBuffer.putBuffer
  [ 6] java.nio.ByteBuffer.put
  [ 7] java.nio.HeapByteBuffer.put
  [ 8] sun.nio.ch.IOUtil.read
  [ 9] sun.nio.ch.IOUtil.read
  [10] sun.nio.ch.FileChannelImpl.readInternal
  [11] sun.nio.ch.FileChannelImpl.read
  [12] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [13] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [14] jdk.nio.zipfs.ZipFileSystem$2.fill
  [15] java.util.zip.InflaterInputStream.read
  [16] java.io.InputStream.transferTo
  [17] java.nio.file.Files.copy
  [18] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [19] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [20] jdk.nio.zipfs.ZipPath.newFileChannel
  [21] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [22] java.nio.channels.FileChannel.open
  [23] java.nio.channels.FileChannel.open
  [24] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [25] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25440.apply
  [26] cats.effect.IOFiber.$anonfun$8
  [27] cats.effect.IOFiber$$Lambda$291.0x0000000800de1900.apply
  [28] cats.effect.unsafe.WorkerThread.blockOn
  [29] scala.concurrent.package$.blocking
  [30] cats.effect.IOFiber.runLoop
  [31] cats.effect.IOFiber.execR
  [32] cats.effect.IOFiber.run
  [33] cats.effect.unsafe.WorkerThread.run

--- 451096444 ns (0.06%), 45 samples
  [ 0] inotify_handle_inode_event_[k]
  [ 1] fsnotify_handle_inode_event.isra.0_[k]
  [ 2] send_to_group_[k]
  [ 3] fsnotify_[k]
  [ 4] __fsnotify_parent_[k]
  [ 5] vfs_write_[k]
  [ 6] ksys_write_[k]
  [ 7] __x64_sys_write_[k]
  [ 8] do_syscall_64_[k]
  [ 9] entry_SYSCALL_64_after_hwframe_[k]
  [10] write
  [11] sun.nio.ch.FileDispatcherImpl.write0
  [12] sun.nio.ch.FileDispatcherImpl.write
  [13] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [14] sun.nio.ch.IOUtil.write
  [15] sun.nio.ch.IOUtil.write
  [16] sun.nio.ch.FileChannelImpl.write
  [17] java.nio.channels.Channels.writeFullyImpl
  [18] java.nio.channels.Channels.writeFully
  [19] java.nio.channels.Channels$1.write
  [20] java.io.InputStream.transferTo
  [21] java.nio.file.Files.copy
  [22] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [23] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [24] jdk.nio.zipfs.ZipPath.newFileChannel
  [25] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [26] java.nio.channels.FileChannel.open
  [27] java.nio.channels.FileChannel.open
  [28] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [29] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25440.apply
  [30] cats.effect.IOFiber.$anonfun$8
  [31] cats.effect.IOFiber$$Lambda$291.0x0000000800de1900.apply
  [32] cats.effect.unsafe.WorkerThread.blockOn
  [33] scala.concurrent.package$.blocking
  [34] cats.effect.IOFiber.runLoop
  [35] cats.effect.IOFiber.execR
  [36] cats.effect.IOFiber.run
  [37] cats.effect.unsafe.WorkerThread.run

--- 451074027 ns (0.06%), 45 samples
  [ 0] zil_aitx_compare?[zfs]_[k]
  [ 1] zil_itx_assign?[zfs]_[k]
  [ 2] zfs_log_write?[zfs]_[k]
  [ 3] zfs_write?[zfs]_[k]
  [ 4] zpl_iter_write?[zfs]_[k]
  [ 5] new_sync_write_[k]
  [ 6] vfs_write_[k]
  [ 7] ksys_write_[k]
  [ 8] __x64_sys_write_[k]
  [ 9] do_syscall_64_[k]
  [10] entry_SYSCALL_64_after_hwframe_[k]
  [11] write
  [12] sun.nio.ch.FileDispatcherImpl.write0
  [13] sun.nio.ch.FileDispatcherImpl.write
  [14] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [15] sun.nio.ch.IOUtil.write
  [16] sun.nio.ch.IOUtil.write
  [17] sun.nio.ch.FileChannelImpl.write
  [18] java.nio.channels.Channels.writeFullyImpl
  [19] java.nio.channels.Channels.writeFully
  [20] java.nio.channels.Channels$1.write
  [21] java.io.InputStream.transferTo
  [22] java.nio.file.Files.copy
  [23] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [24] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [25] jdk.nio.zipfs.ZipPath.newFileChannel
  [26] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [27] java.nio.channels.FileChannel.open
  [28] java.nio.channels.FileChannel.open
  [29] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [30] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25440.apply
  [31] cats.effect.IOFiber.$anonfun$8
  [32] cats.effect.IOFiber$$Lambda$291.0x0000000800de1900.apply
  [33] cats.effect.unsafe.WorkerThread.blockOn
  [34] scala.concurrent.package$.blocking
  [35] cats.effect.IOFiber.runLoop
  [36] cats.effect.IOFiber.execR
  [37] cats.effect.IOFiber.run
  [38] cats.effect.unsafe.WorkerThread.run

--- 431163065 ns (0.06%), 43 samples
  [ 0] dsl_dir_tempreserve_impl.constprop.0?[zfs]_[k]
  [ 1] dsl_dir_tempreserve_space?[zfs]_[k]
  [ 2] dmu_tx_try_assign?[zfs]_[k]
  [ 3] dmu_tx_assign?[zfs]_[k]
  [ 4] zfs_write?[zfs]_[k]
  [ 5] zpl_iter_write?[zfs]_[k]
  [ 6] new_sync_write_[k]
  [ 7] vfs_write_[k]
  [ 8] ksys_write_[k]
  [ 9] __x64_sys_write_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] write
  [13] sun.nio.ch.FileDispatcherImpl.write0
  [14] sun.nio.ch.FileDispatcherImpl.write
  [15] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [16] sun.nio.ch.IOUtil.write
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.FileChannelImpl.write
  [19] java.nio.channels.Channels.writeFullyImpl
  [20] java.nio.channels.Channels.writeFully
  [21] java.nio.channels.Channels$1.write
  [22] java.io.InputStream.transferTo
  [23] java.nio.file.Files.copy
  [24] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [25] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [26] jdk.nio.zipfs.ZipPath.newFileChannel
  [27] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [28] java.nio.channels.FileChannel.open
  [29] java.nio.channels.FileChannel.open
  [30] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [31] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25440.apply
  [32] cats.effect.IOFiber.$anonfun$8
  [33] cats.effect.IOFiber$$Lambda$291.0x0000000800de1900.apply
  [34] cats.effect.unsafe.WorkerThread.blockOn
  [35] scala.concurrent.package$.blocking
  [36] cats.effect.IOFiber.runLoop
  [37] cats.effect.IOFiber.execR
  [38] cats.effect.IOFiber.run
  [39] cats.effect.unsafe.WorkerThread.run

--- 430826551 ns (0.06%), 43 samples
  [ 0] __kmalloc_[k]
  [ 1] inotify_handle_inode_event_[k]
  [ 2] fsnotify_handle_inode_event.isra.0_[k]
  [ 3] send_to_group_[k]
  [ 4] fsnotify_[k]
  [ 5] __fsnotify_parent_[k]
  [ 6] vfs_write_[k]
  [ 7] ksys_write_[k]
  [ 8] __x64_sys_write_[k]
  [ 9] do_syscall_64_[k]
  [10] entry_SYSCALL_64_after_hwframe_[k]
  [11] write
  [12] sun.nio.ch.FileDispatcherImpl.write0
  [13] sun.nio.ch.FileDispatcherImpl.write
  [14] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [15] sun.nio.ch.IOUtil.write
  [16] sun.nio.ch.IOUtil.write
  [17] sun.nio.ch.FileChannelImpl.write
  [18] java.nio.channels.Channels.writeFullyImpl
  [19] java.nio.channels.Channels.writeFully
  [20] java.nio.channels.Channels$1.write
  [21] java.io.InputStream.transferTo
  [22] java.nio.file.Files.copy
  [23] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [24] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [25] jdk.nio.zipfs.ZipPath.newFileChannel
  [26] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [27] java.nio.channels.FileChannel.open
  [28] java.nio.channels.FileChannel.open
  [29] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [30] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25440.apply
  [31] cats.effect.IOFiber.$anonfun$8
  [32] cats.effect.IOFiber$$Lambda$291.0x0000000800de1900.apply
  [33] cats.effect.unsafe.WorkerThread.blockOn
  [34] scala.concurrent.package$.blocking
  [35] cats.effect.IOFiber.runLoop
  [36] cats.effect.IOFiber.execR
  [37] cats.effect.IOFiber.run
  [38] cats.effect.unsafe.WorkerThread.run

--- 430679334 ns (0.06%), 43 samples
  [ 0] scala.reflect.ManifestFactory$ByteManifest.newArray
  [ 1] scala.reflect.ManifestFactory$ByteManifest.newArray
  [ 2] scala.runtime.Arrays$.newGenericArray
  [ 3] fs2.Chunk.toArray
  [ 4] com.scalamandra.ZipLib$.$anonfun$1
  [ 5] com.scalamandra.ZipLib$$$Lambda$401.0x0000000800e0ccb8.apply
  [ 6] scala.Option.map
  [ 7] com.scalamandra.ZipLib$.com$scalamandra$ZipLib$$anon$1$$_$fs2ReadAllBytes$$anonfun$1$$anonfun$1$$anonfun$2$$anonfun$1
  [ 8] com.scalamandra.ZipLib$$anon$1$$Lambda$391.0x0000000800dfef30.apply
  [ 9] cats.effect.IOFiber.succeeded
  [10] cats.effect.IOFiber.runLoop
  [11] cats.effect.IOFiber.execR
  [12] cats.effect.IOFiber.run
  [13] cats.effect.unsafe.WorkerThread.run

--- 411082608 ns (0.06%), 41 samples
  [ 0] _raw_spin_unlock_irqrestore_[k]
  [ 1] try_to_wake_up_[k]
  [ 2] wake_up_q_[k]
  [ 3] futex_wake_[k]
  [ 4] do_futex_[k]
  [ 5] __x64_sys_futex_[k]
  [ 6] do_syscall_64_[k]
  [ 7] entry_SYSCALL_64_after_hwframe_[k]
  [ 8] pthread_cond_signal@@GLIBC_2.3.2
  [ 9] jdk.internal.misc.Unsafe.unpark
  [10] java.util.concurrent.locks.LockSupport.unpark
  [11] java.util.concurrent.LinkedTransferQueue$Node.tryMatch
  [12] java.util.concurrent.LinkedTransferQueue.xfer
  [13] java.util.concurrent.LinkedTransferQueue.transfer
  [14] cats.effect.unsafe.WorkerThread.blockOn
  [15] scala.concurrent.package$.blocking
  [16] cats.effect.IOFiber.runLoop
  [17] cats.effect.IOFiber.execR
  [18] cats.effect.IOFiber.run
  [19] cats.effect.unsafe.WorkerThread.run

--- 411040233 ns (0.06%), 41 samples
  [ 0] memset_[k]
  [ 1] spl_kmem_cache_alloc?[spl]_[k]
  [ 2] zio_data_buf_alloc?[zfs]_[k]
  [ 3] arc_get_data_buf?[zfs]_[k]
  [ 4] arc_buf_alloc_impl?[zfs]_[k]
  [ 5] arc_alloc_buf?[zfs]_[k]
  [ 6] dbuf_new_size?[zfs]_[k]
  [ 7] dnode_set_blksz?[zfs]_[k]
  [ 8] dmu_object_set_blocksize?[zfs]_[k]
  [ 9] zfs_grow_blocksize?[zfs]_[k]
  [10] zfs_write?[zfs]_[k]
  [11] zpl_iter_write?[zfs]_[k]
  [12] new_sync_write_[k]
  [13] vfs_write_[k]
  [14] ksys_write_[k]
  [15] __x64_sys_write_[k]
  [16] do_syscall_64_[k]
  [17] entry_SYSCALL_64_after_hwframe_[k]
  [18] write
  [19] sun.nio.ch.FileDispatcherImpl.write0
  [20] sun.nio.ch.FileDispatcherImpl.write
  [21] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [22] sun.nio.ch.IOUtil.write
  [23] sun.nio.ch.IOUtil.write
  [24] sun.nio.ch.FileChannelImpl.write
  [25] java.nio.channels.Channels.writeFullyImpl
  [26] java.nio.channels.Channels.writeFully
  [27] java.nio.channels.Channels$1.write
  [28] java.io.InputStream.transferTo
  [29] java.nio.file.Files.copy
  [30] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [31] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [32] jdk.nio.zipfs.ZipPath.newFileChannel
  [33] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [34] java.nio.channels.FileChannel.open
  [35] java.nio.channels.FileChannel.open
  [36] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [37] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25440.apply
  [38] cats.effect.IOFiber.$anonfun$8
  [39] cats.effect.IOFiber$$Lambda$291.0x0000000800de1900.apply
  [40] cats.effect.unsafe.WorkerThread.blockOn
  [41] scala.concurrent.package$.blocking
  [42] cats.effect.IOFiber.runLoop
  [43] cats.effect.IOFiber.execR
  [44] cats.effect.IOFiber.run
  [45] cats.effect.unsafe.WorkerThread.run

--- 410845850 ns (0.06%), 41 samples
  [ 0] write
  [ 1] sun.nio.ch.FileDispatcherImpl.write0
  [ 2] sun.nio.ch.FileDispatcherImpl.write
  [ 3] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [ 4] sun.nio.ch.IOUtil.write
  [ 5] sun.nio.ch.IOUtil.write
  [ 6] sun.nio.ch.FileChannelImpl.write
  [ 7] java.nio.channels.Channels.writeFullyImpl
  [ 8] java.nio.channels.Channels.writeFully
  [ 9] java.nio.channels.Channels$1.write
  [10] java.io.InputStream.transferTo
  [11] java.nio.file.Files.copy
  [12] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [13] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [14] jdk.nio.zipfs.ZipPath.newFileChannel
  [15] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [16] java.nio.channels.FileChannel.open
  [17] java.nio.channels.FileChannel.open
  [18] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [19] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25440.apply
  [20] cats.effect.IOFiber.$anonfun$8
  [21] cats.effect.IOFiber$$Lambda$291.0x0000000800de1900.apply
  [22] cats.effect.unsafe.WorkerThread.blockOn
  [23] scala.concurrent.package$.blocking
  [24] cats.effect.IOFiber.runLoop
  [25] cats.effect.IOFiber.execR
  [26] cats.effect.IOFiber.run
  [27] cats.effect.unsafe.WorkerThread.run

--- 400902613 ns (0.06%), 40 samples
  [ 0] strcpy_[k]
  [ 1] fsnotify_handle_inode_event.isra.0_[k]
  [ 2] send_to_group_[k]
  [ 3] fsnotify_[k]
  [ 4] __fsnotify_parent_[k]
  [ 5] vfs_write_[k]
  [ 6] ksys_write_[k]
  [ 7] __x64_sys_write_[k]
  [ 8] do_syscall_64_[k]
  [ 9] entry_SYSCALL_64_after_hwframe_[k]
  [10] write
  [11] sun.nio.ch.FileDispatcherImpl.write0
  [12] sun.nio.ch.FileDispatcherImpl.write
  [13] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [14] sun.nio.ch.IOUtil.write
  [15] sun.nio.ch.IOUtil.write
  [16] sun.nio.ch.FileChannelImpl.write
  [17] java.nio.channels.Channels.writeFullyImpl
  [18] java.nio.channels.Channels.writeFully
  [19] java.nio.channels.Channels$1.write
  [20] java.io.InputStream.transferTo
  [21] java.nio.file.Files.copy
  [22] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [23] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [24] jdk.nio.zipfs.ZipPath.newFileChannel
  [25] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [26] java.nio.channels.FileChannel.open
  [27] java.nio.channels.FileChannel.open
  [28] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [29] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25440.apply
  [30] cats.effect.IOFiber.$anonfun$8
  [31] cats.effect.IOFiber$$Lambda$291.0x0000000800de1900.apply
  [32] cats.effect.unsafe.WorkerThread.blockOn
  [33] scala.concurrent.package$.blocking
  [34] cats.effect.IOFiber.runLoop
  [35] cats.effect.IOFiber.execR
  [36] cats.effect.IOFiber.run
  [37] cats.effect.unsafe.WorkerThread.run

--- 400837445 ns (0.06%), 40 samples
  [ 0] vfs_write_[k]
  [ 1] ksys_write_[k]
  [ 2] __x64_sys_write_[k]
  [ 3] do_syscall_64_[k]
  [ 4] entry_SYSCALL_64_after_hwframe_[k]
  [ 5] write
  [ 6] sun.nio.ch.FileDispatcherImpl.write0
  [ 7] sun.nio.ch.FileDispatcherImpl.write
  [ 8] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [ 9] sun.nio.ch.IOUtil.write
  [10] sun.nio.ch.IOUtil.write
  [11] sun.nio.ch.FileChannelImpl.write
  [12] java.nio.channels.Channels.writeFullyImpl
  [13] java.nio.channels.Channels.writeFully
  [14] java.nio.channels.Channels$1.write
  [15] java.io.InputStream.transferTo
  [16] java.nio.file.Files.copy
  [17] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [18] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [19] jdk.nio.zipfs.ZipPath.newFileChannel
  [20] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [21] java.nio.channels.FileChannel.open
  [22] java.nio.channels.FileChannel.open
  [23] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [24] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25440.apply
  [25] cats.effect.IOFiber.$anonfun$8
  [26] cats.effect.IOFiber$$Lambda$291.0x0000000800de1900.apply
  [27] cats.effect.unsafe.WorkerThread.blockOn
  [28] scala.concurrent.package$.blocking
  [29] cats.effect.IOFiber.runLoop
  [30] cats.effect.IOFiber.execR
  [31] cats.effect.IOFiber.run
  [32] cats.effect.unsafe.WorkerThread.run

--- 390947503 ns (0.05%), 39 samples
  [ 0] copy_user_generic_string_[k]
  [ 1] zfs_uiomove_iter?[zfs]_[k]
  [ 2] zfs_uiomove?[zfs]_[k]
  [ 3] dmu_read_uio_dnode?[zfs]_[k]
  [ 4] dmu_read_uio_dbuf?[zfs]_[k]
  [ 5] mappedread?[zfs]_[k]
  [ 6] zfs_read?[zfs]_[k]
  [ 7] zpl_iter_read?[zfs]_[k]
  [ 8] new_sync_read_[k]
  [ 9] vfs_read_[k]
  [10] __x64_sys_pread64_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] __libc_pread64
  [14] sun.nio.ch.FileDispatcherImpl.pread0
  [15] sun.nio.ch.FileDispatcherImpl.pread
  [16] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [17] sun.nio.ch.IOUtil.read
  [18] sun.nio.ch.IOUtil.read
  [19] sun.nio.ch.FileChannelImpl.readInternal
  [20] sun.nio.ch.FileChannelImpl.read
  [21] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [22] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [23] jdk.nio.zipfs.ZipFileSystem$2.fill
  [24] java.util.zip.InflaterInputStream.read
  [25] java.io.InputStream.transferTo
  [26] java.nio.file.Files.copy
  [27] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [28] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [29] jdk.nio.zipfs.ZipPath.newFileChannel
  [30] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [31] java.nio.channels.FileChannel.open
  [32] java.nio.channels.FileChannel.open
  [33] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [34] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25440.apply
  [35] cats.effect.IOFiber.$anonfun$8
  [36] cats.effect.IOFiber$$Lambda$291.0x0000000800de1900.apply
  [37] cats.effect.unsafe.WorkerThread.blockOn
  [38] scala.concurrent.package$.blocking
  [39] cats.effect.IOFiber.runLoop
  [40] cats.effect.IOFiber.execR
  [41] cats.effect.IOFiber.run
  [42] cats.effect.unsafe.WorkerThread.run

--- 371602046 ns (0.05%), 37 samples
  [ 0] java.util.concurrent.ConcurrentLinkedQueue.poll
  [ 1] cats.effect.unsafe.ScalQueue.poll
  [ 2] cats.effect.unsafe.WorkerThread.run

--- 371359474 ns (0.05%), 37 samples
  [ 0] futex_wake_[k]
  [ 1] do_futex_[k]
  [ 2] __x64_sys_futex_[k]
  [ 3] do_syscall_64_[k]
  [ 4] entry_SYSCALL_64_after_hwframe_[k]
  [ 5] pthread_cond_signal@@GLIBC_2.3.2
  [ 6] jdk.internal.misc.Unsafe.unpark
  [ 7] java.util.concurrent.locks.LockSupport.unpark
  [ 8] cats.effect.unsafe.WorkStealingThreadPool.notifyParked
  [ 9] cats.effect.unsafe.WorkerThread.blockOn
  [10] scala.concurrent.package$.blocking
  [11] cats.effect.IOFiber.runLoop
  [12] cats.effect.IOFiber.execR
  [13] cats.effect.IOFiber.run
  [14] cats.effect.unsafe.WorkerThread.run

--- 370947848 ns (0.05%), 37 samples
  [ 0] kfree_[k]
  [ 1] spl_kmem_free_impl?[spl]_[k]
  [ 2] spl_kmem_free?[spl]_[k]
  [ 3] dsl_dir_tempreserve_clear?[zfs]_[k]
  [ 4] dmu_tx_commit?[zfs]_[k]
  [ 5] zfs_write?[zfs]_[k]
  [ 6] zpl_iter_write?[zfs]_[k]
  [ 7] new_sync_write_[k]
  [ 8] vfs_write_[k]
  [ 9] ksys_write_[k]
  [10] __x64_sys_write_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] write
  [14] sun.nio.ch.FileDispatcherImpl.write0
  [15] sun.nio.ch.FileDispatcherImpl.write
  [16] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.FileChannelImpl.write
  [20] java.nio.channels.Channels.writeFullyImpl
  [21] java.nio.channels.Channels.writeFully
  [22] java.nio.channels.Channels$1.write
  [23] java.io.InputStream.transferTo
  [24] java.nio.file.Files.copy
  [25] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [26] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [27] jdk.nio.zipfs.ZipPath.newFileChannel
  [28] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [29] java.nio.channels.FileChannel.open
  [30] java.nio.channels.FileChannel.open
  [31] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [32] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25440.apply
  [33] cats.effect.IOFiber.$anonfun$8
  [34] cats.effect.IOFiber$$Lambda$291.0x0000000800de1900.apply
  [35] cats.effect.unsafe.WorkerThread.blockOn
  [36] scala.concurrent.package$.blocking
  [37] cats.effect.IOFiber.runLoop
  [38] cats.effect.IOFiber.execR
  [39] cats.effect.IOFiber.run
  [40] cats.effect.unsafe.WorkerThread.run

--- 370883570 ns (0.05%), 37 samples
  [ 0] sa_attr_op?[zfs]_[k]
  [ 1] sa_bulk_update_impl?[zfs]_[k]
  [ 2] sa_bulk_update?[zfs]_[k]
  [ 3] zfs_write?[zfs]_[k]
  [ 4] zpl_iter_write?[zfs]_[k]
  [ 5] new_sync_write_[k]
  [ 6] vfs_write_[k]
  [ 7] ksys_write_[k]
  [ 8] __x64_sys_write_[k]
  [ 9] do_syscall_64_[k]
  [10] entry_SYSCALL_64_after_hwframe_[k]
  [11] write
  [12] sun.nio.ch.FileDispatcherImpl.write0
  [13] sun.nio.ch.FileDispatcherImpl.write
  [14] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [15] sun.nio.ch.IOUtil.write
  [16] sun.nio.ch.IOUtil.write
  [17] sun.nio.ch.FileChannelImpl.write
  [18] java.nio.channels.Channels.writeFullyImpl
  [19] java.nio.channels.Channels.writeFully
  [20] java.nio.channels.Channels$1.write
  [21] java.io.InputStream.transferTo
  [22] java.nio.file.Files.copy
  [23] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [24] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [25] jdk.nio.zipfs.ZipPath.newFileChannel
  [26] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [27] java.nio.channels.FileChannel.open
  [28] java.nio.channels.FileChannel.open
  [29] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [30] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25440.apply
  [31] cats.effect.IOFiber.$anonfun$8
  [32] cats.effect.IOFiber$$Lambda$291.0x0000000800de1900.apply
  [33] cats.effect.unsafe.WorkerThread.blockOn
  [34] scala.concurrent.package$.blocking
  [35] cats.effect.IOFiber.runLoop
  [36] cats.effect.IOFiber.execR
  [37] cats.effect.IOFiber.run
  [38] cats.effect.unsafe.WorkerThread.run

--- 370693656 ns (0.05%), 37 samples
  [ 0] scala.reflect.ManifestFactory$ByteManifest.newArray
  [ 1] scala.reflect.ManifestFactory$ByteManifest.newArray
  [ 2] scala.runtime.Arrays$.newGenericArray
  [ 3] fs2.Chunk.toArray
  [ 4] com.scalamandra.ZipLib$.$anonfun$1
  [ 5] com.scalamandra.ZipLib$$$Lambda$401.0x0000000800e0ccb8.apply
  [ 6] scala.Option.map
  [ 7] com.scalamandra.ZipLib$.com$scalamandra$ZipLib$$anon$1$$_$fs2ReadAllBytes$$anonfun$1$$anonfun$1$$anonfun$2$$anonfun$1
  [ 8] com.scalamandra.ZipLib$$anon$1$$Lambda$391.0x0000000800dfef30.apply
  [ 9] cats.effect.IOFiber.succeeded
  [10] cats.effect.IOFiber.runLoop
  [11] cats.effect.IOFiber.execR
  [12] cats.effect.IOFiber.run
  [13] cats.effect.unsafe.WorkerThread.run

--- 351070240 ns (0.05%), 35 samples
  [ 0] cats.effect.IOFiber.runLoop
  [ 1] cats.effect.IOFiber.execR
  [ 2] cats.effect.IOFiber.run
  [ 3] cats.effect.unsafe.WorkerThread.run

--- 350851964 ns (0.05%), 35 samples
  [ 0] memset_[k]
  [ 1] spl_kmem_cache_alloc?[spl]_[k]
  [ 2] zio_data_buf_alloc?[zfs]_[k]
  [ 3] arc_get_data_buf?[zfs]_[k]
  [ 4] arc_buf_alloc_impl?[zfs]_[k]
  [ 5] arc_alloc_buf?[zfs]_[k]
  [ 6] dbuf_new_size?[zfs]_[k]
  [ 7] dnode_set_blksz?[zfs]_[k]
  [ 8] dmu_object_set_blocksize?[zfs]_[k]
  [ 9] zfs_grow_blocksize?[zfs]_[k]
  [10] zfs_write?[zfs]_[k]
  [11] zpl_iter_write?[zfs]_[k]
  [12] new_sync_write_[k]
  [13] vfs_write_[k]
  [14] ksys_write_[k]
  [15] __x64_sys_write_[k]
  [16] do_syscall_64_[k]
  [17] entry_SYSCALL_64_after_hwframe_[k]
  [18] write
  [19] sun.nio.ch.FileDispatcherImpl.write0
  [20] sun.nio.ch.FileDispatcherImpl.write
  [21] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [22] sun.nio.ch.IOUtil.write
  [23] sun.nio.ch.IOUtil.write
  [24] sun.nio.ch.FileChannelImpl.write
  [25] java.nio.channels.Channels.writeFullyImpl
  [26] java.nio.channels.Channels.writeFully
  [27] java.nio.channels.Channels$1.write
  [28] java.io.InputStream.transferTo
  [29] java.nio.file.Files.copy
  [30] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [31] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [32] jdk.nio.zipfs.ZipPath.newFileChannel
  [33] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [34] java.nio.channels.FileChannel.open
  [35] java.nio.channels.FileChannel.open
  [36] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [37] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25440.apply
  [38] cats.effect.IOFiber.$anonfun$8
  [39] cats.effect.IOFiber$$Lambda$291.0x0000000800de1900.apply
  [40] cats.effect.unsafe.WorkerThread.blockOn
  [41] scala.concurrent.package$.blocking
  [42] cats.effect.IOFiber.runLoop
  [43] cats.effect.IOFiber.execR
  [44] cats.effect.IOFiber.run
  [45] cats.effect.unsafe.WorkerThread.run

--- 350726353 ns (0.05%), 35 samples
  [ 0] memcg_slab_post_alloc_hook_[k]
  [ 1] __kmalloc_[k]
  [ 2] inotify_handle_inode_event_[k]
  [ 3] fsnotify_handle_inode_event.isra.0_[k]
  [ 4] send_to_group_[k]
  [ 5] fsnotify_[k]
  [ 6] __fsnotify_parent_[k]
  [ 7] vfs_write_[k]
  [ 8] ksys_write_[k]
  [ 9] __x64_sys_write_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] write
  [13] sun.nio.ch.FileDispatcherImpl.write0
  [14] sun.nio.ch.FileDispatcherImpl.write
  [15] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [16] sun.nio.ch.IOUtil.write
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.FileChannelImpl.write
  [19] java.nio.channels.Channels.writeFullyImpl
  [20] java.nio.channels.Channels.writeFully
  [21] java.nio.channels.Channels$1.write
  [22] java.io.InputStream.transferTo
  [23] java.nio.file.Files.copy
  [24] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [25] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [26] jdk.nio.zipfs.ZipPath.newFileChannel
  [27] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [28] java.nio.channels.FileChannel.open
  [29] java.nio.channels.FileChannel.open
  [30] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [31] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25440.apply
  [32] cats.effect.IOFiber.$anonfun$8
  [33] cats.effect.IOFiber$$Lambda$291.0x0000000800de1900.apply
  [34] cats.effect.unsafe.WorkerThread.blockOn
  [35] scala.concurrent.package$.blocking
  [36] cats.effect.IOFiber.runLoop
  [37] cats.effect.IOFiber.execR
  [38] cats.effect.IOFiber.run
  [39] cats.effect.unsafe.WorkerThread.run

--- 350668737 ns (0.05%), 35 samples
  [ 0] try_charge_memcg_[k]
  [ 1] obj_cgroup_charge_[k]
  [ 2] __kmalloc_[k]
  [ 3] inotify_handle_inode_event_[k]
  [ 4] fsnotify_handle_inode_event.isra.0_[k]
  [ 5] send_to_group_[k]
  [ 6] fsnotify_[k]
  [ 7] __fsnotify_parent_[k]
  [ 8] vfs_write_[k]
  [ 9] ksys_write_[k]
  [10] __x64_sys_write_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] write
  [14] sun.nio.ch.FileDispatcherImpl.write0
  [15] sun.nio.ch.FileDispatcherImpl.write
  [16] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.FileChannelImpl.write
  [20] java.nio.channels.Channels.writeFullyImpl
  [21] java.nio.channels.Channels.writeFully
  [22] java.nio.channels.Channels$1.write
  [23] java.io.InputStream.transferTo
  [24] java.nio.file.Files.copy
  [25] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [26] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [27] jdk.nio.zipfs.ZipPath.newFileChannel
  [28] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [29] java.nio.channels.FileChannel.open
  [30] java.nio.channels.FileChannel.open
  [31] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [32] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25440.apply
  [33] cats.effect.IOFiber.$anonfun$8
  [34] cats.effect.IOFiber$$Lambda$291.0x0000000800de1900.apply
  [35] cats.effect.unsafe.WorkerThread.blockOn
  [36] scala.concurrent.package$.blocking
  [37] cats.effect.IOFiber.runLoop
  [38] cats.effect.IOFiber.execR
  [39] cats.effect.IOFiber.run
  [40] cats.effect.unsafe.WorkerThread.run

--- 340767033 ns (0.05%), 34 samples
  [ 0] sa_attr_op?[zfs]_[k]
  [ 1] sa_bulk_update_impl?[zfs]_[k]
  [ 2] sa_bulk_update?[zfs]_[k]
  [ 3] zfs_write?[zfs]_[k]
  [ 4] zpl_iter_write?[zfs]_[k]
  [ 5] new_sync_write_[k]
  [ 6] vfs_write_[k]
  [ 7] ksys_write_[k]
  [ 8] __x64_sys_write_[k]
  [ 9] do_syscall_64_[k]
  [10] entry_SYSCALL_64_after_hwframe_[k]
  [11] write
  [12] sun.nio.ch.FileDispatcherImpl.write0
  [13] sun.nio.ch.FileDispatcherImpl.write
  [14] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [15] sun.nio.ch.IOUtil.write
  [16] sun.nio.ch.IOUtil.write
  [17] sun.nio.ch.FileChannelImpl.write
  [18] java.nio.channels.Channels.writeFullyImpl
  [19] java.nio.channels.Channels.writeFully
  [20] java.nio.channels.Channels$1.write
  [21] java.io.InputStream.transferTo
  [22] java.nio.file.Files.copy
  [23] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [24] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [25] jdk.nio.zipfs.ZipPath.newFileChannel
  [26] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [27] java.nio.channels.FileChannel.open
  [28] java.nio.channels.FileChannel.open
  [29] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [30] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25440.apply
  [31] cats.effect.IOFiber.$anonfun$8
  [32] cats.effect.IOFiber$$Lambda$291.0x0000000800de1900.apply
  [33] cats.effect.unsafe.WorkerThread.blockOn
  [34] scala.concurrent.package$.blocking
  [35] cats.effect.IOFiber.runLoop
  [36] cats.effect.IOFiber.execR
  [37] cats.effect.IOFiber.run
  [38] cats.effect.unsafe.WorkerThread.run

--- 340692810 ns (0.05%), 34 samples
  [ 0] zil_aitx_compare?[zfs]_[k]
  [ 1] zil_itx_assign?[zfs]_[k]
  [ 2] zfs_log_write?[zfs]_[k]
  [ 3] zfs_write?[zfs]_[k]
  [ 4] zpl_iter_write?[zfs]_[k]
  [ 5] new_sync_write_[k]
  [ 6] vfs_write_[k]
  [ 7] ksys_write_[k]
  [ 8] __x64_sys_write_[k]
  [ 9] do_syscall_64_[k]
  [10] entry_SYSCALL_64_after_hwframe_[k]
  [11] write
  [12] sun.nio.ch.FileDispatcherImpl.write0
  [13] sun.nio.ch.FileDispatcherImpl.write
  [14] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [15] sun.nio.ch.IOUtil.write
  [16] sun.nio.ch.IOUtil.write
  [17] sun.nio.ch.FileChannelImpl.write
  [18] java.nio.channels.Channels.writeFullyImpl
  [19] java.nio.channels.Channels.writeFully
  [20] java.nio.channels.Channels$1.write
  [21] java.io.InputStream.transferTo
  [22] java.nio.file.Files.copy
  [23] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [24] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [25] jdk.nio.zipfs.ZipPath.newFileChannel
  [26] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [27] java.nio.channels.FileChannel.open
  [28] java.nio.channels.FileChannel.open
  [29] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [30] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25440.apply
  [31] cats.effect.IOFiber.$anonfun$8
  [32] cats.effect.IOFiber$$Lambda$291.0x0000000800de1900.apply
  [33] cats.effect.unsafe.WorkerThread.blockOn
  [34] scala.concurrent.package$.blocking
  [35] cats.effect.IOFiber.runLoop
  [36] cats.effect.IOFiber.execR
  [37] cats.effect.IOFiber.run
  [38] cats.effect.unsafe.WorkerThread.run

--- 340653785 ns (0.05%), 34 samples
  [ 0] mod_memcg_state_[k]
  [ 1] memcg_account_kmem_[k]
  [ 2] obj_cgroup_charge_[k]
  [ 3] __kmalloc_[k]
  [ 4] inotify_handle_inode_event_[k]
  [ 5] fsnotify_handle_inode_event.isra.0_[k]
  [ 6] send_to_group_[k]
  [ 7] fsnotify_[k]
  [ 8] __fsnotify_parent_[k]
  [ 9] vfs_write_[k]
  [10] ksys_write_[k]
  [11] __x64_sys_write_[k]
  [12] do_syscall_64_[k]
  [13] entry_SYSCALL_64_after_hwframe_[k]
  [14] write
  [15] sun.nio.ch.FileDispatcherImpl.write0
  [16] sun.nio.ch.FileDispatcherImpl.write
  [17] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.IOUtil.write
  [20] sun.nio.ch.FileChannelImpl.write
  [21] java.nio.channels.Channels.writeFullyImpl
  [22] java.nio.channels.Channels.writeFully
  [23] java.nio.channels.Channels$1.write
  [24] java.io.InputStream.transferTo
  [25] java.nio.file.Files.copy
  [26] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [27] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [28] jdk.nio.zipfs.ZipPath.newFileChannel
  [29] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [30] java.nio.channels.FileChannel.open
  [31] java.nio.channels.FileChannel.open
  [32] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [33] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25440.apply
  [34] cats.effect.IOFiber.$anonfun$8
  [35] cats.effect.IOFiber$$Lambda$291.0x0000000800de1900.apply
  [36] cats.effect.unsafe.WorkerThread.blockOn
  [37] scala.concurrent.package$.blocking
  [38] cats.effect.IOFiber.runLoop
  [39] cats.effect.IOFiber.execR
  [40] cats.effect.IOFiber.run
  [41] cats.effect.unsafe.WorkerThread.run

--- 330750583 ns (0.05%), 33 samples
  [ 0] _raw_spin_unlock_irqrestore_[k]
  [ 1] try_to_wake_up_[k]
  [ 2] wake_up_q_[k]
  [ 3] futex_wake_[k]
  [ 4] do_futex_[k]
  [ 5] __x64_sys_futex_[k]
  [ 6] do_syscall_64_[k]
  [ 7] entry_SYSCALL_64_after_hwframe_[k]
  [ 8] pthread_cond_signal@@GLIBC_2.3.2
  [ 9] jdk.internal.misc.Unsafe.unpark
  [10] java.util.concurrent.locks.LockSupport.unpark
  [11] cats.effect.unsafe.WorkStealingThreadPool.notifyParked
  [12] cats.effect.unsafe.WorkerThread.blockOn
  [13] scala.concurrent.package$.blocking
  [14] cats.effect.IOFiber.runLoop
  [15] cats.effect.IOFiber.execR
  [16] cats.effect.IOFiber.run
  [17] cats.effect.unsafe.WorkerThread.run

--- 330433892 ns (0.05%), 33 samples
  [ 0] java.nio.HeapByteBuffer.<init>
  [ 1] java.nio.ByteBuffer.allocate
  [ 2] fs2.io.file.FileHandleCompanionPlatform$$anon$1.read$$anonfun$1
  [ 3] fs2.io.file.FileHandleCompanionPlatform$$anon$1$$Lambda$383.0x0000000800dfe068.apply
  [ 4] cats.effect.IOFiber.$anonfun$8
  [ 5] cats.effect.IOFiber$$Lambda$291.0x0000000800de1900.apply
  [ 6] cats.effect.unsafe.WorkerThread.blockOn
  [ 7] scala.concurrent.package$.blocking
  [ 8] cats.effect.IOFiber.runLoop
  [ 9] cats.effect.IOFiber.execR
  [10] cats.effect.IOFiber.run
  [11] cats.effect.unsafe.WorkerThread.run

--- 320903794 ns (0.04%), 32 samples
  [ 0] _raw_spin_unlock_irqrestore_[k]
  [ 1] __wake_up_common_lock_[k]
  [ 2] __wake_up_[k]
  [ 3] fsnotify_insert_event_[k]
  [ 4] inotify_handle_inode_event_[k]
  [ 5] fsnotify_handle_inode_event.isra.0_[k]
  [ 6] send_to_group_[k]
  [ 7] fsnotify_[k]
  [ 8] __fsnotify_parent_[k]
  [ 9] __fput_[k]
  [10] ____fput_[k]
  [11] task_work_run_[k]
  [12] exit_to_user_mode_loop_[k]
  [13] exit_to_user_mode_prepare_[k]
  [14] syscall_exit_to_user_mode_[k]
  [15] do_syscall_64_[k]
  [16] entry_SYSCALL_64_after_hwframe_[k]
  [17] __close
  [18] java.io.FileDescriptor.close0
  [19] java.io.FileDescriptor.close
  [20] java.io.FileDescriptor$1.close
  [21] sun.nio.ch.FileChannelImpl$Closer.run
  [22] jdk.internal.ref.CleanerImpl$PhantomCleanableRef.performCleanup
  [23] jdk.internal.ref.PhantomCleanable.clean
  [24] sun.nio.ch.FileChannelImpl.implCloseChannel
  [25] java.nio.channels.spi.AbstractInterruptibleChannel.close
  [26] java.nio.file.Files.createFile
  [27] java.nio.file.TempFileHelper.create
  [28] java.nio.file.TempFileHelper.createTempFile
  [29] java.nio.file.Files.createTempFile
  [30] jdk.nio.zipfs.ZipFileSystem.createTempFileInSameDirectoryAs
  [31] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [32] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [33] jdk.nio.zipfs.ZipPath.newFileChannel
  [34] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [35] java.nio.channels.FileChannel.open
  [36] java.nio.channels.FileChannel.open
  [37] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [38] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25440.apply
  [39] cats.effect.IOFiber.$anonfun$8
  [40] cats.effect.IOFiber$$Lambda$291.0x0000000800de1900.apply
  [41] cats.effect.unsafe.WorkerThread.blockOn
  [42] scala.concurrent.package$.blocking
  [43] cats.effect.IOFiber.runLoop
  [44] cats.effect.IOFiber.execR
  [45] cats.effect.IOFiber.run
  [46] cats.effect.unsafe.WorkerThread.run

--- 311161567 ns (0.04%), 31 samples
  [ 0] futex_wake_mark_[k]
  [ 1] futex_wake_[k]
  [ 2] do_futex_[k]
  [ 3] __x64_sys_futex_[k]
  [ 4] do_syscall_64_[k]
  [ 5] entry_SYSCALL_64_after_hwframe_[k]
  [ 6] pthread_cond_signal@@GLIBC_2.3.2
  [ 7] jdk.internal.misc.Unsafe.unpark
  [ 8] java.util.concurrent.locks.LockSupport.unpark
  [ 9] cats.effect.unsafe.WorkStealingThreadPool.notifyParked
  [10] cats.effect.unsafe.WorkerThread.blockOn
  [11] scala.concurrent.package$.blocking
  [12] cats.effect.IOFiber.runLoop
  [13] cats.effect.IOFiber.execR
  [14] cats.effect.IOFiber.run
  [15] cats.effect.unsafe.WorkerThread.run

--- 310945407 ns (0.04%), 31 samples
  [ 0] __vfprintf_internal
  [ 1] [unknown]
  [ 2] java.lang.Thread.setNativeName
  [ 3] java.lang.Thread.setName
  [ 4] cats.effect.unsafe.WorkerThread.init
  [ 5] cats.effect.unsafe.WorkerThread.run

--- 310669377 ns (0.04%), 31 samples
  [ 0] java.nio.HeapByteBuffer.<init>
  [ 1] java.nio.ByteBuffer.allocate
  [ 2] fs2.io.file.FileHandleCompanionPlatform$$anon$1.read$$anonfun$1
  [ 3] fs2.io.file.FileHandleCompanionPlatform$$anon$1$$Lambda$383.0x0000000800dfe068.apply
  [ 4] cats.effect.IOFiber.$anonfun$8
  [ 5] cats.effect.IOFiber$$Lambda$291.0x0000000800de1900.apply
  [ 6] cats.effect.unsafe.WorkerThread.blockOn
  [ 7] scala.concurrent.package$.blocking
  [ 8] cats.effect.IOFiber.runLoop
  [ 9] cats.effect.IOFiber.execR
  [10] cats.effect.IOFiber.run
  [11] cats.effect.unsafe.WorkerThread.run

--- 310606673 ns (0.04%), 31 samples
  [ 0] __get_obj_cgroup_from_memcg_[k]
  [ 1] get_obj_cgroup_from_current_[k]
  [ 2] __kmalloc_[k]
  [ 3] inotify_handle_inode_event_[k]
  [ 4] fsnotify_handle_inode_event.isra.0_[k]
  [ 5] send_to_group_[k]
  [ 6] fsnotify_[k]
  [ 7] __fsnotify_parent_[k]
  [ 8] vfs_write_[k]
  [ 9] ksys_write_[k]
  [10] __x64_sys_write_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] write
  [14] sun.nio.ch.FileDispatcherImpl.write0
  [15] sun.nio.ch.FileDispatcherImpl.write
  [16] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.FileChannelImpl.write
  [20] java.nio.channels.Channels.writeFullyImpl
  [21] java.nio.channels.Channels.writeFully
  [22] java.nio.channels.Channels$1.write
  [23] java.io.InputStream.transferTo
  [24] java.nio.file.Files.copy
  [25] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [26] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [27] jdk.nio.zipfs.ZipPath.newFileChannel
  [28] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [29] java.nio.channels.FileChannel.open
  [30] java.nio.channels.FileChannel.open
  [31] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [32] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25440.apply
  [33] cats.effect.IOFiber.$anonfun$8
  [34] cats.effect.IOFiber$$Lambda$291.0x0000000800de1900.apply
  [35] cats.effect.unsafe.WorkerThread.blockOn
  [36] scala.concurrent.package$.blocking
  [37] cats.effect.IOFiber.runLoop
  [38] cats.effect.IOFiber.execR
  [39] cats.effect.IOFiber.run
  [40] cats.effect.unsafe.WorkerThread.run

--- 307503953 ns (0.04%), 30 samples
  [ 0] Unsafe_Park
  [ 1] jdk.internal.misc.Unsafe.park
  [ 2] java.util.concurrent.locks.LockSupport.parkNanos
  [ 3] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos
  [ 4] java.util.concurrent.ArrayBlockingQueue.poll
  [ 5] cats.effect.IOPlatform.$anonfun$1
  [ 6] cats.effect.IOPlatform$$Lambda$276.0x0000000800ddf0b8.apply
  [ 7] scala.concurrent.BlockContext$DefaultBlockContext$.blockOn
  [ 8] scala.concurrent.package$.blocking
  [ 9] cats.effect.IOPlatform.unsafeRunTimed
  [10] cats.effect.IOPlatform.unsafeRunSync
  [11] com.scalamandra.ZipBench.fs2ReadAllBytes
  [12] com.scalamandra.jmh_generated.ZipBench_fs2ReadAllBytes_jmhTest.fs2ReadAllBytes_thrpt_jmhStub
  [13] com.scalamandra.jmh_generated.ZipBench_fs2ReadAllBytes_jmhTest.fs2ReadAllBytes_Throughput
  [14] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [15] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [16] java.lang.reflect.Method.invoke
  [17] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [18] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [19] java.util.concurrent.FutureTask.run
  [20] java.util.concurrent.Executors$RunnableAdapter.call
  [21] java.util.concurrent.FutureTask.run
  [22] java.util.concurrent.ThreadPoolExecutor.runWorker
  [23] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [24] java.lang.Thread.run

--- 300718886 ns (0.04%), 30 samples
  [ 0] memset_[k]
  [ 1] spl_kmem_cache_alloc?[spl]_[k]
  [ 2] zio_data_buf_alloc?[zfs]_[k]
  [ 3] zil_itx_create?[zfs]_[k]
  [ 4] zfs_log_write?[zfs]_[k]
  [ 5] zfs_write?[zfs]_[k]
  [ 6] zpl_iter_write?[zfs]_[k]
  [ 7] new_sync_write_[k]
  [ 8] vfs_write_[k]
  [ 9] ksys_write_[k]
  [10] __x64_sys_write_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] write
  [14] sun.nio.ch.FileDispatcherImpl.write0
  [15] sun.nio.ch.FileDispatcherImpl.write
  [16] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.FileChannelImpl.write
  [20] java.nio.channels.Channels.writeFullyImpl
  [21] java.nio.channels.Channels.writeFully
  [22] java.nio.channels.Channels$1.write
  [23] java.io.InputStream.transferTo
  [24] java.nio.file.Files.copy
  [25] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [26] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [27] jdk.nio.zipfs.ZipPath.newFileChannel
  [28] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [29] java.nio.channels.FileChannel.open
  [30] java.nio.channels.FileChannel.open
  [31] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [32] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25440.apply
  [33] cats.effect.IOFiber.$anonfun$8
  [34] cats.effect.IOFiber$$Lambda$291.0x0000000800de1900.apply
  [35] cats.effect.unsafe.WorkerThread.blockOn
  [36] scala.concurrent.package$.blocking
  [37] cats.effect.IOFiber.runLoop
  [38] cats.effect.IOFiber.execR
  [39] cats.effect.IOFiber.run
  [40] cats.effect.unsafe.WorkerThread.run

--- 300704774 ns (0.04%), 30 samples
  [ 0] Unsafe_Park
  [ 1] jdk.internal.misc.Unsafe.park
  [ 2] java.util.concurrent.locks.LockSupport.park
  [ 3] cats.effect.unsafe.WorkerThread.parkLoop$1
  [ 4] cats.effect.unsafe.WorkerThread.run

--- 300671943 ns (0.04%), 30 samples
  [ 0] _raw_spin_unlock_irqrestore_[k]
  [ 1] try_to_wake_up_[k]
  [ 2] wake_up_q_[k]
  [ 3] futex_wake_[k]
  [ 4] do_futex_[k]
  [ 5] __x64_sys_futex_[k]
  [ 6] do_syscall_64_[k]
  [ 7] entry_SYSCALL_64_after_hwframe_[k]
  [ 8] pthread_cond_signal@@GLIBC_2.3.2
  [ 9] jdk.internal.misc.Unsafe.unpark
  [10] java.util.concurrent.locks.LockSupport.unpark
  [11] java.util.concurrent.LinkedTransferQueue$Node.tryMatch
  [12] java.util.concurrent.LinkedTransferQueue.xfer
  [13] java.util.concurrent.LinkedTransferQueue.transfer
  [14] cats.effect.unsafe.WorkerThread.blockOn
  [15] scala.concurrent.package$.blocking
  [16] cats.effect.IOFiber.runLoop
  [17] cats.effect.IOFiber.execR
  [18] cats.effect.IOFiber.run
  [19] cats.effect.unsafe.WorkerThread.run

--- 300666354 ns (0.04%), 30 samples
  [ 0] obj_cgroup_charge_[k]
  [ 1] __kmalloc_[k]
  [ 2] inotify_handle_inode_event_[k]
  [ 3] fsnotify_handle_inode_event.isra.0_[k]
  [ 4] send_to_group_[k]
  [ 5] fsnotify_[k]
  [ 6] __fsnotify_parent_[k]
  [ 7] vfs_write_[k]
  [ 8] ksys_write_[k]
  [ 9] __x64_sys_write_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] write
  [13] sun.nio.ch.FileDispatcherImpl.write0
  [14] sun.nio.ch.FileDispatcherImpl.write
  [15] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [16] sun.nio.ch.IOUtil.write
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.FileChannelImpl.write
  [19] java.nio.channels.Channels.writeFullyImpl
  [20] java.nio.channels.Channels.writeFully
  [21] java.nio.channels.Channels$1.write
  [22] java.io.InputStream.transferTo
  [23] java.nio.file.Files.copy
  [24] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [25] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [26] jdk.nio.zipfs.ZipPath.newFileChannel
  [27] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [28] java.nio.channels.FileChannel.open
  [29] java.nio.channels.FileChannel.open
  [30] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [31] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25440.apply
  [32] cats.effect.IOFiber.$anonfun$8
  [33] cats.effect.IOFiber$$Lambda$291.0x0000000800de1900.apply
  [34] cats.effect.unsafe.WorkerThread.blockOn
  [35] scala.concurrent.package$.blocking
  [36] cats.effect.IOFiber.runLoop
  [37] cats.effect.IOFiber.execR
  [38] cats.effect.IOFiber.run
  [39] cats.effect.unsafe.WorkerThread.run

--- 300655119 ns (0.04%), 30 samples
  [ 0] jni_GetPrimitiveArrayCritical
  [ 1] Java_java_util_zip_Inflater_inflateBytesBytes
  [ 2] java.util.zip.Inflater.inflateBytesBytes
  [ 3] java.util.zip.Inflater.inflate
  [ 4] java.util.zip.InflaterInputStream.read
  [ 5] java.io.InputStream.transferTo
  [ 6] java.nio.file.Files.copy
  [ 7] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [ 8] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [ 9] jdk.nio.zipfs.ZipPath.newFileChannel
  [10] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [11] java.nio.channels.FileChannel.open
  [12] java.nio.channels.FileChannel.open
  [13] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [14] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25440.apply
  [15] cats.effect.IOFiber.$anonfun$8
  [16] cats.effect.IOFiber$$Lambda$291.0x0000000800de1900.apply
  [17] cats.effect.unsafe.WorkerThread.blockOn
  [18] scala.concurrent.package$.blocking
  [19] cats.effect.IOFiber.runLoop
  [20] cats.effect.IOFiber.execR
  [21] cats.effect.IOFiber.run
  [22] cats.effect.unsafe.WorkerThread.run

--- 300647595 ns (0.04%), 30 samples
  [ 0] vfs_write_[k]
  [ 1] ksys_write_[k]
  [ 2] __x64_sys_write_[k]
  [ 3] do_syscall_64_[k]
  [ 4] entry_SYSCALL_64_after_hwframe_[k]
  [ 5] write
  [ 6] sun.nio.ch.FileDispatcherImpl.write0
  [ 7] sun.nio.ch.FileDispatcherImpl.write
  [ 8] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [ 9] sun.nio.ch.IOUtil.write
  [10] sun.nio.ch.IOUtil.write
  [11] sun.nio.ch.FileChannelImpl.write
  [12] java.nio.channels.Channels.writeFullyImpl
  [13] java.nio.channels.Channels.writeFully
  [14] java.nio.channels.Channels$1.write
  [15] java.io.InputStream.transferTo
  [16] java.nio.file.Files.copy
  [17] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [18] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [19] jdk.nio.zipfs.ZipPath.newFileChannel
  [20] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [21] java.nio.channels.FileChannel.open
  [22] java.nio.channels.FileChannel.open
  [23] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [24] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25440.apply
  [25] cats.effect.IOFiber.$anonfun$8
  [26] cats.effect.IOFiber$$Lambda$291.0x0000000800de1900.apply
  [27] cats.effect.unsafe.WorkerThread.blockOn
  [28] scala.concurrent.package$.blocking
  [29] cats.effect.IOFiber.runLoop
  [30] cats.effect.IOFiber.execR
  [31] cats.effect.IOFiber.run
  [32] cats.effect.unsafe.WorkerThread.run

--- 290729543 ns (0.04%), 29 samples
  [ 0] dsl_dir_phys?[zfs]_[k]
  [ 1] dsl_dir_tempreserve_space?[zfs]_[k]
  [ 2] dmu_tx_try_assign?[zfs]_[k]
  [ 3] dmu_tx_assign?[zfs]_[k]
  [ 4] zfs_write?[zfs]_[k]
  [ 5] zpl_iter_write?[zfs]_[k]
  [ 6] new_sync_write_[k]
  [ 7] vfs_write_[k]
  [ 8] ksys_write_[k]
  [ 9] __x64_sys_write_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] write
  [13] sun.nio.ch.FileDispatcherImpl.write0
  [14] sun.nio.ch.FileDispatcherImpl.write
  [15] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [16] sun.nio.ch.IOUtil.write
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.FileChannelImpl.write
  [19] java.nio.channels.Channels.writeFullyImpl
  [20] java.nio.channels.Channels.writeFully
  [21] java.nio.channels.Channels$1.write
  [22] java.io.InputStream.transferTo
  [23] java.nio.file.Files.copy
  [24] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [25] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [26] jdk.nio.zipfs.ZipPath.newFileChannel
  [27] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [28] java.nio.channels.FileChannel.open
  [29] java.nio.channels.FileChannel.open
  [30] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [31] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25440.apply
  [32] cats.effect.IOFiber.$anonfun$8
  [33] cats.effect.IOFiber$$Lambda$291.0x0000000800de1900.apply
  [34] cats.effect.unsafe.WorkerThread.blockOn
  [35] scala.concurrent.package$.blocking
  [36] cats.effect.IOFiber.runLoop
  [37] cats.effect.IOFiber.execR
  [38] cats.effect.IOFiber.run
  [39] cats.effect.unsafe.WorkerThread.run

--- 290719371 ns (0.04%), 29 samples
  [ 0] kfree_[k]
  [ 1] spl_kmem_free_impl?[spl]_[k]
  [ 2] spl_kmem_free?[spl]_[k]
  [ 3] dmu_tx_destroy?[zfs]_[k]
  [ 4] dmu_tx_commit?[zfs]_[k]
  [ 5] zfs_write?[zfs]_[k]
  [ 6] zpl_iter_write?[zfs]_[k]
  [ 7] new_sync_write_[k]
  [ 8] vfs_write_[k]
  [ 9] ksys_write_[k]
  [10] __x64_sys_write_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] write
  [14] sun.nio.ch.FileDispatcherImpl.write0
  [15] sun.nio.ch.FileDispatcherImpl.write
  [16] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.FileChannelImpl.write
  [20] java.nio.channels.Channels.writeFullyImpl
  [21] java.nio.channels.Channels.writeFully
  [22] java.nio.channels.Channels$1.write
  [23] java.io.InputStream.transferTo
  [24] java.nio.file.Files.copy
  [25] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [26] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [27] jdk.nio.zipfs.ZipPath.newFileChannel
  [28] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [29] java.nio.channels.FileChannel.open
  [30] java.nio.channels.FileChannel.open
  [31] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [32] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25440.apply
  [33] cats.effect.IOFiber.$anonfun$8
  [34] cats.effect.IOFiber$$Lambda$291.0x0000000800de1900.apply
  [35] cats.effect.unsafe.WorkerThread.blockOn
  [36] scala.concurrent.package$.blocking
  [37] cats.effect.IOFiber.runLoop
  [38] cats.effect.IOFiber.execR
  [39] cats.effect.IOFiber.run
  [40] cats.effect.unsafe.WorkerThread.run

--- 280693547 ns (0.04%), 28 samples
  [ 0] memset_[k]
  [ 1] spl_kmem_cache_alloc?[spl]_[k]
  [ 2] zio_data_buf_alloc?[zfs]_[k]
  [ 3] arc_get_data_buf?[zfs]_[k]
  [ 4] arc_buf_alloc_impl?[zfs]_[k]
  [ 5] arc_alloc_buf?[zfs]_[k]
  [ 6] dbuf_alloc_arcbuf?[zfs]_[k]
  [ 7] dbuf_noread?[zfs]_[k]
  [ 8] dmu_buf_will_fill?[zfs]_[k]
  [ 9] dmu_write_uio_dnode?[zfs]_[k]
  [10] dmu_write_uio_dbuf?[zfs]_[k]
  [11] zfs_write?[zfs]_[k]
  [12] zpl_iter_write?[zfs]_[k]
  [13] new_sync_write_[k]
  [14] vfs_write_[k]
  [15] ksys_write_[k]
  [16] __x64_sys_write_[k]
  [17] do_syscall_64_[k]
  [18] entry_SYSCALL_64_after_hwframe_[k]
  [19] write
  [20] sun.nio.ch.FileDispatcherImpl.write0
  [21] sun.nio.ch.FileDispatcherImpl.write
  [22] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [23] sun.nio.ch.IOUtil.write
  [24] sun.nio.ch.IOUtil.write
  [25] sun.nio.ch.FileChannelImpl.write
  [26] java.nio.channels.Channels.writeFullyImpl
  [27] java.nio.channels.Channels.writeFully
  [28] java.nio.channels.Channels$1.write
  [29] java.io.InputStream.transferTo
  [30] java.nio.file.Files.copy
  [31] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [32] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [33] jdk.nio.zipfs.ZipPath.newFileChannel
  [34] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [35] java.nio.channels.FileChannel.open
  [36] java.nio.channels.FileChannel.open
  [37] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [38] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25440.apply
  [39] cats.effect.IOFiber.$anonfun$8
  [40] cats.effect.IOFiber$$Lambda$291.0x0000000800de1900.apply
  [41] cats.effect.unsafe.WorkerThread.blockOn
  [42] scala.concurrent.package$.blocking
  [43] cats.effect.IOFiber.runLoop
  [44] cats.effect.IOFiber.execR
  [45] cats.effect.IOFiber.run
  [46] cats.effect.unsafe.WorkerThread.run

--- 280527275 ns (0.04%), 28 samples
  [ 0] strcpy_[k]
  [ 1] fsnotify_handle_inode_event.isra.0_[k]
  [ 2] send_to_group_[k]
  [ 3] fsnotify_[k]
  [ 4] __fsnotify_parent_[k]
  [ 5] vfs_write_[k]
  [ 6] ksys_write_[k]
  [ 7] __x64_sys_write_[k]
  [ 8] do_syscall_64_[k]
  [ 9] entry_SYSCALL_64_after_hwframe_[k]
  [10] write
  [11] sun.nio.ch.FileDispatcherImpl.write0
  [12] sun.nio.ch.FileDispatcherImpl.write
  [13] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [14] sun.nio.ch.IOUtil.write
  [15] sun.nio.ch.IOUtil.write
  [16] sun.nio.ch.FileChannelImpl.write
  [17] java.nio.channels.Channels.writeFullyImpl
  [18] java.nio.channels.Channels.writeFully
  [19] java.nio.channels.Channels$1.write
  [20] java.io.InputStream.transferTo
  [21] java.nio.file.Files.copy
  [22] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [23] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [24] jdk.nio.zipfs.ZipPath.newFileChannel
  [25] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [26] java.nio.channels.FileChannel.open
  [27] java.nio.channels.FileChannel.open
  [28] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [29] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25440.apply
  [30] cats.effect.IOFiber.$anonfun$8
  [31] cats.effect.IOFiber$$Lambda$291.0x0000000800de1900.apply
  [32] cats.effect.unsafe.WorkerThread.blockOn
  [33] scala.concurrent.package$.blocking
  [34] cats.effect.IOFiber.runLoop
  [35] cats.effect.IOFiber.execR
  [36] cats.effect.IOFiber.run
  [37] cats.effect.unsafe.WorkerThread.run

--- 270942314 ns (0.04%), 27 samples
  [ 0] futex_q_lock_[k]
  [ 1] futex_wait_setup_[k]
  [ 2] futex_wait_[k]
  [ 3] do_futex_[k]
  [ 4] __x64_sys_futex_[k]
  [ 5] do_syscall_64_[k]
  [ 6] entry_SYSCALL_64_after_hwframe_[k]
  [ 7] __futex_abstimed_wait_cancelable64
  [ 8] [unknown]
  [ 9] jdk.internal.misc.Unsafe.park
  [10] java.util.concurrent.locks.LockSupport.park
  [11] cats.effect.unsafe.WorkerThread.parkLoop$1
  [12] cats.effect.unsafe.WorkerThread.run

--- 270586845 ns (0.04%), 27 samples
  [ 0] _raw_spin_unlock_irqrestore_[k]
  [ 1] try_to_wake_up_[k]
  [ 2] wake_up_q_[k]
  [ 3] rwsem_wake.isra.0_[k]
  [ 4] up_write_[k]
  [ 5] open_last_lookups_[k]
  [ 6] path_openat_[k]
  [ 7] do_filp_open_[k]
  [ 8] do_sys_openat2_[k]
  [ 9] __x64_sys_openat_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] __open64
  [13] [unknown]
  [14] sun.nio.fs.UnixNativeDispatcher.open0
  [15] sun.nio.fs.UnixNativeDispatcher.open
  [16] sun.nio.fs.UnixChannelFactory.open
  [17] sun.nio.fs.UnixChannelFactory.newFileChannel
  [18] sun.nio.fs.UnixChannelFactory.newFileChannel
  [19] sun.nio.fs.UnixFileSystemProvider.newByteChannel
  [20] java.nio.file.Files.newByteChannel
  [21] java.nio.file.Files.createFile
  [22] java.nio.file.TempFileHelper.create
  [23] java.nio.file.TempFileHelper.createTempFile
  [24] java.nio.file.Files.createTempFile
  [25] jdk.nio.zipfs.ZipFileSystem.createTempFileInSameDirectoryAs
  [26] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [27] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [28] jdk.nio.zipfs.ZipPath.newFileChannel
  [29] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [30] java.nio.channels.FileChannel.open
  [31] java.nio.channels.FileChannel.open
  [32] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [33] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25440.apply
  [34] cats.effect.IOFiber.$anonfun$8
  [35] cats.effect.IOFiber$$Lambda$291.0x0000000800de1900.apply
  [36] cats.effect.unsafe.WorkerThread.blockOn
  [37] scala.concurrent.package$.blocking
  [38] cats.effect.IOFiber.runLoop
  [39] cats.effect.IOFiber.execR
  [40] cats.effect.IOFiber.run
  [41] cats.effect.unsafe.WorkerThread.run

--- 270579291 ns (0.04%), 27 samples
  [ 0] inotify_handle_inode_event_[k]
  [ 1] fsnotify_handle_inode_event.isra.0_[k]
  [ 2] send_to_group_[k]
  [ 3] fsnotify_[k]
  [ 4] __fsnotify_parent_[k]
  [ 5] vfs_write_[k]
  [ 6] ksys_write_[k]
  [ 7] __x64_sys_write_[k]
  [ 8] do_syscall_64_[k]
  [ 9] entry_SYSCALL_64_after_hwframe_[k]
  [10] write
  [11] sun.nio.ch.FileDispatcherImpl.write0
  [12] sun.nio.ch.FileDispatcherImpl.write
  [13] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [14] sun.nio.ch.IOUtil.write
  [15] sun.nio.ch.IOUtil.write
  [16] sun.nio.ch.FileChannelImpl.write
  [17] java.nio.channels.Channels.writeFullyImpl
  [18] java.nio.channels.Channels.writeFully
  [19] java.nio.channels.Channels$1.write
  [20] java.io.InputStream.transferTo
  [21] java.nio.file.Files.copy
  [22] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [23] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [24] jdk.nio.zipfs.ZipPath.newFileChannel
  [25] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [26] java.nio.channels.FileChannel.open
  [27] java.nio.channels.FileChannel.open
  [28] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [29] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25440.apply
  [30] cats.effect.IOFiber.$anonfun$8
  [31] cats.effect.IOFiber$$Lambda$291.0x0000000800de1900.apply
  [32] cats.effect.unsafe.WorkerThread.blockOn
  [33] scala.concurrent.package$.blocking
  [34] cats.effect.IOFiber.runLoop
  [35] cats.effect.IOFiber.execR
  [36] cats.effect.IOFiber.run
  [37] cats.effect.unsafe.WorkerThread.run

--- 270487917 ns (0.04%), 27 samples
  [ 0] native_queued_spin_lock_slowpath.part.0_[k]
  [ 1] native_queued_spin_lock_slowpath_[k]
  [ 2] _raw_spin_lock_[k]
  [ 3] fsnotify_insert_event_[k]
  [ 4] inotify_handle_inode_event_[k]
  [ 5] fsnotify_handle_inode_event.isra.0_[k]
  [ 6] send_to_group_[k]
  [ 7] fsnotify_[k]
  [ 8] __fsnotify_parent_[k]
  [ 9] vfs_write_[k]
  [10] ksys_write_[k]
  [11] __x64_sys_write_[k]
  [12] do_syscall_64_[k]
  [13] entry_SYSCALL_64_after_hwframe_[k]
  [14] write
  [15] sun.nio.ch.FileDispatcherImpl.write0
  [16] sun.nio.ch.FileDispatcherImpl.write
  [17] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.IOUtil.write
  [20] sun.nio.ch.FileChannelImpl.write
  [21] java.nio.channels.Channels.writeFullyImpl
  [22] java.nio.channels.Channels.writeFully
  [23] java.nio.channels.Channels$1.write
  [24] java.io.InputStream.transferTo
  [25] java.nio.file.Files.copy
  [26] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [27] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [28] jdk.nio.zipfs.ZipPath.newFileChannel
  [29] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [30] java.nio.channels.FileChannel.open
  [31] java.nio.channels.FileChannel.open
  [32] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [33] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25440.apply
  [34] cats.effect.IOFiber.$anonfun$8
  [35] cats.effect.IOFiber$$Lambda$291.0x0000000800de1900.apply
  [36] cats.effect.unsafe.WorkerThread.blockOn
  [37] scala.concurrent.package$.blocking
  [38] cats.effect.IOFiber.runLoop
  [39] cats.effect.IOFiber.execR
  [40] cats.effect.IOFiber.run
  [41] cats.effect.unsafe.WorkerThread.run

--- 260577128 ns (0.04%), 26 samples
  [ 0] __get_obj_cgroup_from_memcg_[k]
  [ 1] get_obj_cgroup_from_current_[k]
  [ 2] __kmalloc_[k]
  [ 3] inotify_handle_inode_event_[k]
  [ 4] fsnotify_handle_inode_event.isra.0_[k]
  [ 5] send_to_group_[k]
  [ 6] fsnotify_[k]
  [ 7] __fsnotify_parent_[k]
  [ 8] vfs_write_[k]
  [ 9] ksys_write_[k]
  [10] __x64_sys_write_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] write
  [14] sun.nio.ch.FileDispatcherImpl.write0
  [15] sun.nio.ch.FileDispatcherImpl.write
  [16] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.FileChannelImpl.write
  [20] java.nio.channels.Channels.writeFullyImpl
  [21] java.nio.channels.Channels.writeFully
  [22] java.nio.channels.Channels$1.write
  [23] java.io.InputStream.transferTo
  [24] java.nio.file.Files.copy
  [25] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [26] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [27] jdk.nio.zipfs.ZipPath.newFileChannel
  [28] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [29] java.nio.channels.FileChannel.open
  [30] java.nio.channels.FileChannel.open
  [31] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [32] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25440.apply
  [33] cats.effect.IOFiber.$anonfun$8
  [34] cats.effect.IOFiber$$Lambda$291.0x0000000800de1900.apply
  [35] cats.effect.unsafe.WorkerThread.blockOn
  [36] scala.concurrent.package$.blocking
  [37] cats.effect.IOFiber.runLoop
  [38] cats.effect.IOFiber.execR
  [39] cats.effect.IOFiber.run
  [40] cats.effect.unsafe.WorkerThread.run

--- 260436655 ns (0.04%), 26 samples
  [ 0] write
  [ 1] sun.nio.ch.FileDispatcherImpl.write0
  [ 2] sun.nio.ch.FileDispatcherImpl.write
  [ 3] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [ 4] sun.nio.ch.IOUtil.write
  [ 5] sun.nio.ch.IOUtil.write
  [ 6] sun.nio.ch.FileChannelImpl.write
  [ 7] java.nio.channels.Channels.writeFullyImpl
  [ 8] java.nio.channels.Channels.writeFully
  [ 9] java.nio.channels.Channels$1.write
  [10] java.io.InputStream.transferTo
  [11] java.nio.file.Files.copy
  [12] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [13] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [14] jdk.nio.zipfs.ZipPath.newFileChannel
  [15] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [16] java.nio.channels.FileChannel.open
  [17] java.nio.channels.FileChannel.open
  [18] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [19] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25440.apply
  [20] cats.effect.IOFiber.$anonfun$8
  [21] cats.effect.IOFiber$$Lambda$291.0x0000000800de1900.apply
  [22] cats.effect.unsafe.WorkerThread.blockOn
  [23] scala.concurrent.package$.blocking
  [24] cats.effect.IOFiber.runLoop
  [25] cats.effect.IOFiber.execR
  [26] cats.effect.IOFiber.run
  [27] cats.effect.unsafe.WorkerThread.run

--- 250969507 ns (0.04%), 25 samples
  [ 0] syscall_enter_from_user_mode_[k]
  [ 1] do_syscall_64_[k]
  [ 2] entry_SYSCALL_64_after_hwframe_[k]
  [ 3] __futex_abstimed_wait_cancelable64
  [ 4] [unknown]
  [ 5] jdk.internal.misc.Unsafe.park
  [ 6] java.util.concurrent.locks.LockSupport.park
  [ 7] cats.effect.unsafe.WorkerThread.parkLoop$1
  [ 8] cats.effect.unsafe.WorkerThread.run

--- 250813075 ns (0.04%), 25 samples
  [ 0] char* UNICODE::as_utf8<signed char>(signed char const*, int&)
  [ 1] java_lang_String::as_utf8_string(oopDesc*)
  [ 2] JVM_SetNativeThreadName
  [ 3] java.lang.Thread.setNativeName
  [ 4] java.lang.Thread.setName
  [ 5] cats.effect.unsafe.WorkerThread.blockOn
  [ 6] scala.concurrent.package$.blocking
  [ 7] cats.effect.IOFiber.runLoop
  [ 8] cats.effect.IOFiber.execR
  [ 9] cats.effect.IOFiber.run
  [10] cats.effect.unsafe.WorkerThread.run

--- 250700864 ns (0.04%), 25 samples
  [ 0] kmem_cache_free_[k]
  [ 1] spl_kmem_cache_free?[spl]_[k]
  [ 2] zio_data_buf_free?[zfs]_[k]
  [ 3] zil_itx_destroy?[zfs]_[k]
  [ 4] zil_remove_async?[zfs]_[k]
  [ 5] zfs_log_remove?[zfs]_[k]
  [ 6] zfs_remove?[zfs]_[k]
  [ 7] zpl_unlink?[zfs]_[k]
  [ 8] vfs_unlink_[k]
  [ 9] do_unlinkat_[k]
  [10] __x64_sys_unlink_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] __GI_unlink
  [14] sun.nio.fs.UnixNativeDispatcher.unlink0
  [15] sun.nio.fs.UnixNativeDispatcher.unlink
  [16] sun.nio.fs.UnixFileSystemProvider.implDelete
  [17] sun.nio.fs.AbstractFileSystemProvider.delete
  [18] java.nio.file.Files.delete
  [19] jdk.nio.zipfs.ZipFileSystem.removeTempPathForEntry
  [20] jdk.nio.zipfs.ZipFileSystem$1.implCloseChannel
  [21] java.nio.channels.spi.AbstractInterruptibleChannel.close
  [22] fs2.io.file.FilesCompanionPlatform.openFileChannel$$anonfun$1$$anonfun$1
  [23] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$openFileChannel$$anonfun$1$$anonfun$adapted$1
  [24] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$307.0x0000000800de3370.apply
  [25] cats.effect.IOFiber.$anonfun$8
  [26] cats.effect.IOFiber$$Lambda$291.0x0000000800de1900.apply
  [27] cats.effect.unsafe.WorkerThread.blockOn
  [28] scala.concurrent.package$.blocking
  [29] cats.effect.IOFiber.runLoop
  [30] cats.effect.IOFiber.execR
  [31] cats.effect.IOFiber.run
  [32] cats.effect.unsafe.WorkerThread.run

--- 250675659 ns (0.04%), 25 samples
  [ 0] zfs_log_write?[zfs]_[k]
  [ 1] zfs_write?[zfs]_[k]
  [ 2] zpl_iter_write?[zfs]_[k]
  [ 3] new_sync_write_[k]
  [ 4] vfs_write_[k]
  [ 5] ksys_write_[k]
  [ 6] __x64_sys_write_[k]
  [ 7] do_syscall_64_[k]
  [ 8] entry_SYSCALL_64_after_hwframe_[k]
  [ 9] write
  [10] sun.nio.ch.FileDispatcherImpl.write0
  [11] sun.nio.ch.FileDispatcherImpl.write
  [12] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [13] sun.nio.ch.IOUtil.write
  [14] sun.nio.ch.IOUtil.write
  [15] sun.nio.ch.FileChannelImpl.write
  [16] java.nio.channels.Channels.writeFullyImpl
  [17] java.nio.channels.Channels.writeFully
  [18] java.nio.channels.Channels$1.write
  [19] java.io.InputStream.transferTo
  [20] java.nio.file.Files.copy
  [21] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [22] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [23] jdk.nio.zipfs.ZipPath.newFileChannel
  [24] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [25] java.nio.channels.FileChannel.open
  [26] java.nio.channels.FileChannel.open
  [27] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [28] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25440.apply
  [29] cats.effect.IOFiber.$anonfun$8
  [30] cats.effect.IOFiber$$Lambda$291.0x0000000800de1900.apply
  [31] cats.effect.unsafe.WorkerThread.blockOn
  [32] scala.concurrent.package$.blocking
  [33] cats.effect.IOFiber.runLoop
  [34] cats.effect.IOFiber.execR
  [35] cats.effect.IOFiber.run
  [36] cats.effect.unsafe.WorkerThread.run

--- 250608728 ns (0.04%), 25 samples
  [ 0] refill_stock_[k]
  [ 1] try_charge_memcg_[k]
  [ 2] obj_cgroup_charge_[k]
  [ 3] __kmalloc_[k]
  [ 4] inotify_handle_inode_event_[k]
  [ 5] fsnotify_handle_inode_event.isra.0_[k]
  [ 6] send_to_group_[k]
  [ 7] fsnotify_[k]
  [ 8] vfs_unlink_[k]
  [ 9] do_unlinkat_[k]
  [10] __x64_sys_unlink_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] __GI_unlink
  [14] sun.nio.fs.UnixNativeDispatcher.unlink0
  [15] sun.nio.fs.UnixNativeDispatcher.unlink
  [16] sun.nio.fs.UnixFileSystemProvider.implDelete
  [17] sun.nio.fs.AbstractFileSystemProvider.deleteIfExists
  [18] java.nio.file.Files.deleteIfExists
  [19] java.nio.file.Files.copy
  [20] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [21] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [22] jdk.nio.zipfs.ZipPath.newFileChannel
  [23] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [24] java.nio.channels.FileChannel.open
  [25] java.nio.channels.FileChannel.open
  [26] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [27] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25440.apply
  [28] cats.effect.IOFiber.$anonfun$8
  [29] cats.effect.IOFiber$$Lambda$291.0x0000000800de1900.apply
  [30] cats.effect.unsafe.WorkerThread.blockOn
  [31] scala.concurrent.package$.blocking
  [32] cats.effect.IOFiber.runLoop
  [33] cats.effect.IOFiber.execR
  [34] cats.effect.IOFiber.run
  [35] cats.effect.unsafe.WorkerThread.run

--- 250585007 ns (0.04%), 25 samples
  [ 0] syscall_enter_from_user_mode_[k]
  [ 1] do_syscall_64_[k]
  [ 2] entry_SYSCALL_64_after_hwframe_[k]
  [ 3] write
  [ 4] sun.nio.ch.FileDispatcherImpl.write0
  [ 5] sun.nio.ch.FileDispatcherImpl.write
  [ 6] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [ 7] sun.nio.ch.IOUtil.write
  [ 8] sun.nio.ch.IOUtil.write
  [ 9] sun.nio.ch.FileChannelImpl.write
  [10] java.nio.channels.Channels.writeFullyImpl
  [11] java.nio.channels.Channels.writeFully
  [12] java.nio.channels.Channels$1.write
  [13] java.io.InputStream.transferTo
  [14] java.nio.file.Files.copy
  [15] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [16] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [17] jdk.nio.zipfs.ZipPath.newFileChannel
  [18] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [19] java.nio.channels.FileChannel.open
  [20] java.nio.channels.FileChannel.open
  [21] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [22] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25440.apply
  [23] cats.effect.IOFiber.$anonfun$8
  [24] cats.effect.IOFiber$$Lambda$291.0x0000000800de1900.apply
  [25] cats.effect.unsafe.WorkerThread.blockOn
  [26] scala.concurrent.package$.blocking
  [27] cats.effect.IOFiber.runLoop
  [28] cats.effect.IOFiber.execR
  [29] cats.effect.IOFiber.run
  [30] cats.effect.unsafe.WorkerThread.run

--- 250527656 ns (0.04%), 25 samples
  [ 0] do_sched_yield_[k]
  [ 1] __x64_sys_sched_yield_[k]
  [ 2] do_syscall_64_[k]
  [ 3] entry_SYSCALL_64_after_hwframe_[k]
  [ 4] __GI___sched_yield
  [ 5] java.lang.Thread.yield
  [ 6] java.util.concurrent.LinkedTransferQueue.awaitMatch
  [ 7] java.util.concurrent.LinkedTransferQueue.xfer
  [ 8] java.util.concurrent.LinkedTransferQueue.poll
  [ 9] cats.effect.unsafe.WorkerThread.run

--- 250381582 ns (0.04%), 25 samples
  [ 0] native_queued_spin_lock_slowpath.part.0_[k]
  [ 1] native_queued_spin_lock_slowpath_[k]
  [ 2] _raw_spin_lock_[k]
  [ 3] fsnotify_insert_event_[k]
  [ 4] inotify_handle_inode_event_[k]
  [ 5] fsnotify_handle_inode_event.isra.0_[k]
  [ 6] send_to_group_[k]
  [ 7] fsnotify_[k]
  [ 8] __fsnotify_parent_[k]
  [ 9] vfs_write_[k]
  [10] ksys_write_[k]
  [11] __x64_sys_write_[k]
  [12] do_syscall_64_[k]
  [13] entry_SYSCALL_64_after_hwframe_[k]
  [14] write
  [15] sun.nio.ch.FileDispatcherImpl.write0
  [16] sun.nio.ch.FileDispatcherImpl.write
  [17] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.IOUtil.write
  [20] sun.nio.ch.FileChannelImpl.write
  [21] java.nio.channels.Channels.writeFullyImpl
  [22] java.nio.channels.Channels.writeFully
  [23] java.nio.channels.Channels$1.write
  [24] java.io.InputStream.transferTo
  [25] java.nio.file.Files.copy
  [26] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [27] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [28] jdk.nio.zipfs.ZipPath.newFileChannel
  [29] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [30] java.nio.channels.FileChannel.open
  [31] java.nio.channels.FileChannel.open
  [32] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [33] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25440.apply
  [34] cats.effect.IOFiber.$anonfun$8
  [35] cats.effect.IOFiber$$Lambda$291.0x0000000800de1900.apply
  [36] cats.effect.unsafe.WorkerThread.blockOn
  [37] scala.concurrent.package$.blocking
  [38] cats.effect.IOFiber.runLoop
  [39] cats.effect.IOFiber.execR
  [40] cats.effect.IOFiber.run
  [41] cats.effect.unsafe.WorkerThread.run

--- 246058773 ns (0.03%), 24 samples
  [ 0] _raw_spin_unlock_irqrestore_[k]
  [ 1] hrtimer_start_range_ns_[k]
  [ 2] hrtimer_sleeper_start_expires_[k]
  [ 3] futex_wait_queue_[k]
  [ 4] futex_wait_[k]
  [ 5] do_futex_[k]
  [ 6] __x64_sys_futex_[k]
  [ 7] do_syscall_64_[k]
  [ 8] entry_SYSCALL_64_after_hwframe_[k]
  [ 9] __futex_abstimed_wait_cancelable64
  [10] [unknown]
  [11] jdk.internal.misc.Unsafe.park
  [12] java.util.concurrent.locks.LockSupport.parkNanos
  [13] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos
  [14] java.util.concurrent.ArrayBlockingQueue.poll
  [15] cats.effect.IOPlatform.$anonfun$1
  [16] cats.effect.IOPlatform$$Lambda$276.0x0000000800ddf0b8.apply
  [17] scala.concurrent.BlockContext$DefaultBlockContext$.blockOn
  [18] scala.concurrent.package$.blocking
  [19] cats.effect.IOPlatform.unsafeRunTimed
  [20] cats.effect.IOPlatform.unsafeRunSync
  [21] com.scalamandra.ZipBench.fs2ReadAllBytes
  [22] com.scalamandra.jmh_generated.ZipBench_fs2ReadAllBytes_jmhTest.fs2ReadAllBytes_thrpt_jmhStub
  [23] com.scalamandra.jmh_generated.ZipBench_fs2ReadAllBytes_jmhTest.fs2ReadAllBytes_Throughput
  [24] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [25] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [26] java.lang.reflect.Method.invoke
  [27] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [28] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [29] java.util.concurrent.FutureTask.run
  [30] java.util.concurrent.Executors$RunnableAdapter.call
  [31] java.util.concurrent.FutureTask.run
  [32] java.util.concurrent.ThreadPoolExecutor.runWorker
  [33] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [34] java.lang.Thread.run

--- 240637258 ns (0.03%), 24 samples
  [ 0] dsl_dir_tempreserve_impl.constprop.0?[zfs]_[k]
  [ 1] dsl_dir_tempreserve_space?[zfs]_[k]
  [ 2] dmu_tx_try_assign?[zfs]_[k]
  [ 3] dmu_tx_assign?[zfs]_[k]
  [ 4] zfs_write?[zfs]_[k]
  [ 5] zpl_iter_write?[zfs]_[k]
  [ 6] new_sync_write_[k]
  [ 7] vfs_write_[k]
  [ 8] ksys_write_[k]
  [ 9] __x64_sys_write_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] write
  [13] sun.nio.ch.FileDispatcherImpl.write0
  [14] sun.nio.ch.FileDispatcherImpl.write
  [15] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [16] sun.nio.ch.IOUtil.write
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.FileChannelImpl.write
  [19] java.nio.channels.Channels.writeFullyImpl
  [20] java.nio.channels.Channels.writeFully
  [21] java.nio.channels.Channels$1.write
  [22] java.io.InputStream.transferTo
  [23] java.nio.file.Files.copy
  [24] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [25] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [26] jdk.nio.zipfs.ZipPath.newFileChannel
  [27] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [28] java.nio.channels.FileChannel.open
  [29] java.nio.channels.FileChannel.open
  [30] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [31] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25440.apply
  [32] cats.effect.IOFiber.$anonfun$8
  [33] cats.effect.IOFiber$$Lambda$291.0x0000000800de1900.apply
  [34] cats.effect.unsafe.WorkerThread.blockOn
  [35] scala.concurrent.package$.blocking
  [36] cats.effect.IOFiber.runLoop
  [37] cats.effect.IOFiber.execR
  [38] cats.effect.IOFiber.run
  [39] cats.effect.unsafe.WorkerThread.run

--- 240610776 ns (0.03%), 24 samples
  [ 0] memset_[k]
  [ 1] spl_kmem_cache_alloc?[spl]_[k]
  [ 2] zio_data_buf_alloc?[zfs]_[k]
  [ 3] arc_get_data_buf?[zfs]_[k]
  [ 4] arc_buf_alloc_impl?[zfs]_[k]
  [ 5] arc_alloc_buf?[zfs]_[k]
  [ 6] dbuf_alloc_arcbuf?[zfs]_[k]
  [ 7] dbuf_noread?[zfs]_[k]
  [ 8] dmu_buf_will_fill?[zfs]_[k]
  [ 9] dmu_write_uio_dnode?[zfs]_[k]
  [10] dmu_write_uio_dbuf?[zfs]_[k]
  [11] zfs_write?[zfs]_[k]
  [12] zpl_iter_write?[zfs]_[k]
  [13] new_sync_write_[k]
  [14] vfs_write_[k]
  [15] ksys_write_[k]
  [16] __x64_sys_write_[k]
  [17] do_syscall_64_[k]
  [18] entry_SYSCALL_64_after_hwframe_[k]
  [19] write
  [20] sun.nio.ch.FileDispatcherImpl.write0
  [21] sun.nio.ch.FileDispatcherImpl.write
  [22] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [23] sun.nio.ch.IOUtil.write
  [24] sun.nio.ch.IOUtil.write
  [25] sun.nio.ch.FileChannelImpl.write
  [26] java.nio.channels.Channels.writeFullyImpl
  [27] java.nio.channels.Channels.writeFully
  [28] java.nio.channels.Channels$1.write
  [29] java.io.InputStream.transferTo
  [30] java.nio.file.Files.copy
  [31] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [32] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [33] jdk.nio.zipfs.ZipPath.newFileChannel
  [34] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [35] java.nio.channels.FileChannel.open
  [36] java.nio.channels.FileChannel.open
  [37] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [38] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25440.apply
  [39] cats.effect.IOFiber.$anonfun$8
  [40] cats.effect.IOFiber$$Lambda$291.0x0000000800de1900.apply
  [41] cats.effect.unsafe.WorkerThread.blockOn
  [42] scala.concurrent.package$.blocking
  [43] cats.effect.IOFiber.runLoop
  [44] cats.effect.IOFiber.execR
  [45] cats.effect.IOFiber.run
  [46] cats.effect.unsafe.WorkerThread.run

--- 240609231 ns (0.03%), 24 samples
  [ 0] zap_hash?[zfs]_[k]
  [ 1] zap_name_alloc?[zfs]_[k]
  [ 2] zap_lookup_impl?[zfs]_[k]
  [ 3] zap_lookup_norm?[zfs]_[k]
  [ 4] zfs_match_find.constprop.0?[zfs]_[k]
  [ 5] zfs_dirent_lock?[zfs]_[k]
  [ 6] zfs_remove?[zfs]_[k]
  [ 7] zpl_unlink?[zfs]_[k]
  [ 8] vfs_unlink_[k]
  [ 9] do_unlinkat_[k]
  [10] __x64_sys_unlink_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] __GI_unlink
  [14] sun.nio.fs.UnixNativeDispatcher.unlink0
  [15] sun.nio.fs.UnixNativeDispatcher.unlink
  [16] sun.nio.fs.UnixFileSystemProvider.implDelete
  [17] sun.nio.fs.AbstractFileSystemProvider.delete
  [18] java.nio.file.Files.delete
  [19] jdk.nio.zipfs.ZipFileSystem.removeTempPathForEntry
  [20] jdk.nio.zipfs.ZipFileSystem$1.implCloseChannel
  [21] java.nio.channels.spi.AbstractInterruptibleChannel.close
  [22] fs2.io.file.FilesCompanionPlatform.openFileChannel$$anonfun$1$$anonfun$1
  [23] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$openFileChannel$$anonfun$1$$anonfun$adapted$1
  [24] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$307.0x0000000800de3370.apply
  [25] cats.effect.IOFiber.$anonfun$8
  [26] cats.effect.IOFiber$$Lambda$291.0x0000000800de1900.apply
  [27] cats.effect.unsafe.WorkerThread.blockOn
  [28] scala.concurrent.package$.blocking
  [29] cats.effect.IOFiber.runLoop
  [30] cats.effect.IOFiber.execR
  [31] cats.effect.IOFiber.run
  [32] cats.effect.unsafe.WorkerThread.run

--- 240569041 ns (0.03%), 24 samples
  [ 0] find_vmap_area_[k]
  [ 1] check_heap_object_[k]
  [ 2] __check_object_size.part.0_[k]
  [ 3] __check_object_size_[k]
  [ 4] zfs_uiomove_iter?[zfs]_[k]
  [ 5] zfs_uiomove?[zfs]_[k]
  [ 6] dmu_read_uio_dnode?[zfs]_[k]
  [ 7] dmu_read_uio_dbuf?[zfs]_[k]
  [ 8] mappedread?[zfs]_[k]
  [ 9] zfs_read?[zfs]_[k]
  [10] zpl_iter_read?[zfs]_[k]
  [11] new_sync_read_[k]
  [12] vfs_read_[k]
  [13] __x64_sys_pread64_[k]
  [14] do_syscall_64_[k]
  [15] entry_SYSCALL_64_after_hwframe_[k]
  [16] __libc_pread64
  [17] sun.nio.ch.FileDispatcherImpl.pread0
  [18] sun.nio.ch.FileDispatcherImpl.pread
  [19] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [20] sun.nio.ch.IOUtil.read
  [21] sun.nio.ch.IOUtil.read
  [22] sun.nio.ch.FileChannelImpl.readInternal
  [23] sun.nio.ch.FileChannelImpl.read
  [24] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [25] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [26] jdk.nio.zipfs.ZipFileSystem$Entry.readLocEXTT
  [27] jdk.nio.zipfs.ZipFileSystem$Entry.readExtra
  [28] jdk.nio.zipfs.ZipFileSystem$Entry.readCEN
  [29] jdk.nio.zipfs.ZipFileSystem$Entry.<init>
  [30] jdk.nio.zipfs.ZipFileSystem.getEntry
  [31] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [32] jdk.nio.zipfs.ZipPath.newFileChannel
  [33] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [34] java.nio.channels.FileChannel.open
  [35] java.nio.channels.FileChannel.open
  [36] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [37] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25440.apply
  [38] cats.effect.IOFiber.$anonfun$8
  [39] cats.effect.IOFiber$$Lambda$291.0x0000000800de1900.apply
  [40] cats.effect.unsafe.WorkerThread.blockOn
  [41] scala.concurrent.package$.blocking
  [42] cats.effect.IOFiber.runLoop
  [43] cats.effect.IOFiber.execR
  [44] cats.effect.IOFiber.run
  [45] cats.effect.unsafe.WorkerThread.run

--- 240448933 ns (0.03%), 24 samples
  [ 0] java.io.InputStream.transferTo
  [ 1] java.nio.file.Files.copy
  [ 2] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [ 3] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [ 4] jdk.nio.zipfs.ZipPath.newFileChannel
  [ 5] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [ 6] java.nio.channels.FileChannel.open
  [ 7] java.nio.channels.FileChannel.open
  [ 8] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [ 9] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25440.apply
  [10] cats.effect.IOFiber.$anonfun$8
  [11] cats.effect.IOFiber$$Lambda$291.0x0000000800de1900.apply
  [12] cats.effect.unsafe.WorkerThread.blockOn
  [13] scala.concurrent.package$.blocking
  [14] cats.effect.IOFiber.runLoop
  [15] cats.effect.IOFiber.execR
  [16] cats.effect.IOFiber.run
  [17] cats.effect.unsafe.WorkerThread.run

--- 240444615 ns (0.03%), 24 samples
  [ 0] mod_memcg_state_[k]
  [ 1] memcg_account_kmem_[k]
  [ 2] obj_cgroup_charge_[k]
  [ 3] __kmalloc_[k]
  [ 4] inotify_handle_inode_event_[k]
  [ 5] fsnotify_handle_inode_event.isra.0_[k]
  [ 6] send_to_group_[k]
  [ 7] fsnotify_[k]
  [ 8] __fsnotify_parent_[k]
  [ 9] vfs_write_[k]
  [10] ksys_write_[k]
  [11] __x64_sys_write_[k]
  [12] do_syscall_64_[k]
  [13] entry_SYSCALL_64_after_hwframe_[k]
  [14] write
  [15] sun.nio.ch.FileDispatcherImpl.write0
  [16] sun.nio.ch.FileDispatcherImpl.write
  [17] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.IOUtil.write
  [20] sun.nio.ch.FileChannelImpl.write
  [21] java.nio.channels.Channels.writeFullyImpl
  [22] java.nio.channels.Channels.writeFully
  [23] java.nio.channels.Channels$1.write
  [24] java.io.InputStream.transferTo
  [25] java.nio.file.Files.copy
  [26] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [27] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [28] jdk.nio.zipfs.ZipPath.newFileChannel
  [29] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [30] java.nio.channels.FileChannel.open
  [31] java.nio.channels.FileChannel.open
  [32] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [33] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25440.apply
  [34] cats.effect.IOFiber.$anonfun$8
  [35] cats.effect.IOFiber$$Lambda$291.0x0000000800de1900.apply
  [36] cats.effect.unsafe.WorkerThread.blockOn
  [37] scala.concurrent.package$.blocking
  [38] cats.effect.IOFiber.runLoop
  [39] cats.effect.IOFiber.execR
  [40] cats.effect.IOFiber.run
  [41] cats.effect.unsafe.WorkerThread.run

--- 240413549 ns (0.03%), 24 samples
  [ 0] sun.nio.ch.FileDispatcherImpl.write0
  [ 1] sun.nio.ch.FileDispatcherImpl.write
  [ 2] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [ 3] sun.nio.ch.IOUtil.write
  [ 4] sun.nio.ch.IOUtil.write
  [ 5] sun.nio.ch.FileChannelImpl.write
  [ 6] java.nio.channels.Channels.writeFullyImpl
  [ 7] java.nio.channels.Channels.writeFully
  [ 8] java.nio.channels.Channels$1.write
  [ 9] java.io.InputStream.transferTo
  [10] java.nio.file.Files.copy
  [11] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [12] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [13] jdk.nio.zipfs.ZipPath.newFileChannel
  [14] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [15] java.nio.channels.FileChannel.open
  [16] java.nio.channels.FileChannel.open
  [17] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [18] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25440.apply
  [19] cats.effect.IOFiber.$anonfun$8
  [20] cats.effect.IOFiber$$Lambda$291.0x0000000800de1900.apply
  [21] cats.effect.unsafe.WorkerThread.blockOn
  [22] scala.concurrent.package$.blocking
  [23] cats.effect.IOFiber.runLoop
  [24] cats.effect.IOFiber.execR
  [25] cats.effect.IOFiber.run
  [26] cats.effect.unsafe.WorkerThread.run

--- 230881103 ns (0.03%), 23 samples
  [ 0] futex_wait_[k]
  [ 1] do_futex_[k]
  [ 2] __x64_sys_futex_[k]
  [ 3] do_syscall_64_[k]
  [ 4] entry_SYSCALL_64_after_hwframe_[k]
  [ 5] __futex_abstimed_wait_cancelable64
  [ 6] [unknown]
  [ 7] jdk.internal.misc.Unsafe.park
  [ 8] java.util.concurrent.locks.LockSupport.park
  [ 9] cats.effect.unsafe.WorkerThread.parkLoop$1
  [10] cats.effect.unsafe.WorkerThread.run

--- 230612571 ns (0.03%), 23 samples
  [ 0] mutex_lock_[k]
  [ 1] dsl_dir_tempreserve_clear?[zfs]_[k]
  [ 2] dmu_tx_commit?[zfs]_[k]
  [ 3] zfs_write?[zfs]_[k]
  [ 4] zpl_iter_write?[zfs]_[k]
  [ 5] new_sync_write_[k]
  [ 6] vfs_write_[k]
  [ 7] ksys_write_[k]
  [ 8] __x64_sys_write_[k]
  [ 9] do_syscall_64_[k]
  [10] entry_SYSCALL_64_after_hwframe_[k]
  [11] write
  [12] sun.nio.ch.FileDispatcherImpl.write0
  [13] sun.nio.ch.FileDispatcherImpl.write
  [14] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [15] sun.nio.ch.IOUtil.write
  [16] sun.nio.ch.IOUtil.write
  [17] sun.nio.ch.FileChannelImpl.write
  [18] java.nio.channels.Channels.writeFullyImpl
  [19] java.nio.channels.Channels.writeFully
  [20] java.nio.channels.Channels$1.write
  [21] java.io.InputStream.transferTo
  [22] java.nio.file.Files.copy
  [23] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [24] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [25] jdk.nio.zipfs.ZipPath.newFileChannel
  [26] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [27] java.nio.channels.FileChannel.open
  [28] java.nio.channels.FileChannel.open
  [29] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [30] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25440.apply
  [31] cats.effect.IOFiber.$anonfun$8
  [32] cats.effect.IOFiber$$Lambda$291.0x0000000800de1900.apply
  [33] cats.effect.unsafe.WorkerThread.blockOn
  [34] scala.concurrent.package$.blocking
  [35] cats.effect.IOFiber.runLoop
  [36] cats.effect.IOFiber.execR
  [37] cats.effect.IOFiber.run
  [38] cats.effect.unsafe.WorkerThread.run

--- 230608901 ns (0.03%), 23 samples
  [ 0] _raw_spin_unlock_irqrestore_[k]
  [ 1] try_to_wake_up_[k]
  [ 2] wake_up_q_[k]
  [ 3] rwsem_wake.isra.0_[k]
  [ 4] up_write_[k]
  [ 5] do_unlinkat_[k]
  [ 6] __x64_sys_unlink_[k]
  [ 7] do_syscall_64_[k]
  [ 8] entry_SYSCALL_64_after_hwframe_[k]
  [ 9] __GI_unlink
  [10] sun.nio.fs.UnixNativeDispatcher.unlink0
  [11] sun.nio.fs.UnixNativeDispatcher.unlink
  [12] sun.nio.fs.UnixFileSystemProvider.implDelete
  [13] sun.nio.fs.AbstractFileSystemProvider.deleteIfExists
  [14] java.nio.file.Files.deleteIfExists
  [15] java.nio.file.Files.copy
  [16] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [17] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [18] jdk.nio.zipfs.ZipPath.newFileChannel
  [19] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [20] java.nio.channels.FileChannel.open
  [21] java.nio.channels.FileChannel.open
  [22] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [23] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25440.apply
  [24] cats.effect.IOFiber.$anonfun$8
  [25] cats.effect.IOFiber$$Lambda$291.0x0000000800de1900.apply
  [26] cats.effect.unsafe.WorkerThread.blockOn
  [27] scala.concurrent.package$.blocking
  [28] cats.effect.IOFiber.runLoop
  [29] cats.effect.IOFiber.execR
  [30] cats.effect.IOFiber.run
  [31] cats.effect.unsafe.WorkerThread.run

--- 230515294 ns (0.03%), 23 samples
  [ 0] fsnotify_insert_event_[k]
  [ 1] inotify_handle_inode_event_[k]
  [ 2] fsnotify_handle_inode_event.isra.0_[k]
  [ 3] send_to_group_[k]
  [ 4] fsnotify_[k]
  [ 5] __fsnotify_parent_[k]
  [ 6] vfs_write_[k]
  [ 7] ksys_write_[k]
  [ 8] __x64_sys_write_[k]
  [ 9] do_syscall_64_[k]
  [10] entry_SYSCALL_64_after_hwframe_[k]
  [11] write
  [12] sun.nio.ch.FileDispatcherImpl.write0
  [13] sun.nio.ch.FileDispatcherImpl.write
  [14] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [15] sun.nio.ch.IOUtil.write
  [16] sun.nio.ch.IOUtil.write
  [17] sun.nio.ch.FileChannelImpl.write
  [18] java.nio.channels.Channels.writeFullyImpl
  [19] java.nio.channels.Channels.writeFully
  [20] java.nio.channels.Channels$1.write
  [21] java.io.InputStream.transferTo
  [22] java.nio.file.Files.copy
  [23] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [24] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [25] jdk.nio.zipfs.ZipPath.newFileChannel
  [26] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [27] java.nio.channels.FileChannel.open
  [28] java.nio.channels.FileChannel.open
  [29] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [30] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25440.apply
  [31] cats.effect.IOFiber.$anonfun$8
  [32] cats.effect.IOFiber$$Lambda$291.0x0000000800de1900.apply
  [33] cats.effect.unsafe.WorkerThread.blockOn
  [34] scala.concurrent.package$.blocking
  [35] cats.effect.IOFiber.runLoop
  [36] cats.effect.IOFiber.execR
  [37] cats.effect.IOFiber.run
  [38] cats.effect.unsafe.WorkerThread.run

--- 230510680 ns (0.03%), 23 samples
  [ 0] __kmalloc_node_[k]
  [ 1] spl_kmem_alloc_impl?[spl]_[k]
  [ 2] spl_kmem_alloc?[spl]_[k]
  [ 3] zfs_rangelock_enter_impl?[zfs]_[k]
  [ 4] zfs_rangelock_enter?[zfs]_[k]
  [ 5] zfs_write?[zfs]_[k]
  [ 6] zpl_iter_write?[zfs]_[k]
  [ 7] new_sync_write_[k]
  [ 8] vfs_write_[k]
  [ 9] ksys_write_[k]
  [10] __x64_sys_write_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] write
  [14] sun.nio.ch.FileDispatcherImpl.write0
  [15] sun.nio.ch.FileDispatcherImpl.write
  [16] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.FileChannelImpl.write
  [20] java.nio.channels.Channels.writeFullyImpl
  [21] java.nio.channels.Channels.writeFully
  [22] java.nio.channels.Channels$1.write
  [23] java.io.InputStream.transferTo
  [24] java.nio.file.Files.copy
  [25] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [26] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [27] jdk.nio.zipfs.ZipPath.newFileChannel
  [28] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [29] java.nio.channels.FileChannel.open
  [30] java.nio.channels.FileChannel.open
  [31] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [32] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25440.apply
  [33] cats.effect.IOFiber.$anonfun$8
  [34] cats.effect.IOFiber$$Lambda$291.0x0000000800de1900.apply
  [35] cats.effect.unsafe.WorkerThread.blockOn
  [36] scala.concurrent.package$.blocking
  [37] cats.effect.IOFiber.runLoop
  [38] cats.effect.IOFiber.execR
  [39] cats.effect.IOFiber.run
  [40] cats.effect.unsafe.WorkerThread.run

--- 230495471 ns (0.03%), 23 samples
  [ 0] _raw_spin_unlock_irqrestore_[k]
  [ 1] __wake_up_common_lock_[k]
  [ 2] __wake_up_[k]
  [ 3] fsnotify_insert_event_[k]
  [ 4] inotify_handle_inode_event_[k]
  [ 5] fsnotify_handle_inode_event.isra.0_[k]
  [ 6] send_to_group_[k]
  [ 7] fsnotify_[k]
  [ 8] __fsnotify_parent_[k]
  [ 9] __fput_[k]
  [10] ____fput_[k]
  [11] task_work_run_[k]
  [12] exit_to_user_mode_loop_[k]
  [13] exit_to_user_mode_prepare_[k]
  [14] syscall_exit_to_user_mode_[k]
  [15] do_syscall_64_[k]
  [16] entry_SYSCALL_64_after_hwframe_[k]
  [17] __close
  [18] java.io.FileDescriptor.close0
  [19] java.io.FileDescriptor.close
  [20] java.io.FileDescriptor$1.close
  [21] sun.nio.ch.FileChannelImpl$Closer.run
  [22] jdk.internal.ref.CleanerImpl$PhantomCleanableRef.performCleanup
  [23] jdk.internal.ref.PhantomCleanable.clean
  [24] sun.nio.ch.FileChannelImpl.implCloseChannel
  [25] java.nio.channels.spi.AbstractInterruptibleChannel.close
  [26] java.nio.file.Files.createFile
  [27] java.nio.file.TempFileHelper.create
  [28] java.nio.file.TempFileHelper.createTempFile
  [29] java.nio.file.Files.createTempFile
  [30] jdk.nio.zipfs.ZipFileSystem.createTempFileInSameDirectoryAs
  [31] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [32] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [33] jdk.nio.zipfs.ZipPath.newFileChannel
  [34] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [35] java.nio.channels.FileChannel.open
  [36] java.nio.channels.FileChannel.open
  [37] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [38] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25440.apply
  [39] cats.effect.IOFiber.$anonfun$8
  [40] cats.effect.IOFiber$$Lambda$291.0x0000000800de1900.apply
  [41] cats.effect.unsafe.WorkerThread.blockOn
  [42] scala.concurrent.package$.blocking
  [43] cats.effect.IOFiber.runLoop
  [44] cats.effect.IOFiber.execR
  [45] cats.effect.IOFiber.run
  [46] cats.effect.unsafe.WorkerThread.run

--- 230484852 ns (0.03%), 23 samples
  [ 0] _raw_spin_unlock_irqrestore_[k]
  [ 1] try_to_wake_up_[k]
  [ 2] wake_up_q_[k]
  [ 3] rwsem_wake.isra.0_[k]
  [ 4] up_write_[k]
  [ 5] open_last_lookups_[k]
  [ 6] path_openat_[k]
  [ 7] do_filp_open_[k]
  [ 8] do_sys_openat2_[k]
  [ 9] __x64_sys_openat_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] __open64
  [13] [unknown]
  [14] sun.nio.fs.UnixNativeDispatcher.open0
  [15] sun.nio.fs.UnixNativeDispatcher.open
  [16] sun.nio.fs.UnixChannelFactory.open
  [17] sun.nio.fs.UnixChannelFactory.newFileChannel
  [18] sun.nio.fs.UnixChannelFactory.newFileChannel
  [19] sun.nio.fs.UnixFileSystemProvider.newByteChannel
  [20] java.nio.file.Files.newByteChannel
  [21] java.nio.file.Files.createFile
  [22] java.nio.file.TempFileHelper.create
  [23] java.nio.file.TempFileHelper.createTempFile
  [24] java.nio.file.Files.createTempFile
  [25] jdk.nio.zipfs.ZipFileSystem.createTempFileInSameDirectoryAs
  [26] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [27] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [28] jdk.nio.zipfs.ZipPath.newFileChannel
  [29] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [30] java.nio.channels.FileChannel.open
  [31] java.nio.channels.FileChannel.open
  [32] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [33] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25440.apply
  [34] cats.effect.IOFiber.$anonfun$8
  [35] cats.effect.IOFiber$$Lambda$291.0x0000000800de1900.apply
  [36] cats.effect.unsafe.WorkerThread.blockOn
  [37] scala.concurrent.package$.blocking
  [38] cats.effect.IOFiber.runLoop
  [39] cats.effect.IOFiber.execR
  [40] cats.effect.IOFiber.run
  [41] cats.effect.unsafe.WorkerThread.run

--- 230481955 ns (0.03%), 23 samples
  [ 0] dmu_tx_try_assign?[zfs]_[k]
  [ 1] dmu_tx_assign?[zfs]_[k]
  [ 2] zfs_write?[zfs]_[k]
  [ 3] zpl_iter_write?[zfs]_[k]
  [ 4] new_sync_write_[k]
  [ 5] vfs_write_[k]
  [ 6] ksys_write_[k]
  [ 7] __x64_sys_write_[k]
  [ 8] do_syscall_64_[k]
  [ 9] entry_SYSCALL_64_after_hwframe_[k]
  [10] write
  [11] sun.nio.ch.FileDispatcherImpl.write0
  [12] sun.nio.ch.FileDispatcherImpl.write
  [13] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [14] sun.nio.ch.IOUtil.write
  [15] sun.nio.ch.IOUtil.write
  [16] sun.nio.ch.FileChannelImpl.write
  [17] java.nio.channels.Channels.writeFullyImpl
  [18] java.nio.channels.Channels.writeFully
  [19] java.nio.channels.Channels$1.write
  [20] java.io.InputStream.transferTo
  [21] java.nio.file.Files.copy
  [22] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [23] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [24] jdk.nio.zipfs.ZipPath.newFileChannel
  [25] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [26] java.nio.channels.FileChannel.open
  [27] java.nio.channels.FileChannel.open
  [28] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [29] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25440.apply
  [30] cats.effect.IOFiber.$anonfun$8
  [31] cats.effect.IOFiber$$Lambda$291.0x0000000800de1900.apply
  [32] cats.effect.unsafe.WorkerThread.blockOn
  [33] scala.concurrent.package$.blocking
  [34] cats.effect.IOFiber.runLoop
  [35] cats.effect.IOFiber.execR
  [36] cats.effect.IOFiber.run
  [37] cats.effect.unsafe.WorkerThread.run

--- 230427391 ns (0.03%), 23 samples
  [ 0] jbyte_disjoint_arraycopy
  [ 1] jdk.internal.misc.Unsafe.copyMemory0
  [ 2] jdk.internal.misc.Unsafe.copyMemory
  [ 3] jdk.internal.misc.ScopedMemoryAccess.copyMemoryInternal
  [ 4] jdk.internal.misc.ScopedMemoryAccess.copyMemory
  [ 5] java.nio.ByteBuffer.putBuffer
  [ 6] java.nio.ByteBuffer.put
  [ 7] java.nio.HeapByteBuffer.put
  [ 8] sun.nio.ch.IOUtil.read
  [ 9] sun.nio.ch.IOUtil.read
  [10] sun.nio.ch.FileChannelImpl.readInternal
  [11] sun.nio.ch.FileChannelImpl.read
  [12] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [13] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [14] jdk.nio.zipfs.ZipFileSystem$2.fill
  [15] java.util.zip.InflaterInputStream.read
  [16] java.io.InputStream.transferTo
  [17] java.nio.file.Files.copy
  [18] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [19] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [20] jdk.nio.zipfs.ZipPath.newFileChannel
  [21] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [22] java.nio.channels.FileChannel.open
  [23] java.nio.channels.FileChannel.open
  [24] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [25] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25440.apply
  [26] cats.effect.IOFiber.$anonfun$8
  [27] cats.effect.IOFiber$$Lambda$291.0x0000000800de1900.apply
  [28] cats.effect.unsafe.WorkerThread.blockOn
  [29] scala.concurrent.package$.blocking
  [30] cats.effect.IOFiber.runLoop
  [31] cats.effect.IOFiber.execR
  [32] cats.effect.IOFiber.run
  [33] cats.effect.unsafe.WorkerThread.run

--- 230415344 ns (0.03%), 23 samples
  [ 0] __fget_light_[k]
  [ 1] __fdget_pos_[k]
  [ 2] ksys_write_[k]
  [ 3] __x64_sys_write_[k]
  [ 4] do_syscall_64_[k]
  [ 5] entry_SYSCALL_64_after_hwframe_[k]
  [ 6] write
  [ 7] sun.nio.ch.FileDispatcherImpl.write0
  [ 8] sun.nio.ch.FileDispatcherImpl.write
  [ 9] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [10] sun.nio.ch.IOUtil.write
  [11] sun.nio.ch.IOUtil.write
  [12] sun.nio.ch.FileChannelImpl.write
  [13] java.nio.channels.Channels.writeFullyImpl
  [14] java.nio.channels.Channels.writeFully
  [15] java.nio.channels.Channels$1.write
  [16] java.io.InputStream.transferTo
  [17] java.nio.file.Files.copy
  [18] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [19] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [20] jdk.nio.zipfs.ZipPath.newFileChannel
  [21] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [22] java.nio.channels.FileChannel.open
  [23] java.nio.channels.FileChannel.open
  [24] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [25] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25440.apply
  [26] cats.effect.IOFiber.$anonfun$8
  [27] cats.effect.IOFiber$$Lambda$291.0x0000000800de1900.apply
  [28] cats.effect.unsafe.WorkerThread.blockOn
  [29] scala.concurrent.package$.blocking
  [30] cats.effect.IOFiber.runLoop
  [31] cats.effect.IOFiber.execR
  [32] cats.effect.IOFiber.run
  [33] cats.effect.unsafe.WorkerThread.run

--- 220615673 ns (0.03%), 22 samples
  [ 0] memset_[k]
  [ 1] spl_kmem_cache_alloc?[spl]_[k]
  [ 2] zio_data_buf_alloc?[zfs]_[k]
  [ 3] zil_itx_create?[zfs]_[k]
  [ 4] zfs_log_write?[zfs]_[k]
  [ 5] zfs_write?[zfs]_[k]
  [ 6] zpl_iter_write?[zfs]_[k]
  [ 7] new_sync_write_[k]
  [ 8] vfs_write_[k]
  [ 9] ksys_write_[k]
  [10] __x64_sys_write_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] write
  [14] sun.nio.ch.FileDispatcherImpl.write0
  [15] sun.nio.ch.FileDispatcherImpl.write
  [16] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.FileChannelImpl.write
  [20] java.nio.channels.Channels.writeFullyImpl
  [21] java.nio.channels.Channels.writeFully
  [22] java.nio.channels.Channels$1.write
  [23] java.io.InputStream.transferTo
  [24] java.nio.file.Files.copy
  [25] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [26] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [27] jdk.nio.zipfs.ZipPath.newFileChannel
  [28] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [29] java.nio.channels.FileChannel.open
  [30] java.nio.channels.FileChannel.open
  [31] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [32] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25440.apply
  [33] cats.effect.IOFiber.$anonfun$8
  [34] cats.effect.IOFiber$$Lambda$291.0x0000000800de1900.apply
  [35] cats.effect.unsafe.WorkerThread.blockOn
  [36] scala.concurrent.package$.blocking
  [37] cats.effect.IOFiber.runLoop
  [38] cats.effect.IOFiber.execR
  [39] cats.effect.IOFiber.run
  [40] cats.effect.unsafe.WorkerThread.run

--- 220566370 ns (0.03%), 22 samples
  [ 0] fault_in_readable_[k]
  [ 1] fault_in_iov_iter_readable_[k]
  [ 2] zfs_uio_prefaultpages?[zfs]_[k]
  [ 3] zfs_write?[zfs]_[k]
  [ 4] zpl_iter_write?[zfs]_[k]
  [ 5] new_sync_write_[k]
  [ 6] vfs_write_[k]
  [ 7] ksys_write_[k]
  [ 8] __x64_sys_write_[k]
  [ 9] do_syscall_64_[k]
  [10] entry_SYSCALL_64_after_hwframe_[k]
  [11] write
  [12] sun.nio.ch.FileDispatcherImpl.write0
  [13] sun.nio.ch.FileDispatcherImpl.write
  [14] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [15] sun.nio.ch.IOUtil.write
  [16] sun.nio.ch.IOUtil.write
  [17] sun.nio.ch.FileChannelImpl.write
  [18] java.nio.channels.Channels.writeFullyImpl
  [19] java.nio.channels.Channels.writeFully
  [20] java.nio.channels.Channels$1.write
  [21] java.io.InputStream.transferTo
  [22] java.nio.file.Files.copy
  [23] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [24] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [25] jdk.nio.zipfs.ZipPath.newFileChannel
  [26] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [27] java.nio.channels.FileChannel.open
  [28] java.nio.channels.FileChannel.open
  [29] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [30] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25440.apply
  [31] cats.effect.IOFiber.$anonfun$8
  [32] cats.effect.IOFiber$$Lambda$291.0x0000000800de1900.apply
  [33] cats.effect.unsafe.WorkerThread.blockOn
  [34] scala.concurrent.package$.blocking
  [35] cats.effect.IOFiber.runLoop
  [36] cats.effect.IOFiber.execR
  [37] cats.effect.IOFiber.run
  [38] cats.effect.unsafe.WorkerThread.run

--- 220488448 ns (0.03%), 22 samples
  [ 0] _raw_spin_unlock_irqrestore_[k]
  [ 1] try_to_wake_up_[k]
  [ 2] wake_up_q_[k]
  [ 3] rwsem_wake.isra.0_[k]
  [ 4] up_write_[k]
  [ 5] open_last_lookups_[k]
  [ 6] path_openat_[k]
  [ 7] do_filp_open_[k]
  [ 8] do_sys_openat2_[k]
  [ 9] __x64_sys_openat_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] __open64
  [13] [unknown]
  [14] sun.nio.fs.UnixNativeDispatcher.open0
  [15] sun.nio.fs.UnixNativeDispatcher.open
  [16] sun.nio.fs.UnixChannelFactory.open
  [17] sun.nio.fs.UnixChannelFactory.newFileChannel
  [18] sun.nio.fs.UnixChannelFactory.newFileChannel
  [19] sun.nio.fs.UnixFileSystemProvider.newByteChannel
  [20] java.nio.file.spi.FileSystemProvider.newOutputStream
  [21] java.nio.file.Files.newOutputStream
  [22] java.nio.file.Files.copy
  [23] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [24] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [25] jdk.nio.zipfs.ZipPath.newFileChannel
  [26] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [27] java.nio.channels.FileChannel.open
  [28] java.nio.channels.FileChannel.open
  [29] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [30] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25440.apply
  [31] cats.effect.IOFiber.$anonfun$8
  [32] cats.effect.IOFiber$$Lambda$291.0x0000000800de1900.apply
  [33] cats.effect.unsafe.WorkerThread.blockOn
  [34] scala.concurrent.package$.blocking
  [35] cats.effect.IOFiber.runLoop
  [36] cats.effect.IOFiber.execR
  [37] cats.effect.IOFiber.run
  [38] cats.effect.unsafe.WorkerThread.run

--- 220423347 ns (0.03%), 22 samples
  [ 0] fsnotify_[k]
  [ 1] open_last_lookups_[k]
  [ 2] path_openat_[k]
  [ 3] do_filp_open_[k]
  [ 4] do_sys_openat2_[k]
  [ 5] __x64_sys_openat_[k]
  [ 6] do_syscall_64_[k]
  [ 7] entry_SYSCALL_64_after_hwframe_[k]
  [ 8] __open64
  [ 9] [unknown]
  [10] sun.nio.fs.UnixNativeDispatcher.open0
  [11] sun.nio.fs.UnixNativeDispatcher.open
  [12] sun.nio.fs.UnixChannelFactory.open
  [13] sun.nio.fs.UnixChannelFactory.newFileChannel
  [14] sun.nio.fs.UnixChannelFactory.newFileChannel
  [15] sun.nio.fs.UnixFileSystemProvider.newByteChannel
  [16] java.nio.file.Files.newByteChannel
  [17] java.nio.file.Files.createFile
  [18] java.nio.file.TempFileHelper.create
  [19] java.nio.file.TempFileHelper.createTempFile
  [20] java.nio.file.Files.createTempFile
  [21] jdk.nio.zipfs.ZipFileSystem.createTempFileInSameDirectoryAs
  [22] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [23] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [24] jdk.nio.zipfs.ZipPath.newFileChannel
  [25] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [26] java.nio.channels.FileChannel.open
  [27] java.nio.channels.FileChannel.open
  [28] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [29] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25440.apply
  [30] cats.effect.IOFiber.$anonfun$8
  [31] cats.effect.IOFiber$$Lambda$291.0x0000000800de1900.apply
  [32] cats.effect.unsafe.WorkerThread.blockOn
  [33] scala.concurrent.package$.blocking
  [34] cats.effect.IOFiber.runLoop
  [35] cats.effect.IOFiber.execR
  [36] cats.effect.IOFiber.run
  [37] cats.effect.unsafe.WorkerThread.run

--- 220409576 ns (0.03%), 22 samples
  [ 0] inotify_merge_[k]
  [ 1] inotify_handle_inode_event_[k]
  [ 2] fsnotify_handle_inode_event.isra.0_[k]
  [ 3] send_to_group_[k]
  [ 4] fsnotify_[k]
  [ 5] __fsnotify_parent_[k]
  [ 6] vfs_write_[k]
  [ 7] ksys_write_[k]
  [ 8] __x64_sys_write_[k]
  [ 9] do_syscall_64_[k]
  [10] entry_SYSCALL_64_after_hwframe_[k]
  [11] write
  [12] sun.nio.ch.FileDispatcherImpl.write0
  [13] sun.nio.ch.FileDispatcherImpl.write
  [14] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [15] sun.nio.ch.IOUtil.write
  [16] sun.nio.ch.IOUtil.write
  [17] sun.nio.ch.FileChannelImpl.write
  [18] java.nio.channels.Channels.writeFullyImpl
  [19] java.nio.channels.Channels.writeFully
  [20] java.nio.channels.Channels$1.write
  [21] java.io.InputStream.transferTo
  [22] java.nio.file.Files.copy
  [23] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [24] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [25] jdk.nio.zipfs.ZipPath.newFileChannel
  [26] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [27] java.nio.channels.FileChannel.open
  [28] java.nio.channels.FileChannel.open
  [29] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [30] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25440.apply
  [31] cats.effect.IOFiber.$anonfun$8
  [32] cats.effect.IOFiber$$Lambda$291.0x0000000800de1900.apply
  [33] cats.effect.unsafe.WorkerThread.blockOn
  [34] scala.concurrent.package$.blocking
  [35] cats.effect.IOFiber.runLoop
  [36] cats.effect.IOFiber.execR
  [37] cats.effect.IOFiber.run
  [38] cats.effect.unsafe.WorkerThread.run

--- 210637256 ns (0.03%), 21 samples
  [ 0] find_vmap_area_[k]
  [ 1] check_heap_object_[k]
  [ 2] __check_object_size.part.0_[k]
  [ 3] __check_object_size_[k]
  [ 4] zfs_uiomove_iter?[zfs]_[k]
  [ 5] zfs_uiomove?[zfs]_[k]
  [ 6] dmu_read_uio_dnode?[zfs]_[k]
  [ 7] dmu_read_uio_dbuf?[zfs]_[k]
  [ 8] mappedread?[zfs]_[k]
  [ 9] zfs_read?[zfs]_[k]
  [10] zpl_iter_read?[zfs]_[k]
  [11] new_sync_read_[k]
  [12] vfs_read_[k]
  [13] __x64_sys_pread64_[k]
  [14] do_syscall_64_[k]
  [15] entry_SYSCALL_64_after_hwframe_[k]
  [16] __libc_pread64
  [17] sun.nio.ch.FileDispatcherImpl.pread0
  [18] sun.nio.ch.FileDispatcherImpl.pread
  [19] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [20] sun.nio.ch.IOUtil.read
  [21] sun.nio.ch.IOUtil.read
  [22] sun.nio.ch.FileChannelImpl.readInternal
  [23] sun.nio.ch.FileChannelImpl.read
  [24] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [25] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [26] jdk.nio.zipfs.ZipFileSystem$Entry.readLocEXTT
  [27] jdk.nio.zipfs.ZipFileSystem$Entry.readExtra
  [28] jdk.nio.zipfs.ZipFileSystem$Entry.readCEN
  [29] jdk.nio.zipfs.ZipFileSystem$Entry.<init>
  [30] jdk.nio.zipfs.ZipFileSystem.getEntry
  [31] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [32] jdk.nio.zipfs.ZipPath.newFileChannel
  [33] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [34] java.nio.channels.FileChannel.open
  [35] java.nio.channels.FileChannel.open
  [36] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [37] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25440.apply
  [38] cats.effect.IOFiber.$anonfun$8
  [39] cats.effect.IOFiber$$Lambda$291.0x0000000800de1900.apply
  [40] cats.effect.unsafe.WorkerThread.blockOn
  [41] scala.concurrent.package$.blocking
  [42] cats.effect.IOFiber.runLoop
  [43] cats.effect.IOFiber.execR
  [44] cats.effect.IOFiber.run
  [45] cats.effect.unsafe.WorkerThread.run

--- 210613923 ns (0.03%), 21 samples
  [ 0] ___pthread_mutex_lock
  [ 1] Unsafe_Unpark
  [ 2] jdk.internal.misc.Unsafe.unpark
  [ 3] java.util.concurrent.locks.LockSupport.unpark
  [ 4] cats.effect.unsafe.WorkStealingThreadPool.notifyParked
  [ 5] cats.effect.unsafe.WorkerThread.blockOn
  [ 6] scala.concurrent.package$.blocking
  [ 7] cats.effect.IOFiber.runLoop
  [ 8] cats.effect.IOFiber.execR
  [ 9] cats.effect.IOFiber.run
  [10] cats.effect.unsafe.WorkerThread.run

--- 210553183 ns (0.03%), 21 samples
  [ 0] zfs_mknode?[zfs]_[k]
  [ 1] zfs_create?[zfs]_[k]
  [ 2] zpl_create?[zfs]_[k]
  [ 3] lookup_open.isra.0_[k]
  [ 4] open_last_lookups_[k]
  [ 5] path_openat_[k]
  [ 6] do_filp_open_[k]
  [ 7] do_sys_openat2_[k]
  [ 8] __x64_sys_openat_[k]
  [ 9] do_syscall_64_[k]
  [10] entry_SYSCALL_64_after_hwframe_[k]
  [11] __open64
  [12] [unknown]
  [13] sun.nio.fs.UnixNativeDispatcher.open0
  [14] sun.nio.fs.UnixNativeDispatcher.open
  [15] sun.nio.fs.UnixChannelFactory.open
  [16] sun.nio.fs.UnixChannelFactory.newFileChannel
  [17] sun.nio.fs.UnixChannelFactory.newFileChannel
  [18] sun.nio.fs.UnixFileSystemProvider.newByteChannel
  [19] java.nio.file.spi.FileSystemProvider.newOutputStream
  [20] java.nio.file.Files.newOutputStream
  [21] java.nio.file.Files.copy
  [22] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [23] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [24] jdk.nio.zipfs.ZipPath.newFileChannel
  [25] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [26] java.nio.channels.FileChannel.open
  [27] java.nio.channels.FileChannel.open
  [28] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [29] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25440.apply
  [30] cats.effect.IOFiber.$anonfun$8
  [31] cats.effect.IOFiber$$Lambda$291.0x0000000800de1900.apply
  [32] cats.effect.unsafe.WorkerThread.blockOn
  [33] scala.concurrent.package$.blocking
  [34] cats.effect.IOFiber.runLoop
  [35] cats.effect.IOFiber.execR
  [36] cats.effect.IOFiber.run
  [37] cats.effect.unsafe.WorkerThread.run

--- 210546941 ns (0.03%), 21 samples
  [ 0] dnode_hold_impl?[zfs]_[k]
  [ 1] dnode_hold?[zfs]_[k]
  [ 2] dmu_object_set_blocksize?[zfs]_[k]
  [ 3] zfs_grow_blocksize?[zfs]_[k]
  [ 4] zfs_write?[zfs]_[k]
  [ 5] zpl_iter_write?[zfs]_[k]
  [ 6] new_sync_write_[k]
  [ 7] vfs_write_[k]
  [ 8] ksys_write_[k]
  [ 9] __x64_sys_write_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] write
  [13] sun.nio.ch.FileDispatcherImpl.write0
  [14] sun.nio.ch.FileDispatcherImpl.write
  [15] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [16] sun.nio.ch.IOUtil.write
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.FileChannelImpl.write
  [19] java.nio.channels.Channels.writeFullyImpl
  [20] java.nio.channels.Channels.writeFully
  [21] java.nio.channels.Channels$1.write
  [22] java.io.InputStream.transferTo
  [23] java.nio.file.Files.copy
  [24] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [25] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [26] jdk.nio.zipfs.ZipPath.newFileChannel
  [27] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [28] java.nio.channels.FileChannel.open
  [29] java.nio.channels.FileChannel.open
  [30] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [31] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25440.apply
  [32] cats.effect.IOFiber.$anonfun$8
  [33] cats.effect.IOFiber$$Lambda$291.0x0000000800de1900.apply
  [34] cats.effect.unsafe.WorkerThread.blockOn
  [35] scala.concurrent.package$.blocking
  [36] cats.effect.IOFiber.runLoop
  [37] cats.effect.IOFiber.execR
  [38] cats.effect.IOFiber.run
  [39] cats.effect.unsafe.WorkerThread.run

--- 210523646 ns (0.03%), 21 samples
  [ 0] fsnotify_[k]
  [ 1] vfs_unlink_[k]
  [ 2] do_unlinkat_[k]
  [ 3] __x64_sys_unlink_[k]
  [ 4] do_syscall_64_[k]
  [ 5] entry_SYSCALL_64_after_hwframe_[k]
  [ 6] __GI_unlink
  [ 7] sun.nio.fs.UnixNativeDispatcher.unlink0
  [ 8] sun.nio.fs.UnixNativeDispatcher.unlink
  [ 9] sun.nio.fs.UnixFileSystemProvider.implDelete
  [10] sun.nio.fs.AbstractFileSystemProvider.deleteIfExists
  [11] java.nio.file.Files.deleteIfExists
  [12] java.nio.file.Files.copy
  [13] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [14] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [15] jdk.nio.zipfs.ZipPath.newFileChannel
  [16] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [17] java.nio.channels.FileChannel.open
  [18] java.nio.channels.FileChannel.open
  [19] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [20] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25440.apply
  [21] cats.effect.IOFiber.$anonfun$8
  [22] cats.effect.IOFiber$$Lambda$291.0x0000000800de1900.apply
  [23] cats.effect.unsafe.WorkerThread.blockOn
  [24] scala.concurrent.package$.blocking
  [25] cats.effect.IOFiber.runLoop
  [26] cats.effect.IOFiber.execR
  [27] cats.effect.IOFiber.run
  [28] cats.effect.unsafe.WorkerThread.run

--- 210494635 ns (0.03%), 21 samples
  [ 0] kfree_[k]
  [ 1] spl_kmem_free_impl?[spl]_[k]
  [ 2] spl_kmem_free?[spl]_[k]
  [ 3] dmu_tx_destroy?[zfs]_[k]
  [ 4] dmu_tx_commit?[zfs]_[k]
  [ 5] zfs_write?[zfs]_[k]
  [ 6] zpl_iter_write?[zfs]_[k]
  [ 7] new_sync_write_[k]
  [ 8] vfs_write_[k]
  [ 9] ksys_write_[k]
  [10] __x64_sys_write_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] write
  [14] sun.nio.ch.FileDispatcherImpl.write0
  [15] sun.nio.ch.FileDispatcherImpl.write
  [16] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.FileChannelImpl.write
  [20] java.nio.channels.Channels.writeFullyImpl
  [21] java.nio.channels.Channels.writeFully
  [22] java.nio.channels.Channels$1.write
  [23] java.io.InputStream.transferTo
  [24] java.nio.file.Files.copy
  [25] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [26] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [27] jdk.nio.zipfs.ZipPath.newFileChannel
  [28] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [29] java.nio.channels.FileChannel.open
  [30] java.nio.channels.FileChannel.open
  [31] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [32] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25440.apply
  [33] cats.effect.IOFiber.$anonfun$8
  [34] cats.effect.IOFiber$$Lambda$291.0x0000000800de1900.apply
  [35] cats.effect.unsafe.WorkerThread.blockOn
  [36] scala.concurrent.package$.blocking
  [37] cats.effect.IOFiber.runLoop
  [38] cats.effect.IOFiber.execR
  [39] cats.effect.IOFiber.run
  [40] cats.effect.unsafe.WorkerThread.run

--- 210482758 ns (0.03%), 21 samples
  [ 0] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 1] dmu_write_uio_dnode?[zfs]_[k]
  [ 2] dmu_write_uio_dbuf?[zfs]_[k]
  [ 3] zfs_write?[zfs]_[k]
  [ 4] zpl_iter_write?[zfs]_[k]
  [ 5] new_sync_write_[k]
  [ 6] vfs_write_[k]
  [ 7] ksys_write_[k]
  [ 8] __x64_sys_write_[k]
  [ 9] do_syscall_64_[k]
  [10] entry_SYSCALL_64_after_hwframe_[k]
  [11] write
  [12] sun.nio.ch.FileDispatcherImpl.write0
  [13] sun.nio.ch.FileDispatcherImpl.write
  [14] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [15] sun.nio.ch.IOUtil.write
  [16] sun.nio.ch.IOUtil.write
  [17] sun.nio.ch.FileChannelImpl.write
  [18] java.nio.channels.Channels.writeFullyImpl
  [19] java.nio.channels.Channels.writeFully
  [20] java.nio.channels.Channels$1.write
  [21] java.io.InputStream.transferTo
  [22] java.nio.file.Files.copy
  [23] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [24] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [25] jdk.nio.zipfs.ZipPath.newFileChannel
  [26] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [27] java.nio.channels.FileChannel.open
  [28] java.nio.channels.FileChannel.open
  [29] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [30] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25440.apply
  [31] cats.effect.IOFiber.$anonfun$8
  [32] cats.effect.IOFiber$$Lambda$291.0x0000000800de1900.apply
  [33] cats.effect.unsafe.WorkerThread.blockOn
  [34] scala.concurrent.package$.blocking
  [35] cats.effect.IOFiber.runLoop
  [36] cats.effect.IOFiber.execR
  [37] cats.effect.IOFiber.run
  [38] cats.effect.unsafe.WorkerThread.run

--- 210458447 ns (0.03%), 21 samples
  [ 0] _raw_spin_unlock_irqrestore_[k]
  [ 1] hrtimer_start_range_ns_[k]
  [ 2] hrtimer_sleeper_start_expires_[k]
  [ 3] futex_wait_queue_[k]
  [ 4] futex_wait_[k]
  [ 5] do_futex_[k]
  [ 6] __x64_sys_futex_[k]
  [ 7] do_syscall_64_[k]
  [ 8] entry_SYSCALL_64_after_hwframe_[k]
  [ 9] __futex_abstimed_wait_cancelable64
  [10] [unknown]
  [11] jdk.internal.misc.Unsafe.park
  [12] java.util.concurrent.locks.LockSupport.parkNanos
  [13] java.util.concurrent.LinkedTransferQueue.awaitMatch
  [14] java.util.concurrent.LinkedTransferQueue.xfer
  [15] java.util.concurrent.LinkedTransferQueue.poll
  [16] cats.effect.unsafe.WorkerThread.run

--- 210448697 ns (0.03%), 21 samples
  [ 0] rwsem_spin_on_owner_[k]
  [ 1] rwsem_down_write_slowpath_[k]
  [ 2] down_write_[k]
  [ 3] open_last_lookups_[k]
  [ 4] path_openat_[k]
  [ 5] do_filp_open_[k]
  [ 6] do_sys_openat2_[k]
  [ 7] __x64_sys_openat_[k]
  [ 8] do_syscall_64_[k]
  [ 9] entry_SYSCALL_64_after_hwframe_[k]
  [10] __open64
  [11] [unknown]
  [12] sun.nio.fs.UnixNativeDispatcher.open0
  [13] sun.nio.fs.UnixNativeDispatcher.open
  [14] sun.nio.fs.UnixChannelFactory.open
  [15] sun.nio.fs.UnixChannelFactory.newFileChannel
  [16] sun.nio.fs.UnixChannelFactory.newFileChannel
  [17] sun.nio.fs.UnixFileSystemProvider.newByteChannel
  [18] java.nio.file.Files.newByteChannel
  [19] java.nio.file.Files.createFile
  [20] java.nio.file.TempFileHelper.create
  [21] java.nio.file.TempFileHelper.createTempFile
  [22] java.nio.file.Files.createTempFile
  [23] jdk.nio.zipfs.ZipFileSystem.createTempFileInSameDirectoryAs
  [24] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [25] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [26] jdk.nio.zipfs.ZipPath.newFileChannel
  [27] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [28] java.nio.channels.FileChannel.open
  [29] java.nio.channels.FileChannel.open
  [30] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [31] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25440.apply
  [32] cats.effect.IOFiber.$anonfun$8
  [33] cats.effect.IOFiber$$Lambda$291.0x0000000800de1900.apply
  [34] cats.effect.unsafe.WorkerThread.blockOn
  [35] scala.concurrent.package$.blocking
  [36] cats.effect.IOFiber.runLoop
  [37] cats.effect.IOFiber.execR
  [38] cats.effect.IOFiber.run
  [39] cats.effect.unsafe.WorkerThread.run

--- 210446510 ns (0.03%), 21 samples
  [ 0] __fsnotify_parent_[k]
  [ 1] vfs_write_[k]
  [ 2] ksys_write_[k]
  [ 3] __x64_sys_write_[k]
  [ 4] do_syscall_64_[k]
  [ 5] entry_SYSCALL_64_after_hwframe_[k]
  [ 6] write
  [ 7] sun.nio.ch.FileDispatcherImpl.write0
  [ 8] sun.nio.ch.FileDispatcherImpl.write
  [ 9] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [10] sun.nio.ch.IOUtil.write
  [11] sun.nio.ch.IOUtil.write
  [12] sun.nio.ch.FileChannelImpl.write
  [13] java.nio.channels.Channels.writeFullyImpl
  [14] java.nio.channels.Channels.writeFully
  [15] java.nio.channels.Channels$1.write
  [16] java.io.InputStream.transferTo
  [17] java.nio.file.Files.copy
  [18] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [19] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [20] jdk.nio.zipfs.ZipPath.newFileChannel
  [21] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [22] java.nio.channels.FileChannel.open
  [23] java.nio.channels.FileChannel.open
  [24] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [25] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25440.apply
  [26] cats.effect.IOFiber.$anonfun$8
  [27] cats.effect.IOFiber$$Lambda$291.0x0000000800de1900.apply
  [28] cats.effect.unsafe.WorkerThread.blockOn
  [29] scala.concurrent.package$.blocking
  [30] cats.effect.IOFiber.runLoop
  [31] cats.effect.IOFiber.execR
  [32] cats.effect.IOFiber.run
  [33] cats.effect.unsafe.WorkerThread.run

--- 210430014 ns (0.03%), 21 samples
  [ 0] cats.effect.IOFiber.runLoop
  [ 1] cats.effect.IOFiber.execR
  [ 2] cats.effect.IOFiber.run
  [ 3] cats.effect.unsafe.WorkerThread.run

--- 210423910 ns (0.03%), 21 samples
  [ 0] refill_stock_[k]
  [ 1] obj_cgroup_uncharge_pages_[k]
  [ 2] refill_obj_stock_[k]
  [ 3] obj_cgroup_charge_[k]
  [ 4] __kmalloc_[k]
  [ 5] inotify_handle_inode_event_[k]
  [ 6] fsnotify_handle_inode_event.isra.0_[k]
  [ 7] send_to_group_[k]
  [ 8] fsnotify_[k]
  [ 9] __fsnotify_parent_[k]
  [10] vfs_write_[k]
  [11] ksys_write_[k]
  [12] __x64_sys_write_[k]
  [13] do_syscall_64_[k]
  [14] entry_SYSCALL_64_after_hwframe_[k]
  [15] write
  [16] sun.nio.ch.FileDispatcherImpl.write0
  [17] sun.nio.ch.FileDispatcherImpl.write
  [18] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [19] sun.nio.ch.IOUtil.write
  [20] sun.nio.ch.IOUtil.write
  [21] sun.nio.ch.FileChannelImpl.write
  [22] java.nio.channels.Channels.writeFullyImpl
  [23] java.nio.channels.Channels.writeFully
  [24] java.nio.channels.Channels$1.write
  [25] java.io.InputStream.transferTo
  [26] java.nio.file.Files.copy
  [27] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [28] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [29] jdk.nio.zipfs.ZipPath.newFileChannel
  [30] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [31] java.nio.channels.FileChannel.open
  [32] java.nio.channels.FileChannel.open
  [33] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [34] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25440.apply
  [35] cats.effect.IOFiber.$anonfun$8
  [36] cats.effect.IOFiber$$Lambda$291.0x0000000800de1900.apply
  [37] cats.effect.unsafe.WorkerThread.blockOn
  [38] scala.concurrent.package$.blocking
  [39] cats.effect.IOFiber.runLoop
  [40] cats.effect.IOFiber.execR
  [41] cats.effect.IOFiber.run
  [42] cats.effect.unsafe.WorkerThread.run

--- 210397391 ns (0.03%), 21 samples
  [ 0] kfree_[k]
  [ 1] spl_kmem_free_impl?[spl]_[k]
  [ 2] spl_kmem_free?[spl]_[k]
  [ 3] dsl_dir_tempreserve_clear?[zfs]_[k]
  [ 4] dmu_tx_commit?[zfs]_[k]
  [ 5] zfs_write?[zfs]_[k]
  [ 6] zpl_iter_write?[zfs]_[k]
  [ 7] new_sync_write_[k]
  [ 8] vfs_write_[k]
  [ 9] ksys_write_[k]
  [10] __x64_sys_write_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] write
  [14] sun.nio.ch.FileDispatcherImpl.write0
  [15] sun.nio.ch.FileDispatcherImpl.write
  [16] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.FileChannelImpl.write
  [20] java.nio.channels.Channels.writeFullyImpl
  [21] java.nio.channels.Channels.writeFully
  [22] java.nio.channels.Channels$1.write
  [23] java.io.InputStream.transferTo
  [24] java.nio.file.Files.copy
  [25] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [26] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [27] jdk.nio.zipfs.ZipPath.newFileChannel
  [28] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [29] java.nio.channels.FileChannel.open
  [30] java.nio.channels.FileChannel.open
  [31] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [32] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25440.apply
  [33] cats.effect.IOFiber.$anonfun$8
  [34] cats.effect.IOFiber$$Lambda$291.0x0000000800de1900.apply
  [35] cats.effect.unsafe.WorkerThread.blockOn
  [36] scala.concurrent.package$.blocking
  [37] cats.effect.IOFiber.runLoop
  [38] cats.effect.IOFiber.execR
  [39] cats.effect.IOFiber.run
  [40] cats.effect.unsafe.WorkerThread.run

--- 210386225 ns (0.03%), 21 samples
  [ 0] cats.effect.IOFiber.succeeded
  [ 1] cats.effect.IOFiber.runLoop
  [ 2] cats.effect.IOFiber.execR
  [ 3] cats.effect.IOFiber.run
  [ 4] cats.effect.unsafe.WorkerThread.run

--- 210318340 ns (0.03%), 21 samples
  [ 0] rwsem_spin_on_owner_[k]
  [ 1] rwsem_optimistic_spin_[k]
  [ 2] rwsem_down_write_slowpath_[k]
  [ 3] down_write_[k]
  [ 4] do_unlinkat_[k]
  [ 5] __x64_sys_unlink_[k]
  [ 6] do_syscall_64_[k]
  [ 7] entry_SYSCALL_64_after_hwframe_[k]
  [ 8] __GI_unlink
  [ 9] sun.nio.fs.UnixNativeDispatcher.unlink0
  [10] sun.nio.fs.UnixNativeDispatcher.unlink
  [11] sun.nio.fs.UnixFileSystemProvider.implDelete
  [12] sun.nio.fs.AbstractFileSystemProvider.deleteIfExists
  [13] java.nio.file.Files.deleteIfExists
  [14] java.nio.file.Files.copy
  [15] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [16] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [17] jdk.nio.zipfs.ZipPath.newFileChannel
  [18] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [19] java.nio.channels.FileChannel.open
  [20] java.nio.channels.FileChannel.open
  [21] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [22] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25440.apply
  [23] cats.effect.IOFiber.$anonfun$8
  [24] cats.effect.IOFiber$$Lambda$291.0x0000000800de1900.apply
  [25] cats.effect.unsafe.WorkerThread.blockOn
  [26] scala.concurrent.package$.blocking
  [27] cats.effect.IOFiber.runLoop
  [28] cats.effect.IOFiber.execR
  [29] cats.effect.IOFiber.run
  [30] cats.effect.unsafe.WorkerThread.run

--- 200598733 ns (0.03%), 20 samples
  [ 0] kmem_cache_alloc_[k]
  [ 1] spl_kmem_cache_alloc?[spl]_[k]
  [ 2] zio_data_buf_alloc?[zfs]_[k]
  [ 3] zil_itx_create?[zfs]_[k]
  [ 4] zfs_log_write?[zfs]_[k]
  [ 5] zfs_write?[zfs]_[k]
  [ 6] zpl_iter_write?[zfs]_[k]
  [ 7] new_sync_write_[k]
  [ 8] vfs_write_[k]
  [ 9] ksys_write_[k]
  [10] __x64_sys_write_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] write
  [14] sun.nio.ch.FileDispatcherImpl.write0
  [15] sun.nio.ch.FileDispatcherImpl.write
  [16] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.FileChannelImpl.write
  [20] java.nio.channels.Channels.writeFullyImpl
  [21] java.nio.channels.Channels.writeFully
  [22] java.nio.channels.Channels$1.write
  [23] java.io.InputStream.transferTo
  [24] java.nio.file.Files.copy
  [25] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [26] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [27] jdk.nio.zipfs.ZipPath.newFileChannel
  [28] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [29] java.nio.channels.FileChannel.open
  [30] java.nio.channels.FileChannel.open
  [31] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [32] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25440.apply
  [33] cats.effect.IOFiber.$anonfun$8
  [34] cats.effect.IOFiber$$Lambda$291.0x0000000800de1900.apply
  [35] cats.effect.unsafe.WorkerThread.blockOn
  [36] scala.concurrent.package$.blocking
  [37] cats.effect.IOFiber.runLoop
  [38] cats.effect.IOFiber.execR
  [39] cats.effect.IOFiber.run
  [40] cats.effect.unsafe.WorkerThread.run

--- 200572977 ns (0.03%), 20 samples
  [ 0] __vfprintf_internal
  [ 1] [unknown]
  [ 2] java.lang.Thread.setNativeName
  [ 3] java.lang.Thread.setName
  [ 4] cats.effect.unsafe.WorkerThread.blockOn
  [ 5] scala.concurrent.package$.blocking
  [ 6] cats.effect.IOFiber.runLoop
  [ 7] cats.effect.IOFiber.execR
  [ 8] cats.effect.IOFiber.run
  [ 9] cats.effect.unsafe.WorkerThread.run

--- 200453985 ns (0.03%), 20 samples
  [ 0] inotify_merge_[k]
  [ 1] inotify_handle_inode_event_[k]
  [ 2] fsnotify_handle_inode_event.isra.0_[k]
  [ 3] send_to_group_[k]
  [ 4] fsnotify_[k]
  [ 5] __fsnotify_parent_[k]
  [ 6] vfs_write_[k]
  [ 7] ksys_write_[k]
  [ 8] __x64_sys_write_[k]
  [ 9] do_syscall_64_[k]
  [10] entry_SYSCALL_64_after_hwframe_[k]
  [11] write
  [12] sun.nio.ch.FileDispatcherImpl.write0
  [13] sun.nio.ch.FileDispatcherImpl.write
  [14] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [15] sun.nio.ch.IOUtil.write
  [16] sun.nio.ch.IOUtil.write
  [17] sun.nio.ch.FileChannelImpl.write
  [18] java.nio.channels.Channels.writeFullyImpl
  [19] java.nio.channels.Channels.writeFully
  [20] java.nio.channels.Channels$1.write
  [21] java.io.InputStream.transferTo
  [22] java.nio.file.Files.copy
  [23] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [24] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [25] jdk.nio.zipfs.ZipPath.newFileChannel
  [26] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [27] java.nio.channels.FileChannel.open
  [28] java.nio.channels.FileChannel.open
  [29] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [30] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25440.apply
  [31] cats.effect.IOFiber.$anonfun$8
  [32] cats.effect.IOFiber$$Lambda$291.0x0000000800de1900.apply
  [33] cats.effect.unsafe.WorkerThread.blockOn
  [34] scala.concurrent.package$.blocking
  [35] cats.effect.IOFiber.runLoop
  [36] cats.effect.IOFiber.execR
  [37] cats.effect.IOFiber.run
  [38] cats.effect.unsafe.WorkerThread.run

--- 200394104 ns (0.03%), 20 samples
  [ 0] rwsem_spin_on_owner_[k]
  [ 1] rwsem_optimistic_spin_[k]
  [ 2] rwsem_down_write_slowpath_[k]
  [ 3] down_write_[k]
  [ 4] do_unlinkat_[k]
  [ 5] __x64_sys_unlink_[k]
  [ 6] do_syscall_64_[k]
  [ 7] entry_SYSCALL_64_after_hwframe_[k]
  [ 8] __GI_unlink
  [ 9] sun.nio.fs.UnixNativeDispatcher.unlink0
  [10] sun.nio.fs.UnixNativeDispatcher.unlink
  [11] sun.nio.fs.UnixFileSystemProvider.implDelete
  [12] sun.nio.fs.AbstractFileSystemProvider.delete
  [13] java.nio.file.Files.delete
  [14] jdk.nio.zipfs.ZipFileSystem.removeTempPathForEntry
  [15] jdk.nio.zipfs.ZipFileSystem$1.implCloseChannel
  [16] java.nio.channels.spi.AbstractInterruptibleChannel.close
  [17] fs2.io.file.FilesCompanionPlatform.openFileChannel$$anonfun$1$$anonfun$1
  [18] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$openFileChannel$$anonfun$1$$anonfun$adapted$1
  [19] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$307.0x0000000800de3370.apply
  [20] cats.effect.IOFiber.$anonfun$8
  [21] cats.effect.IOFiber$$Lambda$291.0x0000000800de1900.apply
  [22] cats.effect.unsafe.WorkerThread.blockOn
  [23] scala.concurrent.package$.blocking
  [24] cats.effect.IOFiber.runLoop
  [25] cats.effect.IOFiber.execR
  [26] cats.effect.IOFiber.run
  [27] cats.effect.unsafe.WorkerThread.run

--- 200384850 ns (0.03%), 20 samples
  [ 0] jbyte_disjoint_arraycopy
  [ 1] jdk.internal.misc.Unsafe.copyMemory0
  [ 2] jdk.internal.misc.Unsafe.copyMemory
  [ 3] jdk.internal.misc.ScopedMemoryAccess.copyMemoryInternal
  [ 4] jdk.internal.misc.ScopedMemoryAccess.copyMemory
  [ 5] java.nio.ByteBuffer.putBuffer
  [ 6] java.nio.ByteBuffer.put
  [ 7] sun.nio.ch.IOUtil.write
  [ 8] sun.nio.ch.IOUtil.write
  [ 9] sun.nio.ch.FileChannelImpl.write
  [10] java.nio.channels.Channels.writeFullyImpl
  [11] java.nio.channels.Channels.writeFully
  [12] java.nio.channels.Channels$1.write
  [13] java.io.InputStream.transferTo
  [14] java.nio.file.Files.copy
  [15] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [16] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [17] jdk.nio.zipfs.ZipPath.newFileChannel
  [18] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [19] java.nio.channels.FileChannel.open
  [20] java.nio.channels.FileChannel.open
  [21] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [22] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25440.apply
  [23] cats.effect.IOFiber.$anonfun$8
  [24] cats.effect.IOFiber$$Lambda$291.0x0000000800de1900.apply
  [25] cats.effect.unsafe.WorkerThread.blockOn
  [26] scala.concurrent.package$.blocking
  [27] cats.effect.IOFiber.runLoop
  [28] cats.effect.IOFiber.execR
  [29] cats.effect.IOFiber.run
  [30] cats.effect.unsafe.WorkerThread.run

--- 190578482 ns (0.03%), 19 samples
  [ 0] __kmalloc_node_[k]
  [ 1] spl_kmem_alloc_impl?[spl]_[k]
  [ 2] spl_kmem_zalloc?[spl]_[k]
  [ 3] dmu_tx_create_dd?[zfs]_[k]
  [ 4] dmu_tx_create?[zfs]_[k]
  [ 5] zfs_write?[zfs]_[k]
  [ 6] zpl_iter_write?[zfs]_[k]
  [ 7] new_sync_write_[k]
  [ 8] vfs_write_[k]
  [ 9] ksys_write_[k]
  [10] __x64_sys_write_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] write
  [14] sun.nio.ch.FileDispatcherImpl.write0
  [15] sun.nio.ch.FileDispatcherImpl.write
  [16] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.FileChannelImpl.write
  [20] java.nio.channels.Channels.writeFullyImpl
  [21] java.nio.channels.Channels.writeFully
  [22] java.nio.channels.Channels$1.write
  [23] java.io.InputStream.transferTo
  [24] java.nio.file.Files.copy
  [25] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [26] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [27] jdk.nio.zipfs.ZipPath.newFileChannel
  [28] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [29] java.nio.channels.FileChannel.open
  [30] java.nio.channels.FileChannel.open
  [31] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [32] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25440.apply
  [33] cats.effect.IOFiber.$anonfun$8
  [34] cats.effect.IOFiber$$Lambda$291.0x0000000800de1900.apply
  [35] cats.effect.unsafe.WorkerThread.blockOn
  [36] scala.concurrent.package$.blocking
  [37] cats.effect.IOFiber.runLoop
  [38] cats.effect.IOFiber.execR
  [39] cats.effect.IOFiber.run
  [40] cats.effect.unsafe.WorkerThread.run

--- 190550480 ns (0.03%), 19 samples
  [ 0] dnode_hash?[zfs]_[k]
  [ 1] multilist_sublist_lock_obj?[zfs]_[k]
  [ 2] dnode_setdirty?[zfs]_[k]
  [ 3] dnode_set_blksz?[zfs]_[k]
  [ 4] dmu_object_set_blocksize?[zfs]_[k]
  [ 5] zfs_grow_blocksize?[zfs]_[k]
  [ 6] zfs_write?[zfs]_[k]
  [ 7] zpl_iter_write?[zfs]_[k]
  [ 8] new_sync_write_[k]
  [ 9] vfs_write_[k]
  [10] ksys_write_[k]
  [11] __x64_sys_write_[k]
  [12] do_syscall_64_[k]
  [13] entry_SYSCALL_64_after_hwframe_[k]
  [14] write
  [15] sun.nio.ch.FileDispatcherImpl.write0
  [16] sun.nio.ch.FileDispatcherImpl.write
  [17] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.IOUtil.write
  [20] sun.nio.ch.FileChannelImpl.write
  [21] java.nio.channels.Channels.writeFullyImpl
  [22] java.nio.channels.Channels.writeFully
  [23] java.nio.channels.Channels$1.write
  [24] java.io.InputStream.transferTo
  [25] java.nio.file.Files.copy
  [26] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [27] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [28] jdk.nio.zipfs.ZipPath.newFileChannel
  [29] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [30] java.nio.channels.FileChannel.open
  [31] java.nio.channels.FileChannel.open
  [32] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [33] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25440.apply
  [34] cats.effect.IOFiber.$anonfun$8
  [35] cats.effect.IOFiber$$Lambda$291.0x0000000800de1900.apply
  [36] cats.effect.unsafe.WorkerThread.blockOn
  [37] scala.concurrent.package$.blocking
  [38] cats.effect.IOFiber.runLoop
  [39] cats.effect.IOFiber.execR
  [40] cats.effect.IOFiber.run
  [41] cats.effect.unsafe.WorkerThread.run

--- 190444602 ns (0.03%), 19 samples
  [ 0] kmem_cache_free_[k]
  [ 1] spl_kmem_cache_free?[spl]_[k]
  [ 2] zio_data_buf_free?[zfs]_[k]
  [ 3] zil_itx_destroy?[zfs]_[k]
  [ 4] zil_remove_async?[zfs]_[k]
  [ 5] zfs_log_remove?[zfs]_[k]
  [ 6] zfs_remove?[zfs]_[k]
  [ 7] zpl_unlink?[zfs]_[k]
  [ 8] vfs_unlink_[k]
  [ 9] do_unlinkat_[k]
  [10] __x64_sys_unlink_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] __GI_unlink
  [14] sun.nio.fs.UnixNativeDispatcher.unlink0
  [15] sun.nio.fs.UnixNativeDispatcher.unlink
  [16] sun.nio.fs.UnixFileSystemProvider.implDelete
  [17] sun.nio.fs.AbstractFileSystemProvider.delete
  [18] java.nio.file.Files.delete
  [19] jdk.nio.zipfs.ZipFileSystem.removeTempPathForEntry
  [20] jdk.nio.zipfs.ZipFileSystem$1.implCloseChannel
  [21] java.nio.channels.spi.AbstractInterruptibleChannel.close
  [22] fs2.io.file.FilesCompanionPlatform.openFileChannel$$anonfun$1$$anonfun$1
  [23] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$openFileChannel$$anonfun$1$$anonfun$adapted$1
  [24] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$307.0x0000000800de3370.apply
  [25] cats.effect.IOFiber.$anonfun$8
  [26] cats.effect.IOFiber$$Lambda$291.0x0000000800de1900.apply
  [27] cats.effect.unsafe.WorkerThread.blockOn
  [28] scala.concurrent.package$.blocking
  [29] cats.effect.IOFiber.runLoop
  [30] cats.effect.IOFiber.execR
  [31] cats.effect.IOFiber.run
  [32] cats.effect.unsafe.WorkerThread.run

--- 190441688 ns (0.03%), 19 samples
  [ 0] __schedule_[k]
  [ 1] schedule_[k]
  [ 2] do_sched_yield_[k]
  [ 3] __x64_sys_sched_yield_[k]
  [ 4] do_syscall_64_[k]
  [ 5] entry_SYSCALL_64_after_hwframe_[k]
  [ 6] __GI___sched_yield
  [ 7] java.lang.Thread.yield
  [ 8] java.util.concurrent.LinkedTransferQueue.awaitMatch
  [ 9] java.util.concurrent.LinkedTransferQueue.xfer
  [10] java.util.concurrent.LinkedTransferQueue.poll
  [11] cats.effect.unsafe.WorkerThread.run

--- 190391175 ns (0.03%), 19 samples
  [ 0] refill_stock_[k]
  [ 1] obj_cgroup_uncharge_pages_[k]
  [ 2] refill_obj_stock_[k]
  [ 3] obj_cgroup_charge_[k]
  [ 4] __kmalloc_[k]
  [ 5] inotify_handle_inode_event_[k]
  [ 6] fsnotify_handle_inode_event.isra.0_[k]
  [ 7] send_to_group_[k]
  [ 8] fsnotify_[k]
  [ 9] __fsnotify_parent_[k]
  [10] vfs_write_[k]
  [11] ksys_write_[k]
  [12] __x64_sys_write_[k]
  [13] do_syscall_64_[k]
  [14] entry_SYSCALL_64_after_hwframe_[k]
  [15] write
  [16] sun.nio.ch.FileDispatcherImpl.write0
  [17] sun.nio.ch.FileDispatcherImpl.write
  [18] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [19] sun.nio.ch.IOUtil.write
  [20] sun.nio.ch.IOUtil.write
  [21] sun.nio.ch.FileChannelImpl.write
  [22] java.nio.channels.Channels.writeFullyImpl
  [23] java.nio.channels.Channels.writeFully
  [24] java.nio.channels.Channels$1.write
  [25] java.io.InputStream.transferTo
  [26] java.nio.file.Files.copy
  [27] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [28] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [29] jdk.nio.zipfs.ZipPath.newFileChannel
  [30] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [31] java.nio.channels.FileChannel.open
  [32] java.nio.channels.FileChannel.open
  [33] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [34] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25440.apply
  [35] cats.effect.IOFiber.$anonfun$8
  [36] cats.effect.IOFiber$$Lambda$291.0x0000000800de1900.apply
  [37] cats.effect.unsafe.WorkerThread.blockOn
  [38] scala.concurrent.package$.blocking
  [39] cats.effect.IOFiber.runLoop
  [40] cats.effect.IOFiber.execR
  [41] cats.effect.IOFiber.run
  [42] cats.effect.unsafe.WorkerThread.run

--- 190340410 ns (0.03%), 19 samples
  [ 0] fsnotify_insert_event_[k]
  [ 1] inotify_handle_inode_event_[k]
  [ 2] fsnotify_handle_inode_event.isra.0_[k]
  [ 3] send_to_group_[k]
  [ 4] fsnotify_[k]
  [ 5] __fsnotify_parent_[k]
  [ 6] vfs_write_[k]
  [ 7] ksys_write_[k]
  [ 8] __x64_sys_write_[k]
  [ 9] do_syscall_64_[k]
  [10] entry_SYSCALL_64_after_hwframe_[k]
  [11] write
  [12] sun.nio.ch.FileDispatcherImpl.write0
  [13] sun.nio.ch.FileDispatcherImpl.write
  [14] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [15] sun.nio.ch.IOUtil.write
  [16] sun.nio.ch.IOUtil.write
  [17] sun.nio.ch.FileChannelImpl.write
  [18] java.nio.channels.Channels.writeFullyImpl
  [19] java.nio.channels.Channels.writeFully
  [20] java.nio.channels.Channels$1.write
  [21] java.io.InputStream.transferTo
  [22] java.nio.file.Files.copy
  [23] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [24] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [25] jdk.nio.zipfs.ZipPath.newFileChannel
  [26] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [27] java.nio.channels.FileChannel.open
  [28] java.nio.channels.FileChannel.open
  [29] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [30] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25440.apply
  [31] cats.effect.IOFiber.$anonfun$8
  [32] cats.effect.IOFiber$$Lambda$291.0x0000000800de1900.apply
  [33] cats.effect.unsafe.WorkerThread.blockOn
  [34] scala.concurrent.package$.blocking
  [35] cats.effect.IOFiber.runLoop
  [36] cats.effect.IOFiber.execR
  [37] cats.effect.IOFiber.run
  [38] cats.effect.unsafe.WorkerThread.run

--- 190330801 ns (0.03%), 19 samples
  [ 0] syscall_enter_from_user_mode_[k]
  [ 1] do_syscall_64_[k]
  [ 2] entry_SYSCALL_64_after_hwframe_[k]
  [ 3] write
  [ 4] sun.nio.ch.FileDispatcherImpl.write0
  [ 5] sun.nio.ch.FileDispatcherImpl.write
  [ 6] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [ 7] sun.nio.ch.IOUtil.write
  [ 8] sun.nio.ch.IOUtil.write
  [ 9] sun.nio.ch.FileChannelImpl.write
  [10] java.nio.channels.Channels.writeFullyImpl
  [11] java.nio.channels.Channels.writeFully
  [12] java.nio.channels.Channels$1.write
  [13] java.io.InputStream.transferTo
  [14] java.nio.file.Files.copy
  [15] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [16] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [17] jdk.nio.zipfs.ZipPath.newFileChannel
  [18] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [19] java.nio.channels.FileChannel.open
  [20] java.nio.channels.FileChannel.open
  [21] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [22] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25440.apply
  [23] cats.effect.IOFiber.$anonfun$8
  [24] cats.effect.IOFiber$$Lambda$291.0x0000000800de1900.apply
  [25] cats.effect.unsafe.WorkerThread.blockOn
  [26] scala.concurrent.package$.blocking
  [27] cats.effect.IOFiber.runLoop
  [28] cats.effect.IOFiber.execR
  [29] cats.effect.IOFiber.run
  [30] cats.effect.unsafe.WorkerThread.run

--- 190262924 ns (0.03%), 19 samples
  [ 0] rwsem_optimistic_spin_[k]
  [ 1] rwsem_down_write_slowpath_[k]
  [ 2] down_write_[k]
  [ 3] open_last_lookups_[k]
  [ 4] path_openat_[k]
  [ 5] do_filp_open_[k]
  [ 6] do_sys_openat2_[k]
  [ 7] __x64_sys_openat_[k]
  [ 8] do_syscall_64_[k]
  [ 9] entry_SYSCALL_64_after_hwframe_[k]
  [10] __open64
  [11] [unknown]
  [12] sun.nio.fs.UnixNativeDispatcher.open0
  [13] sun.nio.fs.UnixNativeDispatcher.open
  [14] sun.nio.fs.UnixChannelFactory.open
  [15] sun.nio.fs.UnixChannelFactory.newFileChannel
  [16] sun.nio.fs.UnixChannelFactory.newFileChannel
  [17] sun.nio.fs.UnixFileSystemProvider.newByteChannel
  [18] java.nio.file.Files.newByteChannel
  [19] java.nio.file.Files.createFile
  [20] java.nio.file.TempFileHelper.create
  [21] java.nio.file.TempFileHelper.createTempFile
  [22] java.nio.file.Files.createTempFile
  [23] jdk.nio.zipfs.ZipFileSystem.createTempFileInSameDirectoryAs
  [24] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [25] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [26] jdk.nio.zipfs.ZipPath.newFileChannel
  [27] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [28] java.nio.channels.FileChannel.open
  [29] java.nio.channels.FileChannel.open
  [30] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [31] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25440.apply
  [32] cats.effect.IOFiber.$anonfun$8
  [33] cats.effect.IOFiber$$Lambda$291.0x0000000800de1900.apply
  [34] cats.effect.unsafe.WorkerThread.blockOn
  [35] scala.concurrent.package$.blocking
  [36] cats.effect.IOFiber.runLoop
  [37] cats.effect.IOFiber.execR
  [38] cats.effect.IOFiber.run
  [39] cats.effect.unsafe.WorkerThread.run

--- 184581701 ns (0.03%), 18 samples
  [ 0] cats.effect.unsafe.ThreadSafeHashtable.put
  [ 1] cats.effect.unsafe.StripedHashtable.put
  [ 2] cats.effect.IO.unsafeRunFiber
  [ 3] cats.effect.IO.unsafeRunAsync
  [ 4] cats.effect.IOPlatform.unsafeRunTimed
  [ 5] cats.effect.IOPlatform.unsafeRunSync
  [ 6] com.scalamandra.ZipBench.fs2ReadAllBytes
  [ 7] com.scalamandra.jmh_generated.ZipBench_fs2ReadAllBytes_jmhTest.fs2ReadAllBytes_thrpt_jmhStub
  [ 8] com.scalamandra.jmh_generated.ZipBench_fs2ReadAllBytes_jmhTest.fs2ReadAllBytes_Throughput
  [ 9] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [10] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [11] java.lang.reflect.Method.invoke
  [12] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.Executors$RunnableAdapter.call
  [16] java.util.concurrent.FutureTask.run
  [17] java.util.concurrent.ThreadPoolExecutor.runWorker
  [18] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [19] java.lang.Thread.run

--- 180567815 ns (0.03%), 18 samples
  [ 0] pthread_cond_signal@@GLIBC_2.3.2
  [ 1] jdk.internal.misc.Unsafe.unpark
  [ 2] java.util.concurrent.locks.LockSupport.unpark
  [ 3] cats.effect.unsafe.WorkStealingThreadPool.notifyParked
  [ 4] cats.effect.unsafe.WorkerThread.blockOn
  [ 5] scala.concurrent.package$.blocking
  [ 6] cats.effect.IOFiber.runLoop
  [ 7] cats.effect.IOFiber.execR
  [ 8] cats.effect.IOFiber.run
  [ 9] cats.effect.unsafe.WorkerThread.run

--- 180543437 ns (0.03%), 18 samples
  [ 0] dbuf_find?[zfs]_[k]
  [ 1] dbuf_hold_impl?[zfs]_[k]
  [ 2] dbuf_hold_level?[zfs]_[k]
  [ 3] dbuf_hold?[zfs]_[k]
  [ 4] dnode_hold_impl?[zfs]_[k]
  [ 5] dnode_hold?[zfs]_[k]
  [ 6] dmu_object_set_blocksize?[zfs]_[k]
  [ 7] zfs_grow_blocksize?[zfs]_[k]
  [ 8] zfs_write?[zfs]_[k]
  [ 9] zpl_iter_write?[zfs]_[k]
  [10] new_sync_write_[k]
  [11] vfs_write_[k]
  [12] ksys_write_[k]
  [13] __x64_sys_write_[k]
  [14] do_syscall_64_[k]
  [15] entry_SYSCALL_64_after_hwframe_[k]
  [16] write
  [17] sun.nio.ch.FileDispatcherImpl.write0
  [18] sun.nio.ch.FileDispatcherImpl.write
  [19] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [20] sun.nio.ch.IOUtil.write
  [21] sun.nio.ch.IOUtil.write
  [22] sun.nio.ch.FileChannelImpl.write
  [23] java.nio.channels.Channels.writeFullyImpl
  [24] java.nio.channels.Channels.writeFully
  [25] java.nio.channels.Channels$1.write
  [26] java.io.InputStream.transferTo
  [27] java.nio.file.Files.copy
  [28] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [29] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [30] jdk.nio.zipfs.ZipPath.newFileChannel
  [31] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [32] java.nio.channels.FileChannel.open
  [33] java.nio.channels.FileChannel.open
  [34] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [35] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25440.apply
  [36] cats.effect.IOFiber.$anonfun$8
  [37] cats.effect.IOFiber$$Lambda$291.0x0000000800de1900.apply
  [38] cats.effect.unsafe.WorkerThread.blockOn
  [39] scala.concurrent.package$.blocking
  [40] cats.effect.IOFiber.runLoop
  [41] cats.effect.IOFiber.execR
  [42] cats.effect.IOFiber.run
  [43] cats.effect.unsafe.WorkerThread.run

--- 180468764 ns (0.03%), 18 samples
  [ 0] memset_[k]
  [ 1] spl_kmem_cache_alloc?[spl]_[k]
  [ 2] zfs_btree_add_idx?[zfs]_[k]
  [ 3] range_tree_add_impl?[zfs]_[k]
  [ 4] range_tree_add?[zfs]_[k]
  [ 5] dnode_free_range?[zfs]_[k]
  [ 6] dmu_free_long_range_impl?[zfs]_[k]
  [ 7] dmu_free_long_range?[zfs]_[k]
  [ 8] zfs_rmnode?[zfs]_[k]
  [ 9] zfs_zinactive?[zfs]_[k]
  [10] zfs_inactive?[zfs]_[k]
  [11] zpl_evict_inode?[zfs]_[k]
  [12] evict_[k]
  [13] iput_[k]
  [14] do_unlinkat_[k]
  [15] __x64_sys_unlink_[k]
  [16] do_syscall_64_[k]
  [17] entry_SYSCALL_64_after_hwframe_[k]
  [18] __GI_unlink
  [19] sun.nio.fs.UnixNativeDispatcher.unlink0
  [20] sun.nio.fs.UnixNativeDispatcher.unlink
  [21] sun.nio.fs.UnixFileSystemProvider.implDelete
  [22] sun.nio.fs.AbstractFileSystemProvider.delete
  [23] java.nio.file.Files.delete
  [24] jdk.nio.zipfs.ZipFileSystem.removeTempPathForEntry
  [25] jdk.nio.zipfs.ZipFileSystem$1.implCloseChannel
  [26] java.nio.channels.spi.AbstractInterruptibleChannel.close
  [27] fs2.io.file.FilesCompanionPlatform.openFileChannel$$anonfun$1$$anonfun$1
  [28] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$openFileChannel$$anonfun$1$$anonfun$adapted$1
  [29] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$307.0x0000000800de3370.apply
  [30] cats.effect.IOFiber.$anonfun$8
  [31] cats.effect.IOFiber$$Lambda$291.0x0000000800de1900.apply
  [32] cats.effect.unsafe.WorkerThread.blockOn
  [33] scala.concurrent.package$.blocking
  [34] cats.effect.IOFiber.runLoop
  [35] cats.effect.IOFiber.execR
  [36] cats.effect.IOFiber.run
  [37] cats.effect.unsafe.WorkerThread.run

--- 180451132 ns (0.03%), 18 samples
  [ 0] kfree_[k]
  [ 1] spl_kmem_free_impl?[spl]_[k]
  [ 2] spl_kmem_free?[spl]_[k]
  [ 3] dmu_buf_rele_array?[zfs]_[k]
  [ 4] dmu_write_uio_dnode?[zfs]_[k]
  [ 5] dmu_write_uio_dbuf?[zfs]_[k]
  [ 6] zfs_write?[zfs]_[k]
  [ 7] zpl_iter_write?[zfs]_[k]
  [ 8] new_sync_write_[k]
  [ 9] vfs_write_[k]
  [10] ksys_write_[k]
  [11] __x64_sys_write_[k]
  [12] do_syscall_64_[k]
  [13] entry_SYSCALL_64_after_hwframe_[k]
  [14] write
  [15] sun.nio.ch.FileDispatcherImpl.write0
  [16] sun.nio.ch.FileDispatcherImpl.write
  [17] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.IOUtil.write
  [20] sun.nio.ch.FileChannelImpl.write
  [21] java.nio.channels.Channels.writeFullyImpl
  [22] java.nio.channels.Channels.writeFully
  [23] java.nio.channels.Channels$1.write
  [24] java.io.InputStream.transferTo
  [25] java.nio.file.Files.copy
  [26] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [27] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [28] jdk.nio.zipfs.ZipPath.newFileChannel
  [29] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [30] java.nio.channels.FileChannel.open
  [31] java.nio.channels.FileChannel.open
  [32] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [33] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25440.apply
  [34] cats.effect.IOFiber.$anonfun$8
  [35] cats.effect.IOFiber$$Lambda$291.0x0000000800de1900.apply
  [36] cats.effect.unsafe.WorkerThread.blockOn
  [37] scala.concurrent.package$.blocking
  [38] cats.effect.IOFiber.runLoop
  [39] cats.effect.IOFiber.execR
  [40] cats.effect.IOFiber.run
  [41] cats.effect.unsafe.WorkerThread.run

--- 180410308 ns (0.03%), 18 samples
  [ 0] fsnotify_[k]
  [ 1] vfs_unlink_[k]
  [ 2] do_unlinkat_[k]
  [ 3] __x64_sys_unlink_[k]
  [ 4] do_syscall_64_[k]
  [ 5] entry_SYSCALL_64_after_hwframe_[k]
  [ 6] __GI_unlink
  [ 7] sun.nio.fs.UnixNativeDispatcher.unlink0
  [ 8] sun.nio.fs.UnixNativeDispatcher.unlink
  [ 9] sun.nio.fs.UnixFileSystemProvider.implDelete
  [10] sun.nio.fs.AbstractFileSystemProvider.deleteIfExists
  [11] java.nio.file.Files.deleteIfExists
  [12] java.nio.file.Files.copy
  [13] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [14] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [15] jdk.nio.zipfs.ZipPath.newFileChannel
  [16] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [17] java.nio.channels.FileChannel.open
  [18] java.nio.channels.FileChannel.open
  [19] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [20] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25440.apply
  [21] cats.effect.IOFiber.$anonfun$8
  [22] cats.effect.IOFiber$$Lambda$291.0x0000000800de1900.apply
  [23] cats.effect.unsafe.WorkerThread.blockOn
  [24] scala.concurrent.package$.blocking
  [25] cats.effect.IOFiber.runLoop
  [26] cats.effect.IOFiber.execR
  [27] cats.effect.IOFiber.run
  [28] cats.effect.unsafe.WorkerThread.run

          ns  percent  samples  top
  ----------  -------  -------  ---
137997894517   19.35%    13777  /usr/lib/x86_64-linux-gnu/libz.so.1.2.11
 57848470242    8.11%     5774  rwsem_spin_on_owner_[k]
 33637238119    4.72%     3358  osq_lock_[k]
 30000071709    4.21%     2991  _raw_spin_unlock_irqrestore_[k]
 13182210974    1.85%     1315  mutex_lock_[k]
 11477675774    1.61%     1145  memset_[k]
 11386496964    1.60%     1136  memmove_[k]
  9754660302    1.37%      973  _raw_spin_lock_[k]
  9717301489    1.36%      970  __memset_avx2_unaligned_erms
  9467365348    1.33%      945  inflate
  9101359433    1.28%      908  mutex_unlock_[k]
  7057853890    0.99%      704  copy_user_generic_string_[k]
  6406497895    0.90%      639  __kmalloc_node_[k]
  5714141175    0.80%      570  kfree_[k]
  5452839647    0.76%      544  find_vmap_area_[k]
  4972077818    0.70%      496  kmem_cache_alloc_[k]
  4629395905    0.65%      462  refill_stock_[k]
  4411074832    0.62%      440  percpu_counter_add_batch_[k]
  4349550126    0.61%      434  fsnotify_[k]
  3267904530    0.46%      326  zrl_add_impl?[zfs]_[k]
  3197595574    0.45%      319  kmem_cache_free_[k]
  3177707111    0.45%      317  _raw_spin_unlock_[k]
  3146702489    0.44%      314  refill_obj_stock_[k]
  3137525932    0.44%      313  down_read_[k]
  3117198194    0.44%      311  memcg_slab_post_alloc_hook_[k]
  2927488637    0.41%      292  dbuf_find?[zfs]_[k]
  2855210256    0.40%      285  jbyte_disjoint_arraycopy
  2585142790    0.36%      258  send_to_group_[k]
  2545860538    0.36%      254  sa_attr_op?[zfs]_[k]
  2464935536    0.35%      246  page_counter_try_charge_[k]
  2374222316    0.33%      237  jlong_disjoint_arraycopy
  2373997521    0.33%      237  __memmove_avx_unaligned_erms
  2355528348    0.33%      235  spl_kmem_cache_alloc?[spl]_[k]
  2304139334    0.32%      230  java.util.Arrays.copyOfRange
  2215446458    0.31%      221  arc_buf_access?[zfs]_[k]
  2215317464    0.31%      221  spl_mutex_clear_owner?[zfs]_[k]
  2143460063    0.30%      214  java.lang.System.arraycopy
  2095295573    0.29%      209  __cond_resched_[k]
  2087590482    0.29%      208  syscall_enter_from_user_mode_[k]
  1974133052    0.28%      197  __rcu_read_lock_[k]
  1964854463    0.28%      196  dbuf_read?[zfs]_[k]
  1854325954    0.26%      185  dnode_hold_impl?[zfs]_[k]
  1734354400    0.24%      173  dbuf_hold_impl?[zfs]_[k]
  1733700216    0.24%      173  __kmalloc_[k]
  1714242334    0.24%      171  u8_textprep_str?[zunicode]_[k]
  1704186555    0.24%      170  dsl_dir_tempreserve_impl.constprop.0?[zfs]_[k]
  1703541776    0.24%      170  __get_obj_cgroup_from_memcg_[k]
  1694029267    0.24%      169  kmalloc_slab_[k]
  1683323494    0.24%      168  try_charge_memcg_[k]
  1653950887    0.23%      165  zap_hash?[zfs]_[k]
  1644175158    0.23%      164  up_read_[k]
  1633971828    0.23%      163  spl_mutex_set_owner?[zfs]_[k]
  1583757899    0.22%      158  dbuf_rele_and_unlock?[zfs]_[k]
  1533267403    0.21%      153  inotify_handle_inode_event_[k]
  1523584325    0.21%      152  zrl_remove?[zfs]_[k]
  1473474367    0.21%      147  cats.effect.IOFiber.runLoop
  1442644337    0.20%      144  mod_memcg_state_[k]
  1403404991    0.20%      140  strlen_[k]
  1384716912    0.19%      138  java.util.concurrent.ConcurrentLinkedQueue.poll
  1382516268    0.19%      138  java.lang.StringCoding.hasNegatives
  1323209497    0.19%      132  cityhash4?[zcommon]_[k]
  1312996229    0.18%      131  zil_aitx_compare?[zfs]_[k]
  1262923977    0.18%      126  list_head?[zfs]_[k]
  1262733339    0.18%      126  RW_WRITE_HELD?[zfs]_[k]
  1222950944    0.17%      122  dmu_buf_hold_array_by_dnode?[zfs]_[k]
  1182704146    0.17%      118  zfs_write?[zfs]_[k]
  1162419395    0.16%      116  __rcu_read_unlock_[k]
  1152983187    0.16%      115  __x86_return_thunk_[k]
  1152613272    0.16%      115  avl_find?[zavl]_[k]
  1092759058    0.15%      109  dsl_dir_phys?[zfs]_[k]
  1082457586    0.15%      108  __cv_broadcast?[spl]_[k]
  1072750757    0.15%      107  list_del?[zfs]_[k]
  1072384807    0.15%      107  ___slab_alloc_[k]
  1042660386    0.15%      104  memcg_slab_free_hook_[k]
  1011389259    0.14%      101  rwsem_optimistic_spin_[k]
   992063179    0.14%       99  dmu_tx_try_assign?[zfs]_[k]
   982045408    0.14%       98  strcpy_[k]
   962271060    0.13%       96  zio_create?[zfs]_[k]
   952182921    0.13%       95  should_failslab_[k]
   942627571    0.13%       94  __dmu_object_info_from_dnode?[zfs]_[k]
   932250819    0.13%       93  __list_del_entry?[zfs]_[k]
   931624080    0.13%       93  native_queued_spin_lock_slowpath.part.0_[k]
   925189375    0.13%       92  __schedule_[k]
   922024409    0.13%       92  __fget_light_[k]
   914875037    0.13%       91  futex_wake_[k]
   912324912    0.13%       91  kmem_flags_convert?[spl]_[k]
   912313804    0.13%       91  spl_kmem_alloc_impl?[spl]_[k]
   912157039    0.13%       91  aggsum_add?[zfs]_[k]
   882185886    0.12%       88  arch_atomic64_sub_return.constprop.0?[zfs]_[k]
   872014177    0.12%       87  __list_add?[zfs]_[k]
   862087533    0.12%       86  spl_kmem_cache_free?[spl]_[k]
   862039302    0.12%       86  rw_owner?[zfs]_[k]
   861760368    0.12%       86  __d_lookup_[k]
   861744349    0.12%       86  __fsnotify_parent_[k]
   842119838    0.12%       84  cats.effect.unsafe.WorkerThread.run
   811877413    0.11%       81  dbuf_find_dirty_lte?[zfs]_[k]
   811389020    0.11%       81  scala.reflect.ManifestFactory$ByteManifest.newArray
   802131151    0.11%       80  is_vmalloc_addr_[k]
   791510610    0.11%       79  jni_GetPrimitiveArrayCritical
   771476841    0.11%       77  link_path_walk.part.0.constprop.0_[k]
   761867840    0.11%       76  arch_atomic64_read?[zfs]_[k]
   752078608    0.11%       75  __vfprintf_internal
   752065646    0.11%       75  zio_wait?[zfs]_[k]
   746038013    0.10%       74  __tls_get_addr
   741936298    0.10%       74  zap_leaf_array_read?[zfs]_[k]
   741906547    0.10%       74  zap_leaf_lookup?[zfs]_[k]
   741472992    0.10%       74  fsnotify_insert_event_[k]
   741171264    0.10%       74  cats.effect.IOFiber.succeeded
   731975330    0.10%       73  dbuf_read_verify_dnode_crypt?[zfs]_[k]
   731510990    0.10%       73  obj_cgroup_charge_[k]
   731440391    0.10%       73  inotify_merge_[k]
   711622288    0.10%       71  strncpy_from_user_[k]
   711498427    0.10%       71  vfs_write_[k]
   681572791    0.10%       68  zap_lockdir_impl?[zfs]_[k]
   681483106    0.10%       68  apparmor_file_permission_[k]
   681297352    0.10%       68  write
   678577387    0.10%       67  Unsafe_Park
   671457412    0.09%       67  list_empty?[zfs]_[k]
   661657251    0.09%       66  dmu_tx_commit?[zfs]_[k]
   661468362    0.09%       66  list_insert_tail?[zfs]_[k]
   661443708    0.09%       66  zpl_revalidate?[zfs]_[k]
   661339661    0.09%       66  get_obj_cgroup_from_current_[k]
   651151275    0.09%       65  java.nio.HeapByteBuffer.<init>
   641780583    0.09%       64  spl_fstrans_check?[spl]_[k]
   641703235    0.09%       64  list_is_empty?[zfs]_[k]
   621598445    0.09%       62  zfs_acl_next_ace?[zfs]_[k]
   611260375    0.09%       61  txg_list_add?[zfs]_[k]
   601454545    0.08%       60  cats.effect.tracing.RingBuffer.push
   591373394    0.08%       59  arc_tempreserve_space?[zfs]_[k]
   591335265    0.08%       59  dmu_tx_hold_dnode_impl?[zfs]_[k]
   581373890    0.08%       58  __x86_indirect_thunk_rax_[k]
   581341165    0.08%       58  dsl_dir_tempreserve_clear?[zfs]_[k]
   581092729    0.08%       58  __libc_pread64
   571423491    0.08%       57  wmsum_add?[zfs]_[k]
   571291452    0.08%       57  zfs_dirent_lock?[zfs]_[k]
   571287719    0.08%       57  avl_remove?[zavl]_[k]
   564646513    0.08%       56  MemAllocator::allocate() const
   561352710    0.08%       56  dmu_zfetch_prepare?[zfs]_[k]
   561187088    0.08%       56  propagate_protected_usage_[k]
   552828219    0.08%       55  futex_wake_mark_[k]
   551335407    0.08%       55  dmu_object_size_from_db?[zfs]_[k]
   541330929    0.08%       54  list_create.constprop.0?[zfs]_[k]
   541304991    0.08%       54  INIT_LIST_HEAD?[zfs]_[k]
   541258387    0.08%       54  dbuf_rele?[zfs]_[k]
   541099390    0.08%       54  sun.nio.ch.NativeThreadSet.add
   541015059    0.08%       54  lockref_put_return_[k]
   531305122    0.07%       53  read_tsc_[k]
   531198652    0.07%       53  spl_kmem_free?[spl]_[k]
   530993705    0.07%       53  inode_permission_[k]
   530942609    0.07%       53  __open64
   530926693    0.07%       53  sun.nio.ch.FileDispatcherImpl.write0
   521280381    0.07%       52  cityhash_helper.constprop.0?[zcommon]_[k]
   521184533    0.07%       52  ktime_get_raw_ts64_[k]
   520990465    0.07%       52  __lookup_mnt_[k]
   520954021    0.07%       52  sun.nio.ch.FileDispatcherImpl.pread0
   511189371    0.07%       51  dput_[k]
   511153402    0.07%       51  dbuf_dirty?[zfs]_[k]
   504666278    0.07%       50  java.lang.ThreadLocal$ThreadLocalMap.getEntry
   502051053    0.07%       50  pthread_cond_signal@@GLIBC_2.3.2
   501249132    0.07%       50  zfs_rangelock_exit?[zfs]_[k]
   501187793    0.07%       50  multilist_link_active?[zfs]_[k]
   501118719    0.07%       50  dmu_tx_hold_sa?[zfs]_[k]
   501086463    0.07%       50  zio_wait_for_children?[zfs]_[k]
   501031732    0.07%       50  generic_permission_[k]
   491183404    0.07%       49  dnode_rele_and_unlock?[zfs]_[k]
   491176755    0.07%       49  zfs_mknode?[zfs]_[k]
   491104329    0.07%       49  spl_kmem_free_impl?[spl]_[k]
   481191219    0.07%       48  zfs_read?[zfs]_[k]
   481156914    0.07%       48  dnode_rele?[zfs]_[k]
   481095619    0.07%       48  lockref_get_not_zero_[k]
   471118731    0.07%       47  zio_done?[zfs]_[k]
   471086403    0.07%       47  fault_in_readable_[k]
   471026963    0.07%       47  vfs_read_[k]
   470874761    0.07%       47  java.io.InputStream.transferTo
   461248108    0.06%       46  dnode_hash?[zfs]_[k]
   461146656    0.06%       46  zfs_log_write?[zfs]_[k]
   461095170    0.06%       46  zio_ready?[zfs]_[k]
   461065562    0.06%       46  mze_compare?[zfs]_[k]
   451133603    0.06%       44  java.util.concurrent.ConcurrentLinkedQueue.offer
   451048951    0.06%       45  sa_bulk_update_impl?[zfs]_[k]
   450968325    0.06%       45  dsl_pool_need_dirty_delay?[zfs]_[k]
   450925725    0.06%       45  check_heap_object_[k]
   450852980    0.06%       45  zfs_create?[zfs]_[k]
   441463303    0.06%       44  cats.effect.unsafe.ScalQueue.poll
   441232051    0.06%       44  zap_idx_to_blk?[zfs]_[k]
   441167271    0.06%       44  list_add_tail?[zfs]_[k]
   431017683    0.06%       43  sa_get_db?[zfs]_[k]
   430968618    0.06%       43  zap_name_alloc?[zfs]_[k]
   430872577    0.06%       43  sa_build_layouts?[zfs]_[k]
   421321127    0.06%       42  char* UNICODE::as_utf8<signed char>(signed char const*, int&)
   421118078    0.06%       42  zfs_remove?[zfs]_[k]
   421091882    0.06%       42  zil_itx_assign?[zfs]_[k]
   421035318    0.06%       42  dmu_buf_will_dirty_impl?[zfs]_[k]
   420951356    0.06%       42  metaslab_class_get_dspace?[zfs]_[k]
   414321234    0.06%       41  futex_q_lock_[k]
   411446379    0.06%       41  AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<548964ul, G1BarrierSet>, (AccessInternal::BarrierType)2, 548964ul>::oop_access_barrier(void*)
   411261287    0.06%       41  do_syscall_64_[k]
   411038091    0.06%       41  dbuf_whichblock?[zfs]_[k]
   411017007    0.06%       41  __list_del?[zfs]_[k]
   410971790    0.06%       41  dsl_dir_tempreserve_space?[zfs]_[k]
Async profiler results:
  profile/com.scalamandra.ZipBench.fs2ReadAllBytes-Throughput-fileName-under64kb.txt/summary-cpu.txt


# JMH version: 1.32
# VM version: JDK 17.0.6, Java HotSpot(TM) 64-Bit Server VM, 17.0.6+9-LTS-jvmci-22.3-b11
# VM invoker: /home/rajven/graal/java17/bin/java
# VM options: -XX:ThreadPriorityPolicy=1 -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCIProduct -XX:JVMCIThreadsPerNativeLibraryRuntime=1 -XX:-UnlockExperimentalVMOptions
# Blackhole mode: full + dont-inline hint
# Warmup: 20 iterations, 10 s each
# Measurement: 20 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.scalamandra.ZipBench.fs2ReadAllBytes
# Parameters: (fileName = over64kb.txt)

# Run progress: 10,00% complete, ETA 01:00:24
# Fork: 1 of 1
# Preparing profilers: AsyncProfiler 
Java HotSpot(TM) 64-Bit Server VM warning: -XX:ThreadPriorityPolicy=1 may require system level permission, e.g., being the root user. If the necessary permission is not possessed, changes to priority will be silently ignored.
# Warmup Iteration   1: 71,141 ops/s
# Warmup Iteration   2: 72,402 ops/s
# Warmup Iteration   3: 75,199 ops/s
# Warmup Iteration   4: 75,679 ops/s
# Warmup Iteration   5: 73,473 ops/s
# Warmup Iteration   6: 75,762 ops/s
# Warmup Iteration   7: 75,278 ops/s
# Warmup Iteration   8: 76,026 ops/s
# Warmup Iteration   9: 73,051 ops/s
# Warmup Iteration  10: 75,114 ops/s
# Warmup Iteration  11: 74,087 ops/s
# Warmup Iteration  12: 48,745 ops/s
# Warmup Iteration  13: 76,487 ops/s
# Warmup Iteration  14: 73,624 ops/s
# Warmup Iteration  15: 73,423 ops/s
# Warmup Iteration  16: 72,851 ops/s
# Warmup Iteration  17: 72,939 ops/s
# Warmup Iteration  18: 78,104 ops/s
# Warmup Iteration  19: 76,829 ops/s
# Warmup Iteration  20: 76,426 ops/s
Iteration   1: 75,012 ops/s
Iteration   2: 78,479 ops/s
Iteration   3: 73,896 ops/s
Iteration   4: 74,073 ops/s
Iteration   5: 77,267 ops/s
Iteration   6: 76,294 ops/s
Iteration   7: 74,461 ops/s
Iteration   8: 77,443 ops/s
Iteration   9: 73,599 ops/s
Iteration  10: 78,798 ops/s
Iteration  11: 77,745 ops/s
Iteration  12: 75,857 ops/s
Iteration  13: 76,239 ops/s
Iteration  14: 78,508 ops/s
Iteration  15: 78,524 ops/s
Iteration  16: 75,513 ops/s
Iteration  17: 75,362 ops/s
Iteration  18: 78,142 ops/s
Iteration  19: 75,293 ops/s
Iteration  20: [WARN] Unknown argument: summary
78,326 ops/s
                 ·async: (text only)

# Processing profiler results: AsyncProfiler 


Result "com.scalamandra.ZipBench.fs2ReadAllBytes":
  76,442 ±(99.9%) 1,518 ops/s [Average]
  (min, avg, max) = (73,599, 76,442, 78,798), stdev = 1,748
  CI (99.9%): [74,924, 77,959] (assumes normal distribution)

Secondary result "com.scalamandra.ZipBench.fs2ReadAllBytes:·async":
--- Execution profile ---
Total samples       : 98853
GC_active           : 19 (0.02%)
unknown_Java        : 40 (0.04%)
not_walkable_Java   : 1 (0.00%)

--- 200934584472 ns (20.27%), 20053 samples
  [ 0] /usr/lib/x86_64-linux-gnu/libz.so.1.2.11
  [ 1] [unknown]
  [ 2] java.util.zip.Inflater.inflateBytesBytes
  [ 3] java.util.zip.Inflater.inflate
  [ 4] java.util.zip.InflaterInputStream.read
  [ 5] java.io.InputStream.transferTo
  [ 6] java.nio.file.Files.copy
  [ 7] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [ 8] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [ 9] jdk.nio.zipfs.ZipPath.newFileChannel
  [10] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [11] java.nio.channels.FileChannel.open
  [12] java.nio.channels.FileChannel.open
  [13] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [14] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25648.apply
  [15] cats.effect.IOFiber.$anonfun$8
  [16] cats.effect.IOFiber$$Lambda$279.0x0000000800ddde88.apply
  [17] cats.effect.unsafe.WorkerThread.blockOn
  [18] scala.concurrent.package$.blocking
  [19] cats.effect.IOFiber.runLoop
  [20] cats.effect.IOFiber.execR
  [21] cats.effect.IOFiber.run
  [22] cats.effect.unsafe.WorkerThread.run

--- 156761896464 ns (15.81%), 15642 samples
  [ 0] /usr/lib/x86_64-linux-gnu/libz.so.1.2.11
  [ 1] java.util.zip.Inflater.inflateBytesBytes
  [ 2] java.util.zip.Inflater.inflate
  [ 3] java.util.zip.InflaterInputStream.read
  [ 4] java.io.InputStream.transferTo
  [ 5] java.nio.file.Files.copy
  [ 6] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [ 7] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [ 8] jdk.nio.zipfs.ZipPath.newFileChannel
  [ 9] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [10] java.nio.channels.FileChannel.open
  [11] java.nio.channels.FileChannel.open
  [12] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [13] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25648.apply
  [14] cats.effect.IOFiber.$anonfun$8
  [15] cats.effect.IOFiber$$Lambda$279.0x0000000800ddde88.apply
  [16] cats.effect.unsafe.WorkerThread.blockOn
  [17] scala.concurrent.package$.blocking
  [18] cats.effect.IOFiber.runLoop
  [19] cats.effect.IOFiber.execR
  [20] cats.effect.IOFiber.run
  [21] cats.effect.unsafe.WorkerThread.run

--- 44499882945 ns (4.49%), 4437 samples
  [ 0] _raw_spin_unlock_irqrestore_[k]
  [ 1] __wake_up_common_lock_[k]
  [ 2] __wake_up_[k]
  [ 3] fsnotify_insert_event_[k]
  [ 4] inotify_handle_inode_event_[k]
  [ 5] fsnotify_handle_inode_event.isra.0_[k]
  [ 6] send_to_group_[k]
  [ 7] fsnotify_[k]
  [ 8] __fsnotify_parent_[k]
  [ 9] vfs_write_[k]
  [10] ksys_write_[k]
  [11] __x64_sys_write_[k]
  [12] do_syscall_64_[k]
  [13] entry_SYSCALL_64_after_hwframe_[k]
  [14] write
  [15] sun.nio.ch.FileDispatcherImpl.write0
  [16] sun.nio.ch.FileDispatcherImpl.write
  [17] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.IOUtil.write
  [20] sun.nio.ch.FileChannelImpl.write
  [21] java.nio.channels.Channels.writeFullyImpl
  [22] java.nio.channels.Channels.writeFully
  [23] java.nio.channels.Channels$1.write
  [24] java.io.InputStream.transferTo
  [25] java.nio.file.Files.copy
  [26] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [27] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [28] jdk.nio.zipfs.ZipPath.newFileChannel
  [29] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [30] java.nio.channels.FileChannel.open
  [31] java.nio.channels.FileChannel.open
  [32] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [33] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25648.apply
  [34] cats.effect.IOFiber.$anonfun$8
  [35] cats.effect.IOFiber$$Lambda$279.0x0000000800ddde88.apply
  [36] cats.effect.unsafe.WorkerThread.blockOn
  [37] scala.concurrent.package$.blocking
  [38] cats.effect.IOFiber.runLoop
  [39] cats.effect.IOFiber.execR
  [40] cats.effect.IOFiber.run
  [41] cats.effect.unsafe.WorkerThread.run

--- 20897874224 ns (2.11%), 2085 samples
  [ 0] inflate
  [ 1] java.util.zip.Inflater.inflateBytesBytes
  [ 2] java.util.zip.Inflater.inflate
  [ 3] java.util.zip.InflaterInputStream.read
  [ 4] java.io.InputStream.transferTo
  [ 5] java.nio.file.Files.copy
  [ 6] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [ 7] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [ 8] jdk.nio.zipfs.ZipPath.newFileChannel
  [ 9] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [10] java.nio.channels.FileChannel.open
  [11] java.nio.channels.FileChannel.open
  [12] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [13] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25648.apply
  [14] cats.effect.IOFiber.$anonfun$8
  [15] cats.effect.IOFiber$$Lambda$279.0x0000000800ddde88.apply
  [16] cats.effect.unsafe.WorkerThread.blockOn
  [17] scala.concurrent.package$.blocking
  [18] cats.effect.IOFiber.runLoop
  [19] cats.effect.IOFiber.execR
  [20] cats.effect.IOFiber.run
  [21] cats.effect.unsafe.WorkerThread.run

--- 16257650809 ns (1.64%), 1619 samples
  [ 0] copy_user_generic_string_[k]
  [ 1] zfs_uiomove_iter?[zfs]_[k]
  [ 2] zfs_uiomove?[zfs]_[k]
  [ 3] dmu_read_uio_dnode?[zfs]_[k]
  [ 4] dmu_read_uio_dbuf?[zfs]_[k]
  [ 5] zfs_read?[zfs]_[k]
  [ 6] zpl_iter_read?[zfs]_[k]
  [ 7] new_sync_read_[k]
  [ 8] vfs_read_[k]
  [ 9] __x64_sys_pread64_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] __libc_pread64
  [13] sun.nio.ch.FileDispatcherImpl.pread0
  [14] sun.nio.ch.FileDispatcherImpl.pread
  [15] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [16] sun.nio.ch.IOUtil.read
  [17] sun.nio.ch.IOUtil.read
  [18] sun.nio.ch.FileChannelImpl.readInternal
  [19] sun.nio.ch.FileChannelImpl.read
  [20] jdk.nio.zipfs.ZipFileSystem$1.read
  [21] fs2.io.file.FileHandleCompanionPlatform$$anon$1.read$$anonfun$1
  [22] fs2.io.file.FileHandleCompanionPlatform$$anon$1$$Lambda$320.0x0000000800ded1e8.apply
  [23] cats.effect.IOFiber.$anonfun$8
  [24] cats.effect.IOFiber$$Lambda$279.0x0000000800ddde88.apply
  [25] cats.effect.unsafe.WorkerThread.blockOn
  [26] scala.concurrent.package$.blocking
  [27] cats.effect.IOFiber.runLoop
  [28] cats.effect.IOFiber.execR
  [29] cats.effect.IOFiber.run
  [30] cats.effect.unsafe.WorkerThread.run

--- 15994086301 ns (1.61%), 1595 samples
  [ 0] java.lang.System.arraycopy
  [ 1] fs2.Chunk$ArraySlice.copyToArray
  [ 2] fs2.Chunk.toArray
  [ 3] com.scalamandra.ZipLib$.$anonfun$1
  [ 4] com.scalamandra.ZipLib$$$Lambda$325.0x0000000800df40b8.apply
  [ 5] scala.Option.map
  [ 6] com.scalamandra.ZipLib$.com$scalamandra$ZipLib$$anon$1$$_$fs2ReadAllBytes$$anonfun$1$$anonfun$1$$anonfun$2$$anonfun$1
  [ 7] com.scalamandra.ZipLib$$anon$1$$Lambda$322.0x0000000800dedc48.apply
  [ 8] cats.effect.IOFiber.succeeded
  [ 9] cats.effect.IOFiber.runLoop
  [10] cats.effect.IOFiber.execR
  [11] cats.effect.IOFiber.run
  [12] cats.effect.unsafe.WorkerThread.run

--- 15850761687 ns (1.60%), 1580 samples
  [ 0] jbyte_disjoint_arraycopy
  [ 1] jdk.internal.misc.Unsafe.copyMemory0
  [ 2] jdk.internal.misc.Unsafe.copyMemory
  [ 3] jdk.internal.misc.ScopedMemoryAccess.copyMemoryInternal
  [ 4] jdk.internal.misc.ScopedMemoryAccess.copyMemory
  [ 5] java.nio.ByteBuffer.putBuffer
  [ 6] java.nio.ByteBuffer.put
  [ 7] java.nio.HeapByteBuffer.put
  [ 8] sun.nio.ch.IOUtil.read
  [ 9] sun.nio.ch.IOUtil.read
  [10] sun.nio.ch.FileChannelImpl.readInternal
  [11] sun.nio.ch.FileChannelImpl.read
  [12] jdk.nio.zipfs.ZipFileSystem$1.read
  [13] fs2.io.file.FileHandleCompanionPlatform$$anon$1.read$$anonfun$1
  [14] fs2.io.file.FileHandleCompanionPlatform$$anon$1$$Lambda$320.0x0000000800ded1e8.apply
  [15] cats.effect.IOFiber.$anonfun$8
  [16] cats.effect.IOFiber$$Lambda$279.0x0000000800ddde88.apply
  [17] cats.effect.unsafe.WorkerThread.blockOn
  [18] scala.concurrent.package$.blocking
  [19] cats.effect.IOFiber.runLoop
  [20] cats.effect.IOFiber.execR
  [21] cats.effect.IOFiber.run
  [22] cats.effect.unsafe.WorkerThread.run

--- 15768966796 ns (1.59%), 1572 samples
  [ 0] java.util.Arrays.copyOfRange
  [ 1] java.lang.String.<init>
  [ 2] java.lang.String.<init>
  [ 3] com.scalamandra.ZipLib$.com$scalamandra$ZipLib$$anon$1$$_$fs2ReadAllBytes$$anonfun$1$$anonfun$1$$anonfun$2$$anonfun$2
  [ 4] com.scalamandra.ZipLib$$anon$1$$Lambda$323.0x0000000800dee010.apply
  [ 5] cats.effect.IOFiber.succeeded
  [ 6] cats.effect.IOFiber.runLoop
  [ 7] cats.effect.IOFiber.execR
  [ 8] cats.effect.IOFiber.run
  [ 9] cats.effect.unsafe.WorkerThread.run

--- 10098931238 ns (1.02%), 1008 samples
  [ 0] /usr/lib/x86_64-linux-gnu/libz.so.1.2.11
  [ 1] [unknown]
  [ 2] java.util.zip.Inflater.inflateBytesBytes
  [ 3] java.util.zip.Inflater.inflate
  [ 4] java.util.zip.InflaterInputStream.read
  [ 5] java.io.InputStream.transferTo
  [ 6] java.nio.file.Files.copy
  [ 7] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [ 8] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [ 9] jdk.nio.zipfs.ZipPath.newFileChannel
  [10] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [11] java.nio.channels.FileChannel.open
  [12] java.nio.channels.FileChannel.open
  [13] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [14] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25648.apply
  [15] cats.effect.IOFiber.$anonfun$8
  [16] cats.effect.IOFiber$$Lambda$279.0x0000000800ddde88.apply
  [17] cats.effect.unsafe.WorkerThread.blockOn
  [18] scala.concurrent.package$.blocking
  [19] cats.effect.IOFiber.runLoop
  [20] cats.effect.IOFiber.execR
  [21] cats.effect.IOFiber.run
  [22] cats.effect.unsafe.WorkerThread.run

--- 9639730965 ns (0.97%), 961 samples
  [ 0] __memset_avx2_unaligned_erms
  [ 1] MemAllocator::allocate() const
  [ 2] TypeArrayKlass::allocate_common(int, bool, JavaThread*)
  [ 3] JVMCIRuntime::new_array_common(JavaThread*, Klass*, int, bool)
  [ 4] java.nio.charset.Charset.forName
  [ 5] com.scalamandra.ZipLib$.com$scalamandra$ZipLib$$anon$1$$_$fs2ReadAllBytes$$anonfun$1$$anonfun$1$$anonfun$2$$anonfun$2
  [ 6] com.scalamandra.ZipLib$$anon$1$$Lambda$323.0x0000000800dee010.apply
  [ 7] cats.effect.IOFiber.succeeded
  [ 8] cats.effect.IOFiber.runLoop
  [ 9] cats.effect.IOFiber.execR
  [10] cats.effect.IOFiber.run
  [11] cats.effect.unsafe.WorkerThread.run

--- 9557769799 ns (0.96%), 953 samples
  [ 0] java.lang.StringCoding.hasNegatives
  [ 1] java.lang.String.<init>
  [ 2] java.lang.String.<init>
  [ 3] com.scalamandra.ZipLib$.com$scalamandra$ZipLib$$anon$1$$_$fs2ReadAllBytes$$anonfun$1$$anonfun$1$$anonfun$2$$anonfun$2
  [ 4] com.scalamandra.ZipLib$$anon$1$$Lambda$323.0x0000000800dee010.apply
  [ 5] cats.effect.IOFiber.succeeded
  [ 6] cats.effect.IOFiber.runLoop
  [ 7] cats.effect.IOFiber.execR
  [ 8] cats.effect.IOFiber.run
  [ 9] cats.effect.unsafe.WorkerThread.run

--- 9392549016 ns (0.95%), 936 samples
  [ 0] __memset_avx2_unaligned_erms
  [ 1] MemAllocator::allocate() const
  [ 2] TypeArrayKlass::allocate_common(int, bool, JavaThread*)
  [ 3] JVMCIRuntime::new_array_common(JavaThread*, Klass*, int, bool)
  [ 4] fs2.io.file.FileHandleCompanionPlatform$$anon$1.read$$anonfun$1
  [ 5] fs2.io.file.FileHandleCompanionPlatform$$anon$1$$Lambda$320.0x0000000800ded1e8.apply
  [ 6] cats.effect.IOFiber.$anonfun$8
  [ 7] cats.effect.IOFiber$$Lambda$279.0x0000000800ddde88.apply
  [ 8] cats.effect.unsafe.WorkerThread.blockOn
  [ 9] scala.concurrent.package$.blocking
  [10] cats.effect.IOFiber.runLoop
  [11] cats.effect.IOFiber.execR
  [12] cats.effect.IOFiber.run
  [13] cats.effect.unsafe.WorkerThread.run

--- 9198194696 ns (0.93%), 917 samples
  [ 0] __memset_avx2_unaligned_erms
  [ 1] MemAllocator::allocate() const
  [ 2] TypeArrayKlass::allocate_common(int, bool, JavaThread*)
  [ 3] JVMCIRuntime::new_array_common(JavaThread*, Klass*, int, bool)
  [ 4] fs2.Chunk.toArray
  [ 5] com.scalamandra.ZipLib$.$anonfun$1
  [ 6] com.scalamandra.ZipLib$$$Lambda$325.0x0000000800df40b8.apply
  [ 7] scala.Option.map
  [ 8] com.scalamandra.ZipLib$.com$scalamandra$ZipLib$$anon$1$$_$fs2ReadAllBytes$$anonfun$1$$anonfun$1$$anonfun$2$$anonfun$1
  [ 9] com.scalamandra.ZipLib$$anon$1$$Lambda$322.0x0000000800dedc48.apply
  [10] cats.effect.IOFiber.succeeded
  [11] cats.effect.IOFiber.runLoop
  [12] cats.effect.IOFiber.execR
  [13] cats.effect.IOFiber.run
  [14] cats.effect.unsafe.WorkerThread.run

--- 8972849080 ns (0.91%), 894 samples
  [ 0] copy_user_generic_string_[k]
  [ 1] zfs_uiomove_iter?[zfs]_[k]
  [ 2] zfs_uiomove?[zfs]_[k]
  [ 3] dmu_write_uio_dnode?[zfs]_[k]
  [ 4] dmu_write_uio_dbuf?[zfs]_[k]
  [ 5] zfs_write?[zfs]_[k]
  [ 6] zpl_iter_write?[zfs]_[k]
  [ 7] new_sync_write_[k]
  [ 8] vfs_write_[k]
  [ 9] ksys_write_[k]
  [10] __x64_sys_write_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] write
  [14] sun.nio.ch.FileDispatcherImpl.write0
  [15] sun.nio.ch.FileDispatcherImpl.write
  [16] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.FileChannelImpl.write
  [20] java.nio.channels.Channels.writeFullyImpl
  [21] java.nio.channels.Channels.writeFully
  [22] java.nio.channels.Channels$1.write
  [23] java.io.InputStream.transferTo
  [24] java.nio.file.Files.copy
  [25] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [26] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [27] jdk.nio.zipfs.ZipPath.newFileChannel
  [28] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [29] java.nio.channels.FileChannel.open
  [30] java.nio.channels.FileChannel.open
  [31] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [32] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25648.apply
  [33] cats.effect.IOFiber.$anonfun$8
  [34] cats.effect.IOFiber$$Lambda$279.0x0000000800ddde88.apply
  [35] cats.effect.unsafe.WorkerThread.blockOn
  [36] scala.concurrent.package$.blocking
  [37] cats.effect.IOFiber.runLoop
  [38] cats.effect.IOFiber.execR
  [39] cats.effect.IOFiber.run
  [40] cats.effect.unsafe.WorkerThread.run

--- 8547988459 ns (0.86%), 853 samples
  [ 0] /usr/lib/x86_64-linux-gnu/libz.so.1.2.11
  [ 1] java.util.zip.Inflater.inflateBytesBytes
  [ 2] java.util.zip.Inflater.inflate
  [ 3] java.util.zip.InflaterInputStream.read
  [ 4] java.io.InputStream.transferTo
  [ 5] java.nio.file.Files.copy
  [ 6] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [ 7] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [ 8] jdk.nio.zipfs.ZipPath.newFileChannel
  [ 9] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [10] java.nio.channels.FileChannel.open
  [11] java.nio.channels.FileChannel.open
  [12] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [13] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25648.apply
  [14] cats.effect.IOFiber.$anonfun$8
  [15] cats.effect.IOFiber$$Lambda$279.0x0000000800ddde88.apply
  [16] cats.effect.unsafe.WorkerThread.blockOn
  [17] scala.concurrent.package$.blocking
  [18] cats.effect.IOFiber.runLoop
  [19] cats.effect.IOFiber.execR
  [20] cats.effect.IOFiber.run
  [21] cats.effect.unsafe.WorkerThread.run

--- 8498663049 ns (0.86%), 847 samples
  [ 0] memset_[k]
  [ 1] dbuf_read_impl.constprop.0?[zfs]_[k]
  [ 2] dbuf_read?[zfs]_[k]
  [ 3] dmu_tx_check_ioerr?[zfs]_[k]
  [ 4] dmu_tx_count_write?[zfs]_[k]
  [ 5] dmu_tx_hold_write_by_dnode?[zfs]_[k]
  [ 6] zfs_write?[zfs]_[k]
  [ 7] zpl_iter_write?[zfs]_[k]
  [ 8] new_sync_write_[k]
  [ 9] vfs_write_[k]
  [10] ksys_write_[k]
  [11] __x64_sys_write_[k]
  [12] do_syscall_64_[k]
  [13] entry_SYSCALL_64_after_hwframe_[k]
  [14] write
  [15] sun.nio.ch.FileDispatcherImpl.write0
  [16] sun.nio.ch.FileDispatcherImpl.write
  [17] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.IOUtil.write
  [20] sun.nio.ch.FileChannelImpl.write
  [21] java.nio.channels.Channels.writeFullyImpl
  [22] java.nio.channels.Channels.writeFully
  [23] java.nio.channels.Channels$1.write
  [24] java.io.InputStream.transferTo
  [25] java.nio.file.Files.copy
  [26] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [27] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [28] jdk.nio.zipfs.ZipPath.newFileChannel
  [29] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [30] java.nio.channels.FileChannel.open
  [31] java.nio.channels.FileChannel.open
  [32] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [33] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25648.apply
  [34] cats.effect.IOFiber.$anonfun$8
  [35] cats.effect.IOFiber$$Lambda$279.0x0000000800ddde88.apply
  [36] cats.effect.unsafe.WorkerThread.blockOn
  [37] scala.concurrent.package$.blocking
  [38] cats.effect.IOFiber.runLoop
  [39] cats.effect.IOFiber.execR
  [40] cats.effect.IOFiber.run
  [41] cats.effect.unsafe.WorkerThread.run

--- 5183640396 ns (0.52%), 517 samples
  [ 0] __memmove_avx_unaligned_erms
  [ 1] java.util.zip.Inflater.inflateBytesBytes
  [ 2] java.util.zip.Inflater.inflate
  [ 3] java.util.zip.InflaterInputStream.read
  [ 4] java.io.InputStream.transferTo
  [ 5] java.nio.file.Files.copy
  [ 6] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [ 7] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [ 8] jdk.nio.zipfs.ZipPath.newFileChannel
  [ 9] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [10] java.nio.channels.FileChannel.open
  [11] java.nio.channels.FileChannel.open
  [12] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [13] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25648.apply
  [14] cats.effect.IOFiber.$anonfun$8
  [15] cats.effect.IOFiber$$Lambda$279.0x0000000800ddde88.apply
  [16] cats.effect.unsafe.WorkerThread.blockOn
  [17] scala.concurrent.package$.blocking
  [18] cats.effect.IOFiber.runLoop
  [19] cats.effect.IOFiber.execR
  [20] cats.effect.IOFiber.run
  [21] cats.effect.unsafe.WorkerThread.run

--- 5164503778 ns (0.52%), 515 samples
  [ 0] refill_stock_[k]
  [ 1] try_charge_memcg_[k]
  [ 2] obj_cgroup_charge_[k]
  [ 3] __kmalloc_[k]
  [ 4] inotify_handle_inode_event_[k]
  [ 5] fsnotify_handle_inode_event.isra.0_[k]
  [ 6] send_to_group_[k]
  [ 7] fsnotify_[k]
  [ 8] __fsnotify_parent_[k]
  [ 9] vfs_write_[k]
  [10] ksys_write_[k]
  [11] __x64_sys_write_[k]
  [12] do_syscall_64_[k]
  [13] entry_SYSCALL_64_after_hwframe_[k]
  [14] write
  [15] sun.nio.ch.FileDispatcherImpl.write0
  [16] sun.nio.ch.FileDispatcherImpl.write
  [17] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.IOUtil.write
  [20] sun.nio.ch.FileChannelImpl.write
  [21] java.nio.channels.Channels.writeFullyImpl
  [22] java.nio.channels.Channels.writeFully
  [23] java.nio.channels.Channels$1.write
  [24] java.io.InputStream.transferTo
  [25] java.nio.file.Files.copy
  [26] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [27] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [28] jdk.nio.zipfs.ZipPath.newFileChannel
  [29] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [30] java.nio.channels.FileChannel.open
  [31] java.nio.channels.FileChannel.open
  [32] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [33] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25648.apply
  [34] cats.effect.IOFiber.$anonfun$8
  [35] cats.effect.IOFiber$$Lambda$279.0x0000000800ddde88.apply
  [36] cats.effect.unsafe.WorkerThread.blockOn
  [37] scala.concurrent.package$.blocking
  [38] cats.effect.IOFiber.runLoop
  [39] cats.effect.IOFiber.execR
  [40] cats.effect.IOFiber.run
  [41] cats.effect.unsafe.WorkerThread.run

--- 4745681167 ns (0.48%), 473 samples
  [ 0] jlong_disjoint_arraycopy
  [ 1] jdk.internal.misc.Unsafe.copyMemory0
  [ 2] jdk.internal.misc.Unsafe.copyMemory
  [ 3] jdk.internal.misc.ScopedMemoryAccess.copyMemoryInternal
  [ 4] jdk.internal.misc.ScopedMemoryAccess.copyMemory
  [ 5] java.nio.ByteBuffer.putBuffer
  [ 6] java.nio.ByteBuffer.put
  [ 7] sun.nio.ch.IOUtil.write
  [ 8] sun.nio.ch.IOUtil.write
  [ 9] sun.nio.ch.FileChannelImpl.write
  [10] java.nio.channels.Channels.writeFullyImpl
  [11] java.nio.channels.Channels.writeFully
  [12] java.nio.channels.Channels$1.write
  [13] java.io.InputStream.transferTo
  [14] java.nio.file.Files.copy
  [15] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [16] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [17] jdk.nio.zipfs.ZipPath.newFileChannel
  [18] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [19] java.nio.channels.FileChannel.open
  [20] java.nio.channels.FileChannel.open
  [21] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [22] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25648.apply
  [23] cats.effect.IOFiber.$anonfun$8
  [24] cats.effect.IOFiber$$Lambda$279.0x0000000800ddde88.apply
  [25] cats.effect.unsafe.WorkerThread.blockOn
  [26] scala.concurrent.package$.blocking
  [27] cats.effect.IOFiber.runLoop
  [28] cats.effect.IOFiber.execR
  [29] cats.effect.IOFiber.run
  [30] cats.effect.unsafe.WorkerThread.run

--- 4717272603 ns (0.48%), 470 samples
  [ 0] fsnotify_[k]
  [ 1] __fsnotify_parent_[k]
  [ 2] vfs_write_[k]
  [ 3] ksys_write_[k]
  [ 4] __x64_sys_write_[k]
  [ 5] do_syscall_64_[k]
  [ 6] entry_SYSCALL_64_after_hwframe_[k]
  [ 7] write
  [ 8] sun.nio.ch.FileDispatcherImpl.write0
  [ 9] sun.nio.ch.FileDispatcherImpl.write
  [10] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [11] sun.nio.ch.IOUtil.write
  [12] sun.nio.ch.IOUtil.write
  [13] sun.nio.ch.FileChannelImpl.write
  [14] java.nio.channels.Channels.writeFullyImpl
  [15] java.nio.channels.Channels.writeFully
  [16] java.nio.channels.Channels$1.write
  [17] java.io.InputStream.transferTo
  [18] java.nio.file.Files.copy
  [19] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [20] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [21] jdk.nio.zipfs.ZipPath.newFileChannel
  [22] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [23] java.nio.channels.FileChannel.open
  [24] java.nio.channels.FileChannel.open
  [25] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [26] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25648.apply
  [27] cats.effect.IOFiber.$anonfun$8
  [28] cats.effect.IOFiber$$Lambda$279.0x0000000800ddde88.apply
  [29] cats.effect.unsafe.WorkerThread.blockOn
  [30] scala.concurrent.package$.blocking
  [31] cats.effect.IOFiber.runLoop
  [32] cats.effect.IOFiber.execR
  [33] cats.effect.IOFiber.run
  [34] cats.effect.unsafe.WorkerThread.run

--- 4703453585 ns (0.47%), 469 samples
  [ 0] refill_obj_stock_[k]
  [ 1] obj_cgroup_charge_[k]
  [ 2] __kmalloc_[k]
  [ 3] inotify_handle_inode_event_[k]
  [ 4] fsnotify_handle_inode_event.isra.0_[k]
  [ 5] send_to_group_[k]
  [ 6] fsnotify_[k]
  [ 7] __fsnotify_parent_[k]
  [ 8] vfs_write_[k]
  [ 9] ksys_write_[k]
  [10] __x64_sys_write_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] write
  [14] sun.nio.ch.FileDispatcherImpl.write0
  [15] sun.nio.ch.FileDispatcherImpl.write
  [16] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.FileChannelImpl.write
  [20] java.nio.channels.Channels.writeFullyImpl
  [21] java.nio.channels.Channels.writeFully
  [22] java.nio.channels.Channels$1.write
  [23] java.io.InputStream.transferTo
  [24] java.nio.file.Files.copy
  [25] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [26] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [27] jdk.nio.zipfs.ZipPath.newFileChannel
  [28] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [29] java.nio.channels.FileChannel.open
  [30] java.nio.channels.FileChannel.open
  [31] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [32] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25648.apply
  [33] cats.effect.IOFiber.$anonfun$8
  [34] cats.effect.IOFiber$$Lambda$279.0x0000000800ddde88.apply
  [35] cats.effect.unsafe.WorkerThread.blockOn
  [36] scala.concurrent.package$.blocking
  [37] cats.effect.IOFiber.runLoop
  [38] cats.effect.IOFiber.execR
  [39] cats.effect.IOFiber.run
  [40] cats.effect.unsafe.WorkerThread.run

--- 4435528964 ns (0.45%), 442 samples
  [ 0] clear_page_rep_[k]
  [ 1] get_page_from_freelist_[k]
  [ 2] __alloc_pages_[k]
  [ 3] __folio_alloc_[k]
  [ 4] vma_alloc_folio_[k]
  [ 5] do_anonymous_page_[k]
  [ 6] handle_pte_fault_[k]
  [ 7] __handle_mm_fault_[k]
  [ 8] handle_mm_fault_[k]
  [ 9] do_user_addr_fault_[k]
  [10] exc_page_fault_[k]
  [11] asm_exc_page_fault_[k]
  [12] __memset_avx2_unaligned_erms
  [13] MemAllocator::allocate() const
  [14] TypeArrayKlass::allocate_common(int, bool, JavaThread*)
  [15] JVMCIRuntime::new_array_common(JavaThread*, Klass*, int, bool)
  [16] fs2.io.file.FileHandleCompanionPlatform$$anon$1.read$$anonfun$1
  [17] fs2.io.file.FileHandleCompanionPlatform$$anon$1$$Lambda$320.0x0000000800ded1e8.apply
  [18] cats.effect.IOFiber.$anonfun$8
  [19] cats.effect.IOFiber$$Lambda$279.0x0000000800ddde88.apply
  [20] cats.effect.unsafe.WorkerThread.blockOn
  [21] scala.concurrent.package$.blocking
  [22] cats.effect.IOFiber.runLoop
  [23] cats.effect.IOFiber.execR
  [24] cats.effect.IOFiber.run
  [25] cats.effect.unsafe.WorkerThread.run

--- 4317381610 ns (0.44%), 430 samples
  [ 0] clear_page_rep_[k]
  [ 1] get_page_from_freelist_[k]
  [ 2] __alloc_pages_[k]
  [ 3] __folio_alloc_[k]
  [ 4] vma_alloc_folio_[k]
  [ 5] do_anonymous_page_[k]
  [ 6] handle_pte_fault_[k]
  [ 7] __handle_mm_fault_[k]
  [ 8] handle_mm_fault_[k]
  [ 9] do_user_addr_fault_[k]
  [10] exc_page_fault_[k]
  [11] asm_exc_page_fault_[k]
  [12] __memset_avx2_unaligned_erms
  [13] MemAllocator::allocate() const
  [14] TypeArrayKlass::allocate_common(int, bool, JavaThread*)
  [15] JVMCIRuntime::new_array_common(JavaThread*, Klass*, int, bool)
  [16] fs2.Chunk.toArray
  [17] com.scalamandra.ZipLib$.$anonfun$1
  [18] com.scalamandra.ZipLib$$$Lambda$325.0x0000000800df40b8.apply
  [19] scala.Option.map
  [20] com.scalamandra.ZipLib$.com$scalamandra$ZipLib$$anon$1$$_$fs2ReadAllBytes$$anonfun$1$$anonfun$1$$anonfun$2$$anonfun$1
  [21] com.scalamandra.ZipLib$$anon$1$$Lambda$322.0x0000000800dedc48.apply
  [22] cats.effect.IOFiber.succeeded
  [23] cats.effect.IOFiber.runLoop
  [24] cats.effect.IOFiber.execR
  [25] cats.effect.IOFiber.run
  [26] cats.effect.unsafe.WorkerThread.run

--- 4165166033 ns (0.42%), 415 samples
  [ 0] copy_user_generic_string_[k]
  [ 1] zfs_uiomove_iter?[zfs]_[k]
  [ 2] zfs_uiomove?[zfs]_[k]
  [ 3] dmu_read_uio_dnode?[zfs]_[k]
  [ 4] dmu_read_uio_dbuf?[zfs]_[k]
  [ 5] mappedread?[zfs]_[k]
  [ 6] zfs_read?[zfs]_[k]
  [ 7] zpl_iter_read?[zfs]_[k]
  [ 8] new_sync_read_[k]
  [ 9] vfs_read_[k]
  [10] __x64_sys_pread64_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] __libc_pread64
  [14] sun.nio.ch.FileDispatcherImpl.pread0
  [15] sun.nio.ch.FileDispatcherImpl.pread
  [16] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [17] sun.nio.ch.IOUtil.read
  [18] sun.nio.ch.IOUtil.read
  [19] sun.nio.ch.FileChannelImpl.readInternal
  [20] sun.nio.ch.FileChannelImpl.read
  [21] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [22] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [23] jdk.nio.zipfs.ZipFileSystem$2.fill
  [24] java.util.zip.InflaterInputStream.read
  [25] java.io.InputStream.transferTo
  [26] java.nio.file.Files.copy
  [27] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [28] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [29] jdk.nio.zipfs.ZipPath.newFileChannel
  [30] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [31] java.nio.channels.FileChannel.open
  [32] java.nio.channels.FileChannel.open
  [33] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [34] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25648.apply
  [35] cats.effect.IOFiber.$anonfun$8
  [36] cats.effect.IOFiber$$Lambda$279.0x0000000800ddde88.apply
  [37] cats.effect.unsafe.WorkerThread.blockOn
  [38] scala.concurrent.package$.blocking
  [39] cats.effect.IOFiber.runLoop
  [40] cats.effect.IOFiber.execR
  [41] cats.effect.IOFiber.run
  [42] cats.effect.unsafe.WorkerThread.run

--- 4056438935 ns (0.41%), 404 samples
  [ 0] clear_page_rep_[k]
  [ 1] get_page_from_freelist_[k]
  [ 2] __alloc_pages_[k]
  [ 3] __folio_alloc_[k]
  [ 4] vma_alloc_folio_[k]
  [ 5] do_anonymous_page_[k]
  [ 6] handle_pte_fault_[k]
  [ 7] __handle_mm_fault_[k]
  [ 8] handle_mm_fault_[k]
  [ 9] do_user_addr_fault_[k]
  [10] exc_page_fault_[k]
  [11] asm_exc_page_fault_[k]
  [12] __memset_avx2_unaligned_erms
  [13] MemAllocator::allocate() const
  [14] TypeArrayKlass::allocate_common(int, bool, JavaThread*)
  [15] JVMCIRuntime::new_array_common(JavaThread*, Klass*, int, bool)
  [16] java.nio.charset.Charset.forName
  [17] com.scalamandra.ZipLib$.com$scalamandra$ZipLib$$anon$1$$_$fs2ReadAllBytes$$anonfun$1$$anonfun$1$$anonfun$2$$anonfun$2
  [18] com.scalamandra.ZipLib$$anon$1$$Lambda$323.0x0000000800dee010.apply
  [19] cats.effect.IOFiber.succeeded
  [20] cats.effect.IOFiber.runLoop
  [21] cats.effect.IOFiber.execR
  [22] cats.effect.IOFiber.run
  [23] cats.effect.unsafe.WorkerThread.run

--- 4020409148 ns (0.41%), 401 samples
  [ 0] page_counter_try_charge_[k]
  [ 1] try_charge_memcg_[k]
  [ 2] obj_cgroup_charge_[k]
  [ 3] __kmalloc_[k]
  [ 4] inotify_handle_inode_event_[k]
  [ 5] fsnotify_handle_inode_event.isra.0_[k]
  [ 6] send_to_group_[k]
  [ 7] fsnotify_[k]
  [ 8] __fsnotify_parent_[k]
  [ 9] vfs_write_[k]
  [10] ksys_write_[k]
  [11] __x64_sys_write_[k]
  [12] do_syscall_64_[k]
  [13] entry_SYSCALL_64_after_hwframe_[k]
  [14] write
  [15] sun.nio.ch.FileDispatcherImpl.write0
  [16] sun.nio.ch.FileDispatcherImpl.write
  [17] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.IOUtil.write
  [20] sun.nio.ch.FileChannelImpl.write
  [21] java.nio.channels.Channels.writeFullyImpl
  [22] java.nio.channels.Channels.writeFully
  [23] java.nio.channels.Channels$1.write
  [24] java.io.InputStream.transferTo
  [25] java.nio.file.Files.copy
  [26] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [27] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [28] jdk.nio.zipfs.ZipPath.newFileChannel
  [29] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [30] java.nio.channels.FileChannel.open
  [31] java.nio.channels.FileChannel.open
  [32] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [33] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25648.apply
  [34] cats.effect.IOFiber.$anonfun$8
  [35] cats.effect.IOFiber$$Lambda$279.0x0000000800ddde88.apply
  [36] cats.effect.unsafe.WorkerThread.blockOn
  [37] scala.concurrent.package$.blocking
  [38] cats.effect.IOFiber.runLoop
  [39] cats.effect.IOFiber.execR
  [40] cats.effect.IOFiber.run
  [41] cats.effect.unsafe.WorkerThread.run

--- 3992834619 ns (0.40%), 398 samples
  [ 0] send_to_group_[k]
  [ 1] fsnotify_[k]
  [ 2] __fsnotify_parent_[k]
  [ 3] vfs_write_[k]
  [ 4] ksys_write_[k]
  [ 5] __x64_sys_write_[k]
  [ 6] do_syscall_64_[k]
  [ 7] entry_SYSCALL_64_after_hwframe_[k]
  [ 8] write
  [ 9] sun.nio.ch.FileDispatcherImpl.write0
  [10] sun.nio.ch.FileDispatcherImpl.write
  [11] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [12] sun.nio.ch.IOUtil.write
  [13] sun.nio.ch.IOUtil.write
  [14] sun.nio.ch.FileChannelImpl.write
  [15] java.nio.channels.Channels.writeFullyImpl
  [16] java.nio.channels.Channels.writeFully
  [17] java.nio.channels.Channels$1.write
  [18] java.io.InputStream.transferTo
  [19] java.nio.file.Files.copy
  [20] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [21] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [22] jdk.nio.zipfs.ZipPath.newFileChannel
  [23] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [24] java.nio.channels.FileChannel.open
  [25] java.nio.channels.FileChannel.open
  [26] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [27] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25648.apply
  [28] cats.effect.IOFiber.$anonfun$8
  [29] cats.effect.IOFiber$$Lambda$279.0x0000000800ddde88.apply
  [30] cats.effect.unsafe.WorkerThread.blockOn
  [31] scala.concurrent.package$.blocking
  [32] cats.effect.IOFiber.runLoop
  [33] cats.effect.IOFiber.execR
  [34] cats.effect.IOFiber.run
  [35] cats.effect.unsafe.WorkerThread.run

--- 3802464461 ns (0.38%), 379 samples
  [ 0] memset_[k]
  [ 1] dbuf_read_impl.constprop.0?[zfs]_[k]
  [ 2] dbuf_read?[zfs]_[k]
  [ 3] dmu_buf_will_dirty_impl?[zfs]_[k]
  [ 4] dmu_buf_will_dirty?[zfs]_[k]
  [ 5] dmu_write_uio_dnode?[zfs]_[k]
  [ 6] dmu_write_uio_dbuf?[zfs]_[k]
  [ 7] zfs_write?[zfs]_[k]
  [ 8] zpl_iter_write?[zfs]_[k]
  [ 9] new_sync_write_[k]
  [10] vfs_write_[k]
  [11] ksys_write_[k]
  [12] __x64_sys_write_[k]
  [13] do_syscall_64_[k]
  [14] entry_SYSCALL_64_after_hwframe_[k]
  [15] write
  [16] sun.nio.ch.FileDispatcherImpl.write0
  [17] sun.nio.ch.FileDispatcherImpl.write
  [18] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [19] sun.nio.ch.IOUtil.write
  [20] sun.nio.ch.IOUtil.write
  [21] sun.nio.ch.FileChannelImpl.write
  [22] java.nio.channels.Channels.writeFullyImpl
  [23] java.nio.channels.Channels.writeFully
  [24] java.nio.channels.Channels$1.write
  [25] java.io.InputStream.transferTo
  [26] java.nio.file.Files.copy
  [27] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [28] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [29] jdk.nio.zipfs.ZipPath.newFileChannel
  [30] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [31] java.nio.channels.FileChannel.open
  [32] java.nio.channels.FileChannel.open
  [33] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [34] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25648.apply
  [35] cats.effect.IOFiber.$anonfun$8
  [36] cats.effect.IOFiber$$Lambda$279.0x0000000800ddde88.apply
  [37] cats.effect.unsafe.WorkerThread.blockOn
  [38] scala.concurrent.package$.blocking
  [39] cats.effect.IOFiber.runLoop
  [40] cats.effect.IOFiber.execR
  [41] cats.effect.IOFiber.run
  [42] cats.effect.unsafe.WorkerThread.run

--- 3282719109 ns (0.33%), 327 samples
  [ 0] find_vmap_area_[k]
  [ 1] check_heap_object_[k]
  [ 2] __check_object_size.part.0_[k]
  [ 3] __check_object_size_[k]
  [ 4] zfs_uiomove_iter?[zfs]_[k]
  [ 5] zfs_uiomove?[zfs]_[k]
  [ 6] dmu_write_uio_dnode?[zfs]_[k]
  [ 7] dmu_write_uio_dbuf?[zfs]_[k]
  [ 8] zfs_write?[zfs]_[k]
  [ 9] zpl_iter_write?[zfs]_[k]
  [10] new_sync_write_[k]
  [11] vfs_write_[k]
  [12] ksys_write_[k]
  [13] __x64_sys_write_[k]
  [14] do_syscall_64_[k]
  [15] entry_SYSCALL_64_after_hwframe_[k]
  [16] write
  [17] sun.nio.ch.FileDispatcherImpl.write0
  [18] sun.nio.ch.FileDispatcherImpl.write
  [19] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [20] sun.nio.ch.IOUtil.write
  [21] sun.nio.ch.IOUtil.write
  [22] sun.nio.ch.FileChannelImpl.write
  [23] java.nio.channels.Channels.writeFullyImpl
  [24] java.nio.channels.Channels.writeFully
  [25] java.nio.channels.Channels$1.write
  [26] java.io.InputStream.transferTo
  [27] java.nio.file.Files.copy
  [28] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [29] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [30] jdk.nio.zipfs.ZipPath.newFileChannel
  [31] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [32] java.nio.channels.FileChannel.open
  [33] java.nio.channels.FileChannel.open
  [34] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [35] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25648.apply
  [36] cats.effect.IOFiber.$anonfun$8
  [37] cats.effect.IOFiber$$Lambda$279.0x0000000800ddde88.apply
  [38] cats.effect.unsafe.WorkerThread.blockOn
  [39] scala.concurrent.package$.blocking
  [40] cats.effect.IOFiber.runLoop
  [41] cats.effect.IOFiber.execR
  [42] cats.effect.IOFiber.run
  [43] cats.effect.unsafe.WorkerThread.run

--- 2818220755 ns (0.28%), 281 samples
  [ 0] native_queued_spin_lock_slowpath.part.0_[k]
  [ 1] native_queued_spin_lock_slowpath_[k]
  [ 2] _raw_spin_lock_[k]
  [ 3] fsnotify_insert_event_[k]
  [ 4] inotify_handle_inode_event_[k]
  [ 5] fsnotify_handle_inode_event.isra.0_[k]
  [ 6] send_to_group_[k]
  [ 7] fsnotify_[k]
  [ 8] __fsnotify_parent_[k]
  [ 9] vfs_write_[k]
  [10] ksys_write_[k]
  [11] __x64_sys_write_[k]
  [12] do_syscall_64_[k]
  [13] entry_SYSCALL_64_after_hwframe_[k]
  [14] write
  [15] sun.nio.ch.FileDispatcherImpl.write0
  [16] sun.nio.ch.FileDispatcherImpl.write
  [17] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.IOUtil.write
  [20] sun.nio.ch.FileChannelImpl.write
  [21] java.nio.channels.Channels.writeFullyImpl
  [22] java.nio.channels.Channels.writeFully
  [23] java.nio.channels.Channels$1.write
  [24] java.io.InputStream.transferTo
  [25] java.nio.file.Files.copy
  [26] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [27] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [28] jdk.nio.zipfs.ZipPath.newFileChannel
  [29] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [30] java.nio.channels.FileChannel.open
  [31] java.nio.channels.FileChannel.open
  [32] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [33] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25648.apply
  [34] cats.effect.IOFiber.$anonfun$8
  [35] cats.effect.IOFiber$$Lambda$279.0x0000000800ddde88.apply
  [36] cats.effect.unsafe.WorkerThread.blockOn
  [37] scala.concurrent.package$.blocking
  [38] cats.effect.IOFiber.runLoop
  [39] cats.effect.IOFiber.execR
  [40] cats.effect.IOFiber.run
  [41] cats.effect.unsafe.WorkerThread.run

--- 2630025604 ns (0.27%), 262 samples
  [ 0] zfs_write?[zfs]_[k]
  [ 1] zpl_iter_write?[zfs]_[k]
  [ 2] new_sync_write_[k]
  [ 3] vfs_write_[k]
  [ 4] ksys_write_[k]
  [ 5] __x64_sys_write_[k]
  [ 6] do_syscall_64_[k]
  [ 7] entry_SYSCALL_64_after_hwframe_[k]
  [ 8] write
  [ 9] sun.nio.ch.FileDispatcherImpl.write0
  [10] sun.nio.ch.FileDispatcherImpl.write
  [11] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [12] sun.nio.ch.IOUtil.write
  [13] sun.nio.ch.IOUtil.write
  [14] sun.nio.ch.FileChannelImpl.write
  [15] java.nio.channels.Channels.writeFullyImpl
  [16] java.nio.channels.Channels.writeFully
  [17] java.nio.channels.Channels$1.write
  [18] java.io.InputStream.transferTo
  [19] java.nio.file.Files.copy
  [20] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [21] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [22] jdk.nio.zipfs.ZipPath.newFileChannel
  [23] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [24] java.nio.channels.FileChannel.open
  [25] java.nio.channels.FileChannel.open
  [26] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [27] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25648.apply
  [28] cats.effect.IOFiber.$anonfun$8
  [29] cats.effect.IOFiber$$Lambda$279.0x0000000800ddde88.apply
  [30] cats.effect.unsafe.WorkerThread.blockOn
  [31] scala.concurrent.package$.blocking
  [32] cats.effect.IOFiber.runLoop
  [33] cats.effect.IOFiber.execR
  [34] cats.effect.IOFiber.run
  [35] cats.effect.unsafe.WorkerThread.run

--- 2580061801 ns (0.26%), 257 samples
  [ 0] do_user_addr_fault_[k]
  [ 1] exc_page_fault_[k]
  [ 2] asm_exc_page_fault_[k]
  [ 3] __memset_avx2_unaligned_erms
  [ 4] MemAllocator::allocate() const
  [ 5] TypeArrayKlass::allocate_common(int, bool, JavaThread*)
  [ 6] JVMCIRuntime::new_array_common(JavaThread*, Klass*, int, bool)
  [ 7] fs2.io.file.FileHandleCompanionPlatform$$anon$1.read$$anonfun$1
  [ 8] fs2.io.file.FileHandleCompanionPlatform$$anon$1$$Lambda$320.0x0000000800ded1e8.apply
  [ 9] cats.effect.IOFiber.$anonfun$8
  [10] cats.effect.IOFiber$$Lambda$279.0x0000000800ddde88.apply
  [11] cats.effect.unsafe.WorkerThread.blockOn
  [12] scala.concurrent.package$.blocking
  [13] cats.effect.IOFiber.runLoop
  [14] cats.effect.IOFiber.execR
  [15] cats.effect.IOFiber.run
  [16] cats.effect.unsafe.WorkerThread.run

--- 2568100418 ns (0.26%), 256 samples
  [ 0] try_charge_memcg_[k]
  [ 1] obj_cgroup_charge_[k]
  [ 2] __kmalloc_[k]
  [ 3] inotify_handle_inode_event_[k]
  [ 4] fsnotify_handle_inode_event.isra.0_[k]
  [ 5] send_to_group_[k]
  [ 6] fsnotify_[k]
  [ 7] __fsnotify_parent_[k]
  [ 8] vfs_write_[k]
  [ 9] ksys_write_[k]
  [10] __x64_sys_write_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] write
  [14] sun.nio.ch.FileDispatcherImpl.write0
  [15] sun.nio.ch.FileDispatcherImpl.write
  [16] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.FileChannelImpl.write
  [20] java.nio.channels.Channels.writeFullyImpl
  [21] java.nio.channels.Channels.writeFully
  [22] java.nio.channels.Channels$1.write
  [23] java.io.InputStream.transferTo
  [24] java.nio.file.Files.copy
  [25] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [26] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [27] jdk.nio.zipfs.ZipPath.newFileChannel
  [28] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [29] java.nio.channels.FileChannel.open
  [30] java.nio.channels.FileChannel.open
  [31] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [32] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25648.apply
  [33] cats.effect.IOFiber.$anonfun$8
  [34] cats.effect.IOFiber$$Lambda$279.0x0000000800ddde88.apply
  [35] cats.effect.unsafe.WorkerThread.blockOn
  [36] scala.concurrent.package$.blocking
  [37] cats.effect.IOFiber.runLoop
  [38] cats.effect.IOFiber.execR
  [39] cats.effect.IOFiber.run
  [40] cats.effect.unsafe.WorkerThread.run

--- 2439740950 ns (0.25%), 243 samples
  [ 0] do_user_addr_fault_[k]
  [ 1] exc_page_fault_[k]
  [ 2] asm_exc_page_fault_[k]
  [ 3] __memset_avx2_unaligned_erms
  [ 4] MemAllocator::allocate() const
  [ 5] TypeArrayKlass::allocate_common(int, bool, JavaThread*)
  [ 6] JVMCIRuntime::new_array_common(JavaThread*, Klass*, int, bool)
  [ 7] fs2.Chunk.toArray
  [ 8] com.scalamandra.ZipLib$.$anonfun$1
  [ 9] com.scalamandra.ZipLib$$$Lambda$325.0x0000000800df40b8.apply
  [10] scala.Option.map
  [11] com.scalamandra.ZipLib$.com$scalamandra$ZipLib$$anon$1$$_$fs2ReadAllBytes$$anonfun$1$$anonfun$1$$anonfun$2$$anonfun$1
  [12] com.scalamandra.ZipLib$$anon$1$$Lambda$322.0x0000000800dedc48.apply
  [13] cats.effect.IOFiber.succeeded
  [14] cats.effect.IOFiber.runLoop
  [15] cats.effect.IOFiber.execR
  [16] cats.effect.IOFiber.run
  [17] cats.effect.unsafe.WorkerThread.run

--- 2336352554 ns (0.24%), 233 samples
  [ 0] memcg_slab_post_alloc_hook_[k]
  [ 1] __kmalloc_[k]
  [ 2] inotify_handle_inode_event_[k]
  [ 3] fsnotify_handle_inode_event.isra.0_[k]
  [ 4] send_to_group_[k]
  [ 5] fsnotify_[k]
  [ 6] __fsnotify_parent_[k]
  [ 7] vfs_write_[k]
  [ 8] ksys_write_[k]
  [ 9] __x64_sys_write_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] write
  [13] sun.nio.ch.FileDispatcherImpl.write0
  [14] sun.nio.ch.FileDispatcherImpl.write
  [15] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [16] sun.nio.ch.IOUtil.write
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.FileChannelImpl.write
  [19] java.nio.channels.Channels.writeFullyImpl
  [20] java.nio.channels.Channels.writeFully
  [21] java.nio.channels.Channels$1.write
  [22] java.io.InputStream.transferTo
  [23] java.nio.file.Files.copy
  [24] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [25] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [26] jdk.nio.zipfs.ZipPath.newFileChannel
  [27] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [28] java.nio.channels.FileChannel.open
  [29] java.nio.channels.FileChannel.open
  [30] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [31] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25648.apply
  [32] cats.effect.IOFiber.$anonfun$8
  [33] cats.effect.IOFiber$$Lambda$279.0x0000000800ddde88.apply
  [34] cats.effect.unsafe.WorkerThread.blockOn
  [35] scala.concurrent.package$.blocking
  [36] cats.effect.IOFiber.runLoop
  [37] cats.effect.IOFiber.execR
  [38] cats.effect.IOFiber.run
  [39] cats.effect.unsafe.WorkerThread.run

--- 2326793258 ns (0.23%), 232 samples
  [ 0] _raw_spin_unlock_irqrestore_[k]
  [ 1] __wake_up_common_lock_[k]
  [ 2] __wake_up_[k]
  [ 3] fsnotify_insert_event_[k]
  [ 4] inotify_handle_inode_event_[k]
  [ 5] fsnotify_handle_inode_event.isra.0_[k]
  [ 6] send_to_group_[k]
  [ 7] fsnotify_[k]
  [ 8] __fsnotify_parent_[k]
  [ 9] vfs_write_[k]
  [10] ksys_write_[k]
  [11] __x64_sys_write_[k]
  [12] do_syscall_64_[k]
  [13] entry_SYSCALL_64_after_hwframe_[k]
  [14] write
  [15] sun.nio.ch.FileDispatcherImpl.write0
  [16] sun.nio.ch.FileDispatcherImpl.write
  [17] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.IOUtil.write
  [20] sun.nio.ch.FileChannelImpl.write
  [21] java.nio.channels.Channels.writeFullyImpl
  [22] java.nio.channels.Channels.writeFully
  [23] java.nio.channels.Channels$1.write
  [24] java.io.InputStream.transferTo
  [25] java.nio.file.Files.copy
  [26] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [27] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [28] jdk.nio.zipfs.ZipPath.newFileChannel
  [29] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [30] java.nio.channels.FileChannel.open
  [31] java.nio.channels.FileChannel.open
  [32] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [33] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25648.apply
  [34] cats.effect.IOFiber.$anonfun$8
  [35] cats.effect.IOFiber$$Lambda$279.0x0000000800ddde88.apply
  [36] cats.effect.unsafe.WorkerThread.blockOn
  [37] scala.concurrent.package$.blocking
  [38] cats.effect.IOFiber.runLoop
  [39] cats.effect.IOFiber.execR
  [40] cats.effect.IOFiber.run
  [41] cats.effect.unsafe.WorkerThread.run

--- 2196178211 ns (0.22%), 219 samples
  [ 0] __kmalloc_[k]
  [ 1] inotify_handle_inode_event_[k]
  [ 2] fsnotify_handle_inode_event.isra.0_[k]
  [ 3] send_to_group_[k]
  [ 4] fsnotify_[k]
  [ 5] __fsnotify_parent_[k]
  [ 6] vfs_write_[k]
  [ 7] ksys_write_[k]
  [ 8] __x64_sys_write_[k]
  [ 9] do_syscall_64_[k]
  [10] entry_SYSCALL_64_after_hwframe_[k]
  [11] write
  [12] sun.nio.ch.FileDispatcherImpl.write0
  [13] sun.nio.ch.FileDispatcherImpl.write
  [14] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [15] sun.nio.ch.IOUtil.write
  [16] sun.nio.ch.IOUtil.write
  [17] sun.nio.ch.FileChannelImpl.write
  [18] java.nio.channels.Channels.writeFullyImpl
  [19] java.nio.channels.Channels.writeFully
  [20] java.nio.channels.Channels$1.write
  [21] java.io.InputStream.transferTo
  [22] java.nio.file.Files.copy
  [23] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [24] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [25] jdk.nio.zipfs.ZipPath.newFileChannel
  [26] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [27] java.nio.channels.FileChannel.open
  [28] java.nio.channels.FileChannel.open
  [29] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [30] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25648.apply
  [31] cats.effect.IOFiber.$anonfun$8
  [32] cats.effect.IOFiber$$Lambda$279.0x0000000800ddde88.apply
  [33] cats.effect.unsafe.WorkerThread.blockOn
  [34] scala.concurrent.package$.blocking
  [35] cats.effect.IOFiber.runLoop
  [36] cats.effect.IOFiber.execR
  [37] cats.effect.IOFiber.run
  [38] cats.effect.unsafe.WorkerThread.run

--- 2087739171 ns (0.21%), 208 samples
  [ 0] do_user_addr_fault_[k]
  [ 1] exc_page_fault_[k]
  [ 2] asm_exc_page_fault_[k]
  [ 3] __memset_avx2_unaligned_erms
  [ 4] MemAllocator::allocate() const
  [ 5] TypeArrayKlass::allocate_common(int, bool, JavaThread*)
  [ 6] JVMCIRuntime::new_array_common(JavaThread*, Klass*, int, bool)
  [ 7] java.nio.charset.Charset.forName
  [ 8] com.scalamandra.ZipLib$.com$scalamandra$ZipLib$$anon$1$$_$fs2ReadAllBytes$$anonfun$1$$anonfun$1$$anonfun$2$$anonfun$2
  [ 9] com.scalamandra.ZipLib$$anon$1$$Lambda$323.0x0000000800dee010.apply
  [10] cats.effect.IOFiber.succeeded
  [11] cats.effect.IOFiber.runLoop
  [12] cats.effect.IOFiber.execR
  [13] cats.effect.IOFiber.run
  [14] cats.effect.unsafe.WorkerThread.run

--- 2049124566 ns (0.21%), 204 samples
  [ 0] find_vmap_area_[k]
  [ 1] check_heap_object_[k]
  [ 2] __check_object_size.part.0_[k]
  [ 3] __check_object_size_[k]
  [ 4] zfs_uiomove_iter?[zfs]_[k]
  [ 5] zfs_uiomove?[zfs]_[k]
  [ 6] dmu_read_uio_dnode?[zfs]_[k]
  [ 7] dmu_read_uio_dbuf?[zfs]_[k]
  [ 8] mappedread?[zfs]_[k]
  [ 9] zfs_read?[zfs]_[k]
  [10] zpl_iter_read?[zfs]_[k]
  [11] new_sync_read_[k]
  [12] vfs_read_[k]
  [13] __x64_sys_pread64_[k]
  [14] do_syscall_64_[k]
  [15] entry_SYSCALL_64_after_hwframe_[k]
  [16] __libc_pread64
  [17] sun.nio.ch.FileDispatcherImpl.pread0
  [18] sun.nio.ch.FileDispatcherImpl.pread
  [19] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [20] sun.nio.ch.IOUtil.read
  [21] sun.nio.ch.IOUtil.read
  [22] sun.nio.ch.FileChannelImpl.readInternal
  [23] sun.nio.ch.FileChannelImpl.read
  [24] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [25] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [26] jdk.nio.zipfs.ZipFileSystem$2.fill
  [27] java.util.zip.InflaterInputStream.read
  [28] java.io.InputStream.transferTo
  [29] java.nio.file.Files.copy
  [30] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [31] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [32] jdk.nio.zipfs.ZipPath.newFileChannel
  [33] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [34] java.nio.channels.FileChannel.open
  [35] java.nio.channels.FileChannel.open
  [36] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [37] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25648.apply
  [38] cats.effect.IOFiber.$anonfun$8
  [39] cats.effect.IOFiber$$Lambda$279.0x0000000800ddde88.apply
  [40] cats.effect.unsafe.WorkerThread.blockOn
  [41] scala.concurrent.package$.blocking
  [42] cats.effect.IOFiber.runLoop
  [43] cats.effect.IOFiber.execR
  [44] cats.effect.IOFiber.run
  [45] cats.effect.unsafe.WorkerThread.run

--- 1976219402 ns (0.20%), 197 samples
  [ 0] memmove_[k]
  [ 1] dnode_set_blksz?[zfs]_[k]
  [ 2] dmu_object_set_blocksize?[zfs]_[k]
  [ 3] zfs_grow_blocksize?[zfs]_[k]
  [ 4] zfs_write?[zfs]_[k]
  [ 5] zpl_iter_write?[zfs]_[k]
  [ 6] new_sync_write_[k]
  [ 7] vfs_write_[k]
  [ 8] ksys_write_[k]
  [ 9] __x64_sys_write_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] write
  [13] sun.nio.ch.FileDispatcherImpl.write0
  [14] sun.nio.ch.FileDispatcherImpl.write
  [15] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [16] sun.nio.ch.IOUtil.write
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.FileChannelImpl.write
  [19] java.nio.channels.Channels.writeFullyImpl
  [20] java.nio.channels.Channels.writeFully
  [21] java.nio.channels.Channels$1.write
  [22] java.io.InputStream.transferTo
  [23] java.nio.file.Files.copy
  [24] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [25] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [26] jdk.nio.zipfs.ZipPath.newFileChannel
  [27] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [28] java.nio.channels.FileChannel.open
  [29] java.nio.channels.FileChannel.open
  [30] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [31] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25648.apply
  [32] cats.effect.IOFiber.$anonfun$8
  [33] cats.effect.IOFiber$$Lambda$279.0x0000000800ddde88.apply
  [34] cats.effect.unsafe.WorkerThread.blockOn
  [35] scala.concurrent.package$.blocking
  [36] cats.effect.IOFiber.runLoop
  [37] cats.effect.IOFiber.execR
  [38] cats.effect.IOFiber.run
  [39] cats.effect.unsafe.WorkerThread.run

--- 1866573108 ns (0.19%), 186 samples
  [ 0] zil_aitx_compare?[zfs]_[k]
  [ 1] zil_itx_assign?[zfs]_[k]
  [ 2] zfs_log_write?[zfs]_[k]
  [ 3] zfs_write?[zfs]_[k]
  [ 4] zpl_iter_write?[zfs]_[k]
  [ 5] new_sync_write_[k]
  [ 6] vfs_write_[k]
  [ 7] ksys_write_[k]
  [ 8] __x64_sys_write_[k]
  [ 9] do_syscall_64_[k]
  [10] entry_SYSCALL_64_after_hwframe_[k]
  [11] write
  [12] sun.nio.ch.FileDispatcherImpl.write0
  [13] sun.nio.ch.FileDispatcherImpl.write
  [14] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [15] sun.nio.ch.IOUtil.write
  [16] sun.nio.ch.IOUtil.write
  [17] sun.nio.ch.FileChannelImpl.write
  [18] java.nio.channels.Channels.writeFullyImpl
  [19] java.nio.channels.Channels.writeFully
  [20] java.nio.channels.Channels$1.write
  [21] java.io.InputStream.transferTo
  [22] java.nio.file.Files.copy
  [23] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [24] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [25] jdk.nio.zipfs.ZipPath.newFileChannel
  [26] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [27] java.nio.channels.FileChannel.open
  [28] java.nio.channels.FileChannel.open
  [29] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [30] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25648.apply
  [31] cats.effect.IOFiber.$anonfun$8
  [32] cats.effect.IOFiber$$Lambda$279.0x0000000800ddde88.apply
  [33] cats.effect.unsafe.WorkerThread.blockOn
  [34] scala.concurrent.package$.blocking
  [35] cats.effect.IOFiber.runLoop
  [36] cats.effect.IOFiber.execR
  [37] cats.effect.IOFiber.run
  [38] cats.effect.unsafe.WorkerThread.run

--- 1827190765 ns (0.18%), 182 samples
  [ 0] inotify_handle_inode_event_[k]
  [ 1] fsnotify_handle_inode_event.isra.0_[k]
  [ 2] send_to_group_[k]
  [ 3] fsnotify_[k]
  [ 4] __fsnotify_parent_[k]
  [ 5] vfs_write_[k]
  [ 6] ksys_write_[k]
  [ 7] __x64_sys_write_[k]
  [ 8] do_syscall_64_[k]
  [ 9] entry_SYSCALL_64_after_hwframe_[k]
  [10] write
  [11] sun.nio.ch.FileDispatcherImpl.write0
  [12] sun.nio.ch.FileDispatcherImpl.write
  [13] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [14] sun.nio.ch.IOUtil.write
  [15] sun.nio.ch.IOUtil.write
  [16] sun.nio.ch.FileChannelImpl.write
  [17] java.nio.channels.Channels.writeFullyImpl
  [18] java.nio.channels.Channels.writeFully
  [19] java.nio.channels.Channels$1.write
  [20] java.io.InputStream.transferTo
  [21] java.nio.file.Files.copy
  [22] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [23] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [24] jdk.nio.zipfs.ZipPath.newFileChannel
  [25] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [26] java.nio.channels.FileChannel.open
  [27] java.nio.channels.FileChannel.open
  [28] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [29] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25648.apply
  [30] cats.effect.IOFiber.$anonfun$8
  [31] cats.effect.IOFiber$$Lambda$279.0x0000000800ddde88.apply
  [32] cats.effect.unsafe.WorkerThread.blockOn
  [33] scala.concurrent.package$.blocking
  [34] cats.effect.IOFiber.runLoop
  [35] cats.effect.IOFiber.execR
  [36] cats.effect.IOFiber.run
  [37] cats.effect.unsafe.WorkerThread.run

--- 1754622075 ns (0.18%), 175 samples
  [ 0] write
  [ 1] sun.nio.ch.FileDispatcherImpl.write0
  [ 2] sun.nio.ch.FileDispatcherImpl.write
  [ 3] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [ 4] sun.nio.ch.IOUtil.write
  [ 5] sun.nio.ch.IOUtil.write
  [ 6] sun.nio.ch.FileChannelImpl.write
  [ 7] java.nio.channels.Channels.writeFullyImpl
  [ 8] java.nio.channels.Channels.writeFully
  [ 9] java.nio.channels.Channels$1.write
  [10] java.io.InputStream.transferTo
  [11] java.nio.file.Files.copy
  [12] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [13] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [14] jdk.nio.zipfs.ZipPath.newFileChannel
  [15] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [16] java.nio.channels.FileChannel.open
  [17] java.nio.channels.FileChannel.open
  [18] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [19] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25648.apply
  [20] cats.effect.IOFiber.$anonfun$8
  [21] cats.effect.IOFiber$$Lambda$279.0x0000000800ddde88.apply
  [22] cats.effect.unsafe.WorkerThread.blockOn
  [23] scala.concurrent.package$.blocking
  [24] cats.effect.IOFiber.runLoop
  [25] cats.effect.IOFiber.execR
  [26] cats.effect.IOFiber.run
  [27] cats.effect.unsafe.WorkerThread.run

--- 1744371523 ns (0.18%), 174 samples
  [ 0] dsl_dir_tempreserve_impl.constprop.0?[zfs]_[k]
  [ 1] dsl_dir_tempreserve_space?[zfs]_[k]
  [ 2] dmu_tx_try_assign?[zfs]_[k]
  [ 3] dmu_tx_assign?[zfs]_[k]
  [ 4] zfs_write?[zfs]_[k]
  [ 5] zpl_iter_write?[zfs]_[k]
  [ 6] new_sync_write_[k]
  [ 7] vfs_write_[k]
  [ 8] ksys_write_[k]
  [ 9] __x64_sys_write_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] write
  [13] sun.nio.ch.FileDispatcherImpl.write0
  [14] sun.nio.ch.FileDispatcherImpl.write
  [15] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [16] sun.nio.ch.IOUtil.write
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.FileChannelImpl.write
  [19] java.nio.channels.Channels.writeFullyImpl
  [20] java.nio.channels.Channels.writeFully
  [21] java.nio.channels.Channels$1.write
  [22] java.io.InputStream.transferTo
  [23] java.nio.file.Files.copy
  [24] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [25] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [26] jdk.nio.zipfs.ZipPath.newFileChannel
  [27] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [28] java.nio.channels.FileChannel.open
  [29] java.nio.channels.FileChannel.open
  [30] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [31] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25648.apply
  [32] cats.effect.IOFiber.$anonfun$8
  [33] cats.effect.IOFiber$$Lambda$279.0x0000000800ddde88.apply
  [34] cats.effect.unsafe.WorkerThread.blockOn
  [35] scala.concurrent.package$.blocking
  [36] cats.effect.IOFiber.runLoop
  [37] cats.effect.IOFiber.execR
  [38] cats.effect.IOFiber.run
  [39] cats.effect.unsafe.WorkerThread.run

--- 1716799186 ns (0.17%), 171 samples
  [ 0] kmem_cache_free_[k]
  [ 1] spl_kmem_cache_free?[spl]_[k]
  [ 2] zio_data_buf_free?[zfs]_[k]
  [ 3] zil_itx_destroy?[zfs]_[k]
  [ 4] zil_remove_async?[zfs]_[k]
  [ 5] zfs_log_remove?[zfs]_[k]
  [ 6] zfs_remove?[zfs]_[k]
  [ 7] zpl_unlink?[zfs]_[k]
  [ 8] vfs_unlink_[k]
  [ 9] do_unlinkat_[k]
  [10] __x64_sys_unlink_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] __GI_unlink
  [14] sun.nio.fs.UnixNativeDispatcher.unlink0
  [15] sun.nio.fs.UnixNativeDispatcher.unlink
  [16] sun.nio.fs.UnixFileSystemProvider.implDelete
  [17] sun.nio.fs.AbstractFileSystemProvider.delete
  [18] java.nio.file.Files.delete
  [19] jdk.nio.zipfs.ZipFileSystem.removeTempPathForEntry
  [20] jdk.nio.zipfs.ZipFileSystem$1.implCloseChannel
  [21] java.nio.channels.spi.AbstractInterruptibleChannel.close
  [22] fs2.io.file.FilesCompanionPlatform.openFileChannel$$anonfun$1$$anonfun$1
  [23] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$openFileChannel$$anonfun$1$$anonfun$adapted$1
  [24] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$297.0x0000000800ddfc68.apply
  [25] cats.effect.IOFiber.$anonfun$8
  [26] cats.effect.IOFiber$$Lambda$279.0x0000000800ddde88.apply
  [27] cats.effect.unsafe.WorkerThread.blockOn
  [28] scala.concurrent.package$.blocking
  [29] cats.effect.IOFiber.runLoop
  [30] cats.effect.IOFiber.execR
  [31] cats.effect.IOFiber.run
  [32] cats.effect.unsafe.WorkerThread.run

--- 1715233584 ns (0.17%), 171 samples
  [ 0] vfs_write_[k]
  [ 1] ksys_write_[k]
  [ 2] __x64_sys_write_[k]
  [ 3] do_syscall_64_[k]
  [ 4] entry_SYSCALL_64_after_hwframe_[k]
  [ 5] write
  [ 6] sun.nio.ch.FileDispatcherImpl.write0
  [ 7] sun.nio.ch.FileDispatcherImpl.write
  [ 8] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [ 9] sun.nio.ch.IOUtil.write
  [10] sun.nio.ch.IOUtil.write
  [11] sun.nio.ch.FileChannelImpl.write
  [12] java.nio.channels.Channels.writeFullyImpl
  [13] java.nio.channels.Channels.writeFully
  [14] java.nio.channels.Channels$1.write
  [15] java.io.InputStream.transferTo
  [16] java.nio.file.Files.copy
  [17] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [18] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [19] jdk.nio.zipfs.ZipPath.newFileChannel
  [20] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [21] java.nio.channels.FileChannel.open
  [22] java.nio.channels.FileChannel.open
  [23] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [24] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25648.apply
  [25] cats.effect.IOFiber.$anonfun$8
  [26] cats.effect.IOFiber$$Lambda$279.0x0000000800ddde88.apply
  [27] cats.effect.unsafe.WorkerThread.blockOn
  [28] scala.concurrent.package$.blocking
  [29] cats.effect.IOFiber.runLoop
  [30] cats.effect.IOFiber.execR
  [31] cats.effect.IOFiber.run
  [32] cats.effect.unsafe.WorkerThread.run

--- 1675266032 ns (0.17%), 167 samples
  [ 0] jlong_disjoint_arraycopy
  [ 1] jdk.internal.misc.Unsafe.copyMemory0
  [ 2] jdk.internal.misc.Unsafe.copyMemory
  [ 3] jdk.internal.misc.ScopedMemoryAccess.copyMemoryInternal
  [ 4] jdk.internal.misc.ScopedMemoryAccess.copyMemory
  [ 5] java.nio.ByteBuffer.putBuffer
  [ 6] java.nio.ByteBuffer.put
  [ 7] java.nio.HeapByteBuffer.put
  [ 8] sun.nio.ch.IOUtil.read
  [ 9] sun.nio.ch.IOUtil.read
  [10] sun.nio.ch.FileChannelImpl.readInternal
  [11] sun.nio.ch.FileChannelImpl.read
  [12] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [13] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [14] jdk.nio.zipfs.ZipFileSystem$2.fill
  [15] java.util.zip.InflaterInputStream.read
  [16] java.io.InputStream.transferTo
  [17] java.nio.file.Files.copy
  [18] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [19] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [20] jdk.nio.zipfs.ZipPath.newFileChannel
  [21] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [22] java.nio.channels.FileChannel.open
  [23] java.nio.channels.FileChannel.open
  [24] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [25] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25648.apply
  [26] cats.effect.IOFiber.$anonfun$8
  [27] cats.effect.IOFiber$$Lambda$279.0x0000000800ddde88.apply
  [28] cats.effect.unsafe.WorkerThread.blockOn
  [29] scala.concurrent.package$.blocking
  [30] cats.effect.IOFiber.runLoop
  [31] cats.effect.IOFiber.execR
  [32] cats.effect.IOFiber.run
  [33] cats.effect.unsafe.WorkerThread.run

--- 1625739107 ns (0.16%), 162 samples
  [ 0] memset_[k]
  [ 1] spl_kmem_cache_alloc?[spl]_[k]
  [ 2] zio_data_buf_alloc?[zfs]_[k]
  [ 3] zil_itx_create?[zfs]_[k]
  [ 4] zfs_log_write?[zfs]_[k]
  [ 5] zfs_write?[zfs]_[k]
  [ 6] zpl_iter_write?[zfs]_[k]
  [ 7] new_sync_write_[k]
  [ 8] vfs_write_[k]
  [ 9] ksys_write_[k]
  [10] __x64_sys_write_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] write
  [14] sun.nio.ch.FileDispatcherImpl.write0
  [15] sun.nio.ch.FileDispatcherImpl.write
  [16] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.FileChannelImpl.write
  [20] java.nio.channels.Channels.writeFullyImpl
  [21] java.nio.channels.Channels.writeFully
  [22] java.nio.channels.Channels$1.write
  [23] java.io.InputStream.transferTo
  [24] java.nio.file.Files.copy
  [25] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [26] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [27] jdk.nio.zipfs.ZipPath.newFileChannel
  [28] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [29] java.nio.channels.FileChannel.open
  [30] java.nio.channels.FileChannel.open
  [31] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [32] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25648.apply
  [33] cats.effect.IOFiber.$anonfun$8
  [34] cats.effect.IOFiber$$Lambda$279.0x0000000800ddde88.apply
  [35] cats.effect.unsafe.WorkerThread.blockOn
  [36] scala.concurrent.package$.blocking
  [37] cats.effect.IOFiber.runLoop
  [38] cats.effect.IOFiber.execR
  [39] cats.effect.IOFiber.run
  [40] cats.effect.unsafe.WorkerThread.run

--- 1605670583 ns (0.16%), 160 samples
  [ 0] kfree_[k]
  [ 1] spl_kmem_free_impl?[spl]_[k]
  [ 2] spl_kmem_free?[spl]_[k]
  [ 3] dsl_dir_tempreserve_clear?[zfs]_[k]
  [ 4] dmu_tx_commit?[zfs]_[k]
  [ 5] zfs_write?[zfs]_[k]
  [ 6] zpl_iter_write?[zfs]_[k]
  [ 7] new_sync_write_[k]
  [ 8] vfs_write_[k]
  [ 9] ksys_write_[k]
  [10] __x64_sys_write_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] write
  [14] sun.nio.ch.FileDispatcherImpl.write0
  [15] sun.nio.ch.FileDispatcherImpl.write
  [16] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.FileChannelImpl.write
  [20] java.nio.channels.Channels.writeFullyImpl
  [21] java.nio.channels.Channels.writeFully
  [22] java.nio.channels.Channels$1.write
  [23] java.io.InputStream.transferTo
  [24] java.nio.file.Files.copy
  [25] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [26] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [27] jdk.nio.zipfs.ZipPath.newFileChannel
  [28] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [29] java.nio.channels.FileChannel.open
  [30] java.nio.channels.FileChannel.open
  [31] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [32] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25648.apply
  [33] cats.effect.IOFiber.$anonfun$8
  [34] cats.effect.IOFiber$$Lambda$279.0x0000000800ddde88.apply
  [35] cats.effect.unsafe.WorkerThread.blockOn
  [36] scala.concurrent.package$.blocking
  [37] cats.effect.IOFiber.runLoop
  [38] cats.effect.IOFiber.execR
  [39] cats.effect.IOFiber.run
  [40] cats.effect.unsafe.WorkerThread.run

--- 1604716507 ns (0.16%), 160 samples
  [ 0] sa_attr_op?[zfs]_[k]
  [ 1] sa_bulk_update_impl?[zfs]_[k]
  [ 2] sa_bulk_update?[zfs]_[k]
  [ 3] zfs_write?[zfs]_[k]
  [ 4] zpl_iter_write?[zfs]_[k]
  [ 5] new_sync_write_[k]
  [ 6] vfs_write_[k]
  [ 7] ksys_write_[k]
  [ 8] __x64_sys_write_[k]
  [ 9] do_syscall_64_[k]
  [10] entry_SYSCALL_64_after_hwframe_[k]
  [11] write
  [12] sun.nio.ch.FileDispatcherImpl.write0
  [13] sun.nio.ch.FileDispatcherImpl.write
  [14] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [15] sun.nio.ch.IOUtil.write
  [16] sun.nio.ch.IOUtil.write
  [17] sun.nio.ch.FileChannelImpl.write
  [18] java.nio.channels.Channels.writeFullyImpl
  [19] java.nio.channels.Channels.writeFully
  [20] java.nio.channels.Channels$1.write
  [21] java.io.InputStream.transferTo
  [22] java.nio.file.Files.copy
  [23] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [24] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [25] jdk.nio.zipfs.ZipPath.newFileChannel
  [26] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [27] java.nio.channels.FileChannel.open
  [28] java.nio.channels.FileChannel.open
  [29] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [30] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25648.apply
  [31] cats.effect.IOFiber.$anonfun$8
  [32] cats.effect.IOFiber$$Lambda$279.0x0000000800ddde88.apply
  [33] cats.effect.unsafe.WorkerThread.blockOn
  [34] scala.concurrent.package$.blocking
  [35] cats.effect.IOFiber.runLoop
  [36] cats.effect.IOFiber.execR
  [37] cats.effect.IOFiber.run
  [38] cats.effect.unsafe.WorkerThread.run

--- 1594356741 ns (0.16%), 159 samples
  [ 0] __get_obj_cgroup_from_memcg_[k]
  [ 1] get_obj_cgroup_from_current_[k]
  [ 2] __kmalloc_[k]
  [ 3] inotify_handle_inode_event_[k]
  [ 4] fsnotify_handle_inode_event.isra.0_[k]
  [ 5] send_to_group_[k]
  [ 6] fsnotify_[k]
  [ 7] __fsnotify_parent_[k]
  [ 8] vfs_write_[k]
  [ 9] ksys_write_[k]
  [10] __x64_sys_write_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] write
  [14] sun.nio.ch.FileDispatcherImpl.write0
  [15] sun.nio.ch.FileDispatcherImpl.write
  [16] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.FileChannelImpl.write
  [20] java.nio.channels.Channels.writeFullyImpl
  [21] java.nio.channels.Channels.writeFully
  [22] java.nio.channels.Channels$1.write
  [23] java.io.InputStream.transferTo
  [24] java.nio.file.Files.copy
  [25] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [26] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [27] jdk.nio.zipfs.ZipPath.newFileChannel
  [28] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [29] java.nio.channels.FileChannel.open
  [30] java.nio.channels.FileChannel.open
  [31] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [32] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25648.apply
  [33] cats.effect.IOFiber.$anonfun$8
  [34] cats.effect.IOFiber$$Lambda$279.0x0000000800ddde88.apply
  [35] cats.effect.unsafe.WorkerThread.blockOn
  [36] scala.concurrent.package$.blocking
  [37] cats.effect.IOFiber.runLoop
  [38] cats.effect.IOFiber.execR
  [39] cats.effect.IOFiber.run
  [40] cats.effect.unsafe.WorkerThread.run

--- 1494474477 ns (0.15%), 149 samples
  [ 0] zio_create?[zfs]_[k]
  [ 1] zio_null?[zfs]_[k]
  [ 2] zio_root?[zfs]_[k]
  [ 3] dmu_tx_count_write?[zfs]_[k]
  [ 4] dmu_tx_hold_write_by_dnode?[zfs]_[k]
  [ 5] zfs_write?[zfs]_[k]
  [ 6] zpl_iter_write?[zfs]_[k]
  [ 7] new_sync_write_[k]
  [ 8] vfs_write_[k]
  [ 9] ksys_write_[k]
  [10] __x64_sys_write_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] write
  [14] sun.nio.ch.FileDispatcherImpl.write0
  [15] sun.nio.ch.FileDispatcherImpl.write
  [16] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.FileChannelImpl.write
  [20] java.nio.channels.Channels.writeFullyImpl
  [21] java.nio.channels.Channels.writeFully
  [22] java.nio.channels.Channels$1.write
  [23] java.io.InputStream.transferTo
  [24] java.nio.file.Files.copy
  [25] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [26] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [27] jdk.nio.zipfs.ZipPath.newFileChannel
  [28] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [29] java.nio.channels.FileChannel.open
  [30] java.nio.channels.FileChannel.open
  [31] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [32] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25648.apply
  [33] cats.effect.IOFiber.$anonfun$8
  [34] cats.effect.IOFiber$$Lambda$279.0x0000000800ddde88.apply
  [35] cats.effect.unsafe.WorkerThread.blockOn
  [36] scala.concurrent.package$.blocking
  [37] cats.effect.IOFiber.runLoop
  [38] cats.effect.IOFiber.execR
  [39] cats.effect.IOFiber.run
  [40] cats.effect.unsafe.WorkerThread.run

--- 1463503232 ns (0.15%), 146 samples
  [ 0] strcpy_[k]
  [ 1] fsnotify_handle_inode_event.isra.0_[k]
  [ 2] send_to_group_[k]
  [ 3] fsnotify_[k]
  [ 4] __fsnotify_parent_[k]
  [ 5] vfs_write_[k]
  [ 6] ksys_write_[k]
  [ 7] __x64_sys_write_[k]
  [ 8] do_syscall_64_[k]
  [ 9] entry_SYSCALL_64_after_hwframe_[k]
  [10] write
  [11] sun.nio.ch.FileDispatcherImpl.write0
  [12] sun.nio.ch.FileDispatcherImpl.write
  [13] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [14] sun.nio.ch.IOUtil.write
  [15] sun.nio.ch.IOUtil.write
  [16] sun.nio.ch.FileChannelImpl.write
  [17] java.nio.channels.Channels.writeFullyImpl
  [18] java.nio.channels.Channels.writeFully
  [19] java.nio.channels.Channels$1.write
  [20] java.io.InputStream.transferTo
  [21] java.nio.file.Files.copy
  [22] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [23] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [24] jdk.nio.zipfs.ZipPath.newFileChannel
  [25] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [26] java.nio.channels.FileChannel.open
  [27] java.nio.channels.FileChannel.open
  [28] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [29] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25648.apply
  [30] cats.effect.IOFiber.$anonfun$8
  [31] cats.effect.IOFiber$$Lambda$279.0x0000000800ddde88.apply
  [32] cats.effect.unsafe.WorkerThread.blockOn
  [33] scala.concurrent.package$.blocking
  [34] cats.effect.IOFiber.runLoop
  [35] cats.effect.IOFiber.execR
  [36] cats.effect.IOFiber.run
  [37] cats.effect.unsafe.WorkerThread.run

--- 1429630836 ns (0.14%), 142 samples
  [ 0] free_unref_page_list_[k]
  [ 1] release_pages_[k]
  [ 2] free_pages_and_swap_cache_[k]
  [ 3] tlb_batch_pages_flush_[k]
  [ 4] tlb_flush_mmu_[k]
  [ 5] zap_pte_range_[k]
  [ 6] zap_pmd_range.isra.0_[k]
  [ 7] unmap_page_range_[k]
  [ 8] unmap_single_vma_[k]
  [ 9] unmap_vmas_[k]
  [10] unmap_region_[k]
  [11] __do_munmap_[k]
  [12] mmap_region_[k]
  [13] do_mmap_[k]
  [14] vm_mmap_pgoff_[k]
  [15] ksys_mmap_pgoff_[k]
  [16] __x64_sys_mmap_[k]
  [17] do_syscall_64_[k]
  [18] entry_SYSCALL_64_after_hwframe_[k]
  [19] __GI___mmap
  [20] G1PageBasedVirtualSpace::uncommit(unsigned long, unsigned long)
  [21] G1RegionsLargerThanCommitSizeMapper::uncommit_regions(unsigned int, unsigned long)
  [22] HeapRegionManager::uncommit_regions(unsigned int, unsigned int)
  [23] HeapRegionManager::uncommit_inactive_regions(unsigned int)
  [24] G1UncommitRegionTask::execute()
  [25] G1ServiceThread::run_task(G1ServiceTask*)
  [26] G1ServiceThread::run_service()
  [27] ConcurrentGCThread::run()
  [28] Thread::call_run()
  [29] thread_native_entry(Thread*)
  [30] start_thread

--- 1344362488 ns (0.14%), 134 samples
  [ 0] dmu_tx_try_assign?[zfs]_[k]
  [ 1] dmu_tx_assign?[zfs]_[k]
  [ 2] zfs_write?[zfs]_[k]
  [ 3] zpl_iter_write?[zfs]_[k]
  [ 4] new_sync_write_[k]
  [ 5] vfs_write_[k]
  [ 6] ksys_write_[k]
  [ 7] __x64_sys_write_[k]
  [ 8] do_syscall_64_[k]
  [ 9] entry_SYSCALL_64_after_hwframe_[k]
  [10] write
  [11] sun.nio.ch.FileDispatcherImpl.write0
  [12] sun.nio.ch.FileDispatcherImpl.write
  [13] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [14] sun.nio.ch.IOUtil.write
  [15] sun.nio.ch.IOUtil.write
  [16] sun.nio.ch.FileChannelImpl.write
  [17] java.nio.channels.Channels.writeFullyImpl
  [18] java.nio.channels.Channels.writeFully
  [19] java.nio.channels.Channels$1.write
  [20] java.io.InputStream.transferTo
  [21] java.nio.file.Files.copy
  [22] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [23] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [24] jdk.nio.zipfs.ZipPath.newFileChannel
  [25] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [26] java.nio.channels.FileChannel.open
  [27] java.nio.channels.FileChannel.open
  [28] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [29] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25648.apply
  [30] cats.effect.IOFiber.$anonfun$8
  [31] cats.effect.IOFiber$$Lambda$279.0x0000000800ddde88.apply
  [32] cats.effect.unsafe.WorkerThread.blockOn
  [33] scala.concurrent.package$.blocking
  [34] cats.effect.IOFiber.runLoop
  [35] cats.effect.IOFiber.execR
  [36] cats.effect.IOFiber.run
  [37] cats.effect.unsafe.WorkerThread.run

--- 1343915145 ns (0.14%), 134 samples
  [ 0] refill_stock_[k]
  [ 1] obj_cgroup_uncharge_pages_[k]
  [ 2] refill_obj_stock_[k]
  [ 3] obj_cgroup_charge_[k]
  [ 4] __kmalloc_[k]
  [ 5] inotify_handle_inode_event_[k]
  [ 6] fsnotify_handle_inode_event.isra.0_[k]
  [ 7] send_to_group_[k]
  [ 8] fsnotify_[k]
  [ 9] __fsnotify_parent_[k]
  [10] vfs_write_[k]
  [11] ksys_write_[k]
  [12] __x64_sys_write_[k]
  [13] do_syscall_64_[k]
  [14] entry_SYSCALL_64_after_hwframe_[k]
  [15] write
  [16] sun.nio.ch.FileDispatcherImpl.write0
  [17] sun.nio.ch.FileDispatcherImpl.write
  [18] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [19] sun.nio.ch.IOUtil.write
  [20] sun.nio.ch.IOUtil.write
  [21] sun.nio.ch.FileChannelImpl.write
  [22] java.nio.channels.Channels.writeFullyImpl
  [23] java.nio.channels.Channels.writeFully
  [24] java.nio.channels.Channels$1.write
  [25] java.io.InputStream.transferTo
  [26] java.nio.file.Files.copy
  [27] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [28] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [29] jdk.nio.zipfs.ZipPath.newFileChannel
  [30] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [31] java.nio.channels.FileChannel.open
  [32] java.nio.channels.FileChannel.open
  [33] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [34] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25648.apply
  [35] cats.effect.IOFiber.$anonfun$8
  [36] cats.effect.IOFiber$$Lambda$279.0x0000000800ddde88.apply
  [37] cats.effect.unsafe.WorkerThread.blockOn
  [38] scala.concurrent.package$.blocking
  [39] cats.effect.IOFiber.runLoop
  [40] cats.effect.IOFiber.execR
  [41] cats.effect.IOFiber.run
  [42] cats.effect.unsafe.WorkerThread.run

--- 1313140722 ns (0.13%), 131 samples
  [ 0] mod_memcg_state_[k]
  [ 1] memcg_account_kmem_[k]
  [ 2] obj_cgroup_charge_[k]
  [ 3] __kmalloc_[k]
  [ 4] inotify_handle_inode_event_[k]
  [ 5] fsnotify_handle_inode_event.isra.0_[k]
  [ 6] send_to_group_[k]
  [ 7] fsnotify_[k]
  [ 8] __fsnotify_parent_[k]
  [ 9] vfs_write_[k]
  [10] ksys_write_[k]
  [11] __x64_sys_write_[k]
  [12] do_syscall_64_[k]
  [13] entry_SYSCALL_64_after_hwframe_[k]
  [14] write
  [15] sun.nio.ch.FileDispatcherImpl.write0
  [16] sun.nio.ch.FileDispatcherImpl.write
  [17] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.IOUtil.write
  [20] sun.nio.ch.FileChannelImpl.write
  [21] java.nio.channels.Channels.writeFullyImpl
  [22] java.nio.channels.Channels.writeFully
  [23] java.nio.channels.Channels$1.write
  [24] java.io.InputStream.transferTo
  [25] java.nio.file.Files.copy
  [26] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [27] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [28] jdk.nio.zipfs.ZipPath.newFileChannel
  [29] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [30] java.nio.channels.FileChannel.open
  [31] java.nio.channels.FileChannel.open
  [32] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [33] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25648.apply
  [34] cats.effect.IOFiber.$anonfun$8
  [35] cats.effect.IOFiber$$Lambda$279.0x0000000800ddde88.apply
  [36] cats.effect.unsafe.WorkerThread.blockOn
  [37] scala.concurrent.package$.blocking
  [38] cats.effect.IOFiber.runLoop
  [39] cats.effect.IOFiber.execR
  [40] cats.effect.IOFiber.run
  [41] cats.effect.unsafe.WorkerThread.run

--- 1294527787 ns (0.13%), 129 samples
  [ 0] zio_wait?[zfs]_[k]
  [ 1] dmu_tx_count_write?[zfs]_[k]
  [ 2] dmu_tx_hold_write_by_dnode?[zfs]_[k]
  [ 3] zfs_write?[zfs]_[k]
  [ 4] zpl_iter_write?[zfs]_[k]
  [ 5] new_sync_write_[k]
  [ 6] vfs_write_[k]
  [ 7] ksys_write_[k]
  [ 8] __x64_sys_write_[k]
  [ 9] do_syscall_64_[k]
  [10] entry_SYSCALL_64_after_hwframe_[k]
  [11] write
  [12] sun.nio.ch.FileDispatcherImpl.write0
  [13] sun.nio.ch.FileDispatcherImpl.write
  [14] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [15] sun.nio.ch.IOUtil.write
  [16] sun.nio.ch.IOUtil.write
  [17] sun.nio.ch.FileChannelImpl.write
  [18] java.nio.channels.Channels.writeFullyImpl
  [19] java.nio.channels.Channels.writeFully
  [20] java.nio.channels.Channels$1.write
  [21] java.io.InputStream.transferTo
  [22] java.nio.file.Files.copy
  [23] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [24] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [25] jdk.nio.zipfs.ZipPath.newFileChannel
  [26] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [27] java.nio.channels.FileChannel.open
  [28] java.nio.channels.FileChannel.open
  [29] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [30] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25648.apply
  [31] cats.effect.IOFiber.$anonfun$8
  [32] cats.effect.IOFiber$$Lambda$279.0x0000000800ddde88.apply
  [33] cats.effect.unsafe.WorkerThread.blockOn
  [34] scala.concurrent.package$.blocking
  [35] cats.effect.IOFiber.runLoop
  [36] cats.effect.IOFiber.execR
  [37] cats.effect.IOFiber.run
  [38] cats.effect.unsafe.WorkerThread.run

--- 1254668799 ns (0.13%), 125 samples
  [ 0] fsnotify_insert_event_[k]
  [ 1] inotify_handle_inode_event_[k]
  [ 2] fsnotify_handle_inode_event.isra.0_[k]
  [ 3] send_to_group_[k]
  [ 4] fsnotify_[k]
  [ 5] __fsnotify_parent_[k]
  [ 6] vfs_write_[k]
  [ 7] ksys_write_[k]
  [ 8] __x64_sys_write_[k]
  [ 9] do_syscall_64_[k]
  [10] entry_SYSCALL_64_after_hwframe_[k]
  [11] write
  [12] sun.nio.ch.FileDispatcherImpl.write0
  [13] sun.nio.ch.FileDispatcherImpl.write
  [14] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [15] sun.nio.ch.IOUtil.write
  [16] sun.nio.ch.IOUtil.write
  [17] sun.nio.ch.FileChannelImpl.write
  [18] java.nio.channels.Channels.writeFullyImpl
  [19] java.nio.channels.Channels.writeFully
  [20] java.nio.channels.Channels$1.write
  [21] java.io.InputStream.transferTo
  [22] java.nio.file.Files.copy
  [23] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [24] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [25] jdk.nio.zipfs.ZipPath.newFileChannel
  [26] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [27] java.nio.channels.FileChannel.open
  [28] java.nio.channels.FileChannel.open
  [29] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [30] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25648.apply
  [31] cats.effect.IOFiber.$anonfun$8
  [32] cats.effect.IOFiber$$Lambda$279.0x0000000800ddde88.apply
  [33] cats.effect.unsafe.WorkerThread.blockOn
  [34] scala.concurrent.package$.blocking
  [35] cats.effect.IOFiber.runLoop
  [36] cats.effect.IOFiber.execR
  [37] cats.effect.IOFiber.run
  [38] cats.effect.unsafe.WorkerThread.run

--- 1164979702 ns (0.12%), 116 samples
  [ 0] kfree_[k]
  [ 1] spl_kmem_free_impl?[spl]_[k]
  [ 2] spl_kmem_free?[spl]_[k]
  [ 3] dmu_tx_destroy?[zfs]_[k]
  [ 4] dmu_tx_commit?[zfs]_[k]
  [ 5] zfs_write?[zfs]_[k]
  [ 6] zpl_iter_write?[zfs]_[k]
  [ 7] new_sync_write_[k]
  [ 8] vfs_write_[k]
  [ 9] ksys_write_[k]
  [10] __x64_sys_write_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] write
  [14] sun.nio.ch.FileDispatcherImpl.write0
  [15] sun.nio.ch.FileDispatcherImpl.write
  [16] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.FileChannelImpl.write
  [20] java.nio.channels.Channels.writeFullyImpl
  [21] java.nio.channels.Channels.writeFully
  [22] java.nio.channels.Channels$1.write
  [23] java.io.InputStream.transferTo
  [24] java.nio.file.Files.copy
  [25] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [26] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [27] jdk.nio.zipfs.ZipPath.newFileChannel
  [28] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [29] java.nio.channels.FileChannel.open
  [30] java.nio.channels.FileChannel.open
  [31] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [32] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25648.apply
  [33] cats.effect.IOFiber.$anonfun$8
  [34] cats.effect.IOFiber$$Lambda$279.0x0000000800ddde88.apply
  [35] cats.effect.unsafe.WorkerThread.blockOn
  [36] scala.concurrent.package$.blocking
  [37] cats.effect.IOFiber.runLoop
  [38] cats.effect.IOFiber.execR
  [39] cats.effect.IOFiber.run
  [40] cats.effect.unsafe.WorkerThread.run

--- 1154048982 ns (0.12%), 115 samples
  [ 0] __fget_light_[k]
  [ 1] __fdget_pos_[k]
  [ 2] ksys_write_[k]
  [ 3] __x64_sys_write_[k]
  [ 4] do_syscall_64_[k]
  [ 5] entry_SYSCALL_64_after_hwframe_[k]
  [ 6] write
  [ 7] sun.nio.ch.FileDispatcherImpl.write0
  [ 8] sun.nio.ch.FileDispatcherImpl.write
  [ 9] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [10] sun.nio.ch.IOUtil.write
  [11] sun.nio.ch.IOUtil.write
  [12] sun.nio.ch.FileChannelImpl.write
  [13] java.nio.channels.Channels.writeFullyImpl
  [14] java.nio.channels.Channels.writeFully
  [15] java.nio.channels.Channels$1.write
  [16] java.io.InputStream.transferTo
  [17] java.nio.file.Files.copy
  [18] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [19] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [20] jdk.nio.zipfs.ZipPath.newFileChannel
  [21] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [22] java.nio.channels.FileChannel.open
  [23] java.nio.channels.FileChannel.open
  [24] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [25] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25648.apply
  [26] cats.effect.IOFiber.$anonfun$8
  [27] cats.effect.IOFiber$$Lambda$279.0x0000000800ddde88.apply
  [28] cats.effect.unsafe.WorkerThread.blockOn
  [29] scala.concurrent.package$.blocking
  [30] cats.effect.IOFiber.runLoop
  [31] cats.effect.IOFiber.execR
  [32] cats.effect.IOFiber.run
  [33] cats.effect.unsafe.WorkerThread.run

--- 1152624138 ns (0.12%), 115 samples
  [ 0] inotify_merge_[k]
  [ 1] inotify_handle_inode_event_[k]
  [ 2] fsnotify_handle_inode_event.isra.0_[k]
  [ 3] send_to_group_[k]
  [ 4] fsnotify_[k]
  [ 5] __fsnotify_parent_[k]
  [ 6] vfs_write_[k]
  [ 7] ksys_write_[k]
  [ 8] __x64_sys_write_[k]
  [ 9] do_syscall_64_[k]
  [10] entry_SYSCALL_64_after_hwframe_[k]
  [11] write
  [12] sun.nio.ch.FileDispatcherImpl.write0
  [13] sun.nio.ch.FileDispatcherImpl.write
  [14] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [15] sun.nio.ch.IOUtil.write
  [16] sun.nio.ch.IOUtil.write
  [17] sun.nio.ch.FileChannelImpl.write
  [18] java.nio.channels.Channels.writeFullyImpl
  [19] java.nio.channels.Channels.writeFully
  [20] java.nio.channels.Channels$1.write
  [21] java.io.InputStream.transferTo
  [22] java.nio.file.Files.copy
  [23] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [24] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [25] jdk.nio.zipfs.ZipPath.newFileChannel
  [26] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [27] java.nio.channels.FileChannel.open
  [28] java.nio.channels.FileChannel.open
  [29] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [30] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25648.apply
  [31] cats.effect.IOFiber.$anonfun$8
  [32] cats.effect.IOFiber$$Lambda$279.0x0000000800ddde88.apply
  [33] cats.effect.unsafe.WorkerThread.blockOn
  [34] scala.concurrent.package$.blocking
  [35] cats.effect.IOFiber.runLoop
  [36] cats.effect.IOFiber.execR
  [37] cats.effect.IOFiber.run
  [38] cats.effect.unsafe.WorkerThread.run

--- 1132152778 ns (0.11%), 113 samples
  [ 0] sun.nio.ch.FileDispatcherImpl.write0
  [ 1] sun.nio.ch.FileDispatcherImpl.write
  [ 2] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [ 3] sun.nio.ch.IOUtil.write
  [ 4] sun.nio.ch.IOUtil.write
  [ 5] sun.nio.ch.FileChannelImpl.write
  [ 6] java.nio.channels.Channels.writeFullyImpl
  [ 7] java.nio.channels.Channels.writeFully
  [ 8] java.nio.channels.Channels$1.write
  [ 9] java.io.InputStream.transferTo
  [10] java.nio.file.Files.copy
  [11] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [12] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [13] jdk.nio.zipfs.ZipPath.newFileChannel
  [14] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [15] java.nio.channels.FileChannel.open
  [16] java.nio.channels.FileChannel.open
  [17] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [18] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25648.apply
  [19] cats.effect.IOFiber.$anonfun$8
  [20] cats.effect.IOFiber$$Lambda$279.0x0000000800ddde88.apply
  [21] cats.effect.unsafe.WorkerThread.blockOn
  [22] scala.concurrent.package$.blocking
  [23] cats.effect.IOFiber.runLoop
  [24] cats.effect.IOFiber.execR
  [25] cats.effect.IOFiber.run
  [26] cats.effect.unsafe.WorkerThread.run

--- 1053079641 ns (0.11%), 105 samples
  [ 0] zfs_log_write?[zfs]_[k]
  [ 1] zfs_write?[zfs]_[k]
  [ 2] zpl_iter_write?[zfs]_[k]
  [ 3] new_sync_write_[k]
  [ 4] vfs_write_[k]
  [ 5] ksys_write_[k]
  [ 6] __x64_sys_write_[k]
  [ 7] do_syscall_64_[k]
  [ 8] entry_SYSCALL_64_after_hwframe_[k]
  [ 9] write
  [10] sun.nio.ch.FileDispatcherImpl.write0
  [11] sun.nio.ch.FileDispatcherImpl.write
  [12] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [13] sun.nio.ch.IOUtil.write
  [14] sun.nio.ch.IOUtil.write
  [15] sun.nio.ch.FileChannelImpl.write
  [16] java.nio.channels.Channels.writeFullyImpl
  [17] java.nio.channels.Channels.writeFully
  [18] java.nio.channels.Channels$1.write
  [19] java.io.InputStream.transferTo
  [20] java.nio.file.Files.copy
  [21] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [22] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [23] jdk.nio.zipfs.ZipPath.newFileChannel
  [24] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [25] java.nio.channels.FileChannel.open
  [26] java.nio.channels.FileChannel.open
  [27] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [28] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25648.apply
  [29] cats.effect.IOFiber.$anonfun$8
  [30] cats.effect.IOFiber$$Lambda$279.0x0000000800ddde88.apply
  [31] cats.effect.unsafe.WorkerThread.blockOn
  [32] scala.concurrent.package$.blocking
  [33] cats.effect.IOFiber.runLoop
  [34] cats.effect.IOFiber.execR
  [35] cats.effect.IOFiber.run
  [36] cats.effect.unsafe.WorkerThread.run

--- 1052272762 ns (0.11%), 105 samples
  [ 0] obj_cgroup_charge_[k]
  [ 1] __kmalloc_[k]
  [ 2] inotify_handle_inode_event_[k]
  [ 3] fsnotify_handle_inode_event.isra.0_[k]
  [ 4] send_to_group_[k]
  [ 5] fsnotify_[k]
  [ 6] __fsnotify_parent_[k]
  [ 7] vfs_write_[k]
  [ 8] ksys_write_[k]
  [ 9] __x64_sys_write_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] write
  [13] sun.nio.ch.FileDispatcherImpl.write0
  [14] sun.nio.ch.FileDispatcherImpl.write
  [15] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [16] sun.nio.ch.IOUtil.write
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.FileChannelImpl.write
  [19] java.nio.channels.Channels.writeFullyImpl
  [20] java.nio.channels.Channels.writeFully
  [21] java.nio.channels.Channels$1.write
  [22] java.io.InputStream.transferTo
  [23] java.nio.file.Files.copy
  [24] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [25] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [26] jdk.nio.zipfs.ZipPath.newFileChannel
  [27] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [28] java.nio.channels.FileChannel.open
  [29] java.nio.channels.FileChannel.open
  [30] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [31] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25648.apply
  [32] cats.effect.IOFiber.$anonfun$8
  [33] cats.effect.IOFiber$$Lambda$279.0x0000000800ddde88.apply
  [34] cats.effect.unsafe.WorkerThread.blockOn
  [35] scala.concurrent.package$.blocking
  [36] cats.effect.IOFiber.runLoop
  [37] cats.effect.IOFiber.execR
  [38] cats.effect.IOFiber.run
  [39] cats.effect.unsafe.WorkerThread.run

--- 1042849932 ns (0.11%), 104 samples
  [ 0] dsl_dir_phys?[zfs]_[k]
  [ 1] dsl_dir_tempreserve_space?[zfs]_[k]
  [ 2] dmu_tx_try_assign?[zfs]_[k]
  [ 3] dmu_tx_assign?[zfs]_[k]
  [ 4] zfs_write?[zfs]_[k]
  [ 5] zpl_iter_write?[zfs]_[k]
  [ 6] new_sync_write_[k]
  [ 7] vfs_write_[k]
  [ 8] ksys_write_[k]
  [ 9] __x64_sys_write_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] write
  [13] sun.nio.ch.FileDispatcherImpl.write0
  [14] sun.nio.ch.FileDispatcherImpl.write
  [15] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [16] sun.nio.ch.IOUtil.write
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.FileChannelImpl.write
  [19] java.nio.channels.Channels.writeFullyImpl
  [20] java.nio.channels.Channels.writeFully
  [21] java.nio.channels.Channels$1.write
  [22] java.io.InputStream.transferTo
  [23] java.nio.file.Files.copy
  [24] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [25] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [26] jdk.nio.zipfs.ZipPath.newFileChannel
  [27] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [28] java.nio.channels.FileChannel.open
  [29] java.nio.channels.FileChannel.open
  [30] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [31] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25648.apply
  [32] cats.effect.IOFiber.$anonfun$8
  [33] cats.effect.IOFiber$$Lambda$279.0x0000000800ddde88.apply
  [34] cats.effect.unsafe.WorkerThread.blockOn
  [35] scala.concurrent.package$.blocking
  [36] cats.effect.IOFiber.runLoop
  [37] cats.effect.IOFiber.execR
  [38] cats.effect.IOFiber.run
  [39] cats.effect.unsafe.WorkerThread.run

--- 1014646682 ns (0.10%), 101 samples
  [ 0] memset_[k]
  [ 1] spl_kmem_cache_alloc?[spl]_[k]
  [ 2] zio_create?[zfs]_[k]
  [ 3] zio_null?[zfs]_[k]
  [ 4] zio_root?[zfs]_[k]
  [ 5] dmu_tx_count_write?[zfs]_[k]
  [ 6] dmu_tx_hold_write_by_dnode?[zfs]_[k]
  [ 7] zfs_write?[zfs]_[k]
  [ 8] zpl_iter_write?[zfs]_[k]
  [ 9] new_sync_write_[k]
  [10] vfs_write_[k]
  [11] ksys_write_[k]
  [12] __x64_sys_write_[k]
  [13] do_syscall_64_[k]
  [14] entry_SYSCALL_64_after_hwframe_[k]
  [15] write
  [16] sun.nio.ch.FileDispatcherImpl.write0
  [17] sun.nio.ch.FileDispatcherImpl.write
  [18] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [19] sun.nio.ch.IOUtil.write
  [20] sun.nio.ch.IOUtil.write
  [21] sun.nio.ch.FileChannelImpl.write
  [22] java.nio.channels.Channels.writeFullyImpl
  [23] java.nio.channels.Channels.writeFully
  [24] java.nio.channels.Channels$1.write
  [25] java.io.InputStream.transferTo
  [26] java.nio.file.Files.copy
  [27] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [28] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [29] jdk.nio.zipfs.ZipPath.newFileChannel
  [30] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [31] java.nio.channels.FileChannel.open
  [32] java.nio.channels.FileChannel.open
  [33] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [34] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25648.apply
  [35] cats.effect.IOFiber.$anonfun$8
  [36] cats.effect.IOFiber$$Lambda$279.0x0000000800ddde88.apply
  [37] cats.effect.unsafe.WorkerThread.blockOn
  [38] scala.concurrent.package$.blocking
  [39] cats.effect.IOFiber.runLoop
  [40] cats.effect.IOFiber.execR
  [41] cats.effect.IOFiber.run
  [42] cats.effect.unsafe.WorkerThread.run

--- 1001477243 ns (0.10%), 100 samples
  [ 0] /usr/lib/x86_64-linux-gnu/libz.so.1.2.11
  [ 1] [unknown]
  [ 2] java.util.zip.Inflater.inflateBytesBytes
  [ 3] java.util.zip.Inflater.inflate
  [ 4] java.util.zip.InflaterInputStream.read
  [ 5] java.io.InputStream.transferTo
  [ 6] java.nio.file.Files.copy
  [ 7] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [ 8] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [ 9] jdk.nio.zipfs.ZipPath.newFileChannel
  [10] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [11] java.nio.channels.FileChannel.open
  [12] java.nio.channels.FileChannel.open
  [13] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [14] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25648.apply
  [15] cats.effect.IOFiber.$anonfun$8
  [16] cats.effect.IOFiber$$Lambda$279.0x0000000800ddde88.apply
  [17] cats.effect.unsafe.WorkerThread.blockOn
  [18] scala.concurrent.package$.blocking
  [19] cats.effect.IOFiber.runLoop
  [20] cats.effect.IOFiber.execR
  [21] cats.effect.IOFiber.run
  [22] cats.effect.unsafe.WorkerThread.run

--- 982482579 ns (0.10%), 98 samples
  [ 0] syscall_enter_from_user_mode_[k]
  [ 1] do_syscall_64_[k]
  [ 2] entry_SYSCALL_64_after_hwframe_[k]
  [ 3] write
  [ 4] sun.nio.ch.FileDispatcherImpl.write0
  [ 5] sun.nio.ch.FileDispatcherImpl.write
  [ 6] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [ 7] sun.nio.ch.IOUtil.write
  [ 8] sun.nio.ch.IOUtil.write
  [ 9] sun.nio.ch.FileChannelImpl.write
  [10] java.nio.channels.Channels.writeFullyImpl
  [11] java.nio.channels.Channels.writeFully
  [12] java.nio.channels.Channels$1.write
  [13] java.io.InputStream.transferTo
  [14] java.nio.file.Files.copy
  [15] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [16] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [17] jdk.nio.zipfs.ZipPath.newFileChannel
  [18] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [19] java.nio.channels.FileChannel.open
  [20] java.nio.channels.FileChannel.open
  [21] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [22] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25648.apply
  [23] cats.effect.IOFiber.$anonfun$8
  [24] cats.effect.IOFiber$$Lambda$279.0x0000000800ddde88.apply
  [25] cats.effect.unsafe.WorkerThread.blockOn
  [26] scala.concurrent.package$.blocking
  [27] cats.effect.IOFiber.runLoop
  [28] cats.effect.IOFiber.execR
  [29] cats.effect.IOFiber.run
  [30] cats.effect.unsafe.WorkerThread.run

--- 973399785 ns (0.10%), 97 samples
  [ 0] zio_create?[zfs]_[k]
  [ 1] zio_null?[zfs]_[k]
  [ 2] zio_root?[zfs]_[k]
  [ 3] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 4] dmu_read_uio_dnode?[zfs]_[k]
  [ 5] dmu_read_uio_dbuf?[zfs]_[k]
  [ 6] mappedread?[zfs]_[k]
  [ 7] zfs_read?[zfs]_[k]
  [ 8] zpl_iter_read?[zfs]_[k]
  [ 9] new_sync_read_[k]
  [10] vfs_read_[k]
  [11] __x64_sys_pread64_[k]
  [12] do_syscall_64_[k]
  [13] entry_SYSCALL_64_after_hwframe_[k]
  [14] __libc_pread64
  [15] sun.nio.ch.FileDispatcherImpl.pread0
  [16] sun.nio.ch.FileDispatcherImpl.pread
  [17] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [18] sun.nio.ch.IOUtil.read
  [19] sun.nio.ch.IOUtil.read
  [20] sun.nio.ch.FileChannelImpl.readInternal
  [21] sun.nio.ch.FileChannelImpl.read
  [22] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [23] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [24] jdk.nio.zipfs.ZipFileSystem$2.fill
  [25] java.util.zip.InflaterInputStream.read
  [26] java.io.InputStream.transferTo
  [27] java.nio.file.Files.copy
  [28] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [29] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [30] jdk.nio.zipfs.ZipPath.newFileChannel
  [31] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [32] java.nio.channels.FileChannel.open
  [33] java.nio.channels.FileChannel.open
  [34] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [35] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25648.apply
  [36] cats.effect.IOFiber.$anonfun$8
  [37] cats.effect.IOFiber$$Lambda$279.0x0000000800ddde88.apply
  [38] cats.effect.unsafe.WorkerThread.blockOn
  [39] scala.concurrent.package$.blocking
  [40] cats.effect.IOFiber.runLoop
  [41] cats.effect.IOFiber.execR
  [42] cats.effect.IOFiber.run
  [43] cats.effect.unsafe.WorkerThread.run

--- 972166269 ns (0.10%), 97 samples
  [ 0] void OopOopIterateDispatch<G1CMOopClosure>::Table::oop_oop_iterate<InstanceKlass, narrowOop>(G1CMOopClosure*, oopDesc*, Klass*)
  [ 1] void G1CMTask::process_grey_task_entry<true>(G1TaskQueueEntry)
  [ 2] G1CMTask::do_marking_step(double, bool, bool)
  [ 3] G1CMConcurrentMarkingTask::work(unsigned int)
  [ 4] GangWorker::loop()
  [ 5] GangWorker::run()
  [ 6] Thread::call_run()
  [ 7] thread_native_entry(Thread*)
  [ 8] start_thread

--- 964010976 ns (0.10%), 96 samples
  [ 0] rmqueue_pcplist.constprop.0_[k]
  [ 1] rmqueue_[k]
  [ 2] get_page_from_freelist_[k]
  [ 3] __alloc_pages_[k]
  [ 4] __folio_alloc_[k]
  [ 5] vma_alloc_folio_[k]
  [ 6] do_anonymous_page_[k]
  [ 7] handle_pte_fault_[k]
  [ 8] __handle_mm_fault_[k]
  [ 9] handle_mm_fault_[k]
  [10] do_user_addr_fault_[k]
  [11] exc_page_fault_[k]
  [12] asm_exc_page_fault_[k]
  [13] __memset_avx2_unaligned_erms
  [14] MemAllocator::allocate() const
  [15] TypeArrayKlass::allocate_common(int, bool, JavaThread*)
  [16] JVMCIRuntime::new_array_common(JavaThread*, Klass*, int, bool)
  [17] fs2.Chunk.toArray
  [18] com.scalamandra.ZipLib$.$anonfun$1
  [19] com.scalamandra.ZipLib$$$Lambda$325.0x0000000800df40b8.apply
  [20] scala.Option.map
  [21] com.scalamandra.ZipLib$.com$scalamandra$ZipLib$$anon$1$$_$fs2ReadAllBytes$$anonfun$1$$anonfun$1$$anonfun$2$$anonfun$1
  [22] com.scalamandra.ZipLib$$anon$1$$Lambda$322.0x0000000800dedc48.apply
  [23] cats.effect.IOFiber.succeeded
  [24] cats.effect.IOFiber.runLoop
  [25] cats.effect.IOFiber.execR
  [26] cats.effect.IOFiber.run
  [27] cats.effect.unsafe.WorkerThread.run

--- 931380496 ns (0.09%), 93 samples
  [ 0] jni_GetPrimitiveArrayCritical
  [ 1] Java_java_util_zip_Inflater_inflateBytesBytes
  [ 2] java.util.zip.Inflater.inflateBytesBytes
  [ 3] java.util.zip.Inflater.inflate
  [ 4] java.util.zip.InflaterInputStream.read
  [ 5] java.io.InputStream.transferTo
  [ 6] java.nio.file.Files.copy
  [ 7] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [ 8] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [ 9] jdk.nio.zipfs.ZipPath.newFileChannel
  [10] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [11] java.nio.channels.FileChannel.open
  [12] java.nio.channels.FileChannel.open
  [13] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [14] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25648.apply
  [15] cats.effect.IOFiber.$anonfun$8
  [16] cats.effect.IOFiber$$Lambda$279.0x0000000800ddde88.apply
  [17] cats.effect.unsafe.WorkerThread.blockOn
  [18] scala.concurrent.package$.blocking
  [19] cats.effect.IOFiber.runLoop
  [20] cats.effect.IOFiber.execR
  [21] cats.effect.IOFiber.run
  [22] cats.effect.unsafe.WorkerThread.run

--- 922754357 ns (0.09%), 92 samples
  [ 0] java.util.Arrays.copyOfRange
  [ 1] java.lang.String.<init>
  [ 2] java.lang.String.<init>
  [ 3] com.scalamandra.ZipLib$.com$scalamandra$ZipLib$$anon$1$$_$fs2ReadAllBytes$$anonfun$1$$anonfun$1$$anonfun$2$$anonfun$2
  [ 4] com.scalamandra.ZipLib$$anon$1$$Lambda$323.0x0000000800dee010.apply
  [ 5] cats.effect.IOFiber.succeeded
  [ 6] cats.effect.IOFiber.runLoop
  [ 7] cats.effect.IOFiber.execR
  [ 8] cats.effect.IOFiber.run
  [ 9] cats.effect.unsafe.WorkerThread.run

--- 911759765 ns (0.09%), 91 samples
  [ 0] inflate
  [ 1] java.util.zip.Inflater.inflateBytesBytes
  [ 2] java.util.zip.Inflater.inflate
  [ 3] java.util.zip.InflaterInputStream.read
  [ 4] java.io.InputStream.transferTo
  [ 5] java.nio.file.Files.copy
  [ 6] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [ 7] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [ 8] jdk.nio.zipfs.ZipPath.newFileChannel
  [ 9] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [10] java.nio.channels.FileChannel.open
  [11] java.nio.channels.FileChannel.open
  [12] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [13] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25648.apply
  [14] cats.effect.IOFiber.$anonfun$8
  [15] cats.effect.IOFiber$$Lambda$279.0x0000000800ddde88.apply
  [16] cats.effect.unsafe.WorkerThread.blockOn
  [17] scala.concurrent.package$.blocking
  [18] cats.effect.IOFiber.runLoop
  [19] cats.effect.IOFiber.execR
  [20] cats.effect.IOFiber.run
  [21] cats.effect.unsafe.WorkerThread.run

--- 882160905 ns (0.09%), 88 samples
  [ 0] __rcu_read_lock_[k]
  [ 1] __kmalloc_[k]
  [ 2] inotify_handle_inode_event_[k]
  [ 3] fsnotify_handle_inode_event.isra.0_[k]
  [ 4] send_to_group_[k]
  [ 5] fsnotify_[k]
  [ 6] __fsnotify_parent_[k]
  [ 7] vfs_write_[k]
  [ 8] ksys_write_[k]
  [ 9] __x64_sys_write_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] write
  [13] sun.nio.ch.FileDispatcherImpl.write0
  [14] sun.nio.ch.FileDispatcherImpl.write
  [15] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [16] sun.nio.ch.IOUtil.write
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.FileChannelImpl.write
  [19] java.nio.channels.Channels.writeFullyImpl
  [20] java.nio.channels.Channels.writeFully
  [21] java.nio.channels.Channels$1.write
  [22] java.io.InputStream.transferTo
  [23] java.nio.file.Files.copy
  [24] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [25] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [26] jdk.nio.zipfs.ZipPath.newFileChannel
  [27] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [28] java.nio.channels.FileChannel.open
  [29] java.nio.channels.FileChannel.open
  [30] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [31] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25648.apply
  [32] cats.effect.IOFiber.$anonfun$8
  [33] cats.effect.IOFiber$$Lambda$279.0x0000000800ddde88.apply
  [34] cats.effect.unsafe.WorkerThread.blockOn
  [35] scala.concurrent.package$.blocking
  [36] cats.effect.IOFiber.runLoop
  [37] cats.effect.IOFiber.execR
  [38] cats.effect.IOFiber.run
  [39] cats.effect.unsafe.WorkerThread.run

--- 862687668 ns (0.09%), 86 samples
  [ 0] __kmalloc_node_[k]
  [ 1] spl_kmem_alloc_impl?[spl]_[k]
  [ 2] spl_kmem_zalloc?[spl]_[k]
  [ 3] dsl_dir_tempreserve_impl.constprop.0?[zfs]_[k]
  [ 4] dsl_dir_tempreserve_space?[zfs]_[k]
  [ 5] dmu_tx_try_assign?[zfs]_[k]
  [ 6] dmu_tx_assign?[zfs]_[k]
  [ 7] zfs_write?[zfs]_[k]
  [ 8] zpl_iter_write?[zfs]_[k]
  [ 9] new_sync_write_[k]
  [10] vfs_write_[k]
  [11] ksys_write_[k]
  [12] __x64_sys_write_[k]
  [13] do_syscall_64_[k]
  [14] entry_SYSCALL_64_after_hwframe_[k]
  [15] write
  [16] sun.nio.ch.FileDispatcherImpl.write0
  [17] sun.nio.ch.FileDispatcherImpl.write
  [18] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [19] sun.nio.ch.IOUtil.write
  [20] sun.nio.ch.IOUtil.write
  [21] sun.nio.ch.FileChannelImpl.write
  [22] java.nio.channels.Channels.writeFullyImpl
  [23] java.nio.channels.Channels.writeFully
  [24] java.nio.channels.Channels$1.write
  [25] java.io.InputStream.transferTo
  [26] java.nio.file.Files.copy
  [27] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [28] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [29] jdk.nio.zipfs.ZipPath.newFileChannel
  [30] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [31] java.nio.channels.FileChannel.open
  [32] java.nio.channels.FileChannel.open
  [33] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [34] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25648.apply
  [35] cats.effect.IOFiber.$anonfun$8
  [36] cats.effect.IOFiber$$Lambda$279.0x0000000800ddde88.apply
  [37] cats.effect.unsafe.WorkerThread.blockOn
  [38] scala.concurrent.package$.blocking
  [39] cats.effect.IOFiber.runLoop
  [40] cats.effect.IOFiber.execR
  [41] cats.effect.IOFiber.run
  [42] cats.effect.unsafe.WorkerThread.run

--- 843606998 ns (0.09%), 84 samples
  [ 0] __kmalloc_node_[k]
  [ 1] spl_kmem_alloc_impl?[spl]_[k]
  [ 2] spl_kmem_alloc?[spl]_[k]
  [ 3] zfs_rangelock_enter_impl?[zfs]_[k]
  [ 4] zfs_rangelock_enter?[zfs]_[k]
  [ 5] zfs_write?[zfs]_[k]
  [ 6] zpl_iter_write?[zfs]_[k]
  [ 7] new_sync_write_[k]
  [ 8] vfs_write_[k]
  [ 9] ksys_write_[k]
  [10] __x64_sys_write_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] write
  [14] sun.nio.ch.FileDispatcherImpl.write0
  [15] sun.nio.ch.FileDispatcherImpl.write
  [16] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.FileChannelImpl.write
  [20] java.nio.channels.Channels.writeFullyImpl
  [21] java.nio.channels.Channels.writeFully
  [22] java.nio.channels.Channels$1.write
  [23] java.io.InputStream.transferTo
  [24] java.nio.file.Files.copy
  [25] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [26] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [27] jdk.nio.zipfs.ZipPath.newFileChannel
  [28] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [29] java.nio.channels.FileChannel.open
  [30] java.nio.channels.FileChannel.open
  [31] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [32] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25648.apply
  [33] cats.effect.IOFiber.$anonfun$8
  [34] cats.effect.IOFiber$$Lambda$279.0x0000000800ddde88.apply
  [35] cats.effect.unsafe.WorkerThread.blockOn
  [36] scala.concurrent.package$.blocking
  [37] cats.effect.IOFiber.runLoop
  [38] cats.effect.IOFiber.execR
  [39] cats.effect.IOFiber.run
  [40] cats.effect.unsafe.WorkerThread.run

--- 842940333 ns (0.09%), 84 samples
  [ 0] __kmalloc_node_[k]
  [ 1] spl_kmem_alloc_impl?[spl]_[k]
  [ 2] spl_kmem_alloc?[spl]_[k]
  [ 3] dsl_dir_tempreserve_space?[zfs]_[k]
  [ 4] dmu_tx_try_assign?[zfs]_[k]
  [ 5] dmu_tx_assign?[zfs]_[k]
  [ 6] zfs_write?[zfs]_[k]
  [ 7] zpl_iter_write?[zfs]_[k]
  [ 8] new_sync_write_[k]
  [ 9] vfs_write_[k]
  [10] ksys_write_[k]
  [11] __x64_sys_write_[k]
  [12] do_syscall_64_[k]
  [13] entry_SYSCALL_64_after_hwframe_[k]
  [14] write
  [15] sun.nio.ch.FileDispatcherImpl.write0
  [16] sun.nio.ch.FileDispatcherImpl.write
  [17] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.IOUtil.write
  [20] sun.nio.ch.FileChannelImpl.write
  [21] java.nio.channels.Channels.writeFullyImpl
  [22] java.nio.channels.Channels.writeFully
  [23] java.nio.channels.Channels$1.write
  [24] java.io.InputStream.transferTo
  [25] java.nio.file.Files.copy
  [26] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [27] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [28] jdk.nio.zipfs.ZipPath.newFileChannel
  [29] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [30] java.nio.channels.FileChannel.open
  [31] java.nio.channels.FileChannel.open
  [32] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [33] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25648.apply
  [34] cats.effect.IOFiber.$anonfun$8
  [35] cats.effect.IOFiber$$Lambda$279.0x0000000800ddde88.apply
  [36] cats.effect.unsafe.WorkerThread.blockOn
  [37] scala.concurrent.package$.blocking
  [38] cats.effect.IOFiber.runLoop
  [39] cats.effect.IOFiber.execR
  [40] cats.effect.IOFiber.run
  [41] cats.effect.unsafe.WorkerThread.run

--- 812357718 ns (0.08%), 81 samples
  [ 0] _raw_spin_unlock_irqrestore_[k]
  [ 1] __pagevec_lru_add_[k]
  [ 2] folio_add_lru_[k]
  [ 3] lru_cache_add_[k]
  [ 4] lru_cache_add_inactive_or_unevictable_[k]
  [ 5] do_anonymous_page_[k]
  [ 6] handle_pte_fault_[k]
  [ 7] __handle_mm_fault_[k]
  [ 8] handle_mm_fault_[k]
  [ 9] do_user_addr_fault_[k]
  [10] exc_page_fault_[k]
  [11] asm_exc_page_fault_[k]
  [12] __memset_avx2_unaligned_erms
  [13] MemAllocator::allocate() const
  [14] TypeArrayKlass::allocate_common(int, bool, JavaThread*)
  [15] JVMCIRuntime::new_array_common(JavaThread*, Klass*, int, bool)
  [16] fs2.io.file.FileHandleCompanionPlatform$$anon$1.read$$anonfun$1
  [17] fs2.io.file.FileHandleCompanionPlatform$$anon$1$$Lambda$320.0x0000000800ded1e8.apply
  [18] cats.effect.IOFiber.$anonfun$8
  [19] cats.effect.IOFiber$$Lambda$279.0x0000000800ddde88.apply
  [20] cats.effect.unsafe.WorkerThread.blockOn
  [21] scala.concurrent.package$.blocking
  [22] cats.effect.IOFiber.runLoop
  [23] cats.effect.IOFiber.execR
  [24] cats.effect.IOFiber.run
  [25] cats.effect.unsafe.WorkerThread.run

--- 812314358 ns (0.08%), 81 samples
  [ 0] java.lang.System.arraycopy
  [ 1] fs2.Chunk$ArraySlice.copyToArray
  [ 2] fs2.Chunk.toArray
  [ 3] com.scalamandra.ZipLib$.$anonfun$1
  [ 4] com.scalamandra.ZipLib$$$Lambda$325.0x0000000800df40b8.apply
  [ 5] scala.Option.map
  [ 6] com.scalamandra.ZipLib$.com$scalamandra$ZipLib$$anon$1$$_$fs2ReadAllBytes$$anonfun$1$$anonfun$1$$anonfun$2$$anonfun$1
  [ 7] com.scalamandra.ZipLib$$anon$1$$Lambda$322.0x0000000800dedc48.apply
  [ 8] cats.effect.IOFiber.succeeded
  [ 9] cats.effect.IOFiber.runLoop
  [10] cats.effect.IOFiber.execR
  [11] cats.effect.IOFiber.run
  [12] cats.effect.unsafe.WorkerThread.run

--- 808784517 ns (0.08%), 81 samples
  [ 0] zap_pte_range_[k]
  [ 1] zap_pmd_range.isra.0_[k]
  [ 2] unmap_page_range_[k]
  [ 3] unmap_single_vma_[k]
  [ 4] unmap_vmas_[k]
  [ 5] unmap_region_[k]
  [ 6] __do_munmap_[k]
  [ 7] mmap_region_[k]
  [ 8] do_mmap_[k]
  [ 9] vm_mmap_pgoff_[k]
  [10] ksys_mmap_pgoff_[k]
  [11] __x64_sys_mmap_[k]
  [12] do_syscall_64_[k]
  [13] entry_SYSCALL_64_after_hwframe_[k]
  [14] __GI___mmap
  [15] G1PageBasedVirtualSpace::uncommit(unsigned long, unsigned long)
  [16] G1RegionsLargerThanCommitSizeMapper::uncommit_regions(unsigned int, unsigned long)
  [17] HeapRegionManager::uncommit_regions(unsigned int, unsigned int)
  [18] HeapRegionManager::uncommit_inactive_regions(unsigned int)
  [19] G1UncommitRegionTask::execute()
  [20] G1ServiceThread::run_task(G1ServiceTask*)
  [21] G1ServiceThread::run_service()
  [22] ConcurrentGCThread::run()
  [23] Thread::call_run()
  [24] thread_native_entry(Thread*)
  [25] start_thread

--- 803226955 ns (0.08%), 80 samples
  [ 0] kmem_cache_alloc_[k]
  [ 1] spl_kmem_cache_alloc?[spl]_[k]
  [ 2] zio_data_buf_alloc?[zfs]_[k]
  [ 3] zil_itx_create?[zfs]_[k]
  [ 4] zfs_log_write?[zfs]_[k]
  [ 5] zfs_write?[zfs]_[k]
  [ 6] zpl_iter_write?[zfs]_[k]
  [ 7] new_sync_write_[k]
  [ 8] vfs_write_[k]
  [ 9] ksys_write_[k]
  [10] __x64_sys_write_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] write
  [14] sun.nio.ch.FileDispatcherImpl.write0
  [15] sun.nio.ch.FileDispatcherImpl.write
  [16] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.FileChannelImpl.write
  [20] java.nio.channels.Channels.writeFullyImpl
  [21] java.nio.channels.Channels.writeFully
  [22] java.nio.channels.Channels$1.write
  [23] java.io.InputStream.transferTo
  [24] java.nio.file.Files.copy
  [25] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [26] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [27] jdk.nio.zipfs.ZipPath.newFileChannel
  [28] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [29] java.nio.channels.FileChannel.open
  [30] java.nio.channels.FileChannel.open
  [31] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [32] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25648.apply
  [33] cats.effect.IOFiber.$anonfun$8
  [34] cats.effect.IOFiber$$Lambda$279.0x0000000800ddde88.apply
  [35] cats.effect.unsafe.WorkerThread.blockOn
  [36] scala.concurrent.package$.blocking
  [37] cats.effect.IOFiber.runLoop
  [38] cats.effect.IOFiber.execR
  [39] cats.effect.IOFiber.run
  [40] cats.effect.unsafe.WorkerThread.run

--- 789536530 ns (0.08%), 79 samples
  [ 0] _raw_spin_unlock_irqrestore_[k]
  [ 1] release_pages_[k]
  [ 2] free_pages_and_swap_cache_[k]
  [ 3] tlb_batch_pages_flush_[k]
  [ 4] tlb_flush_mmu_[k]
  [ 5] zap_pte_range_[k]
  [ 6] zap_pmd_range.isra.0_[k]
  [ 7] unmap_page_range_[k]
  [ 8] unmap_single_vma_[k]
  [ 9] unmap_vmas_[k]
  [10] unmap_region_[k]
  [11] __do_munmap_[k]
  [12] mmap_region_[k]
  [13] do_mmap_[k]
  [14] vm_mmap_pgoff_[k]
  [15] ksys_mmap_pgoff_[k]
  [16] __x64_sys_mmap_[k]
  [17] do_syscall_64_[k]
  [18] entry_SYSCALL_64_after_hwframe_[k]
  [19] __GI___mmap
  [20] G1PageBasedVirtualSpace::uncommit(unsigned long, unsigned long)
  [21] G1RegionsLargerThanCommitSizeMapper::uncommit_regions(unsigned int, unsigned long)
  [22] HeapRegionManager::uncommit_regions(unsigned int, unsigned int)
  [23] HeapRegionManager::uncommit_inactive_regions(unsigned int)
  [24] G1UncommitRegionTask::execute()
  [25] G1ServiceThread::run_task(G1ServiceTask*)
  [26] G1ServiceThread::run_service()
  [27] ConcurrentGCThread::run()
  [28] Thread::call_run()
  [29] thread_native_entry(Thread*)
  [30] start_thread

--- 782142628 ns (0.08%), 78 samples
  [ 0] jbyte_disjoint_arraycopy
  [ 1] jdk.internal.misc.Unsafe.copyMemory0
  [ 2] jdk.internal.misc.Unsafe.copyMemory
  [ 3] jdk.internal.misc.ScopedMemoryAccess.copyMemoryInternal
  [ 4] jdk.internal.misc.ScopedMemoryAccess.copyMemory
  [ 5] java.nio.ByteBuffer.putBuffer
  [ 6] java.nio.ByteBuffer.put
  [ 7] java.nio.HeapByteBuffer.put
  [ 8] sun.nio.ch.IOUtil.read
  [ 9] sun.nio.ch.IOUtil.read
  [10] sun.nio.ch.FileChannelImpl.readInternal
  [11] sun.nio.ch.FileChannelImpl.read
  [12] jdk.nio.zipfs.ZipFileSystem$1.read
  [13] fs2.io.file.FileHandleCompanionPlatform$$anon$1.read$$anonfun$1
  [14] fs2.io.file.FileHandleCompanionPlatform$$anon$1$$Lambda$320.0x0000000800ded1e8.apply
  [15] cats.effect.IOFiber.$anonfun$8
  [16] cats.effect.IOFiber$$Lambda$279.0x0000000800ddde88.apply
  [17] cats.effect.unsafe.WorkerThread.blockOn
  [18] scala.concurrent.package$.blocking
  [19] cats.effect.IOFiber.runLoop
  [20] cats.effect.IOFiber.execR
  [21] cats.effect.IOFiber.run
  [22] cats.effect.unsafe.WorkerThread.run

--- 772343961 ns (0.08%), 77 samples
  [ 0] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 1] dmu_write_uio_dnode?[zfs]_[k]
  [ 2] dmu_write_uio_dbuf?[zfs]_[k]
  [ 3] zfs_write?[zfs]_[k]
  [ 4] zpl_iter_write?[zfs]_[k]
  [ 5] new_sync_write_[k]
  [ 6] vfs_write_[k]
  [ 7] ksys_write_[k]
  [ 8] __x64_sys_write_[k]
  [ 9] do_syscall_64_[k]
  [10] entry_SYSCALL_64_after_hwframe_[k]
  [11] write
  [12] sun.nio.ch.FileDispatcherImpl.write0
  [13] sun.nio.ch.FileDispatcherImpl.write
  [14] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [15] sun.nio.ch.IOUtil.write
  [16] sun.nio.ch.IOUtil.write
  [17] sun.nio.ch.FileChannelImpl.write
  [18] java.nio.channels.Channels.writeFullyImpl
  [19] java.nio.channels.Channels.writeFully
  [20] java.nio.channels.Channels$1.write
  [21] java.io.InputStream.transferTo
  [22] java.nio.file.Files.copy
  [23] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [24] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [25] jdk.nio.zipfs.ZipPath.newFileChannel
  [26] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [27] java.nio.channels.FileChannel.open
  [28] java.nio.channels.FileChannel.open
  [29] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [30] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25648.apply
  [31] cats.effect.IOFiber.$anonfun$8
  [32] cats.effect.IOFiber$$Lambda$279.0x0000000800ddde88.apply
  [33] cats.effect.unsafe.WorkerThread.blockOn
  [34] scala.concurrent.package$.blocking
  [35] cats.effect.IOFiber.runLoop
  [36] cats.effect.IOFiber.execR
  [37] cats.effect.IOFiber.run
  [38] cats.effect.unsafe.WorkerThread.run

--- 772223353 ns (0.08%), 77 samples
  [ 0] __memset_avx2_unaligned_erms
  [ 1] MemAllocator::allocate() const
  [ 2] TypeArrayKlass::allocate_common(int, bool, JavaThread*)
  [ 3] JVMCIRuntime::new_array_common(JavaThread*, Klass*, int, bool)
  [ 4] fs2.Chunk.toArray
  [ 5] com.scalamandra.ZipLib$.$anonfun$1
  [ 6] com.scalamandra.ZipLib$$$Lambda$325.0x0000000800df40b8.apply
  [ 7] scala.Option.map
  [ 8] com.scalamandra.ZipLib$.com$scalamandra$ZipLib$$anon$1$$_$fs2ReadAllBytes$$anonfun$1$$anonfun$1$$anonfun$2$$anonfun$1
  [ 9] com.scalamandra.ZipLib$$anon$1$$Lambda$322.0x0000000800dedc48.apply
  [10] cats.effect.IOFiber.succeeded
  [11] cats.effect.IOFiber.runLoop
  [12] cats.effect.IOFiber.execR
  [13] cats.effect.IOFiber.run
  [14] cats.effect.unsafe.WorkerThread.run

--- 763634561 ns (0.08%), 76 samples
  [ 0] _raw_spin_unlock_irqrestore_[k]
  [ 1] __pagevec_lru_add_[k]
  [ 2] folio_add_lru_[k]
  [ 3] lru_cache_add_[k]
  [ 4] lru_cache_add_inactive_or_unevictable_[k]
  [ 5] do_anonymous_page_[k]
  [ 6] handle_pte_fault_[k]
  [ 7] __handle_mm_fault_[k]
  [ 8] handle_mm_fault_[k]
  [ 9] do_user_addr_fault_[k]
  [10] exc_page_fault_[k]
  [11] asm_exc_page_fault_[k]
  [12] __memset_avx2_unaligned_erms
  [13] MemAllocator::allocate() const
  [14] TypeArrayKlass::allocate_common(int, bool, JavaThread*)
  [15] JVMCIRuntime::new_array_common(JavaThread*, Klass*, int, bool)
  [16] fs2.Chunk.toArray
  [17] com.scalamandra.ZipLib$.$anonfun$1
  [18] com.scalamandra.ZipLib$$$Lambda$325.0x0000000800df40b8.apply
  [19] scala.Option.map
  [20] com.scalamandra.ZipLib$.com$scalamandra$ZipLib$$anon$1$$_$fs2ReadAllBytes$$anonfun$1$$anonfun$1$$anonfun$2$$anonfun$1
  [21] com.scalamandra.ZipLib$$anon$1$$Lambda$322.0x0000000800dedc48.apply
  [22] cats.effect.IOFiber.succeeded
  [23] cats.effect.IOFiber.runLoop
  [24] cats.effect.IOFiber.execR
  [25] cats.effect.IOFiber.run
  [26] cats.effect.unsafe.WorkerThread.run

--- 762128864 ns (0.08%), 76 samples
  [ 0] dsl_dir_tempreserve_clear?[zfs]_[k]
  [ 1] dmu_tx_commit?[zfs]_[k]
  [ 2] zfs_write?[zfs]_[k]
  [ 3] zpl_iter_write?[zfs]_[k]
  [ 4] new_sync_write_[k]
  [ 5] vfs_write_[k]
  [ 6] ksys_write_[k]
  [ 7] __x64_sys_write_[k]
  [ 8] do_syscall_64_[k]
  [ 9] entry_SYSCALL_64_after_hwframe_[k]
  [10] write
  [11] sun.nio.ch.FileDispatcherImpl.write0
  [12] sun.nio.ch.FileDispatcherImpl.write
  [13] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [14] sun.nio.ch.IOUtil.write
  [15] sun.nio.ch.IOUtil.write
  [16] sun.nio.ch.FileChannelImpl.write
  [17] java.nio.channels.Channels.writeFullyImpl
  [18] java.nio.channels.Channels.writeFully
  [19] java.nio.channels.Channels$1.write
  [20] java.io.InputStream.transferTo
  [21] java.nio.file.Files.copy
  [22] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [23] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [24] jdk.nio.zipfs.ZipPath.newFileChannel
  [25] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [26] java.nio.channels.FileChannel.open
  [27] java.nio.channels.FileChannel.open
  [28] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [29] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25648.apply
  [30] cats.effect.IOFiber.$anonfun$8
  [31] cats.effect.IOFiber$$Lambda$279.0x0000000800ddde88.apply
  [32] cats.effect.unsafe.WorkerThread.blockOn
  [33] scala.concurrent.package$.blocking
  [34] cats.effect.IOFiber.runLoop
  [35] cats.effect.IOFiber.execR
  [36] cats.effect.IOFiber.run
  [37] cats.effect.unsafe.WorkerThread.run

--- 761824116 ns (0.08%), 76 samples
  [ 0] jbyte_disjoint_arraycopy
  [ 1] jdk.internal.misc.Unsafe.copyMemory0
  [ 2] jdk.internal.misc.Unsafe.copyMemory
  [ 3] jdk.internal.misc.ScopedMemoryAccess.copyMemoryInternal
  [ 4] jdk.internal.misc.ScopedMemoryAccess.copyMemory
  [ 5] java.nio.ByteBuffer.putBuffer
  [ 6] java.nio.ByteBuffer.put
  [ 7] sun.nio.ch.IOUtil.write
  [ 8] sun.nio.ch.IOUtil.write
  [ 9] sun.nio.ch.FileChannelImpl.write
  [10] java.nio.channels.Channels.writeFullyImpl
  [11] java.nio.channels.Channels.writeFully
  [12] java.nio.channels.Channels$1.write
  [13] java.io.InputStream.transferTo
  [14] java.nio.file.Files.copy
  [15] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [16] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [17] jdk.nio.zipfs.ZipPath.newFileChannel
  [18] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [19] java.nio.channels.FileChannel.open
  [20] java.nio.channels.FileChannel.open
  [21] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [22] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25648.apply
  [23] cats.effect.IOFiber.$anonfun$8
  [24] cats.effect.IOFiber$$Lambda$279.0x0000000800ddde88.apply
  [25] cats.effect.unsafe.WorkerThread.blockOn
  [26] scala.concurrent.package$.blocking
  [27] cats.effect.IOFiber.runLoop
  [28] cats.effect.IOFiber.execR
  [29] cats.effect.IOFiber.run
  [30] cats.effect.unsafe.WorkerThread.run

--- 750898871 ns (0.08%), 75 samples
  [ 0] /usr/lib/x86_64-linux-gnu/libz.so.1.2.11
  [ 1] java.util.zip.Inflater.inflateBytesBytes
  [ 2] java.util.zip.Inflater.inflate
  [ 3] java.util.zip.InflaterInputStream.read
  [ 4] java.io.InputStream.transferTo
  [ 5] java.nio.file.Files.copy
  [ 6] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [ 7] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [ 8] jdk.nio.zipfs.ZipPath.newFileChannel
  [ 9] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [10] java.nio.channels.FileChannel.open
  [11] java.nio.channels.FileChannel.open
  [12] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [13] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25648.apply
  [14] cats.effect.IOFiber.$anonfun$8
  [15] cats.effect.IOFiber$$Lambda$279.0x0000000800ddde88.apply
  [16] cats.effect.unsafe.WorkerThread.blockOn
  [17] scala.concurrent.package$.blocking
  [18] cats.effect.IOFiber.runLoop
  [19] cats.effect.IOFiber.execR
  [20] cats.effect.IOFiber.run
  [21] cats.effect.unsafe.WorkerThread.run

--- 743014703 ns (0.07%), 74 samples
  [ 0] rmqueue_pcplist.constprop.0_[k]
  [ 1] rmqueue_[k]
  [ 2] get_page_from_freelist_[k]
  [ 3] __alloc_pages_[k]
  [ 4] __folio_alloc_[k]
  [ 5] vma_alloc_folio_[k]
  [ 6] do_anonymous_page_[k]
  [ 7] handle_pte_fault_[k]
  [ 8] __handle_mm_fault_[k]
  [ 9] handle_mm_fault_[k]
  [10] do_user_addr_fault_[k]
  [11] exc_page_fault_[k]
  [12] asm_exc_page_fault_[k]
  [13] __memset_avx2_unaligned_erms
  [14] MemAllocator::allocate() const
  [15] TypeArrayKlass::allocate_common(int, bool, JavaThread*)
  [16] JVMCIRuntime::new_array_common(JavaThread*, Klass*, int, bool)
  [17] fs2.io.file.FileHandleCompanionPlatform$$anon$1.read$$anonfun$1
  [18] fs2.io.file.FileHandleCompanionPlatform$$anon$1$$Lambda$320.0x0000000800ded1e8.apply
  [19] cats.effect.IOFiber.$anonfun$8
  [20] cats.effect.IOFiber$$Lambda$279.0x0000000800ddde88.apply
  [21] cats.effect.unsafe.WorkerThread.blockOn
  [22] scala.concurrent.package$.blocking
  [23] cats.effect.IOFiber.runLoop
  [24] cats.effect.IOFiber.execR
  [25] cats.effect.IOFiber.run
  [26] cats.effect.unsafe.WorkerThread.run

--- 732543688 ns (0.07%), 73 samples
  [ 0] __handle_mm_fault_[k]
  [ 1] handle_mm_fault_[k]
  [ 2] do_user_addr_fault_[k]
  [ 3] exc_page_fault_[k]
  [ 4] asm_exc_page_fault_[k]
  [ 5] __memset_avx2_unaligned_erms
  [ 6] MemAllocator::allocate() const
  [ 7] TypeArrayKlass::allocate_common(int, bool, JavaThread*)
  [ 8] JVMCIRuntime::new_array_common(JavaThread*, Klass*, int, bool)
  [ 9] fs2.io.file.FileHandleCompanionPlatform$$anon$1.read$$anonfun$1
  [10] fs2.io.file.FileHandleCompanionPlatform$$anon$1$$Lambda$320.0x0000000800ded1e8.apply
  [11] cats.effect.IOFiber.$anonfun$8
  [12] cats.effect.IOFiber$$Lambda$279.0x0000000800ddde88.apply
  [13] cats.effect.unsafe.WorkerThread.blockOn
  [14] scala.concurrent.package$.blocking
  [15] cats.effect.IOFiber.runLoop
  [16] cats.effect.IOFiber.execR
  [17] cats.effect.IOFiber.run
  [18] cats.effect.unsafe.WorkerThread.run

--- 732298504 ns (0.07%), 73 samples
  [ 0] __kmalloc_node_[k]
  [ 1] spl_kmem_alloc_impl?[spl]_[k]
  [ 2] spl_kmem_zalloc?[spl]_[k]
  [ 3] dmu_tx_hold_dnode_impl?[zfs]_[k]
  [ 4] dmu_tx_hold_bonus_by_dnode?[zfs]_[k]
  [ 5] dmu_tx_hold_sa?[zfs]_[k]
  [ 6] zfs_write?[zfs]_[k]
  [ 7] zpl_iter_write?[zfs]_[k]
  [ 8] new_sync_write_[k]
  [ 9] vfs_write_[k]
  [10] ksys_write_[k]
  [11] __x64_sys_write_[k]
  [12] do_syscall_64_[k]
  [13] entry_SYSCALL_64_after_hwframe_[k]
  [14] write
  [15] sun.nio.ch.FileDispatcherImpl.write0
  [16] sun.nio.ch.FileDispatcherImpl.write
  [17] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.IOUtil.write
  [20] sun.nio.ch.FileChannelImpl.write
  [21] java.nio.channels.Channels.writeFullyImpl
  [22] java.nio.channels.Channels.writeFully
  [23] java.nio.channels.Channels$1.write
  [24] java.io.InputStream.transferTo
  [25] java.nio.file.Files.copy
  [26] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [27] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [28] jdk.nio.zipfs.ZipPath.newFileChannel
  [29] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [30] java.nio.channels.FileChannel.open
  [31] java.nio.channels.FileChannel.open
  [32] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [33] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25648.apply
  [34] cats.effect.IOFiber.$anonfun$8
  [35] cats.effect.IOFiber$$Lambda$279.0x0000000800ddde88.apply
  [36] cats.effect.unsafe.WorkerThread.blockOn
  [37] scala.concurrent.package$.blocking
  [38] cats.effect.IOFiber.runLoop
  [39] cats.effect.IOFiber.execR
  [40] cats.effect.IOFiber.run
  [41] cats.effect.unsafe.WorkerThread.run

--- 723096942 ns (0.07%), 72 samples
  [ 0] rmqueue_pcplist.constprop.0_[k]
  [ 1] rmqueue_[k]
  [ 2] get_page_from_freelist_[k]
  [ 3] __alloc_pages_[k]
  [ 4] __folio_alloc_[k]
  [ 5] vma_alloc_folio_[k]
  [ 6] do_anonymous_page_[k]
  [ 7] handle_pte_fault_[k]
  [ 8] __handle_mm_fault_[k]
  [ 9] handle_mm_fault_[k]
  [10] do_user_addr_fault_[k]
  [11] exc_page_fault_[k]
  [12] asm_exc_page_fault_[k]
  [13] __memset_avx2_unaligned_erms
  [14] MemAllocator::allocate() const
  [15] TypeArrayKlass::allocate_common(int, bool, JavaThread*)
  [16] JVMCIRuntime::new_array_common(JavaThread*, Klass*, int, bool)
  [17] java.nio.charset.Charset.forName
  [18] com.scalamandra.ZipLib$.com$scalamandra$ZipLib$$anon$1$$_$fs2ReadAllBytes$$anonfun$1$$anonfun$1$$anonfun$2$$anonfun$2
  [19] com.scalamandra.ZipLib$$anon$1$$Lambda$323.0x0000000800dee010.apply
  [20] cats.effect.IOFiber.succeeded
  [21] cats.effect.IOFiber.runLoop
  [22] cats.effect.IOFiber.execR
  [23] cats.effect.IOFiber.run
  [24] cats.effect.unsafe.WorkerThread.run

--- 712048048 ns (0.07%), 71 samples
  [ 0] dmu_tx_count_write?[zfs]_[k]
  [ 1] dmu_tx_hold_write_by_dnode?[zfs]_[k]
  [ 2] zfs_write?[zfs]_[k]
  [ 3] zpl_iter_write?[zfs]_[k]
  [ 4] new_sync_write_[k]
  [ 5] vfs_write_[k]
  [ 6] ksys_write_[k]
  [ 7] __x64_sys_write_[k]
  [ 8] do_syscall_64_[k]
  [ 9] entry_SYSCALL_64_after_hwframe_[k]
  [10] write
  [11] sun.nio.ch.FileDispatcherImpl.write0
  [12] sun.nio.ch.FileDispatcherImpl.write
  [13] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [14] sun.nio.ch.IOUtil.write
  [15] sun.nio.ch.IOUtil.write
  [16] sun.nio.ch.FileChannelImpl.write
  [17] java.nio.channels.Channels.writeFullyImpl
  [18] java.nio.channels.Channels.writeFully
  [19] java.nio.channels.Channels$1.write
  [20] java.io.InputStream.transferTo
  [21] java.nio.file.Files.copy
  [22] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [23] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [24] jdk.nio.zipfs.ZipPath.newFileChannel
  [25] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [26] java.nio.channels.FileChannel.open
  [27] java.nio.channels.FileChannel.open
  [28] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [29] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25648.apply
  [30] cats.effect.IOFiber.$anonfun$8
  [31] cats.effect.IOFiber$$Lambda$279.0x0000000800ddde88.apply
  [32] cats.effect.unsafe.WorkerThread.blockOn
  [33] scala.concurrent.package$.blocking
  [34] cats.effect.IOFiber.runLoop
  [35] cats.effect.IOFiber.execR
  [36] cats.effect.IOFiber.run
  [37] cats.effect.unsafe.WorkerThread.run

--- 703087422 ns (0.07%), 70 samples
  [ 0] dbuf_find?[zfs]_[k]
  [ 1] dbuf_hold_impl?[zfs]_[k]
  [ 2] dbuf_hold_level?[zfs]_[k]
  [ 3] dmu_tx_check_ioerr?[zfs]_[k]
  [ 4] dmu_tx_count_write?[zfs]_[k]
  [ 5] dmu_tx_hold_write_by_dnode?[zfs]_[k]
  [ 6] zfs_write?[zfs]_[k]
  [ 7] zpl_iter_write?[zfs]_[k]
  [ 8] new_sync_write_[k]
  [ 9] vfs_write_[k]
  [10] ksys_write_[k]
  [11] __x64_sys_write_[k]
  [12] do_syscall_64_[k]
  [13] entry_SYSCALL_64_after_hwframe_[k]
  [14] write
  [15] sun.nio.ch.FileDispatcherImpl.write0
  [16] sun.nio.ch.FileDispatcherImpl.write
  [17] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.IOUtil.write
  [20] sun.nio.ch.FileChannelImpl.write
  [21] java.nio.channels.Channels.writeFullyImpl
  [22] java.nio.channels.Channels.writeFully
  [23] java.nio.channels.Channels$1.write
  [24] java.io.InputStream.transferTo
  [25] java.nio.file.Files.copy
  [26] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [27] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [28] jdk.nio.zipfs.ZipPath.newFileChannel
  [29] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [30] java.nio.channels.FileChannel.open
  [31] java.nio.channels.FileChannel.open
  [32] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [33] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25648.apply
  [34] cats.effect.IOFiber.$anonfun$8
  [35] cats.effect.IOFiber$$Lambda$279.0x0000000800ddde88.apply
  [36] cats.effect.unsafe.WorkerThread.blockOn
  [37] scala.concurrent.package$.blocking
  [38] cats.effect.IOFiber.runLoop
  [39] cats.effect.IOFiber.execR
  [40] cats.effect.IOFiber.run
  [41] cats.effect.unsafe.WorkerThread.run

--- 702725754 ns (0.07%), 70 samples
  [ 0] zio_done?[zfs]_[k]
  [ 1] zio_wait?[zfs]_[k]
  [ 2] dmu_tx_count_write?[zfs]_[k]
  [ 3] dmu_tx_hold_write_by_dnode?[zfs]_[k]
  [ 4] zfs_write?[zfs]_[k]
  [ 5] zpl_iter_write?[zfs]_[k]
  [ 6] new_sync_write_[k]
  [ 7] vfs_write_[k]
  [ 8] ksys_write_[k]
  [ 9] __x64_sys_write_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] write
  [13] sun.nio.ch.FileDispatcherImpl.write0
  [14] sun.nio.ch.FileDispatcherImpl.write
  [15] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [16] sun.nio.ch.IOUtil.write
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.FileChannelImpl.write
  [19] java.nio.channels.Channels.writeFullyImpl
  [20] java.nio.channels.Channels.writeFully
  [21] java.nio.channels.Channels$1.write
  [22] java.io.InputStream.transferTo
  [23] java.nio.file.Files.copy
  [24] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [25] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [26] jdk.nio.zipfs.ZipPath.newFileChannel
  [27] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [28] java.nio.channels.FileChannel.open
  [29] java.nio.channels.FileChannel.open
  [30] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [31] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25648.apply
  [32] cats.effect.IOFiber.$anonfun$8
  [33] cats.effect.IOFiber$$Lambda$279.0x0000000800ddde88.apply
  [34] cats.effect.unsafe.WorkerThread.blockOn
  [35] scala.concurrent.package$.blocking
  [36] cats.effect.IOFiber.runLoop
  [37] cats.effect.IOFiber.execR
  [38] cats.effect.IOFiber.run
  [39] cats.effect.unsafe.WorkerThread.run

--- 692074233 ns (0.07%), 69 samples
  [ 0] kmem_cache_free_[k]
  [ 1] spl_kmem_cache_free?[spl]_[k]
  [ 2] zio_destroy?[zfs]_[k]
  [ 3] zio_wait?[zfs]_[k]
  [ 4] dmu_tx_count_write?[zfs]_[k]
  [ 5] dmu_tx_hold_write_by_dnode?[zfs]_[k]
  [ 6] zfs_write?[zfs]_[k]
  [ 7] zpl_iter_write?[zfs]_[k]
  [ 8] new_sync_write_[k]
  [ 9] vfs_write_[k]
  [10] ksys_write_[k]
  [11] __x64_sys_write_[k]
  [12] do_syscall_64_[k]
  [13] entry_SYSCALL_64_after_hwframe_[k]
  [14] write
  [15] sun.nio.ch.FileDispatcherImpl.write0
  [16] sun.nio.ch.FileDispatcherImpl.write
  [17] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.IOUtil.write
  [20] sun.nio.ch.FileChannelImpl.write
  [21] java.nio.channels.Channels.writeFullyImpl
  [22] java.nio.channels.Channels.writeFully
  [23] java.nio.channels.Channels$1.write
  [24] java.io.InputStream.transferTo
  [25] java.nio.file.Files.copy
  [26] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [27] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [28] jdk.nio.zipfs.ZipPath.newFileChannel
  [29] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [30] java.nio.channels.FileChannel.open
  [31] java.nio.channels.FileChannel.open
  [32] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [33] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25648.apply
  [34] cats.effect.IOFiber.$anonfun$8
  [35] cats.effect.IOFiber$$Lambda$279.0x0000000800ddde88.apply
  [36] cats.effect.unsafe.WorkerThread.blockOn
  [37] scala.concurrent.package$.blocking
  [38] cats.effect.IOFiber.runLoop
  [39] cats.effect.IOFiber.execR
  [40] cats.effect.IOFiber.run
  [41] cats.effect.unsafe.WorkerThread.run

--- 692062516 ns (0.07%), 69 samples
  [ 0] dbuf_rele_and_unlock?[zfs]_[k]
  [ 1] dbuf_rele?[zfs]_[k]
  [ 2] dmu_buf_rele_array?[zfs]_[k]
  [ 3] dmu_read_uio_dnode?[zfs]_[k]
  [ 4] dmu_read_uio_dbuf?[zfs]_[k]
  [ 5] mappedread?[zfs]_[k]
  [ 6] zfs_read?[zfs]_[k]
  [ 7] zpl_iter_read?[zfs]_[k]
  [ 8] new_sync_read_[k]
  [ 9] vfs_read_[k]
  [10] __x64_sys_pread64_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] __libc_pread64
  [14] sun.nio.ch.FileDispatcherImpl.pread0
  [15] sun.nio.ch.FileDispatcherImpl.pread
  [16] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [17] sun.nio.ch.IOUtil.read
  [18] sun.nio.ch.IOUtil.read
  [19] sun.nio.ch.FileChannelImpl.readInternal
  [20] sun.nio.ch.FileChannelImpl.read
  [21] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [22] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [23] jdk.nio.zipfs.ZipFileSystem$2.fill
  [24] java.util.zip.InflaterInputStream.read
  [25] java.io.InputStream.transferTo
  [26] java.nio.file.Files.copy
  [27] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [28] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [29] jdk.nio.zipfs.ZipPath.newFileChannel
  [30] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [31] java.nio.channels.FileChannel.open
  [32] java.nio.channels.FileChannel.open
  [33] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [34] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25648.apply
  [35] cats.effect.IOFiber.$anonfun$8
  [36] cats.effect.IOFiber$$Lambda$279.0x0000000800ddde88.apply
  [37] cats.effect.unsafe.WorkerThread.blockOn
  [38] scala.concurrent.package$.blocking
  [39] cats.effect.IOFiber.runLoop
  [40] cats.effect.IOFiber.execR
  [41] cats.effect.IOFiber.run
  [42] cats.effect.unsafe.WorkerThread.run

--- 691584618 ns (0.07%), 69 samples
  [ 0] jni_ReleasePrimitiveArrayCritical
  [ 1] Java_java_util_zip_Inflater_inflateBytesBytes
  [ 2] java.util.zip.Inflater.inflateBytesBytes
  [ 3] java.util.zip.Inflater.inflate
  [ 4] java.util.zip.InflaterInputStream.read
  [ 5] java.io.InputStream.transferTo
  [ 6] java.nio.file.Files.copy
  [ 7] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [ 8] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [ 9] jdk.nio.zipfs.ZipPath.newFileChannel
  [10] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [11] java.nio.channels.FileChannel.open
  [12] java.nio.channels.FileChannel.open
  [13] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [14] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25648.apply
  [15] cats.effect.IOFiber.$anonfun$8
  [16] cats.effect.IOFiber$$Lambda$279.0x0000000800ddde88.apply
  [17] cats.effect.unsafe.WorkerThread.blockOn
  [18] scala.concurrent.package$.blocking
  [19] cats.effect.IOFiber.runLoop
  [20] cats.effect.IOFiber.execR
  [21] cats.effect.IOFiber.run
  [22] cats.effect.unsafe.WorkerThread.run

--- 682577234 ns (0.07%), 68 samples
  [ 0] free_unref_page_list_[k]
  [ 1] release_pages_[k]
  [ 2] free_pages_and_swap_cache_[k]
  [ 3] tlb_batch_pages_flush_[k]
  [ 4] tlb_finish_mmu_[k]
  [ 5] unmap_region_[k]
  [ 6] __do_munmap_[k]
  [ 7] mmap_region_[k]
  [ 8] do_mmap_[k]
  [ 9] vm_mmap_pgoff_[k]
  [10] ksys_mmap_pgoff_[k]
  [11] __x64_sys_mmap_[k]
  [12] do_syscall_64_[k]
  [13] entry_SYSCALL_64_after_hwframe_[k]
  [14] __GI___mmap
  [15] G1PageBasedVirtualSpace::uncommit(unsigned long, unsigned long)
  [16] G1RegionsLargerThanCommitSizeMapper::uncommit_regions(unsigned int, unsigned long)
  [17] HeapRegionManager::uncommit_regions(unsigned int, unsigned int)
  [18] HeapRegionManager::uncommit_inactive_regions(unsigned int)
  [19] G1UncommitRegionTask::execute()
  [20] G1ServiceThread::run_task(G1ServiceTask*)
  [21] G1ServiceThread::run_service()
  [22] ConcurrentGCThread::run()
  [23] Thread::call_run()
  [24] thread_native_entry(Thread*)
  [25] start_thread

--- 672288365 ns (0.07%), 67 samples
  [ 0] copy_user_generic_string_[k]
  [ 1] zfs_uiomove_iter?[zfs]_[k]
  [ 2] zfs_uiomove?[zfs]_[k]
  [ 3] dmu_read_uio_dnode?[zfs]_[k]
  [ 4] dmu_read_uio_dbuf?[zfs]_[k]
  [ 5] zfs_read?[zfs]_[k]
  [ 6] zpl_iter_read?[zfs]_[k]
  [ 7] new_sync_read_[k]
  [ 8] vfs_read_[k]
  [ 9] __x64_sys_pread64_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] __libc_pread64
  [13] sun.nio.ch.FileDispatcherImpl.pread0
  [14] sun.nio.ch.FileDispatcherImpl.pread
  [15] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [16] sun.nio.ch.IOUtil.read
  [17] sun.nio.ch.IOUtil.read
  [18] sun.nio.ch.FileChannelImpl.readInternal
  [19] sun.nio.ch.FileChannelImpl.read
  [20] jdk.nio.zipfs.ZipFileSystem$1.read
  [21] fs2.io.file.FileHandleCompanionPlatform$$anon$1.read$$anonfun$1
  [22] fs2.io.file.FileHandleCompanionPlatform$$anon$1$$Lambda$320.0x0000000800ded1e8.apply
  [23] cats.effect.IOFiber.$anonfun$8
  [24] cats.effect.IOFiber$$Lambda$279.0x0000000800ddde88.apply
  [25] cats.effect.unsafe.WorkerThread.blockOn
  [26] scala.concurrent.package$.blocking
  [27] cats.effect.IOFiber.runLoop
  [28] cats.effect.IOFiber.execR
  [29] cats.effect.IOFiber.run
  [30] cats.effect.unsafe.WorkerThread.run

--- 662727583 ns (0.07%), 66 samples
  [ 0] _raw_spin_unlock_irqrestore_[k]
  [ 1] __pagevec_lru_add_[k]
  [ 2] folio_add_lru_[k]
  [ 3] lru_cache_add_[k]
  [ 4] lru_cache_add_inactive_or_unevictable_[k]
  [ 5] do_anonymous_page_[k]
  [ 6] handle_pte_fault_[k]
  [ 7] __handle_mm_fault_[k]
  [ 8] handle_mm_fault_[k]
  [ 9] do_user_addr_fault_[k]
  [10] exc_page_fault_[k]
  [11] asm_exc_page_fault_[k]
  [12] __memset_avx2_unaligned_erms
  [13] MemAllocator::allocate() const
  [14] TypeArrayKlass::allocate_common(int, bool, JavaThread*)
  [15] JVMCIRuntime::new_array_common(JavaThread*, Klass*, int, bool)
  [16] java.nio.charset.Charset.forName
  [17] com.scalamandra.ZipLib$.com$scalamandra$ZipLib$$anon$1$$_$fs2ReadAllBytes$$anonfun$1$$anonfun$1$$anonfun$2$$anonfun$2
  [18] com.scalamandra.ZipLib$$anon$1$$Lambda$323.0x0000000800dee010.apply
  [19] cats.effect.IOFiber.succeeded
  [20] cats.effect.IOFiber.runLoop
  [21] cats.effect.IOFiber.execR
  [22] cats.effect.IOFiber.run
  [23] cats.effect.unsafe.WorkerThread.run

--- 662714958 ns (0.07%), 66 samples
  [ 0] fault_in_readable_[k]
  [ 1] fault_in_iov_iter_readable_[k]
  [ 2] zfs_uio_prefaultpages?[zfs]_[k]
  [ 3] zfs_write?[zfs]_[k]
  [ 4] zpl_iter_write?[zfs]_[k]
  [ 5] new_sync_write_[k]
  [ 6] vfs_write_[k]
  [ 7] ksys_write_[k]
  [ 8] __x64_sys_write_[k]
  [ 9] do_syscall_64_[k]
  [10] entry_SYSCALL_64_after_hwframe_[k]
  [11] write
  [12] sun.nio.ch.FileDispatcherImpl.write0
  [13] sun.nio.ch.FileDispatcherImpl.write
  [14] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [15] sun.nio.ch.IOUtil.write
  [16] sun.nio.ch.IOUtil.write
  [17] sun.nio.ch.FileChannelImpl.write
  [18] java.nio.channels.Channels.writeFullyImpl
  [19] java.nio.channels.Channels.writeFully
  [20] java.nio.channels.Channels$1.write
  [21] java.io.InputStream.transferTo
  [22] java.nio.file.Files.copy
  [23] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [24] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [25] jdk.nio.zipfs.ZipPath.newFileChannel
  [26] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [27] java.nio.channels.FileChannel.open
  [28] java.nio.channels.FileChannel.open
  [29] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [30] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25648.apply
  [31] cats.effect.IOFiber.$anonfun$8
  [32] cats.effect.IOFiber$$Lambda$279.0x0000000800ddde88.apply
  [33] cats.effect.unsafe.WorkerThread.blockOn
  [34] scala.concurrent.package$.blocking
  [35] cats.effect.IOFiber.runLoop
  [36] cats.effect.IOFiber.execR
  [37] cats.effect.IOFiber.run
  [38] cats.effect.unsafe.WorkerThread.run

--- 661709880 ns (0.07%), 66 samples
  [ 0] G1RebuildRemSetTask::G1RebuildRemSetHeapRegionClosure::do_heap_region(HeapRegion*)
  [ 1] HeapRegionManager::par_iterate(HeapRegionClosure*, HeapRegionClaimer*, unsigned int) const
  [ 2] G1RebuildRemSetTask::work(unsigned int)
  [ 3] GangWorker::loop()
  [ 4] GangWorker::run()
  [ 5] Thread::call_run()
  [ 6] thread_native_entry(Thread*)
  [ 7] start_thread

--- 661606601 ns (0.07%), 66 samples
  [ 0] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 1] dmu_read_uio_dnode?[zfs]_[k]
  [ 2] dmu_read_uio_dbuf?[zfs]_[k]
  [ 3] mappedread?[zfs]_[k]
  [ 4] zfs_read?[zfs]_[k]
  [ 5] zpl_iter_read?[zfs]_[k]
  [ 6] new_sync_read_[k]
  [ 7] vfs_read_[k]
  [ 8] __x64_sys_pread64_[k]
  [ 9] do_syscall_64_[k]
  [10] entry_SYSCALL_64_after_hwframe_[k]
  [11] __libc_pread64
  [12] sun.nio.ch.FileDispatcherImpl.pread0
  [13] sun.nio.ch.FileDispatcherImpl.pread
  [14] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [15] sun.nio.ch.IOUtil.read
  [16] sun.nio.ch.IOUtil.read
  [17] sun.nio.ch.FileChannelImpl.readInternal
  [18] sun.nio.ch.FileChannelImpl.read
  [19] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [20] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [21] jdk.nio.zipfs.ZipFileSystem$2.fill
  [22] java.util.zip.InflaterInputStream.read
  [23] java.io.InputStream.transferTo
  [24] java.nio.file.Files.copy
  [25] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [26] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [27] jdk.nio.zipfs.ZipPath.newFileChannel
  [28] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [29] java.nio.channels.FileChannel.open
  [30] java.nio.channels.FileChannel.open
  [31] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [32] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25648.apply
  [33] cats.effect.IOFiber.$anonfun$8
  [34] cats.effect.IOFiber$$Lambda$279.0x0000000800ddde88.apply
  [35] cats.effect.unsafe.WorkerThread.blockOn
  [36] scala.concurrent.package$.blocking
  [37] cats.effect.IOFiber.runLoop
  [38] cats.effect.IOFiber.execR
  [39] cats.effect.IOFiber.run
  [40] cats.effect.unsafe.WorkerThread.run

--- 652186985 ns (0.07%), 65 samples
  [ 0] mutex_lock_[k]
  [ 1] dsl_dir_tempreserve_clear?[zfs]_[k]
  [ 2] dmu_tx_commit?[zfs]_[k]
  [ 3] zfs_write?[zfs]_[k]
  [ 4] zpl_iter_write?[zfs]_[k]
  [ 5] new_sync_write_[k]
  [ 6] vfs_write_[k]
  [ 7] ksys_write_[k]
  [ 8] __x64_sys_write_[k]
  [ 9] do_syscall_64_[k]
  [10] entry_SYSCALL_64_after_hwframe_[k]
  [11] write
  [12] sun.nio.ch.FileDispatcherImpl.write0
  [13] sun.nio.ch.FileDispatcherImpl.write
  [14] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [15] sun.nio.ch.IOUtil.write
  [16] sun.nio.ch.IOUtil.write
  [17] sun.nio.ch.FileChannelImpl.write
  [18] java.nio.channels.Channels.writeFullyImpl
  [19] java.nio.channels.Channels.writeFully
  [20] java.nio.channels.Channels$1.write
  [21] java.io.InputStream.transferTo
  [22] java.nio.file.Files.copy
  [23] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [24] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [25] jdk.nio.zipfs.ZipPath.newFileChannel
  [26] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [27] java.nio.channels.FileChannel.open
  [28] java.nio.channels.FileChannel.open
  [29] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [30] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25648.apply
  [31] cats.effect.IOFiber.$anonfun$8
  [32] cats.effect.IOFiber$$Lambda$279.0x0000000800ddde88.apply
  [33] cats.effect.unsafe.WorkerThread.blockOn
  [34] scala.concurrent.package$.blocking
  [35] cats.effect.IOFiber.runLoop
  [36] cats.effect.IOFiber.execR
  [37] cats.effect.IOFiber.run
  [38] cats.effect.unsafe.WorkerThread.run

--- 652019842 ns (0.07%), 65 samples
  [ 0] __fsnotify_parent_[k]
  [ 1] vfs_write_[k]
  [ 2] ksys_write_[k]
  [ 3] __x64_sys_write_[k]
  [ 4] do_syscall_64_[k]
  [ 5] entry_SYSCALL_64_after_hwframe_[k]
  [ 6] write
  [ 7] sun.nio.ch.FileDispatcherImpl.write0
  [ 8] sun.nio.ch.FileDispatcherImpl.write
  [ 9] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [10] sun.nio.ch.IOUtil.write
  [11] sun.nio.ch.IOUtil.write
  [12] sun.nio.ch.FileChannelImpl.write
  [13] java.nio.channels.Channels.writeFullyImpl
  [14] java.nio.channels.Channels.writeFully
  [15] java.nio.channels.Channels$1.write
  [16] java.io.InputStream.transferTo
  [17] java.nio.file.Files.copy
  [18] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [19] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [20] jdk.nio.zipfs.ZipPath.newFileChannel
  [21] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [22] java.nio.channels.FileChannel.open
  [23] java.nio.channels.FileChannel.open
  [24] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [25] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25648.apply
  [26] cats.effect.IOFiber.$anonfun$8
  [27] cats.effect.IOFiber$$Lambda$279.0x0000000800ddde88.apply
  [28] cats.effect.unsafe.WorkerThread.blockOn
  [29] scala.concurrent.package$.blocking
  [30] cats.effect.IOFiber.runLoop
  [31] cats.effect.IOFiber.execR
  [32] cats.effect.IOFiber.run
  [33] cats.effect.unsafe.WorkerThread.run

--- 642130321 ns (0.06%), 64 samples
  [ 0] _raw_spin_lock_[k]
  [ 1] inotify_handle_inode_event_[k]
  [ 2] fsnotify_handle_inode_event.isra.0_[k]
  [ 3] send_to_group_[k]
  [ 4] fsnotify_[k]
  [ 5] __fsnotify_parent_[k]
  [ 6] vfs_write_[k]
  [ 7] ksys_write_[k]
  [ 8] __x64_sys_write_[k]
  [ 9] do_syscall_64_[k]
  [10] entry_SYSCALL_64_after_hwframe_[k]
  [11] write
  [12] sun.nio.ch.FileDispatcherImpl.write0
  [13] sun.nio.ch.FileDispatcherImpl.write
  [14] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [15] sun.nio.ch.IOUtil.write
  [16] sun.nio.ch.IOUtil.write
  [17] sun.nio.ch.FileChannelImpl.write
  [18] java.nio.channels.Channels.writeFullyImpl
  [19] java.nio.channels.Channels.writeFully
  [20] java.nio.channels.Channels$1.write
  [21] java.io.InputStream.transferTo
  [22] java.nio.file.Files.copy
  [23] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [24] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [25] jdk.nio.zipfs.ZipPath.newFileChannel
  [26] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [27] java.nio.channels.FileChannel.open
  [28] java.nio.channels.FileChannel.open
  [29] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [30] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25648.apply
  [31] cats.effect.IOFiber.$anonfun$8
  [32] cats.effect.IOFiber$$Lambda$279.0x0000000800ddde88.apply
  [33] cats.effect.unsafe.WorkerThread.blockOn
  [34] scala.concurrent.package$.blocking
  [35] cats.effect.IOFiber.runLoop
  [36] cats.effect.IOFiber.execR
  [37] cats.effect.IOFiber.run
  [38] cats.effect.unsafe.WorkerThread.run

--- 641505152 ns (0.06%), 64 samples
  [ 0] void OopOopIterateDispatch<G1CMOopClosure>::Table::oop_oop_iterate<InstanceKlass, narrowOop>(G1CMOopClosure*, oopDesc*, Klass*)
  [ 1] void G1CMTask::process_grey_task_entry<true>(G1TaskQueueEntry)
  [ 2] G1CMTask::drain_local_queue(bool) [clone .part.0] [clone .constprop.1]
  [ 3] G1CMTask::do_marking_step(double, bool, bool)
  [ 4] G1CMConcurrentMarkingTask::work(unsigned int)
  [ 5] GangWorker::loop()
  [ 6] GangWorker::run()
  [ 7] Thread::call_run()
  [ 8] thread_native_entry(Thread*)
  [ 9] start_thread

--- 632789069 ns (0.06%), 63 samples
  [ 0] Java_java_util_zip_Inflater_inflateBytesBytes
  [ 1] java.util.zip.Inflater.inflateBytesBytes
  [ 2] java.util.zip.Inflater.inflate
  [ 3] java.util.zip.InflaterInputStream.read
  [ 4] java.io.InputStream.transferTo
  [ 5] java.nio.file.Files.copy
  [ 6] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [ 7] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [ 8] jdk.nio.zipfs.ZipPath.newFileChannel
  [ 9] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [10] java.nio.channels.FileChannel.open
  [11] java.nio.channels.FileChannel.open
  [12] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [13] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25648.apply
  [14] cats.effect.IOFiber.$anonfun$8
  [15] cats.effect.IOFiber$$Lambda$279.0x0000000800ddde88.apply
  [16] cats.effect.unsafe.WorkerThread.blockOn
  [17] scala.concurrent.package$.blocking
  [18] cats.effect.IOFiber.runLoop
  [19] cats.effect.IOFiber.execR
  [20] cats.effect.IOFiber.run
  [21] cats.effect.unsafe.WorkerThread.run

--- 632142053 ns (0.06%), 63 samples
  [ 0] kfree_[k]
  [ 1] spl_kmem_free_impl?[spl]_[k]
  [ 2] spl_kmem_free?[spl]_[k]
  [ 3] zfs_rangelock_free?[zfs]_[k]
  [ 4] zfs_rangelock_exit?[zfs]_[k]
  [ 5] zfs_write?[zfs]_[k]
  [ 6] zpl_iter_write?[zfs]_[k]
  [ 7] new_sync_write_[k]
  [ 8] vfs_write_[k]
  [ 9] ksys_write_[k]
  [10] __x64_sys_write_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] write
  [14] sun.nio.ch.FileDispatcherImpl.write0
  [15] sun.nio.ch.FileDispatcherImpl.write
  [16] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.FileChannelImpl.write
  [20] java.nio.channels.Channels.writeFullyImpl
  [21] java.nio.channels.Channels.writeFully
  [22] java.nio.channels.Channels$1.write
  [23] java.io.InputStream.transferTo
  [24] java.nio.file.Files.copy
  [25] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [26] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [27] jdk.nio.zipfs.ZipPath.newFileChannel
  [28] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [29] java.nio.channels.FileChannel.open
  [30] java.nio.channels.FileChannel.open
  [31] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [32] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25648.apply
  [33] cats.effect.IOFiber.$anonfun$8
  [34] cats.effect.IOFiber$$Lambda$279.0x0000000800ddde88.apply
  [35] cats.effect.unsafe.WorkerThread.blockOn
  [36] scala.concurrent.package$.blocking
  [37] cats.effect.IOFiber.runLoop
  [38] cats.effect.IOFiber.execR
  [39] cats.effect.IOFiber.run
  [40] cats.effect.unsafe.WorkerThread.run

--- 621593311 ns (0.06%), 62 samples
  [ 0] void OopOopIterateDispatch<G1RebuildRemSetClosure>::Table::oop_oop_iterate<InstanceKlass, narrowOop>(G1RebuildRemSetClosure*, oopDesc*, Klass*)
  [ 1] G1RebuildRemSetTask::G1RebuildRemSetHeapRegionClosure::do_heap_region(HeapRegion*)
  [ 2] HeapRegionManager::par_iterate(HeapRegionClosure*, HeapRegionClaimer*, unsigned int) const
  [ 3] G1RebuildRemSetTask::work(unsigned int)
  [ 4] GangWorker::loop()
  [ 5] GangWorker::run()
  [ 6] Thread::call_run()
  [ 7] thread_native_entry(Thread*)
  [ 8] start_thread

--- 621456455 ns (0.06%), 62 samples
  [ 0] consume_obj_stock_[k]
  [ 1] obj_cgroup_charge_[k]
  [ 2] __kmalloc_[k]
  [ 3] inotify_handle_inode_event_[k]
  [ 4] fsnotify_handle_inode_event.isra.0_[k]
  [ 5] send_to_group_[k]
  [ 6] fsnotify_[k]
  [ 7] __fsnotify_parent_[k]
  [ 8] vfs_write_[k]
  [ 9] ksys_write_[k]
  [10] __x64_sys_write_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] write
  [14] sun.nio.ch.FileDispatcherImpl.write0
  [15] sun.nio.ch.FileDispatcherImpl.write
  [16] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.FileChannelImpl.write
  [20] java.nio.channels.Channels.writeFullyImpl
  [21] java.nio.channels.Channels.writeFully
  [22] java.nio.channels.Channels$1.write
  [23] java.io.InputStream.transferTo
  [24] java.nio.file.Files.copy
  [25] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [26] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [27] jdk.nio.zipfs.ZipPath.newFileChannel
  [28] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [29] java.nio.channels.FileChannel.open
  [30] java.nio.channels.FileChannel.open
  [31] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [32] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25648.apply
  [33] cats.effect.IOFiber.$anonfun$8
  [34] cats.effect.IOFiber$$Lambda$279.0x0000000800ddde88.apply
  [35] cats.effect.unsafe.WorkerThread.blockOn
  [36] scala.concurrent.package$.blocking
  [37] cats.effect.IOFiber.runLoop
  [38] cats.effect.IOFiber.execR
  [39] cats.effect.IOFiber.run
  [40] cats.effect.unsafe.WorkerThread.run

--- 611991768 ns (0.06%), 61 samples
  [ 0] __handle_mm_fault_[k]
  [ 1] handle_mm_fault_[k]
  [ 2] do_user_addr_fault_[k]
  [ 3] exc_page_fault_[k]
  [ 4] asm_exc_page_fault_[k]
  [ 5] __memset_avx2_unaligned_erms
  [ 6] MemAllocator::allocate() const
  [ 7] TypeArrayKlass::allocate_common(int, bool, JavaThread*)
  [ 8] JVMCIRuntime::new_array_common(JavaThread*, Klass*, int, bool)
  [ 9] java.nio.charset.Charset.forName
  [10] com.scalamandra.ZipLib$.com$scalamandra$ZipLib$$anon$1$$_$fs2ReadAllBytes$$anonfun$1$$anonfun$1$$anonfun$2$$anonfun$2
  [11] com.scalamandra.ZipLib$$anon$1$$Lambda$323.0x0000000800dee010.apply
  [12] cats.effect.IOFiber.succeeded
  [13] cats.effect.IOFiber.runLoop
  [14] cats.effect.IOFiber.execR
  [15] cats.effect.IOFiber.run
  [16] cats.effect.unsafe.WorkerThread.run

--- 611851305 ns (0.06%), 61 samples
  [ 0] memset_[k]
  [ 1] spl_kmem_cache_alloc?[spl]_[k]
  [ 2] zio_create?[zfs]_[k]
  [ 3] zio_null?[zfs]_[k]
  [ 4] zio_root?[zfs]_[k]
  [ 5] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 6] dmu_read_uio_dnode?[zfs]_[k]
  [ 7] dmu_read_uio_dbuf?[zfs]_[k]
  [ 8] mappedread?[zfs]_[k]
  [ 9] zfs_read?[zfs]_[k]
  [10] zpl_iter_read?[zfs]_[k]
  [11] new_sync_read_[k]
  [12] vfs_read_[k]
  [13] __x64_sys_pread64_[k]
  [14] do_syscall_64_[k]
  [15] entry_SYSCALL_64_after_hwframe_[k]
  [16] __libc_pread64
  [17] sun.nio.ch.FileDispatcherImpl.pread0
  [18] sun.nio.ch.FileDispatcherImpl.pread
  [19] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [20] sun.nio.ch.IOUtil.read
  [21] sun.nio.ch.IOUtil.read
  [22] sun.nio.ch.FileChannelImpl.readInternal
  [23] sun.nio.ch.FileChannelImpl.read
  [24] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [25] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [26] jdk.nio.zipfs.ZipFileSystem$2.fill
  [27] java.util.zip.InflaterInputStream.read
  [28] java.io.InputStream.transferTo
  [29] java.nio.file.Files.copy
  [30] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [31] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [32] jdk.nio.zipfs.ZipPath.newFileChannel
  [33] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [34] java.nio.channels.FileChannel.open
  [35] java.nio.channels.FileChannel.open
  [36] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [37] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25648.apply
  [38] cats.effect.IOFiber.$anonfun$8
  [39] cats.effect.IOFiber$$Lambda$279.0x0000000800ddde88.apply
  [40] cats.effect.unsafe.WorkerThread.blockOn
  [41] scala.concurrent.package$.blocking
  [42] cats.effect.IOFiber.runLoop
  [43] cats.effect.IOFiber.execR
  [44] cats.effect.IOFiber.run
  [45] cats.effect.unsafe.WorkerThread.run

--- 611602257 ns (0.06%), 61 samples
  [ 0] void OopOopIterateDispatch<G1CMOopClosure>::Table::oop_oop_iterate<ObjArrayKlass, narrowOop>(G1CMOopClosure*, oopDesc*, Klass*)
  [ 1] void G1CMTask::process_grey_task_entry<true>(G1TaskQueueEntry)
  [ 2] G1CMTask::do_marking_step(double, bool, bool)
  [ 3] G1CMConcurrentMarkingTask::work(unsigned int)
  [ 4] GangWorker::loop()
  [ 5] GangWorker::run()
  [ 6] Thread::call_run()
  [ 7] thread_native_entry(Thread*)
  [ 8] start_thread

--- 583163263 ns (0.06%), 58 samples
  [ 0] __wake_up_common_lock_[k]
  [ 1] __wake_up_[k]
  [ 2] fsnotify_insert_event_[k]
  [ 3] inotify_handle_inode_event_[k]
  [ 4] fsnotify_handle_inode_event.isra.0_[k]
  [ 5] send_to_group_[k]
  [ 6] fsnotify_[k]
  [ 7] __fsnotify_parent_[k]
  [ 8] vfs_write_[k]
  [ 9] ksys_write_[k]
  [10] __x64_sys_write_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] write
  [14] sun.nio.ch.FileDispatcherImpl.write0
  [15] sun.nio.ch.FileDispatcherImpl.write
  [16] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.FileChannelImpl.write
  [20] java.nio.channels.Channels.writeFullyImpl
  [21] java.nio.channels.Channels.writeFully
  [22] java.nio.channels.Channels$1.write
  [23] java.io.InputStream.transferTo
  [24] java.nio.file.Files.copy
  [25] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [26] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [27] jdk.nio.zipfs.ZipPath.newFileChannel
  [28] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [29] java.nio.channels.FileChannel.open
  [30] java.nio.channels.FileChannel.open
  [31] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [32] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25648.apply
  [33] cats.effect.IOFiber.$anonfun$8
  [34] cats.effect.IOFiber$$Lambda$279.0x0000000800ddde88.apply
  [35] cats.effect.unsafe.WorkerThread.blockOn
  [36] scala.concurrent.package$.blocking
  [37] cats.effect.IOFiber.runLoop
  [38] cats.effect.IOFiber.execR
  [39] cats.effect.IOFiber.run
  [40] cats.effect.unsafe.WorkerThread.run

--- 582000104 ns (0.06%), 58 samples
  [ 0] avl_find?[zavl]_[k]
  [ 1] zil_itx_assign?[zfs]_[k]
  [ 2] zfs_log_write?[zfs]_[k]
  [ 3] zfs_write?[zfs]_[k]
  [ 4] zpl_iter_write?[zfs]_[k]
  [ 5] new_sync_write_[k]
  [ 6] vfs_write_[k]
  [ 7] ksys_write_[k]
  [ 8] __x64_sys_write_[k]
  [ 9] do_syscall_64_[k]
  [10] entry_SYSCALL_64_after_hwframe_[k]
  [11] write
  [12] sun.nio.ch.FileDispatcherImpl.write0
  [13] sun.nio.ch.FileDispatcherImpl.write
  [14] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [15] sun.nio.ch.IOUtil.write
  [16] sun.nio.ch.IOUtil.write
  [17] sun.nio.ch.FileChannelImpl.write
  [18] java.nio.channels.Channels.writeFullyImpl
  [19] java.nio.channels.Channels.writeFully
  [20] java.nio.channels.Channels$1.write
  [21] java.io.InputStream.transferTo
  [22] java.nio.file.Files.copy
  [23] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [24] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [25] jdk.nio.zipfs.ZipPath.newFileChannel
  [26] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [27] java.nio.channels.FileChannel.open
  [28] java.nio.channels.FileChannel.open
  [29] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [30] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25648.apply
  [31] cats.effect.IOFiber.$anonfun$8
  [32] cats.effect.IOFiber$$Lambda$279.0x0000000800ddde88.apply
  [33] cats.effect.unsafe.WorkerThread.blockOn
  [34] scala.concurrent.package$.blocking
  [35] cats.effect.IOFiber.runLoop
  [36] cats.effect.IOFiber.execR
  [37] cats.effect.IOFiber.run
  [38] cats.effect.unsafe.WorkerThread.run

--- 581449107 ns (0.06%), 58 samples
  [ 0] ___slab_alloc_[k]
  [ 1] __kmalloc_[k]
  [ 2] inotify_handle_inode_event_[k]
  [ 3] fsnotify_handle_inode_event.isra.0_[k]
  [ 4] send_to_group_[k]
  [ 5] fsnotify_[k]
  [ 6] __fsnotify_parent_[k]
  [ 7] vfs_write_[k]
  [ 8] ksys_write_[k]
  [ 9] __x64_sys_write_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] write
  [13] sun.nio.ch.FileDispatcherImpl.write0
  [14] sun.nio.ch.FileDispatcherImpl.write
  [15] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [16] sun.nio.ch.IOUtil.write
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.FileChannelImpl.write
  [19] java.nio.channels.Channels.writeFullyImpl
  [20] java.nio.channels.Channels.writeFully
  [21] java.nio.channels.Channels$1.write
  [22] java.io.InputStream.transferTo
  [23] java.nio.file.Files.copy
  [24] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [25] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [26] jdk.nio.zipfs.ZipPath.newFileChannel
  [27] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [28] java.nio.channels.FileChannel.open
  [29] java.nio.channels.FileChannel.open
  [30] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [31] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25648.apply
  [32] cats.effect.IOFiber.$anonfun$8
  [33] cats.effect.IOFiber$$Lambda$279.0x0000000800ddde88.apply
  [34] cats.effect.unsafe.WorkerThread.blockOn
  [35] scala.concurrent.package$.blocking
  [36] cats.effect.IOFiber.runLoop
  [37] cats.effect.IOFiber.execR
  [38] cats.effect.IOFiber.run
  [39] cats.effect.unsafe.WorkerThread.run

--- 572103538 ns (0.06%), 57 samples
  [ 0] CollectedHeap::supports_object_pinning() const
  [ 1] Java_java_util_zip_Inflater_inflateBytesBytes
  [ 2] java.util.zip.Inflater.inflateBytesBytes
  [ 3] java.util.zip.Inflater.inflate
  [ 4] java.util.zip.InflaterInputStream.read
  [ 5] java.io.InputStream.transferTo
  [ 6] java.nio.file.Files.copy
  [ 7] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [ 8] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [ 9] jdk.nio.zipfs.ZipPath.newFileChannel
  [10] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [11] java.nio.channels.FileChannel.open
  [12] java.nio.channels.FileChannel.open
  [13] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [14] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25648.apply
  [15] cats.effect.IOFiber.$anonfun$8
  [16] cats.effect.IOFiber$$Lambda$279.0x0000000800ddde88.apply
  [17] cats.effect.unsafe.WorkerThread.blockOn
  [18] scala.concurrent.package$.blocking
  [19] cats.effect.IOFiber.runLoop
  [20] cats.effect.IOFiber.execR
  [21] cats.effect.IOFiber.run
  [22] cats.effect.unsafe.WorkerThread.run

--- 571769299 ns (0.06%), 57 samples
  [ 0] get_obj_cgroup_from_current_[k]
  [ 1] __kmalloc_[k]
  [ 2] inotify_handle_inode_event_[k]
  [ 3] fsnotify_handle_inode_event.isra.0_[k]
  [ 4] send_to_group_[k]
  [ 5] fsnotify_[k]
  [ 6] __fsnotify_parent_[k]
  [ 7] vfs_write_[k]
  [ 8] ksys_write_[k]
  [ 9] __x64_sys_write_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] write
  [13] sun.nio.ch.FileDispatcherImpl.write0
  [14] sun.nio.ch.FileDispatcherImpl.write
  [15] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [16] sun.nio.ch.IOUtil.write
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.FileChannelImpl.write
  [19] java.nio.channels.Channels.writeFullyImpl
  [20] java.nio.channels.Channels.writeFully
  [21] java.nio.channels.Channels$1.write
  [22] java.io.InputStream.transferTo
  [23] java.nio.file.Files.copy
  [24] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [25] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [26] jdk.nio.zipfs.ZipPath.newFileChannel
  [27] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [28] java.nio.channels.FileChannel.open
  [29] java.nio.channels.FileChannel.open
  [30] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [31] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25648.apply
  [32] cats.effect.IOFiber.$anonfun$8
  [33] cats.effect.IOFiber$$Lambda$279.0x0000000800ddde88.apply
  [34] cats.effect.unsafe.WorkerThread.blockOn
  [35] scala.concurrent.package$.blocking
  [36] cats.effect.IOFiber.runLoop
  [37] cats.effect.IOFiber.execR
  [38] cats.effect.IOFiber.run
  [39] cats.effect.unsafe.WorkerThread.run

--- 561962193 ns (0.06%), 56 samples
  [ 0] mod_objcg_state_[k]
  [ 1] memcg_slab_post_alloc_hook_[k]
  [ 2] __kmalloc_[k]
  [ 3] inotify_handle_inode_event_[k]
  [ 4] fsnotify_handle_inode_event.isra.0_[k]
  [ 5] send_to_group_[k]
  [ 6] fsnotify_[k]
  [ 7] __fsnotify_parent_[k]
  [ 8] vfs_write_[k]
  [ 9] ksys_write_[k]
  [10] __x64_sys_write_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] write
  [14] sun.nio.ch.FileDispatcherImpl.write0
  [15] sun.nio.ch.FileDispatcherImpl.write
  [16] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.FileChannelImpl.write
  [20] java.nio.channels.Channels.writeFullyImpl
  [21] java.nio.channels.Channels.writeFully
  [22] java.nio.channels.Channels$1.write
  [23] java.io.InputStream.transferTo
  [24] java.nio.file.Files.copy
  [25] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [26] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [27] jdk.nio.zipfs.ZipPath.newFileChannel
  [28] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [29] java.nio.channels.FileChannel.open
  [30] java.nio.channels.FileChannel.open
  [31] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [32] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25648.apply
  [33] cats.effect.IOFiber.$anonfun$8
  [34] cats.effect.IOFiber$$Lambda$279.0x0000000800ddde88.apply
  [35] cats.effect.unsafe.WorkerThread.blockOn
  [36] scala.concurrent.package$.blocking
  [37] cats.effect.IOFiber.runLoop
  [38] cats.effect.IOFiber.execR
  [39] cats.effect.IOFiber.run
  [40] cats.effect.unsafe.WorkerThread.run

--- 561857010 ns (0.06%), 56 samples
  [ 0] zpl_iter_write?[zfs]_[k]
  [ 1] new_sync_write_[k]
  [ 2] vfs_write_[k]
  [ 3] ksys_write_[k]
  [ 4] __x64_sys_write_[k]
  [ 5] do_syscall_64_[k]
  [ 6] entry_SYSCALL_64_after_hwframe_[k]
  [ 7] write
  [ 8] sun.nio.ch.FileDispatcherImpl.write0
  [ 9] sun.nio.ch.FileDispatcherImpl.write
  [10] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [11] sun.nio.ch.IOUtil.write
  [12] sun.nio.ch.IOUtil.write
  [13] sun.nio.ch.FileChannelImpl.write
  [14] java.nio.channels.Channels.writeFullyImpl
  [15] java.nio.channels.Channels.writeFully
  [16] java.nio.channels.Channels$1.write
  [17] java.io.InputStream.transferTo
  [18] java.nio.file.Files.copy
  [19] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [20] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [21] jdk.nio.zipfs.ZipPath.newFileChannel
  [22] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [23] java.nio.channels.FileChannel.open
  [24] java.nio.channels.FileChannel.open
  [25] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [26] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25648.apply
  [27] cats.effect.IOFiber.$anonfun$8
  [28] cats.effect.IOFiber$$Lambda$279.0x0000000800ddde88.apply
  [29] cats.effect.unsafe.WorkerThread.blockOn
  [30] scala.concurrent.package$.blocking
  [31] cats.effect.IOFiber.runLoop
  [32] cats.effect.IOFiber.execR
  [33] cats.effect.IOFiber.run
  [34] cats.effect.unsafe.WorkerThread.run

--- 561700191 ns (0.06%), 56 samples
  [ 0] __rcu_read_unlock_[k]
  [ 1] __kmalloc_[k]
  [ 2] inotify_handle_inode_event_[k]
  [ 3] fsnotify_handle_inode_event.isra.0_[k]
  [ 4] send_to_group_[k]
  [ 5] fsnotify_[k]
  [ 6] __fsnotify_parent_[k]
  [ 7] vfs_write_[k]
  [ 8] ksys_write_[k]
  [ 9] __x64_sys_write_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] write
  [13] sun.nio.ch.FileDispatcherImpl.write0
  [14] sun.nio.ch.FileDispatcherImpl.write
  [15] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [16] sun.nio.ch.IOUtil.write
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.FileChannelImpl.write
  [19] java.nio.channels.Channels.writeFullyImpl
  [20] java.nio.channels.Channels.writeFully
  [21] java.nio.channels.Channels$1.write
  [22] java.io.InputStream.transferTo
  [23] java.nio.file.Files.copy
  [24] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [25] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [26] jdk.nio.zipfs.ZipPath.newFileChannel
  [27] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [28] java.nio.channels.FileChannel.open
  [29] java.nio.channels.FileChannel.open
  [30] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [31] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25648.apply
  [32] cats.effect.IOFiber.$anonfun$8
  [33] cats.effect.IOFiber$$Lambda$279.0x0000000800ddde88.apply
  [34] cats.effect.unsafe.WorkerThread.blockOn
  [35] scala.concurrent.package$.blocking
  [36] cats.effect.IOFiber.runLoop
  [37] cats.effect.IOFiber.execR
  [38] cats.effect.IOFiber.run
  [39] cats.effect.unsafe.WorkerThread.run

--- 561663947 ns (0.06%), 56 samples
  [ 0] dmu_zfetch_prepare?[zfs]_[k]
  [ 1] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 2] dmu_read_uio_dnode?[zfs]_[k]
  [ 3] dmu_read_uio_dbuf?[zfs]_[k]
  [ 4] mappedread?[zfs]_[k]
  [ 5] zfs_read?[zfs]_[k]
  [ 6] zpl_iter_read?[zfs]_[k]
  [ 7] new_sync_read_[k]
  [ 8] vfs_read_[k]
  [ 9] __x64_sys_pread64_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] __libc_pread64
  [13] sun.nio.ch.FileDispatcherImpl.pread0
  [14] sun.nio.ch.FileDispatcherImpl.pread
  [15] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [16] sun.nio.ch.IOUtil.read
  [17] sun.nio.ch.IOUtil.read
  [18] sun.nio.ch.FileChannelImpl.readInternal
  [19] sun.nio.ch.FileChannelImpl.read
  [20] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [21] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [22] jdk.nio.zipfs.ZipFileSystem$2.fill
  [23] java.util.zip.InflaterInputStream.read
  [24] java.io.InputStream.transferTo
  [25] java.nio.file.Files.copy
  [26] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [27] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [28] jdk.nio.zipfs.ZipPath.newFileChannel
  [29] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [30] java.nio.channels.FileChannel.open
  [31] java.nio.channels.FileChannel.open
  [32] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [33] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25648.apply
  [34] cats.effect.IOFiber.$anonfun$8
  [35] cats.effect.IOFiber$$Lambda$279.0x0000000800ddde88.apply
  [36] cats.effect.unsafe.WorkerThread.blockOn
  [37] scala.concurrent.package$.blocking
  [38] cats.effect.IOFiber.runLoop
  [39] cats.effect.IOFiber.execR
  [40] cats.effect.IOFiber.run
  [41] cats.effect.unsafe.WorkerThread.run

--- 561568883 ns (0.06%), 56 samples
  [ 0] kmem_cache_alloc_[k]
  [ 1] spl_kmem_cache_alloc?[spl]_[k]
  [ 2] zio_create?[zfs]_[k]
  [ 3] zio_null?[zfs]_[k]
  [ 4] zio_root?[zfs]_[k]
  [ 5] dmu_tx_count_write?[zfs]_[k]
  [ 6] dmu_tx_hold_write_by_dnode?[zfs]_[k]
  [ 7] zfs_write?[zfs]_[k]
  [ 8] zpl_iter_write?[zfs]_[k]
  [ 9] new_sync_write_[k]
  [10] vfs_write_[k]
  [11] ksys_write_[k]
  [12] __x64_sys_write_[k]
  [13] do_syscall_64_[k]
  [14] entry_SYSCALL_64_after_hwframe_[k]
  [15] write
  [16] sun.nio.ch.FileDispatcherImpl.write0
  [17] sun.nio.ch.FileDispatcherImpl.write
  [18] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [19] sun.nio.ch.IOUtil.write
  [20] sun.nio.ch.IOUtil.write
  [21] sun.nio.ch.FileChannelImpl.write
  [22] java.nio.channels.Channels.writeFullyImpl
  [23] java.nio.channels.Channels.writeFully
  [24] java.nio.channels.Channels$1.write
  [25] java.io.InputStream.transferTo
  [26] java.nio.file.Files.copy
  [27] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [28] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [29] jdk.nio.zipfs.ZipPath.newFileChannel
  [30] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [31] java.nio.channels.FileChannel.open
  [32] java.nio.channels.FileChannel.open
  [33] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [34] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25648.apply
  [35] cats.effect.IOFiber.$anonfun$8
  [36] cats.effect.IOFiber$$Lambda$279.0x0000000800ddde88.apply
  [37] cats.effect.unsafe.WorkerThread.blockOn
  [38] scala.concurrent.package$.blocking
  [39] cats.effect.IOFiber.runLoop
  [40] cats.effect.IOFiber.execR
  [41] cats.effect.IOFiber.run
  [42] cats.effect.unsafe.WorkerThread.run

--- 552400887 ns (0.06%), 55 samples
  [ 0] dmu_tx_hold_sa?[zfs]_[k]
  [ 1] zfs_write?[zfs]_[k]
  [ 2] zpl_iter_write?[zfs]_[k]
  [ 3] new_sync_write_[k]
  [ 4] vfs_write_[k]
  [ 5] ksys_write_[k]
  [ 6] __x64_sys_write_[k]
  [ 7] do_syscall_64_[k]
  [ 8] entry_SYSCALL_64_after_hwframe_[k]
  [ 9] write
  [10] sun.nio.ch.FileDispatcherImpl.write0
  [11] sun.nio.ch.FileDispatcherImpl.write
  [12] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [13] sun.nio.ch.IOUtil.write
  [14] sun.nio.ch.IOUtil.write
  [15] sun.nio.ch.FileChannelImpl.write
  [16] java.nio.channels.Channels.writeFullyImpl
  [17] java.nio.channels.Channels.writeFully
  [18] java.nio.channels.Channels$1.write
  [19] java.io.InputStream.transferTo
  [20] java.nio.file.Files.copy
  [21] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [22] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [23] jdk.nio.zipfs.ZipPath.newFileChannel
  [24] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [25] java.nio.channels.FileChannel.open
  [26] java.nio.channels.FileChannel.open
  [27] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [28] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25648.apply
  [29] cats.effect.IOFiber.$anonfun$8
  [30] cats.effect.IOFiber$$Lambda$279.0x0000000800ddde88.apply
  [31] cats.effect.unsafe.WorkerThread.blockOn
  [32] scala.concurrent.package$.blocking
  [33] cats.effect.IOFiber.runLoop
  [34] cats.effect.IOFiber.execR
  [35] cats.effect.IOFiber.run
  [36] cats.effect.unsafe.WorkerThread.run

--- 551686624 ns (0.06%), 55 samples
  [ 0] _raw_spin_lock_[k]
  [ 1] zfs_write?[zfs]_[k]
  [ 2] zpl_iter_write?[zfs]_[k]
  [ 3] new_sync_write_[k]
  [ 4] vfs_write_[k]
  [ 5] ksys_write_[k]
  [ 6] __x64_sys_write_[k]
  [ 7] do_syscall_64_[k]
  [ 8] entry_SYSCALL_64_after_hwframe_[k]
  [ 9] write
  [10] sun.nio.ch.FileDispatcherImpl.write0
  [11] sun.nio.ch.FileDispatcherImpl.write
  [12] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [13] sun.nio.ch.IOUtil.write
  [14] sun.nio.ch.IOUtil.write
  [15] sun.nio.ch.FileChannelImpl.write
  [16] java.nio.channels.Channels.writeFullyImpl
  [17] java.nio.channels.Channels.writeFully
  [18] java.nio.channels.Channels$1.write
  [19] java.io.InputStream.transferTo
  [20] java.nio.file.Files.copy
  [21] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [22] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [23] jdk.nio.zipfs.ZipPath.newFileChannel
  [24] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [25] java.nio.channels.FileChannel.open
  [26] java.nio.channels.FileChannel.open
  [27] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [28] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25648.apply
  [29] cats.effect.IOFiber.$anonfun$8
  [30] cats.effect.IOFiber$$Lambda$279.0x0000000800ddde88.apply
  [31] cats.effect.unsafe.WorkerThread.blockOn
  [32] scala.concurrent.package$.blocking
  [33] cats.effect.IOFiber.runLoop
  [34] cats.effect.IOFiber.execR
  [35] cats.effect.IOFiber.run
  [36] cats.effect.unsafe.WorkerThread.run

--- 551619708 ns (0.06%), 55 samples
  [ 0] dbuf_read?[zfs]_[k]
  [ 1] dmu_tx_check_ioerr?[zfs]_[k]
  [ 2] dmu_tx_count_write?[zfs]_[k]
  [ 3] dmu_tx_hold_write_by_dnode?[zfs]_[k]
  [ 4] zfs_write?[zfs]_[k]
  [ 5] zpl_iter_write?[zfs]_[k]
  [ 6] new_sync_write_[k]
  [ 7] vfs_write_[k]
  [ 8] ksys_write_[k]
  [ 9] __x64_sys_write_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] write
  [13] sun.nio.ch.FileDispatcherImpl.write0
  [14] sun.nio.ch.FileDispatcherImpl.write
  [15] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [16] sun.nio.ch.IOUtil.write
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.FileChannelImpl.write
  [19] java.nio.channels.Channels.writeFullyImpl
  [20] java.nio.channels.Channels.writeFully
  [21] java.nio.channels.Channels$1.write
  [22] java.io.InputStream.transferTo
  [23] java.nio.file.Files.copy
  [24] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [25] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [26] jdk.nio.zipfs.ZipPath.newFileChannel
  [27] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [28] java.nio.channels.FileChannel.open
  [29] java.nio.channels.FileChannel.open
  [30] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [31] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25648.apply
  [32] cats.effect.IOFiber.$anonfun$8
  [33] cats.effect.IOFiber$$Lambda$279.0x0000000800ddde88.apply
  [34] cats.effect.unsafe.WorkerThread.blockOn
  [35] scala.concurrent.package$.blocking
  [36] cats.effect.IOFiber.runLoop
  [37] cats.effect.IOFiber.execR
  [38] cats.effect.IOFiber.run
  [39] cats.effect.unsafe.WorkerThread.run

--- 542500827 ns (0.05%), 54 samples
  [ 0] __kmalloc_node_[k]
  [ 1] spl_kmem_alloc_impl?[spl]_[k]
  [ 2] spl_kmem_zalloc?[spl]_[k]
  [ 3] dmu_tx_create_dd?[zfs]_[k]
  [ 4] dmu_tx_create?[zfs]_[k]
  [ 5] zfs_write?[zfs]_[k]
  [ 6] zpl_iter_write?[zfs]_[k]
  [ 7] new_sync_write_[k]
  [ 8] vfs_write_[k]
  [ 9] ksys_write_[k]
  [10] __x64_sys_write_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] write
  [14] sun.nio.ch.FileDispatcherImpl.write0
  [15] sun.nio.ch.FileDispatcherImpl.write
  [16] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.FileChannelImpl.write
  [20] java.nio.channels.Channels.writeFullyImpl
  [21] java.nio.channels.Channels.writeFully
  [22] java.nio.channels.Channels$1.write
  [23] java.io.InputStream.transferTo
  [24] java.nio.file.Files.copy
  [25] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [26] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [27] jdk.nio.zipfs.ZipPath.newFileChannel
  [28] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [29] java.nio.channels.FileChannel.open
  [30] java.nio.channels.FileChannel.open
  [31] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [32] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25648.apply
  [33] cats.effect.IOFiber.$anonfun$8
  [34] cats.effect.IOFiber$$Lambda$279.0x0000000800ddde88.apply
  [35] cats.effect.unsafe.WorkerThread.blockOn
  [36] scala.concurrent.package$.blocking
  [37] cats.effect.IOFiber.runLoop
  [38] cats.effect.IOFiber.execR
  [39] cats.effect.IOFiber.run
  [40] cats.effect.unsafe.WorkerThread.run

--- 542188937 ns (0.05%), 54 samples
  [ 0] __kmalloc_node_[k]
  [ 1] spl_kmem_alloc_impl?[spl]_[k]
  [ 2] spl_kmem_zalloc?[spl]_[k]
  [ 3] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 4] dmu_write_uio_dnode?[zfs]_[k]
  [ 5] dmu_write_uio_dbuf?[zfs]_[k]
  [ 6] zfs_write?[zfs]_[k]
  [ 7] zpl_iter_write?[zfs]_[k]
  [ 8] new_sync_write_[k]
  [ 9] vfs_write_[k]
  [10] ksys_write_[k]
  [11] __x64_sys_write_[k]
  [12] do_syscall_64_[k]
  [13] entry_SYSCALL_64_after_hwframe_[k]
  [14] write
  [15] sun.nio.ch.FileDispatcherImpl.write0
  [16] sun.nio.ch.FileDispatcherImpl.write
  [17] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.IOUtil.write
  [20] sun.nio.ch.FileChannelImpl.write
  [21] java.nio.channels.Channels.writeFullyImpl
  [22] java.nio.channels.Channels.writeFully
  [23] java.nio.channels.Channels$1.write
  [24] java.io.InputStream.transferTo
  [25] java.nio.file.Files.copy
  [26] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [27] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [28] jdk.nio.zipfs.ZipPath.newFileChannel
  [29] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [30] java.nio.channels.FileChannel.open
  [31] java.nio.channels.FileChannel.open
  [32] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [33] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25648.apply
  [34] cats.effect.IOFiber.$anonfun$8
  [35] cats.effect.IOFiber$$Lambda$279.0x0000000800ddde88.apply
  [36] cats.effect.unsafe.WorkerThread.blockOn
  [37] scala.concurrent.package$.blocking
  [38] cats.effect.IOFiber.runLoop
  [39] cats.effect.IOFiber.execR
  [40] cats.effect.IOFiber.run
  [41] cats.effect.unsafe.WorkerThread.run

--- 532628563 ns (0.05%), 53 samples
  [ 0] kfree_[k]
  [ 1] spl_kmem_free_impl?[spl]_[k]
  [ 2] spl_kmem_free?[spl]_[k]
  [ 3] dmu_buf_rele_array?[zfs]_[k]
  [ 4] dmu_write_uio_dnode?[zfs]_[k]
  [ 5] dmu_write_uio_dbuf?[zfs]_[k]
  [ 6] zfs_write?[zfs]_[k]
  [ 7] zpl_iter_write?[zfs]_[k]
  [ 8] new_sync_write_[k]
  [ 9] vfs_write_[k]
  [10] ksys_write_[k]
  [11] __x64_sys_write_[k]
  [12] do_syscall_64_[k]
  [13] entry_SYSCALL_64_after_hwframe_[k]
  [14] write
  [15] sun.nio.ch.FileDispatcherImpl.write0
  [16] sun.nio.ch.FileDispatcherImpl.write
  [17] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.IOUtil.write
  [20] sun.nio.ch.FileChannelImpl.write
  [21] java.nio.channels.Channels.writeFullyImpl
  [22] java.nio.channels.Channels.writeFully
  [23] java.nio.channels.Channels$1.write
  [24] java.io.InputStream.transferTo
  [25] java.nio.file.Files.copy
  [26] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [27] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [28] jdk.nio.zipfs.ZipPath.newFileChannel
  [29] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [30] java.nio.channels.FileChannel.open
  [31] java.nio.channels.FileChannel.open
  [32] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [33] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25648.apply
  [34] cats.effect.IOFiber.$anonfun$8
  [35] cats.effect.IOFiber$$Lambda$279.0x0000000800ddde88.apply
  [36] cats.effect.unsafe.WorkerThread.blockOn
  [37] scala.concurrent.package$.blocking
  [38] cats.effect.IOFiber.runLoop
  [39] cats.effect.IOFiber.execR
  [40] cats.effect.IOFiber.run
  [41] cats.effect.unsafe.WorkerThread.run

--- 531895684 ns (0.05%), 53 samples
  [ 0] mutex_lock_[k]
  [ 1] dsl_dir_tempreserve_impl.constprop.0?[zfs]_[k]
  [ 2] dsl_dir_tempreserve_space?[zfs]_[k]
  [ 3] dmu_tx_try_assign?[zfs]_[k]
  [ 4] dmu_tx_assign?[zfs]_[k]
  [ 5] zfs_write?[zfs]_[k]
  [ 6] zpl_iter_write?[zfs]_[k]
  [ 7] new_sync_write_[k]
  [ 8] vfs_write_[k]
  [ 9] ksys_write_[k]
  [10] __x64_sys_write_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] write
  [14] sun.nio.ch.FileDispatcherImpl.write0
  [15] sun.nio.ch.FileDispatcherImpl.write
  [16] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.FileChannelImpl.write
  [20] java.nio.channels.Channels.writeFullyImpl
  [21] java.nio.channels.Channels.writeFully
  [22] java.nio.channels.Channels$1.write
  [23] java.io.InputStream.transferTo
  [24] java.nio.file.Files.copy
  [25] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [26] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [27] jdk.nio.zipfs.ZipPath.newFileChannel
  [28] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [29] java.nio.channels.FileChannel.open
  [30] java.nio.channels.FileChannel.open
  [31] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [32] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25648.apply
  [33] cats.effect.IOFiber.$anonfun$8
  [34] cats.effect.IOFiber$$Lambda$279.0x0000000800ddde88.apply
  [35] cats.effect.unsafe.WorkerThread.blockOn
  [36] scala.concurrent.package$.blocking
  [37] cats.effect.IOFiber.runLoop
  [38] cats.effect.IOFiber.execR
  [39] cats.effect.IOFiber.run
  [40] cats.effect.unsafe.WorkerThread.run

--- 522587315 ns (0.05%), 52 samples
  [ 0] dmu_zfetch_prepare?[zfs]_[k]
  [ 1] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 2] dmu_write_uio_dnode?[zfs]_[k]
  [ 3] dmu_write_uio_dbuf?[zfs]_[k]
  [ 4] zfs_write?[zfs]_[k]
  [ 5] zpl_iter_write?[zfs]_[k]
  [ 6] new_sync_write_[k]
  [ 7] vfs_write_[k]
  [ 8] ksys_write_[k]
  [ 9] __x64_sys_write_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] write
  [13] sun.nio.ch.FileDispatcherImpl.write0
  [14] sun.nio.ch.FileDispatcherImpl.write
  [15] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [16] sun.nio.ch.IOUtil.write
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.FileChannelImpl.write
  [19] java.nio.channels.Channels.writeFullyImpl
  [20] java.nio.channels.Channels.writeFully
  [21] java.nio.channels.Channels$1.write
  [22] java.io.InputStream.transferTo
  [23] java.nio.file.Files.copy
  [24] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [25] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [26] jdk.nio.zipfs.ZipPath.newFileChannel
  [27] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [28] java.nio.channels.FileChannel.open
  [29] java.nio.channels.FileChannel.open
  [30] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [31] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25648.apply
  [32] cats.effect.IOFiber.$anonfun$8
  [33] cats.effect.IOFiber$$Lambda$279.0x0000000800ddde88.apply
  [34] cats.effect.unsafe.WorkerThread.blockOn
  [35] scala.concurrent.package$.blocking
  [36] cats.effect.IOFiber.runLoop
  [37] cats.effect.IOFiber.execR
  [38] cats.effect.IOFiber.run
  [39] cats.effect.unsafe.WorkerThread.run

--- 522059976 ns (0.05%), 52 samples
  [ 0] zio_wait?[zfs]_[k]
  [ 1] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 2] dmu_read_uio_dnode?[zfs]_[k]
  [ 3] dmu_read_uio_dbuf?[zfs]_[k]
  [ 4] mappedread?[zfs]_[k]
  [ 5] zfs_read?[zfs]_[k]
  [ 6] zpl_iter_read?[zfs]_[k]
  [ 7] new_sync_read_[k]
  [ 8] vfs_read_[k]
  [ 9] __x64_sys_pread64_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] __libc_pread64
  [13] sun.nio.ch.FileDispatcherImpl.pread0
  [14] sun.nio.ch.FileDispatcherImpl.pread
  [15] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [16] sun.nio.ch.IOUtil.read
  [17] sun.nio.ch.IOUtil.read
  [18] sun.nio.ch.FileChannelImpl.readInternal
  [19] sun.nio.ch.FileChannelImpl.read
  [20] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [21] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [22] jdk.nio.zipfs.ZipFileSystem$2.fill
  [23] java.util.zip.InflaterInputStream.read
  [24] java.io.InputStream.transferTo
  [25] java.nio.file.Files.copy
  [26] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [27] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [28] jdk.nio.zipfs.ZipPath.newFileChannel
  [29] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [30] java.nio.channels.FileChannel.open
  [31] java.nio.channels.FileChannel.open
  [32] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [33] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25648.apply
  [34] cats.effect.IOFiber.$anonfun$8
  [35] cats.effect.IOFiber$$Lambda$279.0x0000000800ddde88.apply
  [36] cats.effect.unsafe.WorkerThread.blockOn
  [37] scala.concurrent.package$.blocking
  [38] cats.effect.IOFiber.runLoop
  [39] cats.effect.IOFiber.execR
  [40] cats.effect.IOFiber.run
  [41] cats.effect.unsafe.WorkerThread.run

--- 512025131 ns (0.05%), 51 samples
  [ 0] apparmor_file_permission_[k]
  [ 1] security_file_permission_[k]
  [ 2] rw_verify_area_[k]
  [ 3] vfs_write_[k]
  [ 4] ksys_write_[k]
  [ 5] __x64_sys_write_[k]
  [ 6] do_syscall_64_[k]
  [ 7] entry_SYSCALL_64_after_hwframe_[k]
  [ 8] write
  [ 9] sun.nio.ch.FileDispatcherImpl.write0
  [10] sun.nio.ch.FileDispatcherImpl.write
  [11] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [12] sun.nio.ch.IOUtil.write
  [13] sun.nio.ch.IOUtil.write
  [14] sun.nio.ch.FileChannelImpl.write
  [15] java.nio.channels.Channels.writeFullyImpl
  [16] java.nio.channels.Channels.writeFully
  [17] java.nio.channels.Channels$1.write
  [18] java.io.InputStream.transferTo
  [19] java.nio.file.Files.copy
  [20] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [21] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [22] jdk.nio.zipfs.ZipPath.newFileChannel
  [23] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [24] java.nio.channels.FileChannel.open
  [25] java.nio.channels.FileChannel.open
  [26] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [27] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25648.apply
  [28] cats.effect.IOFiber.$anonfun$8
  [29] cats.effect.IOFiber$$Lambda$279.0x0000000800ddde88.apply
  [30] cats.effect.unsafe.WorkerThread.blockOn
  [31] scala.concurrent.package$.blocking
  [32] cats.effect.IOFiber.runLoop
  [33] cats.effect.IOFiber.execR
  [34] cats.effect.IOFiber.run
  [35] cats.effect.unsafe.WorkerThread.run

--- 511896416 ns (0.05%), 51 samples
  [ 0] ___slab_alloc_[k]
  [ 1] kmem_cache_alloc_[k]
  [ 2] spl_kmem_cache_alloc?[spl]_[k]
  [ 3] zio_data_buf_alloc?[zfs]_[k]
  [ 4] zil_itx_create?[zfs]_[k]
  [ 5] zfs_log_write?[zfs]_[k]
  [ 6] zfs_write?[zfs]_[k]
  [ 7] zpl_iter_write?[zfs]_[k]
  [ 8] new_sync_write_[k]
  [ 9] vfs_write_[k]
  [10] ksys_write_[k]
  [11] __x64_sys_write_[k]
  [12] do_syscall_64_[k]
  [13] entry_SYSCALL_64_after_hwframe_[k]
  [14] write
  [15] sun.nio.ch.FileDispatcherImpl.write0
  [16] sun.nio.ch.FileDispatcherImpl.write
  [17] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.IOUtil.write
  [20] sun.nio.ch.FileChannelImpl.write
  [21] java.nio.channels.Channels.writeFullyImpl
  [22] java.nio.channels.Channels.writeFully
  [23] java.nio.channels.Channels$1.write
  [24] java.io.InputStream.transferTo
  [25] java.nio.file.Files.copy
  [26] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [27] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [28] jdk.nio.zipfs.ZipPath.newFileChannel
  [29] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [30] java.nio.channels.FileChannel.open
  [31] java.nio.channels.FileChannel.open
  [32] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [33] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25648.apply
  [34] cats.effect.IOFiber.$anonfun$8
  [35] cats.effect.IOFiber$$Lambda$279.0x0000000800ddde88.apply
  [36] cats.effect.unsafe.WorkerThread.blockOn
  [37] scala.concurrent.package$.blocking
  [38] cats.effect.IOFiber.runLoop
  [39] cats.effect.IOFiber.execR
  [40] cats.effect.IOFiber.run
  [41] cats.effect.unsafe.WorkerThread.run

--- 511615821 ns (0.05%), 51 samples
  [ 0] mutex_unlock_[k]
  [ 1] dmu_tx_commit?[zfs]_[k]
  [ 2] zfs_write?[zfs]_[k]
  [ 3] zpl_iter_write?[zfs]_[k]
  [ 4] new_sync_write_[k]
  [ 5] vfs_write_[k]
  [ 6] ksys_write_[k]
  [ 7] __x64_sys_write_[k]
  [ 8] do_syscall_64_[k]
  [ 9] entry_SYSCALL_64_after_hwframe_[k]
  [10] write
  [11] sun.nio.ch.FileDispatcherImpl.write0
  [12] sun.nio.ch.FileDispatcherImpl.write
  [13] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [14] sun.nio.ch.IOUtil.write
  [15] sun.nio.ch.IOUtil.write
  [16] sun.nio.ch.FileChannelImpl.write
  [17] java.nio.channels.Channels.writeFullyImpl
  [18] java.nio.channels.Channels.writeFully
  [19] java.nio.channels.Channels$1.write
  [20] java.io.InputStream.transferTo
  [21] java.nio.file.Files.copy
  [22] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [23] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [24] jdk.nio.zipfs.ZipPath.newFileChannel
  [25] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [26] java.nio.channels.FileChannel.open
  [27] java.nio.channels.FileChannel.open
  [28] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [29] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25648.apply
  [30] cats.effect.IOFiber.$anonfun$8
  [31] cats.effect.IOFiber$$Lambda$279.0x0000000800ddde88.apply
  [32] cats.effect.unsafe.WorkerThread.blockOn
  [33] scala.concurrent.package$.blocking
  [34] cats.effect.IOFiber.runLoop
  [35] cats.effect.IOFiber.execR
  [36] cats.effect.IOFiber.run
  [37] cats.effect.unsafe.WorkerThread.run

--- 502241784 ns (0.05%), 50 samples
  [ 0] java.util.zip.Inflater.inflateBytesBytes
  [ 1] java.util.zip.Inflater.inflate
  [ 2] java.util.zip.InflaterInputStream.read
  [ 3] java.io.InputStream.transferTo
  [ 4] java.nio.file.Files.copy
  [ 5] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [ 6] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [ 7] jdk.nio.zipfs.ZipPath.newFileChannel
  [ 8] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [ 9] java.nio.channels.FileChannel.open
  [10] java.nio.channels.FileChannel.open
  [11] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [12] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25648.apply
  [13] cats.effect.IOFiber.$anonfun$8
  [14] cats.effect.IOFiber$$Lambda$279.0x0000000800ddde88.apply
  [15] cats.effect.unsafe.WorkerThread.blockOn
  [16] scala.concurrent.package$.blocking
  [17] cats.effect.IOFiber.runLoop
  [18] cats.effect.IOFiber.execR
  [19] cats.effect.IOFiber.run
  [20] cats.effect.unsafe.WorkerThread.run

--- 501373464 ns (0.05%), 50 samples
  [ 0] inotify_handle_inode_event_[k]
  [ 1] send_to_group_[k]
  [ 2] fsnotify_[k]
  [ 3] __fsnotify_parent_[k]
  [ 4] vfs_write_[k]
  [ 5] ksys_write_[k]
  [ 6] __x64_sys_write_[k]
  [ 7] do_syscall_64_[k]
  [ 8] entry_SYSCALL_64_after_hwframe_[k]
  [ 9] write
  [10] sun.nio.ch.FileDispatcherImpl.write0
  [11] sun.nio.ch.FileDispatcherImpl.write
  [12] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [13] sun.nio.ch.IOUtil.write
  [14] sun.nio.ch.IOUtil.write
  [15] sun.nio.ch.FileChannelImpl.write
  [16] java.nio.channels.Channels.writeFullyImpl
  [17] java.nio.channels.Channels.writeFully
  [18] java.nio.channels.Channels$1.write
  [19] java.io.InputStream.transferTo
  [20] java.nio.file.Files.copy
  [21] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [22] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [23] jdk.nio.zipfs.ZipPath.newFileChannel
  [24] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [25] java.nio.channels.FileChannel.open
  [26] java.nio.channels.FileChannel.open
  [27] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [28] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25648.apply
  [29] cats.effect.IOFiber.$anonfun$8
  [30] cats.effect.IOFiber$$Lambda$279.0x0000000800ddde88.apply
  [31] cats.effect.unsafe.WorkerThread.blockOn
  [32] scala.concurrent.package$.blocking
  [33] cats.effect.IOFiber.runLoop
  [34] cats.effect.IOFiber.execR
  [35] cats.effect.IOFiber.run
  [36] cats.effect.unsafe.WorkerThread.run

--- 491924559 ns (0.05%), 49 samples
  [ 0] zio_done?[zfs]_[k]
  [ 1] zio_wait?[zfs]_[k]
  [ 2] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 3] dmu_read_uio_dnode?[zfs]_[k]
  [ 4] dmu_read_uio_dbuf?[zfs]_[k]
  [ 5] mappedread?[zfs]_[k]
  [ 6] zfs_read?[zfs]_[k]
  [ 7] zpl_iter_read?[zfs]_[k]
  [ 8] new_sync_read_[k]
  [ 9] vfs_read_[k]
  [10] __x64_sys_pread64_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] __libc_pread64
  [14] sun.nio.ch.FileDispatcherImpl.pread0
  [15] sun.nio.ch.FileDispatcherImpl.pread
  [16] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [17] sun.nio.ch.IOUtil.read
  [18] sun.nio.ch.IOUtil.read
  [19] sun.nio.ch.FileChannelImpl.readInternal
  [20] sun.nio.ch.FileChannelImpl.read
  [21] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [22] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [23] jdk.nio.zipfs.ZipFileSystem$2.fill
  [24] java.util.zip.InflaterInputStream.read
  [25] java.io.InputStream.transferTo
  [26] java.nio.file.Files.copy
  [27] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [28] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [29] jdk.nio.zipfs.ZipPath.newFileChannel
  [30] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [31] java.nio.channels.FileChannel.open
  [32] java.nio.channels.FileChannel.open
  [33] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [34] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25648.apply
  [35] cats.effect.IOFiber.$anonfun$8
  [36] cats.effect.IOFiber$$Lambda$279.0x0000000800ddde88.apply
  [37] cats.effect.unsafe.WorkerThread.blockOn
  [38] scala.concurrent.package$.blocking
  [39] cats.effect.IOFiber.runLoop
  [40] cats.effect.IOFiber.execR
  [41] cats.effect.IOFiber.run
  [42] cats.effect.unsafe.WorkerThread.run

--- 491750089 ns (0.05%), 49 samples
  [ 0] fsnotify_handle_inode_event.isra.0_[k]
  [ 1] fsnotify_[k]
  [ 2] __fsnotify_parent_[k]
  [ 3] vfs_write_[k]
  [ 4] ksys_write_[k]
  [ 5] __x64_sys_write_[k]
  [ 6] do_syscall_64_[k]
  [ 7] entry_SYSCALL_64_after_hwframe_[k]
  [ 8] write
  [ 9] sun.nio.ch.FileDispatcherImpl.write0
  [10] sun.nio.ch.FileDispatcherImpl.write
  [11] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [12] sun.nio.ch.IOUtil.write
  [13] sun.nio.ch.IOUtil.write
  [14] sun.nio.ch.FileChannelImpl.write
  [15] java.nio.channels.Channels.writeFullyImpl
  [16] java.nio.channels.Channels.writeFully
  [17] java.nio.channels.Channels$1.write
  [18] java.io.InputStream.transferTo
  [19] java.nio.file.Files.copy
  [20] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [21] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [22] jdk.nio.zipfs.ZipPath.newFileChannel
  [23] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [24] java.nio.channels.FileChannel.open
  [25] java.nio.channels.FileChannel.open
  [26] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [27] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25648.apply
  [28] cats.effect.IOFiber.$anonfun$8
  [29] cats.effect.IOFiber$$Lambda$279.0x0000000800ddde88.apply
  [30] cats.effect.unsafe.WorkerThread.blockOn
  [31] scala.concurrent.package$.blocking
  [32] cats.effect.IOFiber.runLoop
  [33] cats.effect.IOFiber.execR
  [34] cats.effect.IOFiber.run
  [35] cats.effect.unsafe.WorkerThread.run

--- 482271688 ns (0.05%), 48 samples
  [ 0] do_anonymous_page_[k]
  [ 1] handle_pte_fault_[k]
  [ 2] __handle_mm_fault_[k]
  [ 3] handle_mm_fault_[k]
  [ 4] do_user_addr_fault_[k]
  [ 5] exc_page_fault_[k]
  [ 6] asm_exc_page_fault_[k]
  [ 7] __memset_avx2_unaligned_erms
  [ 8] MemAllocator::allocate() const
  [ 9] TypeArrayKlass::allocate_common(int, bool, JavaThread*)
  [10] JVMCIRuntime::new_array_common(JavaThread*, Klass*, int, bool)
  [11] java.nio.charset.Charset.forName
  [12] com.scalamandra.ZipLib$.com$scalamandra$ZipLib$$anon$1$$_$fs2ReadAllBytes$$anonfun$1$$anonfun$1$$anonfun$2$$anonfun$2
  [13] com.scalamandra.ZipLib$$anon$1$$Lambda$323.0x0000000800dee010.apply
  [14] cats.effect.IOFiber.succeeded
  [15] cats.effect.IOFiber.runLoop
  [16] cats.effect.IOFiber.execR
  [17] cats.effect.IOFiber.run
  [18] cats.effect.unsafe.WorkerThread.run

--- 482113022 ns (0.05%), 48 samples
  [ 0] memset_[k]
  [ 1] dbuf_read_impl.constprop.0?[zfs]_[k]
  [ 2] dbuf_read?[zfs]_[k]
  [ 3] dmu_tx_check_ioerr?[zfs]_[k]
  [ 4] dmu_tx_count_write?[zfs]_[k]
  [ 5] dmu_tx_hold_write_by_dnode?[zfs]_[k]
  [ 6] zfs_write?[zfs]_[k]
  [ 7] zpl_iter_write?[zfs]_[k]
  [ 8] new_sync_write_[k]
  [ 9] vfs_write_[k]
  [10] ksys_write_[k]
  [11] __x64_sys_write_[k]
  [12] do_syscall_64_[k]
  [13] entry_SYSCALL_64_after_hwframe_[k]
  [14] write
  [15] sun.nio.ch.FileDispatcherImpl.write0
  [16] sun.nio.ch.FileDispatcherImpl.write
  [17] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.IOUtil.write
  [20] sun.nio.ch.FileChannelImpl.write
  [21] java.nio.channels.Channels.writeFullyImpl
  [22] java.nio.channels.Channels.writeFully
  [23] java.nio.channels.Channels$1.write
  [24] java.io.InputStream.transferTo
  [25] java.nio.file.Files.copy
  [26] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [27] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [28] jdk.nio.zipfs.ZipPath.newFileChannel
  [29] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [30] java.nio.channels.FileChannel.open
  [31] java.nio.channels.FileChannel.open
  [32] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [33] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25648.apply
  [34] cats.effect.IOFiber.$anonfun$8
  [35] cats.effect.IOFiber$$Lambda$279.0x0000000800ddde88.apply
  [36] cats.effect.unsafe.WorkerThread.blockOn
  [37] scala.concurrent.package$.blocking
  [38] cats.effect.IOFiber.runLoop
  [39] cats.effect.IOFiber.execR
  [40] cats.effect.IOFiber.run
  [41] cats.effect.unsafe.WorkerThread.run

--- 481922586 ns (0.05%), 48 samples
  [ 0] mutex_lock_[k]
  [ 1] arc_buf_access?[zfs]_[k]
  [ 2] dbuf_hold_impl?[zfs]_[k]
  [ 3] dbuf_hold_level?[zfs]_[k]
  [ 4] dbuf_hold?[zfs]_[k]
  [ 5] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 6] dmu_read_uio_dnode?[zfs]_[k]
  [ 7] dmu_read_uio_dbuf?[zfs]_[k]
  [ 8] mappedread?[zfs]_[k]
  [ 9] zfs_read?[zfs]_[k]
  [10] zpl_iter_read?[zfs]_[k]
  [11] new_sync_read_[k]
  [12] vfs_read_[k]
  [13] __x64_sys_pread64_[k]
  [14] do_syscall_64_[k]
  [15] entry_SYSCALL_64_after_hwframe_[k]
  [16] __libc_pread64
  [17] sun.nio.ch.FileDispatcherImpl.pread0
  [18] sun.nio.ch.FileDispatcherImpl.pread
  [19] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [20] sun.nio.ch.IOUtil.read
  [21] sun.nio.ch.IOUtil.read
  [22] sun.nio.ch.FileChannelImpl.readInternal
  [23] sun.nio.ch.FileChannelImpl.read
  [24] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [25] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [26] jdk.nio.zipfs.ZipFileSystem$2.fill
  [27] java.util.zip.InflaterInputStream.read
  [28] java.io.InputStream.transferTo
  [29] java.nio.file.Files.copy
  [30] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [31] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [32] jdk.nio.zipfs.ZipPath.newFileChannel
  [33] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [34] java.nio.channels.FileChannel.open
  [35] java.nio.channels.FileChannel.open
  [36] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [37] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25648.apply
  [38] cats.effect.IOFiber.$anonfun$8
  [39] cats.effect.IOFiber$$Lambda$279.0x0000000800ddde88.apply
  [40] cats.effect.unsafe.WorkerThread.blockOn
  [41] scala.concurrent.package$.blocking
  [42] cats.effect.IOFiber.runLoop
  [43] cats.effect.IOFiber.execR
  [44] cats.effect.IOFiber.run
  [45] cats.effect.unsafe.WorkerThread.run

--- 481878201 ns (0.05%), 48 samples
  [ 0] zfs_tstamp_update_setup?[zfs]_[k]
  [ 1] zfs_write?[zfs]_[k]
  [ 2] zpl_iter_write?[zfs]_[k]
  [ 3] new_sync_write_[k]
  [ 4] vfs_write_[k]
  [ 5] ksys_write_[k]
  [ 6] __x64_sys_write_[k]
  [ 7] do_syscall_64_[k]
  [ 8] entry_SYSCALL_64_after_hwframe_[k]
  [ 9] write
  [10] sun.nio.ch.FileDispatcherImpl.write0
  [11] sun.nio.ch.FileDispatcherImpl.write
  [12] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [13] sun.nio.ch.IOUtil.write
  [14] sun.nio.ch.IOUtil.write
  [15] sun.nio.ch.FileChannelImpl.write
  [16] java.nio.channels.Channels.writeFullyImpl
  [17] java.nio.channels.Channels.writeFully
  [18] java.nio.channels.Channels$1.write
  [19] java.io.InputStream.transferTo
  [20] java.nio.file.Files.copy
  [21] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [22] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [23] jdk.nio.zipfs.ZipPath.newFileChannel
  [24] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [25] java.nio.channels.FileChannel.open
  [26] java.nio.channels.FileChannel.open
  [27] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [28] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25648.apply
  [29] cats.effect.IOFiber.$anonfun$8
  [30] cats.effect.IOFiber$$Lambda$279.0x0000000800ddde88.apply
  [31] cats.effect.unsafe.WorkerThread.blockOn
  [32] scala.concurrent.package$.blocking
  [33] cats.effect.IOFiber.runLoop
  [34] cats.effect.IOFiber.execR
  [35] cats.effect.IOFiber.run
  [36] cats.effect.unsafe.WorkerThread.run

--- 481601629 ns (0.05%), 48 samples
  [ 0] zil_itx_assign?[zfs]_[k]
  [ 1] zfs_log_write?[zfs]_[k]
  [ 2] zfs_write?[zfs]_[k]
  [ 3] zpl_iter_write?[zfs]_[k]
  [ 4] new_sync_write_[k]
  [ 5] vfs_write_[k]
  [ 6] ksys_write_[k]
  [ 7] __x64_sys_write_[k]
  [ 8] do_syscall_64_[k]
  [ 9] entry_SYSCALL_64_after_hwframe_[k]
  [10] write
  [11] sun.nio.ch.FileDispatcherImpl.write0
  [12] sun.nio.ch.FileDispatcherImpl.write
  [13] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [14] sun.nio.ch.IOUtil.write
  [15] sun.nio.ch.IOUtil.write
  [16] sun.nio.ch.FileChannelImpl.write
  [17] java.nio.channels.Channels.writeFullyImpl
  [18] java.nio.channels.Channels.writeFully
  [19] java.nio.channels.Channels$1.write
  [20] java.io.InputStream.transferTo
  [21] java.nio.file.Files.copy
  [22] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [23] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [24] jdk.nio.zipfs.ZipPath.newFileChannel
  [25] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [26] java.nio.channels.FileChannel.open
  [27] java.nio.channels.FileChannel.open
  [28] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [29] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25648.apply
  [30] cats.effect.IOFiber.$anonfun$8
  [31] cats.effect.IOFiber$$Lambda$279.0x0000000800ddde88.apply
  [32] cats.effect.unsafe.WorkerThread.blockOn
  [33] scala.concurrent.package$.blocking
  [34] cats.effect.IOFiber.runLoop
  [35] cats.effect.IOFiber.execR
  [36] cats.effect.IOFiber.run
  [37] cats.effect.unsafe.WorkerThread.run

--- 481292801 ns (0.05%), 48 samples
  [ 0] copy_user_generic_string_[k]
  [ 1] zfs_uiomove_iter?[zfs]_[k]
  [ 2] zfs_uiomove?[zfs]_[k]
  [ 3] dmu_write_uio_dnode?[zfs]_[k]
  [ 4] dmu_write_uio_dbuf?[zfs]_[k]
  [ 5] zfs_write?[zfs]_[k]
  [ 6] zpl_iter_write?[zfs]_[k]
  [ 7] new_sync_write_[k]
  [ 8] vfs_write_[k]
  [ 9] ksys_write_[k]
  [10] __x64_sys_write_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] write
  [14] sun.nio.ch.FileDispatcherImpl.write0
  [15] sun.nio.ch.FileDispatcherImpl.write
  [16] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.FileChannelImpl.write
  [20] java.nio.channels.Channels.writeFullyImpl
  [21] java.nio.channels.Channels.writeFully
  [22] java.nio.channels.Channels$1.write
  [23] java.io.InputStream.transferTo
  [24] java.nio.file.Files.copy
  [25] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [26] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [27] jdk.nio.zipfs.ZipPath.newFileChannel
  [28] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [29] java.nio.channels.FileChannel.open
  [30] java.nio.channels.FileChannel.open
  [31] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [32] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25648.apply
  [33] cats.effect.IOFiber.$anonfun$8
  [34] cats.effect.IOFiber$$Lambda$279.0x0000000800ddde88.apply
  [35] cats.effect.unsafe.WorkerThread.blockOn
  [36] scala.concurrent.package$.blocking
  [37] cats.effect.IOFiber.runLoop
  [38] cats.effect.IOFiber.execR
  [39] cats.effect.IOFiber.run
  [40] cats.effect.unsafe.WorkerThread.run

--- 480899242 ns (0.05%), 48 samples
  [ 0] inflate
  [ 1] java.util.zip.Inflater.inflateBytesBytes
  [ 2] java.util.zip.Inflater.inflate
  [ 3] java.util.zip.InflaterInputStream.read
  [ 4] java.io.InputStream.transferTo
  [ 5] java.nio.file.Files.copy
  [ 6] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [ 7] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [ 8] jdk.nio.zipfs.ZipPath.newFileChannel
  [ 9] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [10] java.nio.channels.FileChannel.open
  [11] java.nio.channels.FileChannel.open
  [12] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [13] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25648.apply
  [14] cats.effect.IOFiber.$anonfun$8
  [15] cats.effect.IOFiber$$Lambda$279.0x0000000800ddde88.apply
  [16] cats.effect.unsafe.WorkerThread.blockOn
  [17] scala.concurrent.package$.blocking
  [18] cats.effect.IOFiber.runLoop
  [19] cats.effect.IOFiber.execR
  [20] cats.effect.IOFiber.run
  [21] cats.effect.unsafe.WorkerThread.run

--- 471807483 ns (0.05%), 47 samples
  [ 0] charge_memcg_[k]
  [ 1] __mem_cgroup_charge_[k]
  [ 2] do_anonymous_page_[k]
  [ 3] handle_pte_fault_[k]
  [ 4] __handle_mm_fault_[k]
  [ 5] handle_mm_fault_[k]
  [ 6] do_user_addr_fault_[k]
  [ 7] exc_page_fault_[k]
  [ 8] asm_exc_page_fault_[k]
  [ 9] __memset_avx2_unaligned_erms
  [10] MemAllocator::allocate() const
  [11] TypeArrayKlass::allocate_common(int, bool, JavaThread*)
  [12] JVMCIRuntime::new_array_common(JavaThread*, Klass*, int, bool)
  [13] fs2.Chunk.toArray
  [14] com.scalamandra.ZipLib$.$anonfun$1
  [15] com.scalamandra.ZipLib$$$Lambda$325.0x0000000800df40b8.apply
  [16] scala.Option.map
  [17] com.scalamandra.ZipLib$.com$scalamandra$ZipLib$$anon$1$$_$fs2ReadAllBytes$$anonfun$1$$anonfun$1$$anonfun$2$$anonfun$1
  [18] com.scalamandra.ZipLib$$anon$1$$Lambda$322.0x0000000800dedc48.apply
  [19] cats.effect.IOFiber.succeeded
  [20] cats.effect.IOFiber.runLoop
  [21] cats.effect.IOFiber.execR
  [22] cats.effect.IOFiber.run
  [23] cats.effect.unsafe.WorkerThread.run

--- 471785952 ns (0.05%), 47 samples
  [ 0] do_anonymous_page_[k]
  [ 1] handle_pte_fault_[k]
  [ 2] __handle_mm_fault_[k]
  [ 3] handle_mm_fault_[k]
  [ 4] do_user_addr_fault_[k]
  [ 5] exc_page_fault_[k]
  [ 6] asm_exc_page_fault_[k]
  [ 7] __memset_avx2_unaligned_erms
  [ 8] MemAllocator::allocate() const
  [ 9] TypeArrayKlass::allocate_common(int, bool, JavaThread*)
  [10] JVMCIRuntime::new_array_common(JavaThread*, Klass*, int, bool)
  [11] fs2.io.file.FileHandleCompanionPlatform$$anon$1.read$$anonfun$1
  [12] fs2.io.file.FileHandleCompanionPlatform$$anon$1$$Lambda$320.0x0000000800ded1e8.apply
  [13] cats.effect.IOFiber.$anonfun$8
  [14] cats.effect.IOFiber$$Lambda$279.0x0000000800ddde88.apply
  [15] cats.effect.unsafe.WorkerThread.blockOn
  [16] scala.concurrent.package$.blocking
  [17] cats.effect.IOFiber.runLoop
  [18] cats.effect.IOFiber.execR
  [19] cats.effect.IOFiber.run
  [20] cats.effect.unsafe.WorkerThread.run

--- 471752777 ns (0.05%), 47 samples
  [ 0] memset_[k]
  [ 1] inotify_handle_inode_event_[k]
  [ 2] fsnotify_handle_inode_event.isra.0_[k]
  [ 3] send_to_group_[k]
  [ 4] fsnotify_[k]
  [ 5] __fsnotify_parent_[k]
  [ 6] vfs_write_[k]
  [ 7] ksys_write_[k]
  [ 8] __x64_sys_write_[k]
  [ 9] do_syscall_64_[k]
  [10] entry_SYSCALL_64_after_hwframe_[k]
  [11] write
  [12] sun.nio.ch.FileDispatcherImpl.write0
  [13] sun.nio.ch.FileDispatcherImpl.write
  [14] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [15] sun.nio.ch.IOUtil.write
  [16] sun.nio.ch.IOUtil.write
  [17] sun.nio.ch.FileChannelImpl.write
  [18] java.nio.channels.Channels.writeFullyImpl
  [19] java.nio.channels.Channels.writeFully
  [20] java.nio.channels.Channels$1.write
  [21] java.io.InputStream.transferTo
  [22] java.nio.file.Files.copy
  [23] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [24] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [25] jdk.nio.zipfs.ZipPath.newFileChannel
  [26] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [27] java.nio.channels.FileChannel.open
  [28] java.nio.channels.FileChannel.open
  [29] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [30] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25648.apply
  [31] cats.effect.IOFiber.$anonfun$8
  [32] cats.effect.IOFiber$$Lambda$279.0x0000000800ddde88.apply
  [33] cats.effect.unsafe.WorkerThread.blockOn
  [34] scala.concurrent.package$.blocking
  [35] cats.effect.IOFiber.runLoop
  [36] cats.effect.IOFiber.execR
  [37] cats.effect.IOFiber.run
  [38] cats.effect.unsafe.WorkerThread.run

--- 471678499 ns (0.05%), 47 samples
  [ 0] find_vmap_area_[k]
  [ 1] check_heap_object_[k]
  [ 2] __check_object_size.part.0_[k]
  [ 3] __check_object_size_[k]
  [ 4] zfs_uiomove_iter?[zfs]_[k]
  [ 5] zfs_uiomove?[zfs]_[k]
  [ 6] dmu_read_uio_dnode?[zfs]_[k]
  [ 7] dmu_read_uio_dbuf?[zfs]_[k]
  [ 8] zfs_read?[zfs]_[k]
  [ 9] zpl_iter_read?[zfs]_[k]
  [10] new_sync_read_[k]
  [11] vfs_read_[k]
  [12] __x64_sys_pread64_[k]
  [13] do_syscall_64_[k]
  [14] entry_SYSCALL_64_after_hwframe_[k]
  [15] __libc_pread64
  [16] sun.nio.ch.FileDispatcherImpl.pread0
  [17] sun.nio.ch.FileDispatcherImpl.pread
  [18] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [19] sun.nio.ch.IOUtil.read
  [20] sun.nio.ch.IOUtil.read
  [21] sun.nio.ch.FileChannelImpl.readInternal
  [22] sun.nio.ch.FileChannelImpl.read
  [23] jdk.nio.zipfs.ZipFileSystem$1.read
  [24] fs2.io.file.FileHandleCompanionPlatform$$anon$1.read$$anonfun$1
  [25] fs2.io.file.FileHandleCompanionPlatform$$anon$1$$Lambda$320.0x0000000800ded1e8.apply
  [26] cats.effect.IOFiber.$anonfun$8
  [27] cats.effect.IOFiber$$Lambda$279.0x0000000800ddde88.apply
  [28] cats.effect.unsafe.WorkerThread.blockOn
  [29] scala.concurrent.package$.blocking
  [30] cats.effect.IOFiber.runLoop
  [31] cats.effect.IOFiber.execR
  [32] cats.effect.IOFiber.run
  [33] cats.effect.unsafe.WorkerThread.run

--- 471641767 ns (0.05%), 47 samples
  [ 0] dmu_write_uio_dnode?[zfs]_[k]
  [ 1] dmu_write_uio_dbuf?[zfs]_[k]
  [ 2] zfs_write?[zfs]_[k]
  [ 3] zpl_iter_write?[zfs]_[k]
  [ 4] new_sync_write_[k]
  [ 5] vfs_write_[k]
  [ 6] ksys_write_[k]
  [ 7] __x64_sys_write_[k]
  [ 8] do_syscall_64_[k]
  [ 9] entry_SYSCALL_64_after_hwframe_[k]
  [10] write
  [11] sun.nio.ch.FileDispatcherImpl.write0
  [12] sun.nio.ch.FileDispatcherImpl.write
  [13] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [14] sun.nio.ch.IOUtil.write
  [15] sun.nio.ch.IOUtil.write
  [16] sun.nio.ch.FileChannelImpl.write
  [17] java.nio.channels.Channels.writeFullyImpl
  [18] java.nio.channels.Channels.writeFully
  [19] java.nio.channels.Channels$1.write
  [20] java.io.InputStream.transferTo
  [21] java.nio.file.Files.copy
  [22] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [23] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [24] jdk.nio.zipfs.ZipPath.newFileChannel
  [25] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [26] java.nio.channels.FileChannel.open
  [27] java.nio.channels.FileChannel.open
  [28] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [29] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25648.apply
  [30] cats.effect.IOFiber.$anonfun$8
  [31] cats.effect.IOFiber$$Lambda$279.0x0000000800ddde88.apply
  [32] cats.effect.unsafe.WorkerThread.blockOn
  [33] scala.concurrent.package$.blocking
  [34] cats.effect.IOFiber.runLoop
  [35] cats.effect.IOFiber.execR
  [36] cats.effect.IOFiber.run
  [37] cats.effect.unsafe.WorkerThread.run

--- 471377232 ns (0.05%), 47 samples
  [ 0] mod_memcg_state_[k]
  [ 1] memcg_account_kmem_[k]
  [ 2] obj_cgroup_uncharge_pages_[k]
  [ 3] refill_obj_stock_[k]
  [ 4] obj_cgroup_charge_[k]
  [ 5] __kmalloc_[k]
  [ 6] inotify_handle_inode_event_[k]
  [ 7] fsnotify_handle_inode_event.isra.0_[k]
  [ 8] send_to_group_[k]
  [ 9] fsnotify_[k]
  [10] __fsnotify_parent_[k]
  [11] vfs_write_[k]
  [12] ksys_write_[k]
  [13] __x64_sys_write_[k]
  [14] do_syscall_64_[k]
  [15] entry_SYSCALL_64_after_hwframe_[k]
  [16] write
  [17] sun.nio.ch.FileDispatcherImpl.write0
  [18] sun.nio.ch.FileDispatcherImpl.write
  [19] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [20] sun.nio.ch.IOUtil.write
  [21] sun.nio.ch.IOUtil.write
  [22] sun.nio.ch.FileChannelImpl.write
  [23] java.nio.channels.Channels.writeFullyImpl
  [24] java.nio.channels.Channels.writeFully
  [25] java.nio.channels.Channels$1.write
  [26] java.io.InputStream.transferTo
  [27] java.nio.file.Files.copy
  [28] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [29] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [30] jdk.nio.zipfs.ZipPath.newFileChannel
  [31] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [32] java.nio.channels.FileChannel.open
  [33] java.nio.channels.FileChannel.open
  [34] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [35] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25648.apply
  [36] cats.effect.IOFiber.$anonfun$8
  [37] cats.effect.IOFiber$$Lambda$279.0x0000000800ddde88.apply
  [38] cats.effect.unsafe.WorkerThread.blockOn
  [39] scala.concurrent.package$.blocking
  [40] cats.effect.IOFiber.runLoop
  [41] cats.effect.IOFiber.execR
  [42] cats.effect.IOFiber.run
  [43] cats.effect.unsafe.WorkerThread.run

--- 471163607 ns (0.05%), 47 samples
  [ 0] memset_[k]
  [ 1] spl_kmem_alloc_impl?[spl]_[k]
  [ 2] spl_kmem_zalloc?[spl]_[k]
  [ 3] dsl_dir_tempreserve_impl.constprop.0?[zfs]_[k]
  [ 4] dsl_dir_tempreserve_space?[zfs]_[k]
  [ 5] dmu_tx_try_assign?[zfs]_[k]
  [ 6] dmu_tx_assign?[zfs]_[k]
  [ 7] zfs_write?[zfs]_[k]
  [ 8] zpl_iter_write?[zfs]_[k]
  [ 9] new_sync_write_[k]
  [10] vfs_write_[k]
  [11] ksys_write_[k]
  [12] __x64_sys_write_[k]
  [13] do_syscall_64_[k]
  [14] entry_SYSCALL_64_after_hwframe_[k]
  [15] write
  [16] sun.nio.ch.FileDispatcherImpl.write0
  [17] sun.nio.ch.FileDispatcherImpl.write
  [18] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [19] sun.nio.ch.IOUtil.write
  [20] sun.nio.ch.IOUtil.write
  [21] sun.nio.ch.FileChannelImpl.write
  [22] java.nio.channels.Channels.writeFullyImpl
  [23] java.nio.channels.Channels.writeFully
  [24] java.nio.channels.Channels$1.write
  [25] java.io.InputStream.transferTo
  [26] java.nio.file.Files.copy
  [27] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [28] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [29] jdk.nio.zipfs.ZipPath.newFileChannel
  [30] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [31] java.nio.channels.FileChannel.open
  [32] java.nio.channels.FileChannel.open
  [33] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [34] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25648.apply
  [35] cats.effect.IOFiber.$anonfun$8
  [36] cats.effect.IOFiber$$Lambda$279.0x0000000800ddde88.apply
  [37] cats.effect.unsafe.WorkerThread.blockOn
  [38] scala.concurrent.package$.blocking
  [39] cats.effect.IOFiber.runLoop
  [40] cats.effect.IOFiber.execR
  [41] cats.effect.IOFiber.run
  [42] cats.effect.unsafe.WorkerThread.run

--- 462181767 ns (0.05%), 46 samples
  [ 0] _copy_from_iter_[k]
  [ 1] zfs_uiomove_iter?[zfs]_[k]
  [ 2] zfs_uiomove?[zfs]_[k]
  [ 3] dmu_write_uio_dnode?[zfs]_[k]
  [ 4] dmu_write_uio_dbuf?[zfs]_[k]
  [ 5] zfs_write?[zfs]_[k]
  [ 6] zpl_iter_write?[zfs]_[k]
  [ 7] new_sync_write_[k]
  [ 8] vfs_write_[k]
  [ 9] ksys_write_[k]
  [10] __x64_sys_write_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] write
  [14] sun.nio.ch.FileDispatcherImpl.write0
  [15] sun.nio.ch.FileDispatcherImpl.write
  [16] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.FileChannelImpl.write
  [20] java.nio.channels.Channels.writeFullyImpl
  [21] java.nio.channels.Channels.writeFully
  [22] java.nio.channels.Channels$1.write
  [23] java.io.InputStream.transferTo
  [24] java.nio.file.Files.copy
  [25] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [26] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [27] jdk.nio.zipfs.ZipPath.newFileChannel
  [28] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [29] java.nio.channels.FileChannel.open
  [30] java.nio.channels.FileChannel.open
  [31] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [32] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25648.apply
  [33] cats.effect.IOFiber.$anonfun$8
  [34] cats.effect.IOFiber$$Lambda$279.0x0000000800ddde88.apply
  [35] cats.effect.unsafe.WorkerThread.blockOn
  [36] scala.concurrent.package$.blocking
  [37] cats.effect.IOFiber.runLoop
  [38] cats.effect.IOFiber.execR
  [39] cats.effect.IOFiber.run
  [40] cats.effect.unsafe.WorkerThread.run

--- 461723789 ns (0.05%), 46 samples
  [ 0] CompiledMethod::cleanup_inline_caches_impl(bool, bool)
  [ 1] CompiledMethod::unload_nmethod_caches(bool)
  [ 2] nmethod::do_unloading(bool)
  [ 3] CodeCacheUnloadingTask::work(unsigned int)
  [ 4] G1ParallelCleaningTask::work(unsigned int)
  [ 5] GangWorker::loop()
  [ 6] GangWorker::run()
  [ 7] Thread::call_run()
  [ 8] thread_native_entry(Thread*)
  [ 9] start_thread

--- 461321350 ns (0.05%), 46 samples
  [ 0] new_sync_write_[k]
  [ 1] vfs_write_[k]
  [ 2] ksys_write_[k]
  [ 3] __x64_sys_write_[k]
  [ 4] do_syscall_64_[k]
  [ 5] entry_SYSCALL_64_after_hwframe_[k]
  [ 6] write
  [ 7] sun.nio.ch.FileDispatcherImpl.write0
  [ 8] sun.nio.ch.FileDispatcherImpl.write
  [ 9] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [10] sun.nio.ch.IOUtil.write
  [11] sun.nio.ch.IOUtil.write
  [12] sun.nio.ch.FileChannelImpl.write
  [13] java.nio.channels.Channels.writeFullyImpl
  [14] java.nio.channels.Channels.writeFully
  [15] java.nio.channels.Channels$1.write
  [16] java.io.InputStream.transferTo
  [17] java.nio.file.Files.copy
  [18] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [19] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [20] jdk.nio.zipfs.ZipPath.newFileChannel
  [21] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [22] java.nio.channels.FileChannel.open
  [23] java.nio.channels.FileChannel.open
  [24] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [25] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25648.apply
  [26] cats.effect.IOFiber.$anonfun$8
  [27] cats.effect.IOFiber$$Lambda$279.0x0000000800ddde88.apply
  [28] cats.effect.unsafe.WorkerThread.blockOn
  [29] scala.concurrent.package$.blocking
  [30] cats.effect.IOFiber.runLoop
  [31] cats.effect.IOFiber.execR
  [32] cats.effect.IOFiber.run
  [33] cats.effect.unsafe.WorkerThread.run

--- 461034418 ns (0.05%), 46 samples
  [ 0] kmalloc_slab_[k]
  [ 1] __kmalloc_[k]
  [ 2] inotify_handle_inode_event_[k]
  [ 3] fsnotify_handle_inode_event.isra.0_[k]
  [ 4] send_to_group_[k]
  [ 5] fsnotify_[k]
  [ 6] __fsnotify_parent_[k]
  [ 7] vfs_write_[k]
  [ 8] ksys_write_[k]
  [ 9] __x64_sys_write_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] write
  [13] sun.nio.ch.FileDispatcherImpl.write0
  [14] sun.nio.ch.FileDispatcherImpl.write
  [15] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [16] sun.nio.ch.IOUtil.write
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.FileChannelImpl.write
  [19] java.nio.channels.Channels.writeFullyImpl
  [20] java.nio.channels.Channels.writeFully
  [21] java.nio.channels.Channels$1.write
  [22] java.io.InputStream.transferTo
  [23] java.nio.file.Files.copy
  [24] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [25] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [26] jdk.nio.zipfs.ZipPath.newFileChannel
  [27] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [28] java.nio.channels.FileChannel.open
  [29] java.nio.channels.FileChannel.open
  [30] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [31] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25648.apply
  [32] cats.effect.IOFiber.$anonfun$8
  [33] cats.effect.IOFiber$$Lambda$279.0x0000000800ddde88.apply
  [34] cats.effect.unsafe.WorkerThread.blockOn
  [35] scala.concurrent.package$.blocking
  [36] cats.effect.IOFiber.runLoop
  [37] cats.effect.IOFiber.execR
  [38] cats.effect.IOFiber.run
  [39] cats.effect.unsafe.WorkerThread.run

--- 460859314 ns (0.05%), 46 samples
  [ 0] mutex_unlock_[k]
  [ 1] zfs_write?[zfs]_[k]
  [ 2] zpl_iter_write?[zfs]_[k]
  [ 3] new_sync_write_[k]
  [ 4] vfs_write_[k]
  [ 5] ksys_write_[k]
  [ 6] __x64_sys_write_[k]
  [ 7] do_syscall_64_[k]
  [ 8] entry_SYSCALL_64_after_hwframe_[k]
  [ 9] write
  [10] sun.nio.ch.FileDispatcherImpl.write0
  [11] sun.nio.ch.FileDispatcherImpl.write
  [12] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [13] sun.nio.ch.IOUtil.write
  [14] sun.nio.ch.IOUtil.write
  [15] sun.nio.ch.FileChannelImpl.write
  [16] java.nio.channels.Channels.writeFullyImpl
  [17] java.nio.channels.Channels.writeFully
  [18] java.nio.channels.Channels$1.write
  [19] java.io.InputStream.transferTo
  [20] java.nio.file.Files.copy
  [21] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [22] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [23] jdk.nio.zipfs.ZipPath.newFileChannel
  [24] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [25] java.nio.channels.FileChannel.open
  [26] java.nio.channels.FileChannel.open
  [27] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [28] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25648.apply
  [29] cats.effect.IOFiber.$anonfun$8
  [30] cats.effect.IOFiber$$Lambda$279.0x0000000800ddde88.apply
  [31] cats.effect.unsafe.WorkerThread.blockOn
  [32] scala.concurrent.package$.blocking
  [33] cats.effect.IOFiber.runLoop
  [34] cats.effect.IOFiber.execR
  [35] cats.effect.IOFiber.run
  [36] cats.effect.unsafe.WorkerThread.run

--- 451771333 ns (0.05%), 44 samples
  [ 0] do_anonymous_page_[k]
  [ 1] handle_pte_fault_[k]
  [ 2] __handle_mm_fault_[k]
  [ 3] handle_mm_fault_[k]
  [ 4] do_user_addr_fault_[k]
  [ 5] exc_page_fault_[k]
  [ 6] asm_exc_page_fault_[k]
  [ 7] __memset_avx2_unaligned_erms
  [ 8] MemAllocator::allocate() const
  [ 9] TypeArrayKlass::allocate_common(int, bool, JavaThread*)
  [10] JVMCIRuntime::new_array_common(JavaThread*, Klass*, int, bool)
  [11] fs2.Chunk.toArray
  [12] com.scalamandra.ZipLib$.$anonfun$1
  [13] com.scalamandra.ZipLib$$$Lambda$325.0x0000000800df40b8.apply
  [14] scala.Option.map
  [15] com.scalamandra.ZipLib$.com$scalamandra$ZipLib$$anon$1$$_$fs2ReadAllBytes$$anonfun$1$$anonfun$1$$anonfun$2$$anonfun$1
  [16] com.scalamandra.ZipLib$$anon$1$$Lambda$322.0x0000000800dedc48.apply
  [17] cats.effect.IOFiber.succeeded
  [18] cats.effect.IOFiber.runLoop
  [19] cats.effect.IOFiber.execR
  [20] cats.effect.IOFiber.run
  [21] cats.effect.unsafe.WorkerThread.run

--- 451567056 ns (0.05%), 45 samples
  [ 0] __memset_avx2_unaligned_erms
  [ 1] MemAllocator::allocate() const
  [ 2] TypeArrayKlass::allocate_common(int, bool, JavaThread*)
  [ 3] JVMCIRuntime::new_array_common(JavaThread*, Klass*, int, bool)
  [ 4] java.nio.charset.Charset.forName
  [ 5] com.scalamandra.ZipLib$.com$scalamandra$ZipLib$$anon$1$$_$fs2ReadAllBytes$$anonfun$1$$anonfun$1$$anonfun$2$$anonfun$2
  [ 6] com.scalamandra.ZipLib$$anon$1$$Lambda$323.0x0000000800dee010.apply
  [ 7] cats.effect.IOFiber.succeeded
  [ 8] cats.effect.IOFiber.runLoop
  [ 9] cats.effect.IOFiber.execR
  [10] cats.effect.IOFiber.run
  [11] cats.effect.unsafe.WorkerThread.run

--- 451460340 ns (0.05%), 45 samples
  [ 0] dmu_tx_commit?[zfs]_[k]
  [ 1] zfs_write?[zfs]_[k]
  [ 2] zpl_iter_write?[zfs]_[k]
  [ 3] new_sync_write_[k]
  [ 4] vfs_write_[k]
  [ 5] ksys_write_[k]
  [ 6] __x64_sys_write_[k]
  [ 7] do_syscall_64_[k]
  [ 8] entry_SYSCALL_64_after_hwframe_[k]
  [ 9] write
  [10] sun.nio.ch.FileDispatcherImpl.write0
  [11] sun.nio.ch.FileDispatcherImpl.write
  [12] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [13] sun.nio.ch.IOUtil.write
  [14] sun.nio.ch.IOUtil.write
  [15] sun.nio.ch.FileChannelImpl.write
  [16] java.nio.channels.Channels.writeFullyImpl
  [17] java.nio.channels.Channels.writeFully
  [18] java.nio.channels.Channels$1.write
  [19] java.io.InputStream.transferTo
  [20] java.nio.file.Files.copy
  [21] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [22] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [23] jdk.nio.zipfs.ZipPath.newFileChannel
  [24] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [25] java.nio.channels.FileChannel.open
  [26] java.nio.channels.FileChannel.open
  [27] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [28] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25648.apply
  [29] cats.effect.IOFiber.$anonfun$8
  [30] cats.effect.IOFiber$$Lambda$279.0x0000000800ddde88.apply
  [31] cats.effect.unsafe.WorkerThread.blockOn
  [32] scala.concurrent.package$.blocking
  [33] cats.effect.IOFiber.runLoop
  [34] cats.effect.IOFiber.execR
  [35] cats.effect.IOFiber.run
  [36] cats.effect.unsafe.WorkerThread.run

--- 451324979 ns (0.05%), 45 samples
  [ 0] txg_list_add?[zfs]_[k]
  [ 1] zilog_dirty?[zfs]_[k]
  [ 2] zil_itx_assign?[zfs]_[k]
  [ 3] zfs_log_write?[zfs]_[k]
  [ 4] zfs_write?[zfs]_[k]
  [ 5] zpl_iter_write?[zfs]_[k]
  [ 6] new_sync_write_[k]
  [ 7] vfs_write_[k]
  [ 8] ksys_write_[k]
  [ 9] __x64_sys_write_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] write
  [13] sun.nio.ch.FileDispatcherImpl.write0
  [14] sun.nio.ch.FileDispatcherImpl.write
  [15] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [16] sun.nio.ch.IOUtil.write
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.FileChannelImpl.write
  [19] java.nio.channels.Channels.writeFullyImpl
  [20] java.nio.channels.Channels.writeFully
  [21] java.nio.channels.Channels$1.write
  [22] java.io.InputStream.transferTo
  [23] java.nio.file.Files.copy
  [24] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [25] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [26] jdk.nio.zipfs.ZipPath.newFileChannel
  [27] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [28] java.nio.channels.FileChannel.open
  [29] java.nio.channels.FileChannel.open
  [30] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [31] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25648.apply
  [32] cats.effect.IOFiber.$anonfun$8
  [33] cats.effect.IOFiber$$Lambda$279.0x0000000800ddde88.apply
  [34] cats.effect.unsafe.WorkerThread.blockOn
  [35] scala.concurrent.package$.blocking
  [36] cats.effect.IOFiber.runLoop
  [37] cats.effect.IOFiber.execR
  [38] cats.effect.IOFiber.run
  [39] cats.effect.unsafe.WorkerThread.run

--- 451275936 ns (0.05%), 45 samples
  [ 0] kmem_cache_free_[k]
  [ 1] spl_kmem_cache_free?[spl]_[k]
  [ 2] zio_destroy?[zfs]_[k]
  [ 3] zio_wait?[zfs]_[k]
  [ 4] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 5] dmu_read_uio_dnode?[zfs]_[k]
  [ 6] dmu_read_uio_dbuf?[zfs]_[k]
  [ 7] mappedread?[zfs]_[k]
  [ 8] zfs_read?[zfs]_[k]
  [ 9] zpl_iter_read?[zfs]_[k]
  [10] new_sync_read_[k]
  [11] vfs_read_[k]
  [12] __x64_sys_pread64_[k]
  [13] do_syscall_64_[k]
  [14] entry_SYSCALL_64_after_hwframe_[k]
  [15] __libc_pread64
  [16] sun.nio.ch.FileDispatcherImpl.pread0
  [17] sun.nio.ch.FileDispatcherImpl.pread
  [18] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [19] sun.nio.ch.IOUtil.read
  [20] sun.nio.ch.IOUtil.read
  [21] sun.nio.ch.FileChannelImpl.readInternal
  [22] sun.nio.ch.FileChannelImpl.read
  [23] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [24] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [25] jdk.nio.zipfs.ZipFileSystem$2.fill
  [26] java.util.zip.InflaterInputStream.read
  [27] java.io.InputStream.transferTo
  [28] java.nio.file.Files.copy
  [29] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [30] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [31] jdk.nio.zipfs.ZipPath.newFileChannel
  [32] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [33] java.nio.channels.FileChannel.open
  [34] java.nio.channels.FileChannel.open
  [35] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [36] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25648.apply
  [37] cats.effect.IOFiber.$anonfun$8
  [38] cats.effect.IOFiber$$Lambda$279.0x0000000800ddde88.apply
  [39] cats.effect.unsafe.WorkerThread.blockOn
  [40] scala.concurrent.package$.blocking
  [41] cats.effect.IOFiber.runLoop
  [42] cats.effect.IOFiber.execR
  [43] cats.effect.IOFiber.run
  [44] cats.effect.unsafe.WorkerThread.run

--- 442095998 ns (0.04%), 44 samples
  [ 0] read_tsc_[k]
  [ 1] gethrtime?[zfs]_[k]
  [ 2] dmu_tx_create_dd?[zfs]_[k]
  [ 3] dmu_tx_create?[zfs]_[k]
  [ 4] zfs_write?[zfs]_[k]
  [ 5] zpl_iter_write?[zfs]_[k]
  [ 6] new_sync_write_[k]
  [ 7] vfs_write_[k]
  [ 8] ksys_write_[k]
  [ 9] __x64_sys_write_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] write
  [13] sun.nio.ch.FileDispatcherImpl.write0
  [14] sun.nio.ch.FileDispatcherImpl.write
  [15] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [16] sun.nio.ch.IOUtil.write
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.FileChannelImpl.write
  [19] java.nio.channels.Channels.writeFullyImpl
  [20] java.nio.channels.Channels.writeFully
  [21] java.nio.channels.Channels$1.write
  [22] java.io.InputStream.transferTo
  [23] java.nio.file.Files.copy
  [24] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [25] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [26] jdk.nio.zipfs.ZipPath.newFileChannel
  [27] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [28] java.nio.channels.FileChannel.open
  [29] java.nio.channels.FileChannel.open
  [30] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [31] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25648.apply
  [32] cats.effect.IOFiber.$anonfun$8
  [33] cats.effect.IOFiber$$Lambda$279.0x0000000800ddde88.apply
  [34] cats.effect.unsafe.WorkerThread.blockOn
  [35] scala.concurrent.package$.blocking
  [36] cats.effect.IOFiber.runLoop
  [37] cats.effect.IOFiber.execR
  [38] cats.effect.IOFiber.run
  [39] cats.effect.unsafe.WorkerThread.run

--- 441149332 ns (0.04%), 44 samples
  [ 0] __memset_avx2_unaligned_erms
  [ 1] MemAllocator::allocate() const
  [ 2] TypeArrayKlass::allocate_common(int, bool, JavaThread*)
  [ 3] JVMCIRuntime::new_array_common(JavaThread*, Klass*, int, bool)
  [ 4] fs2.io.file.FileHandleCompanionPlatform$$anon$1.read$$anonfun$1
  [ 5] fs2.io.file.FileHandleCompanionPlatform$$anon$1$$Lambda$320.0x0000000800ded1e8.apply
  [ 6] cats.effect.IOFiber.$anonfun$8
  [ 7] cats.effect.IOFiber$$Lambda$279.0x0000000800ddde88.apply
  [ 8] cats.effect.unsafe.WorkerThread.blockOn
  [ 9] scala.concurrent.package$.blocking
  [10] cats.effect.IOFiber.runLoop
  [11] cats.effect.IOFiber.execR
  [12] cats.effect.IOFiber.run
  [13] cats.effect.unsafe.WorkerThread.run

--- 431489611 ns (0.04%), 43 samples
  [ 0] java.lang.StringCoding.hasNegatives
  [ 1] java.lang.String.<init>
  [ 2] java.lang.String.<init>
  [ 3] com.scalamandra.ZipLib$.com$scalamandra$ZipLib$$anon$1$$_$fs2ReadAllBytes$$anonfun$1$$anonfun$1$$anonfun$2$$anonfun$2
  [ 4] com.scalamandra.ZipLib$$anon$1$$Lambda$323.0x0000000800dee010.apply
  [ 5] cats.effect.IOFiber.succeeded
  [ 6] cats.effect.IOFiber.runLoop
  [ 7] cats.effect.IOFiber.execR
  [ 8] cats.effect.IOFiber.run
  [ 9] cats.effect.unsafe.WorkerThread.run

--- 431074822 ns (0.04%), 43 samples
  [ 0] propagate_protected_usage_[k]
  [ 1] try_charge_memcg_[k]
  [ 2] obj_cgroup_charge_[k]
  [ 3] __kmalloc_[k]
  [ 4] inotify_handle_inode_event_[k]
  [ 5] fsnotify_handle_inode_event.isra.0_[k]
  [ 6] send_to_group_[k]
  [ 7] fsnotify_[k]
  [ 8] __fsnotify_parent_[k]
  [ 9] vfs_write_[k]
  [10] ksys_write_[k]
  [11] __x64_sys_write_[k]
  [12] do_syscall_64_[k]
  [13] entry_SYSCALL_64_after_hwframe_[k]
  [14] write
  [15] sun.nio.ch.FileDispatcherImpl.write0
  [16] sun.nio.ch.FileDispatcherImpl.write
  [17] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.IOUtil.write
  [20] sun.nio.ch.FileChannelImpl.write
  [21] java.nio.channels.Channels.writeFullyImpl
  [22] java.nio.channels.Channels.writeFully
  [23] java.nio.channels.Channels$1.write
  [24] java.io.InputStream.transferTo
  [25] java.nio.file.Files.copy
  [26] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [27] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [28] jdk.nio.zipfs.ZipPath.newFileChannel
  [29] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [30] java.nio.channels.FileChannel.open
  [31] java.nio.channels.FileChannel.open
  [32] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [33] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25648.apply
  [34] cats.effect.IOFiber.$anonfun$8
  [35] cats.effect.IOFiber$$Lambda$279.0x0000000800ddde88.apply
  [36] cats.effect.unsafe.WorkerThread.blockOn
  [37] scala.concurrent.package$.blocking
  [38] cats.effect.IOFiber.runLoop
  [39] cats.effect.IOFiber.execR
  [40] cats.effect.IOFiber.run
  [41] cats.effect.unsafe.WorkerThread.run

--- 431068212 ns (0.04%), 43 samples
  [ 0] __memcpy_avx_unaligned
  [ 1] java.util.zip.Inflater.inflateBytesBytes
  [ 2] java.util.zip.Inflater.inflate
  [ 3] java.util.zip.InflaterInputStream.read
  [ 4] java.io.InputStream.transferTo
  [ 5] java.nio.file.Files.copy
  [ 6] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [ 7] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [ 8] jdk.nio.zipfs.ZipPath.newFileChannel
  [ 9] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [10] java.nio.channels.FileChannel.open
  [11] java.nio.channels.FileChannel.open
  [12] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [13] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25648.apply
  [14] cats.effect.IOFiber.$anonfun$8
  [15] cats.effect.IOFiber$$Lambda$279.0x0000000800ddde88.apply
  [16] cats.effect.unsafe.WorkerThread.blockOn
  [17] scala.concurrent.package$.blocking
  [18] cats.effect.IOFiber.runLoop
  [19] cats.effect.IOFiber.execR
  [20] cats.effect.IOFiber.run
  [21] cats.effect.unsafe.WorkerThread.run

--- 425858614 ns (0.04%), 42 samples
  [ 0] __schedule_[k]
  [ 1] schedule_[k]
  [ 2] exit_to_user_mode_loop_[k]
  [ 3] exit_to_user_mode_prepare_[k]
  [ 4] irqentry_exit_to_user_mode_[k]
  [ 5] irqentry_exit_[k]
  [ 6] sysvec_reschedule_ipi_[k]
  [ 7] asm_sysvec_reschedule_ipi_[k]
  [ 8] /usr/lib/x86_64-linux-gnu/libz.so.1.2.11
  [ 9] [unknown]
  [10] java.util.zip.Inflater.inflateBytesBytes
  [11] java.util.zip.Inflater.inflate
  [12] java.util.zip.InflaterInputStream.read
  [13] java.io.InputStream.transferTo
  [14] java.nio.file.Files.copy
  [15] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [16] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [17] jdk.nio.zipfs.ZipPath.newFileChannel
  [18] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [19] java.nio.channels.FileChannel.open
  [20] java.nio.channels.FileChannel.open
  [21] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [22] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25648.apply
  [23] cats.effect.IOFiber.$anonfun$8
  [24] cats.effect.IOFiber$$Lambda$279.0x0000000800ddde88.apply
  [25] cats.effect.unsafe.WorkerThread.blockOn
  [26] scala.concurrent.package$.blocking
  [27] cats.effect.IOFiber.runLoop
  [28] cats.effect.IOFiber.execR
  [29] cats.effect.IOFiber.run
  [30] cats.effect.unsafe.WorkerThread.run

--- 421059839 ns (0.04%), 42 samples
  [ 0] dbuf_hold_impl?[zfs]_[k]
  [ 1] dbuf_hold_level?[zfs]_[k]
  [ 2] dmu_tx_check_ioerr?[zfs]_[k]
  [ 3] dmu_tx_count_write?[zfs]_[k]
  [ 4] dmu_tx_hold_write_by_dnode?[zfs]_[k]
  [ 5] zfs_write?[zfs]_[k]
  [ 6] zpl_iter_write?[zfs]_[k]
  [ 7] new_sync_write_[k]
  [ 8] vfs_write_[k]
  [ 9] ksys_write_[k]
  [10] __x64_sys_write_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] write
  [14] sun.nio.ch.FileDispatcherImpl.write0
  [15] sun.nio.ch.FileDispatcherImpl.write
  [16] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.FileChannelImpl.write
  [20] java.nio.channels.Channels.writeFullyImpl
  [21] java.nio.channels.Channels.writeFully
  [22] java.nio.channels.Channels$1.write
  [23] java.io.InputStream.transferTo
  [24] java.nio.file.Files.copy
  [25] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [26] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [27] jdk.nio.zipfs.ZipPath.newFileChannel
  [28] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [29] java.nio.channels.FileChannel.open
  [30] java.nio.channels.FileChannel.open
  [31] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [32] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25648.apply
  [33] cats.effect.IOFiber.$anonfun$8
  [34] cats.effect.IOFiber$$Lambda$279.0x0000000800ddde88.apply
  [35] cats.effect.unsafe.WorkerThread.blockOn
  [36] scala.concurrent.package$.blocking
  [37] cats.effect.IOFiber.runLoop
  [38] cats.effect.IOFiber.execR
  [39] cats.effect.IOFiber.run
  [40] cats.effect.unsafe.WorkerThread.run

--- 411660354 ns (0.04%), 41 samples
  [ 0] zrl_add_impl?[zfs]_[k]
  [ 1] dmu_tx_hold_sa?[zfs]_[k]
  [ 2] zfs_write?[zfs]_[k]
  [ 3] zpl_iter_write?[zfs]_[k]
  [ 4] new_sync_write_[k]
  [ 5] vfs_write_[k]
  [ 6] ksys_write_[k]
  [ 7] __x64_sys_write_[k]
  [ 8] do_syscall_64_[k]
  [ 9] entry_SYSCALL_64_after_hwframe_[k]
  [10] write
  [11] sun.nio.ch.FileDispatcherImpl.write0
  [12] sun.nio.ch.FileDispatcherImpl.write
  [13] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [14] sun.nio.ch.IOUtil.write
  [15] sun.nio.ch.IOUtil.write
  [16] sun.nio.ch.FileChannelImpl.write
  [17] java.nio.channels.Channels.writeFullyImpl
  [18] java.nio.channels.Channels.writeFully
  [19] java.nio.channels.Channels$1.write
  [20] java.io.InputStream.transferTo
  [21] java.nio.file.Files.copy
  [22] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [23] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [24] jdk.nio.zipfs.ZipPath.newFileChannel
  [25] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [26] java.nio.channels.FileChannel.open
  [27] java.nio.channels.FileChannel.open
  [28] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [29] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25648.apply
  [30] cats.effect.IOFiber.$anonfun$8
  [31] cats.effect.IOFiber$$Lambda$279.0x0000000800ddde88.apply
  [32] cats.effect.unsafe.WorkerThread.blockOn
  [33] scala.concurrent.package$.blocking
  [34] cats.effect.IOFiber.runLoop
  [35] cats.effect.IOFiber.execR
  [36] cats.effect.IOFiber.run
  [37] cats.effect.unsafe.WorkerThread.run

--- 410838669 ns (0.04%), 41 samples
  [ 0] __rcu_read_lock_[k]
  [ 1] __fsnotify_parent_[k]
  [ 2] vfs_write_[k]
  [ 3] ksys_write_[k]
  [ 4] __x64_sys_write_[k]
  [ 5] do_syscall_64_[k]
  [ 6] entry_SYSCALL_64_after_hwframe_[k]
  [ 7] write
  [ 8] sun.nio.ch.FileDispatcherImpl.write0
  [ 9] sun.nio.ch.FileDispatcherImpl.write
  [10] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [11] sun.nio.ch.IOUtil.write
  [12] sun.nio.ch.IOUtil.write
  [13] sun.nio.ch.FileChannelImpl.write
  [14] java.nio.channels.Channels.writeFullyImpl
  [15] java.nio.channels.Channels.writeFully
  [16] java.nio.channels.Channels$1.write
  [17] java.io.InputStream.transferTo
  [18] java.nio.file.Files.copy
  [19] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [20] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [21] jdk.nio.zipfs.ZipPath.newFileChannel
  [22] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [23] java.nio.channels.FileChannel.open
  [24] java.nio.channels.FileChannel.open
  [25] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [26] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25648.apply
  [27] cats.effect.IOFiber.$anonfun$8
  [28] cats.effect.IOFiber$$Lambda$279.0x0000000800ddde88.apply
  [29] cats.effect.unsafe.WorkerThread.blockOn
  [30] scala.concurrent.package$.blocking
  [31] cats.effect.IOFiber.runLoop
  [32] cats.effect.IOFiber.execR
  [33] cats.effect.IOFiber.run
  [34] cats.effect.unsafe.WorkerThread.run

--- 401641118 ns (0.04%), 40 samples
  [ 0] __pthread_self
  [ 1] sun.nio.ch.NativeThread.current
  [ 2] sun.nio.ch.NativeThreadSet.add
  [ 3] sun.nio.ch.FileChannelImpl.write
  [ 4] java.nio.channels.Channels.writeFullyImpl
  [ 5] java.nio.channels.Channels.writeFully
  [ 6] java.nio.channels.Channels$1.write
  [ 7] java.io.InputStream.transferTo
  [ 8] java.nio.file.Files.copy
  [ 9] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [10] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [11] jdk.nio.zipfs.ZipPath.newFileChannel
  [12] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [13] java.nio.channels.FileChannel.open
  [14] java.nio.channels.FileChannel.open
  [15] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [16] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25648.apply
  [17] cats.effect.IOFiber.$anonfun$8
  [18] cats.effect.IOFiber$$Lambda$279.0x0000000800ddde88.apply
  [19] cats.effect.unsafe.WorkerThread.blockOn
  [20] scala.concurrent.package$.blocking
  [21] cats.effect.IOFiber.runLoop
  [22] cats.effect.IOFiber.execR
  [23] cats.effect.IOFiber.run
  [24] cats.effect.unsafe.WorkerThread.run

--- 401496608 ns (0.04%), 40 samples
  [ 0] dbuf_read_verify_dnode_crypt?[zfs]_[k]
  [ 1] dbuf_read?[zfs]_[k]
  [ 2] dmu_tx_check_ioerr?[zfs]_[k]
  [ 3] dmu_tx_count_write?[zfs]_[k]
  [ 4] dmu_tx_hold_write_by_dnode?[zfs]_[k]
  [ 5] zfs_write?[zfs]_[k]
  [ 6] zpl_iter_write?[zfs]_[k]
  [ 7] new_sync_write_[k]
  [ 8] vfs_write_[k]
  [ 9] ksys_write_[k]
  [10] __x64_sys_write_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] write
  [14] sun.nio.ch.FileDispatcherImpl.write0
  [15] sun.nio.ch.FileDispatcherImpl.write
  [16] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.FileChannelImpl.write
  [20] java.nio.channels.Channels.writeFullyImpl
  [21] java.nio.channels.Channels.writeFully
  [22] java.nio.channels.Channels$1.write
  [23] java.io.InputStream.transferTo
  [24] java.nio.file.Files.copy
  [25] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [26] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [27] jdk.nio.zipfs.ZipPath.newFileChannel
  [28] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [29] java.nio.channels.FileChannel.open
  [30] java.nio.channels.FileChannel.open
  [31] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [32] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25648.apply
  [33] cats.effect.IOFiber.$anonfun$8
  [34] cats.effect.IOFiber$$Lambda$279.0x0000000800ddde88.apply
  [35] cats.effect.unsafe.WorkerThread.blockOn
  [36] scala.concurrent.package$.blocking
  [37] cats.effect.IOFiber.runLoop
  [38] cats.effect.IOFiber.execR
  [39] cats.effect.IOFiber.run
  [40] cats.effect.unsafe.WorkerThread.run

--- 401424180 ns (0.04%), 40 samples
  [ 0] arc_buf_access?[zfs]_[k]
  [ 1] dbuf_hold_impl?[zfs]_[k]
  [ 2] dbuf_hold_level?[zfs]_[k]
  [ 3] dbuf_hold?[zfs]_[k]
  [ 4] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 5] dmu_read_uio_dnode?[zfs]_[k]
  [ 6] dmu_read_uio_dbuf?[zfs]_[k]
  [ 7] mappedread?[zfs]_[k]
  [ 8] zfs_read?[zfs]_[k]
  [ 9] zpl_iter_read?[zfs]_[k]
  [10] new_sync_read_[k]
  [11] vfs_read_[k]
  [12] __x64_sys_pread64_[k]
  [13] do_syscall_64_[k]
  [14] entry_SYSCALL_64_after_hwframe_[k]
  [15] __libc_pread64
  [16] sun.nio.ch.FileDispatcherImpl.pread0
  [17] sun.nio.ch.FileDispatcherImpl.pread
  [18] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [19] sun.nio.ch.IOUtil.read
  [20] sun.nio.ch.IOUtil.read
  [21] sun.nio.ch.FileChannelImpl.readInternal
  [22] sun.nio.ch.FileChannelImpl.read
  [23] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [24] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [25] jdk.nio.zipfs.ZipFileSystem$2.fill
  [26] java.util.zip.InflaterInputStream.read
  [27] java.io.InputStream.transferTo
  [28] java.nio.file.Files.copy
  [29] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [30] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [31] jdk.nio.zipfs.ZipPath.newFileChannel
  [32] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [33] java.nio.channels.FileChannel.open
  [34] java.nio.channels.FileChannel.open
  [35] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [36] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25648.apply
  [37] cats.effect.IOFiber.$anonfun$8
  [38] cats.effect.IOFiber$$Lambda$279.0x0000000800ddde88.apply
  [39] cats.effect.unsafe.WorkerThread.blockOn
  [40] scala.concurrent.package$.blocking
  [41] cats.effect.IOFiber.runLoop
  [42] cats.effect.IOFiber.execR
  [43] cats.effect.IOFiber.run
  [44] cats.effect.unsafe.WorkerThread.run

--- 401361718 ns (0.04%), 40 samples
  [ 0] mutex_lock_[k]
  [ 1] txg_hold_open?[zfs]_[k]
  [ 2] dmu_tx_try_assign?[zfs]_[k]
  [ 3] dmu_tx_assign?[zfs]_[k]
  [ 4] zfs_write?[zfs]_[k]
  [ 5] zpl_iter_write?[zfs]_[k]
  [ 6] new_sync_write_[k]
  [ 7] vfs_write_[k]
  [ 8] ksys_write_[k]
  [ 9] __x64_sys_write_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] write
  [13] sun.nio.ch.FileDispatcherImpl.write0
  [14] sun.nio.ch.FileDispatcherImpl.write
  [15] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [16] sun.nio.ch.IOUtil.write
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.FileChannelImpl.write
  [19] java.nio.channels.Channels.writeFullyImpl
  [20] java.nio.channels.Channels.writeFully
  [21] java.nio.channels.Channels$1.write
  [22] java.io.InputStream.transferTo
  [23] java.nio.file.Files.copy
  [24] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [25] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [26] jdk.nio.zipfs.ZipPath.newFileChannel
  [27] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [28] java.nio.channels.FileChannel.open
  [29] java.nio.channels.FileChannel.open
  [30] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [31] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25648.apply
  [32] cats.effect.IOFiber.$anonfun$8
  [33] cats.effect.IOFiber$$Lambda$279.0x0000000800ddde88.apply
  [34] cats.effect.unsafe.WorkerThread.blockOn
  [35] scala.concurrent.package$.blocking
  [36] cats.effect.IOFiber.runLoop
  [37] cats.effect.IOFiber.execR
  [38] cats.effect.IOFiber.run
  [39] cats.effect.unsafe.WorkerThread.run

--- 400913167 ns (0.04%), 40 samples
  [ 0] is_vmalloc_addr_[k]
  [ 1] spl_kmem_free?[spl]_[k]
  [ 2] dsl_dir_tempreserve_clear?[zfs]_[k]
  [ 3] dmu_tx_commit?[zfs]_[k]
  [ 4] zfs_write?[zfs]_[k]
  [ 5] zpl_iter_write?[zfs]_[k]
  [ 6] new_sync_write_[k]
  [ 7] vfs_write_[k]
  [ 8] ksys_write_[k]
  [ 9] __x64_sys_write_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] write
  [13] sun.nio.ch.FileDispatcherImpl.write0
  [14] sun.nio.ch.FileDispatcherImpl.write
  [15] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [16] sun.nio.ch.IOUtil.write
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.FileChannelImpl.write
  [19] java.nio.channels.Channels.writeFullyImpl
  [20] java.nio.channels.Channels.writeFully
  [21] java.nio.channels.Channels$1.write
  [22] java.io.InputStream.transferTo
  [23] java.nio.file.Files.copy
  [24] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [25] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [26] jdk.nio.zipfs.ZipPath.newFileChannel
  [27] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [28] java.nio.channels.FileChannel.open
  [29] java.nio.channels.FileChannel.open
  [30] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [31] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25648.apply
  [32] cats.effect.IOFiber.$anonfun$8
  [33] cats.effect.IOFiber$$Lambda$279.0x0000000800ddde88.apply
  [34] cats.effect.unsafe.WorkerThread.blockOn
  [35] scala.concurrent.package$.blocking
  [36] cats.effect.IOFiber.runLoop
  [37] cats.effect.IOFiber.execR
  [38] cats.effect.IOFiber.run
  [39] cats.effect.unsafe.WorkerThread.run

--- 400836485 ns (0.04%), 40 samples
  [ 0] void OopOopIterateDispatch<G1CMOopClosure>::Table::oop_oop_iterate<ObjArrayKlass, narrowOop>(G1CMOopClosure*, oopDesc*, Klass*)
  [ 1] void G1CMTask::process_grey_task_entry<true>(G1TaskQueueEntry)
  [ 2] G1CMTask::drain_local_queue(bool) [clone .part.0] [clone .constprop.1]
  [ 3] G1CMTask::do_marking_step(double, bool, bool)
  [ 4] G1CMConcurrentMarkingTask::work(unsigned int)
  [ 5] GangWorker::loop()
  [ 6] GangWorker::run()
  [ 7] Thread::call_run()
  [ 8] thread_native_entry(Thread*)
  [ 9] start_thread

--- 392696146 ns (0.04%), 39 samples
  [ 0] dbuf_find?[zfs]_[k]
  [ 1] dbuf_hold_impl?[zfs]_[k]
  [ 2] dbuf_hold_level?[zfs]_[k]
  [ 3] dbuf_hold?[zfs]_[k]
  [ 4] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 5] dmu_read_uio_dnode?[zfs]_[k]
  [ 6] dmu_read_uio_dbuf?[zfs]_[k]
  [ 7] mappedread?[zfs]_[k]
  [ 8] zfs_read?[zfs]_[k]
  [ 9] zpl_iter_read?[zfs]_[k]
  [10] new_sync_read_[k]
  [11] vfs_read_[k]
  [12] __x64_sys_pread64_[k]
  [13] do_syscall_64_[k]
  [14] entry_SYSCALL_64_after_hwframe_[k]
  [15] __libc_pread64
  [16] sun.nio.ch.FileDispatcherImpl.pread0
  [17] sun.nio.ch.FileDispatcherImpl.pread
  [18] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [19] sun.nio.ch.IOUtil.read
  [20] sun.nio.ch.IOUtil.read
  [21] sun.nio.ch.FileChannelImpl.readInternal
  [22] sun.nio.ch.FileChannelImpl.read
  [23] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [24] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [25] jdk.nio.zipfs.ZipFileSystem$2.fill
  [26] java.util.zip.InflaterInputStream.read
  [27] java.io.InputStream.transferTo
  [28] java.nio.file.Files.copy
  [29] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [30] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [31] jdk.nio.zipfs.ZipPath.newFileChannel
  [32] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [33] java.nio.channels.FileChannel.open
  [34] java.nio.channels.FileChannel.open
  [35] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [36] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25648.apply
  [37] cats.effect.IOFiber.$anonfun$8
  [38] cats.effect.IOFiber$$Lambda$279.0x0000000800ddde88.apply
  [39] cats.effect.unsafe.WorkerThread.blockOn
  [40] scala.concurrent.package$.blocking
  [41] cats.effect.IOFiber.runLoop
  [42] cats.effect.IOFiber.execR
  [43] cats.effect.IOFiber.run
  [44] cats.effect.unsafe.WorkerThread.run

--- 391800678 ns (0.04%), 39 samples
  [ 0] __libc_pread64
  [ 1] sun.nio.ch.FileDispatcherImpl.pread0
  [ 2] sun.nio.ch.FileDispatcherImpl.pread
  [ 3] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [ 4] sun.nio.ch.IOUtil.read
  [ 5] sun.nio.ch.IOUtil.read
  [ 6] sun.nio.ch.FileChannelImpl.readInternal
  [ 7] sun.nio.ch.FileChannelImpl.read
  [ 8] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [ 9] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [10] jdk.nio.zipfs.ZipFileSystem$2.fill
  [11] java.util.zip.InflaterInputStream.read
  [12] java.io.InputStream.transferTo
  [13] java.nio.file.Files.copy
  [14] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [15] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [16] jdk.nio.zipfs.ZipPath.newFileChannel
  [17] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [18] java.nio.channels.FileChannel.open
  [19] java.nio.channels.FileChannel.open
  [20] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [21] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25648.apply
  [22] cats.effect.IOFiber.$anonfun$8
  [23] cats.effect.IOFiber$$Lambda$279.0x0000000800ddde88.apply
  [24] cats.effect.unsafe.WorkerThread.blockOn
  [25] scala.concurrent.package$.blocking
  [26] cats.effect.IOFiber.runLoop
  [27] cats.effect.IOFiber.execR
  [28] cats.effect.IOFiber.run
  [29] cats.effect.unsafe.WorkerThread.run

--- 391320467 ns (0.04%), 39 samples
  [ 0] metaslab_class_get_dspace?[zfs]_[k]
  [ 1] spa_get_slop_space?[zfs]_[k]
  [ 2] dsl_pool_adjustedsize?[zfs]_[k]
  [ 3] dsl_pool_unreserved_space?[zfs]_[k]
  [ 4] dsl_dir_tempreserve_impl.constprop.0?[zfs]_[k]
  [ 5] dsl_dir_tempreserve_space?[zfs]_[k]
  [ 6] dmu_tx_try_assign?[zfs]_[k]
  [ 7] dmu_tx_assign?[zfs]_[k]
  [ 8] zfs_write?[zfs]_[k]
  [ 9] zpl_iter_write?[zfs]_[k]
  [10] new_sync_write_[k]
  [11] vfs_write_[k]
  [12] ksys_write_[k]
  [13] __x64_sys_write_[k]
  [14] do_syscall_64_[k]
  [15] entry_SYSCALL_64_after_hwframe_[k]
  [16] write
  [17] sun.nio.ch.FileDispatcherImpl.write0
  [18] sun.nio.ch.FileDispatcherImpl.write
  [19] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [20] sun.nio.ch.IOUtil.write
  [21] sun.nio.ch.IOUtil.write
  [22] sun.nio.ch.FileChannelImpl.write
  [23] java.nio.channels.Channels.writeFullyImpl
  [24] java.nio.channels.Channels.writeFully
  [25] java.nio.channels.Channels$1.write
  [26] java.io.InputStream.transferTo
  [27] java.nio.file.Files.copy
  [28] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [29] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [30] jdk.nio.zipfs.ZipPath.newFileChannel
  [31] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [32] java.nio.channels.FileChannel.open
  [33] java.nio.channels.FileChannel.open
  [34] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [35] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25648.apply
  [36] cats.effect.IOFiber.$anonfun$8
  [37] cats.effect.IOFiber$$Lambda$279.0x0000000800ddde88.apply
  [38] cats.effect.unsafe.WorkerThread.blockOn
  [39] scala.concurrent.package$.blocking
  [40] cats.effect.IOFiber.runLoop
  [41] cats.effect.IOFiber.execR
  [42] cats.effect.IOFiber.run
  [43] cats.effect.unsafe.WorkerThread.run

--- 391257817 ns (0.04%), 39 samples
  [ 0] sa_attr_op?[zfs]_[k]
  [ 1] sa_lookup_impl?[zfs]_[k]
  [ 2] sa_lookup_locked?[zfs]_[k]
  [ 3] sa_lookup?[zfs]_[k]
  [ 4] zfs_log_write?[zfs]_[k]
  [ 5] zfs_write?[zfs]_[k]
  [ 6] zpl_iter_write?[zfs]_[k]
  [ 7] new_sync_write_[k]
  [ 8] vfs_write_[k]
  [ 9] ksys_write_[k]
  [10] __x64_sys_write_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] write
  [14] sun.nio.ch.FileDispatcherImpl.write0
  [15] sun.nio.ch.FileDispatcherImpl.write
  [16] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.FileChannelImpl.write
  [20] java.nio.channels.Channels.writeFullyImpl
  [21] java.nio.channels.Channels.writeFully
  [22] java.nio.channels.Channels$1.write
  [23] java.io.InputStream.transferTo
  [24] java.nio.file.Files.copy
  [25] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [26] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [27] jdk.nio.zipfs.ZipPath.newFileChannel
  [28] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [29] java.nio.channels.FileChannel.open
  [30] java.nio.channels.FileChannel.open
  [31] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [32] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25648.apply
  [33] cats.effect.IOFiber.$anonfun$8
  [34] cats.effect.IOFiber$$Lambda$279.0x0000000800ddde88.apply
  [35] cats.effect.unsafe.WorkerThread.blockOn
  [36] scala.concurrent.package$.blocking
  [37] cats.effect.IOFiber.runLoop
  [38] cats.effect.IOFiber.execR
  [39] cats.effect.IOFiber.run
  [40] cats.effect.unsafe.WorkerThread.run

--- 391056530 ns (0.04%), 39 samples
  [ 0] __rcu_read_lock_[k]
  [ 1] refill_obj_stock_[k]
  [ 2] obj_cgroup_charge_[k]
  [ 3] __kmalloc_[k]
  [ 4] inotify_handle_inode_event_[k]
  [ 5] fsnotify_handle_inode_event.isra.0_[k]
  [ 6] send_to_group_[k]
  [ 7] fsnotify_[k]
  [ 8] __fsnotify_parent_[k]
  [ 9] vfs_write_[k]
  [10] ksys_write_[k]
  [11] __x64_sys_write_[k]
  [12] do_syscall_64_[k]
  [13] entry_SYSCALL_64_after_hwframe_[k]
  [14] write
  [15] sun.nio.ch.FileDispatcherImpl.write0
  [16] sun.nio.ch.FileDispatcherImpl.write
  [17] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.IOUtil.write
  [20] sun.nio.ch.FileChannelImpl.write
  [21] java.nio.channels.Channels.writeFullyImpl
  [22] java.nio.channels.Channels.writeFully
  [23] java.nio.channels.Channels$1.write
  [24] java.io.InputStream.transferTo
  [25] java.nio.file.Files.copy
  [26] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [27] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [28] jdk.nio.zipfs.ZipPath.newFileChannel
  [29] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [30] java.nio.channels.FileChannel.open
  [31] java.nio.channels.FileChannel.open
  [32] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [33] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25648.apply
  [34] cats.effect.IOFiber.$anonfun$8
  [35] cats.effect.IOFiber$$Lambda$279.0x0000000800ddde88.apply
  [36] cats.effect.unsafe.WorkerThread.blockOn
  [37] scala.concurrent.package$.blocking
  [38] cats.effect.IOFiber.runLoop
  [39] cats.effect.IOFiber.execR
  [40] cats.effect.IOFiber.run
  [41] cats.effect.unsafe.WorkerThread.run

--- 390976023 ns (0.04%), 39 samples
  [ 0] mutex_lock_[k]
  [ 1] zil_itx_assign?[zfs]_[k]
  [ 2] zfs_log_write?[zfs]_[k]
  [ 3] zfs_write?[zfs]_[k]
  [ 4] zpl_iter_write?[zfs]_[k]
  [ 5] new_sync_write_[k]
  [ 6] vfs_write_[k]
  [ 7] ksys_write_[k]
  [ 8] __x64_sys_write_[k]
  [ 9] do_syscall_64_[k]
  [10] entry_SYSCALL_64_after_hwframe_[k]
  [11] write
  [12] sun.nio.ch.FileDispatcherImpl.write0
  [13] sun.nio.ch.FileDispatcherImpl.write
  [14] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [15] sun.nio.ch.IOUtil.write
  [16] sun.nio.ch.IOUtil.write
  [17] sun.nio.ch.FileChannelImpl.write
  [18] java.nio.channels.Channels.writeFullyImpl
  [19] java.nio.channels.Channels.writeFully
  [20] java.nio.channels.Channels$1.write
  [21] java.io.InputStream.transferTo
  [22] java.nio.file.Files.copy
  [23] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [24] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [25] jdk.nio.zipfs.ZipPath.newFileChannel
  [26] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [27] java.nio.channels.FileChannel.open
  [28] java.nio.channels.FileChannel.open
  [29] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [30] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25648.apply
  [31] cats.effect.IOFiber.$anonfun$8
  [32] cats.effect.IOFiber$$Lambda$279.0x0000000800ddde88.apply
  [33] cats.effect.unsafe.WorkerThread.blockOn
  [34] scala.concurrent.package$.blocking
  [35] cats.effect.IOFiber.runLoop
  [36] cats.effect.IOFiber.execR
  [37] cats.effect.IOFiber.run
  [38] cats.effect.unsafe.WorkerThread.run

--- 390953395 ns (0.04%), 39 samples
  [ 0] sa_handle_object?[zfs]_[k]
  [ 1] zfs_write?[zfs]_[k]
  [ 2] zpl_iter_write?[zfs]_[k]
  [ 3] new_sync_write_[k]
  [ 4] vfs_write_[k]
  [ 5] ksys_write_[k]
  [ 6] __x64_sys_write_[k]
  [ 7] do_syscall_64_[k]
  [ 8] entry_SYSCALL_64_after_hwframe_[k]
  [ 9] write
  [10] sun.nio.ch.FileDispatcherImpl.write0
  [11] sun.nio.ch.FileDispatcherImpl.write
  [12] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [13] sun.nio.ch.IOUtil.write
  [14] sun.nio.ch.IOUtil.write
  [15] sun.nio.ch.FileChannelImpl.write
  [16] java.nio.channels.Channels.writeFullyImpl
  [17] java.nio.channels.Channels.writeFully
  [18] java.nio.channels.Channels$1.write
  [19] java.io.InputStream.transferTo
  [20] java.nio.file.Files.copy
  [21] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [22] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [23] jdk.nio.zipfs.ZipPath.newFileChannel
  [24] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [25] java.nio.channels.FileChannel.open
  [26] java.nio.channels.FileChannel.open
  [27] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [28] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25648.apply
  [29] cats.effect.IOFiber.$anonfun$8
  [30] cats.effect.IOFiber$$Lambda$279.0x0000000800ddde88.apply
  [31] cats.effect.unsafe.WorkerThread.blockOn
  [32] scala.concurrent.package$.blocking
  [33] cats.effect.IOFiber.runLoop
  [34] cats.effect.IOFiber.execR
  [35] cats.effect.IOFiber.run
  [36] cats.effect.unsafe.WorkerThread.run

--- 390846532 ns (0.04%), 39 samples
  [ 0] jni_GetPrimitiveArrayCritical
  [ 1] java.util.zip.Inflater.inflateBytesBytes
  [ 2] java.util.zip.Inflater.inflate
  [ 3] java.util.zip.InflaterInputStream.read
  [ 4] java.io.InputStream.transferTo
  [ 5] java.nio.file.Files.copy
  [ 6] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [ 7] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [ 8] jdk.nio.zipfs.ZipPath.newFileChannel
  [ 9] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [10] java.nio.channels.FileChannel.open
  [11] java.nio.channels.FileChannel.open
  [12] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [13] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25648.apply
  [14] cats.effect.IOFiber.$anonfun$8
  [15] cats.effect.IOFiber$$Lambda$279.0x0000000800ddde88.apply
  [16] cats.effect.unsafe.WorkerThread.blockOn
  [17] scala.concurrent.package$.blocking
  [18] cats.effect.IOFiber.runLoop
  [19] cats.effect.IOFiber.execR
  [20] cats.effect.IOFiber.run
  [21] cats.effect.unsafe.WorkerThread.run

--- 390605046 ns (0.04%), 39 samples
  [ 0] jshort_disjoint_arraycopy
  [ 1] jdk.internal.misc.Unsafe.copyMemory0
  [ 2] jdk.internal.misc.Unsafe.copyMemory
  [ 3] jdk.internal.misc.ScopedMemoryAccess.copyMemoryInternal
  [ 4] jdk.internal.misc.ScopedMemoryAccess.copyMemory
  [ 5] java.nio.ByteBuffer.putBuffer
  [ 6] java.nio.ByteBuffer.put
  [ 7] sun.nio.ch.IOUtil.write
  [ 8] sun.nio.ch.IOUtil.write
  [ 9] sun.nio.ch.FileChannelImpl.write
  [10] java.nio.channels.Channels.writeFullyImpl
  [11] java.nio.channels.Channels.writeFully
  [12] java.nio.channels.Channels$1.write
  [13] java.io.InputStream.transferTo
  [14] java.nio.file.Files.copy
  [15] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [16] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [17] jdk.nio.zipfs.ZipPath.newFileChannel
  [18] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [19] java.nio.channels.FileChannel.open
  [20] java.nio.channels.FileChannel.open
  [21] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [22] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25648.apply
  [23] cats.effect.IOFiber.$anonfun$8
  [24] cats.effect.IOFiber$$Lambda$279.0x0000000800ddde88.apply
  [25] cats.effect.unsafe.WorkerThread.blockOn
  [26] scala.concurrent.package$.blocking
  [27] cats.effect.IOFiber.runLoop
  [28] cats.effect.IOFiber.execR
  [29] cats.effect.IOFiber.run
  [30] cats.effect.unsafe.WorkerThread.run

--- 381767243 ns (0.04%), 38 samples
  [ 0] down_read_[k]
  [ 1] dbuf_find?[zfs]_[k]
  [ 2] dbuf_hold_impl?[zfs]_[k]
  [ 3] dbuf_hold_level?[zfs]_[k]
  [ 4] dmu_tx_check_ioerr?[zfs]_[k]
  [ 5] dmu_tx_count_write?[zfs]_[k]
  [ 6] dmu_tx_hold_write_by_dnode?[zfs]_[k]
  [ 7] zfs_write?[zfs]_[k]
  [ 8] zpl_iter_write?[zfs]_[k]
  [ 9] new_sync_write_[k]
  [10] vfs_write_[k]
  [11] ksys_write_[k]
  [12] __x64_sys_write_[k]
  [13] do_syscall_64_[k]
  [14] entry_SYSCALL_64_after_hwframe_[k]
  [15] write
  [16] sun.nio.ch.FileDispatcherImpl.write0
  [17] sun.nio.ch.FileDispatcherImpl.write
  [18] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [19] sun.nio.ch.IOUtil.write
  [20] sun.nio.ch.IOUtil.write
  [21] sun.nio.ch.FileChannelImpl.write
  [22] java.nio.channels.Channels.writeFullyImpl
  [23] java.nio.channels.Channels.writeFully
  [24] java.nio.channels.Channels$1.write
  [25] java.io.InputStream.transferTo
  [26] java.nio.file.Files.copy
  [27] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [28] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [29] jdk.nio.zipfs.ZipPath.newFileChannel
  [30] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [31] java.nio.channels.FileChannel.open
  [32] java.nio.channels.FileChannel.open
  [33] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [34] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25648.apply
  [35] cats.effect.IOFiber.$anonfun$8
  [36] cats.effect.IOFiber$$Lambda$279.0x0000000800ddde88.apply
  [37] cats.effect.unsafe.WorkerThread.blockOn
  [38] scala.concurrent.package$.blocking
  [39] cats.effect.IOFiber.runLoop
  [40] cats.effect.IOFiber.execR
  [41] cats.effect.IOFiber.run
  [42] cats.effect.unsafe.WorkerThread.run

--- 381643902 ns (0.04%), 38 samples
  [ 0] __handle_mm_fault_[k]
  [ 1] handle_mm_fault_[k]
  [ 2] do_user_addr_fault_[k]
  [ 3] exc_page_fault_[k]
  [ 4] asm_exc_page_fault_[k]
  [ 5] __memset_avx2_unaligned_erms
  [ 6] MemAllocator::allocate() const
  [ 7] TypeArrayKlass::allocate_common(int, bool, JavaThread*)
  [ 8] JVMCIRuntime::new_array_common(JavaThread*, Klass*, int, bool)
  [ 9] fs2.Chunk.toArray
  [10] com.scalamandra.ZipLib$.$anonfun$1
  [11] com.scalamandra.ZipLib$$$Lambda$325.0x0000000800df40b8.apply
  [12] scala.Option.map
  [13] com.scalamandra.ZipLib$.com$scalamandra$ZipLib$$anon$1$$_$fs2ReadAllBytes$$anonfun$1$$anonfun$1$$anonfun$2$$anonfun$1
  [14] com.scalamandra.ZipLib$$anon$1$$Lambda$322.0x0000000800dedc48.apply
  [15] cats.effect.IOFiber.succeeded
  [16] cats.effect.IOFiber.runLoop
  [17] cats.effect.IOFiber.execR
  [18] cats.effect.IOFiber.run
  [19] cats.effect.unsafe.WorkerThread.run

--- 381230758 ns (0.04%), 38 samples
  [ 0] zfs_rangelock_exit?[zfs]_[k]
  [ 1] zfs_write?[zfs]_[k]
  [ 2] zpl_iter_write?[zfs]_[k]
  [ 3] new_sync_write_[k]
  [ 4] vfs_write_[k]
  [ 5] ksys_write_[k]
  [ 6] __x64_sys_write_[k]
  [ 7] do_syscall_64_[k]
  [ 8] entry_SYSCALL_64_after_hwframe_[k]
  [ 9] write
  [10] sun.nio.ch.FileDispatcherImpl.write0
  [11] sun.nio.ch.FileDispatcherImpl.write
  [12] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [13] sun.nio.ch.IOUtil.write
  [14] sun.nio.ch.IOUtil.write
  [15] sun.nio.ch.FileChannelImpl.write
  [16] java.nio.channels.Channels.writeFullyImpl
  [17] java.nio.channels.Channels.writeFully
  [18] java.nio.channels.Channels$1.write
  [19] java.io.InputStream.transferTo
  [20] java.nio.file.Files.copy
  [21] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [22] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [23] jdk.nio.zipfs.ZipPath.newFileChannel
  [24] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [25] java.nio.channels.FileChannel.open
  [26] java.nio.channels.FileChannel.open
  [27] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [28] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25648.apply
  [29] cats.effect.IOFiber.$anonfun$8
  [30] cats.effect.IOFiber$$Lambda$279.0x0000000800ddde88.apply
  [31] cats.effect.unsafe.WorkerThread.blockOn
  [32] scala.concurrent.package$.blocking
  [33] cats.effect.IOFiber.runLoop
  [34] cats.effect.IOFiber.execR
  [35] cats.effect.IOFiber.run
  [36] cats.effect.unsafe.WorkerThread.run

--- 381203747 ns (0.04%), 38 samples
  [ 0] _raw_spin_lock_[k]
  [ 1] dsl_dir_tempreserve_space?[zfs]_[k]
  [ 2] dmu_tx_try_assign?[zfs]_[k]
  [ 3] dmu_tx_assign?[zfs]_[k]
  [ 4] zfs_write?[zfs]_[k]
  [ 5] zpl_iter_write?[zfs]_[k]
  [ 6] new_sync_write_[k]
  [ 7] vfs_write_[k]
  [ 8] ksys_write_[k]
  [ 9] __x64_sys_write_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] write
  [13] sun.nio.ch.FileDispatcherImpl.write0
  [14] sun.nio.ch.FileDispatcherImpl.write
  [15] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [16] sun.nio.ch.IOUtil.write
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.FileChannelImpl.write
  [19] java.nio.channels.Channels.writeFullyImpl
  [20] java.nio.channels.Channels.writeFully
  [21] java.nio.channels.Channels$1.write
  [22] java.io.InputStream.transferTo
  [23] java.nio.file.Files.copy
  [24] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [25] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [26] jdk.nio.zipfs.ZipPath.newFileChannel
  [27] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [28] java.nio.channels.FileChannel.open
  [29] java.nio.channels.FileChannel.open
  [30] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [31] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25648.apply
  [32] cats.effect.IOFiber.$anonfun$8
  [33] cats.effect.IOFiber$$Lambda$279.0x0000000800ddde88.apply
  [34] cats.effect.unsafe.WorkerThread.blockOn
  [35] scala.concurrent.package$.blocking
  [36] cats.effect.IOFiber.runLoop
  [37] cats.effect.IOFiber.execR
  [38] cats.effect.IOFiber.run
  [39] cats.effect.unsafe.WorkerThread.run

--- 381202953 ns (0.04%), 38 samples
  [ 0] memset_[k]
  [ 1] spl_kmem_alloc_impl?[spl]_[k]
  [ 2] spl_kmem_alloc?[spl]_[k]
  [ 3] zfs_rangelock_enter_impl?[zfs]_[k]
  [ 4] zfs_rangelock_enter?[zfs]_[k]
  [ 5] zfs_write?[zfs]_[k]
  [ 6] zpl_iter_write?[zfs]_[k]
  [ 7] new_sync_write_[k]
  [ 8] vfs_write_[k]
  [ 9] ksys_write_[k]
  [10] __x64_sys_write_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] write
  [14] sun.nio.ch.FileDispatcherImpl.write0
  [15] sun.nio.ch.FileDispatcherImpl.write
  [16] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.FileChannelImpl.write
  [20] java.nio.channels.Channels.writeFullyImpl
  [21] java.nio.channels.Channels.writeFully
  [22] java.nio.channels.Channels$1.write
  [23] java.io.InputStream.transferTo
  [24] java.nio.file.Files.copy
  [25] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [26] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [27] jdk.nio.zipfs.ZipPath.newFileChannel
  [28] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [29] java.nio.channels.FileChannel.open
  [30] java.nio.channels.FileChannel.open
  [31] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [32] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25648.apply
  [33] cats.effect.IOFiber.$anonfun$8
  [34] cats.effect.IOFiber$$Lambda$279.0x0000000800ddde88.apply
  [35] cats.effect.unsafe.WorkerThread.blockOn
  [36] scala.concurrent.package$.blocking
  [37] cats.effect.IOFiber.runLoop
  [38] cats.effect.IOFiber.execR
  [39] cats.effect.IOFiber.run
  [40] cats.effect.unsafe.WorkerThread.run

--- 381191204 ns (0.04%), 38 samples
  [ 0] kill_fasync_[k]
  [ 1] inotify_handle_inode_event_[k]
  [ 2] fsnotify_handle_inode_event.isra.0_[k]
  [ 3] send_to_group_[k]
  [ 4] fsnotify_[k]
  [ 5] __fsnotify_parent_[k]
  [ 6] vfs_write_[k]
  [ 7] ksys_write_[k]
  [ 8] __x64_sys_write_[k]
  [ 9] do_syscall_64_[k]
  [10] entry_SYSCALL_64_after_hwframe_[k]
  [11] write
  [12] sun.nio.ch.FileDispatcherImpl.write0
  [13] sun.nio.ch.FileDispatcherImpl.write
  [14] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [15] sun.nio.ch.IOUtil.write
  [16] sun.nio.ch.IOUtil.write
  [17] sun.nio.ch.FileChannelImpl.write
  [18] java.nio.channels.Channels.writeFullyImpl
  [19] java.nio.channels.Channels.writeFully
  [20] java.nio.channels.Channels$1.write
  [21] java.io.InputStream.transferTo
  [22] java.nio.file.Files.copy
  [23] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [24] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [25] jdk.nio.zipfs.ZipPath.newFileChannel
  [26] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [27] java.nio.channels.FileChannel.open
  [28] java.nio.channels.FileChannel.open
  [29] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [30] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25648.apply
  [31] cats.effect.IOFiber.$anonfun$8
  [32] cats.effect.IOFiber$$Lambda$279.0x0000000800ddde88.apply
  [33] cats.effect.unsafe.WorkerThread.blockOn
  [34] scala.concurrent.package$.blocking
  [35] cats.effect.IOFiber.runLoop
  [36] cats.effect.IOFiber.execR
  [37] cats.effect.IOFiber.run
  [38] cats.effect.unsafe.WorkerThread.run

--- 380973650 ns (0.04%), 38 samples
  [ 0] should_failslab_[k]
  [ 1] inotify_handle_inode_event_[k]
  [ 2] fsnotify_handle_inode_event.isra.0_[k]
  [ 3] send_to_group_[k]
  [ 4] fsnotify_[k]
  [ 5] __fsnotify_parent_[k]
  [ 6] vfs_write_[k]
  [ 7] ksys_write_[k]
  [ 8] __x64_sys_write_[k]
  [ 9] do_syscall_64_[k]
  [10] entry_SYSCALL_64_after_hwframe_[k]
  [11] write
  [12] sun.nio.ch.FileDispatcherImpl.write0
  [13] sun.nio.ch.FileDispatcherImpl.write
  [14] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [15] sun.nio.ch.IOUtil.write
  [16] sun.nio.ch.IOUtil.write
  [17] sun.nio.ch.FileChannelImpl.write
  [18] java.nio.channels.Channels.writeFullyImpl
  [19] java.nio.channels.Channels.writeFully
  [20] java.nio.channels.Channels$1.write
  [21] java.io.InputStream.transferTo
  [22] java.nio.file.Files.copy
  [23] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [24] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [25] jdk.nio.zipfs.ZipPath.newFileChannel
  [26] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [27] java.nio.channels.FileChannel.open
  [28] java.nio.channels.FileChannel.open
  [29] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [30] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25648.apply
  [31] cats.effect.IOFiber.$anonfun$8
  [32] cats.effect.IOFiber$$Lambda$279.0x0000000800ddde88.apply
  [33] cats.effect.unsafe.WorkerThread.blockOn
  [34] scala.concurrent.package$.blocking
  [35] cats.effect.IOFiber.runLoop
  [36] cats.effect.IOFiber.execR
  [37] cats.effect.IOFiber.run
  [38] cats.effect.unsafe.WorkerThread.run

--- 380941012 ns (0.04%), 38 samples
  [ 0] zfs_read?[zfs]_[k]
  [ 1] zpl_iter_read?[zfs]_[k]
  [ 2] new_sync_read_[k]
  [ 3] vfs_read_[k]
  [ 4] __x64_sys_pread64_[k]
  [ 5] do_syscall_64_[k]
  [ 6] entry_SYSCALL_64_after_hwframe_[k]
  [ 7] __libc_pread64
  [ 8] sun.nio.ch.FileDispatcherImpl.pread0
  [ 9] sun.nio.ch.FileDispatcherImpl.pread
  [10] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [11] sun.nio.ch.IOUtil.read
  [12] sun.nio.ch.IOUtil.read
  [13] sun.nio.ch.FileChannelImpl.readInternal
  [14] sun.nio.ch.FileChannelImpl.read
  [15] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [16] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [17] jdk.nio.zipfs.ZipFileSystem$2.fill
  [18] java.util.zip.InflaterInputStream.read
  [19] java.io.InputStream.transferTo
  [20] java.nio.file.Files.copy
  [21] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [22] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [23] jdk.nio.zipfs.ZipPath.newFileChannel
  [24] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [25] java.nio.channels.FileChannel.open
  [26] java.nio.channels.FileChannel.open
  [27] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [28] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d25648.apply
  [29] cats.effect.IOFiber.$anonfun$8
  [30] cats.effect.IOFiber$$Lambda$279.0x0000000800ddde88.apply
  [31] cats.effect.unsafe.WorkerThread.blockOn
  [32] scala.concurrent.package$.blocking
  [33] cats.effect.IOFiber.runLoop
  [34] cats.effect.IOFiber.execR
  [35] cats.effect.IOFiber.run
  [36] cats.effect.unsafe.WorkerThread.run

          ns  percent  samples  top
  ----------  -------  -------  ---
378095776747   38.14%    37731  /usr/lib/x86_64-linux-gnu/libz.so.1.2.11
 53347903393    5.38%     5319  _raw_spin_unlock_irqrestore_[k]
 31030809557    3.13%     3091  copy_user_generic_string_[k]
 30507063979    3.08%     3041  __memset_avx2_unaligned_erms
 22410816200    2.26%     2236  inflate
 20028366356    2.02%     1996  memset_[k]
 17535051332    1.77%     1748  jbyte_disjoint_arraycopy
 16936820140    1.71%     1689  java.lang.System.arraycopy
 16811969129    1.70%     1676  java.util.Arrays.copyOfRange
 13954244362    1.41%     1390  clear_page_rep_[k]
 10946074261    1.10%     1091  mutex_lock_[k]
 10029298006    1.01%     1000  java.lang.StringCoding.hasNegatives
  8865457432    0.89%      884  _raw_spin_lock_[k]
  7830215162    0.79%      780  do_user_addr_fault_[k]
  7382245516    0.74%      736  mutex_unlock_[k]
  7089778759    0.72%      707  refill_stock_[k]
  6701341005    0.68%      668  jlong_disjoint_arraycopy
  6405301464    0.65%      638  find_vmap_area_[k]
  6151834845    0.62%      613  __kmalloc_node_[k]
  5444503761    0.55%      543  __memmove_avx_unaligned_erms
  5350724129    0.54%      533  kfree_[k]
  5348698073    0.54%      533  fsnotify_[k]
  5124417423    0.52%      511  refill_obj_stock_[k]
  4682284666    0.47%      467  page_counter_try_charge_[k]
  4394174594    0.44%      438  send_to_group_[k]
  4023350535    0.41%      401  memcg_slab_post_alloc_hook_[k]
  3954101582    0.40%      394  kmem_cache_free_[k]
  3843450813    0.39%      383  percpu_counter_add_batch_[k]
  3440591625    0.35%      343  native_queued_spin_lock_slowpath.part.0_[k]
  3361157851    0.34%      335  try_charge_memcg_[k]
  3047580131    0.31%      304  __rcu_read_lock_[k]
  2860345687    0.29%      285  kmem_cache_alloc_[k]
  2831205571    0.29%      282  zfs_write?[zfs]_[k]
  2731337020    0.28%      272  rmqueue_pcplist.constprop.0_[k]
  2698561947    0.27%      269  zio_create?[zfs]_[k]
  2559813692    0.26%      255  inotify_handle_inode_event_[k]
  2386242692    0.24%      238  __kmalloc_[k]
  2307205135    0.23%      230  _raw_spin_unlock_[k]
  2257227764    0.23%      225  sa_attr_op?[zfs]_[k]
  2237221599    0.23%      223  zio_wait?[zfs]_[k]
  2182376167    0.22%      217  free_unref_page_list_[k]
  2156802229    0.22%      215  memmove_[k]
  2136036242    0.22%      213  __get_obj_cgroup_from_memcg_[k]
  2105338522    0.21%      210  __rcu_read_unlock_[k]
  2057069869    0.21%      205  zrl_add_impl?[zfs]_[k]
  2055227226    0.21%      205  mod_memcg_state_[k]
  2039070001    0.21%      203  dbuf_find?[zfs]_[k]
  1956718941    0.20%      195  zil_aitx_compare?[zfs]_[k]
  1876506045    0.19%      187  __cond_resched_[k]
  1856607730    0.19%      185  __handle_mm_fault_[k]
  1855476560    0.19%      185  vfs_write_[k]
  1826450018    0.18%      182  down_read_[k]
  1814444040    0.18%      181  dsl_dir_tempreserve_impl.constprop.0?[zfs]_[k]
  1804821691    0.18%      180  write
  1743826607    0.18%      174  void OopOopIterateDispatch<G1CMOopClosure>::Table::oop_oop_iterate<InstanceKlass, narrowOop>(G1CMOopClosure*, oopDesc*, Klass*)
  1734888737    0.18%      173  dmu_buf_hold_array_by_dnode?[zfs]_[k]
  1731384192    0.17%      171  __schedule_[k]
  1726289467    0.17%      172  spl_mutex_clear_owner?[zfs]_[k]
  1634799020    0.16%      163  __fget_light_[k]
  1626093896    0.16%      162  zio_done?[zfs]_[k]
  1615310879    0.16%      161  dmu_tx_try_assign?[zfs]_[k]
  1593663301    0.16%      159  syscall_enter_from_user_mode_[k]
  1584455345    0.16%      158  kmalloc_slab_[k]
  1566172068    0.16%      155  do_anonymous_page_[k]
  1543799534    0.16%      154  strcpy_[k]
  1525482881    0.15%      152  spl_kmem_cache_alloc?[spl]_[k]
  1524489472    0.15%      152  spl_mutex_set_owner?[zfs]_[k]
  1514936684    0.15%      151  __list_del_entry?[zfs]_[k]
  1465409316    0.15%      146  fsnotify_insert_event_[k]
  1454335539    0.15%      145  dbuf_rele_and_unlock?[zfs]_[k]
  1444494884    0.15%      144  arc_buf_access?[zfs]_[k]
  1422323051    0.14%      142  jni_GetPrimitiveArrayCritical
  1412898922    0.14%      141  sun.nio.ch.FileDispatcherImpl.write0
  1403449066    0.14%      140  list_head?[zfs]_[k]
  1384713293    0.14%      138  up_read_[k]
  1384278236    0.14%      138  ___slab_alloc_[k]
  1374782050    0.14%      137  read_tsc_[k]
  1344006567    0.14%      134  zfs_log_write?[zfs]_[k]
  1313824617    0.13%      131  __x86_return_thunk_[k]
  1293055358    0.13%      129  inotify_merge_[k]
  1282637134    0.13%      128  obj_cgroup_charge_[k]
  1253879600    0.13%      125  __cv_broadcast?[spl]_[k]
  1243739430    0.13%      124  dbuf_read?[zfs]_[k]
  1224455900    0.12%      122  dmu_zfetch_prepare?[zfs]_[k]
  1224399319    0.12%      122  charge_memcg_[k]
  1222946433    0.12%      122  dbuf_hold_impl?[zfs]_[k]
  1203206851    0.12%      120  dsl_dir_phys?[zfs]_[k]
  1194297040    0.12%      119  cityhash4?[zcommon]_[k]
  1174793460    0.12%      117  zio_ready?[zfs]_[k]
  1163514233    0.12%      116  should_failslab_[k]
  1153353410    0.12%      115  zrl_remove?[zfs]_[k]
  1124516088    0.11%      112  __list_add?[zfs]_[k]
  1063245324    0.11%      106  list_del?[zfs]_[k]
  1054173689    0.11%      105  memcg_slab_free_hook_[k]
  1044234696    0.11%      104  apparmor_file_permission_[k]
  1043404965    0.11%      104  rwsem_optimistic_spin_[k]
  1032591217    0.10%      103  void OopOopIterateDispatch<G1CMOopClosure>::Table::oop_oop_iterate<ObjArrayKlass, narrowOop>(G1CMOopClosure*, oopDesc*, Klass*)
  1011522684    0.10%      101  rwsem_spin_on_owner_[k]
  1002583689    0.10%      100  jni_ReleasePrimitiveArrayCritical
   993611027    0.10%       99  avl_find?[zavl]_[k]
   983442310    0.10%       98  spl_kmem_cache_free?[spl]_[k]
   982996501    0.10%       98  zpl_iter_write?[zfs]_[k]
   963659738    0.10%       96  zio_wait_for_children?[zfs]_[k]
   954093001    0.10%       95  fault_in_readable_[k]
   942618698    0.10%       94  __fsnotify_parent_[k]
   924421799    0.09%       92  handle_mm_fault_[k]
   923672909    0.09%       92  dbuf_read_verify_dnode_crypt?[zfs]_[k]
   923229071    0.09%       92  consume_stock_[k]
   922387019    0.09%       92  is_vmalloc_addr_[k]
   902756671    0.09%       90  arch_atomic64_sub_return.constprop.0?[zfs]_[k]
   893422208    0.09%       89  __alloc_pages_[k]
   883475836    0.09%       88  list_empty?[zfs]_[k]
   883010110    0.09%       88  kmem_flags_convert?[spl]_[k]
   883009733    0.09%       88  list_is_empty?[zfs]_[k]
   873338159    0.09%       87  ktime_get_raw_ts64_[k]
   868991304    0.09%       87  zap_pte_range_[k]
   853495414    0.09%       85  blk_cgroup_congested_[k]
   853207876    0.09%       85  spl_kmem_alloc_impl?[spl]_[k]
   852438560    0.09%       85  dbuf_find_dirty_lte?[zfs]_[k]
   842973732    0.09%       84  list_insert_tail?[zfs]_[k]
   842228809    0.08%       84  dsl_dir_tempreserve_clear?[zfs]_[k]
   832866249    0.08%       83  __mod_lruvec_page_state_[k]
   812578253    0.08%       81  get_obj_cgroup_from_current_[k]
   812416597    0.08%       81  HeapRegionManager::find_contiguous_in_free_list(unsigned int)
   792341609    0.08%       79  dmu_tx_count_write?[zfs]_[k]
   792283565    0.08%       79  RW_WRITE_HELD?[zfs]_[k]
   782771372    0.08%       78  list_create.constprop.0?[zfs]_[k]
   782057284    0.08%       78  java.nio.Buffer.position
   761669654    0.08%       76  consume_obj_stock_[k]
   753220757    0.08%       75  Java_java_util_zip_Inflater_inflateBytesBytes
   753169285    0.08%       75  arch_atomic64_read?[zfs]_[k]
   742603740    0.07%       74  __list_del?[zfs]_[k]
   731946425    0.07%       73  lockref_get_not_zero_[k]
   723232445    0.07%       72  dmu_tx_hold_sa?[zfs]_[k]
   722227162    0.07%       72  get_page_from_freelist_[k]
   722197663    0.07%       72  mod_objcg_state_[k]
   713098960    0.07%       71  count_memcg_events.constprop.0_[k]
   712388477    0.07%       71  vdev_stat_update?[zfs]_[k]
   702803110    0.07%       70  handle_pte_fault_[k]
   701886734    0.07%       70  avl_remove?[zavl]_[k]
   693625104    0.07%       69  __wake_up_common_lock_[k]
   692231713    0.07%       69  zio_walk_parents?[zfs]_[k]
   691859207    0.07%       69  propagate_protected_usage_[k]
   682217173    0.07%       68  dbuf_redirty?[zfs]_[k]
   682003294    0.07%       68  txg_list_add?[zfs]_[k]
   681810188    0.07%       68  void OopOopIterateDispatch<G1RebuildRemSetClosure>::Table::oop_oop_iterate<InstanceKlass, narrowOop>(G1RebuildRemSetClosure*, oopDesc*, Klass*)
   672399077    0.07%       67  zfs_uiomove_iter?[zfs]_[k]
   663316844    0.07%       66  arc_tempreserve_space?[zfs]_[k]
   663029245    0.07%       66  java.util.zip.Inflater.inflateBytesBytes
   661709880    0.07%       66  G1RebuildRemSetTask::G1RebuildRemSetHeapRegionClosure::do_heap_region(HeapRegion*)
   652037645    0.07%       65  zfs_rangelock_exit?[zfs]_[k]
   631906078    0.06%       63  dmu_tx_commit?[zfs]_[k]
   622282354    0.06%       62  get_mem_cgroup_from_mm_[k]
   621497824    0.06%       62  java.util.zip.Inflater.inflate
   612954348    0.06%       61  _copy_from_iter_[k]
   612720510    0.06%       61  __mem_cgroup_charge_[k]
   602252507    0.06%       60  CollectedHeap::supports_object_pinning() const
   602006474    0.06%       60  list_destroy?[zfs]_[k]
   592276478    0.06%       59  fsnotify_handle_inode_event.isra.0_[k]
   591430972    0.06%       59  Java_sun_nio_ch_FileDispatcherImpl_write0
   572428706    0.06%       57  wmsum_add?[zfs]_[k]
   572296079    0.06%       57  arc_is_encrypted?[zfs]_[k]
   572142383    0.06%       57  dmu_tx_hold_dnode_impl?[zfs]_[k]
   571976364    0.06%       57  metaslab_class_get_dspace?[zfs]_[k]
   561842927    0.06%       56  pmd_val_[k]
   551403638    0.06%       55  __srcu_read_lock_[k]
   551397687    0.06%       55  sun.nio.ch.Util$BufferCache.offerFirst
   541260393    0.05%       54  taskq_init_ent?[spl]_[k]
   532127581    0.05%       53  __next_zones_zonelist_[k]
   532101354    0.05%       53  sun.nio.ch.NativeThread.current
   532090719    0.05%       53  dmu_write_uio_dnode?[zfs]_[k]
   531505194    0.05%       53  new_sync_write_[k]
   531092834    0.05%       53  sun.nio.ch.NativeThreadSet.add
   522105169    0.05%       52  zfs_tstamp_update_setup?[zfs]_[k]
   521579425    0.05%       52  spl_kmem_free?[spl]_[k]
   521491547    0.05%       52  dsl_dir_tempreserve_space?[zfs]_[k]
   521461765    0.05%       52  spl_fstrans_check?[spl]_[k]
   512034048    0.05%       51  spl_kmem_free_impl?[spl]_[k]
   511872029    0.05%       51  zil_itx_assign?[zfs]_[k]
   511638528    0.05%       51  vma_alloc_folio_[k]
   511065736    0.05%       51  sa_get_db?[zfs]_[k]
   502080880    0.05%       50  __pthread_self
   499807591    0.05%       50  free_swap_cache_[k]
   492136304    0.05%       49  __raw_spin_lock_irqsave_[k]
   481093478    0.05%       48  dmu_tx_destroy?[zfs]_[k]
   471451972    0.05%       47  INIT_LIST_HEAD?[zfs]_[k]
   471353293    0.05%       47  post_alloc_hook_[k]
   471191979    0.05%       47  __memcpy_avx_unaligned
   462198718    0.05%       46  dmu_tx_create?[zfs]_[k]
   461832283    0.05%       46  multilist_link_active?[zfs]_[k]
   461723789    0.05%       46  CompiledMethod::cleanup_inline_caches_impl(bool, bool)
   451660225    0.05%       45  list_remove_head?[zfs]_[k]
   451220039    0.05%       45  dbuf_compare?[zfs]_[k]
   441350088    0.04%       44  __init_waitqueue_head_[k]
   441285243    0.04%       44  list_remove?[zfs]_[k]
   441236016    0.04%       44  dnode_rele_and_unlock?[zfs]_[k]
   441221246    0.04%       44  dmu_buf_will_dirty_impl?[zfs]_[k]
   431934360    0.04%       43  __libc_pread64
   431863223    0.04%       43  dsl_dataset_check_quota?[zfs]_[k]
   431814745    0.04%       43  zio_execute_stack_check.constprop.0?[zfs]_[k]
Async profiler results:
  profile/com.scalamandra.ZipBench.fs2ReadAllBytes-Throughput-fileName-over64kb.txt/summary-cpu.txt


# JMH version: 1.32
# VM version: JDK 17.0.6, Java HotSpot(TM) 64-Bit Server VM, 17.0.6+9-LTS-jvmci-22.3-b11
# VM invoker: /home/rajven/graal/java17/bin/java
# VM options: -XX:ThreadPriorityPolicy=1 -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCIProduct -XX:JVMCIThreadsPerNativeLibraryRuntime=1 -XX:-UnlockExperimentalVMOptions
# Blackhole mode: full + dont-inline hint
# Warmup: 20 iterations, 10 s each
# Measurement: 20 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.scalamandra.ZipBench.nioInputStream
# Parameters: (fileName = under64kb.txt)

# Run progress: 20,00% complete, ETA 00:54:10
# Fork: 1 of 1
# Preparing profilers: AsyncProfiler 
Java HotSpot(TM) 64-Bit Server VM warning: -XX:ThreadPriorityPolicy=1 may require system level permission, e.g., being the root user. If the necessary permission is not possessed, changes to priority will be silently ignored.
# Warmup Iteration   1: 12595,151 ops/s
# Warmup Iteration   2: 14468,213 ops/s
# Warmup Iteration   3: 15012,990 ops/s
# Warmup Iteration   4: 14916,321 ops/s
# Warmup Iteration   5: 14899,554 ops/s
# Warmup Iteration   6: 10168,943 ops/s
# Warmup Iteration   7: 14542,984 ops/s
# Warmup Iteration   8: 15067,460 ops/s
# Warmup Iteration   9: 15373,875 ops/s
# Warmup Iteration  10: 15290,983 ops/s
# Warmup Iteration  11: 15275,406 ops/s
# Warmup Iteration  12: 15175,293 ops/s
# Warmup Iteration  13: 15115,232 ops/s
# Warmup Iteration  14: 15124,022 ops/s
# Warmup Iteration  15: 13244,039 ops/s
# Warmup Iteration  16: 11824,967 ops/s
# Warmup Iteration  17: 14988,946 ops/s
# Warmup Iteration  18: 15282,038 ops/s
# Warmup Iteration  19: 15067,574 ops/s
# Warmup Iteration  20: 14383,435 ops/s
Iteration   1: 13602,272 ops/s
Iteration   2: 13863,871 ops/s
Iteration   3: 13942,857 ops/s
Iteration   4: 14580,900 ops/s
Iteration   5: 14764,094 ops/s
Iteration   6: 10026,385 ops/s
Iteration   7: 14517,783 ops/s
Iteration   8: 12663,630 ops/s
Iteration   9: 12084,047 ops/s
Iteration  10: 15002,688 ops/s
Iteration  11: 15638,917 ops/s
Iteration  12: 15508,677 ops/s
Iteration  13: 15083,616 ops/s
Iteration  14: 14976,690 ops/s
Iteration  15: 14791,668 ops/s
Iteration  16: 13216,793 ops/s
Iteration  17: 11581,140 ops/s
Iteration  18: 14766,701 ops/s
Iteration  19: 15571,817 ops/s
Iteration  20: [WARN] Unknown argument: summary
15284,531 ops/s
                 ·async: (text only)

# Processing profiler results: AsyncProfiler 


Result "com.scalamandra.ZipBench.nioInputStream":
  14073,454 ±(99.9%) 1297,237 ops/s [Average]
  (min, avg, max) = (10026,385, 14073,454, 15638,917), stdev = 1493,900
  CI (99.9%): [12776,217, 15370,691] (assumes normal distribution)

Secondary result "com.scalamandra.ZipBench.nioInputStream:·async":
--- Execution profile ---
Total samples       : 140118
unknown_Java        : 196 (0.14%)

--- 347612282109 ns (24.73%), 34691 samples
  [ 0] /usr/lib/x86_64-linux-gnu/libz.so.1.2.11
  [ 1] java.util.zip.Inflater.inflateBytesBytes
  [ 2] java.util.zip.Inflater.inflate
  [ 3] java.util.zip.InflaterInputStream.read
  [ 4] java.io.InputStream.readNBytes
  [ 5] java.io.InputStream.readAllBytes
  [ 6] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [ 7] com.scalamandra.ZipLib$$anon$1$$Lambda$61.0x0000000800d25648.apply
  [ 8] cats.effect.IOFiber.$anonfun$8
  [ 9] cats.effect.IOFiber$$Lambda$204.0x0000000800da9ac0.apply
  [10] cats.effect.unsafe.WorkerThread.blockOn
  [11] scala.concurrent.package$.blocking
  [12] cats.effect.IOFiber.runLoop
  [13] cats.effect.IOFiber.execR
  [14] cats.effect.IOFiber.run
  [15] cats.effect.unsafe.WorkerThread.run

--- 205834958852 ns (14.65%), 20549 samples
  [ 0] /usr/lib/x86_64-linux-gnu/libz.so.1.2.11
  [ 1] [unknown]
  [ 2] java.util.zip.Inflater.inflateBytesBytes
  [ 3] java.util.zip.Inflater.inflate
  [ 4] java.util.zip.InflaterInputStream.read
  [ 5] java.io.InputStream.readNBytes
  [ 6] java.io.InputStream.readAllBytes
  [ 7] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [ 8] com.scalamandra.ZipLib$$anon$1$$Lambda$61.0x0000000800d25648.apply
  [ 9] cats.effect.IOFiber.$anonfun$8
  [10] cats.effect.IOFiber$$Lambda$204.0x0000000800da9ac0.apply
  [11] cats.effect.unsafe.WorkerThread.blockOn
  [12] scala.concurrent.package$.blocking
  [13] cats.effect.IOFiber.runLoop
  [14] cats.effect.IOFiber.execR
  [15] cats.effect.IOFiber.run
  [16] cats.effect.unsafe.WorkerThread.run

--- 193776455539 ns (13.79%), 19336 samples
  [ 0] /usr/lib/x86_64-linux-gnu/libz.so.1.2.11
  [ 1] java.util.zip.Inflater.inflateBytesBytes
  [ 2] java.util.zip.Inflater.inflate
  [ 3] java.util.zip.InflaterInputStream.read
  [ 4] java.io.InputStream.readNBytes
  [ 5] java.io.InputStream.readAllBytes
  [ 6] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [ 7] com.scalamandra.ZipLib$$anon$1$$Lambda$61.0x0000000800d25648.apply
  [ 8] cats.effect.IOFiber.$anonfun$8
  [ 9] cats.effect.IOFiber$$Lambda$204.0x0000000800da9ac0.apply
  [10] cats.effect.unsafe.WorkerThread.blockOn
  [11] scala.concurrent.package$.blocking
  [12] cats.effect.IOFiber.runLoop
  [13] cats.effect.IOFiber.execR
  [14] cats.effect.IOFiber.run
  [15] cats.effect.unsafe.WorkerThread.run

--- 112345005397 ns (7.99%), 11214 samples
  [ 0] /usr/lib/x86_64-linux-gnu/libz.so.1.2.11
  [ 1] [unknown]
  [ 2] java.util.zip.Inflater.inflateBytesBytes
  [ 3] java.util.zip.Inflater.inflate
  [ 4] java.util.zip.InflaterInputStream.read
  [ 5] java.io.InputStream.readNBytes
  [ 6] java.io.InputStream.readAllBytes
  [ 7] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [ 8] com.scalamandra.ZipLib$$anon$1$$Lambda$61.0x0000000800d25648.apply
  [ 9] cats.effect.IOFiber.$anonfun$8
  [10] cats.effect.IOFiber$$Lambda$204.0x0000000800da9ac0.apply
  [11] cats.effect.unsafe.WorkerThread.blockOn
  [12] scala.concurrent.package$.blocking
  [13] cats.effect.IOFiber.runLoop
  [14] cats.effect.IOFiber.execR
  [15] cats.effect.IOFiber.run
  [16] cats.effect.unsafe.WorkerThread.run

--- 29799959455 ns (2.12%), 2974 samples
  [ 0] inflate
  [ 1] java.util.zip.Inflater.inflateBytesBytes
  [ 2] java.util.zip.Inflater.inflate
  [ 3] java.util.zip.InflaterInputStream.read
  [ 4] java.io.InputStream.readNBytes
  [ 5] java.io.InputStream.readAllBytes
  [ 6] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [ 7] com.scalamandra.ZipLib$$anon$1$$Lambda$61.0x0000000800d25648.apply
  [ 8] cats.effect.IOFiber.$anonfun$8
  [ 9] cats.effect.IOFiber$$Lambda$204.0x0000000800da9ac0.apply
  [10] cats.effect.unsafe.WorkerThread.blockOn
  [11] scala.concurrent.package$.blocking
  [12] cats.effect.IOFiber.runLoop
  [13] cats.effect.IOFiber.execR
  [14] cats.effect.IOFiber.run
  [15] cats.effect.unsafe.WorkerThread.run

--- 16095392548 ns (1.15%), 1606 samples
  [ 0] inflate
  [ 1] java.util.zip.Inflater.inflateBytesBytes
  [ 2] java.util.zip.Inflater.inflate
  [ 3] java.util.zip.InflaterInputStream.read
  [ 4] java.io.InputStream.readNBytes
  [ 5] java.io.InputStream.readAllBytes
  [ 6] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [ 7] com.scalamandra.ZipLib$$anon$1$$Lambda$61.0x0000000800d25648.apply
  [ 8] cats.effect.IOFiber.$anonfun$8
  [ 9] cats.effect.IOFiber$$Lambda$204.0x0000000800da9ac0.apply
  [10] cats.effect.unsafe.WorkerThread.blockOn
  [11] scala.concurrent.package$.blocking
  [12] cats.effect.IOFiber.runLoop
  [13] cats.effect.IOFiber.execR
  [14] cats.effect.IOFiber.run
  [15] cats.effect.unsafe.WorkerThread.run

--- 12545068446 ns (0.89%), 1252 samples
  [ 0] java.io.InputStream.readNBytes
  [ 1] java.io.InputStream.readAllBytes
  [ 2] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [ 3] com.scalamandra.ZipLib$$anon$1$$Lambda$61.0x0000000800d25648.apply
  [ 4] cats.effect.IOFiber.$anonfun$8
  [ 5] cats.effect.IOFiber$$Lambda$204.0x0000000800da9ac0.apply
  [ 6] cats.effect.unsafe.WorkerThread.blockOn
  [ 7] scala.concurrent.package$.blocking
  [ 8] cats.effect.IOFiber.runLoop
  [ 9] cats.effect.IOFiber.execR
  [10] cats.effect.IOFiber.run
  [11] cats.effect.unsafe.WorkerThread.run

--- 12226881319 ns (0.87%), 1220 samples
  [ 0] java.util.Arrays.copyOfRange
  [ 1] java.lang.String.<init>
  [ 2] java.lang.String.<init>
  [ 3] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [ 4] com.scalamandra.ZipLib$$anon$1$$Lambda$61.0x0000000800d25648.apply
  [ 5] cats.effect.IOFiber.$anonfun$8
  [ 6] cats.effect.IOFiber$$Lambda$204.0x0000000800da9ac0.apply
  [ 7] cats.effect.unsafe.WorkerThread.blockOn
  [ 8] scala.concurrent.package$.blocking
  [ 9] cats.effect.IOFiber.runLoop
  [10] cats.effect.IOFiber.execR
  [11] cats.effect.IOFiber.run
  [12] cats.effect.unsafe.WorkerThread.run

--- 9868604900 ns (0.70%), 985 samples
  [ 0] java.lang.System.arraycopy
  [ 1] java.io.InputStream.readNBytes
  [ 2] java.io.InputStream.readAllBytes
  [ 3] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [ 4] com.scalamandra.ZipLib$$anon$1$$Lambda$61.0x0000000800d25648.apply
  [ 5] cats.effect.IOFiber.$anonfun$8
  [ 6] cats.effect.IOFiber$$Lambda$204.0x0000000800da9ac0.apply
  [ 7] cats.effect.unsafe.WorkerThread.blockOn
  [ 8] scala.concurrent.package$.blocking
  [ 9] cats.effect.IOFiber.runLoop
  [10] cats.effect.IOFiber.execR
  [11] cats.effect.IOFiber.run
  [12] cats.effect.unsafe.WorkerThread.run

--- 8327633202 ns (0.59%), 831 samples
  [ 0] java.io.InputStream.readNBytes
  [ 1] java.io.InputStream.readAllBytes
  [ 2] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [ 3] com.scalamandra.ZipLib$$anon$1$$Lambda$61.0x0000000800d25648.apply
  [ 4] cats.effect.IOFiber.$anonfun$8
  [ 5] cats.effect.IOFiber$$Lambda$204.0x0000000800da9ac0.apply
  [ 6] cats.effect.unsafe.WorkerThread.blockOn
  [ 7] scala.concurrent.package$.blocking
  [ 8] cats.effect.IOFiber.runLoop
  [ 9] cats.effect.IOFiber.execR
  [10] cats.effect.IOFiber.run
  [11] cats.effect.unsafe.WorkerThread.run

--- 7425670547 ns (0.53%), 741 samples
  [ 0] java.util.zip.InflaterInputStream.<init>
  [ 1] jdk.nio.zipfs.ZipFileSystem$2.<init>
  [ 2] jdk.nio.zipfs.ZipFileSystem.getInputStream
  [ 3] jdk.nio.zipfs.ZipFileSystem.newInputStream
  [ 4] jdk.nio.zipfs.ZipPath.newInputStream
  [ 5] jdk.nio.zipfs.ZipFileSystemProvider.newInputStream
  [ 6] java.nio.file.Files.newInputStream
  [ 7] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [ 8] com.scalamandra.ZipLib$$anon$1$$Lambda$61.0x0000000800d25648.apply
  [ 9] cats.effect.IOFiber.$anonfun$8
  [10] cats.effect.IOFiber$$Lambda$204.0x0000000800da9ac0.apply
  [11] cats.effect.unsafe.WorkerThread.blockOn
  [12] scala.concurrent.package$.blocking
  [13] cats.effect.IOFiber.runLoop
  [14] cats.effect.IOFiber.execR
  [15] cats.effect.IOFiber.run
  [16] cats.effect.unsafe.WorkerThread.run

--- 7374997880 ns (0.52%), 736 samples
  [ 0] __memmove_avx_unaligned_erms
  [ 1] java.util.zip.Inflater.inflateBytesBytes
  [ 2] java.util.zip.Inflater.inflate
  [ 3] java.util.zip.InflaterInputStream.read
  [ 4] java.io.InputStream.readNBytes
  [ 5] java.io.InputStream.readAllBytes
  [ 6] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [ 7] com.scalamandra.ZipLib$$anon$1$$Lambda$61.0x0000000800d25648.apply
  [ 8] cats.effect.IOFiber.$anonfun$8
  [ 9] cats.effect.IOFiber$$Lambda$204.0x0000000800da9ac0.apply
  [10] cats.effect.unsafe.WorkerThread.blockOn
  [11] scala.concurrent.package$.blocking
  [12] cats.effect.IOFiber.runLoop
  [13] cats.effect.IOFiber.execR
  [14] cats.effect.IOFiber.run
  [15] cats.effect.unsafe.WorkerThread.run

--- 7284751059 ns (0.52%), 727 samples
  [ 0] /usr/lib/x86_64-linux-gnu/libz.so.1.2.11
  [ 1] java.util.zip.Inflater.inflateBytesBytes
  [ 2] java.util.zip.Inflater.inflate
  [ 3] java.util.zip.InflaterInputStream.read
  [ 4] java.io.InputStream.readNBytes
  [ 5] java.io.InputStream.readAllBytes
  [ 6] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [ 7] com.scalamandra.ZipLib$$anon$1$$Lambda$61.0x0000000800d25648.apply
  [ 8] cats.effect.IOFiber.$anonfun$8
  [ 9] cats.effect.IOFiber$$Lambda$204.0x0000000800da9ac0.apply
  [10] cats.effect.unsafe.WorkerThread.blockOn
  [11] scala.concurrent.package$.blocking
  [12] cats.effect.IOFiber.runLoop
  [13] cats.effect.IOFiber.execR
  [14] cats.effect.IOFiber.run
  [15] cats.effect.unsafe.WorkerThread.run

--- 7135576759 ns (0.51%), 712 samples
  [ 0] __memset_avx2_unaligned_erms
  [ 1] MemAllocator::allocate() const
  [ 2] TypeArrayKlass::allocate_common(int, bool, JavaThread*)
  [ 3] JVMCIRuntime::new_array_common(JavaThread*, Klass*, int, bool)
  [ 4] jdk.nio.zipfs.ZipFileSystem.getInflater
  [ 5] jdk.nio.zipfs.ZipFileSystem.getInputStream
  [ 6] jdk.nio.zipfs.ZipFileSystem.newInputStream
  [ 7] jdk.nio.zipfs.ZipPath.newInputStream
  [ 8] jdk.nio.zipfs.ZipFileSystemProvider.newInputStream
  [ 9] java.nio.file.Files.newInputStream
  [10] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [11] com.scalamandra.ZipLib$$anon$1$$Lambda$61.0x0000000800d25648.apply
  [12] cats.effect.IOFiber.$anonfun$8
  [13] cats.effect.IOFiber$$Lambda$204.0x0000000800da9ac0.apply
  [14] cats.effect.unsafe.WorkerThread.blockOn
  [15] scala.concurrent.package$.blocking
  [16] cats.effect.IOFiber.runLoop
  [17] cats.effect.IOFiber.execR
  [18] cats.effect.IOFiber.run
  [19] cats.effect.unsafe.WorkerThread.run

--- 6849974162 ns (0.49%), 683 samples
  [ 0] _raw_spin_unlock_irqrestore_[k]
  [ 1] try_to_wake_up_[k]
  [ 2] wake_up_q_[k]
  [ 3] futex_wake_[k]
  [ 4] do_futex_[k]
  [ 5] __x64_sys_futex_[k]
  [ 6] do_syscall_64_[k]
  [ 7] entry_SYSCALL_64_after_hwframe_[k]
  [ 8] pthread_cond_signal@@GLIBC_2.3.2
  [ 9] jdk.internal.misc.Unsafe.unpark
  [10] java.util.concurrent.locks.LockSupport.unpark
  [11] java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext
  [12] java.util.concurrent.locks.AbstractQueuedSynchronizer.release
  [13] java.util.concurrent.locks.ReentrantLock.unlock
  [14] java.util.concurrent.ArrayBlockingQueue.offer
  [15] cats.effect.IOPlatform.unsafeRunTimed$$anonfun$1
  [16] cats.effect.IOPlatform$$Lambda$146.0x0000000800d9a830.applyVoid
  [17] scala.runtime.function.JProcedure1.apply
  [18] scala.runtime.function.JProcedure1.apply
  [19] cats.effect.IO.unsafeRunAsync$$anonfun$3
  [20] cats.effect.IO$$Lambda$164.0x0000000800da0408.applyVoid
  [21] scala.runtime.function.JProcedure1.apply
  [22] scala.runtime.function.JProcedure1.apply
  [23] cats.effect.IO.$anonfun$6$$anonfun$3
  [24] cats.effect.IO$$Lambda$233.0x0000000800db3288.applyVoid
  [25] scala.runtime.function.JProcedure1.apply
  [26] scala.runtime.function.JProcedure1.apply
  [27] cats.effect.kernel.Outcome.fold
  [28] cats.effect.kernel.Outcome.fold$
  [29] cats.effect.kernel.Outcome$Succeeded.fold
  [30] cats.effect.IO.$anonfun$6
  [31] cats.effect.IO$$Lambda$175.0x0000000800da3590.applyVoid
  [32] scala.runtime.function.JProcedure1.apply
  [33] scala.runtime.function.JProcedure1.apply
  [34] cats.effect.CallbackStack.apply
  [35] cats.effect.IOFiber.done
  [36] cats.effect.IOFiber.runTerminusSuccessK
  [37] cats.effect.IOFiber.succeeded
  [38] cats.effect.IOFiber.runLoop
  [39] cats.effect.IOFiber.execR
  [40] cats.effect.IOFiber.run
  [41] cats.effect.unsafe.WorkerThread.run

--- 6811265375 ns (0.48%), 678 samples
  [ 0] _raw_spin_unlock_irqrestore_[k]
  [ 1] try_to_wake_up_[k]
  [ 2] wake_up_q_[k]
  [ 3] futex_wake_[k]
  [ 4] do_futex_[k]
  [ 5] __x64_sys_futex_[k]
  [ 6] do_syscall_64_[k]
  [ 7] entry_SYSCALL_64_after_hwframe_[k]
  [ 8] pthread_cond_signal@@GLIBC_2.3.2
  [ 9] jdk.internal.misc.Unsafe.unpark
  [10] java.util.concurrent.locks.LockSupport.unpark
  [11] cats.effect.unsafe.WorkStealingThreadPool.notifyParked
  [12] cats.effect.unsafe.WorkerThread.blockOn
  [13] scala.concurrent.package$.blocking
  [14] cats.effect.IOFiber.runLoop
  [15] cats.effect.IOFiber.execR
  [16] cats.effect.IOFiber.run
  [17] cats.effect.unsafe.WorkerThread.run

--- 6615101529 ns (0.47%), 660 samples
  [ 0] __memset_avx2_unaligned_erms
  [ 1] MemAllocator::allocate() const
  [ 2] TypeArrayKlass::allocate_common(int, bool, JavaThread*)
  [ 3] JVMCIRuntime::new_array_common(JavaThread*, Klass*, int, bool)
  [ 4] java.nio.charset.Charset.forName
  [ 5] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [ 6] com.scalamandra.ZipLib$$anon$1$$Lambda$61.0x0000000800d25648.apply
  [ 7] cats.effect.IOFiber.$anonfun$8
  [ 8] cats.effect.IOFiber$$Lambda$204.0x0000000800da9ac0.apply
  [ 9] cats.effect.unsafe.WorkerThread.blockOn
  [10] scala.concurrent.package$.blocking
  [11] cats.effect.IOFiber.runLoop
  [12] cats.effect.IOFiber.execR
  [13] cats.effect.IOFiber.run
  [14] cats.effect.unsafe.WorkerThread.run

--- 6513662248 ns (0.46%), 650 samples
  [ 0] java.io.InputStream.readNBytes
  [ 1] java.io.InputStream.readAllBytes
  [ 2] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [ 3] com.scalamandra.ZipLib$$anon$1$$Lambda$61.0x0000000800d25648.apply
  [ 4] cats.effect.IOFiber.$anonfun$8
  [ 5] cats.effect.IOFiber$$Lambda$204.0x0000000800da9ac0.apply
  [ 6] cats.effect.unsafe.WorkerThread.blockOn
  [ 7] scala.concurrent.package$.blocking
  [ 8] cats.effect.IOFiber.runLoop
  [ 9] cats.effect.IOFiber.execR
  [10] cats.effect.IOFiber.run
  [11] cats.effect.unsafe.WorkerThread.run

--- 6294209481 ns (0.45%), 628 samples
  [ 0] __memset_avx2_unaligned_erms
  [ 1] MemAllocator::allocate() const
  [ 2] TypeArrayKlass::allocate_common(int, bool, JavaThread*)
  [ 3] JVMCIRuntime::new_array_common(JavaThread*, Klass*, int, bool)
  [ 4] java.io.InputStream.readNBytes
  [ 5] java.io.InputStream.readAllBytes
  [ 6] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [ 7] com.scalamandra.ZipLib$$anon$1$$Lambda$61.0x0000000800d25648.apply
  [ 8] cats.effect.IOFiber.$anonfun$8
  [ 9] cats.effect.IOFiber$$Lambda$204.0x0000000800da9ac0.apply
  [10] cats.effect.unsafe.WorkerThread.blockOn
  [11] scala.concurrent.package$.blocking
  [12] cats.effect.IOFiber.runLoop
  [13] cats.effect.IOFiber.execR
  [14] cats.effect.IOFiber.run
  [15] cats.effect.unsafe.WorkerThread.run

--- 6254213423 ns (0.45%), 624 samples
  [ 0] java.util.Arrays.copyOfRange
  [ 1] java.lang.String.<init>
  [ 2] java.lang.String.<init>
  [ 3] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [ 4] com.scalamandra.ZipLib$$anon$1$$Lambda$61.0x0000000800d25648.apply
  [ 5] cats.effect.IOFiber.$anonfun$8
  [ 6] cats.effect.IOFiber$$Lambda$204.0x0000000800da9ac0.apply
  [ 7] cats.effect.unsafe.WorkerThread.blockOn
  [ 8] scala.concurrent.package$.blocking
  [ 9] cats.effect.IOFiber.runLoop
  [10] cats.effect.IOFiber.execR
  [11] cats.effect.IOFiber.run
  [12] cats.effect.unsafe.WorkerThread.run

--- 6191039188 ns (0.44%), 618 samples
  [ 0] java.lang.StringCoding.hasNegatives
  [ 1] java.lang.String.<init>
  [ 2] java.lang.String.<init>
  [ 3] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [ 4] com.scalamandra.ZipLib$$anon$1$$Lambda$61.0x0000000800d25648.apply
  [ 5] cats.effect.IOFiber.$anonfun$8
  [ 6] cats.effect.IOFiber$$Lambda$204.0x0000000800da9ac0.apply
  [ 7] cats.effect.unsafe.WorkerThread.blockOn
  [ 8] scala.concurrent.package$.blocking
  [ 9] cats.effect.IOFiber.runLoop
  [10] cats.effect.IOFiber.execR
  [11] cats.effect.IOFiber.run
  [12] cats.effect.unsafe.WorkerThread.run

--- 5689903034 ns (0.40%), 567 samples
  [ 0] _raw_spin_unlock_irqrestore_[k]
  [ 1] try_to_wake_up_[k]
  [ 2] wake_up_q_[k]
  [ 3] futex_wake_[k]
  [ 4] do_futex_[k]
  [ 5] __x64_sys_futex_[k]
  [ 6] do_syscall_64_[k]
  [ 7] entry_SYSCALL_64_after_hwframe_[k]
  [ 8] pthread_cond_signal@@GLIBC_2.3.2
  [ 9] jdk.internal.misc.Unsafe.unpark
  [10] java.util.concurrent.locks.LockSupport.unpark
  [11] java.util.concurrent.LinkedTransferQueue$Node.tryMatch
  [12] java.util.concurrent.LinkedTransferQueue.xfer
  [13] java.util.concurrent.LinkedTransferQueue.transfer
  [14] cats.effect.unsafe.WorkerThread.blockOn
  [15] scala.concurrent.package$.blocking
  [16] cats.effect.IOFiber.runLoop
  [17] cats.effect.IOFiber.execR
  [18] cats.effect.IOFiber.run
  [19] cats.effect.unsafe.WorkerThread.run

--- 5360684211 ns (0.38%), 535 samples
  [ 0] java.lang.System.arraycopy
  [ 1] java.io.InputStream.readNBytes
  [ 2] java.io.InputStream.readAllBytes
  [ 3] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [ 4] com.scalamandra.ZipLib$$anon$1$$Lambda$61.0x0000000800d25648.apply
  [ 5] cats.effect.IOFiber.$anonfun$8
  [ 6] cats.effect.IOFiber$$Lambda$204.0x0000000800da9ac0.apply
  [ 7] cats.effect.unsafe.WorkerThread.blockOn
  [ 8] scala.concurrent.package$.blocking
  [ 9] cats.effect.IOFiber.runLoop
  [10] cats.effect.IOFiber.execR
  [11] cats.effect.IOFiber.run
  [12] cats.effect.unsafe.WorkerThread.run

--- 4814492671 ns (0.34%), 480 samples
  [ 0] copy_user_generic_string_[k]
  [ 1] zfs_uiomove_iter?[zfs]_[k]
  [ 2] zfs_uiomove?[zfs]_[k]
  [ 3] dmu_read_uio_dnode?[zfs]_[k]
  [ 4] dmu_read_uio_dbuf?[zfs]_[k]
  [ 5] mappedread?[zfs]_[k]
  [ 6] zfs_read?[zfs]_[k]
  [ 7] zpl_iter_read?[zfs]_[k]
  [ 8] new_sync_read_[k]
  [ 9] vfs_read_[k]
  [10] __x64_sys_pread64_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] __libc_pread64
  [14] sun.nio.ch.FileDispatcherImpl.pread0
  [15] sun.nio.ch.FileDispatcherImpl.pread
  [16] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [17] sun.nio.ch.IOUtil.read
  [18] sun.nio.ch.IOUtil.read
  [19] sun.nio.ch.FileChannelImpl.readInternal
  [20] sun.nio.ch.FileChannelImpl.read
  [21] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [22] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [23] jdk.nio.zipfs.ZipFileSystem$2.fill
  [24] java.util.zip.InflaterInputStream.read
  [25] java.io.InputStream.readNBytes
  [26] java.io.InputStream.readAllBytes
  [27] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [28] com.scalamandra.ZipLib$$anon$1$$Lambda$61.0x0000000800d25648.apply
  [29] cats.effect.IOFiber.$anonfun$8
  [30] cats.effect.IOFiber$$Lambda$204.0x0000000800da9ac0.apply
  [31] cats.effect.unsafe.WorkerThread.blockOn
  [32] scala.concurrent.package$.blocking
  [33] cats.effect.IOFiber.runLoop
  [34] cats.effect.IOFiber.execR
  [35] cats.effect.IOFiber.run
  [36] cats.effect.unsafe.WorkerThread.run

--- 4510244923 ns (0.32%), 450 samples
  [ 0] java.io.InputStream.readNBytes
  [ 1] java.io.InputStream.readAllBytes
  [ 2] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [ 3] com.scalamandra.ZipLib$$anon$1$$Lambda$61.0x0000000800d25648.apply
  [ 4] cats.effect.IOFiber.$anonfun$8
  [ 5] cats.effect.IOFiber$$Lambda$204.0x0000000800da9ac0.apply
  [ 6] cats.effect.unsafe.WorkerThread.blockOn
  [ 7] scala.concurrent.package$.blocking
  [ 8] cats.effect.IOFiber.runLoop
  [ 9] cats.effect.IOFiber.execR
  [10] cats.effect.IOFiber.run
  [11] cats.effect.unsafe.WorkerThread.run

--- 4400514927 ns (0.31%), 439 samples
  [ 0] __memset_avx2_unaligned_erms
  [ 1] MemAllocator::allocate() const
  [ 2] TypeArrayKlass::allocate_common(int, bool, JavaThread*)
  [ 3] JVMCIRuntime::new_array_common(JavaThread*, Klass*, int, bool)
  [ 4] jdk.nio.zipfs.ZipFileSystem.getInflater
  [ 5] jdk.nio.zipfs.ZipFileSystem.getInputStream
  [ 6] jdk.nio.zipfs.ZipFileSystem.newInputStream
  [ 7] jdk.nio.zipfs.ZipPath.newInputStream
  [ 8] jdk.nio.zipfs.ZipFileSystemProvider.newInputStream
  [ 9] java.nio.file.Files.newInputStream
  [10] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [11] com.scalamandra.ZipLib$$anon$1$$Lambda$61.0x0000000800d25648.apply
  [12] cats.effect.IOFiber.$anonfun$8
  [13] cats.effect.IOFiber$$Lambda$204.0x0000000800da9ac0.apply
  [14] cats.effect.unsafe.WorkerThread.blockOn
  [15] scala.concurrent.package$.blocking
  [16] cats.effect.IOFiber.runLoop
  [17] cats.effect.IOFiber.execR
  [18] cats.effect.IOFiber.run
  [19] cats.effect.unsafe.WorkerThread.run

--- 4317239172 ns (0.31%), 431 samples
  [ 0] /usr/lib/x86_64-linux-gnu/libz.so.1.2.11
  [ 1] [unknown]
  [ 2] java.util.zip.Inflater.inflateBytesBytes
  [ 3] java.util.zip.Inflater.inflate
  [ 4] java.util.zip.InflaterInputStream.read
  [ 5] java.io.InputStream.readNBytes
  [ 6] java.io.InputStream.readAllBytes
  [ 7] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [ 8] com.scalamandra.ZipLib$$anon$1$$Lambda$61.0x0000000800d25648.apply
  [ 9] cats.effect.IOFiber.$anonfun$8
  [10] cats.effect.IOFiber$$Lambda$204.0x0000000800da9ac0.apply
  [11] cats.effect.unsafe.WorkerThread.blockOn
  [12] scala.concurrent.package$.blocking
  [13] cats.effect.IOFiber.runLoop
  [14] cats.effect.IOFiber.execR
  [15] cats.effect.IOFiber.run
  [16] cats.effect.unsafe.WorkerThread.run

--- 4179103637 ns (0.30%), 417 samples
  [ 0] __memmove_avx_unaligned_erms
  [ 1] java.util.zip.Inflater.inflateBytesBytes
  [ 2] java.util.zip.Inflater.inflate
  [ 3] java.util.zip.InflaterInputStream.read
  [ 4] java.io.InputStream.readNBytes
  [ 5] java.io.InputStream.readAllBytes
  [ 6] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [ 7] com.scalamandra.ZipLib$$anon$1$$Lambda$61.0x0000000800d25648.apply
  [ 8] cats.effect.IOFiber.$anonfun$8
  [ 9] cats.effect.IOFiber$$Lambda$204.0x0000000800da9ac0.apply
  [10] cats.effect.unsafe.WorkerThread.blockOn
  [11] scala.concurrent.package$.blocking
  [12] cats.effect.IOFiber.runLoop
  [13] cats.effect.IOFiber.execR
  [14] cats.effect.IOFiber.run
  [15] cats.effect.unsafe.WorkerThread.run

--- 3805289373 ns (0.27%), 379 samples
  [ 0] _raw_spin_unlock_irqrestore_[k]
  [ 1] try_to_wake_up_[k]
  [ 2] wake_up_q_[k]
  [ 3] futex_wake_[k]
  [ 4] do_futex_[k]
  [ 5] __x64_sys_futex_[k]
  [ 6] do_syscall_64_[k]
  [ 7] entry_SYSCALL_64_after_hwframe_[k]
  [ 8] pthread_cond_signal@@GLIBC_2.3.2
  [ 9] jdk.internal.misc.Unsafe.unpark
  [10] java.util.concurrent.locks.LockSupport.unpark
  [11] java.util.concurrent.LinkedTransferQueue$Node.tryMatch
  [12] java.util.concurrent.LinkedTransferQueue.xfer
  [13] java.util.concurrent.LinkedTransferQueue.transfer
  [14] cats.effect.unsafe.WorkerThread.blockOn
  [15] scala.concurrent.package$.blocking
  [16] cats.effect.IOFiber.runLoop
  [17] cats.effect.IOFiber.execR
  [18] cats.effect.IOFiber.run
  [19] cats.effect.unsafe.WorkerThread.run

--- 3789329361 ns (0.27%), 378 samples
  [ 0] __memset_avx2_unaligned_erms
  [ 1] MemAllocator::allocate() const
  [ 2] TypeArrayKlass::allocate_common(int, bool, JavaThread*)
  [ 3] JVMCIRuntime::new_array_common(JavaThread*, Klass*, int, bool)
  [ 4] java.io.InputStream.readNBytes
  [ 5] java.io.InputStream.readAllBytes
  [ 6] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [ 7] com.scalamandra.ZipLib$$anon$1$$Lambda$61.0x0000000800d25648.apply
  [ 8] cats.effect.IOFiber.$anonfun$8
  [ 9] cats.effect.IOFiber$$Lambda$204.0x0000000800da9ac0.apply
  [10] cats.effect.unsafe.WorkerThread.blockOn
  [11] scala.concurrent.package$.blocking
  [12] cats.effect.IOFiber.runLoop
  [13] cats.effect.IOFiber.execR
  [14] cats.effect.IOFiber.run
  [15] cats.effect.unsafe.WorkerThread.run

--- 3688128060 ns (0.26%), 368 samples
  [ 0] java.util.zip.InflaterInputStream.<init>
  [ 1] jdk.nio.zipfs.ZipFileSystem$2.<init>
  [ 2] jdk.nio.zipfs.ZipFileSystem.getInputStream
  [ 3] jdk.nio.zipfs.ZipFileSystem.newInputStream
  [ 4] jdk.nio.zipfs.ZipPath.newInputStream
  [ 5] jdk.nio.zipfs.ZipFileSystemProvider.newInputStream
  [ 6] java.nio.file.Files.newInputStream
  [ 7] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [ 8] com.scalamandra.ZipLib$$anon$1$$Lambda$61.0x0000000800d25648.apply
  [ 9] cats.effect.IOFiber.$anonfun$8
  [10] cats.effect.IOFiber$$Lambda$204.0x0000000800da9ac0.apply
  [11] cats.effect.unsafe.WorkerThread.blockOn
  [12] scala.concurrent.package$.blocking
  [13] cats.effect.IOFiber.runLoop
  [14] cats.effect.IOFiber.execR
  [15] cats.effect.IOFiber.run
  [16] cats.effect.unsafe.WorkerThread.run

--- 3650323239 ns (0.26%), 354 samples
  [ 0] _raw_spin_unlock_irqrestore_[k]
  [ 1] try_to_wake_up_[k]
  [ 2] wake_up_q_[k]
  [ 3] futex_wake_[k]
  [ 4] do_futex_[k]
  [ 5] __x64_sys_futex_[k]
  [ 6] do_syscall_64_[k]
  [ 7] entry_SYSCALL_64_after_hwframe_[k]
  [ 8] pthread_cond_signal@@GLIBC_2.3.2
  [ 9] jdk.internal.misc.Unsafe.unpark
  [10] java.util.concurrent.locks.LockSupport.unpark
  [11] cats.effect.unsafe.WorkStealingThreadPool.notifyParked
  [12] cats.effect.unsafe.WorkStealingThreadPool.scheduleExternal
  [13] cats.effect.unsafe.WorkStealingThreadPool.execute
  [14] cats.effect.IO.unsafeRunFiber
  [15] cats.effect.IO.unsafeRunAsync
  [16] cats.effect.IOPlatform.unsafeRunTimed
  [17] cats.effect.IOPlatform.unsafeRunSync
  [18] com.scalamandra.ZipBench.nioInputStream
  [19] com.scalamandra.jmh_generated.ZipBench_nioInputStream_jmhTest.nioInputStream_thrpt_jmhStub
  [20] com.scalamandra.jmh_generated.ZipBench_nioInputStream_jmhTest.nioInputStream_Throughput
  [21] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [22] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [23] java.lang.reflect.Method.invoke
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.Executors$RunnableAdapter.call
  [28] java.util.concurrent.FutureTask.run
  [29] java.util.concurrent.ThreadPoolExecutor.runWorker
  [30] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [31] java.lang.Thread.run

--- 3578505284 ns (0.25%), 357 samples
  [ 0] __memset_avx2_unaligned_erms
  [ 1] MemAllocator::allocate() const
  [ 2] TypeArrayKlass::allocate_common(int, bool, JavaThread*)
  [ 3] JVMCIRuntime::new_array_common(JavaThread*, Klass*, int, bool)
  [ 4] java.nio.charset.Charset.forName
  [ 5] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [ 6] com.scalamandra.ZipLib$$anon$1$$Lambda$61.0x0000000800d25648.apply
  [ 7] cats.effect.IOFiber.$anonfun$8
  [ 8] cats.effect.IOFiber$$Lambda$204.0x0000000800da9ac0.apply
  [ 9] cats.effect.unsafe.WorkerThread.blockOn
  [10] scala.concurrent.package$.blocking
  [11] cats.effect.IOFiber.runLoop
  [12] cats.effect.IOFiber.execR
  [13] cats.effect.IOFiber.run
  [14] cats.effect.unsafe.WorkerThread.run

--- 3527437951 ns (0.25%), 352 samples
  [ 0] __memset_avx2_unaligned_erms
  [ 1] MemAllocator::allocate() const
  [ 2] TypeArrayKlass::allocate_common(int, bool, JavaThread*)
  [ 3] JVMCIRuntime::new_array_common(JavaThread*, Klass*, int, bool)
  [ 4] java.io.InputStream.readNBytes
  [ 5] java.io.InputStream.readAllBytes
  [ 6] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [ 7] com.scalamandra.ZipLib$$anon$1$$Lambda$61.0x0000000800d25648.apply
  [ 8] cats.effect.IOFiber.$anonfun$8
  [ 9] cats.effect.IOFiber$$Lambda$204.0x0000000800da9ac0.apply
  [10] cats.effect.unsafe.WorkerThread.blockOn
  [11] scala.concurrent.package$.blocking
  [12] cats.effect.IOFiber.runLoop
  [13] cats.effect.IOFiber.execR
  [14] cats.effect.IOFiber.run
  [15] cats.effect.unsafe.WorkerThread.run

--- 3526639273 ns (0.25%), 352 samples
  [ 0] java.lang.StringCoding.hasNegatives
  [ 1] java.lang.String.<init>
  [ 2] java.lang.String.<init>
  [ 3] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [ 4] com.scalamandra.ZipLib$$anon$1$$Lambda$61.0x0000000800d25648.apply
  [ 5] cats.effect.IOFiber.$anonfun$8
  [ 6] cats.effect.IOFiber$$Lambda$204.0x0000000800da9ac0.apply
  [ 7] cats.effect.unsafe.WorkerThread.blockOn
  [ 8] scala.concurrent.package$.blocking
  [ 9] cats.effect.IOFiber.runLoop
  [10] cats.effect.IOFiber.execR
  [11] cats.effect.IOFiber.run
  [12] cats.effect.unsafe.WorkerThread.run

--- 3471072429 ns (0.25%), 346 samples
  [ 0] _raw_spin_unlock_irqrestore_[k]
  [ 1] try_to_wake_up_[k]
  [ 2] wake_up_q_[k]
  [ 3] futex_wake_[k]
  [ 4] do_futex_[k]
  [ 5] __x64_sys_futex_[k]
  [ 6] do_syscall_64_[k]
  [ 7] entry_SYSCALL_64_after_hwframe_[k]
  [ 8] pthread_cond_signal@@GLIBC_2.3.2
  [ 9] jdk.internal.misc.Unsafe.unpark
  [10] java.util.concurrent.locks.LockSupport.unpark
  [11] java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext
  [12] java.util.concurrent.locks.AbstractQueuedSynchronizer.release
  [13] java.util.concurrent.locks.ReentrantLock.unlock
  [14] java.util.concurrent.ArrayBlockingQueue.offer
  [15] cats.effect.IOPlatform.unsafeRunTimed$$anonfun$1
  [16] cats.effect.IOPlatform$$Lambda$146.0x0000000800d9a830.applyVoid
  [17] scala.runtime.function.JProcedure1.apply
  [18] scala.runtime.function.JProcedure1.apply
  [19] cats.effect.IO.unsafeRunAsync$$anonfun$3
  [20] cats.effect.IO$$Lambda$164.0x0000000800da0408.applyVoid
  [21] scala.runtime.function.JProcedure1.apply
  [22] scala.runtime.function.JProcedure1.apply
  [23] cats.effect.IO.$anonfun$6$$anonfun$3
  [24] cats.effect.IO$$Lambda$233.0x0000000800db3288.applyVoid
  [25] scala.runtime.function.JProcedure1.apply
  [26] scala.runtime.function.JProcedure1.apply
  [27] cats.effect.kernel.Outcome.fold
  [28] cats.effect.kernel.Outcome.fold$
  [29] cats.effect.kernel.Outcome$Succeeded.fold
  [30] cats.effect.IO.$anonfun$6
  [31] cats.effect.IO$$Lambda$175.0x0000000800da3590.applyVoid
  [32] scala.runtime.function.JProcedure1.apply
  [33] scala.runtime.function.JProcedure1.apply
  [34] cats.effect.CallbackStack.apply
  [35] cats.effect.IOFiber.done
  [36] cats.effect.IOFiber.runTerminusSuccessK
  [37] cats.effect.IOFiber.succeeded
  [38] cats.effect.IOFiber.runLoop
  [39] cats.effect.IOFiber.execR
  [40] cats.effect.IOFiber.run
  [41] cats.effect.unsafe.WorkerThread.run

--- 2738297254 ns (0.19%), 273 samples
  [ 0] copy_user_generic_string_[k]
  [ 1] zfs_uiomove_iter?[zfs]_[k]
  [ 2] zfs_uiomove?[zfs]_[k]
  [ 3] dmu_read_uio_dnode?[zfs]_[k]
  [ 4] dmu_read_uio_dbuf?[zfs]_[k]
  [ 5] mappedread?[zfs]_[k]
  [ 6] zfs_read?[zfs]_[k]
  [ 7] zpl_iter_read?[zfs]_[k]
  [ 8] new_sync_read_[k]
  [ 9] vfs_read_[k]
  [10] __x64_sys_pread64_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] __libc_pread64
  [14] sun.nio.ch.FileDispatcherImpl.pread0
  [15] sun.nio.ch.FileDispatcherImpl.pread
  [16] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [17] sun.nio.ch.IOUtil.read
  [18] sun.nio.ch.IOUtil.read
  [19] sun.nio.ch.FileChannelImpl.readInternal
  [20] sun.nio.ch.FileChannelImpl.read
  [21] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [22] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [23] jdk.nio.zipfs.ZipFileSystem$2.fill
  [24] java.util.zip.InflaterInputStream.read
  [25] java.io.InputStream.readNBytes
  [26] java.io.InputStream.readAllBytes
  [27] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [28] com.scalamandra.ZipLib$$anon$1$$Lambda$61.0x0000000800d25648.apply
  [29] cats.effect.IOFiber.$anonfun$8
  [30] cats.effect.IOFiber$$Lambda$204.0x0000000800da9ac0.apply
  [31] cats.effect.unsafe.WorkerThread.blockOn
  [32] scala.concurrent.package$.blocking
  [33] cats.effect.IOFiber.runLoop
  [34] cats.effect.IOFiber.execR
  [35] cats.effect.IOFiber.run
  [36] cats.effect.unsafe.WorkerThread.run

--- 2625502723 ns (0.19%), 262 samples
  [ 0] jbyte_disjoint_arraycopy
  [ 1] jdk.internal.misc.Unsafe.copyMemory0
  [ 2] jdk.internal.misc.Unsafe.copyMemory
  [ 3] jdk.internal.misc.ScopedMemoryAccess.copyMemoryInternal
  [ 4] jdk.internal.misc.ScopedMemoryAccess.copyMemory
  [ 5] java.nio.ByteBuffer.putBuffer
  [ 6] java.nio.ByteBuffer.put
  [ 7] java.nio.HeapByteBuffer.put
  [ 8] sun.nio.ch.IOUtil.read
  [ 9] sun.nio.ch.IOUtil.read
  [10] sun.nio.ch.FileChannelImpl.readInternal
  [11] sun.nio.ch.FileChannelImpl.read
  [12] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [13] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [14] jdk.nio.zipfs.ZipFileSystem$2.fill
  [15] java.util.zip.InflaterInputStream.read
  [16] java.io.InputStream.readNBytes
  [17] java.io.InputStream.readAllBytes
  [18] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [19] com.scalamandra.ZipLib$$anon$1$$Lambda$61.0x0000000800d25648.apply
  [20] cats.effect.IOFiber.$anonfun$8
  [21] cats.effect.IOFiber$$Lambda$204.0x0000000800da9ac0.apply
  [22] cats.effect.unsafe.WorkerThread.blockOn
  [23] scala.concurrent.package$.blocking
  [24] cats.effect.IOFiber.runLoop
  [25] cats.effect.IOFiber.execR
  [26] cats.effect.IOFiber.run
  [27] cats.effect.unsafe.WorkerThread.run

--- 2473690476 ns (0.18%), 240 samples
  [ 0] _raw_spin_unlock_irqrestore_[k]
  [ 1] hrtimer_start_range_ns_[k]
  [ 2] hrtimer_sleeper_start_expires_[k]
  [ 3] futex_wait_queue_[k]
  [ 4] futex_wait_[k]
  [ 5] do_futex_[k]
  [ 6] __x64_sys_futex_[k]
  [ 7] do_syscall_64_[k]
  [ 8] entry_SYSCALL_64_after_hwframe_[k]
  [ 9] __futex_abstimed_wait_cancelable64
  [10] [unknown]
  [11] jdk.internal.misc.Unsafe.park
  [12] java.util.concurrent.locks.LockSupport.parkNanos
  [13] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos
  [14] java.util.concurrent.ArrayBlockingQueue.poll
  [15] cats.effect.IOPlatform.$anonfun$1
  [16] cats.effect.IOPlatform$$Lambda$198.0x0000000800dafc68.apply
  [17] scala.concurrent.BlockContext$DefaultBlockContext$.blockOn
  [18] scala.concurrent.package$.blocking
  [19] cats.effect.IOPlatform.unsafeRunTimed
  [20] cats.effect.IOPlatform.unsafeRunSync
  [21] com.scalamandra.ZipBench.nioInputStream
  [22] com.scalamandra.jmh_generated.ZipBench_nioInputStream_jmhTest.nioInputStream_thrpt_jmhStub
  [23] com.scalamandra.jmh_generated.ZipBench_nioInputStream_jmhTest.nioInputStream_Throughput
  [24] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [25] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [26] java.lang.reflect.Method.invoke
  [27] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [28] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [29] java.util.concurrent.FutureTask.run
  [30] java.util.concurrent.Executors$RunnableAdapter.call
  [31] java.util.concurrent.FutureTask.run
  [32] java.util.concurrent.ThreadPoolExecutor.runWorker
  [33] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [34] java.lang.Thread.run

--- 2205175021 ns (0.16%), 220 samples
  [ 0] __memset_avx2_unaligned_erms
  [ 1] MemAllocator::allocate() const
  [ 2] TypeArrayKlass::allocate_common(int, bool, JavaThread*)
  [ 3] JVMCIRuntime::new_array_common(JavaThread*, Klass*, int, bool)
  [ 4] java.io.InputStream.readNBytes
  [ 5] java.io.InputStream.readAllBytes
  [ 6] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [ 7] com.scalamandra.ZipLib$$anon$1$$Lambda$61.0x0000000800d25648.apply
  [ 8] cats.effect.IOFiber.$anonfun$8
  [ 9] cats.effect.IOFiber$$Lambda$204.0x0000000800da9ac0.apply
  [10] cats.effect.unsafe.WorkerThread.blockOn
  [11] scala.concurrent.package$.blocking
  [12] cats.effect.IOFiber.runLoop
  [13] cats.effect.IOFiber.execR
  [14] cats.effect.IOFiber.run
  [15] cats.effect.unsafe.WorkerThread.run

--- 1927030896 ns (0.14%), 192 samples
  [ 0] java.util.concurrent.ConcurrentLinkedQueue.poll
  [ 1] cats.effect.unsafe.ScalQueue.poll
  [ 2] cats.effect.unsafe.WorkerThread.run

--- 1633115067 ns (0.12%), 163 samples
  [ 0] java.util.Arrays.copyOfRange
  [ 1] java.io.InputStream.readNBytes
  [ 2] java.io.InputStream.readAllBytes
  [ 3] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [ 4] com.scalamandra.ZipLib$$anon$1$$Lambda$61.0x0000000800d25648.apply
  [ 5] cats.effect.IOFiber.$anonfun$8
  [ 6] cats.effect.IOFiber$$Lambda$204.0x0000000800da9ac0.apply
  [ 7] cats.effect.unsafe.WorkerThread.blockOn
  [ 8] scala.concurrent.package$.blocking
  [ 9] cats.effect.IOFiber.runLoop
  [10] cats.effect.IOFiber.execR
  [11] cats.effect.IOFiber.run
  [12] cats.effect.unsafe.WorkerThread.run

--- 1494353640 ns (0.11%), 149 samples
  [ 0] zio_create?[zfs]_[k]
  [ 1] zio_null?[zfs]_[k]
  [ 2] zio_root?[zfs]_[k]
  [ 3] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 4] dmu_read_uio_dnode?[zfs]_[k]
  [ 5] dmu_read_uio_dbuf?[zfs]_[k]
  [ 6] mappedread?[zfs]_[k]
  [ 7] zfs_read?[zfs]_[k]
  [ 8] zpl_iter_read?[zfs]_[k]
  [ 9] new_sync_read_[k]
  [10] vfs_read_[k]
  [11] __x64_sys_pread64_[k]
  [12] do_syscall_64_[k]
  [13] entry_SYSCALL_64_after_hwframe_[k]
  [14] __libc_pread64
  [15] sun.nio.ch.FileDispatcherImpl.pread0
  [16] sun.nio.ch.FileDispatcherImpl.pread
  [17] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [18] sun.nio.ch.IOUtil.read
  [19] sun.nio.ch.IOUtil.read
  [20] sun.nio.ch.FileChannelImpl.readInternal
  [21] sun.nio.ch.FileChannelImpl.read
  [22] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [23] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [24] jdk.nio.zipfs.ZipFileSystem$2.fill
  [25] java.util.zip.InflaterInputStream.read
  [26] java.io.InputStream.readNBytes
  [27] java.io.InputStream.readAllBytes
  [28] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [29] com.scalamandra.ZipLib$$anon$1$$Lambda$61.0x0000000800d25648.apply
  [30] cats.effect.IOFiber.$anonfun$8
  [31] cats.effect.IOFiber$$Lambda$204.0x0000000800da9ac0.apply
  [32] cats.effect.unsafe.WorkerThread.blockOn
  [33] scala.concurrent.package$.blocking
  [34] cats.effect.IOFiber.runLoop
  [35] cats.effect.IOFiber.execR
  [36] cats.effect.IOFiber.run
  [37] cats.effect.unsafe.WorkerThread.run

--- 1303997554 ns (0.09%), 130 samples
  [ 0] find_vmap_area_[k]
  [ 1] check_heap_object_[k]
  [ 2] __check_object_size.part.0_[k]
  [ 3] __check_object_size_[k]
  [ 4] zfs_uiomove_iter?[zfs]_[k]
  [ 5] zfs_uiomove?[zfs]_[k]
  [ 6] dmu_read_uio_dnode?[zfs]_[k]
  [ 7] dmu_read_uio_dbuf?[zfs]_[k]
  [ 8] mappedread?[zfs]_[k]
  [ 9] zfs_read?[zfs]_[k]
  [10] zpl_iter_read?[zfs]_[k]
  [11] new_sync_read_[k]
  [12] vfs_read_[k]
  [13] __x64_sys_pread64_[k]
  [14] do_syscall_64_[k]
  [15] entry_SYSCALL_64_after_hwframe_[k]
  [16] __libc_pread64
  [17] sun.nio.ch.FileDispatcherImpl.pread0
  [18] sun.nio.ch.FileDispatcherImpl.pread
  [19] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [20] sun.nio.ch.IOUtil.read
  [21] sun.nio.ch.IOUtil.read
  [22] sun.nio.ch.FileChannelImpl.readInternal
  [23] sun.nio.ch.FileChannelImpl.read
  [24] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [25] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [26] jdk.nio.zipfs.ZipFileSystem$Entry.readLocEXTT
  [27] jdk.nio.zipfs.ZipFileSystem$Entry.readExtra
  [28] jdk.nio.zipfs.ZipFileSystem$Entry.readCEN
  [29] jdk.nio.zipfs.ZipFileSystem$Entry.<init>
  [30] jdk.nio.zipfs.ZipFileSystem.getEntry
  [31] jdk.nio.zipfs.ZipFileSystem.newInputStream
  [32] jdk.nio.zipfs.ZipPath.newInputStream
  [33] jdk.nio.zipfs.ZipFileSystemProvider.newInputStream
  [34] java.nio.file.Files.newInputStream
  [35] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [36] com.scalamandra.ZipLib$$anon$1$$Lambda$61.0x0000000800d25648.apply
  [37] cats.effect.IOFiber.$anonfun$8
  [38] cats.effect.IOFiber$$Lambda$204.0x0000000800da9ac0.apply
  [39] cats.effect.unsafe.WorkerThread.blockOn
  [40] scala.concurrent.package$.blocking
  [41] cats.effect.IOFiber.runLoop
  [42] cats.effect.IOFiber.execR
  [43] cats.effect.IOFiber.run
  [44] cats.effect.unsafe.WorkerThread.run

--- 1262764634 ns (0.09%), 126 samples
  [ 0] jbyte_disjoint_arraycopy
  [ 1] jdk.internal.misc.Unsafe.copyMemory0
  [ 2] jdk.internal.misc.Unsafe.copyMemory
  [ 3] jdk.internal.misc.ScopedMemoryAccess.copyMemoryInternal
  [ 4] jdk.internal.misc.ScopedMemoryAccess.copyMemory
  [ 5] java.nio.ByteBuffer.putBuffer
  [ 6] java.nio.ByteBuffer.put
  [ 7] java.nio.HeapByteBuffer.put
  [ 8] sun.nio.ch.IOUtil.read
  [ 9] sun.nio.ch.IOUtil.read
  [10] sun.nio.ch.FileChannelImpl.readInternal
  [11] sun.nio.ch.FileChannelImpl.read
  [12] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [13] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [14] jdk.nio.zipfs.ZipFileSystem$2.fill
  [15] java.util.zip.InflaterInputStream.read
  [16] java.io.InputStream.readNBytes
  [17] java.io.InputStream.readAllBytes
  [18] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [19] com.scalamandra.ZipLib$$anon$1$$Lambda$61.0x0000000800d25648.apply
  [20] cats.effect.IOFiber.$anonfun$8
  [21] cats.effect.IOFiber$$Lambda$204.0x0000000800da9ac0.apply
  [22] cats.effect.unsafe.WorkerThread.blockOn
  [23] scala.concurrent.package$.blocking
  [24] cats.effect.IOFiber.runLoop
  [25] cats.effect.IOFiber.execR
  [26] cats.effect.IOFiber.run
  [27] cats.effect.unsafe.WorkerThread.run

--- 1214813307 ns (0.09%), 121 samples
  [ 0] __vfprintf_internal
  [ 1] [unknown]
  [ 2] java.lang.Thread.setNativeName
  [ 3] java.lang.Thread.setName
  [ 4] cats.effect.unsafe.WorkerThread.blockOn
  [ 5] scala.concurrent.package$.blocking
  [ 6] cats.effect.IOFiber.runLoop
  [ 7] cats.effect.IOFiber.execR
  [ 8] cats.effect.IOFiber.run
  [ 9] cats.effect.unsafe.WorkerThread.run

--- 1144667475 ns (0.08%), 111 samples
  [ 0] __schedule_[k]
  [ 1] schedule_[k]
  [ 2] futex_wait_queue_[k]
  [ 3] futex_wait_[k]
  [ 4] do_futex_[k]
  [ 5] __x64_sys_futex_[k]
  [ 6] do_syscall_64_[k]
  [ 7] entry_SYSCALL_64_after_hwframe_[k]
  [ 8] __futex_abstimed_wait_cancelable64
  [ 9] [unknown]
  [10] jdk.internal.misc.Unsafe.park
  [11] java.util.concurrent.locks.LockSupport.parkNanos
  [12] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos
  [13] java.util.concurrent.ArrayBlockingQueue.poll
  [14] cats.effect.IOPlatform.$anonfun$1
  [15] cats.effect.IOPlatform$$Lambda$198.0x0000000800dafc68.apply
  [16] scala.concurrent.BlockContext$DefaultBlockContext$.blockOn
  [17] scala.concurrent.package$.blocking
  [18] cats.effect.IOPlatform.unsafeRunTimed
  [19] cats.effect.IOPlatform.unsafeRunSync
  [20] com.scalamandra.ZipBench.nioInputStream
  [21] com.scalamandra.jmh_generated.ZipBench_nioInputStream_jmhTest.nioInputStream_thrpt_jmhStub
  [22] com.scalamandra.jmh_generated.ZipBench_nioInputStream_jmhTest.nioInputStream_Throughput
  [23] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [24] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [25] java.lang.reflect.Method.invoke
  [26] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [27] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [28] java.util.concurrent.FutureTask.run
  [29] java.util.concurrent.Executors$RunnableAdapter.call
  [30] java.util.concurrent.FutureTask.run
  [31] java.util.concurrent.ThreadPoolExecutor.runWorker
  [32] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [33] java.lang.Thread.run

--- 1122480943 ns (0.08%), 112 samples
  [ 0] java.util.Arrays.copyOfRange
  [ 1] java.io.InputStream.readNBytes
  [ 2] java.io.InputStream.readAllBytes
  [ 3] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [ 4] com.scalamandra.ZipLib$$anon$1$$Lambda$61.0x0000000800d25648.apply
  [ 5] cats.effect.IOFiber.$anonfun$8
  [ 6] cats.effect.IOFiber$$Lambda$204.0x0000000800da9ac0.apply
  [ 7] cats.effect.unsafe.WorkerThread.blockOn
  [ 8] scala.concurrent.package$.blocking
  [ 9] cats.effect.IOFiber.runLoop
  [10] cats.effect.IOFiber.execR
  [11] cats.effect.IOFiber.run
  [12] cats.effect.unsafe.WorkerThread.run

--- 1072226596 ns (0.08%), 104 samples
  [ 0] syscall_enter_from_user_mode_[k]
  [ 1] do_syscall_64_[k]
  [ 2] entry_SYSCALL_64_after_hwframe_[k]
  [ 3] __futex_abstimed_wait_cancelable64
  [ 4] [unknown]
  [ 5] jdk.internal.misc.Unsafe.park
  [ 6] java.util.concurrent.locks.LockSupport.parkNanos
  [ 7] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos
  [ 8] java.util.concurrent.ArrayBlockingQueue.poll
  [ 9] cats.effect.IOPlatform.$anonfun$1
  [10] cats.effect.IOPlatform$$Lambda$198.0x0000000800dafc68.apply
  [11] scala.concurrent.BlockContext$DefaultBlockContext$.blockOn
  [12] scala.concurrent.package$.blocking
  [13] cats.effect.IOPlatform.unsafeRunTimed
  [14] cats.effect.IOPlatform.unsafeRunSync
  [15] com.scalamandra.ZipBench.nioInputStream
  [16] com.scalamandra.jmh_generated.ZipBench_nioInputStream_jmhTest.nioInputStream_thrpt_jmhStub
  [17] com.scalamandra.jmh_generated.ZipBench_nioInputStream_jmhTest.nioInputStream_Throughput
  [18] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [19] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.run

--- 1023135273 ns (0.07%), 102 samples
  [ 0] find_vmap_area_[k]
  [ 1] check_heap_object_[k]
  [ 2] __check_object_size.part.0_[k]
  [ 3] __check_object_size_[k]
  [ 4] zfs_uiomove_iter?[zfs]_[k]
  [ 5] zfs_uiomove?[zfs]_[k]
  [ 6] dmu_read_uio_dnode?[zfs]_[k]
  [ 7] dmu_read_uio_dbuf?[zfs]_[k]
  [ 8] mappedread?[zfs]_[k]
  [ 9] zfs_read?[zfs]_[k]
  [10] zpl_iter_read?[zfs]_[k]
  [11] new_sync_read_[k]
  [12] vfs_read_[k]
  [13] __x64_sys_pread64_[k]
  [14] do_syscall_64_[k]
  [15] entry_SYSCALL_64_after_hwframe_[k]
  [16] __libc_pread64
  [17] sun.nio.ch.FileDispatcherImpl.pread0
  [18] sun.nio.ch.FileDispatcherImpl.pread
  [19] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [20] sun.nio.ch.IOUtil.read
  [21] sun.nio.ch.IOUtil.read
  [22] sun.nio.ch.FileChannelImpl.readInternal
  [23] sun.nio.ch.FileChannelImpl.read
  [24] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [25] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [26] jdk.nio.zipfs.ZipFileSystem$2.fill
  [27] java.util.zip.InflaterInputStream.read
  [28] java.io.InputStream.readNBytes
  [29] java.io.InputStream.readAllBytes
  [30] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [31] com.scalamandra.ZipLib$$anon$1$$Lambda$61.0x0000000800d25648.apply
  [32] cats.effect.IOFiber.$anonfun$8
  [33] cats.effect.IOFiber$$Lambda$204.0x0000000800da9ac0.apply
  [34] cats.effect.unsafe.WorkerThread.blockOn
  [35] scala.concurrent.package$.blocking
  [36] cats.effect.IOFiber.runLoop
  [37] cats.effect.IOFiber.execR
  [38] cats.effect.IOFiber.run
  [39] cats.effect.unsafe.WorkerThread.run

--- 1009438335 ns (0.07%), 100 samples
  [ 0] HeapRegionManager::par_iterate(HeapRegionClosure*, HeapRegionClaimer*, unsigned int) const
  [ 1] G1PrepareEvacuationTask::work(unsigned int)
  [ 2] GangWorker::loop()
  [ 3] GangWorker::run()
  [ 4] Thread::call_run()
  [ 5] thread_native_entry(Thread*)
  [ 6] start_thread

--- 876595739 ns (0.06%), 85 samples
  [ 0] futex_q_lock_[k]
  [ 1] futex_wait_setup_[k]
  [ 2] futex_wait_[k]
  [ 3] do_futex_[k]
  [ 4] __x64_sys_futex_[k]
  [ 5] do_syscall_64_[k]
  [ 6] entry_SYSCALL_64_after_hwframe_[k]
  [ 7] __futex_abstimed_wait_cancelable64
  [ 8] [unknown]
  [ 9] jdk.internal.misc.Unsafe.park
  [10] java.util.concurrent.locks.LockSupport.parkNanos
  [11] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos
  [12] java.util.concurrent.ArrayBlockingQueue.poll
  [13] cats.effect.IOPlatform.$anonfun$1
  [14] cats.effect.IOPlatform$$Lambda$198.0x0000000800dafc68.apply
  [15] scala.concurrent.BlockContext$DefaultBlockContext$.blockOn
  [16] scala.concurrent.package$.blocking
  [17] cats.effect.IOPlatform.unsafeRunTimed
  [18] cats.effect.IOPlatform.unsafeRunSync
  [19] com.scalamandra.ZipBench.nioInputStream
  [20] com.scalamandra.jmh_generated.ZipBench_nioInputStream_jmhTest.nioInputStream_thrpt_jmhStub
  [21] com.scalamandra.jmh_generated.ZipBench_nioInputStream_jmhTest.nioInputStream_Throughput
  [22] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [23] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [24] java.lang.reflect.Method.invoke
  [25] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [26] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [27] java.util.concurrent.FutureTask.run
  [28] java.util.concurrent.Executors$RunnableAdapter.call
  [29] java.util.concurrent.FutureTask.run
  [30] java.util.concurrent.ThreadPoolExecutor.runWorker
  [31] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [32] java.lang.Thread.run

--- 872763132 ns (0.06%), 87 samples
  [ 0] memset_[k]
  [ 1] spl_kmem_cache_alloc?[spl]_[k]
  [ 2] zio_create?[zfs]_[k]
  [ 3] zio_null?[zfs]_[k]
  [ 4] zio_root?[zfs]_[k]
  [ 5] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 6] dmu_read_uio_dnode?[zfs]_[k]
  [ 7] dmu_read_uio_dbuf?[zfs]_[k]
  [ 8] mappedread?[zfs]_[k]
  [ 9] zfs_read?[zfs]_[k]
  [10] zpl_iter_read?[zfs]_[k]
  [11] new_sync_read_[k]
  [12] vfs_read_[k]
  [13] __x64_sys_pread64_[k]
  [14] do_syscall_64_[k]
  [15] entry_SYSCALL_64_after_hwframe_[k]
  [16] __libc_pread64
  [17] sun.nio.ch.FileDispatcherImpl.pread0
  [18] sun.nio.ch.FileDispatcherImpl.pread
  [19] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [20] sun.nio.ch.IOUtil.read
  [21] sun.nio.ch.IOUtil.read
  [22] sun.nio.ch.FileChannelImpl.readInternal
  [23] sun.nio.ch.FileChannelImpl.read
  [24] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [25] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [26] jdk.nio.zipfs.ZipFileSystem$2.fill
  [27] java.util.zip.InflaterInputStream.read
  [28] java.io.InputStream.readNBytes
  [29] java.io.InputStream.readAllBytes
  [30] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [31] com.scalamandra.ZipLib$$anon$1$$Lambda$61.0x0000000800d25648.apply
  [32] cats.effect.IOFiber.$anonfun$8
  [33] cats.effect.IOFiber$$Lambda$204.0x0000000800da9ac0.apply
  [34] cats.effect.unsafe.WorkerThread.blockOn
  [35] scala.concurrent.package$.blocking
  [36] cats.effect.IOFiber.runLoop
  [37] cats.effect.IOFiber.execR
  [38] cats.effect.IOFiber.run
  [39] cats.effect.unsafe.WorkerThread.run

--- 824520273 ns (0.06%), 80 samples
  [ 0] __x64_sys_futex_[k]
  [ 1] do_syscall_64_[k]
  [ 2] entry_SYSCALL_64_after_hwframe_[k]
  [ 3] __futex_abstimed_wait_cancelable64
  [ 4] [unknown]
  [ 5] jdk.internal.misc.Unsafe.park
  [ 6] java.util.concurrent.locks.LockSupport.parkNanos
  [ 7] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos
  [ 8] java.util.concurrent.ArrayBlockingQueue.poll
  [ 9] cats.effect.IOPlatform.$anonfun$1
  [10] cats.effect.IOPlatform$$Lambda$198.0x0000000800dafc68.apply
  [11] scala.concurrent.BlockContext$DefaultBlockContext$.blockOn
  [12] scala.concurrent.package$.blocking
  [13] cats.effect.IOPlatform.unsafeRunTimed
  [14] cats.effect.IOPlatform.unsafeRunSync
  [15] com.scalamandra.ZipBench.nioInputStream
  [16] com.scalamandra.jmh_generated.ZipBench_nioInputStream_jmhTest.nioInputStream_thrpt_jmhStub
  [17] com.scalamandra.jmh_generated.ZipBench_nioInputStream_jmhTest.nioInputStream_Throughput
  [18] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [19] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.run

--- 812617752 ns (0.06%), 81 samples
  [ 0] zio_create?[zfs]_[k]
  [ 1] zio_null?[zfs]_[k]
  [ 2] zio_root?[zfs]_[k]
  [ 3] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 4] dmu_read_uio_dnode?[zfs]_[k]
  [ 5] dmu_read_uio_dbuf?[zfs]_[k]
  [ 6] mappedread?[zfs]_[k]
  [ 7] zfs_read?[zfs]_[k]
  [ 8] zpl_iter_read?[zfs]_[k]
  [ 9] new_sync_read_[k]
  [10] vfs_read_[k]
  [11] __x64_sys_pread64_[k]
  [12] do_syscall_64_[k]
  [13] entry_SYSCALL_64_after_hwframe_[k]
  [14] __libc_pread64
  [15] sun.nio.ch.FileDispatcherImpl.pread0
  [16] sun.nio.ch.FileDispatcherImpl.pread
  [17] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [18] sun.nio.ch.IOUtil.read
  [19] sun.nio.ch.IOUtil.read
  [20] sun.nio.ch.FileChannelImpl.readInternal
  [21] sun.nio.ch.FileChannelImpl.read
  [22] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [23] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [24] jdk.nio.zipfs.ZipFileSystem$2.fill
  [25] java.util.zip.InflaterInputStream.read
  [26] java.io.InputStream.readNBytes
  [27] java.io.InputStream.readAllBytes
  [28] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [29] com.scalamandra.ZipLib$$anon$1$$Lambda$61.0x0000000800d25648.apply
  [30] cats.effect.IOFiber.$anonfun$8
  [31] cats.effect.IOFiber$$Lambda$204.0x0000000800da9ac0.apply
  [32] cats.effect.unsafe.WorkerThread.blockOn
  [33] scala.concurrent.package$.blocking
  [34] cats.effect.IOFiber.runLoop
  [35] cats.effect.IOFiber.execR
  [36] cats.effect.IOFiber.run
  [37] cats.effect.unsafe.WorkerThread.run

--- 782585230 ns (0.06%), 78 samples
  [ 0] __GI__IO_setb
  [ 1] java.lang.Thread.setNativeName
  [ 2] java.lang.Thread.setName
  [ 3] cats.effect.unsafe.WorkerThread.blockOn
  [ 4] scala.concurrent.package$.blocking
  [ 5] cats.effect.IOFiber.runLoop
  [ 6] cats.effect.IOFiber.execR
  [ 7] cats.effect.IOFiber.run
  [ 8] cats.effect.unsafe.WorkerThread.run

--- 762160197 ns (0.05%), 76 samples
  [ 0] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 1] dmu_read_uio_dnode?[zfs]_[k]
  [ 2] dmu_read_uio_dbuf?[zfs]_[k]
  [ 3] mappedread?[zfs]_[k]
  [ 4] zfs_read?[zfs]_[k]
  [ 5] zpl_iter_read?[zfs]_[k]
  [ 6] new_sync_read_[k]
  [ 7] vfs_read_[k]
  [ 8] __x64_sys_pread64_[k]
  [ 9] do_syscall_64_[k]
  [10] entry_SYSCALL_64_after_hwframe_[k]
  [11] __libc_pread64
  [12] sun.nio.ch.FileDispatcherImpl.pread0
  [13] sun.nio.ch.FileDispatcherImpl.pread
  [14] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [15] sun.nio.ch.IOUtil.read
  [16] sun.nio.ch.IOUtil.read
  [17] sun.nio.ch.FileChannelImpl.readInternal
  [18] sun.nio.ch.FileChannelImpl.read
  [19] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [20] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [21] jdk.nio.zipfs.ZipFileSystem$2.fill
  [22] java.util.zip.InflaterInputStream.read
  [23] java.io.InputStream.readNBytes
  [24] java.io.InputStream.readAllBytes
  [25] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [26] com.scalamandra.ZipLib$$anon$1$$Lambda$61.0x0000000800d25648.apply
  [27] cats.effect.IOFiber.$anonfun$8
  [28] cats.effect.IOFiber$$Lambda$204.0x0000000800da9ac0.apply
  [29] cats.effect.unsafe.WorkerThread.blockOn
  [30] scala.concurrent.package$.blocking
  [31] cats.effect.IOFiber.runLoop
  [32] cats.effect.IOFiber.execR
  [33] cats.effect.IOFiber.run
  [34] cats.effect.unsafe.WorkerThread.run

--- 721567416 ns (0.05%), 70 samples
  [ 0] futex_wait_[k]
  [ 1] do_futex_[k]
  [ 2] __x64_sys_futex_[k]
  [ 3] do_syscall_64_[k]
  [ 4] entry_SYSCALL_64_after_hwframe_[k]
  [ 5] __futex_abstimed_wait_cancelable64
  [ 6] [unknown]
  [ 7] jdk.internal.misc.Unsafe.park
  [ 8] java.util.concurrent.locks.LockSupport.parkNanos
  [ 9] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos
  [10] java.util.concurrent.ArrayBlockingQueue.poll
  [11] cats.effect.IOPlatform.$anonfun$1
  [12] cats.effect.IOPlatform$$Lambda$198.0x0000000800dafc68.apply
  [13] scala.concurrent.BlockContext$DefaultBlockContext$.blockOn
  [14] scala.concurrent.package$.blocking
  [15] cats.effect.IOPlatform.unsafeRunTimed
  [16] cats.effect.IOPlatform.unsafeRunSync
  [17] com.scalamandra.ZipBench.nioInputStream
  [18] com.scalamandra.jmh_generated.ZipBench_nioInputStream_jmhTest.nioInputStream_thrpt_jmhStub
  [19] com.scalamandra.jmh_generated.ZipBench_nioInputStream_jmhTest.nioInputStream_Throughput
  [20] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [21] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [22] java.lang.reflect.Method.invoke
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.Executors$RunnableAdapter.call
  [27] java.util.concurrent.FutureTask.run
  [28] java.util.concurrent.ThreadPoolExecutor.runWorker
  [29] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [30] java.lang.Thread.run

--- 701598417 ns (0.05%), 70 samples
  [ 0] jni_GetPrimitiveArrayCritical
  [ 1] Java_java_util_zip_Inflater_inflateBytesBytes
  [ 2] java.util.zip.Inflater.inflateBytesBytes
  [ 3] java.util.zip.Inflater.inflate
  [ 4] java.util.zip.InflaterInputStream.read
  [ 5] java.io.InputStream.readNBytes
  [ 6] java.io.InputStream.readAllBytes
  [ 7] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [ 8] com.scalamandra.ZipLib$$anon$1$$Lambda$61.0x0000000800d25648.apply
  [ 9] cats.effect.IOFiber.$anonfun$8
  [10] cats.effect.IOFiber$$Lambda$204.0x0000000800da9ac0.apply
  [11] cats.effect.unsafe.WorkerThread.blockOn
  [12] scala.concurrent.package$.blocking
  [13] cats.effect.IOFiber.runLoop
  [14] cats.effect.IOFiber.execR
  [15] cats.effect.IOFiber.run
  [16] cats.effect.unsafe.WorkerThread.run

--- 681941513 ns (0.05%), 68 samples
  [ 0] __fget_light_[k]
  [ 1] __fdget_[k]
  [ 2] __x64_sys_pread64_[k]
  [ 3] do_syscall_64_[k]
  [ 4] entry_SYSCALL_64_after_hwframe_[k]
  [ 5] __libc_pread64
  [ 6] sun.nio.ch.FileDispatcherImpl.pread0
  [ 7] sun.nio.ch.FileDispatcherImpl.pread
  [ 8] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [ 9] sun.nio.ch.IOUtil.read
  [10] sun.nio.ch.IOUtil.read
  [11] sun.nio.ch.FileChannelImpl.readInternal
  [12] sun.nio.ch.FileChannelImpl.read
  [13] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [14] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [15] jdk.nio.zipfs.ZipFileSystem$Entry.readLocEXTT
  [16] jdk.nio.zipfs.ZipFileSystem$Entry.readExtra
  [17] jdk.nio.zipfs.ZipFileSystem$Entry.readCEN
  [18] jdk.nio.zipfs.ZipFileSystem$Entry.<init>
  [19] jdk.nio.zipfs.ZipFileSystem.getEntry
  [20] jdk.nio.zipfs.ZipFileSystem.newInputStream
  [21] jdk.nio.zipfs.ZipPath.newInputStream
  [22] jdk.nio.zipfs.ZipFileSystemProvider.newInputStream
  [23] java.nio.file.Files.newInputStream
  [24] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [25] com.scalamandra.ZipLib$$anon$1$$Lambda$61.0x0000000800d25648.apply
  [26] cats.effect.IOFiber.$anonfun$8
  [27] cats.effect.IOFiber$$Lambda$204.0x0000000800da9ac0.apply
  [28] cats.effect.unsafe.WorkerThread.blockOn
  [29] scala.concurrent.package$.blocking
  [30] cats.effect.IOFiber.runLoop
  [31] cats.effect.IOFiber.execR
  [32] cats.effect.IOFiber.run
  [33] cats.effect.unsafe.WorkerThread.run

--- 671892402 ns (0.05%), 67 samples
  [ 0] zio_wait?[zfs]_[k]
  [ 1] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 2] dmu_read_uio_dnode?[zfs]_[k]
  [ 3] dmu_read_uio_dbuf?[zfs]_[k]
  [ 4] mappedread?[zfs]_[k]
  [ 5] zfs_read?[zfs]_[k]
  [ 6] zpl_iter_read?[zfs]_[k]
  [ 7] new_sync_read_[k]
  [ 8] vfs_read_[k]
  [ 9] __x64_sys_pread64_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] __libc_pread64
  [13] sun.nio.ch.FileDispatcherImpl.pread0
  [14] sun.nio.ch.FileDispatcherImpl.pread
  [15] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [16] sun.nio.ch.IOUtil.read
  [17] sun.nio.ch.IOUtil.read
  [18] sun.nio.ch.FileChannelImpl.readInternal
  [19] sun.nio.ch.FileChannelImpl.read
  [20] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [21] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [22] jdk.nio.zipfs.ZipFileSystem$2.fill
  [23] java.util.zip.InflaterInputStream.read
  [24] java.io.InputStream.readNBytes
  [25] java.io.InputStream.readAllBytes
  [26] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [27] com.scalamandra.ZipLib$$anon$1$$Lambda$61.0x0000000800d25648.apply
  [28] cats.effect.IOFiber.$anonfun$8
  [29] cats.effect.IOFiber$$Lambda$204.0x0000000800da9ac0.apply
  [30] cats.effect.unsafe.WorkerThread.blockOn
  [31] scala.concurrent.package$.blocking
  [32] cats.effect.IOFiber.runLoop
  [33] cats.effect.IOFiber.execR
  [34] cats.effect.IOFiber.run
  [35] cats.effect.unsafe.WorkerThread.run

--- 632115703 ns (0.04%), 63 samples
  [ 0] __GI__IO_setb
  [ 1] java.lang.Thread.setNativeName
  [ 2] java.lang.Thread.setName
  [ 3] cats.effect.unsafe.WorkerThread.blockOn
  [ 4] scala.concurrent.package$.blocking
  [ 5] cats.effect.IOFiber.runLoop
  [ 6] cats.effect.IOFiber.execR
  [ 7] cats.effect.IOFiber.run
  [ 8] cats.effect.unsafe.WorkerThread.run

--- 627960772 ns (0.04%), 61 samples
  [ 0] Unsafe_Park
  [ 1] jdk.internal.misc.Unsafe.park
  [ 2] java.util.concurrent.locks.LockSupport.parkNanos
  [ 3] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos
  [ 4] java.util.concurrent.ArrayBlockingQueue.poll
  [ 5] cats.effect.IOPlatform.$anonfun$1
  [ 6] cats.effect.IOPlatform$$Lambda$198.0x0000000800dafc68.apply
  [ 7] scala.concurrent.BlockContext$DefaultBlockContext$.blockOn
  [ 8] scala.concurrent.package$.blocking
  [ 9] cats.effect.IOPlatform.unsafeRunTimed
  [10] cats.effect.IOPlatform.unsafeRunSync
  [11] com.scalamandra.ZipBench.nioInputStream
  [12] com.scalamandra.jmh_generated.ZipBench_nioInputStream_jmhTest.nioInputStream_thrpt_jmhStub
  [13] com.scalamandra.jmh_generated.ZipBench_nioInputStream_jmhTest.nioInputStream_Throughput
  [14] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [15] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [16] java.lang.reflect.Method.invoke
  [17] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [18] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [19] java.util.concurrent.FutureTask.run
  [20] java.util.concurrent.Executors$RunnableAdapter.call
  [21] java.util.concurrent.FutureTask.run
  [22] java.util.concurrent.ThreadPoolExecutor.runWorker
  [23] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [24] java.lang.Thread.run

--- 625852955 ns (0.04%), 62 samples
  [ 0] __memcpy_sse2_unaligned_erms
  [ 1] G1ParEvacuateFollowersClosure::do_void()
  [ 2] G1EvacuateRegionsTask::evacuate_live_objects(G1ParScanThreadState*, unsigned int)
  [ 3] G1EvacuateRegionsBaseTask::work(unsigned int)
  [ 4] GangWorker::loop()
  [ 5] GangWorker::run()
  [ 6] Thread::call_run()
  [ 7] thread_native_entry(Thread*)
  [ 8] start_thread

--- 622058914 ns (0.04%), 62 samples
  [ 0] memset_[k]
  [ 1] spl_kmem_cache_alloc?[spl]_[k]
  [ 2] zio_create?[zfs]_[k]
  [ 3] zio_null?[zfs]_[k]
  [ 4] zio_root?[zfs]_[k]
  [ 5] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 6] dmu_read_uio_dnode?[zfs]_[k]
  [ 7] dmu_read_uio_dbuf?[zfs]_[k]
  [ 8] mappedread?[zfs]_[k]
  [ 9] zfs_read?[zfs]_[k]
  [10] zpl_iter_read?[zfs]_[k]
  [11] new_sync_read_[k]
  [12] vfs_read_[k]
  [13] __x64_sys_pread64_[k]
  [14] do_syscall_64_[k]
  [15] entry_SYSCALL_64_after_hwframe_[k]
  [16] __libc_pread64
  [17] sun.nio.ch.FileDispatcherImpl.pread0
  [18] sun.nio.ch.FileDispatcherImpl.pread
  [19] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [20] sun.nio.ch.IOUtil.read
  [21] sun.nio.ch.IOUtil.read
  [22] sun.nio.ch.FileChannelImpl.readInternal
  [23] sun.nio.ch.FileChannelImpl.read
  [24] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [25] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [26] jdk.nio.zipfs.ZipFileSystem$2.fill
  [27] java.util.zip.InflaterInputStream.read
  [28] java.io.InputStream.readNBytes
  [29] java.io.InputStream.readAllBytes
  [30] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [31] com.scalamandra.ZipLib$$anon$1$$Lambda$61.0x0000000800d25648.apply
  [32] cats.effect.IOFiber.$anonfun$8
  [33] cats.effect.IOFiber$$Lambda$204.0x0000000800da9ac0.apply
  [34] cats.effect.unsafe.WorkerThread.blockOn
  [35] scala.concurrent.package$.blocking
  [36] cats.effect.IOFiber.runLoop
  [37] cats.effect.IOFiber.execR
  [38] cats.effect.IOFiber.run
  [39] cats.effect.unsafe.WorkerThread.run

--- 611958269 ns (0.04%), 61 samples
  [ 0] fsnotify_perm.part.0_[k]
  [ 1] security_file_permission_[k]
  [ 2] rw_verify_area_[k]
  [ 3] vfs_read_[k]
  [ 4] __x64_sys_pread64_[k]
  [ 5] do_syscall_64_[k]
  [ 6] entry_SYSCALL_64_after_hwframe_[k]
  [ 7] __libc_pread64
  [ 8] sun.nio.ch.FileDispatcherImpl.pread0
  [ 9] sun.nio.ch.FileDispatcherImpl.pread
  [10] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [11] sun.nio.ch.IOUtil.read
  [12] sun.nio.ch.IOUtil.read
  [13] sun.nio.ch.FileChannelImpl.readInternal
  [14] sun.nio.ch.FileChannelImpl.read
  [15] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [16] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [17] jdk.nio.zipfs.ZipFileSystem$Entry.readLocEXTT
  [18] jdk.nio.zipfs.ZipFileSystem$Entry.readExtra
  [19] jdk.nio.zipfs.ZipFileSystem$Entry.readCEN
  [20] jdk.nio.zipfs.ZipFileSystem$Entry.<init>
  [21] jdk.nio.zipfs.ZipFileSystem.getEntry
  [22] jdk.nio.zipfs.ZipFileSystem.newInputStream
  [23] jdk.nio.zipfs.ZipPath.newInputStream
  [24] jdk.nio.zipfs.ZipFileSystemProvider.newInputStream
  [25] java.nio.file.Files.newInputStream
  [26] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [27] com.scalamandra.ZipLib$$anon$1$$Lambda$61.0x0000000800d25648.apply
  [28] cats.effect.IOFiber.$anonfun$8
  [29] cats.effect.IOFiber$$Lambda$204.0x0000000800da9ac0.apply
  [30] cats.effect.unsafe.WorkerThread.blockOn
  [31] scala.concurrent.package$.blocking
  [32] cats.effect.IOFiber.runLoop
  [33] cats.effect.IOFiber.execR
  [34] cats.effect.IOFiber.run
  [35] cats.effect.unsafe.WorkerThread.run

--- 601872885 ns (0.04%), 60 samples
  [ 0] find_vmap_area_[k]
  [ 1] check_heap_object_[k]
  [ 2] __check_object_size.part.0_[k]
  [ 3] __check_object_size_[k]
  [ 4] zfs_uiomove_iter?[zfs]_[k]
  [ 5] zfs_uiomove?[zfs]_[k]
  [ 6] dmu_read_uio_dnode?[zfs]_[k]
  [ 7] dmu_read_uio_dbuf?[zfs]_[k]
  [ 8] mappedread?[zfs]_[k]
  [ 9] zfs_read?[zfs]_[k]
  [10] zpl_iter_read?[zfs]_[k]
  [11] new_sync_read_[k]
  [12] vfs_read_[k]
  [13] __x64_sys_pread64_[k]
  [14] do_syscall_64_[k]
  [15] entry_SYSCALL_64_after_hwframe_[k]
  [16] __libc_pread64
  [17] sun.nio.ch.FileDispatcherImpl.pread0
  [18] sun.nio.ch.FileDispatcherImpl.pread
  [19] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [20] sun.nio.ch.IOUtil.read
  [21] sun.nio.ch.IOUtil.read
  [22] sun.nio.ch.FileChannelImpl.readInternal
  [23] sun.nio.ch.FileChannelImpl.read
  [24] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [25] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [26] jdk.nio.zipfs.ZipFileSystem$2.fill
  [27] java.util.zip.InflaterInputStream.read
  [28] java.io.InputStream.readNBytes
  [29] java.io.InputStream.readAllBytes
  [30] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [31] com.scalamandra.ZipLib$$anon$1$$Lambda$61.0x0000000800d25648.apply
  [32] cats.effect.IOFiber.$anonfun$8
  [33] cats.effect.IOFiber$$Lambda$204.0x0000000800da9ac0.apply
  [34] cats.effect.unsafe.WorkerThread.blockOn
  [35] scala.concurrent.package$.blocking
  [36] cats.effect.IOFiber.runLoop
  [37] cats.effect.IOFiber.execR
  [38] cats.effect.IOFiber.run
  [39] cats.effect.unsafe.WorkerThread.run

--- 591932766 ns (0.04%), 59 samples
  [ 0] __vfprintf_internal
  [ 1] [unknown]
  [ 2] java.lang.Thread.setNativeName
  [ 3] java.lang.Thread.setName
  [ 4] cats.effect.unsafe.WorkerThread.blockOn
  [ 5] scala.concurrent.package$.blocking
  [ 6] cats.effect.IOFiber.runLoop
  [ 7] cats.effect.IOFiber.execR
  [ 8] cats.effect.IOFiber.run
  [ 9] cats.effect.unsafe.WorkerThread.run

--- 581988224 ns (0.04%), 58 samples
  [ 0] __kmalloc_node_[k]
  [ 1] spl_kmem_alloc_impl?[spl]_[k]
  [ 2] spl_kmem_zalloc?[spl]_[k]
  [ 3] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 4] dmu_read_uio_dnode?[zfs]_[k]
  [ 5] dmu_read_uio_dbuf?[zfs]_[k]
  [ 6] mappedread?[zfs]_[k]
  [ 7] zfs_read?[zfs]_[k]
  [ 8] zpl_iter_read?[zfs]_[k]
  [ 9] new_sync_read_[k]
  [10] vfs_read_[k]
  [11] __x64_sys_pread64_[k]
  [12] do_syscall_64_[k]
  [13] entry_SYSCALL_64_after_hwframe_[k]
  [14] __libc_pread64
  [15] sun.nio.ch.FileDispatcherImpl.pread0
  [16] sun.nio.ch.FileDispatcherImpl.pread
  [17] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [18] sun.nio.ch.IOUtil.read
  [19] sun.nio.ch.IOUtil.read
  [20] sun.nio.ch.FileChannelImpl.readInternal
  [21] sun.nio.ch.FileChannelImpl.read
  [22] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [23] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [24] jdk.nio.zipfs.ZipFileSystem$Entry.readLocEXTT
  [25] jdk.nio.zipfs.ZipFileSystem$Entry.readExtra
  [26] jdk.nio.zipfs.ZipFileSystem$Entry.readCEN
  [27] jdk.nio.zipfs.ZipFileSystem$Entry.<init>
  [28] jdk.nio.zipfs.ZipFileSystem.getEntry
  [29] jdk.nio.zipfs.ZipFileSystem.newInputStream
  [30] jdk.nio.zipfs.ZipPath.newInputStream
  [31] jdk.nio.zipfs.ZipFileSystemProvider.newInputStream
  [32] java.nio.file.Files.newInputStream
  [33] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [34] com.scalamandra.ZipLib$$anon$1$$Lambda$61.0x0000000800d25648.apply
  [35] cats.effect.IOFiber.$anonfun$8
  [36] cats.effect.IOFiber$$Lambda$204.0x0000000800da9ac0.apply
  [37] cats.effect.unsafe.WorkerThread.blockOn
  [38] scala.concurrent.package$.blocking
  [39] cats.effect.IOFiber.runLoop
  [40] cats.effect.IOFiber.execR
  [41] cats.effect.IOFiber.run
  [42] cats.effect.unsafe.WorkerThread.run

--- 581943858 ns (0.04%), 58 samples
  [ 0] __kmalloc_node_[k]
  [ 1] spl_kmem_alloc_impl?[spl]_[k]
  [ 2] spl_kmem_alloc?[spl]_[k]
  [ 3] zfs_rangelock_enter_impl?[zfs]_[k]
  [ 4] zfs_rangelock_enter?[zfs]_[k]
  [ 5] zfs_read?[zfs]_[k]
  [ 6] zpl_iter_read?[zfs]_[k]
  [ 7] new_sync_read_[k]
  [ 8] vfs_read_[k]
  [ 9] __x64_sys_pread64_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] __libc_pread64
  [13] sun.nio.ch.FileDispatcherImpl.pread0
  [14] sun.nio.ch.FileDispatcherImpl.pread
  [15] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [16] sun.nio.ch.IOUtil.read
  [17] sun.nio.ch.IOUtil.read
  [18] sun.nio.ch.FileChannelImpl.readInternal
  [19] sun.nio.ch.FileChannelImpl.read
  [20] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [21] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [22] jdk.nio.zipfs.ZipFileSystem$Entry.readLocEXTT
  [23] jdk.nio.zipfs.ZipFileSystem$Entry.readExtra
  [24] jdk.nio.zipfs.ZipFileSystem$Entry.readCEN
  [25] jdk.nio.zipfs.ZipFileSystem$Entry.<init>
  [26] jdk.nio.zipfs.ZipFileSystem.getEntry
  [27] jdk.nio.zipfs.ZipFileSystem.newInputStream
  [28] jdk.nio.zipfs.ZipPath.newInputStream
  [29] jdk.nio.zipfs.ZipFileSystemProvider.newInputStream
  [30] java.nio.file.Files.newInputStream
  [31] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [32] com.scalamandra.ZipLib$$anon$1$$Lambda$61.0x0000000800d25648.apply
  [33] cats.effect.IOFiber.$anonfun$8
  [34] cats.effect.IOFiber$$Lambda$204.0x0000000800da9ac0.apply
  [35] cats.effect.unsafe.WorkerThread.blockOn
  [36] scala.concurrent.package$.blocking
  [37] cats.effect.IOFiber.runLoop
  [38] cats.effect.IOFiber.execR
  [39] cats.effect.IOFiber.run
  [40] cats.effect.unsafe.WorkerThread.run

--- 571717521 ns (0.04%), 57 samples
  [ 0] kmem_cache_free_[k]
  [ 1] spl_kmem_cache_free?[spl]_[k]
  [ 2] zio_destroy?[zfs]_[k]
  [ 3] zio_wait?[zfs]_[k]
  [ 4] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 5] dmu_read_uio_dnode?[zfs]_[k]
  [ 6] dmu_read_uio_dbuf?[zfs]_[k]
  [ 7] mappedread?[zfs]_[k]
  [ 8] zfs_read?[zfs]_[k]
  [ 9] zpl_iter_read?[zfs]_[k]
  [10] new_sync_read_[k]
  [11] vfs_read_[k]
  [12] __x64_sys_pread64_[k]
  [13] do_syscall_64_[k]
  [14] entry_SYSCALL_64_after_hwframe_[k]
  [15] __libc_pread64
  [16] sun.nio.ch.FileDispatcherImpl.pread0
  [17] sun.nio.ch.FileDispatcherImpl.pread
  [18] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [19] sun.nio.ch.IOUtil.read
  [20] sun.nio.ch.IOUtil.read
  [21] sun.nio.ch.FileChannelImpl.readInternal
  [22] sun.nio.ch.FileChannelImpl.read
  [23] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [24] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [25] jdk.nio.zipfs.ZipFileSystem$2.fill
  [26] java.util.zip.InflaterInputStream.read
  [27] java.io.InputStream.readNBytes
  [28] java.io.InputStream.readAllBytes
  [29] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [30] com.scalamandra.ZipLib$$anon$1$$Lambda$61.0x0000000800d25648.apply
  [31] cats.effect.IOFiber.$anonfun$8
  [32] cats.effect.IOFiber$$Lambda$204.0x0000000800da9ac0.apply
  [33] cats.effect.unsafe.WorkerThread.blockOn
  [34] scala.concurrent.package$.blocking
  [35] cats.effect.IOFiber.runLoop
  [36] cats.effect.IOFiber.execR
  [37] cats.effect.IOFiber.run
  [38] cats.effect.unsafe.WorkerThread.run

--- 571708168 ns (0.04%), 57 samples
  [ 0] kmem_cache_alloc_[k]
  [ 1] spl_kmem_cache_alloc?[spl]_[k]
  [ 2] zio_create?[zfs]_[k]
  [ 3] zio_null?[zfs]_[k]
  [ 4] zio_root?[zfs]_[k]
  [ 5] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 6] dmu_read_uio_dnode?[zfs]_[k]
  [ 7] dmu_read_uio_dbuf?[zfs]_[k]
  [ 8] mappedread?[zfs]_[k]
  [ 9] zfs_read?[zfs]_[k]
  [10] zpl_iter_read?[zfs]_[k]
  [11] new_sync_read_[k]
  [12] vfs_read_[k]
  [13] __x64_sys_pread64_[k]
  [14] do_syscall_64_[k]
  [15] entry_SYSCALL_64_after_hwframe_[k]
  [16] __libc_pread64
  [17] sun.nio.ch.FileDispatcherImpl.pread0
  [18] sun.nio.ch.FileDispatcherImpl.pread
  [19] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [20] sun.nio.ch.IOUtil.read
  [21] sun.nio.ch.IOUtil.read
  [22] sun.nio.ch.FileChannelImpl.readInternal
  [23] sun.nio.ch.FileChannelImpl.read
  [24] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [25] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [26] jdk.nio.zipfs.ZipFileSystem$2.fill
  [27] java.util.zip.InflaterInputStream.read
  [28] java.io.InputStream.readNBytes
  [29] java.io.InputStream.readAllBytes
  [30] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [31] com.scalamandra.ZipLib$$anon$1$$Lambda$61.0x0000000800d25648.apply
  [32] cats.effect.IOFiber.$anonfun$8
  [33] cats.effect.IOFiber$$Lambda$204.0x0000000800da9ac0.apply
  [34] cats.effect.unsafe.WorkerThread.blockOn
  [35] scala.concurrent.package$.blocking
  [36] cats.effect.IOFiber.runLoop
  [37] cats.effect.IOFiber.execR
  [38] cats.effect.IOFiber.run
  [39] cats.effect.unsafe.WorkerThread.run

--- 571259500 ns (0.04%), 57 samples
  [ 0] inflate
  [ 1] java.util.zip.Inflater.inflateBytesBytes
  [ 2] java.util.zip.Inflater.inflate
  [ 3] java.util.zip.InflaterInputStream.read
  [ 4] java.io.InputStream.readNBytes
  [ 5] java.io.InputStream.readAllBytes
  [ 6] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [ 7] com.scalamandra.ZipLib$$anon$1$$Lambda$61.0x0000000800d25648.apply
  [ 8] cats.effect.IOFiber.$anonfun$8
  [ 9] cats.effect.IOFiber$$Lambda$204.0x0000000800da9ac0.apply
  [10] cats.effect.unsafe.WorkerThread.blockOn
  [11] scala.concurrent.package$.blocking
  [12] cats.effect.IOFiber.runLoop
  [13] cats.effect.IOFiber.execR
  [14] cats.effect.IOFiber.run
  [15] cats.effect.unsafe.WorkerThread.run

--- 566908948 ns (0.04%), 55 samples
  [ 0] jdk.internal.misc.Unsafe.compareAndSetReference
  [ 1] java.lang.invoke.VarHandleReferences$FieldInstanceReadWrite.compareAndSet
  [ 2] java.lang.invoke.VarHandleGuards.guard_LLL_Z
  [ 3] java.util.concurrent.ConcurrentLinkedQueue.offer
  [ 4] cats.effect.unsafe.ScalQueue.offer
  [ 5] cats.effect.unsafe.WorkStealingThreadPool.scheduleExternal
  [ 6] cats.effect.unsafe.WorkStealingThreadPool.execute
  [ 7] cats.effect.IO.unsafeRunFiber
  [ 8] cats.effect.IO.unsafeRunAsync
  [ 9] cats.effect.IOPlatform.unsafeRunTimed
  [10] cats.effect.IOPlatform.unsafeRunSync
  [11] com.scalamandra.ZipBench.nioInputStream
  [12] com.scalamandra.jmh_generated.ZipBench_nioInputStream_jmhTest.nioInputStream_thrpt_jmhStub
  [13] com.scalamandra.jmh_generated.ZipBench_nioInputStream_jmhTest.nioInputStream_Throughput
  [14] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [15] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [16] java.lang.reflect.Method.invoke
  [17] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [18] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [19] java.util.concurrent.FutureTask.run
  [20] java.util.concurrent.Executors$RunnableAdapter.call
  [21] java.util.concurrent.FutureTask.run
  [22] java.util.concurrent.ThreadPoolExecutor.runWorker
  [23] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [24] java.lang.Thread.run

--- 564834659 ns (0.04%), 56 samples
  [ 0] void WeakProcessor::Task::work<G1STWIsAliveClosure, G1KeepAliveClosure>(unsigned int, G1STWIsAliveClosure*, G1KeepAliveClosure*)
  [ 1] GangWorker::loop()
  [ 2] GangWorker::run()
  [ 3] Thread::call_run()
  [ 4] thread_native_entry(Thread*)
  [ 5] start_thread

--- 551732147 ns (0.04%), 55 samples
  [ 0] kmem_cache_alloc_[k]
  [ 1] spl_kmem_cache_alloc?[spl]_[k]
  [ 2] zio_create?[zfs]_[k]
  [ 3] zio_null?[zfs]_[k]
  [ 4] zio_root?[zfs]_[k]
  [ 5] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 6] dmu_read_uio_dnode?[zfs]_[k]
  [ 7] dmu_read_uio_dbuf?[zfs]_[k]
  [ 8] mappedread?[zfs]_[k]
  [ 9] zfs_read?[zfs]_[k]
  [10] zpl_iter_read?[zfs]_[k]
  [11] new_sync_read_[k]
  [12] vfs_read_[k]
  [13] __x64_sys_pread64_[k]
  [14] do_syscall_64_[k]
  [15] entry_SYSCALL_64_after_hwframe_[k]
  [16] __libc_pread64
  [17] sun.nio.ch.FileDispatcherImpl.pread0
  [18] sun.nio.ch.FileDispatcherImpl.pread
  [19] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [20] sun.nio.ch.IOUtil.read
  [21] sun.nio.ch.IOUtil.read
  [22] sun.nio.ch.FileChannelImpl.readInternal
  [23] sun.nio.ch.FileChannelImpl.read
  [24] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [25] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [26] jdk.nio.zipfs.ZipFileSystem$Entry.readLocEXTT
  [27] jdk.nio.zipfs.ZipFileSystem$Entry.readExtra
  [28] jdk.nio.zipfs.ZipFileSystem$Entry.readCEN
  [29] jdk.nio.zipfs.ZipFileSystem$Entry.<init>
  [30] jdk.nio.zipfs.ZipFileSystem.getEntry
  [31] jdk.nio.zipfs.ZipFileSystem.newInputStream
  [32] jdk.nio.zipfs.ZipPath.newInputStream
  [33] jdk.nio.zipfs.ZipFileSystemProvider.newInputStream
  [34] java.nio.file.Files.newInputStream
  [35] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [36] com.scalamandra.ZipLib$$anon$1$$Lambda$61.0x0000000800d25648.apply
  [37] cats.effect.IOFiber.$anonfun$8
  [38] cats.effect.IOFiber$$Lambda$204.0x0000000800da9ac0.apply
  [39] cats.effect.unsafe.WorkerThread.blockOn
  [40] scala.concurrent.package$.blocking
  [41] cats.effect.IOFiber.runLoop
  [42] cats.effect.IOFiber.execR
  [43] cats.effect.IOFiber.run
  [44] cats.effect.unsafe.WorkerThread.run

--- 551610267 ns (0.04%), 55 samples
  [ 0] mutex_spin_on_owner_[k]
  [ 1] __mutex_lock.constprop.0_[k]
  [ 2] __mutex_lock_slowpath_[k]
  [ 3] mutex_lock_[k]
  [ 4] dbuf_find?[zfs]_[k]
  [ 5] dbuf_hold_impl?[zfs]_[k]
  [ 6] dbuf_hold_level?[zfs]_[k]
  [ 7] dbuf_hold?[zfs]_[k]
  [ 8] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 9] dmu_read_uio_dnode?[zfs]_[k]
  [10] dmu_read_uio_dbuf?[zfs]_[k]
  [11] mappedread?[zfs]_[k]
  [12] zfs_read?[zfs]_[k]
  [13] zpl_iter_read?[zfs]_[k]
  [14] new_sync_read_[k]
  [15] vfs_read_[k]
  [16] __x64_sys_pread64_[k]
  [17] do_syscall_64_[k]
  [18] entry_SYSCALL_64_after_hwframe_[k]
  [19] __libc_pread64
  [20] sun.nio.ch.FileDispatcherImpl.pread0
  [21] sun.nio.ch.FileDispatcherImpl.pread
  [22] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [23] sun.nio.ch.IOUtil.read
  [24] sun.nio.ch.IOUtil.read
  [25] sun.nio.ch.FileChannelImpl.readInternal
  [26] sun.nio.ch.FileChannelImpl.read
  [27] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [28] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [29] jdk.nio.zipfs.ZipFileSystem$2.fill
  [30] java.util.zip.InflaterInputStream.read
  [31] java.io.InputStream.readNBytes
  [32] java.io.InputStream.readAllBytes
  [33] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [34] com.scalamandra.ZipLib$$anon$1$$Lambda$61.0x0000000800d25648.apply
  [35] cats.effect.IOFiber.$anonfun$8
  [36] cats.effect.IOFiber$$Lambda$204.0x0000000800da9ac0.apply
  [37] cats.effect.unsafe.WorkerThread.blockOn
  [38] scala.concurrent.package$.blocking
  [39] cats.effect.IOFiber.runLoop
  [40] cats.effect.IOFiber.execR
  [41] cats.effect.IOFiber.run
  [42] cats.effect.unsafe.WorkerThread.run

--- 551281985 ns (0.04%), 55 samples
  [ 0] jni_ReleasePrimitiveArrayCritical
  [ 1] Java_java_util_zip_Inflater_inflateBytesBytes
  [ 2] java.util.zip.Inflater.inflateBytesBytes
  [ 3] java.util.zip.Inflater.inflate
  [ 4] java.util.zip.InflaterInputStream.read
  [ 5] java.io.InputStream.readNBytes
  [ 6] java.io.InputStream.readAllBytes
  [ 7] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [ 8] com.scalamandra.ZipLib$$anon$1$$Lambda$61.0x0000000800d25648.apply
  [ 9] cats.effect.IOFiber.$anonfun$8
  [10] cats.effect.IOFiber$$Lambda$204.0x0000000800da9ac0.apply
  [11] cats.effect.unsafe.WorkerThread.blockOn
  [12] scala.concurrent.package$.blocking
  [13] cats.effect.IOFiber.runLoop
  [14] cats.effect.IOFiber.execR
  [15] cats.effect.IOFiber.run
  [16] cats.effect.unsafe.WorkerThread.run

--- 545965890 ns (0.04%), 53 samples
  [ 0] Parker::park(bool, long)
  [ 1] Unsafe_Park
  [ 2] jdk.internal.misc.Unsafe.park
  [ 3] java.util.concurrent.locks.LockSupport.parkNanos
  [ 4] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos
  [ 5] java.util.concurrent.ArrayBlockingQueue.poll
  [ 6] cats.effect.IOPlatform.$anonfun$1
  [ 7] cats.effect.IOPlatform$$Lambda$198.0x0000000800dafc68.apply
  [ 8] scala.concurrent.BlockContext$DefaultBlockContext$.blockOn
  [ 9] scala.concurrent.package$.blocking
  [10] cats.effect.IOPlatform.unsafeRunTimed
  [11] cats.effect.IOPlatform.unsafeRunSync
  [12] com.scalamandra.ZipBench.nioInputStream
  [13] com.scalamandra.jmh_generated.ZipBench_nioInputStream_jmhTest.nioInputStream_thrpt_jmhStub
  [14] com.scalamandra.jmh_generated.ZipBench_nioInputStream_jmhTest.nioInputStream_Throughput
  [15] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [16] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [17] java.lang.reflect.Method.invoke
  [18] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [19] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [20] java.util.concurrent.FutureTask.run
  [21] java.util.concurrent.Executors$RunnableAdapter.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.ThreadPoolExecutor.runWorker
  [24] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [25] java.lang.Thread.run

--- 541110692 ns (0.04%), 54 samples
  [ 0] pthread_cond_signal@@GLIBC_2.3.2
  [ 1] jdk.internal.misc.Unsafe.unpark
  [ 2] java.util.concurrent.locks.LockSupport.unpark
  [ 3] java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext
  [ 4] java.util.concurrent.locks.AbstractQueuedSynchronizer.release
  [ 5] java.util.concurrent.locks.ReentrantLock.unlock
  [ 6] java.util.concurrent.ArrayBlockingQueue.offer
  [ 7] cats.effect.IOPlatform.unsafeRunTimed$$anonfun$1
  [ 8] cats.effect.IOPlatform$$Lambda$146.0x0000000800d9a830.applyVoid
  [ 9] scala.runtime.function.JProcedure1.apply
  [10] scala.runtime.function.JProcedure1.apply
  [11] cats.effect.IO.unsafeRunAsync$$anonfun$3
  [12] cats.effect.IO$$Lambda$164.0x0000000800da0408.applyVoid
  [13] scala.runtime.function.JProcedure1.apply
  [14] scala.runtime.function.JProcedure1.apply
  [15] cats.effect.IO.$anonfun$6$$anonfun$3
  [16] cats.effect.IO$$Lambda$233.0x0000000800db3288.applyVoid
  [17] scala.runtime.function.JProcedure1.apply
  [18] scala.runtime.function.JProcedure1.apply
  [19] cats.effect.kernel.Outcome.fold
  [20] cats.effect.kernel.Outcome.fold$
  [21] cats.effect.kernel.Outcome$Succeeded.fold
  [22] cats.effect.IO.$anonfun$6
  [23] cats.effect.IO$$Lambda$175.0x0000000800da3590.applyVoid
  [24] scala.runtime.function.JProcedure1.apply
  [25] scala.runtime.function.JProcedure1.apply
  [26] cats.effect.CallbackStack.apply
  [27] cats.effect.IOFiber.done
  [28] cats.effect.IOFiber.runTerminusSuccessK
  [29] cats.effect.IOFiber.succeeded
  [30] cats.effect.IOFiber.runLoop
  [31] cats.effect.IOFiber.execR
  [32] cats.effect.IOFiber.run
  [33] cats.effect.unsafe.WorkerThread.run

--- 531583146 ns (0.04%), 53 samples
  [ 0] zio_done?[zfs]_[k]
  [ 1] zio_wait?[zfs]_[k]
  [ 2] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 3] dmu_read_uio_dnode?[zfs]_[k]
  [ 4] dmu_read_uio_dbuf?[zfs]_[k]
  [ 5] mappedread?[zfs]_[k]
  [ 6] zfs_read?[zfs]_[k]
  [ 7] zpl_iter_read?[zfs]_[k]
  [ 8] new_sync_read_[k]
  [ 9] vfs_read_[k]
  [10] __x64_sys_pread64_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] __libc_pread64
  [14] sun.nio.ch.FileDispatcherImpl.pread0
  [15] sun.nio.ch.FileDispatcherImpl.pread
  [16] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [17] sun.nio.ch.IOUtil.read
  [18] sun.nio.ch.IOUtil.read
  [19] sun.nio.ch.FileChannelImpl.readInternal
  [20] sun.nio.ch.FileChannelImpl.read
  [21] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [22] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [23] jdk.nio.zipfs.ZipFileSystem$2.fill
  [24] java.util.zip.InflaterInputStream.read
  [25] java.io.InputStream.readNBytes
  [26] java.io.InputStream.readAllBytes
  [27] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [28] com.scalamandra.ZipLib$$anon$1$$Lambda$61.0x0000000800d25648.apply
  [29] cats.effect.IOFiber.$anonfun$8
  [30] cats.effect.IOFiber$$Lambda$204.0x0000000800da9ac0.apply
  [31] cats.effect.unsafe.WorkerThread.blockOn
  [32] scala.concurrent.package$.blocking
  [33] cats.effect.IOFiber.runLoop
  [34] cats.effect.IOFiber.execR
  [35] cats.effect.IOFiber.run
  [36] cats.effect.unsafe.WorkerThread.run

--- 531577664 ns (0.04%), 53 samples
  [ 0] mutex_unlock_[k]
  [ 1] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 2] dmu_read_uio_dnode?[zfs]_[k]
  [ 3] dmu_read_uio_dbuf?[zfs]_[k]
  [ 4] mappedread?[zfs]_[k]
  [ 5] zfs_read?[zfs]_[k]
  [ 6] zpl_iter_read?[zfs]_[k]
  [ 7] new_sync_read_[k]
  [ 8] vfs_read_[k]
  [ 9] __x64_sys_pread64_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] __libc_pread64
  [13] sun.nio.ch.FileDispatcherImpl.pread0
  [14] sun.nio.ch.FileDispatcherImpl.pread
  [15] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [16] sun.nio.ch.IOUtil.read
  [17] sun.nio.ch.IOUtil.read
  [18] sun.nio.ch.FileChannelImpl.readInternal
  [19] sun.nio.ch.FileChannelImpl.read
  [20] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [21] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [22] jdk.nio.zipfs.ZipFileSystem$2.fill
  [23] java.util.zip.InflaterInputStream.read
  [24] java.io.InputStream.readNBytes
  [25] java.io.InputStream.readAllBytes
  [26] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [27] com.scalamandra.ZipLib$$anon$1$$Lambda$61.0x0000000800d25648.apply
  [28] cats.effect.IOFiber.$anonfun$8
  [29] cats.effect.IOFiber$$Lambda$204.0x0000000800da9ac0.apply
  [30] cats.effect.unsafe.WorkerThread.blockOn
  [31] scala.concurrent.package$.blocking
  [32] cats.effect.IOFiber.runLoop
  [33] cats.effect.IOFiber.execR
  [34] cats.effect.IOFiber.run
  [35] cats.effect.unsafe.WorkerThread.run

--- 531469811 ns (0.04%), 53 samples
  [ 0] java.util.HashMap.hash
  [ 1] java.util.HashMap.getNode
  [ 2] java.util.LinkedHashMap.get
  [ 3] jdk.nio.zipfs.ZipFileSystem.getInode
  [ 4] jdk.nio.zipfs.ZipFileSystem.getEntry
  [ 5] jdk.nio.zipfs.ZipFileSystem.newInputStream
  [ 6] jdk.nio.zipfs.ZipPath.newInputStream
  [ 7] jdk.nio.zipfs.ZipFileSystemProvider.newInputStream
  [ 8] java.nio.file.Files.newInputStream
  [ 9] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [10] com.scalamandra.ZipLib$$anon$1$$Lambda$61.0x0000000800d25648.apply
  [11] cats.effect.IOFiber.$anonfun$8
  [12] cats.effect.IOFiber$$Lambda$204.0x0000000800da9ac0.apply
  [13] cats.effect.unsafe.WorkerThread.blockOn
  [14] scala.concurrent.package$.blocking
  [15] cats.effect.IOFiber.runLoop
  [16] cats.effect.IOFiber.execR
  [17] cats.effect.IOFiber.run
  [18] cats.effect.unsafe.WorkerThread.run

--- 531370731 ns (0.04%), 53 samples
  [ 0] __schedule_[k]
  [ 1] schedule_[k]
  [ 2] do_sched_yield_[k]
  [ 3] __x64_sys_sched_yield_[k]
  [ 4] do_syscall_64_[k]
  [ 5] entry_SYSCALL_64_after_hwframe_[k]
  [ 6] __GI___sched_yield
  [ 7] java.lang.Thread.yield
  [ 8] java.util.concurrent.LinkedTransferQueue.awaitMatch
  [ 9] java.util.concurrent.LinkedTransferQueue.xfer
  [10] java.util.concurrent.LinkedTransferQueue.poll
  [11] cats.effect.unsafe.WorkerThread.run

--- 525481945 ns (0.04%), 51 samples
  [ 0] ___pthread_cond_timedwait64
  [ 1] [unknown]
  [ 2] jdk.internal.misc.Unsafe.park
  [ 3] java.util.concurrent.locks.LockSupport.parkNanos
  [ 4] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos
  [ 5] java.util.concurrent.ArrayBlockingQueue.poll
  [ 6] cats.effect.IOPlatform.$anonfun$1
  [ 7] cats.effect.IOPlatform$$Lambda$198.0x0000000800dafc68.apply
  [ 8] scala.concurrent.BlockContext$DefaultBlockContext$.blockOn
  [ 9] scala.concurrent.package$.blocking
  [10] cats.effect.IOPlatform.unsafeRunTimed
  [11] cats.effect.IOPlatform.unsafeRunSync
  [12] com.scalamandra.ZipBench.nioInputStream
  [13] com.scalamandra.jmh_generated.ZipBench_nioInputStream_jmhTest.nioInputStream_thrpt_jmhStub
  [14] com.scalamandra.jmh_generated.ZipBench_nioInputStream_jmhTest.nioInputStream_Throughput
  [15] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [16] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [17] java.lang.reflect.Method.invoke
  [18] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [19] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [20] java.util.concurrent.FutureTask.run
  [21] java.util.concurrent.Executors$RunnableAdapter.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.ThreadPoolExecutor.runWorker
  [24] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [25] java.lang.Thread.run

--- 521593432 ns (0.04%), 52 samples
  [ 0] java.util.HashMap.hash
  [ 1] java.util.HashMap.getNode
  [ 2] java.util.LinkedHashMap.get
  [ 3] jdk.nio.zipfs.ZipFileSystem.getInode
  [ 4] jdk.nio.zipfs.ZipFileSystem.getEntry
  [ 5] jdk.nio.zipfs.ZipFileSystem.newInputStream
  [ 6] jdk.nio.zipfs.ZipPath.newInputStream
  [ 7] jdk.nio.zipfs.ZipFileSystemProvider.newInputStream
  [ 8] java.nio.file.Files.newInputStream
  [ 9] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [10] com.scalamandra.ZipLib$$anon$1$$Lambda$61.0x0000000800d25648.apply
  [11] cats.effect.IOFiber.$anonfun$8
  [12] cats.effect.IOFiber$$Lambda$204.0x0000000800da9ac0.apply
  [13] cats.effect.unsafe.WorkerThread.blockOn
  [14] scala.concurrent.package$.blocking
  [15] cats.effect.IOFiber.runLoop
  [16] cats.effect.IOFiber.execR
  [17] cats.effect.IOFiber.run
  [18] cats.effect.unsafe.WorkerThread.run

--- 521532727 ns (0.04%), 52 samples
  [ 0] mutex_unlock_[k]
  [ 1] zio_wait?[zfs]_[k]
  [ 2] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 3] dmu_read_uio_dnode?[zfs]_[k]
  [ 4] dmu_read_uio_dbuf?[zfs]_[k]
  [ 5] mappedread?[zfs]_[k]
  [ 6] zfs_read?[zfs]_[k]
  [ 7] zpl_iter_read?[zfs]_[k]
  [ 8] new_sync_read_[k]
  [ 9] vfs_read_[k]
  [10] __x64_sys_pread64_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] __libc_pread64
  [14] sun.nio.ch.FileDispatcherImpl.pread0
  [15] sun.nio.ch.FileDispatcherImpl.pread
  [16] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [17] sun.nio.ch.IOUtil.read
  [18] sun.nio.ch.IOUtil.read
  [19] sun.nio.ch.FileChannelImpl.readInternal
  [20] sun.nio.ch.FileChannelImpl.read
  [21] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [22] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [23] jdk.nio.zipfs.ZipFileSystem$2.fill
  [24] java.util.zip.InflaterInputStream.read
  [25] java.io.InputStream.readNBytes
  [26] java.io.InputStream.readAllBytes
  [27] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [28] com.scalamandra.ZipLib$$anon$1$$Lambda$61.0x0000000800d25648.apply
  [29] cats.effect.IOFiber.$anonfun$8
  [30] cats.effect.IOFiber$$Lambda$204.0x0000000800da9ac0.apply
  [31] cats.effect.unsafe.WorkerThread.blockOn
  [32] scala.concurrent.package$.blocking
  [33] cats.effect.IOFiber.runLoop
  [34] cats.effect.IOFiber.execR
  [35] cats.effect.IOFiber.run
  [36] cats.effect.unsafe.WorkerThread.run

--- 502098863 ns (0.04%), 50 samples
  [ 0] JVM_SetNativeThreadName
  [ 1] java.lang.Thread.setNativeName
  [ 2] java.lang.Thread.setName
  [ 3] cats.effect.unsafe.WorkerThread.blockOn
  [ 4] scala.concurrent.package$.blocking
  [ 5] cats.effect.IOFiber.runLoop
  [ 6] cats.effect.IOFiber.execR
  [ 7] cats.effect.IOFiber.run
  [ 8] cats.effect.unsafe.WorkerThread.run

--- 501939619 ns (0.04%), 50 samples
  [ 0] char* UNICODE::as_utf8<signed char>(signed char const*, int&)
  [ 1] java_lang_String::as_utf8_string(oopDesc*)
  [ 2] JVM_SetNativeThreadName
  [ 3] java.lang.Thread.setNativeName
  [ 4] java.lang.Thread.setName
  [ 5] cats.effect.unsafe.WorkerThread.blockOn
  [ 6] scala.concurrent.package$.blocking
  [ 7] cats.effect.IOFiber.runLoop
  [ 8] cats.effect.IOFiber.execR
  [ 9] cats.effect.IOFiber.run
  [10] cats.effect.unsafe.WorkerThread.run

--- 501840500 ns (0.04%), 50 samples
  [ 0] __vfprintf_internal
  [ 1] [unknown]
  [ 2] java.lang.Thread.setNativeName
  [ 3] java.lang.Thread.setName
  [ 4] cats.effect.unsafe.WorkerThread.init
  [ 5] cats.effect.unsafe.WorkerThread.run

--- 501734852 ns (0.04%), 50 samples
  [ 0] futex_wake_[k]
  [ 1] do_futex_[k]
  [ 2] __x64_sys_futex_[k]
  [ 3] do_syscall_64_[k]
  [ 4] entry_SYSCALL_64_after_hwframe_[k]
  [ 5] pthread_cond_signal@@GLIBC_2.3.2
  [ 6] jdk.internal.misc.Unsafe.unpark
  [ 7] java.util.concurrent.locks.LockSupport.unpark
  [ 8] java.util.concurrent.LinkedTransferQueue$Node.tryMatch
  [ 9] java.util.concurrent.LinkedTransferQueue.xfer
  [10] java.util.concurrent.LinkedTransferQueue.transfer
  [11] cats.effect.unsafe.WorkerThread.blockOn
  [12] scala.concurrent.package$.blocking
  [13] cats.effect.IOFiber.runLoop
  [14] cats.effect.IOFiber.execR
  [15] cats.effect.IOFiber.run
  [16] cats.effect.unsafe.WorkerThread.run

--- 501632357 ns (0.04%), 50 samples
  [ 0] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 1] dmu_read_uio_dnode?[zfs]_[k]
  [ 2] dmu_read_uio_dbuf?[zfs]_[k]
  [ 3] mappedread?[zfs]_[k]
  [ 4] zfs_read?[zfs]_[k]
  [ 5] zpl_iter_read?[zfs]_[k]
  [ 6] new_sync_read_[k]
  [ 7] vfs_read_[k]
  [ 8] __x64_sys_pread64_[k]
  [ 9] do_syscall_64_[k]
  [10] entry_SYSCALL_64_after_hwframe_[k]
  [11] __libc_pread64
  [12] sun.nio.ch.FileDispatcherImpl.pread0
  [13] sun.nio.ch.FileDispatcherImpl.pread
  [14] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [15] sun.nio.ch.IOUtil.read
  [16] sun.nio.ch.IOUtil.read
  [17] sun.nio.ch.FileChannelImpl.readInternal
  [18] sun.nio.ch.FileChannelImpl.read
  [19] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [20] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [21] jdk.nio.zipfs.ZipFileSystem$2.fill
  [22] java.util.zip.InflaterInputStream.read
  [23] java.io.InputStream.readNBytes
  [24] java.io.InputStream.readAllBytes
  [25] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [26] com.scalamandra.ZipLib$$anon$1$$Lambda$61.0x0000000800d25648.apply
  [27] cats.effect.IOFiber.$anonfun$8
  [28] cats.effect.IOFiber$$Lambda$204.0x0000000800da9ac0.apply
  [29] cats.effect.unsafe.WorkerThread.blockOn
  [30] scala.concurrent.package$.blocking
  [31] cats.effect.IOFiber.runLoop
  [32] cats.effect.IOFiber.execR
  [33] cats.effect.IOFiber.run
  [34] cats.effect.unsafe.WorkerThread.run

--- 501437193 ns (0.04%), 50 samples
  [ 0] dbuf_hold_impl?[zfs]_[k]
  [ 1] dbuf_hold_level?[zfs]_[k]
  [ 2] dbuf_hold?[zfs]_[k]
  [ 3] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 4] dmu_read_uio_dnode?[zfs]_[k]
  [ 5] dmu_read_uio_dbuf?[zfs]_[k]
  [ 6] mappedread?[zfs]_[k]
  [ 7] zfs_read?[zfs]_[k]
  [ 8] zpl_iter_read?[zfs]_[k]
  [ 9] new_sync_read_[k]
  [10] vfs_read_[k]
  [11] __x64_sys_pread64_[k]
  [12] do_syscall_64_[k]
  [13] entry_SYSCALL_64_after_hwframe_[k]
  [14] __libc_pread64
  [15] sun.nio.ch.FileDispatcherImpl.pread0
  [16] sun.nio.ch.FileDispatcherImpl.pread
  [17] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [18] sun.nio.ch.IOUtil.read
  [19] sun.nio.ch.IOUtil.read
  [20] sun.nio.ch.FileChannelImpl.readInternal
  [21] sun.nio.ch.FileChannelImpl.read
  [22] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [23] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [24] jdk.nio.zipfs.ZipFileSystem$2.fill
  [25] java.util.zip.InflaterInputStream.read
  [26] java.io.InputStream.readNBytes
  [27] java.io.InputStream.readAllBytes
  [28] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [29] com.scalamandra.ZipLib$$anon$1$$Lambda$61.0x0000000800d25648.apply
  [30] cats.effect.IOFiber.$anonfun$8
  [31] cats.effect.IOFiber$$Lambda$204.0x0000000800da9ac0.apply
  [32] cats.effect.unsafe.WorkerThread.blockOn
  [33] scala.concurrent.package$.blocking
  [34] cats.effect.IOFiber.runLoop
  [35] cats.effect.IOFiber.execR
  [36] cats.effect.IOFiber.run
  [37] cats.effect.unsafe.WorkerThread.run

--- 494442717 ns (0.04%), 48 samples
  [ 0] __get_user_nocheck_4_[k]
  [ 1] futex_wait_setup_[k]
  [ 2] futex_wait_[k]
  [ 3] do_futex_[k]
  [ 4] __x64_sys_futex_[k]
  [ 5] do_syscall_64_[k]
  [ 6] entry_SYSCALL_64_after_hwframe_[k]
  [ 7] __futex_abstimed_wait_cancelable64
  [ 8] [unknown]
  [ 9] jdk.internal.misc.Unsafe.park
  [10] java.util.concurrent.locks.LockSupport.parkNanos
  [11] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos
  [12] java.util.concurrent.ArrayBlockingQueue.poll
  [13] cats.effect.IOPlatform.$anonfun$1
  [14] cats.effect.IOPlatform$$Lambda$198.0x0000000800dafc68.apply
  [15] scala.concurrent.BlockContext$DefaultBlockContext$.blockOn
  [16] scala.concurrent.package$.blocking
  [17] cats.effect.IOPlatform.unsafeRunTimed
  [18] cats.effect.IOPlatform.unsafeRunSync
  [19] com.scalamandra.ZipBench.nioInputStream
  [20] com.scalamandra.jmh_generated.ZipBench_nioInputStream_jmhTest.nioInputStream_thrpt_jmhStub
  [21] com.scalamandra.jmh_generated.ZipBench_nioInputStream_jmhTest.nioInputStream_Throughput
  [22] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [23] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [24] java.lang.reflect.Method.invoke
  [25] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [26] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [27] java.util.concurrent.FutureTask.run
  [28] java.util.concurrent.Executors$RunnableAdapter.call
  [29] java.util.concurrent.FutureTask.run
  [30] java.util.concurrent.ThreadPoolExecutor.runWorker
  [31] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [32] java.lang.Thread.run

--- 491003177 ns (0.03%), 49 samples
  [ 0] java.util.zip.Inflater.inflateBytesBytes
  [ 1] java.util.zip.Inflater.inflate
  [ 2] java.util.zip.InflaterInputStream.read
  [ 3] java.io.InputStream.readNBytes
  [ 4] java.io.InputStream.readAllBytes
  [ 5] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [ 6] com.scalamandra.ZipLib$$anon$1$$Lambda$61.0x0000000800d25648.apply
  [ 7] cats.effect.IOFiber.$anonfun$8
  [ 8] cats.effect.IOFiber$$Lambda$204.0x0000000800da9ac0.apply
  [ 9] cats.effect.unsafe.WorkerThread.blockOn
  [10] scala.concurrent.package$.blocking
  [11] cats.effect.IOFiber.runLoop
  [12] cats.effect.IOFiber.execR
  [13] cats.effect.IOFiber.run
  [14] cats.effect.unsafe.WorkerThread.run

--- 481621417 ns (0.03%), 48 samples
  [ 0] syscall_enter_from_user_mode_[k]
  [ 1] do_syscall_64_[k]
  [ 2] entry_SYSCALL_64_after_hwframe_[k]
  [ 3] __GI___prctl
  [ 4] [unknown]
  [ 5] java.lang.Thread.setNativeName
  [ 6] java.lang.Thread.setName
  [ 7] cats.effect.unsafe.WorkerThread.blockOn
  [ 8] scala.concurrent.package$.blocking
  [ 9] cats.effect.IOFiber.runLoop
  [10] cats.effect.IOFiber.execR
  [11] cats.effect.IOFiber.run
  [12] cats.effect.unsafe.WorkerThread.run

--- 481613330 ns (0.03%), 48 samples
  [ 0] zio_create?[zfs]_[k]
  [ 1] zio_null?[zfs]_[k]
  [ 2] zio_root?[zfs]_[k]
  [ 3] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 4] dmu_read_uio_dnode?[zfs]_[k]
  [ 5] dmu_read_uio_dbuf?[zfs]_[k]
  [ 6] mappedread?[zfs]_[k]
  [ 7] zfs_read?[zfs]_[k]
  [ 8] zpl_iter_read?[zfs]_[k]
  [ 9] new_sync_read_[k]
  [10] vfs_read_[k]
  [11] __x64_sys_pread64_[k]
  [12] do_syscall_64_[k]
  [13] entry_SYSCALL_64_after_hwframe_[k]
  [14] __libc_pread64
  [15] sun.nio.ch.FileDispatcherImpl.pread0
  [16] sun.nio.ch.FileDispatcherImpl.pread
  [17] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [18] sun.nio.ch.IOUtil.read
  [19] sun.nio.ch.IOUtil.read
  [20] sun.nio.ch.FileChannelImpl.readInternal
  [21] sun.nio.ch.FileChannelImpl.read
  [22] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [23] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [24] jdk.nio.zipfs.ZipFileSystem$Entry.readLocEXTT
  [25] jdk.nio.zipfs.ZipFileSystem$Entry.readExtra
  [26] jdk.nio.zipfs.ZipFileSystem$Entry.readCEN
  [27] jdk.nio.zipfs.ZipFileSystem$Entry.<init>
  [28] jdk.nio.zipfs.ZipFileSystem.getEntry
  [29] jdk.nio.zipfs.ZipFileSystem.newInputStream
  [30] jdk.nio.zipfs.ZipPath.newInputStream
  [31] jdk.nio.zipfs.ZipFileSystemProvider.newInputStream
  [32] java.nio.file.Files.newInputStream
  [33] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [34] com.scalamandra.ZipLib$$anon$1$$Lambda$61.0x0000000800d25648.apply
  [35] cats.effect.IOFiber.$anonfun$8
  [36] cats.effect.IOFiber$$Lambda$204.0x0000000800da9ac0.apply
  [37] cats.effect.unsafe.WorkerThread.blockOn
  [38] scala.concurrent.package$.blocking
  [39] cats.effect.IOFiber.runLoop
  [40] cats.effect.IOFiber.execR
  [41] cats.effect.IOFiber.run
  [42] cats.effect.unsafe.WorkerThread.run

--- 464392132 ns (0.03%), 45 samples
  [ 0] copy_user_generic_string_[k]
  [ 1] get_timespec64_[k]
  [ 2] __x64_sys_futex_[k]
  [ 3] do_syscall_64_[k]
  [ 4] entry_SYSCALL_64_after_hwframe_[k]
  [ 5] __futex_abstimed_wait_cancelable64
  [ 6] [unknown]
  [ 7] jdk.internal.misc.Unsafe.park
  [ 8] java.util.concurrent.locks.LockSupport.parkNanos
  [ 9] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos
  [10] java.util.concurrent.ArrayBlockingQueue.poll
  [11] cats.effect.IOPlatform.$anonfun$1
  [12] cats.effect.IOPlatform$$Lambda$198.0x0000000800dafc68.apply
  [13] scala.concurrent.BlockContext$DefaultBlockContext$.blockOn
  [14] scala.concurrent.package$.blocking
  [15] cats.effect.IOPlatform.unsafeRunTimed
  [16] cats.effect.IOPlatform.unsafeRunSync
  [17] com.scalamandra.ZipBench.nioInputStream
  [18] com.scalamandra.jmh_generated.ZipBench_nioInputStream_jmhTest.nioInputStream_thrpt_jmhStub
  [19] com.scalamandra.jmh_generated.ZipBench_nioInputStream_jmhTest.nioInputStream_Throughput
  [20] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [21] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [22] java.lang.reflect.Method.invoke
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.Executors$RunnableAdapter.call
  [27] java.util.concurrent.FutureTask.run
  [28] java.util.concurrent.ThreadPoolExecutor.runWorker
  [29] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [30] java.lang.Thread.run

--- 461617438 ns (0.03%), 46 samples
  [ 0] memset_[k]
  [ 1] spl_kmem_cache_alloc?[spl]_[k]
  [ 2] zio_create?[zfs]_[k]
  [ 3] zio_null?[zfs]_[k]
  [ 4] zio_root?[zfs]_[k]
  [ 5] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 6] dmu_read_uio_dnode?[zfs]_[k]
  [ 7] dmu_read_uio_dbuf?[zfs]_[k]
  [ 8] mappedread?[zfs]_[k]
  [ 9] zfs_read?[zfs]_[k]
  [10] zpl_iter_read?[zfs]_[k]
  [11] new_sync_read_[k]
  [12] vfs_read_[k]
  [13] __x64_sys_pread64_[k]
  [14] do_syscall_64_[k]
  [15] entry_SYSCALL_64_after_hwframe_[k]
  [16] __libc_pread64
  [17] sun.nio.ch.FileDispatcherImpl.pread0
  [18] sun.nio.ch.FileDispatcherImpl.pread
  [19] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [20] sun.nio.ch.IOUtil.read
  [21] sun.nio.ch.IOUtil.read
  [22] sun.nio.ch.FileChannelImpl.readInternal
  [23] sun.nio.ch.FileChannelImpl.read
  [24] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [25] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [26] jdk.nio.zipfs.ZipFileSystem$Entry.readLocEXTT
  [27] jdk.nio.zipfs.ZipFileSystem$Entry.readExtra
  [28] jdk.nio.zipfs.ZipFileSystem$Entry.readCEN
  [29] jdk.nio.zipfs.ZipFileSystem$Entry.<init>
  [30] jdk.nio.zipfs.ZipFileSystem.getEntry
  [31] jdk.nio.zipfs.ZipFileSystem.newInputStream
  [32] jdk.nio.zipfs.ZipPath.newInputStream
  [33] jdk.nio.zipfs.ZipFileSystemProvider.newInputStream
  [34] java.nio.file.Files.newInputStream
  [35] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [36] com.scalamandra.ZipLib$$anon$1$$Lambda$61.0x0000000800d25648.apply
  [37] cats.effect.IOFiber.$anonfun$8
  [38] cats.effect.IOFiber$$Lambda$204.0x0000000800da9ac0.apply
  [39] cats.effect.unsafe.WorkerThread.blockOn
  [40] scala.concurrent.package$.blocking
  [41] cats.effect.IOFiber.runLoop
  [42] cats.effect.IOFiber.execR
  [43] cats.effect.IOFiber.run
  [44] cats.effect.unsafe.WorkerThread.run

--- 461445421 ns (0.03%), 46 samples
  [ 0] find_vmap_area_[k]
  [ 1] check_heap_object_[k]
  [ 2] __check_object_size.part.0_[k]
  [ 3] __check_object_size_[k]
  [ 4] zfs_uiomove_iter?[zfs]_[k]
  [ 5] zfs_uiomove?[zfs]_[k]
  [ 6] dmu_read_uio_dnode?[zfs]_[k]
  [ 7] dmu_read_uio_dbuf?[zfs]_[k]
  [ 8] mappedread?[zfs]_[k]
  [ 9] zfs_read?[zfs]_[k]
  [10] zpl_iter_read?[zfs]_[k]
  [11] new_sync_read_[k]
  [12] vfs_read_[k]
  [13] __x64_sys_pread64_[k]
  [14] do_syscall_64_[k]
  [15] entry_SYSCALL_64_after_hwframe_[k]
  [16] __libc_pread64
  [17] sun.nio.ch.FileDispatcherImpl.pread0
  [18] sun.nio.ch.FileDispatcherImpl.pread
  [19] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [20] sun.nio.ch.IOUtil.read
  [21] sun.nio.ch.IOUtil.read
  [22] sun.nio.ch.FileChannelImpl.readInternal
  [23] sun.nio.ch.FileChannelImpl.read
  [24] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [25] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [26] jdk.nio.zipfs.ZipFileSystem$Entry.readLocEXTT
  [27] jdk.nio.zipfs.ZipFileSystem$Entry.readExtra
  [28] jdk.nio.zipfs.ZipFileSystem$Entry.readCEN
  [29] jdk.nio.zipfs.ZipFileSystem$Entry.<init>
  [30] jdk.nio.zipfs.ZipFileSystem.getEntry
  [31] jdk.nio.zipfs.ZipFileSystem.newInputStream
  [32] jdk.nio.zipfs.ZipPath.newInputStream
  [33] jdk.nio.zipfs.ZipFileSystemProvider.newInputStream
  [34] java.nio.file.Files.newInputStream
  [35] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [36] com.scalamandra.ZipLib$$anon$1$$Lambda$61.0x0000000800d25648.apply
  [37] cats.effect.IOFiber.$anonfun$8
  [38] cats.effect.IOFiber$$Lambda$204.0x0000000800da9ac0.apply
  [39] cats.effect.unsafe.WorkerThread.blockOn
  [40] scala.concurrent.package$.blocking
  [41] cats.effect.IOFiber.runLoop
  [42] cats.effect.IOFiber.execR
  [43] cats.effect.IOFiber.run
  [44] cats.effect.unsafe.WorkerThread.run

--- 451302178 ns (0.03%), 45 samples
  [ 0] dbuf_rele_and_unlock?[zfs]_[k]
  [ 1] dbuf_rele?[zfs]_[k]
  [ 2] dmu_buf_rele_array?[zfs]_[k]
  [ 3] dmu_read_uio_dnode?[zfs]_[k]
  [ 4] dmu_read_uio_dbuf?[zfs]_[k]
  [ 5] mappedread?[zfs]_[k]
  [ 6] zfs_read?[zfs]_[k]
  [ 7] zpl_iter_read?[zfs]_[k]
  [ 8] new_sync_read_[k]
  [ 9] vfs_read_[k]
  [10] __x64_sys_pread64_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] __libc_pread64
  [14] sun.nio.ch.FileDispatcherImpl.pread0
  [15] sun.nio.ch.FileDispatcherImpl.pread
  [16] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [17] sun.nio.ch.IOUtil.read
  [18] sun.nio.ch.IOUtil.read
  [19] sun.nio.ch.FileChannelImpl.readInternal
  [20] sun.nio.ch.FileChannelImpl.read
  [21] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [22] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [23] jdk.nio.zipfs.ZipFileSystem$2.fill
  [24] java.util.zip.InflaterInputStream.read
  [25] java.io.InputStream.readNBytes
  [26] java.io.InputStream.readAllBytes
  [27] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [28] com.scalamandra.ZipLib$$anon$1$$Lambda$61.0x0000000800d25648.apply
  [29] cats.effect.IOFiber.$anonfun$8
  [30] cats.effect.IOFiber$$Lambda$204.0x0000000800da9ac0.apply
  [31] cats.effect.unsafe.WorkerThread.blockOn
  [32] scala.concurrent.package$.blocking
  [33] cats.effect.IOFiber.runLoop
  [34] cats.effect.IOFiber.execR
  [35] cats.effect.IOFiber.run
  [36] cats.effect.unsafe.WorkerThread.run

--- 431895688 ns (0.03%), 43 samples
  [ 0] futex_wake_[k]
  [ 1] do_futex_[k]
  [ 2] __x64_sys_futex_[k]
  [ 3] do_syscall_64_[k]
  [ 4] entry_SYSCALL_64_after_hwframe_[k]
  [ 5] pthread_cond_signal@@GLIBC_2.3.2
  [ 6] jdk.internal.misc.Unsafe.unpark
  [ 7] java.util.concurrent.locks.LockSupport.unpark
  [ 8] cats.effect.unsafe.WorkStealingThreadPool.notifyParked
  [ 9] cats.effect.unsafe.WorkerThread.blockOn
  [10] scala.concurrent.package$.blocking
  [11] cats.effect.IOFiber.runLoop
  [12] cats.effect.IOFiber.execR
  [13] cats.effect.IOFiber.run
  [14] cats.effect.unsafe.WorkerThread.run

--- 431807478 ns (0.03%), 43 samples
  [ 0] futex_q_lock_[k]
  [ 1] futex_wait_setup_[k]
  [ 2] futex_wait_[k]
  [ 3] do_futex_[k]
  [ 4] __x64_sys_futex_[k]
  [ 5] do_syscall_64_[k]
  [ 6] entry_SYSCALL_64_after_hwframe_[k]
  [ 7] __futex_abstimed_wait_cancelable64
  [ 8] [unknown]
  [ 9] jdk.internal.misc.Unsafe.park
  [10] java.util.concurrent.locks.LockSupport.park
  [11] cats.effect.unsafe.WorkerThread.parkLoop$1
  [12] cats.effect.unsafe.WorkerThread.run

--- 431607929 ns (0.03%), 43 samples
  [ 0] _IO_default_xsputn
  [ 1] java.lang.Thread.setNativeName
  [ 2] java.lang.Thread.setName
  [ 3] cats.effect.unsafe.WorkerThread.blockOn
  [ 4] scala.concurrent.package$.blocking
  [ 5] cats.effect.IOFiber.runLoop
  [ 6] cats.effect.IOFiber.execR
  [ 7] cats.effect.IOFiber.run
  [ 8] cats.effect.unsafe.WorkerThread.run

--- 431160249 ns (0.03%), 43 samples
  [ 0] futex_wake_[k]
  [ 1] do_futex_[k]
  [ 2] __x64_sys_futex_[k]
  [ 3] do_syscall_64_[k]
  [ 4] entry_SYSCALL_64_after_hwframe_[k]
  [ 5] pthread_cond_signal@@GLIBC_2.3.2
  [ 6] jdk.internal.misc.Unsafe.unpark
  [ 7] java.util.concurrent.locks.LockSupport.unpark
  [ 8] java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext
  [ 9] java.util.concurrent.locks.AbstractQueuedSynchronizer.release
  [10] java.util.concurrent.locks.ReentrantLock.unlock
  [11] java.util.concurrent.ArrayBlockingQueue.offer
  [12] cats.effect.IOPlatform.unsafeRunTimed$$anonfun$1
  [13] cats.effect.IOPlatform$$Lambda$146.0x0000000800d9a830.applyVoid
  [14] scala.runtime.function.JProcedure1.apply
  [15] scala.runtime.function.JProcedure1.apply
  [16] cats.effect.IO.unsafeRunAsync$$anonfun$3
  [17] cats.effect.IO$$Lambda$164.0x0000000800da0408.applyVoid
  [18] scala.runtime.function.JProcedure1.apply
  [19] scala.runtime.function.JProcedure1.apply
  [20] cats.effect.IO.$anonfun$6$$anonfun$3
  [21] cats.effect.IO$$Lambda$233.0x0000000800db3288.applyVoid
  [22] scala.runtime.function.JProcedure1.apply
  [23] scala.runtime.function.JProcedure1.apply
  [24] cats.effect.kernel.Outcome.fold
  [25] cats.effect.kernel.Outcome.fold$
  [26] cats.effect.kernel.Outcome$Succeeded.fold
  [27] cats.effect.IO.$anonfun$6
  [28] cats.effect.IO$$Lambda$175.0x0000000800da3590.applyVoid
  [29] scala.runtime.function.JProcedure1.apply
  [30] scala.runtime.function.JProcedure1.apply
  [31] cats.effect.CallbackStack.apply
  [32] cats.effect.IOFiber.done
  [33] cats.effect.IOFiber.runTerminusSuccessK
  [34] cats.effect.IOFiber.succeeded
  [35] cats.effect.IOFiber.runLoop
  [36] cats.effect.IOFiber.execR
  [37] cats.effect.IOFiber.run
  [38] cats.effect.unsafe.WorkerThread.run

--- 422978968 ns (0.03%), 41 samples
  [ 0] cats.effect.IO$.async
  [ 1] cats.effect.IOFiber.<init>
  [ 2] cats.effect.IO.unsafeRunFiber
  [ 3] cats.effect.IO.unsafeRunAsync
  [ 4] cats.effect.IOPlatform.unsafeRunTimed
  [ 5] cats.effect.IOPlatform.unsafeRunSync
  [ 6] com.scalamandra.ZipBench.nioInputStream
  [ 7] com.scalamandra.jmh_generated.ZipBench_nioInputStream_jmhTest.nioInputStream_thrpt_jmhStub
  [ 8] com.scalamandra.jmh_generated.ZipBench_nioInputStream_jmhTest.nioInputStream_Throughput
  [ 9] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [10] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [11] java.lang.reflect.Method.invoke
  [12] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.Executors$RunnableAdapter.call
  [16] java.util.concurrent.FutureTask.run
  [17] java.util.concurrent.ThreadPoolExecutor.runWorker
  [18] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [19] java.lang.Thread.run

--- 421211572 ns (0.03%), 42 samples
  [ 0] __kmalloc_node_[k]
  [ 1] spl_kmem_alloc_impl?[spl]_[k]
  [ 2] spl_kmem_zalloc?[spl]_[k]
  [ 3] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 4] dmu_read_uio_dnode?[zfs]_[k]
  [ 5] dmu_read_uio_dbuf?[zfs]_[k]
  [ 6] mappedread?[zfs]_[k]
  [ 7] zfs_read?[zfs]_[k]
  [ 8] zpl_iter_read?[zfs]_[k]
  [ 9] new_sync_read_[k]
  [10] vfs_read_[k]
  [11] __x64_sys_pread64_[k]
  [12] do_syscall_64_[k]
  [13] entry_SYSCALL_64_after_hwframe_[k]
  [14] __libc_pread64
  [15] sun.nio.ch.FileDispatcherImpl.pread0
  [16] sun.nio.ch.FileDispatcherImpl.pread
  [17] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [18] sun.nio.ch.IOUtil.read
  [19] sun.nio.ch.IOUtil.read
  [20] sun.nio.ch.FileChannelImpl.readInternal
  [21] sun.nio.ch.FileChannelImpl.read
  [22] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [23] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [24] jdk.nio.zipfs.ZipFileSystem$2.fill
  [25] java.util.zip.InflaterInputStream.read
  [26] java.io.InputStream.readNBytes
  [27] java.io.InputStream.readAllBytes
  [28] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [29] com.scalamandra.ZipLib$$anon$1$$Lambda$61.0x0000000800d25648.apply
  [30] cats.effect.IOFiber.$anonfun$8
  [31] cats.effect.IOFiber$$Lambda$204.0x0000000800da9ac0.apply
  [32] cats.effect.unsafe.WorkerThread.blockOn
  [33] scala.concurrent.package$.blocking
  [34] cats.effect.IOFiber.runLoop
  [35] cats.effect.IOFiber.execR
  [36] cats.effect.IOFiber.run
  [37] cats.effect.unsafe.WorkerThread.run

--- 421202942 ns (0.03%), 42 samples
  [ 0] pthread_cond_signal@@GLIBC_2.3.2
  [ 1] jdk.internal.misc.Unsafe.unpark
  [ 2] java.util.concurrent.locks.LockSupport.unpark
  [ 3] java.util.concurrent.LinkedTransferQueue$Node.tryMatch
  [ 4] java.util.concurrent.LinkedTransferQueue.xfer
  [ 5] java.util.concurrent.LinkedTransferQueue.transfer
  [ 6] cats.effect.unsafe.WorkerThread.blockOn
  [ 7] scala.concurrent.package$.blocking
  [ 8] cats.effect.IOFiber.runLoop
  [ 9] cats.effect.IOFiber.execR
  [10] cats.effect.IOFiber.run
  [11] cats.effect.unsafe.WorkerThread.run

--- 421177358 ns (0.03%), 42 samples
  [ 0] dbuf_read?[zfs]_[k]
  [ 1] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 2] dmu_read_uio_dnode?[zfs]_[k]
  [ 3] dmu_read_uio_dbuf?[zfs]_[k]
  [ 4] mappedread?[zfs]_[k]
  [ 5] zfs_read?[zfs]_[k]
  [ 6] zpl_iter_read?[zfs]_[k]
  [ 7] new_sync_read_[k]
  [ 8] vfs_read_[k]
  [ 9] __x64_sys_pread64_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] __libc_pread64
  [13] sun.nio.ch.FileDispatcherImpl.pread0
  [14] sun.nio.ch.FileDispatcherImpl.pread
  [15] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [16] sun.nio.ch.IOUtil.read
  [17] sun.nio.ch.IOUtil.read
  [18] sun.nio.ch.FileChannelImpl.readInternal
  [19] sun.nio.ch.FileChannelImpl.read
  [20] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [21] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [22] jdk.nio.zipfs.ZipFileSystem$2.fill
  [23] java.util.zip.InflaterInputStream.read
  [24] java.io.InputStream.readNBytes
  [25] java.io.InputStream.readAllBytes
  [26] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [27] com.scalamandra.ZipLib$$anon$1$$Lambda$61.0x0000000800d25648.apply
  [28] cats.effect.IOFiber.$anonfun$8
  [29] cats.effect.IOFiber$$Lambda$204.0x0000000800da9ac0.apply
  [30] cats.effect.unsafe.WorkerThread.blockOn
  [31] scala.concurrent.package$.blocking
  [32] cats.effect.IOFiber.runLoop
  [33] cats.effect.IOFiber.execR
  [34] cats.effect.IOFiber.run
  [35] cats.effect.unsafe.WorkerThread.run

--- 412216842 ns (0.03%), 40 samples
  [ 0] __GI___pthread_enable_asynccancel
  [ 1] [unknown]
  [ 2] jdk.internal.misc.Unsafe.park
  [ 3] java.util.concurrent.locks.LockSupport.parkNanos
  [ 4] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos
  [ 5] java.util.concurrent.ArrayBlockingQueue.poll
  [ 6] cats.effect.IOPlatform.$anonfun$1
  [ 7] cats.effect.IOPlatform$$Lambda$198.0x0000000800dafc68.apply
  [ 8] scala.concurrent.BlockContext$DefaultBlockContext$.blockOn
  [ 9] scala.concurrent.package$.blocking
  [10] cats.effect.IOPlatform.unsafeRunTimed
  [11] cats.effect.IOPlatform.unsafeRunSync
  [12] com.scalamandra.ZipBench.nioInputStream
  [13] com.scalamandra.jmh_generated.ZipBench_nioInputStream_jmhTest.nioInputStream_thrpt_jmhStub
  [14] com.scalamandra.jmh_generated.ZipBench_nioInputStream_jmhTest.nioInputStream_Throughput
  [15] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [16] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [17] java.lang.reflect.Method.invoke
  [18] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [19] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [20] java.util.concurrent.FutureTask.run
  [21] java.util.concurrent.Executors$RunnableAdapter.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.ThreadPoolExecutor.runWorker
  [24] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [25] java.lang.Thread.run

--- 411392260 ns (0.03%), 41 samples
  [ 0] ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**)
  [ 1] Unsafe_Unpark
  [ 2] jdk.internal.misc.Unsafe.unpark
  [ 3] java.util.concurrent.locks.LockSupport.unpark
  [ 4] java.util.concurrent.LinkedTransferQueue$Node.tryMatch
  [ 5] java.util.concurrent.LinkedTransferQueue.xfer
  [ 6] java.util.concurrent.LinkedTransferQueue.transfer
  [ 7] cats.effect.unsafe.WorkerThread.blockOn
  [ 8] scala.concurrent.package$.blocking
  [ 9] cats.effect.IOFiber.runLoop
  [10] cats.effect.IOFiber.execR
  [11] cats.effect.IOFiber.run
  [12] cats.effect.unsafe.WorkerThread.run

--- 411178552 ns (0.03%), 41 samples
  [ 0] read_tsc_[k]
  [ 1] gethrtime?[zfs]_[k]
  [ 2] zio_wait?[zfs]_[k]
  [ 3] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 4] dmu_read_uio_dnode?[zfs]_[k]
  [ 5] dmu_read_uio_dbuf?[zfs]_[k]
  [ 6] mappedread?[zfs]_[k]
  [ 7] zfs_read?[zfs]_[k]
  [ 8] zpl_iter_read?[zfs]_[k]
  [ 9] new_sync_read_[k]
  [10] vfs_read_[k]
  [11] __x64_sys_pread64_[k]
  [12] do_syscall_64_[k]
  [13] entry_SYSCALL_64_after_hwframe_[k]
  [14] __libc_pread64
  [15] sun.nio.ch.FileDispatcherImpl.pread0
  [16] sun.nio.ch.FileDispatcherImpl.pread
  [17] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [18] sun.nio.ch.IOUtil.read
  [19] sun.nio.ch.IOUtil.read
  [20] sun.nio.ch.FileChannelImpl.readInternal
  [21] sun.nio.ch.FileChannelImpl.read
  [22] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [23] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [24] jdk.nio.zipfs.ZipFileSystem$2.fill
  [25] java.util.zip.InflaterInputStream.read
  [26] java.io.InputStream.readNBytes
  [27] java.io.InputStream.readAllBytes
  [28] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [29] com.scalamandra.ZipLib$$anon$1$$Lambda$61.0x0000000800d25648.apply
  [30] cats.effect.IOFiber.$anonfun$8
  [31] cats.effect.IOFiber$$Lambda$204.0x0000000800da9ac0.apply
  [32] cats.effect.unsafe.WorkerThread.blockOn
  [33] scala.concurrent.package$.blocking
  [34] cats.effect.IOFiber.runLoop
  [35] cats.effect.IOFiber.execR
  [36] cats.effect.IOFiber.run
  [37] cats.effect.unsafe.WorkerThread.run

--- 411101224 ns (0.03%), 41 samples
  [ 0] do_sched_yield_[k]
  [ 1] __x64_sys_sched_yield_[k]
  [ 2] do_syscall_64_[k]
  [ 3] entry_SYSCALL_64_after_hwframe_[k]
  [ 4] __GI___sched_yield
  [ 5] java.lang.Thread.yield
  [ 6] java.util.concurrent.LinkedTransferQueue.awaitMatch
  [ 7] java.util.concurrent.LinkedTransferQueue.xfer
  [ 8] java.util.concurrent.LinkedTransferQueue.poll
  [ 9] cats.effect.unsafe.WorkerThread.run

--- 411056536 ns (0.03%), 41 samples
  [ 0] sun.nio.ch.Util$BufferCache.get
  [ 1] sun.nio.ch.Util.getTemporaryDirectBuffer
  [ 2] sun.nio.ch.IOUtil.read
  [ 3] sun.nio.ch.IOUtil.read
  [ 4] sun.nio.ch.FileChannelImpl.readInternal
  [ 5] sun.nio.ch.FileChannelImpl.read
  [ 6] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [ 7] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [ 8] jdk.nio.zipfs.ZipFileSystem$Entry.readLocEXTT
  [ 9] jdk.nio.zipfs.ZipFileSystem$Entry.readExtra
  [10] jdk.nio.zipfs.ZipFileSystem$Entry.readCEN
  [11] jdk.nio.zipfs.ZipFileSystem$Entry.<init>
  [12] jdk.nio.zipfs.ZipFileSystem.getEntry
  [13] jdk.nio.zipfs.ZipFileSystem.newInputStream
  [14] jdk.nio.zipfs.ZipPath.newInputStream
  [15] jdk.nio.zipfs.ZipFileSystemProvider.newInputStream
  [16] java.nio.file.Files.newInputStream
  [17] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [18] com.scalamandra.ZipLib$$anon$1$$Lambda$61.0x0000000800d25648.apply
  [19] cats.effect.IOFiber.$anonfun$8
  [20] cats.effect.IOFiber$$Lambda$204.0x0000000800da9ac0.apply
  [21] cats.effect.unsafe.WorkerThread.blockOn
  [22] scala.concurrent.package$.blocking
  [23] cats.effect.IOFiber.runLoop
  [24] cats.effect.IOFiber.execR
  [25] cats.effect.IOFiber.run
  [26] cats.effect.unsafe.WorkerThread.run

--- 401340702 ns (0.03%), 40 samples
  [ 0] syscall_enter_from_user_mode_[k]
  [ 1] do_syscall_64_[k]
  [ 2] entry_SYSCALL_64_after_hwframe_[k]
  [ 3] pthread_cond_signal@@GLIBC_2.3.2
  [ 4] jdk.internal.misc.Unsafe.unpark
  [ 5] java.util.concurrent.locks.LockSupport.unpark
  [ 6] java.util.concurrent.LinkedTransferQueue$Node.tryMatch
  [ 7] java.util.concurrent.LinkedTransferQueue.xfer
  [ 8] java.util.concurrent.LinkedTransferQueue.transfer
  [ 9] cats.effect.unsafe.WorkerThread.blockOn
  [10] scala.concurrent.package$.blocking
  [11] cats.effect.IOFiber.runLoop
  [12] cats.effect.IOFiber.execR
  [13] cats.effect.IOFiber.run
  [14] cats.effect.unsafe.WorkerThread.run

--- 401300585 ns (0.03%), 40 samples
  [ 0] __GI___prctl
  [ 1] [unknown]
  [ 2] java.lang.Thread.setNativeName
  [ 3] java.lang.Thread.setName
  [ 4] cats.effect.unsafe.WorkerThread.blockOn
  [ 5] scala.concurrent.package$.blocking
  [ 6] cats.effect.IOFiber.runLoop
  [ 7] cats.effect.IOFiber.execR
  [ 8] cats.effect.IOFiber.run
  [ 9] cats.effect.unsafe.WorkerThread.run

--- 400918960 ns (0.03%), 40 samples
  [ 0] Java_java_util_zip_Inflater_inflateBytesBytes
  [ 1] java.util.zip.Inflater.inflateBytesBytes
  [ 2] java.util.zip.Inflater.inflate
  [ 3] java.util.zip.InflaterInputStream.read
  [ 4] java.io.InputStream.readNBytes
  [ 5] java.io.InputStream.readAllBytes
  [ 6] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [ 7] com.scalamandra.ZipLib$$anon$1$$Lambda$61.0x0000000800d25648.apply
  [ 8] cats.effect.IOFiber.$anonfun$8
  [ 9] cats.effect.IOFiber$$Lambda$204.0x0000000800da9ac0.apply
  [10] cats.effect.unsafe.WorkerThread.blockOn
  [11] scala.concurrent.package$.blocking
  [12] cats.effect.IOFiber.runLoop
  [13] cats.effect.IOFiber.execR
  [14] cats.effect.IOFiber.run
  [15] cats.effect.unsafe.WorkerThread.run

--- 391699866 ns (0.03%), 38 samples
  [ 0] pthread_cond_signal@@GLIBC_2.3.2
  [ 1] jdk.internal.misc.Unsafe.unpark
  [ 2] java.util.concurrent.locks.LockSupport.unpark
  [ 3] cats.effect.unsafe.WorkStealingThreadPool.notifyParked
  [ 4] cats.effect.unsafe.WorkStealingThreadPool.scheduleExternal
  [ 5] cats.effect.unsafe.WorkStealingThreadPool.execute
  [ 6] cats.effect.IO.unsafeRunFiber
  [ 7] cats.effect.IO.unsafeRunAsync
  [ 8] cats.effect.IOPlatform.unsafeRunTimed
  [ 9] cats.effect.IOPlatform.unsafeRunSync
  [10] com.scalamandra.ZipBench.nioInputStream
  [11] com.scalamandra.jmh_generated.ZipBench_nioInputStream_jmhTest.nioInputStream_thrpt_jmhStub
  [12] com.scalamandra.jmh_generated.ZipBench_nioInputStream_jmhTest.nioInputStream_Throughput
  [13] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [14] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [15] java.lang.reflect.Method.invoke
  [16] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [17] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [18] java.util.concurrent.FutureTask.run
  [19] java.util.concurrent.Executors$RunnableAdapter.call
  [20] java.util.concurrent.FutureTask.run
  [21] java.util.concurrent.ThreadPoolExecutor.runWorker
  [22] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [23] java.lang.Thread.run

--- 391626762 ns (0.03%), 39 samples
  [ 0] pthread_cond_signal@@GLIBC_2.3.2
  [ 1] jdk.internal.misc.Unsafe.unpark
  [ 2] java.util.concurrent.locks.LockSupport.unpark
  [ 3] cats.effect.unsafe.WorkStealingThreadPool.notifyParked
  [ 4] cats.effect.unsafe.WorkerThread.blockOn
  [ 5] scala.concurrent.package$.blocking
  [ 6] cats.effect.IOFiber.runLoop
  [ 7] cats.effect.IOFiber.execR
  [ 8] cats.effect.IOFiber.run
  [ 9] cats.effect.unsafe.WorkerThread.run

--- 391298507 ns (0.03%), 39 samples
  [ 0] syscall_enter_from_user_mode_[k]
  [ 1] do_syscall_64_[k]
  [ 2] entry_SYSCALL_64_after_hwframe_[k]
  [ 3] __libc_pread64
  [ 4] sun.nio.ch.FileDispatcherImpl.pread0
  [ 5] sun.nio.ch.FileDispatcherImpl.pread
  [ 6] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [ 7] sun.nio.ch.IOUtil.read
  [ 8] sun.nio.ch.IOUtil.read
  [ 9] sun.nio.ch.FileChannelImpl.readInternal
  [10] sun.nio.ch.FileChannelImpl.read
  [11] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [12] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [13] jdk.nio.zipfs.ZipFileSystem$Entry.readLocEXTT
  [14] jdk.nio.zipfs.ZipFileSystem$Entry.readExtra
  [15] jdk.nio.zipfs.ZipFileSystem$Entry.readCEN
  [16] jdk.nio.zipfs.ZipFileSystem$Entry.<init>
  [17] jdk.nio.zipfs.ZipFileSystem.getEntry
  [18] jdk.nio.zipfs.ZipFileSystem.newInputStream
  [19] jdk.nio.zipfs.ZipPath.newInputStream
  [20] jdk.nio.zipfs.ZipFileSystemProvider.newInputStream
  [21] java.nio.file.Files.newInputStream
  [22] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [23] com.scalamandra.ZipLib$$anon$1$$Lambda$61.0x0000000800d25648.apply
  [24] cats.effect.IOFiber.$anonfun$8
  [25] cats.effect.IOFiber$$Lambda$204.0x0000000800da9ac0.apply
  [26] cats.effect.unsafe.WorkerThread.blockOn
  [27] scala.concurrent.package$.blocking
  [28] cats.effect.IOFiber.runLoop
  [29] cats.effect.IOFiber.execR
  [30] cats.effect.IOFiber.run
  [31] cats.effect.unsafe.WorkerThread.run

--- 391212724 ns (0.03%), 39 samples
  [ 0] mutex_lock_[k]
  [ 1] arc_buf_access?[zfs]_[k]
  [ 2] dbuf_hold_impl?[zfs]_[k]
  [ 3] dbuf_hold_level?[zfs]_[k]
  [ 4] dbuf_hold?[zfs]_[k]
  [ 5] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 6] dmu_read_uio_dnode?[zfs]_[k]
  [ 7] dmu_read_uio_dbuf?[zfs]_[k]
  [ 8] mappedread?[zfs]_[k]
  [ 9] zfs_read?[zfs]_[k]
  [10] zpl_iter_read?[zfs]_[k]
  [11] new_sync_read_[k]
  [12] vfs_read_[k]
  [13] __x64_sys_pread64_[k]
  [14] do_syscall_64_[k]
  [15] entry_SYSCALL_64_after_hwframe_[k]
  [16] __libc_pread64
  [17] sun.nio.ch.FileDispatcherImpl.pread0
  [18] sun.nio.ch.FileDispatcherImpl.pread
  [19] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [20] sun.nio.ch.IOUtil.read
  [21] sun.nio.ch.IOUtil.read
  [22] sun.nio.ch.FileChannelImpl.readInternal
  [23] sun.nio.ch.FileChannelImpl.read
  [24] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [25] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [26] jdk.nio.zipfs.ZipFileSystem$2.fill
  [27] java.util.zip.InflaterInputStream.read
  [28] java.io.InputStream.readNBytes
  [29] java.io.InputStream.readAllBytes
  [30] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [31] com.scalamandra.ZipLib$$anon$1$$Lambda$61.0x0000000800d25648.apply
  [32] cats.effect.IOFiber.$anonfun$8
  [33] cats.effect.IOFiber$$Lambda$204.0x0000000800da9ac0.apply
  [34] cats.effect.unsafe.WorkerThread.blockOn
  [35] scala.concurrent.package$.blocking
  [36] cats.effect.IOFiber.runLoop
  [37] cats.effect.IOFiber.execR
  [38] cats.effect.IOFiber.run
  [39] cats.effect.unsafe.WorkerThread.run

--- 391070765 ns (0.03%), 39 samples
  [ 0] _raw_spin_lock_[k]
  [ 1] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 2] dmu_read_uio_dnode?[zfs]_[k]
  [ 3] dmu_read_uio_dbuf?[zfs]_[k]
  [ 4] mappedread?[zfs]_[k]
  [ 5] zfs_read?[zfs]_[k]
  [ 6] zpl_iter_read?[zfs]_[k]
  [ 7] new_sync_read_[k]
  [ 8] vfs_read_[k]
  [ 9] __x64_sys_pread64_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] __libc_pread64
  [13] sun.nio.ch.FileDispatcherImpl.pread0
  [14] sun.nio.ch.FileDispatcherImpl.pread
  [15] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [16] sun.nio.ch.IOUtil.read
  [17] sun.nio.ch.IOUtil.read
  [18] sun.nio.ch.FileChannelImpl.readInternal
  [19] sun.nio.ch.FileChannelImpl.read
  [20] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [21] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [22] jdk.nio.zipfs.ZipFileSystem$2.fill
  [23] java.util.zip.InflaterInputStream.read
  [24] java.io.InputStream.readNBytes
  [25] java.io.InputStream.readAllBytes
  [26] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [27] com.scalamandra.ZipLib$$anon$1$$Lambda$61.0x0000000800d25648.apply
  [28] cats.effect.IOFiber.$anonfun$8
  [29] cats.effect.IOFiber$$Lambda$204.0x0000000800da9ac0.apply
  [30] cats.effect.unsafe.WorkerThread.blockOn
  [31] scala.concurrent.package$.blocking
  [32] cats.effect.IOFiber.runLoop
  [33] cats.effect.IOFiber.execR
  [34] cats.effect.IOFiber.run
  [35] cats.effect.unsafe.WorkerThread.run

--- 390979940 ns (0.03%), 39 samples
  [ 0] __libc_pread64
  [ 1] sun.nio.ch.FileDispatcherImpl.pread0
  [ 2] sun.nio.ch.FileDispatcherImpl.pread
  [ 3] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [ 4] sun.nio.ch.IOUtil.read
  [ 5] sun.nio.ch.IOUtil.read
  [ 6] sun.nio.ch.FileChannelImpl.readInternal
  [ 7] sun.nio.ch.FileChannelImpl.read
  [ 8] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [ 9] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [10] jdk.nio.zipfs.ZipFileSystem$Entry.readLocEXTT
  [11] jdk.nio.zipfs.ZipFileSystem$Entry.readExtra
  [12] jdk.nio.zipfs.ZipFileSystem$Entry.readCEN
  [13] jdk.nio.zipfs.ZipFileSystem$Entry.<init>
  [14] jdk.nio.zipfs.ZipFileSystem.getEntry
  [15] jdk.nio.zipfs.ZipFileSystem.newInputStream
  [16] jdk.nio.zipfs.ZipPath.newInputStream
  [17] jdk.nio.zipfs.ZipFileSystemProvider.newInputStream
  [18] java.nio.file.Files.newInputStream
  [19] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [20] com.scalamandra.ZipLib$$anon$1$$Lambda$61.0x0000000800d25648.apply
  [21] cats.effect.IOFiber.$anonfun$8
  [22] cats.effect.IOFiber$$Lambda$204.0x0000000800da9ac0.apply
  [23] cats.effect.unsafe.WorkerThread.blockOn
  [24] scala.concurrent.package$.blocking
  [25] cats.effect.IOFiber.runLoop
  [26] cats.effect.IOFiber.execR
  [27] cats.effect.IOFiber.run
  [28] cats.effect.unsafe.WorkerThread.run

--- 390879613 ns (0.03%), 39 samples
  [ 0] jni_GetPrimitiveArrayCritical
  [ 1] Java_java_util_zip_Inflater_inflateBytesBytes
  [ 2] java.util.zip.Inflater.inflateBytesBytes
  [ 3] java.util.zip.Inflater.inflate
  [ 4] java.util.zip.InflaterInputStream.read
  [ 5] java.io.InputStream.readNBytes
  [ 6] java.io.InputStream.readAllBytes
  [ 7] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [ 8] com.scalamandra.ZipLib$$anon$1$$Lambda$61.0x0000000800d25648.apply
  [ 9] cats.effect.IOFiber.$anonfun$8
  [10] cats.effect.IOFiber$$Lambda$204.0x0000000800da9ac0.apply
  [11] cats.effect.unsafe.WorkerThread.blockOn
  [12] scala.concurrent.package$.blocking
  [13] cats.effect.IOFiber.runLoop
  [14] cats.effect.IOFiber.execR
  [15] cats.effect.IOFiber.run
  [16] cats.effect.unsafe.WorkerThread.run

--- 381324985 ns (0.03%), 38 samples
  [ 0] Unsafe_Park
  [ 1] jdk.internal.misc.Unsafe.park
  [ 2] java.util.concurrent.locks.LockSupport.park
  [ 3] cats.effect.unsafe.WorkerThread.parkLoop$1
  [ 4] cats.effect.unsafe.WorkerThread.run

--- 381240938 ns (0.03%), 38 samples
  [ 0] zfs_read?[zfs]_[k]
  [ 1] zpl_iter_read?[zfs]_[k]
  [ 2] new_sync_read_[k]
  [ 3] vfs_read_[k]
  [ 4] __x64_sys_pread64_[k]
  [ 5] do_syscall_64_[k]
  [ 6] entry_SYSCALL_64_after_hwframe_[k]
  [ 7] __libc_pread64
  [ 8] sun.nio.ch.FileDispatcherImpl.pread0
  [ 9] sun.nio.ch.FileDispatcherImpl.pread
  [10] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [11] sun.nio.ch.IOUtil.read
  [12] sun.nio.ch.IOUtil.read
  [13] sun.nio.ch.FileChannelImpl.readInternal
  [14] sun.nio.ch.FileChannelImpl.read
  [15] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [16] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [17] jdk.nio.zipfs.ZipFileSystem$Entry.readLocEXTT
  [18] jdk.nio.zipfs.ZipFileSystem$Entry.readExtra
  [19] jdk.nio.zipfs.ZipFileSystem$Entry.readCEN
  [20] jdk.nio.zipfs.ZipFileSystem$Entry.<init>
  [21] jdk.nio.zipfs.ZipFileSystem.getEntry
  [22] jdk.nio.zipfs.ZipFileSystem.newInputStream
  [23] jdk.nio.zipfs.ZipPath.newInputStream
  [24] jdk.nio.zipfs.ZipFileSystemProvider.newInputStream
  [25] java.nio.file.Files.newInputStream
  [26] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [27] com.scalamandra.ZipLib$$anon$1$$Lambda$61.0x0000000800d25648.apply
  [28] cats.effect.IOFiber.$anonfun$8
  [29] cats.effect.IOFiber$$Lambda$204.0x0000000800da9ac0.apply
  [30] cats.effect.unsafe.WorkerThread.blockOn
  [31] scala.concurrent.package$.blocking
  [32] cats.effect.IOFiber.runLoop
  [33] cats.effect.IOFiber.execR
  [34] cats.effect.IOFiber.run
  [35] cats.effect.unsafe.WorkerThread.run

--- 381105946 ns (0.03%), 38 samples
  [ 0] mutex_spin_on_owner_[k]
  [ 1] __mutex_lock.constprop.0_[k]
  [ 2] __mutex_lock_slowpath_[k]
  [ 3] mutex_lock_[k]
  [ 4] dbuf_find?[zfs]_[k]
  [ 5] dbuf_hold_impl?[zfs]_[k]
  [ 6] dbuf_hold_level?[zfs]_[k]
  [ 7] dbuf_hold?[zfs]_[k]
  [ 8] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 9] dmu_read_uio_dnode?[zfs]_[k]
  [10] dmu_read_uio_dbuf?[zfs]_[k]
  [11] mappedread?[zfs]_[k]
  [12] zfs_read?[zfs]_[k]
  [13] zpl_iter_read?[zfs]_[k]
  [14] new_sync_read_[k]
  [15] vfs_read_[k]
  [16] __x64_sys_pread64_[k]
  [17] do_syscall_64_[k]
  [18] entry_SYSCALL_64_after_hwframe_[k]
  [19] __libc_pread64
  [20] sun.nio.ch.FileDispatcherImpl.pread0
  [21] sun.nio.ch.FileDispatcherImpl.pread
  [22] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [23] sun.nio.ch.IOUtil.read
  [24] sun.nio.ch.IOUtil.read
  [25] sun.nio.ch.FileChannelImpl.readInternal
  [26] sun.nio.ch.FileChannelImpl.read
  [27] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [28] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [29] jdk.nio.zipfs.ZipFileSystem$2.fill
  [30] java.util.zip.InflaterInputStream.read
  [31] java.io.InputStream.readNBytes
  [32] java.io.InputStream.readAllBytes
  [33] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [34] com.scalamandra.ZipLib$$anon$1$$Lambda$61.0x0000000800d25648.apply
  [35] cats.effect.IOFiber.$anonfun$8
  [36] cats.effect.IOFiber$$Lambda$204.0x0000000800da9ac0.apply
  [37] cats.effect.unsafe.WorkerThread.blockOn
  [38] scala.concurrent.package$.blocking
  [39] cats.effect.IOFiber.runLoop
  [40] cats.effect.IOFiber.execR
  [41] cats.effect.IOFiber.run
  [42] cats.effect.unsafe.WorkerThread.run

--- 371221198 ns (0.03%), 37 samples
  [ 0] _raw_spin_unlock_irqrestore_[k]
  [ 1] hrtimer_start_range_ns_[k]
  [ 2] hrtimer_sleeper_start_expires_[k]
  [ 3] futex_wait_queue_[k]
  [ 4] futex_wait_[k]
  [ 5] do_futex_[k]
  [ 6] __x64_sys_futex_[k]
  [ 7] do_syscall_64_[k]
  [ 8] entry_SYSCALL_64_after_hwframe_[k]
  [ 9] __futex_abstimed_wait_cancelable64
  [10] [unknown]
  [11] jdk.internal.misc.Unsafe.park
  [12] java.util.concurrent.locks.LockSupport.parkNanos
  [13] java.util.concurrent.LinkedTransferQueue.awaitMatch
  [14] java.util.concurrent.LinkedTransferQueue.xfer
  [15] java.util.concurrent.LinkedTransferQueue.poll
  [16] cats.effect.unsafe.WorkerThread.run

--- 371153197 ns (0.03%), 37 samples
  [ 0] zrl_add_impl?[zfs]_[k]
  [ 1] dmu_read_uio_dbuf?[zfs]_[k]
  [ 2] mappedread?[zfs]_[k]
  [ 3] zfs_read?[zfs]_[k]
  [ 4] zpl_iter_read?[zfs]_[k]
  [ 5] new_sync_read_[k]
  [ 6] vfs_read_[k]
  [ 7] __x64_sys_pread64_[k]
  [ 8] do_syscall_64_[k]
  [ 9] entry_SYSCALL_64_after_hwframe_[k]
  [10] __libc_pread64
  [11] sun.nio.ch.FileDispatcherImpl.pread0
  [12] sun.nio.ch.FileDispatcherImpl.pread
  [13] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [14] sun.nio.ch.IOUtil.read
  [15] sun.nio.ch.IOUtil.read
  [16] sun.nio.ch.FileChannelImpl.readInternal
  [17] sun.nio.ch.FileChannelImpl.read
  [18] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [19] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [20] jdk.nio.zipfs.ZipFileSystem$Entry.readLocEXTT
  [21] jdk.nio.zipfs.ZipFileSystem$Entry.readExtra
  [22] jdk.nio.zipfs.ZipFileSystem$Entry.readCEN
  [23] jdk.nio.zipfs.ZipFileSystem$Entry.<init>
  [24] jdk.nio.zipfs.ZipFileSystem.getEntry
  [25] jdk.nio.zipfs.ZipFileSystem.newInputStream
  [26] jdk.nio.zipfs.ZipPath.newInputStream
  [27] jdk.nio.zipfs.ZipFileSystemProvider.newInputStream
  [28] java.nio.file.Files.newInputStream
  [29] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [30] com.scalamandra.ZipLib$$anon$1$$Lambda$61.0x0000000800d25648.apply
  [31] cats.effect.IOFiber.$anonfun$8
  [32] cats.effect.IOFiber$$Lambda$204.0x0000000800da9ac0.apply
  [33] cats.effect.unsafe.WorkerThread.blockOn
  [34] scala.concurrent.package$.blocking
  [35] cats.effect.IOFiber.runLoop
  [36] cats.effect.IOFiber.execR
  [37] cats.effect.IOFiber.run
  [38] cats.effect.unsafe.WorkerThread.run

--- 371118890 ns (0.03%), 36 samples
  [ 0] [vdso]
  [ 1] clock_gettime@@GLIBC_2.17
  [ 2] Unsafe_Park
  [ 3] jdk.internal.misc.Unsafe.park
  [ 4] java.util.concurrent.locks.LockSupport.parkNanos
  [ 5] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos
  [ 6] java.util.concurrent.ArrayBlockingQueue.poll
  [ 7] cats.effect.IOPlatform.$anonfun$1
  [ 8] cats.effect.IOPlatform$$Lambda$198.0x0000000800dafc68.apply
  [ 9] scala.concurrent.BlockContext$DefaultBlockContext$.blockOn
  [10] scala.concurrent.package$.blocking
  [11] cats.effect.IOPlatform.unsafeRunTimed
  [12] cats.effect.IOPlatform.unsafeRunSync
  [13] com.scalamandra.ZipBench.nioInputStream
  [14] com.scalamandra.jmh_generated.ZipBench_nioInputStream_jmhTest.nioInputStream_thrpt_jmhStub
  [15] com.scalamandra.jmh_generated.ZipBench_nioInputStream_jmhTest.nioInputStream_Throughput
  [16] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [17] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [18] java.lang.reflect.Method.invoke
  [19] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] java.util.concurrent.FutureTask.run
  [22] java.util.concurrent.Executors$RunnableAdapter.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.ThreadPoolExecutor.runWorker
  [25] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [26] java.lang.Thread.run

--- 371101745 ns (0.03%), 37 samples
  [ 0] vfs_read_[k]
  [ 1] __x64_sys_pread64_[k]
  [ 2] do_syscall_64_[k]
  [ 3] entry_SYSCALL_64_after_hwframe_[k]
  [ 4] __libc_pread64
  [ 5] sun.nio.ch.FileDispatcherImpl.pread0
  [ 6] sun.nio.ch.FileDispatcherImpl.pread
  [ 7] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [ 8] sun.nio.ch.IOUtil.read
  [ 9] sun.nio.ch.IOUtil.read
  [10] sun.nio.ch.FileChannelImpl.readInternal
  [11] sun.nio.ch.FileChannelImpl.read
  [12] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [13] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [14] jdk.nio.zipfs.ZipFileSystem$Entry.readLocEXTT
  [15] jdk.nio.zipfs.ZipFileSystem$Entry.readExtra
  [16] jdk.nio.zipfs.ZipFileSystem$Entry.readCEN
  [17] jdk.nio.zipfs.ZipFileSystem$Entry.<init>
  [18] jdk.nio.zipfs.ZipFileSystem.getEntry
  [19] jdk.nio.zipfs.ZipFileSystem.newInputStream
  [20] jdk.nio.zipfs.ZipPath.newInputStream
  [21] jdk.nio.zipfs.ZipFileSystemProvider.newInputStream
  [22] java.nio.file.Files.newInputStream
  [23] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [24] com.scalamandra.ZipLib$$anon$1$$Lambda$61.0x0000000800d25648.apply
  [25] cats.effect.IOFiber.$anonfun$8
  [26] cats.effect.IOFiber$$Lambda$204.0x0000000800da9ac0.apply
  [27] cats.effect.unsafe.WorkerThread.blockOn
  [28] scala.concurrent.package$.blocking
  [29] cats.effect.IOFiber.runLoop
  [30] cats.effect.IOFiber.execR
  [31] cats.effect.IOFiber.run
  [32] cats.effect.unsafe.WorkerThread.run

--- 371090073 ns (0.03%), 37 samples
  [ 0] java.lang.StringBuilder.toString
  [ 1] cats.effect.unsafe.WorkerThread.blockOn
  [ 2] scala.concurrent.package$.blocking
  [ 3] cats.effect.IOFiber.runLoop
  [ 4] cats.effect.IOFiber.execR
  [ 5] cats.effect.IOFiber.run
  [ 6] cats.effect.unsafe.WorkerThread.run

--- 370905696 ns (0.03%), 36 samples
  [ 0] [vdso]
  [ 1] clock_gettime@@GLIBC_2.17
  [ 2] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos
  [ 3] java.util.concurrent.ArrayBlockingQueue.poll
  [ 4] cats.effect.IOPlatform.$anonfun$1
  [ 5] cats.effect.IOPlatform$$Lambda$198.0x0000000800dafc68.apply
  [ 6] scala.concurrent.BlockContext$DefaultBlockContext$.blockOn
  [ 7] scala.concurrent.package$.blocking
  [ 8] cats.effect.IOPlatform.unsafeRunTimed
  [ 9] cats.effect.IOPlatform.unsafeRunSync
  [10] com.scalamandra.ZipBench.nioInputStream
  [11] com.scalamandra.jmh_generated.ZipBench_nioInputStream_jmhTest.nioInputStream_thrpt_jmhStub
  [12] com.scalamandra.jmh_generated.ZipBench_nioInputStream_jmhTest.nioInputStream_Throughput
  [13] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [14] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [15] java.lang.reflect.Method.invoke
  [16] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [17] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [18] java.util.concurrent.FutureTask.run
  [19] java.util.concurrent.Executors$RunnableAdapter.call
  [20] java.util.concurrent.FutureTask.run
  [21] java.util.concurrent.ThreadPoolExecutor.runWorker
  [22] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [23] java.lang.Thread.run

--- 370891273 ns (0.03%), 37 samples
  [ 0] syscall_enter_from_user_mode_[k]
  [ 1] do_syscall_64_[k]
  [ 2] entry_SYSCALL_64_after_hwframe_[k]
  [ 3] pthread_cond_signal@@GLIBC_2.3.2
  [ 4] jdk.internal.misc.Unsafe.unpark
  [ 5] java.util.concurrent.locks.LockSupport.unpark
  [ 6] java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext
  [ 7] java.util.concurrent.locks.AbstractQueuedSynchronizer.release
  [ 8] java.util.concurrent.locks.ReentrantLock.unlock
  [ 9] java.util.concurrent.ArrayBlockingQueue.offer
  [10] cats.effect.IOPlatform.unsafeRunTimed$$anonfun$1
  [11] cats.effect.IOPlatform$$Lambda$146.0x0000000800d9a830.applyVoid
  [12] scala.runtime.function.JProcedure1.apply
  [13] scala.runtime.function.JProcedure1.apply
  [14] cats.effect.IO.unsafeRunAsync$$anonfun$3
  [15] cats.effect.IO$$Lambda$164.0x0000000800da0408.applyVoid
  [16] scala.runtime.function.JProcedure1.apply
  [17] scala.runtime.function.JProcedure1.apply
  [18] cats.effect.IO.$anonfun$6$$anonfun$3
  [19] cats.effect.IO$$Lambda$233.0x0000000800db3288.applyVoid
  [20] scala.runtime.function.JProcedure1.apply
  [21] scala.runtime.function.JProcedure1.apply
  [22] cats.effect.kernel.Outcome.fold
  [23] cats.effect.kernel.Outcome.fold$
  [24] cats.effect.kernel.Outcome$Succeeded.fold
  [25] cats.effect.IO.$anonfun$6
  [26] cats.effect.IO$$Lambda$175.0x0000000800da3590.applyVoid
  [27] scala.runtime.function.JProcedure1.apply
  [28] scala.runtime.function.JProcedure1.apply
  [29] cats.effect.CallbackStack.apply
  [30] cats.effect.IOFiber.done
  [31] cats.effect.IOFiber.runTerminusSuccessK
  [32] cats.effect.IOFiber.succeeded
  [33] cats.effect.IOFiber.runLoop
  [34] cats.effect.IOFiber.execR
  [35] cats.effect.IOFiber.run
  [36] cats.effect.unsafe.WorkerThread.run

--- 361305901 ns (0.03%), 36 samples
  [ 0] __kmalloc_node_[k]
  [ 1] spl_kmem_alloc_impl?[spl]_[k]
  [ 2] spl_kmem_alloc?[spl]_[k]
  [ 3] zfs_rangelock_enter_impl?[zfs]_[k]
  [ 4] zfs_rangelock_enter?[zfs]_[k]
  [ 5] zfs_read?[zfs]_[k]
  [ 6] zpl_iter_read?[zfs]_[k]
  [ 7] new_sync_read_[k]
  [ 8] vfs_read_[k]
  [ 9] __x64_sys_pread64_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] __libc_pread64
  [13] sun.nio.ch.FileDispatcherImpl.pread0
  [14] sun.nio.ch.FileDispatcherImpl.pread
  [15] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [16] sun.nio.ch.IOUtil.read
  [17] sun.nio.ch.IOUtil.read
  [18] sun.nio.ch.FileChannelImpl.readInternal
  [19] sun.nio.ch.FileChannelImpl.read
  [20] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [21] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [22] jdk.nio.zipfs.ZipFileSystem$Entry.readLocEXTT
  [23] jdk.nio.zipfs.ZipFileSystem$Entry.readExtra
  [24] jdk.nio.zipfs.ZipFileSystem$Entry.readCEN
  [25] jdk.nio.zipfs.ZipFileSystem$Entry.<init>
  [26] jdk.nio.zipfs.ZipFileSystem.getEntry
  [27] jdk.nio.zipfs.ZipFileSystem.newInputStream
  [28] jdk.nio.zipfs.ZipPath.newInputStream
  [29] jdk.nio.zipfs.ZipFileSystemProvider.newInputStream
  [30] java.nio.file.Files.newInputStream
  [31] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [32] com.scalamandra.ZipLib$$anon$1$$Lambda$61.0x0000000800d25648.apply
  [33] cats.effect.IOFiber.$anonfun$8
  [34] cats.effect.IOFiber$$Lambda$204.0x0000000800da9ac0.apply
  [35] cats.effect.unsafe.WorkerThread.blockOn
  [36] scala.concurrent.package$.blocking
  [37] cats.effect.IOFiber.runLoop
  [38] cats.effect.IOFiber.execR
  [39] cats.effect.IOFiber.run
  [40] cats.effect.unsafe.WorkerThread.run

--- 361149340 ns (0.03%), 36 samples
  [ 0] strncpy_from_user_[k]
  [ 1] __do_sys_prctl_[k]
  [ 2] __x64_sys_prctl_[k]
  [ 3] do_syscall_64_[k]
  [ 4] entry_SYSCALL_64_after_hwframe_[k]
  [ 5] __GI___prctl
  [ 6] [unknown]
  [ 7] java.lang.Thread.setNativeName
  [ 8] java.lang.Thread.setName
  [ 9] cats.effect.unsafe.WorkerThread.blockOn
  [10] scala.concurrent.package$.blocking
  [11] cats.effect.IOFiber.runLoop
  [12] cats.effect.IOFiber.execR
  [13] cats.effect.IOFiber.run
  [14] cats.effect.unsafe.WorkerThread.run

--- 361046426 ns (0.03%), 36 samples
  [ 0] __filemap_get_folio_[k]
  [ 1] pagecache_get_page_[k]
  [ 2] find_lock_page?[zfs]_[k]
  [ 3] mappedread?[zfs]_[k]
  [ 4] zfs_read?[zfs]_[k]
  [ 5] zpl_iter_read?[zfs]_[k]
  [ 6] new_sync_read_[k]
  [ 7] vfs_read_[k]
  [ 8] __x64_sys_pread64_[k]
  [ 9] do_syscall_64_[k]
  [10] entry_SYSCALL_64_after_hwframe_[k]
  [11] __libc_pread64
  [12] sun.nio.ch.FileDispatcherImpl.pread0
  [13] sun.nio.ch.FileDispatcherImpl.pread
  [14] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [15] sun.nio.ch.IOUtil.read
  [16] sun.nio.ch.IOUtil.read
  [17] sun.nio.ch.FileChannelImpl.readInternal
  [18] sun.nio.ch.FileChannelImpl.read
  [19] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [20] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [21] jdk.nio.zipfs.ZipFileSystem$2.fill
  [22] java.util.zip.InflaterInputStream.read
  [23] java.io.InputStream.readNBytes
  [24] java.io.InputStream.readAllBytes
  [25] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [26] com.scalamandra.ZipLib$$anon$1$$Lambda$61.0x0000000800d25648.apply
  [27] cats.effect.IOFiber.$anonfun$8
  [28] cats.effect.IOFiber$$Lambda$204.0x0000000800da9ac0.apply
  [29] cats.effect.unsafe.WorkerThread.blockOn
  [30] scala.concurrent.package$.blocking
  [31] cats.effect.IOFiber.runLoop
  [32] cats.effect.IOFiber.execR
  [33] cats.effect.IOFiber.run
  [34] cats.effect.unsafe.WorkerThread.run

--- 351420653 ns (0.03%), 35 samples
  [ 0] JVM_SetNativeThreadName
  [ 1] java.lang.Thread.setNativeName
  [ 2] java.lang.Thread.setName
  [ 3] cats.effect.unsafe.WorkerThread.init
  [ 4] cats.effect.unsafe.WorkerThread.run

--- 351314363 ns (0.02%), 35 samples
  [ 0] java.lang.StringBuilder.toString
  [ 1] cats.effect.unsafe.WorkerThread.blockOn
  [ 2] scala.concurrent.package$.blocking
  [ 3] cats.effect.IOFiber.runLoop
  [ 4] cats.effect.IOFiber.execR
  [ 5] cats.effect.IOFiber.run
  [ 6] cats.effect.unsafe.WorkerThread.run

--- 351161434 ns (0.02%), 35 samples
  [ 0] __GI___prctl
  [ 1] [unknown]
  [ 2] java.lang.Thread.setNativeName
  [ 3] java.lang.Thread.setName
  [ 4] cats.effect.unsafe.WorkerThread.blockOn
  [ 5] scala.concurrent.package$.blocking
  [ 6] cats.effect.IOFiber.runLoop
  [ 7] cats.effect.IOFiber.execR
  [ 8] cats.effect.IOFiber.run
  [ 9] cats.effect.unsafe.WorkerThread.run

--- 350601471 ns (0.02%), 35 samples
  [ 0] java.io.InputStream.readNBytes
  [ 1] java.io.InputStream.readAllBytes
  [ 2] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [ 3] com.scalamandra.ZipLib$$anon$1$$Lambda$61.0x0000000800d25648.apply
  [ 4] cats.effect.IOFiber.$anonfun$8
  [ 5] cats.effect.IOFiber$$Lambda$204.0x0000000800da9ac0.apply
  [ 6] cats.effect.unsafe.WorkerThread.blockOn
  [ 7] scala.concurrent.package$.blocking
  [ 8] cats.effect.IOFiber.runLoop
  [ 9] cats.effect.IOFiber.execR
  [10] cats.effect.IOFiber.run
  [11] cats.effect.unsafe.WorkerThread.run

--- 349902793 ns (0.02%), 34 samples
  [ 0] ___pthread_cond_timedwait64
  [ 1] Unsafe_Park
  [ 2] jdk.internal.misc.Unsafe.park
  [ 3] java.util.concurrent.locks.LockSupport.parkNanos
  [ 4] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos
  [ 5] java.util.concurrent.ArrayBlockingQueue.poll
  [ 6] cats.effect.IOPlatform.$anonfun$1
  [ 7] cats.effect.IOPlatform$$Lambda$198.0x0000000800dafc68.apply
  [ 8] scala.concurrent.BlockContext$DefaultBlockContext$.blockOn
  [ 9] scala.concurrent.package$.blocking
  [10] cats.effect.IOPlatform.unsafeRunTimed
  [11] cats.effect.IOPlatform.unsafeRunSync
  [12] com.scalamandra.ZipBench.nioInputStream
  [13] com.scalamandra.jmh_generated.ZipBench_nioInputStream_jmhTest.nioInputStream_thrpt_jmhStub
  [14] com.scalamandra.jmh_generated.ZipBench_nioInputStream_jmhTest.nioInputStream_Throughput
  [15] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [16] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [17] java.lang.reflect.Method.invoke
  [18] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [19] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [20] java.util.concurrent.FutureTask.run
  [21] java.util.concurrent.Executors$RunnableAdapter.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.ThreadPoolExecutor.runWorker
  [24] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [25] java.lang.Thread.run

--- 349859595 ns (0.02%), 34 samples
  [ 0] cats.effect.unsafe.ThreadSafeHashtable.put
  [ 1] cats.effect.unsafe.StripedHashtable.put
  [ 2] cats.effect.IO.unsafeRunFiber
  [ 3] cats.effect.IO.unsafeRunAsync
  [ 4] cats.effect.IOPlatform.unsafeRunTimed
  [ 5] cats.effect.IOPlatform.unsafeRunSync
  [ 6] com.scalamandra.ZipBench.nioInputStream
  [ 7] com.scalamandra.jmh_generated.ZipBench_nioInputStream_jmhTest.nioInputStream_thrpt_jmhStub
  [ 8] com.scalamandra.jmh_generated.ZipBench_nioInputStream_jmhTest.nioInputStream_Throughput
  [ 9] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [10] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [11] java.lang.reflect.Method.invoke
  [12] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.Executors$RunnableAdapter.call
  [16] java.util.concurrent.FutureTask.run
  [17] java.util.concurrent.ThreadPoolExecutor.runWorker
  [18] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [19] java.lang.Thread.run

--- 341331922 ns (0.02%), 34 samples
  [ 0] syscall_enter_from_user_mode_[k]
  [ 1] do_syscall_64_[k]
  [ 2] entry_SYSCALL_64_after_hwframe_[k]
  [ 3] __GI___prctl
  [ 4] [unknown]
  [ 5] java.lang.Thread.setNativeName
  [ 6] java.lang.Thread.setName
  [ 7] cats.effect.unsafe.WorkerThread.blockOn
  [ 8] scala.concurrent.package$.blocking
  [ 9] cats.effect.IOFiber.runLoop
  [10] cats.effect.IOFiber.execR
  [11] cats.effect.IOFiber.run
  [12] cats.effect.unsafe.WorkerThread.run

--- 341152255 ns (0.02%), 34 samples
  [ 0] cats.effect.unsafe.WorkerThread.run

--- 341116263 ns (0.02%), 34 samples
  [ 0] zio_done?[zfs]_[k]
  [ 1] zio_wait?[zfs]_[k]
  [ 2] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 3] dmu_read_uio_dnode?[zfs]_[k]
  [ 4] dmu_read_uio_dbuf?[zfs]_[k]
  [ 5] mappedread?[zfs]_[k]
  [ 6] zfs_read?[zfs]_[k]
  [ 7] zpl_iter_read?[zfs]_[k]
  [ 8] new_sync_read_[k]
  [ 9] vfs_read_[k]
  [10] __x64_sys_pread64_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] __libc_pread64
  [14] sun.nio.ch.FileDispatcherImpl.pread0
  [15] sun.nio.ch.FileDispatcherImpl.pread
  [16] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [17] sun.nio.ch.IOUtil.read
  [18] sun.nio.ch.IOUtil.read
  [19] sun.nio.ch.FileChannelImpl.readInternal
  [20] sun.nio.ch.FileChannelImpl.read
  [21] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [22] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [23] jdk.nio.zipfs.ZipFileSystem$2.fill
  [24] java.util.zip.InflaterInputStream.read
  [25] java.io.InputStream.readNBytes
  [26] java.io.InputStream.readAllBytes
  [27] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [28] com.scalamandra.ZipLib$$anon$1$$Lambda$61.0x0000000800d25648.apply
  [29] cats.effect.IOFiber.$anonfun$8
  [30] cats.effect.IOFiber$$Lambda$204.0x0000000800da9ac0.apply
  [31] cats.effect.unsafe.WorkerThread.blockOn
  [32] scala.concurrent.package$.blocking
  [33] cats.effect.IOFiber.runLoop
  [34] cats.effect.IOFiber.execR
  [35] cats.effect.IOFiber.run
  [36] cats.effect.unsafe.WorkerThread.run

--- 341100675 ns (0.02%), 34 samples
  [ 0] char* UNICODE::as_utf8<signed char>(signed char const*, int&)
  [ 1] java_lang_String::as_utf8_string(oopDesc*)
  [ 2] JVM_SetNativeThreadName
  [ 3] java.lang.Thread.setNativeName
  [ 4] java.lang.Thread.setName
  [ 5] cats.effect.unsafe.WorkerThread.blockOn
  [ 6] scala.concurrent.package$.blocking
  [ 7] cats.effect.IOFiber.runLoop
  [ 8] cats.effect.IOFiber.execR
  [ 9] cats.effect.IOFiber.run
  [10] cats.effect.unsafe.WorkerThread.run

--- 341064757 ns (0.02%), 34 samples
  [ 0] pthread_cond_signal@@GLIBC_2.3.2
  [ 1] jdk.internal.misc.Unsafe.unpark
  [ 2] java.util.concurrent.locks.LockSupport.unpark
  [ 3] java.util.concurrent.LinkedTransferQueue$Node.tryMatch
  [ 4] java.util.concurrent.LinkedTransferQueue.xfer
  [ 5] java.util.concurrent.LinkedTransferQueue.transfer
  [ 6] cats.effect.unsafe.WorkerThread.blockOn
  [ 7] scala.concurrent.package$.blocking
  [ 8] cats.effect.IOFiber.runLoop
  [ 9] cats.effect.IOFiber.execR
  [10] cats.effect.IOFiber.run
  [11] cats.effect.unsafe.WorkerThread.run

--- 341013190 ns (0.02%), 34 samples
  [ 0] __GI___prctl
  [ 1] [unknown]
  [ 2] java.lang.Thread.setNativeName
  [ 3] java.lang.Thread.setName
  [ 4] cats.effect.unsafe.WorkerThread.init
  [ 5] cats.effect.unsafe.WorkerThread.run

--- 341005644 ns (0.02%), 34 samples
  [ 0] mutex_unlock_[k]
  [ 1] dbuf_hold_impl?[zfs]_[k]
  [ 2] dbuf_hold_level?[zfs]_[k]
  [ 3] dbuf_hold?[zfs]_[k]
  [ 4] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 5] dmu_read_uio_dnode?[zfs]_[k]
  [ 6] dmu_read_uio_dbuf?[zfs]_[k]
  [ 7] mappedread?[zfs]_[k]
  [ 8] zfs_read?[zfs]_[k]
  [ 9] zpl_iter_read?[zfs]_[k]
  [10] new_sync_read_[k]
  [11] vfs_read_[k]
  [12] __x64_sys_pread64_[k]
  [13] do_syscall_64_[k]
  [14] entry_SYSCALL_64_after_hwframe_[k]
  [15] __libc_pread64
  [16] sun.nio.ch.FileDispatcherImpl.pread0
  [17] sun.nio.ch.FileDispatcherImpl.pread
  [18] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [19] sun.nio.ch.IOUtil.read
  [20] sun.nio.ch.IOUtil.read
  [21] sun.nio.ch.FileChannelImpl.readInternal
  [22] sun.nio.ch.FileChannelImpl.read
  [23] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [24] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [25] jdk.nio.zipfs.ZipFileSystem$2.fill
  [26] java.util.zip.InflaterInputStream.read
  [27] java.io.InputStream.readNBytes
  [28] java.io.InputStream.readAllBytes
  [29] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [30] com.scalamandra.ZipLib$$anon$1$$Lambda$61.0x0000000800d25648.apply
  [31] cats.effect.IOFiber.$anonfun$8
  [32] cats.effect.IOFiber$$Lambda$204.0x0000000800da9ac0.apply
  [33] cats.effect.unsafe.WorkerThread.blockOn
  [34] scala.concurrent.package$.blocking
  [35] cats.effect.IOFiber.runLoop
  [36] cats.effect.IOFiber.execR
  [37] cats.effect.IOFiber.run
  [38] cats.effect.unsafe.WorkerThread.run

--- 340999852 ns (0.02%), 34 samples
  [ 0] _raw_spin_lock_[k]
  [ 1] dbuf_hold_impl?[zfs]_[k]
  [ 2] dbuf_hold_level?[zfs]_[k]
  [ 3] dbuf_hold?[zfs]_[k]
  [ 4] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 5] dmu_read_uio_dnode?[zfs]_[k]
  [ 6] dmu_read_uio_dbuf?[zfs]_[k]
  [ 7] mappedread?[zfs]_[k]
  [ 8] zfs_read?[zfs]_[k]
  [ 9] zpl_iter_read?[zfs]_[k]
  [10] new_sync_read_[k]
  [11] vfs_read_[k]
  [12] __x64_sys_pread64_[k]
  [13] do_syscall_64_[k]
  [14] entry_SYSCALL_64_after_hwframe_[k]
  [15] __libc_pread64
  [16] sun.nio.ch.FileDispatcherImpl.pread0
  [17] sun.nio.ch.FileDispatcherImpl.pread
  [18] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [19] sun.nio.ch.IOUtil.read
  [20] sun.nio.ch.IOUtil.read
  [21] sun.nio.ch.FileChannelImpl.readInternal
  [22] sun.nio.ch.FileChannelImpl.read
  [23] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [24] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [25] jdk.nio.zipfs.ZipFileSystem$2.fill
  [26] java.util.zip.InflaterInputStream.read
  [27] java.io.InputStream.readNBytes
  [28] java.io.InputStream.readAllBytes
  [29] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [30] com.scalamandra.ZipLib$$anon$1$$Lambda$61.0x0000000800d25648.apply
  [31] cats.effect.IOFiber.$anonfun$8
  [32] cats.effect.IOFiber$$Lambda$204.0x0000000800da9ac0.apply
  [33] cats.effect.unsafe.WorkerThread.blockOn
  [34] scala.concurrent.package$.blocking
  [35] cats.effect.IOFiber.runLoop
  [36] cats.effect.IOFiber.execR
  [37] cats.effect.IOFiber.run
  [38] cats.effect.unsafe.WorkerThread.run

--- 340885359 ns (0.02%), 34 samples
  [ 0] dbuf_find?[zfs]_[k]
  [ 1] dbuf_hold_impl?[zfs]_[k]
  [ 2] dbuf_hold_level?[zfs]_[k]
  [ 3] dbuf_hold?[zfs]_[k]
  [ 4] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 5] dmu_read_uio_dnode?[zfs]_[k]
  [ 6] dmu_read_uio_dbuf?[zfs]_[k]
  [ 7] mappedread?[zfs]_[k]
  [ 8] zfs_read?[zfs]_[k]
  [ 9] zpl_iter_read?[zfs]_[k]
  [10] new_sync_read_[k]
  [11] vfs_read_[k]
  [12] __x64_sys_pread64_[k]
  [13] do_syscall_64_[k]
  [14] entry_SYSCALL_64_after_hwframe_[k]
  [15] __libc_pread64
  [16] sun.nio.ch.FileDispatcherImpl.pread0
  [17] sun.nio.ch.FileDispatcherImpl.pread
  [18] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [19] sun.nio.ch.IOUtil.read
  [20] sun.nio.ch.IOUtil.read
  [21] sun.nio.ch.FileChannelImpl.readInternal
  [22] sun.nio.ch.FileChannelImpl.read
  [23] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [24] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [25] jdk.nio.zipfs.ZipFileSystem$2.fill
  [26] java.util.zip.InflaterInputStream.read
  [27] java.io.InputStream.readNBytes
  [28] java.io.InputStream.readAllBytes
  [29] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [30] com.scalamandra.ZipLib$$anon$1$$Lambda$61.0x0000000800d25648.apply
  [31] cats.effect.IOFiber.$anonfun$8
  [32] cats.effect.IOFiber$$Lambda$204.0x0000000800da9ac0.apply
  [33] cats.effect.unsafe.WorkerThread.blockOn
  [34] scala.concurrent.package$.blocking
  [35] cats.effect.IOFiber.runLoop
  [36] cats.effect.IOFiber.execR
  [37] cats.effect.IOFiber.run
  [38] cats.effect.unsafe.WorkerThread.run

--- 331284134 ns (0.02%), 33 samples
  [ 0] __fget_light_[k]
  [ 1] __fdget_[k]
  [ 2] __x64_sys_pread64_[k]
  [ 3] do_syscall_64_[k]
  [ 4] entry_SYSCALL_64_after_hwframe_[k]
  [ 5] __libc_pread64
  [ 6] sun.nio.ch.FileDispatcherImpl.pread0
  [ 7] sun.nio.ch.FileDispatcherImpl.pread
  [ 8] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [ 9] sun.nio.ch.IOUtil.read
  [10] sun.nio.ch.IOUtil.read
  [11] sun.nio.ch.FileChannelImpl.readInternal
  [12] sun.nio.ch.FileChannelImpl.read
  [13] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [14] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [15] jdk.nio.zipfs.ZipFileSystem$Entry.readLocEXTT
  [16] jdk.nio.zipfs.ZipFileSystem$Entry.readExtra
  [17] jdk.nio.zipfs.ZipFileSystem$Entry.readCEN
  [18] jdk.nio.zipfs.ZipFileSystem$Entry.<init>
  [19] jdk.nio.zipfs.ZipFileSystem.getEntry
  [20] jdk.nio.zipfs.ZipFileSystem.newInputStream
  [21] jdk.nio.zipfs.ZipPath.newInputStream
  [22] jdk.nio.zipfs.ZipFileSystemProvider.newInputStream
  [23] java.nio.file.Files.newInputStream
  [24] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [25] com.scalamandra.ZipLib$$anon$1$$Lambda$61.0x0000000800d25648.apply
  [26] cats.effect.IOFiber.$anonfun$8
  [27] cats.effect.IOFiber$$Lambda$204.0x0000000800da9ac0.apply
  [28] cats.effect.unsafe.WorkerThread.blockOn
  [29] scala.concurrent.package$.blocking
  [30] cats.effect.IOFiber.runLoop
  [31] cats.effect.IOFiber.execR
  [32] cats.effect.IOFiber.run
  [33] cats.effect.unsafe.WorkerThread.run

--- 331151099 ns (0.02%), 33 samples
  [ 0] __kmalloc_node_[k]
  [ 1] spl_kmem_alloc_impl?[spl]_[k]
  [ 2] spl_kmem_zalloc?[spl]_[k]
  [ 3] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 4] dmu_read_uio_dnode?[zfs]_[k]
  [ 5] dmu_read_uio_dbuf?[zfs]_[k]
  [ 6] mappedread?[zfs]_[k]
  [ 7] zfs_read?[zfs]_[k]
  [ 8] zpl_iter_read?[zfs]_[k]
  [ 9] new_sync_read_[k]
  [10] vfs_read_[k]
  [11] __x64_sys_pread64_[k]
  [12] do_syscall_64_[k]
  [13] entry_SYSCALL_64_after_hwframe_[k]
  [14] __libc_pread64
  [15] sun.nio.ch.FileDispatcherImpl.pread0
  [16] sun.nio.ch.FileDispatcherImpl.pread
  [17] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [18] sun.nio.ch.IOUtil.read
  [19] sun.nio.ch.IOUtil.read
  [20] sun.nio.ch.FileChannelImpl.readInternal
  [21] sun.nio.ch.FileChannelImpl.read
  [22] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [23] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [24] jdk.nio.zipfs.ZipFileSystem$Entry.readLocEXTT
  [25] jdk.nio.zipfs.ZipFileSystem$Entry.readExtra
  [26] jdk.nio.zipfs.ZipFileSystem$Entry.readCEN
  [27] jdk.nio.zipfs.ZipFileSystem$Entry.<init>
  [28] jdk.nio.zipfs.ZipFileSystem.getEntry
  [29] jdk.nio.zipfs.ZipFileSystem.newInputStream
  [30] jdk.nio.zipfs.ZipPath.newInputStream
  [31] jdk.nio.zipfs.ZipFileSystemProvider.newInputStream
  [32] java.nio.file.Files.newInputStream
  [33] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [34] com.scalamandra.ZipLib$$anon$1$$Lambda$61.0x0000000800d25648.apply
  [35] cats.effect.IOFiber.$anonfun$8
  [36] cats.effect.IOFiber$$Lambda$204.0x0000000800da9ac0.apply
  [37] cats.effect.unsafe.WorkerThread.blockOn
  [38] scala.concurrent.package$.blocking
  [39] cats.effect.IOFiber.runLoop
  [40] cats.effect.IOFiber.execR
  [41] cats.effect.IOFiber.run
  [42] cats.effect.unsafe.WorkerThread.run

--- 331010016 ns (0.02%), 33 samples
  [ 0] zio_ready?[zfs]_[k]
  [ 1] zio_wait?[zfs]_[k]
  [ 2] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 3] dmu_read_uio_dnode?[zfs]_[k]
  [ 4] dmu_read_uio_dbuf?[zfs]_[k]
  [ 5] mappedread?[zfs]_[k]
  [ 6] zfs_read?[zfs]_[k]
  [ 7] zpl_iter_read?[zfs]_[k]
  [ 8] new_sync_read_[k]
  [ 9] vfs_read_[k]
  [10] __x64_sys_pread64_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] __libc_pread64
  [14] sun.nio.ch.FileDispatcherImpl.pread0
  [15] sun.nio.ch.FileDispatcherImpl.pread
  [16] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [17] sun.nio.ch.IOUtil.read
  [18] sun.nio.ch.IOUtil.read
  [19] sun.nio.ch.FileChannelImpl.readInternal
  [20] sun.nio.ch.FileChannelImpl.read
  [21] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [22] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [23] jdk.nio.zipfs.ZipFileSystem$2.fill
  [24] java.util.zip.InflaterInputStream.read
  [25] java.io.InputStream.readNBytes
  [26] java.io.InputStream.readAllBytes
  [27] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [28] com.scalamandra.ZipLib$$anon$1$$Lambda$61.0x0000000800d25648.apply
  [29] cats.effect.IOFiber.$anonfun$8
  [30] cats.effect.IOFiber$$Lambda$204.0x0000000800da9ac0.apply
  [31] cats.effect.unsafe.WorkerThread.blockOn
  [32] scala.concurrent.package$.blocking
  [33] cats.effect.IOFiber.runLoop
  [34] cats.effect.IOFiber.execR
  [35] cats.effect.IOFiber.run
  [36] cats.effect.unsafe.WorkerThread.run

--- 330904218 ns (0.02%), 33 samples
  [ 0] JVM_SetNativeThreadName
  [ 1] java.lang.Thread.setNativeName
  [ 2] java.lang.Thread.setName
  [ 3] cats.effect.unsafe.WorkerThread.blockOn
  [ 4] scala.concurrent.package$.blocking
  [ 5] cats.effect.IOFiber.runLoop
  [ 6] cats.effect.IOFiber.execR
  [ 7] cats.effect.IOFiber.run
  [ 8] cats.effect.unsafe.WorkerThread.run

--- 330624518 ns (0.02%), 33 samples
  [ 0] java.util.zip.Inflater.inflate
  [ 1] java.util.zip.InflaterInputStream.read
  [ 2] java.io.InputStream.readNBytes
  [ 3] java.io.InputStream.readAllBytes
  [ 4] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [ 5] com.scalamandra.ZipLib$$anon$1$$Lambda$61.0x0000000800d25648.apply
  [ 6] cats.effect.IOFiber.$anonfun$8
  [ 7] cats.effect.IOFiber$$Lambda$204.0x0000000800da9ac0.apply
  [ 8] cats.effect.unsafe.WorkerThread.blockOn
  [ 9] scala.concurrent.package$.blocking
  [10] cats.effect.IOFiber.runLoop
  [11] cats.effect.IOFiber.execR
  [12] cats.effect.IOFiber.run
  [13] cats.effect.unsafe.WorkerThread.run

--- 321288286 ns (0.02%), 32 samples
  [ 0] strncpy_from_user_[k]
  [ 1] __do_sys_prctl_[k]
  [ 2] __x64_sys_prctl_[k]
  [ 3] do_syscall_64_[k]
  [ 4] entry_SYSCALL_64_after_hwframe_[k]
  [ 5] __GI___prctl
  [ 6] [unknown]
  [ 7] java.lang.Thread.setNativeName
  [ 8] java.lang.Thread.setName
  [ 9] cats.effect.unsafe.WorkerThread.blockOn
  [10] scala.concurrent.package$.blocking
  [11] cats.effect.IOFiber.runLoop
  [12] cats.effect.IOFiber.execR
  [13] cats.effect.IOFiber.run
  [14] cats.effect.unsafe.WorkerThread.run

--- 321151420 ns (0.02%), 32 samples
  [ 0] futex_wait_[k]
  [ 1] do_futex_[k]
  [ 2] __x64_sys_futex_[k]
  [ 3] do_syscall_64_[k]
  [ 4] entry_SYSCALL_64_after_hwframe_[k]
  [ 5] __futex_abstimed_wait_cancelable64
  [ 6] [unknown]
  [ 7] jdk.internal.misc.Unsafe.park
  [ 8] java.util.concurrent.locks.LockSupport.park
  [ 9] cats.effect.unsafe.WorkerThread.parkLoop$1
  [10] cats.effect.unsafe.WorkerThread.run

--- 321015305 ns (0.02%), 32 samples
  [ 0] zio_wait?[zfs]_[k]
  [ 1] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 2] dmu_read_uio_dnode?[zfs]_[k]
  [ 3] dmu_read_uio_dbuf?[zfs]_[k]
  [ 4] mappedread?[zfs]_[k]
  [ 5] zfs_read?[zfs]_[k]
  [ 6] zpl_iter_read?[zfs]_[k]
  [ 7] new_sync_read_[k]
  [ 8] vfs_read_[k]
  [ 9] __x64_sys_pread64_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] __libc_pread64
  [13] sun.nio.ch.FileDispatcherImpl.pread0
  [14] sun.nio.ch.FileDispatcherImpl.pread
  [15] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [16] sun.nio.ch.IOUtil.read
  [17] sun.nio.ch.IOUtil.read
  [18] sun.nio.ch.FileChannelImpl.readInternal
  [19] sun.nio.ch.FileChannelImpl.read
  [20] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [21] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [22] jdk.nio.zipfs.ZipFileSystem$2.fill
  [23] java.util.zip.InflaterInputStream.read
  [24] java.io.InputStream.readNBytes
  [25] java.io.InputStream.readAllBytes
  [26] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [27] com.scalamandra.ZipLib$$anon$1$$Lambda$61.0x0000000800d25648.apply
  [28] cats.effect.IOFiber.$anonfun$8
  [29] cats.effect.IOFiber$$Lambda$204.0x0000000800da9ac0.apply
  [30] cats.effect.unsafe.WorkerThread.blockOn
  [31] scala.concurrent.package$.blocking
  [32] cats.effect.IOFiber.runLoop
  [33] cats.effect.IOFiber.execR
  [34] cats.effect.IOFiber.run
  [35] cats.effect.unsafe.WorkerThread.run

--- 311022224 ns (0.02%), 31 samples
  [ 0] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 1] dmu_read_uio_dnode?[zfs]_[k]
  [ 2] dmu_read_uio_dbuf?[zfs]_[k]
  [ 3] mappedread?[zfs]_[k]
  [ 4] zfs_read?[zfs]_[k]
  [ 5] zpl_iter_read?[zfs]_[k]
  [ 6] new_sync_read_[k]
  [ 7] vfs_read_[k]
  [ 8] __x64_sys_pread64_[k]
  [ 9] do_syscall_64_[k]
  [10] entry_SYSCALL_64_after_hwframe_[k]
  [11] __libc_pread64
  [12] sun.nio.ch.FileDispatcherImpl.pread0
  [13] sun.nio.ch.FileDispatcherImpl.pread
  [14] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [15] sun.nio.ch.IOUtil.read
  [16] sun.nio.ch.IOUtil.read
  [17] sun.nio.ch.FileChannelImpl.readInternal
  [18] sun.nio.ch.FileChannelImpl.read
  [19] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [20] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [21] jdk.nio.zipfs.ZipFileSystem$Entry.readLocEXTT
  [22] jdk.nio.zipfs.ZipFileSystem$Entry.readExtra
  [23] jdk.nio.zipfs.ZipFileSystem$Entry.readCEN
  [24] jdk.nio.zipfs.ZipFileSystem$Entry.<init>
  [25] jdk.nio.zipfs.ZipFileSystem.getEntry
  [26] jdk.nio.zipfs.ZipFileSystem.newInputStream
  [27] jdk.nio.zipfs.ZipPath.newInputStream
  [28] jdk.nio.zipfs.ZipFileSystemProvider.newInputStream
  [29] java.nio.file.Files.newInputStream
  [30] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [31] com.scalamandra.ZipLib$$anon$1$$Lambda$61.0x0000000800d25648.apply
  [32] cats.effect.IOFiber.$anonfun$8
  [33] cats.effect.IOFiber$$Lambda$204.0x0000000800da9ac0.apply
  [34] cats.effect.unsafe.WorkerThread.blockOn
  [35] scala.concurrent.package$.blocking
  [36] cats.effect.IOFiber.runLoop
  [37] cats.effect.IOFiber.execR
  [38] cats.effect.IOFiber.run
  [39] cats.effect.unsafe.WorkerThread.run

--- 310919812 ns (0.02%), 31 samples
  [ 0] kfree_[k]
  [ 1] spl_kmem_free_impl?[spl]_[k]
  [ 2] spl_kmem_free?[spl]_[k]
  [ 3] dmu_buf_rele_array?[zfs]_[k]
  [ 4] dmu_read_uio_dnode?[zfs]_[k]
  [ 5] dmu_read_uio_dbuf?[zfs]_[k]
  [ 6] mappedread?[zfs]_[k]
  [ 7] zfs_read?[zfs]_[k]
  [ 8] zpl_iter_read?[zfs]_[k]
  [ 9] new_sync_read_[k]
  [10] vfs_read_[k]
  [11] __x64_sys_pread64_[k]
  [12] do_syscall_64_[k]
  [13] entry_SYSCALL_64_after_hwframe_[k]
  [14] __libc_pread64
  [15] sun.nio.ch.FileDispatcherImpl.pread0
  [16] sun.nio.ch.FileDispatcherImpl.pread
  [17] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [18] sun.nio.ch.IOUtil.read
  [19] sun.nio.ch.IOUtil.read
  [20] sun.nio.ch.FileChannelImpl.readInternal
  [21] sun.nio.ch.FileChannelImpl.read
  [22] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [23] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [24] jdk.nio.zipfs.ZipFileSystem$2.fill
  [25] java.util.zip.InflaterInputStream.read
  [26] java.io.InputStream.readNBytes
  [27] java.io.InputStream.readAllBytes
  [28] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [29] com.scalamandra.ZipLib$$anon$1$$Lambda$61.0x0000000800d25648.apply
  [30] cats.effect.IOFiber.$anonfun$8
  [31] cats.effect.IOFiber$$Lambda$204.0x0000000800da9ac0.apply
  [32] cats.effect.unsafe.WorkerThread.blockOn
  [33] scala.concurrent.package$.blocking
  [34] cats.effect.IOFiber.runLoop
  [35] cats.effect.IOFiber.execR
  [36] cats.effect.IOFiber.run
  [37] cats.effect.unsafe.WorkerThread.run

--- 301125669 ns (0.02%), 30 samples
  [ 0] futex_wake_[k]
  [ 1] do_futex_[k]
  [ 2] __x64_sys_futex_[k]
  [ 3] do_syscall_64_[k]
  [ 4] entry_SYSCALL_64_after_hwframe_[k]
  [ 5] pthread_cond_signal@@GLIBC_2.3.2
  [ 6] jdk.internal.misc.Unsafe.unpark
  [ 7] java.util.concurrent.locks.LockSupport.unpark
  [ 8] java.util.concurrent.LinkedTransferQueue$Node.tryMatch
  [ 9] java.util.concurrent.LinkedTransferQueue.xfer
  [10] java.util.concurrent.LinkedTransferQueue.transfer
  [11] cats.effect.unsafe.WorkerThread.blockOn
  [12] scala.concurrent.package$.blocking
  [13] cats.effect.IOFiber.runLoop
  [14] cats.effect.IOFiber.execR
  [15] cats.effect.IOFiber.run
  [16] cats.effect.unsafe.WorkerThread.run

--- 301084581 ns (0.02%), 30 samples
  [ 0] cats.effect.tracing.RingBuffer.push
  [ 1] cats.effect.IOFiber.pushTracingEvent
  [ 2] cats.effect.IOFiber.runLoop
  [ 3] cats.effect.IOFiber.execR
  [ 4] cats.effect.IOFiber.run
  [ 5] cats.effect.unsafe.WorkerThread.run

--- 301025874 ns (0.02%), 30 samples
  [ 0] zio_create?[zfs]_[k]
  [ 1] zio_null?[zfs]_[k]
  [ 2] zio_root?[zfs]_[k]
  [ 3] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 4] dmu_read_uio_dnode?[zfs]_[k]
  [ 5] dmu_read_uio_dbuf?[zfs]_[k]
  [ 6] mappedread?[zfs]_[k]
  [ 7] zfs_read?[zfs]_[k]
  [ 8] zpl_iter_read?[zfs]_[k]
  [ 9] new_sync_read_[k]
  [10] vfs_read_[k]
  [11] __x64_sys_pread64_[k]
  [12] do_syscall_64_[k]
  [13] entry_SYSCALL_64_after_hwframe_[k]
  [14] __libc_pread64
  [15] sun.nio.ch.FileDispatcherImpl.pread0
  [16] sun.nio.ch.FileDispatcherImpl.pread
  [17] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [18] sun.nio.ch.IOUtil.read
  [19] sun.nio.ch.IOUtil.read
  [20] sun.nio.ch.FileChannelImpl.readInternal
  [21] sun.nio.ch.FileChannelImpl.read
  [22] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [23] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [24] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.initDataPos
  [25] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [26] jdk.nio.zipfs.ZipFileSystem$2.fill
  [27] java.util.zip.InflaterInputStream.read
  [28] java.io.InputStream.readNBytes
  [29] java.io.InputStream.readAllBytes
  [30] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [31] com.scalamandra.ZipLib$$anon$1$$Lambda$61.0x0000000800d25648.apply
  [32] cats.effect.IOFiber.$anonfun$8
  [33] cats.effect.IOFiber$$Lambda$204.0x0000000800da9ac0.apply
  [34] cats.effect.unsafe.WorkerThread.blockOn
  [35] scala.concurrent.package$.blocking
  [36] cats.effect.IOFiber.runLoop
  [37] cats.effect.IOFiber.execR
  [38] cats.effect.IOFiber.run
  [39] cats.effect.unsafe.WorkerThread.run

--- 300997011 ns (0.02%), 30 samples
  [ 0] sun.nio.ch.Util$BufferCache.get
  [ 1] sun.nio.ch.Util.getTemporaryDirectBuffer
  [ 2] sun.nio.ch.IOUtil.read
  [ 3] sun.nio.ch.IOUtil.read
  [ 4] sun.nio.ch.FileChannelImpl.readInternal
  [ 5] sun.nio.ch.FileChannelImpl.read
  [ 6] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [ 7] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [ 8] jdk.nio.zipfs.ZipFileSystem$Entry.readLocEXTT
  [ 9] jdk.nio.zipfs.ZipFileSystem$Entry.readExtra
  [10] jdk.nio.zipfs.ZipFileSystem$Entry.readCEN
  [11] jdk.nio.zipfs.ZipFileSystem$Entry.<init>
  [12] jdk.nio.zipfs.ZipFileSystem.getEntry
  [13] jdk.nio.zipfs.ZipFileSystem.newInputStream
  [14] jdk.nio.zipfs.ZipPath.newInputStream
  [15] jdk.nio.zipfs.ZipFileSystemProvider.newInputStream
  [16] java.nio.file.Files.newInputStream
  [17] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [18] com.scalamandra.ZipLib$$anon$1$$Lambda$61.0x0000000800d25648.apply
  [19] cats.effect.IOFiber.$anonfun$8
  [20] cats.effect.IOFiber$$Lambda$204.0x0000000800da9ac0.apply
  [21] cats.effect.unsafe.WorkerThread.blockOn
  [22] scala.concurrent.package$.blocking
  [23] cats.effect.IOFiber.runLoop
  [24] cats.effect.IOFiber.execR
  [25] cats.effect.IOFiber.run
  [26] cats.effect.unsafe.WorkerThread.run

--- 300963133 ns (0.02%), 30 samples
  [ 0] zio_create?[zfs]_[k]
  [ 1] zio_null?[zfs]_[k]
  [ 2] zio_root?[zfs]_[k]
  [ 3] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 4] dmu_read_uio_dnode?[zfs]_[k]
  [ 5] dmu_read_uio_dbuf?[zfs]_[k]
  [ 6] mappedread?[zfs]_[k]
  [ 7] zfs_read?[zfs]_[k]
  [ 8] zpl_iter_read?[zfs]_[k]
  [ 9] new_sync_read_[k]
  [10] vfs_read_[k]
  [11] __x64_sys_pread64_[k]
  [12] do_syscall_64_[k]
  [13] entry_SYSCALL_64_after_hwframe_[k]
  [14] __libc_pread64
  [15] sun.nio.ch.FileDispatcherImpl.pread0
  [16] sun.nio.ch.FileDispatcherImpl.pread
  [17] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [18] sun.nio.ch.IOUtil.read
  [19] sun.nio.ch.IOUtil.read
  [20] sun.nio.ch.FileChannelImpl.readInternal
  [21] sun.nio.ch.FileChannelImpl.read
  [22] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [23] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [24] jdk.nio.zipfs.ZipFileSystem$Entry.readLocEXTT
  [25] jdk.nio.zipfs.ZipFileSystem$Entry.readExtra
  [26] jdk.nio.zipfs.ZipFileSystem$Entry.readCEN
  [27] jdk.nio.zipfs.ZipFileSystem$Entry.<init>
  [28] jdk.nio.zipfs.ZipFileSystem.getEntry
  [29] jdk.nio.zipfs.ZipFileSystem.newInputStream
  [30] jdk.nio.zipfs.ZipPath.newInputStream
  [31] jdk.nio.zipfs.ZipFileSystemProvider.newInputStream
  [32] java.nio.file.Files.newInputStream
  [33] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [34] com.scalamandra.ZipLib$$anon$1$$Lambda$61.0x0000000800d25648.apply
  [35] cats.effect.IOFiber.$anonfun$8
  [36] cats.effect.IOFiber$$Lambda$204.0x0000000800da9ac0.apply
  [37] cats.effect.unsafe.WorkerThread.blockOn
  [38] scala.concurrent.package$.blocking
  [39] cats.effect.IOFiber.runLoop
  [40] cats.effect.IOFiber.execR
  [41] cats.effect.IOFiber.run
  [42] cats.effect.unsafe.WorkerThread.run

--- 300907818 ns (0.02%), 30 samples
  [ 0] dmu_zfetch_prepare?[zfs]_[k]
  [ 1] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 2] dmu_read_uio_dnode?[zfs]_[k]
  [ 3] dmu_read_uio_dbuf?[zfs]_[k]
  [ 4] mappedread?[zfs]_[k]
  [ 5] zfs_read?[zfs]_[k]
  [ 6] zpl_iter_read?[zfs]_[k]
  [ 7] new_sync_read_[k]
  [ 8] vfs_read_[k]
  [ 9] __x64_sys_pread64_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] __libc_pread64
  [13] sun.nio.ch.FileDispatcherImpl.pread0
  [14] sun.nio.ch.FileDispatcherImpl.pread
  [15] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [16] sun.nio.ch.IOUtil.read
  [17] sun.nio.ch.IOUtil.read
  [18] sun.nio.ch.FileChannelImpl.readInternal
  [19] sun.nio.ch.FileChannelImpl.read
  [20] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [21] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [22] jdk.nio.zipfs.ZipFileSystem$2.fill
  [23] java.util.zip.InflaterInputStream.read
  [24] java.io.InputStream.readNBytes
  [25] java.io.InputStream.readAllBytes
  [26] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [27] com.scalamandra.ZipLib$$anon$1$$Lambda$61.0x0000000800d25648.apply
  [28] cats.effect.IOFiber.$anonfun$8
  [29] cats.effect.IOFiber$$Lambda$204.0x0000000800da9ac0.apply
  [30] cats.effect.unsafe.WorkerThread.blockOn
  [31] scala.concurrent.package$.blocking
  [32] cats.effect.IOFiber.runLoop
  [33] cats.effect.IOFiber.execR
  [34] cats.effect.IOFiber.run
  [35] cats.effect.unsafe.WorkerThread.run

--- 300585360 ns (0.02%), 30 samples
  [ 0] CollectedHeap::supports_object_pinning() const
  [ 1] Java_java_util_zip_Inflater_inflateBytesBytes
  [ 2] java.util.zip.Inflater.inflateBytesBytes
  [ 3] java.util.zip.Inflater.inflate
  [ 4] java.util.zip.InflaterInputStream.read
  [ 5] java.io.InputStream.readNBytes
  [ 6] java.io.InputStream.readAllBytes
  [ 7] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [ 8] com.scalamandra.ZipLib$$anon$1$$Lambda$61.0x0000000800d25648.apply
  [ 9] cats.effect.IOFiber.$anonfun$8
  [10] cats.effect.IOFiber$$Lambda$204.0x0000000800da9ac0.apply
  [11] cats.effect.unsafe.WorkerThread.blockOn
  [12] scala.concurrent.package$.blocking
  [13] cats.effect.IOFiber.runLoop
  [14] cats.effect.IOFiber.execR
  [15] cats.effect.IOFiber.run
  [16] cats.effect.unsafe.WorkerThread.run

--- 299209189 ns (0.02%), 29 samples
  [ 0] schedule_[k]
  [ 1] futex_wait_queue_[k]
  [ 2] futex_wait_[k]
  [ 3] do_futex_[k]
  [ 4] __x64_sys_futex_[k]
  [ 5] do_syscall_64_[k]
  [ 6] entry_SYSCALL_64_after_hwframe_[k]
  [ 7] __futex_abstimed_wait_cancelable64
  [ 8] [unknown]
  [ 9] jdk.internal.misc.Unsafe.park
  [10] java.util.concurrent.locks.LockSupport.parkNanos
  [11] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos
  [12] java.util.concurrent.ArrayBlockingQueue.poll
  [13] cats.effect.IOPlatform.$anonfun$1
  [14] cats.effect.IOPlatform$$Lambda$198.0x0000000800dafc68.apply
  [15] scala.concurrent.BlockContext$DefaultBlockContext$.blockOn
  [16] scala.concurrent.package$.blocking
  [17] cats.effect.IOPlatform.unsafeRunTimed
  [18] cats.effect.IOPlatform.unsafeRunSync
  [19] com.scalamandra.ZipBench.nioInputStream
  [20] com.scalamandra.jmh_generated.ZipBench_nioInputStream_jmhTest.nioInputStream_thrpt_jmhStub
  [21] com.scalamandra.jmh_generated.ZipBench_nioInputStream_jmhTest.nioInputStream_Throughput
  [22] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [23] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [24] java.lang.reflect.Method.invoke
  [25] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [26] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [27] java.util.concurrent.FutureTask.run
  [28] java.util.concurrent.Executors$RunnableAdapter.call
  [29] java.util.concurrent.FutureTask.run
  [30] java.util.concurrent.ThreadPoolExecutor.runWorker
  [31] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [32] java.lang.Thread.run

--- 292425919 ns (0.02%), 29 samples
  [ 0] G1ScanHRForRegionClosure::scan_heap_roots(HeapRegion*)
  [ 1] G1RemSet::scan_heap_roots(G1ParScanThreadState*, unsigned int, G1GCPhaseTimes::GCParPhases, G1GCPhaseTimes::GCParPhases, bool)
  [ 2] G1EvacuateRegionsTask::scan_roots(G1ParScanThreadState*, unsigned int)
  [ 3] G1EvacuateRegionsBaseTask::work(unsigned int)
  [ 4] GangWorker::loop()
  [ 5] GangWorker::run()
  [ 6] Thread::call_run()
  [ 7] thread_native_entry(Thread*)
  [ 8] start_thread

--- 291063447 ns (0.02%), 29 samples
  [ 0] syscall_enter_from_user_mode_[k]
  [ 1] do_syscall_64_[k]
  [ 2] entry_SYSCALL_64_after_hwframe_[k]
  [ 3] pthread_cond_signal@@GLIBC_2.3.2
  [ 4] jdk.internal.misc.Unsafe.unpark
  [ 5] java.util.concurrent.locks.LockSupport.unpark
  [ 6] java.util.concurrent.LinkedTransferQueue$Node.tryMatch
  [ 7] java.util.concurrent.LinkedTransferQueue.xfer
  [ 8] java.util.concurrent.LinkedTransferQueue.transfer
  [ 9] cats.effect.unsafe.WorkerThread.blockOn
  [10] scala.concurrent.package$.blocking
  [11] cats.effect.IOFiber.runLoop
  [12] cats.effect.IOFiber.execR
  [13] cats.effect.IOFiber.run
  [14] cats.effect.unsafe.WorkerThread.run

--- 290910401 ns (0.02%), 29 samples
  [ 0] kmem_cache_free_[k]
  [ 1] spl_kmem_cache_free?[spl]_[k]
  [ 2] zio_destroy?[zfs]_[k]
  [ 3] zio_wait?[zfs]_[k]
  [ 4] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 5] dmu_read_uio_dnode?[zfs]_[k]
  [ 6] dmu_read_uio_dbuf?[zfs]_[k]
  [ 7] mappedread?[zfs]_[k]
  [ 8] zfs_read?[zfs]_[k]
  [ 9] zpl_iter_read?[zfs]_[k]
  [10] new_sync_read_[k]
  [11] vfs_read_[k]
  [12] __x64_sys_pread64_[k]
  [13] do_syscall_64_[k]
  [14] entry_SYSCALL_64_after_hwframe_[k]
  [15] __libc_pread64
  [16] sun.nio.ch.FileDispatcherImpl.pread0
  [17] sun.nio.ch.FileDispatcherImpl.pread
  [18] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [19] sun.nio.ch.IOUtil.read
  [20] sun.nio.ch.IOUtil.read
  [21] sun.nio.ch.FileChannelImpl.readInternal
  [22] sun.nio.ch.FileChannelImpl.read
  [23] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [24] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [25] jdk.nio.zipfs.ZipFileSystem$2.fill
  [26] java.util.zip.InflaterInputStream.read
  [27] java.io.InputStream.readNBytes
  [28] java.io.InputStream.readAllBytes
  [29] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [30] com.scalamandra.ZipLib$$anon$1$$Lambda$61.0x0000000800d25648.apply
  [31] cats.effect.IOFiber.$anonfun$8
  [32] cats.effect.IOFiber$$Lambda$204.0x0000000800da9ac0.apply
  [33] cats.effect.unsafe.WorkerThread.blockOn
  [34] scala.concurrent.package$.blocking
  [35] cats.effect.IOFiber.runLoop
  [36] cats.effect.IOFiber.execR
  [37] cats.effect.IOFiber.run
  [38] cats.effect.unsafe.WorkerThread.run

--- 290859005 ns (0.02%), 29 samples
  [ 0] kmem_cache_alloc_[k]
  [ 1] spl_kmem_cache_alloc?[spl]_[k]
  [ 2] zio_create?[zfs]_[k]
  [ 3] zio_null?[zfs]_[k]
  [ 4] zio_root?[zfs]_[k]
  [ 5] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 6] dmu_read_uio_dnode?[zfs]_[k]
  [ 7] dmu_read_uio_dbuf?[zfs]_[k]
  [ 8] mappedread?[zfs]_[k]
  [ 9] zfs_read?[zfs]_[k]
  [10] zpl_iter_read?[zfs]_[k]
  [11] new_sync_read_[k]
  [12] vfs_read_[k]
  [13] __x64_sys_pread64_[k]
  [14] do_syscall_64_[k]
  [15] entry_SYSCALL_64_after_hwframe_[k]
  [16] __libc_pread64
  [17] sun.nio.ch.FileDispatcherImpl.pread0
  [18] sun.nio.ch.FileDispatcherImpl.pread
  [19] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [20] sun.nio.ch.IOUtil.read
  [21] sun.nio.ch.IOUtil.read
  [22] sun.nio.ch.FileChannelImpl.readInternal
  [23] sun.nio.ch.FileChannelImpl.read
  [24] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [25] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [26] jdk.nio.zipfs.ZipFileSystem$2.fill
  [27] java.util.zip.InflaterInputStream.read
  [28] java.io.InputStream.readNBytes
  [29] java.io.InputStream.readAllBytes
  [30] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [31] com.scalamandra.ZipLib$$anon$1$$Lambda$61.0x0000000800d25648.apply
  [32] cats.effect.IOFiber.$anonfun$8
  [33] cats.effect.IOFiber$$Lambda$204.0x0000000800da9ac0.apply
  [34] cats.effect.unsafe.WorkerThread.blockOn
  [35] scala.concurrent.package$.blocking
  [36] cats.effect.IOFiber.runLoop
  [37] cats.effect.IOFiber.execR
  [38] cats.effect.IOFiber.run
  [39] cats.effect.unsafe.WorkerThread.run

--- 290807730 ns (0.02%), 29 samples
  [ 0] mutex_lock_[k]
  [ 1] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 2] dmu_read_uio_dnode?[zfs]_[k]
  [ 3] dmu_read_uio_dbuf?[zfs]_[k]
  [ 4] mappedread?[zfs]_[k]
  [ 5] zfs_read?[zfs]_[k]
  [ 6] zpl_iter_read?[zfs]_[k]
  [ 7] new_sync_read_[k]
  [ 8] vfs_read_[k]
  [ 9] __x64_sys_pread64_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] __libc_pread64
  [13] sun.nio.ch.FileDispatcherImpl.pread0
  [14] sun.nio.ch.FileDispatcherImpl.pread
  [15] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [16] sun.nio.ch.IOUtil.read
  [17] sun.nio.ch.IOUtil.read
  [18] sun.nio.ch.FileChannelImpl.readInternal
  [19] sun.nio.ch.FileChannelImpl.read
  [20] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [21] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [22] jdk.nio.zipfs.ZipFileSystem$2.fill
  [23] java.util.zip.InflaterInputStream.read
  [24] java.io.InputStream.readNBytes
  [25] java.io.InputStream.readAllBytes
  [26] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [27] com.scalamandra.ZipLib$$anon$1$$Lambda$61.0x0000000800d25648.apply
  [28] cats.effect.IOFiber.$anonfun$8
  [29] cats.effect.IOFiber$$Lambda$204.0x0000000800da9ac0.apply
  [30] cats.effect.unsafe.WorkerThread.blockOn
  [31] scala.concurrent.package$.blocking
  [32] cats.effect.IOFiber.runLoop
  [33] cats.effect.IOFiber.execR
  [34] cats.effect.IOFiber.run
  [35] cats.effect.unsafe.WorkerThread.run

--- 290803162 ns (0.02%), 29 samples
  [ 0] _copy_to_iter_[k]
  [ 1] zfs_uiomove_iter?[zfs]_[k]
  [ 2] zfs_uiomove?[zfs]_[k]
  [ 3] dmu_read_uio_dnode?[zfs]_[k]
  [ 4] dmu_read_uio_dbuf?[zfs]_[k]
  [ 5] mappedread?[zfs]_[k]
  [ 6] zfs_read?[zfs]_[k]
  [ 7] zpl_iter_read?[zfs]_[k]
  [ 8] new_sync_read_[k]
  [ 9] vfs_read_[k]
  [10] __x64_sys_pread64_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] __libc_pread64
  [14] sun.nio.ch.FileDispatcherImpl.pread0
  [15] sun.nio.ch.FileDispatcherImpl.pread
  [16] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [17] sun.nio.ch.IOUtil.read
  [18] sun.nio.ch.IOUtil.read
  [19] sun.nio.ch.FileChannelImpl.readInternal
  [20] sun.nio.ch.FileChannelImpl.read
  [21] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [22] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [23] jdk.nio.zipfs.ZipFileSystem$2.fill
  [24] java.util.zip.InflaterInputStream.read
  [25] java.io.InputStream.readNBytes
  [26] java.io.InputStream.readAllBytes
  [27] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [28] com.scalamandra.ZipLib$$anon$1$$Lambda$61.0x0000000800d25648.apply
  [29] cats.effect.IOFiber.$anonfun$8
  [30] cats.effect.IOFiber$$Lambda$204.0x0000000800da9ac0.apply
  [31] cats.effect.unsafe.WorkerThread.blockOn
  [32] scala.concurrent.package$.blocking
  [33] cats.effect.IOFiber.runLoop
  [34] cats.effect.IOFiber.execR
  [35] cats.effect.IOFiber.run
  [36] cats.effect.unsafe.WorkerThread.run

--- 290776387 ns (0.02%), 29 samples
  [ 0] cats.effect.unsafe.WorkerThread.run

--- 288837787 ns (0.02%), 28 samples
  [ 0] __hrtimer_init_[k]
  [ 1] hrtimer_init_sleeper_[k]
  [ 2] futex_setup_timer_[k]
  [ 3] futex_wait_[k]
  [ 4] do_futex_[k]
  [ 5] __x64_sys_futex_[k]
  [ 6] do_syscall_64_[k]
  [ 7] entry_SYSCALL_64_after_hwframe_[k]
  [ 8] __futex_abstimed_wait_cancelable64
  [ 9] [unknown]
  [10] jdk.internal.misc.Unsafe.park
  [11] java.util.concurrent.locks.LockSupport.parkNanos
  [12] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos
  [13] java.util.concurrent.ArrayBlockingQueue.poll
  [14] cats.effect.IOPlatform.$anonfun$1
  [15] cats.effect.IOPlatform$$Lambda$198.0x0000000800dafc68.apply
  [16] scala.concurrent.BlockContext$DefaultBlockContext$.blockOn
  [17] scala.concurrent.package$.blocking
  [18] cats.effect.IOPlatform.unsafeRunTimed
  [19] cats.effect.IOPlatform.unsafeRunSync
  [20] com.scalamandra.ZipBench.nioInputStream
  [21] com.scalamandra.jmh_generated.ZipBench_nioInputStream_jmhTest.nioInputStream_thrpt_jmhStub
  [22] com.scalamandra.jmh_generated.ZipBench_nioInputStream_jmhTest.nioInputStream_Throughput
  [23] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [24] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [25] java.lang.reflect.Method.invoke
  [26] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [27] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [28] java.util.concurrent.FutureTask.run
  [29] java.util.concurrent.Executors$RunnableAdapter.call
  [30] java.util.concurrent.FutureTask.run
  [31] java.util.concurrent.ThreadPoolExecutor.runWorker
  [32] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [33] java.lang.Thread.run

--- 281237939 ns (0.02%), 28 samples
  [ 0] strncpy_from_user_[k]
  [ 1] __do_sys_prctl_[k]
  [ 2] __x64_sys_prctl_[k]
  [ 3] do_syscall_64_[k]
  [ 4] entry_SYSCALL_64_after_hwframe_[k]
  [ 5] __GI___prctl
  [ 6] [unknown]
  [ 7] java.lang.Thread.setNativeName
  [ 8] java.lang.Thread.setName
  [ 9] cats.effect.unsafe.WorkerThread.init
  [10] cats.effect.unsafe.WorkerThread.run

--- 280930408 ns (0.02%), 28 samples
  [ 0] dbuf_find?[zfs]_[k]
  [ 1] dbuf_hold_impl?[zfs]_[k]
  [ 2] dbuf_hold_level?[zfs]_[k]
  [ 3] dbuf_hold?[zfs]_[k]
  [ 4] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 5] dmu_read_uio_dnode?[zfs]_[k]
  [ 6] dmu_read_uio_dbuf?[zfs]_[k]
  [ 7] mappedread?[zfs]_[k]
  [ 8] zfs_read?[zfs]_[k]
  [ 9] zpl_iter_read?[zfs]_[k]
  [10] new_sync_read_[k]
  [11] vfs_read_[k]
  [12] __x64_sys_pread64_[k]
  [13] do_syscall_64_[k]
  [14] entry_SYSCALL_64_after_hwframe_[k]
  [15] __libc_pread64
  [16] sun.nio.ch.FileDispatcherImpl.pread0
  [17] sun.nio.ch.FileDispatcherImpl.pread
  [18] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [19] sun.nio.ch.IOUtil.read
  [20] sun.nio.ch.IOUtil.read
  [21] sun.nio.ch.FileChannelImpl.readInternal
  [22] sun.nio.ch.FileChannelImpl.read
  [23] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [24] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [25] jdk.nio.zipfs.ZipFileSystem$Entry.readLocEXTT
  [26] jdk.nio.zipfs.ZipFileSystem$Entry.readExtra
  [27] jdk.nio.zipfs.ZipFileSystem$Entry.readCEN
  [28] jdk.nio.zipfs.ZipFileSystem$Entry.<init>
  [29] jdk.nio.zipfs.ZipFileSystem.getEntry
  [30] jdk.nio.zipfs.ZipFileSystem.newInputStream
  [31] jdk.nio.zipfs.ZipPath.newInputStream
  [32] jdk.nio.zipfs.ZipFileSystemProvider.newInputStream
  [33] java.nio.file.Files.newInputStream
  [34] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [35] com.scalamandra.ZipLib$$anon$1$$Lambda$61.0x0000000800d25648.apply
  [36] cats.effect.IOFiber.$anonfun$8
  [37] cats.effect.IOFiber$$Lambda$204.0x0000000800da9ac0.apply
  [38] cats.effect.unsafe.WorkerThread.blockOn
  [39] scala.concurrent.package$.blocking
  [40] cats.effect.IOFiber.runLoop
  [41] cats.effect.IOFiber.execR
  [42] cats.effect.IOFiber.run
  [43] cats.effect.unsafe.WorkerThread.run

--- 280895851 ns (0.02%), 28 samples
  [ 0] vfs_read_[k]
  [ 1] __x64_sys_pread64_[k]
  [ 2] do_syscall_64_[k]
  [ 3] entry_SYSCALL_64_after_hwframe_[k]
  [ 4] __libc_pread64
  [ 5] sun.nio.ch.FileDispatcherImpl.pread0
  [ 6] sun.nio.ch.FileDispatcherImpl.pread
  [ 7] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [ 8] sun.nio.ch.IOUtil.read
  [ 9] sun.nio.ch.IOUtil.read
  [10] sun.nio.ch.FileChannelImpl.readInternal
  [11] sun.nio.ch.FileChannelImpl.read
  [12] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [13] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [14] jdk.nio.zipfs.ZipFileSystem$Entry.readLocEXTT
  [15] jdk.nio.zipfs.ZipFileSystem$Entry.readExtra
  [16] jdk.nio.zipfs.ZipFileSystem$Entry.readCEN
  [17] jdk.nio.zipfs.ZipFileSystem$Entry.<init>
  [18] jdk.nio.zipfs.ZipFileSystem.getEntry
  [19] jdk.nio.zipfs.ZipFileSystem.newInputStream
  [20] jdk.nio.zipfs.ZipPath.newInputStream
  [21] jdk.nio.zipfs.ZipFileSystemProvider.newInputStream
  [22] java.nio.file.Files.newInputStream
  [23] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [24] com.scalamandra.ZipLib$$anon$1$$Lambda$61.0x0000000800d25648.apply
  [25] cats.effect.IOFiber.$anonfun$8
  [26] cats.effect.IOFiber$$Lambda$204.0x0000000800da9ac0.apply
  [27] cats.effect.unsafe.WorkerThread.blockOn
  [28] scala.concurrent.package$.blocking
  [29] cats.effect.IOFiber.runLoop
  [30] cats.effect.IOFiber.execR
  [31] cats.effect.IOFiber.run
  [32] cats.effect.unsafe.WorkerThread.run

--- 280830463 ns (0.02%), 28 samples
  [ 0] __pthread_self
  [ 1] sun.nio.ch.NativeThread.current
  [ 2] sun.nio.ch.NativeThreadSet.add
  [ 3] sun.nio.ch.FileChannelImpl.readInternal
  [ 4] sun.nio.ch.FileChannelImpl.read
  [ 5] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [ 6] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [ 7] jdk.nio.zipfs.ZipFileSystem$Entry.readLocEXTT
  [ 8] jdk.nio.zipfs.ZipFileSystem$Entry.readExtra
  [ 9] jdk.nio.zipfs.ZipFileSystem$Entry.readCEN
  [10] jdk.nio.zipfs.ZipFileSystem$Entry.<init>
  [11] jdk.nio.zipfs.ZipFileSystem.getEntry
  [12] jdk.nio.zipfs.ZipFileSystem.newInputStream
  [13] jdk.nio.zipfs.ZipPath.newInputStream
  [14] jdk.nio.zipfs.ZipFileSystemProvider.newInputStream
  [15] java.nio.file.Files.newInputStream
  [16] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [17] com.scalamandra.ZipLib$$anon$1$$Lambda$61.0x0000000800d25648.apply
  [18] cats.effect.IOFiber.$anonfun$8
  [19] cats.effect.IOFiber$$Lambda$204.0x0000000800da9ac0.apply
  [20] cats.effect.unsafe.WorkerThread.blockOn
  [21] scala.concurrent.package$.blocking
  [22] cats.effect.IOFiber.runLoop
  [23] cats.effect.IOFiber.execR
  [24] cats.effect.IOFiber.run
  [25] cats.effect.unsafe.WorkerThread.run

--- 280810025 ns (0.02%), 28 samples
  [ 0] jdk.nio.zipfs.ZipFileSystem$Entry.readExtra
  [ 1] [unknown_Java]

--- 280498630 ns (0.02%), 28 samples
  [ 0] __memset_avx2_unaligned_erms
  [ 1] MemAllocator::allocate() const
  [ 2] TypeArrayKlass::allocate_common(int, bool, JavaThread*)
  [ 3] JVMCIRuntime::new_array_common(JavaThread*, Klass*, int, bool)
  [ 4] java.io.InputStream.readNBytes
  [ 5] java.io.InputStream.readAllBytes
  [ 6] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [ 7] com.scalamandra.ZipLib$$anon$1$$Lambda$61.0x0000000800d25648.apply
  [ 8] cats.effect.IOFiber.$anonfun$8
  [ 9] cats.effect.IOFiber$$Lambda$204.0x0000000800da9ac0.apply
  [10] cats.effect.unsafe.WorkerThread.blockOn
  [11] scala.concurrent.package$.blocking
  [12] cats.effect.IOFiber.runLoop
  [13] cats.effect.IOFiber.execR
  [14] cats.effect.IOFiber.run
  [15] cats.effect.unsafe.WorkerThread.run

--- 278472400 ns (0.02%), 27 samples
  [ 0] plist_add_[k]
  [ 1] futex_wait_queue_[k]
  [ 2] futex_wait_[k]
  [ 3] do_futex_[k]
  [ 4] __x64_sys_futex_[k]
  [ 5] do_syscall_64_[k]
  [ 6] entry_SYSCALL_64_after_hwframe_[k]
  [ 7] __futex_abstimed_wait_cancelable64
  [ 8] [unknown]
  [ 9] jdk.internal.misc.Unsafe.park
  [10] java.util.concurrent.locks.LockSupport.parkNanos
  [11] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos
  [12] java.util.concurrent.ArrayBlockingQueue.poll
  [13] cats.effect.IOPlatform.$anonfun$1
  [14] cats.effect.IOPlatform$$Lambda$198.0x0000000800dafc68.apply
  [15] scala.concurrent.BlockContext$DefaultBlockContext$.blockOn
  [16] scala.concurrent.package$.blocking
  [17] cats.effect.IOPlatform.unsafeRunTimed
  [18] cats.effect.IOPlatform.unsafeRunSync
  [19] com.scalamandra.ZipBench.nioInputStream
  [20] com.scalamandra.jmh_generated.ZipBench_nioInputStream_jmhTest.nioInputStream_thrpt_jmhStub
  [21] com.scalamandra.jmh_generated.ZipBench_nioInputStream_jmhTest.nioInputStream_Throughput
  [22] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [23] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [24] java.lang.reflect.Method.invoke
  [25] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [26] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [27] java.util.concurrent.FutureTask.run
  [28] java.util.concurrent.Executors$RunnableAdapter.call
  [29] java.util.concurrent.FutureTask.run
  [30] java.util.concurrent.ThreadPoolExecutor.runWorker
  [31] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [32] java.lang.Thread.run

--- 278165900 ns (0.02%), 27 samples
  [ 0] cats.effect.IO.unsafeRunFiber
  [ 1] cats.effect.IO.unsafeRunAsync
  [ 2] cats.effect.IOPlatform.unsafeRunTimed
  [ 3] cats.effect.IOPlatform.unsafeRunSync
  [ 4] com.scalamandra.ZipBench.nioInputStream
  [ 5] com.scalamandra.jmh_generated.ZipBench_nioInputStream_jmhTest.nioInputStream_thrpt_jmhStub
  [ 6] com.scalamandra.jmh_generated.ZipBench_nioInputStream_jmhTest.nioInputStream_Throughput
  [ 7] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [ 8] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [ 9] java.lang.reflect.Method.invoke
  [10] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [11] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [12] java.util.concurrent.FutureTask.run
  [13] java.util.concurrent.Executors$RunnableAdapter.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.ThreadPoolExecutor.runWorker
  [16] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [17] java.lang.Thread.run

--- 272375604 ns (0.02%), 27 samples
  [ 0] nmethod::fix_oop_relocations(unsigned char*, unsigned char*, bool)
  [ 1] nmethod::oops_do_process_weak(nmethod::OopsDoProcessor*)
  [ 2] G1CodeBlobClosure::do_code_blob(CodeBlob*)
  [ 3] JavaThread::oops_do_frames(OopClosure*, CodeBlobClosure*) [clone .part.0]
  [ 4] Threads::possibly_parallel_oops_do(bool, OopClosure*, CodeBlobClosure*)
  [ 5] G1RootProcessor::process_java_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int)
  [ 6] G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int)
  [ 7] G1EvacuateRegionsTask::scan_roots(G1ParScanThreadState*, unsigned int)
  [ 8] G1EvacuateRegionsBaseTask::work(unsigned int)
  [ 9] GangWorker::loop()
  [10] GangWorker::run()
  [11] Thread::call_run()
  [12] thread_native_entry(Thread*)
  [13] start_thread

--- 270903251 ns (0.02%), 27 samples
  [ 0] kmem_cache_free_[k]
  [ 1] spl_kmem_cache_free?[spl]_[k]
  [ 2] zio_destroy?[zfs]_[k]
  [ 3] zio_wait?[zfs]_[k]
  [ 4] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 5] dmu_read_uio_dnode?[zfs]_[k]
  [ 6] dmu_read_uio_dbuf?[zfs]_[k]
  [ 7] mappedread?[zfs]_[k]
  [ 8] zfs_read?[zfs]_[k]
  [ 9] zpl_iter_read?[zfs]_[k]
  [10] new_sync_read_[k]
  [11] vfs_read_[k]
  [12] __x64_sys_pread64_[k]
  [13] do_syscall_64_[k]
  [14] entry_SYSCALL_64_after_hwframe_[k]
  [15] __libc_pread64
  [16] sun.nio.ch.FileDispatcherImpl.pread0
  [17] sun.nio.ch.FileDispatcherImpl.pread
  [18] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [19] sun.nio.ch.IOUtil.read
  [20] sun.nio.ch.IOUtil.read
  [21] sun.nio.ch.FileChannelImpl.readInternal
  [22] sun.nio.ch.FileChannelImpl.read
  [23] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [24] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [25] jdk.nio.zipfs.ZipFileSystem$Entry.readLocEXTT
  [26] jdk.nio.zipfs.ZipFileSystem$Entry.readExtra
  [27] jdk.nio.zipfs.ZipFileSystem$Entry.readCEN
  [28] jdk.nio.zipfs.ZipFileSystem$Entry.<init>
  [29] jdk.nio.zipfs.ZipFileSystem.getEntry
  [30] jdk.nio.zipfs.ZipFileSystem.newInputStream
  [31] jdk.nio.zipfs.ZipPath.newInputStream
  [32] jdk.nio.zipfs.ZipFileSystemProvider.newInputStream
  [33] java.nio.file.Files.newInputStream
  [34] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [35] com.scalamandra.ZipLib$$anon$1$$Lambda$61.0x0000000800d25648.apply
  [36] cats.effect.IOFiber.$anonfun$8
  [37] cats.effect.IOFiber$$Lambda$204.0x0000000800da9ac0.apply
  [38] cats.effect.unsafe.WorkerThread.blockOn
  [39] scala.concurrent.package$.blocking
  [40] cats.effect.IOFiber.runLoop
  [41] cats.effect.IOFiber.execR
  [42] cats.effect.IOFiber.run
  [43] cats.effect.unsafe.WorkerThread.run

--- 270827772 ns (0.02%), 27 samples
  [ 0] mutex_lock_[k]
  [ 1] dbuf_rele?[zfs]_[k]
  [ 2] dmu_buf_rele_array?[zfs]_[k]
  [ 3] dmu_read_uio_dnode?[zfs]_[k]
  [ 4] dmu_read_uio_dbuf?[zfs]_[k]
  [ 5] mappedread?[zfs]_[k]
  [ 6] zfs_read?[zfs]_[k]
  [ 7] zpl_iter_read?[zfs]_[k]
  [ 8] new_sync_read_[k]
  [ 9] vfs_read_[k]
  [10] __x64_sys_pread64_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] __libc_pread64
  [14] sun.nio.ch.FileDispatcherImpl.pread0
  [15] sun.nio.ch.FileDispatcherImpl.pread
  [16] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [17] sun.nio.ch.IOUtil.read
  [18] sun.nio.ch.IOUtil.read
  [19] sun.nio.ch.FileChannelImpl.readInternal
  [20] sun.nio.ch.FileChannelImpl.read
  [21] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [22] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [23] jdk.nio.zipfs.ZipFileSystem$2.fill
  [24] java.util.zip.InflaterInputStream.read
  [25] java.io.InputStream.readNBytes
  [26] java.io.InputStream.readAllBytes
  [27] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [28] com.scalamandra.ZipLib$$anon$1$$Lambda$61.0x0000000800d25648.apply
  [29] cats.effect.IOFiber.$anonfun$8
  [30] cats.effect.IOFiber$$Lambda$204.0x0000000800da9ac0.apply
  [31] cats.effect.unsafe.WorkerThread.blockOn
  [32] scala.concurrent.package$.blocking
  [33] cats.effect.IOFiber.runLoop
  [34] cats.effect.IOFiber.execR
  [35] cats.effect.IOFiber.run
  [36] cats.effect.unsafe.WorkerThread.run

--- 270792723 ns (0.02%), 27 samples
  [ 0] find_vmap_area_[k]
  [ 1] check_heap_object_[k]
  [ 2] __check_object_size.part.0_[k]
  [ 3] __check_object_size_[k]
  [ 4] zfs_uiomove_iter?[zfs]_[k]
  [ 5] zfs_uiomove?[zfs]_[k]
  [ 6] dmu_read_uio_dnode?[zfs]_[k]
  [ 7] dmu_read_uio_dbuf?[zfs]_[k]
  [ 8] mappedread?[zfs]_[k]
  [ 9] zfs_read?[zfs]_[k]
  [10] zpl_iter_read?[zfs]_[k]
  [11] new_sync_read_[k]
  [12] vfs_read_[k]
  [13] __x64_sys_pread64_[k]
  [14] do_syscall_64_[k]
  [15] entry_SYSCALL_64_after_hwframe_[k]
  [16] __libc_pread64
  [17] sun.nio.ch.FileDispatcherImpl.pread0
  [18] sun.nio.ch.FileDispatcherImpl.pread
  [19] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [20] sun.nio.ch.IOUtil.read
  [21] sun.nio.ch.IOUtil.read
  [22] sun.nio.ch.FileChannelImpl.readInternal
  [23] sun.nio.ch.FileChannelImpl.read
  [24] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [25] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [26] jdk.nio.zipfs.ZipFileSystem$Entry.readLocEXTT
  [27] jdk.nio.zipfs.ZipFileSystem$Entry.readExtra
  [28] jdk.nio.zipfs.ZipFileSystem$Entry.readCEN
  [29] jdk.nio.zipfs.ZipFileSystem$Entry.<init>
  [30] jdk.nio.zipfs.ZipFileSystem.getEntry
  [31] jdk.nio.zipfs.ZipFileSystem.newInputStream
  [32] jdk.nio.zipfs.ZipPath.newInputStream
  [33] jdk.nio.zipfs.ZipFileSystemProvider.newInputStream
  [34] java.nio.file.Files.newInputStream
  [35] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [36] com.scalamandra.ZipLib$$anon$1$$Lambda$61.0x0000000800d25648.apply
  [37] cats.effect.IOFiber.$anonfun$8
  [38] cats.effect.IOFiber$$Lambda$204.0x0000000800da9ac0.apply
  [39] cats.effect.unsafe.WorkerThread.blockOn
  [40] scala.concurrent.package$.blocking
  [41] cats.effect.IOFiber.runLoop
  [42] cats.effect.IOFiber.execR
  [43] cats.effect.IOFiber.run
  [44] cats.effect.unsafe.WorkerThread.run

--- 270788712 ns (0.02%), 27 samples
  [ 0] apparmor_file_permission_[k]
  [ 1] security_file_permission_[k]
  [ 2] rw_verify_area_[k]
  [ 3] vfs_read_[k]
  [ 4] __x64_sys_pread64_[k]
  [ 5] do_syscall_64_[k]
  [ 6] entry_SYSCALL_64_after_hwframe_[k]
  [ 7] __libc_pread64
  [ 8] sun.nio.ch.FileDispatcherImpl.pread0
  [ 9] sun.nio.ch.FileDispatcherImpl.pread
  [10] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [11] sun.nio.ch.IOUtil.read
  [12] sun.nio.ch.IOUtil.read
  [13] sun.nio.ch.FileChannelImpl.readInternal
  [14] sun.nio.ch.FileChannelImpl.read
  [15] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [16] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [17] jdk.nio.zipfs.ZipFileSystem$Entry.readLocEXTT
  [18] jdk.nio.zipfs.ZipFileSystem$Entry.readExtra
  [19] jdk.nio.zipfs.ZipFileSystem$Entry.readCEN
  [20] jdk.nio.zipfs.ZipFileSystem$Entry.<init>
  [21] jdk.nio.zipfs.ZipFileSystem.getEntry
  [22] jdk.nio.zipfs.ZipFileSystem.newInputStream
  [23] jdk.nio.zipfs.ZipPath.newInputStream
  [24] jdk.nio.zipfs.ZipFileSystemProvider.newInputStream
  [25] java.nio.file.Files.newInputStream
  [26] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [27] com.scalamandra.ZipLib$$anon$1$$Lambda$61.0x0000000800d25648.apply
  [28] cats.effect.IOFiber.$anonfun$8
  [29] cats.effect.IOFiber$$Lambda$204.0x0000000800da9ac0.apply
  [30] cats.effect.unsafe.WorkerThread.blockOn
  [31] scala.concurrent.package$.blocking
  [32] cats.effect.IOFiber.runLoop
  [33] cats.effect.IOFiber.execR
  [34] cats.effect.IOFiber.run
  [35] cats.effect.unsafe.WorkerThread.run

--- 270762850 ns (0.02%), 27 samples
  [ 0] _raw_spin_lock_[k]
  [ 1] zio_wait?[zfs]_[k]
  [ 2] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 3] dmu_read_uio_dnode?[zfs]_[k]
  [ 4] dmu_read_uio_dbuf?[zfs]_[k]
  [ 5] mappedread?[zfs]_[k]
  [ 6] zfs_read?[zfs]_[k]
  [ 7] zpl_iter_read?[zfs]_[k]
  [ 8] new_sync_read_[k]
  [ 9] vfs_read_[k]
  [10] __x64_sys_pread64_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] __libc_pread64
  [14] sun.nio.ch.FileDispatcherImpl.pread0
  [15] sun.nio.ch.FileDispatcherImpl.pread
  [16] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [17] sun.nio.ch.IOUtil.read
  [18] sun.nio.ch.IOUtil.read
  [19] sun.nio.ch.FileChannelImpl.readInternal
  [20] sun.nio.ch.FileChannelImpl.read
  [21] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [22] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [23] jdk.nio.zipfs.ZipFileSystem$2.fill
  [24] java.util.zip.InflaterInputStream.read
  [25] java.io.InputStream.readNBytes
  [26] java.io.InputStream.readAllBytes
  [27] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [28] com.scalamandra.ZipLib$$anon$1$$Lambda$61.0x0000000800d25648.apply
  [29] cats.effect.IOFiber.$anonfun$8
  [30] cats.effect.IOFiber$$Lambda$204.0x0000000800da9ac0.apply
  [31] cats.effect.unsafe.WorkerThread.blockOn
  [32] scala.concurrent.package$.blocking
  [33] cats.effect.IOFiber.runLoop
  [34] cats.effect.IOFiber.execR
  [35] cats.effect.IOFiber.run
  [36] cats.effect.unsafe.WorkerThread.run

--- 270753300 ns (0.02%), 27 samples
  [ 0] java.lang.Integer.valueOf
  [ 1] scala.Predef$.int2Integer
  [ 2] cats.effect.unsafe.WorkerThread.blockOn
  [ 3] scala.concurrent.package$.blocking
  [ 4] cats.effect.IOFiber.runLoop
  [ 5] cats.effect.IOFiber.execR
  [ 6] cats.effect.IOFiber.run
  [ 7] cats.effect.unsafe.WorkerThread.run

--- 270656810 ns (0.02%), 27 samples
  [ 0] pthread_cond_signal@@GLIBC_2.3.2
  [ 1] jdk.internal.misc.Unsafe.unpark
  [ 2] java.util.concurrent.locks.LockSupport.unpark
  [ 3] java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext
  [ 4] java.util.concurrent.locks.AbstractQueuedSynchronizer.release
  [ 5] java.util.concurrent.locks.ReentrantLock.unlock
  [ 6] java.util.concurrent.ArrayBlockingQueue.offer
  [ 7] cats.effect.IOPlatform.unsafeRunTimed$$anonfun$1
  [ 8] cats.effect.IOPlatform$$Lambda$146.0x0000000800d9a830.applyVoid
  [ 9] scala.runtime.function.JProcedure1.apply
  [10] scala.runtime.function.JProcedure1.apply
  [11] cats.effect.IO.unsafeRunAsync$$anonfun$3
  [12] cats.effect.IO$$Lambda$164.0x0000000800da0408.applyVoid
  [13] scala.runtime.function.JProcedure1.apply
  [14] scala.runtime.function.JProcedure1.apply
  [15] cats.effect.IO.$anonfun$6$$anonfun$3
  [16] cats.effect.IO$$Lambda$233.0x0000000800db3288.applyVoid
  [17] scala.runtime.function.JProcedure1.apply
  [18] scala.runtime.function.JProcedure1.apply
  [19] cats.effect.kernel.Outcome.fold
  [20] cats.effect.kernel.Outcome.fold$
  [21] cats.effect.kernel.Outcome$Succeeded.fold
  [22] cats.effect.IO.$anonfun$6
  [23] cats.effect.IO$$Lambda$175.0x0000000800da3590.applyVoid
  [24] scala.runtime.function.JProcedure1.apply
  [25] scala.runtime.function.JProcedure1.apply
  [26] cats.effect.CallbackStack.apply
  [27] cats.effect.IOFiber.done
  [28] cats.effect.IOFiber.runTerminusSuccessK
  [29] cats.effect.IOFiber.succeeded
  [30] cats.effect.IOFiber.runLoop
  [31] cats.effect.IOFiber.execR
  [32] cats.effect.IOFiber.run
  [33] cats.effect.unsafe.WorkerThread.run

--- 270538794 ns (0.02%), 27 samples
  [ 0] java.io.InputStream.readNBytes
  [ 1] java.io.InputStream.readAllBytes
  [ 2] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [ 3] com.scalamandra.ZipLib$$anon$1$$Lambda$61.0x0000000800d25648.apply
  [ 4] cats.effect.IOFiber.$anonfun$8
  [ 5] cats.effect.IOFiber$$Lambda$204.0x0000000800da9ac0.apply
  [ 6] cats.effect.unsafe.WorkerThread.blockOn
  [ 7] scala.concurrent.package$.blocking
  [ 8] cats.effect.IOFiber.runLoop
  [ 9] cats.effect.IOFiber.execR
  [10] cats.effect.IOFiber.run
  [11] cats.effect.unsafe.WorkerThread.run

--- 260929760 ns (0.02%), 26 samples
  [ 0] cats.effect.unsafe.WorkerThread.run

--- 260730036 ns (0.02%), 26 samples
  [ 0] dbuf_rele_and_unlock?[zfs]_[k]
  [ 1] dbuf_rele?[zfs]_[k]
  [ 2] dmu_buf_rele_array?[zfs]_[k]
  [ 3] dmu_read_uio_dnode?[zfs]_[k]
  [ 4] dmu_read_uio_dbuf?[zfs]_[k]
  [ 5] mappedread?[zfs]_[k]
  [ 6] zfs_read?[zfs]_[k]
  [ 7] zpl_iter_read?[zfs]_[k]
  [ 8] new_sync_read_[k]
  [ 9] vfs_read_[k]
  [10] __x64_sys_pread64_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] __libc_pread64
  [14] sun.nio.ch.FileDispatcherImpl.pread0
  [15] sun.nio.ch.FileDispatcherImpl.pread
  [16] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [17] sun.nio.ch.IOUtil.read
  [18] sun.nio.ch.IOUtil.read
  [19] sun.nio.ch.FileChannelImpl.readInternal
  [20] sun.nio.ch.FileChannelImpl.read
  [21] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [22] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [23] jdk.nio.zipfs.ZipFileSystem$2.fill
  [24] java.util.zip.InflaterInputStream.read
  [25] java.io.InputStream.readNBytes
  [26] java.io.InputStream.readAllBytes
  [27] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [28] com.scalamandra.ZipLib$$anon$1$$Lambda$61.0x0000000800d25648.apply
  [29] cats.effect.IOFiber.$anonfun$8
  [30] cats.effect.IOFiber$$Lambda$204.0x0000000800da9ac0.apply
  [31] cats.effect.unsafe.WorkerThread.blockOn
  [32] scala.concurrent.package$.blocking
  [33] cats.effect.IOFiber.runLoop
  [34] cats.effect.IOFiber.execR
  [35] cats.effect.IOFiber.run
  [36] cats.effect.unsafe.WorkerThread.run

--- 257566130 ns (0.02%), 25 samples
  [ 0] __futex_abstimed_wait_cancelable64
  [ 1] [unknown]
  [ 2] jdk.internal.misc.Unsafe.park
  [ 3] java.util.concurrent.locks.LockSupport.parkNanos
  [ 4] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos
  [ 5] java.util.concurrent.ArrayBlockingQueue.poll
  [ 6] cats.effect.IOPlatform.$anonfun$1
  [ 7] cats.effect.IOPlatform$$Lambda$198.0x0000000800dafc68.apply
  [ 8] scala.concurrent.BlockContext$DefaultBlockContext$.blockOn
  [ 9] scala.concurrent.package$.blocking
  [10] cats.effect.IOPlatform.unsafeRunTimed
  [11] cats.effect.IOPlatform.unsafeRunSync
  [12] com.scalamandra.ZipBench.nioInputStream
  [13] com.scalamandra.jmh_generated.ZipBench_nioInputStream_jmhTest.nioInputStream_thrpt_jmhStub
  [14] com.scalamandra.jmh_generated.ZipBench_nioInputStream_jmhTest.nioInputStream_Throughput
  [15] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [16] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [17] java.lang.reflect.Method.invoke
  [18] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [19] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [20] java.util.concurrent.FutureTask.run
  [21] java.util.concurrent.Executors$RunnableAdapter.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.ThreadPoolExecutor.runWorker
  [24] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [25] java.lang.Thread.run

--- 257488773 ns (0.02%), 25 samples
  [ 0] futex_wait_setup_[k]
  [ 1] futex_wait_[k]
  [ 2] do_futex_[k]
  [ 3] __x64_sys_futex_[k]
  [ 4] do_syscall_64_[k]
  [ 5] entry_SYSCALL_64_after_hwframe_[k]
  [ 6] __futex_abstimed_wait_cancelable64
  [ 7] [unknown]
  [ 8] jdk.internal.misc.Unsafe.park
  [ 9] java.util.concurrent.locks.LockSupport.parkNanos
  [10] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos
  [11] java.util.concurrent.ArrayBlockingQueue.poll
  [12] cats.effect.IOPlatform.$anonfun$1
  [13] cats.effect.IOPlatform$$Lambda$198.0x0000000800dafc68.apply
  [14] scala.concurrent.BlockContext$DefaultBlockContext$.blockOn
  [15] scala.concurrent.package$.blocking
  [16] cats.effect.IOPlatform.unsafeRunTimed
  [17] cats.effect.IOPlatform.unsafeRunSync
  [18] com.scalamandra.ZipBench.nioInputStream
  [19] com.scalamandra.jmh_generated.ZipBench_nioInputStream_jmhTest.nioInputStream_thrpt_jmhStub
  [20] com.scalamandra.jmh_generated.ZipBench_nioInputStream_jmhTest.nioInputStream_Throughput
  [21] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [22] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [23] java.lang.reflect.Method.invoke
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.Executors$RunnableAdapter.call
  [28] java.util.concurrent.FutureTask.run
  [29] java.util.concurrent.ThreadPoolExecutor.runWorker
  [30] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [31] java.lang.Thread.run

--- 252308445 ns (0.02%), 25 samples
  [ 0] nmethod::oops_do(OopClosure*, bool)
  [ 1] G1NmethodProcessor::do_regular_processing(nmethod*)
  [ 2] nmethod::oops_do_process_weak(nmethod::OopsDoProcessor*)
  [ 3] G1CodeBlobClosure::do_code_blob(CodeBlob*)
  [ 4] JavaThread::oops_do_frames(OopClosure*, CodeBlobClosure*) [clone .part.0]
  [ 5] Threads::possibly_parallel_oops_do(bool, OopClosure*, CodeBlobClosure*)
  [ 6] G1RootProcessor::process_java_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int)
  [ 7] G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int)
  [ 8] G1EvacuateRegionsTask::scan_roots(G1ParScanThreadState*, unsigned int)
  [ 9] G1EvacuateRegionsBaseTask::work(unsigned int)
  [10] GangWorker::loop()
  [11] GangWorker::run()
  [12] Thread::call_run()
  [13] thread_native_entry(Thread*)
  [14] start_thread

          ns  percent  samples  top
  ----------  -------  -------  ---
871170692128   61.99%    86948  /usr/lib/x86_64-linux-gnu/libz.so.1.2.11
 47138075250    3.35%     4704  inflate
 39155982313    2.79%     3906  __memset_avx2_unaligned_erms
 34520933350    2.46%     3423  _raw_spin_unlock_irqrestore_[k]
 33970729544    2.42%     3390  java.io.InputStream.readNBytes
 21737792962    1.55%     2169  java.util.Arrays.copyOfRange
 15539949660    1.11%     1551  java.lang.System.arraycopy
 11674352680    0.83%     1165  __memmove_avx_unaligned_erms
 11354300873    0.81%     1133  java.util.zip.InflaterInputStream.<init>
  9807855687    0.70%      979  java.lang.StringCoding.hasNegatives
  9000186419    0.64%      896  copy_user_generic_string_[k]
  7262213302    0.52%      724  mutex_lock_[k]
  6218558919    0.44%      620  mutex_unlock_[k]
  5722158202    0.41%      567  syscall_enter_from_user_mode_[k]
  5510346388    0.39%      549  _raw_spin_lock_[k]
  4443629522    0.32%      443  find_vmap_area_[k]
  4209256155    0.30%      420  jbyte_disjoint_arraycopy
  3982425079    0.28%      397  zio_create?[zfs]_[k]
  3963336974    0.28%      395  memset_[k]
  3902178981    0.28%      389  percpu_counter_add_batch_[k]
  3260645319    0.23%      325  __kmalloc_node_[k]
  3049412013    0.22%      304  mutex_spin_on_owner_[k]
  3040817463    0.22%      300  __schedule_[k]
  2810051724    0.20%      280  java.util.concurrent.ConcurrentLinkedQueue.poll
  2638919927    0.19%      262  pthread_cond_signal@@GLIBC_2.3.2
  2489640502    0.18%      248  __vfprintf_internal
  2303842877    0.16%      229  futex_wake_[k]
  2226582361    0.16%      222  zrl_add_impl?[zfs]_[k]
  2176664714    0.15%      217  dmu_buf_hold_array_by_dnode?[zfs]_[k]
  2156793248    0.15%      215  kfree_[k]
  2116723841    0.15%      211  kmem_cache_alloc_[k]
  2001345107    0.14%      198  jdk.internal.misc.Unsafe.compareAndSetReference
  1956022478    0.14%      195  osq_lock_[k]
  1905991950    0.14%      190  zio_done?[zfs]_[k]
  1785550965    0.13%      178  kmem_cache_free_[k]
  1775299125    0.13%      177  zio_wait?[zfs]_[k]
  1735597857    0.12%      173  cats.effect.unsafe.WorkerThread.run
  1733856688    0.12%      173  jni_GetPrimitiveArrayCritical
  1663754035    0.12%      166  __libc_pread64
  1643247801    0.12%      161  __x64_sys_futex_[k]
  1634986652    0.12%      163  __fget_light_[k]
  1603389073    0.11%      160  java.util.zip.Inflater.inflate
  1584307911    0.11%      155  [vdso]
  1565197672    0.11%      156  __GI__IO_setb
  1494708603    0.11%      149  cityhash4?[zcommon]_[k]
  1494582024    0.11%      149  __mutex_lock.constprop.0_[k]
  1474563246    0.10%      147  zfs_read?[zfs]_[k]
  1469244464    0.10%      144  futex_q_lock_[k]
  1454306115    0.10%      145  dbuf_hold_impl?[zfs]_[k]
  1362205705    0.10%      135  java.lang.ThreadLocal$ThreadLocalMap.getEntry
  1354068157    0.10%      135  dbuf_rele_and_unlock?[zfs]_[k]
  1333835410    0.09%      133  vfs_read_[k]
  1330850573    0.09%      132  ObjArrayAllocator::initialize(HeapWordImpl**) const
  1323660293    0.09%      132  java.util.HashMap.hash
  1302886518    0.09%      130  jni_ReleasePrimitiveArrayCritical
  1301424316    0.09%      129  __tls_get_addr
  1294107735    0.09%      129  down_read_[k]
  1263139215    0.09%      124  Unsafe_Park
  1253849368    0.09%      125  dbuf_read?[zfs]_[k]
  1253830421    0.09%      125  fsnotify_perm.part.0_[k]
  1252993313    0.09%      125  sun.nio.ch.FileDispatcherImpl.pread0
  1243809033    0.09%      124  __list_del_entry?[zfs]_[k]
  1227211159    0.09%      122  ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**)
  1214528212    0.09%      121  JVM_SetNativeThreadName
  1194280433    0.08%      117  futex_wait_[k]
  1190466384    0.08%      118  G1CollectedHeap::mem_allocate(unsigned long, bool*)
  1173791688    0.08%      117  dbuf_find?[zfs]_[k]
  1163477588    0.08%      116  apparmor_file_permission_[k]
  1153499259    0.08%      115  zio_ready?[zfs]_[k]
  1122716960    0.08%      112  java.lang.Thread.blockedOn
  1112218410    0.08%      111  java.util.zip.Inflater.inflateBytesBytes
  1103468951    0.08%      110  zio_wait_for_children?[zfs]_[k]
  1093832055    0.08%      109  cats.effect.unsafe.ScalQueue.poll
  1093475209    0.08%      109  __GI___prctl
  1073362757    0.08%      107  spl_mutex_clear_owner?[zfs]_[k]
  1043950328    0.07%      104  strncpy_from_user_[k]
  1026464373    0.07%      102  _raw_spin_unlock_[k]
  1022924300    0.07%      102  zpl_iter_read?[zfs]_[k]
  1013781631    0.07%      101  char* UNICODE::as_utf8<signed char>(signed char const*, int&)
  1013258066    0.07%      101  __cond_resched_[k]
  1013233219    0.07%      101  __filemap_get_folio_[k]
  1013035360    0.07%      101  read_tsc_[k]
  1013016500    0.07%      101  __fsnotify_parent_[k]
  1009438335    0.07%      100  HeapRegionManager::par_iterate(HeapRegionClosure*, HeapRegionClaimer*, unsigned int) const
   991258530    0.07%       98  MemAllocator::allocate() const
   983065864    0.07%       98  spl_mutex_set_owner?[zfs]_[k]
   982838898    0.07%       98  java.util.concurrent.LinkedTransferQueue.xfer
   977363428    0.07%       97  futex_wake_mark_[k]
   972823714    0.07%       97  dmu_zfetch_prepare?[zfs]_[k]
   968782668    0.07%       96  __memcpy_sse2_unaligned_erms
   942880661    0.07%       94  arc_buf_access?[zfs]_[k]
   933468131    0.07%       93  _IO_default_xsputn
   922543398    0.07%       92  sun.nio.ch.Util$BufferCache.get
   915856201    0.07%       90  MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&) const
   915567288    0.07%       89  ___pthread_cond_timedwait64
   912778355    0.06%       91  zrl_remove?[zfs]_[k]
   885890954    0.06%       86  java.util.concurrent.ConcurrentLinkedQueue.offer
   858118748    0.06%       84  Parker::park(bool, long)
   852721368    0.06%       85  dbuf_cache_multilist_index_func?[zfs]_[k]
   842488576    0.06%       84  dmu_read_uio_dbuf?[zfs]_[k]
   833823018    0.06%       82  __GI___pthread_enable_asynccancel
   822891028    0.06%       82  java.lang.StringBuilder.toString
   807638401    0.06%       80  JVMCIRuntime::new_array_common(JavaThread*, Klass*, int, bool)
   802511449    0.06%       80  __cv_broadcast?[spl]_[k]
   792633707    0.06%       79  java.util.concurrent.ConcurrentSkipListMap.doRemoveFirstEntry
   772465343    0.05%       77  vdev_stat_update?[zfs]_[k]
   772381137    0.05%       77  _copy_to_iter_[k]
   762324882    0.05%       76  list_del?[zfs]_[k]
   762289651    0.05%       76  ktime_get_raw_ts64_[k]
   742086214    0.05%       74  fsnotify_[k]
   723524317    0.05%       72  Unsafe_Unpark
   722364108    0.05%       72  kmalloc_slab_[k]
   721991433    0.05%       72  new_sync_read_[k]
   721737311    0.05%       72  Java_java_util_zip_Inflater_inflateBytesBytes
   719600193    0.05%       71  JfrObjectAllocationSample::send_event(Klass const*, unsigned long, bool, Thread*)
   712591647    0.05%       71  __x86_return_thunk_[k]
   703730142    0.05%       69  pthread_mutex_trylock@@GLIBC_2.34
   702526471    0.05%       70  security_task_prctl_[k]
   692483354    0.05%       69  java.lang.Thread.setName
   692170934    0.05%       69  dmu_read_uio_dnode?[zfs]_[k]
   692090728    0.05%       69  zfs_rangelock_compare?[zfs]_[k]
   681924793    0.05%       68  lockref_get_not_zero_[k]
   681867067    0.05%       68  java.lang.ref.Reference.refersTo0
   675218187    0.05%       66  __get_user_nocheck_4_[k]
   671710572    0.05%       67  sun.nio.ch.NativeThreadSet.add
   658261288    0.05%       65  futex_hash_[k]
   657861689    0.05%       65  SharedRuntime::on_slowpath_allocation_exit(JavaThread*)
   651945829    0.05%       65  mappedread?[zfs]_[k]
   651530799    0.05%       65  cats.effect.unsafe.ThreadSafeHashtable.remove
   644218166    0.05%       64  ___pthread_mutex_lock
   642471140    0.05%       64  cats.effect.tracing.RingBuffer.push
   631855636    0.04%       63  list_head?[zfs]_[k]
   631727626    0.04%       63  sun.nio.ch.NativeThread.current
   631345690    0.04%       63  java.nio.Buffer.position
   612192358    0.04%       61  memcg_slab_post_alloc_hook_[k]
   612073022    0.04%       61  spl_kmem_cache_alloc?[spl]_[k]
   604992304    0.04%       60  AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<548964ul, G1BarrierSet>, (AccessInternal::BarrierType)2, 548964ul>::oop_access_barrier(void*)
   602132159    0.04%       60  java.lang.Thread.setNativeName
   601918923    0.04%       60  __list_del?[zfs]_[k]
   601855620    0.04%       60  taskq_init_ent?[spl]_[k]
   601812620    0.04%       60  jdk.nio.zipfs.ZipUtils.dosToJavaTime
   597392445    0.04%       58  JVMCIRuntime::new_instance_common(JavaThread*, Klass*, bool)
   594496172    0.04%       59  jdk.internal.misc.Unsafe.unpark
   591883806    0.04%       59  multilist_remove?[zfs]_[k]
   591866612    0.04%       59  zio_inherit_child_errors?[zfs]_[k]
   591612497    0.04%       59  dbuf_read_verify_dnode_crypt?[zfs]_[k]
   581862256    0.04%       58  list_create.constprop.0?[zfs]_[k]
   572851534    0.04%       57  do_syscall_64_[k]
   571658827    0.04%       57  __x64_sys_pread64_[k]
   571625985    0.04%       57  __rcu_read_unlock_[k]
   564834659    0.04%       56  void WeakProcessor::Task::work<G1STWIsAliveClosure, G1KeepAliveClosure>(unsigned int, G1STWIsAliveClosure*, G1KeepAliveClosure*)
   561980944    0.04%       56  ResourceArea::rollback_to(ResourceArea::SavedState const&)
   561224943    0.04%       56  CollectedHeap::supports_object_pinning() const
   551789288    0.04%       55  java.util.concurrent.ConcurrentSkipListMap.findPredecessor
   551252242    0.04%       55  java.lang.Object.hashCode
   549974214    0.04%       54  schedule_[k]
   541756162    0.04%       54  kmem_flags_convert?[spl]_[k]
   541480519    0.04%       54  jdk.nio.zipfs.ZipFileSystem$Entry.readExtra
   541083120    0.04%       54  java.util.Collections$SynchronizedCollection.remove
   531708323    0.04%       53  zio_walk_parents?[zfs]_[k]
   521946004    0.04%       52  check_stack_object_[k]
   521573132    0.04%       52  cityhash_helper.constprop.0?[zcommon]_[k]
   521559656    0.04%       52  list_destroy?[zfs]_[k]
   511900311    0.04%       51  _IO_no_init
   511705190    0.04%       51  spl_kmem_alloc_impl?[spl]_[k]
   509916109    0.04%       50  G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*)
   502005162    0.04%       50  __do_sys_prctl_[k]
   501415013    0.04%       50  spl_kmem_cache_free?[spl]_[k]
   491489162    0.03%       49  __rcu_read_lock_[k]
   491479866    0.03%       49  __pthread_self
   491448959    0.03%       49  zfs_uiomove_iter?[zfs]_[k]
   491391284    0.03%       49  dbuf_whichblock?[zfs]_[k]
   484825097    0.03%       48  get_futex_key_[k]
   481376630    0.03%       48  up_read_[k]
   475599414    0.03%       47  CollectedHeap::tlab_alloc_reserve() const
   473626803    0.03%       47  wake_q_add_safe_[k]
   471485873    0.03%       47  multilist_insert?[zfs]_[k]
   471442027    0.03%       47  rrw_enter_read_impl?[zfs]_[k]
   471396349    0.03%       47  list_remove_head?[zfs]_[k]
   461440358    0.03%       46  avl_find?[zavl]_[k]
   461314278    0.03%       46  memcg_slab_free_hook_[k]
   461296880    0.03%       46  jdk.nio.zipfs.ZipFileSystem.readFullyAt
   452311276    0.03%       45  try_to_wake_up_[k]
   451356304    0.03%       45  osq_unlock_[k]
   451314297    0.03%       45  avl_remove?[zavl]_[k]
   451207602    0.03%       45  sun.nio.ch.FileChannelImpl.read
   451197698    0.03%       45  java.lang.Integer.valueOf
   451184915    0.03%       45  do_sched_yield_[k]
   451065871    0.03%       45  TypeArrayKlass::allocate_common(int, bool, JavaThread*)
   450903130    0.03%       45  java.util.concurrent.ConcurrentSkipListMap.doPut
   449174594    0.03%       44  plist_add_[k]
   443316437    0.03%       44  java.lang.ThreadLocal.get
   442750247    0.03%       44  JavaFrameAnchor::make_walkable(JavaThread*)
   441846697    0.03%       44  proc_comm_connector_[k]
   431193982    0.03%       43  jdk.nio.zipfs.ZipFileSystem$IndexNode.keyOf
   431155159    0.03%       43  java.nio.channels.spi.AbstractInterruptibleChannel.blockedOn
   424809202    0.03%       42  G1Allocator::unsafe_max_tlab_alloc()
   422978968    0.03%       41  cats.effect.IO$.async
   421264415    0.03%       42  is_vmalloc_addr_[k]
   421004577    0.03%       42  sun.nio.ch.NativeThreadSet.remove
Async profiler results:
  profile/com.scalamandra.ZipBench.nioInputStream-Throughput-fileName-under64kb.txt/summary-cpu.txt


# JMH version: 1.32
# VM version: JDK 17.0.6, Java HotSpot(TM) 64-Bit Server VM, 17.0.6+9-LTS-jvmci-22.3-b11
# VM invoker: /home/rajven/graal/java17/bin/java
# VM options: -XX:ThreadPriorityPolicy=1 -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCIProduct -XX:JVMCIThreadsPerNativeLibraryRuntime=1 -XX:-UnlockExperimentalVMOptions
# Blackhole mode: full + dont-inline hint
# Warmup: 20 iterations, 10 s each
# Measurement: 20 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.scalamandra.ZipBench.nioInputStream
# Parameters: (fileName = over64kb.txt)

# Run progress: 30,00% complete, ETA 00:47:12
# Fork: 1 of 1
# Preparing profilers: AsyncProfiler 
Java HotSpot(TM) 64-Bit Server VM warning: -XX:ThreadPriorityPolicy=1 may require system level permission, e.g., being the root user. If the necessary permission is not possessed, changes to priority will be silently ignored.
# Warmup Iteration   1: 181,029 ops/s
# Warmup Iteration   2: 137,725 ops/s
# Warmup Iteration   3: 140,774 ops/s
# Warmup Iteration   4: 188,932 ops/s
# Warmup Iteration   5: 197,586 ops/s
# Warmup Iteration   6: 200,188 ops/s
# Warmup Iteration   7: 197,521 ops/s
# Warmup Iteration   8: 196,106 ops/s
# Warmup Iteration   9: 195,459 ops/s
# Warmup Iteration  10: 192,836 ops/s
# Warmup Iteration  11: 128,003 ops/s
# Warmup Iteration  12: 179,709 ops/s
# Warmup Iteration  13: 151,808 ops/s
# Warmup Iteration  14: 169,488 ops/s
# Warmup Iteration  15: 194,647 ops/s
# Warmup Iteration  16: 199,959 ops/s
# Warmup Iteration  17: 194,626 ops/s
# Warmup Iteration  18: 195,727 ops/s
# Warmup Iteration  19: 193,497 ops/s
# Warmup Iteration  20: 195,495 ops/s
Iteration   1: 194,179 ops/s
Iteration   2: 140,208 ops/s
Iteration   3: 171,862 ops/s
Iteration   4: 173,174 ops/s
Iteration   5: 151,965 ops/s
Iteration   6: 187,965 ops/s
Iteration   7: 132,099 ops/s
Iteration   8: 190,958 ops/s
Iteration   9: 200,907 ops/s
Iteration  10: 202,847 ops/s
Iteration  11: 199,252 ops/s
Iteration  12: 196,423 ops/s
Iteration  13: 196,124 ops/s
Iteration  14: 195,654 ops/s
Iteration  15: 191,876 ops/s
Iteration  16: 134,901 ops/s
Iteration  17: 186,162 ops/s
Iteration  18: 150,000 ops/s
Iteration  19: 178,993 ops/s
Iteration  20: [WARN] Unknown argument: summary
185,746 ops/s
                 ·async: (text only)

# Processing profiler results: AsyncProfiler 


Result "com.scalamandra.ZipBench.nioInputStream":
  178,065 ±(99.9%) 20,255 ops/s [Average]
  (min, avg, max) = (132,099, 178,065, 202,847), stdev = 23,326
  CI (99.9%): [157,810, 198,320] (assumes normal distribution)

Secondary result "com.scalamandra.ZipBench.nioInputStream:·async":
--- Execution profile ---
Total samples       : 145764
GC_active           : 5 (0.00%)
unknown_Java        : 52 (0.04%)

--- 463956381667 ns (31.82%), 46391 samples
  [ 0] /usr/lib/x86_64-linux-gnu/libz.so.1.2.11
  [ 1] java.util.zip.Inflater.inflateBytesBytes
  [ 2] java.util.zip.Inflater.inflate
  [ 3] java.util.zip.InflaterInputStream.read
  [ 4] java.io.InputStream.readNBytes
  [ 5] java.io.InputStream.readAllBytes
  [ 6] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [ 7] com.scalamandra.ZipLib$$anon$1$$Lambda$65.0x0000000800d25648.apply
  [ 8] cats.effect.IOFiber.$anonfun$8
  [ 9] cats.effect.IOFiber$$Lambda$202.0x0000000800da9800.apply
  [10] cats.effect.unsafe.WorkerThread.blockOn
  [11] scala.concurrent.package$.blocking
  [12] cats.effect.IOFiber.runLoop
  [13] cats.effect.IOFiber.execR
  [14] cats.effect.IOFiber.run
  [15] cats.effect.unsafe.WorkerThread.run

--- 373057662011 ns (25.58%), 37313 samples
  [ 0] /usr/lib/x86_64-linux-gnu/libz.so.1.2.11
  [ 1] [unknown]
  [ 2] java.util.zip.Inflater.inflateBytesBytes
  [ 3] java.util.zip.Inflater.inflate
  [ 4] java.util.zip.InflaterInputStream.read
  [ 5] java.io.InputStream.readNBytes
  [ 6] java.io.InputStream.readAllBytes
  [ 7] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [ 8] com.scalamandra.ZipLib$$anon$1$$Lambda$65.0x0000000800d25648.apply
  [ 9] cats.effect.IOFiber.$anonfun$8
  [10] cats.effect.IOFiber$$Lambda$202.0x0000000800da9800.apply
  [11] cats.effect.unsafe.WorkerThread.blockOn
  [12] scala.concurrent.package$.blocking
  [13] cats.effect.IOFiber.runLoop
  [14] cats.effect.IOFiber.execR
  [15] cats.effect.IOFiber.run
  [16] cats.effect.unsafe.WorkerThread.run

--- 55102313432 ns (3.78%), 5510 samples
  [ 0] /usr/lib/x86_64-linux-gnu/libz.so.1.2.11
  [ 1] java.util.zip.Inflater.inflateBytesBytes
  [ 2] java.util.zip.Inflater.inflate
  [ 3] java.util.zip.InflaterInputStream.read
  [ 4] java.io.InputStream.readNBytes
  [ 5] java.io.InputStream.readAllBytes
  [ 6] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [ 7] com.scalamandra.ZipLib$$anon$1$$Lambda$65.0x0000000800d25648.apply
  [ 8] cats.effect.IOFiber.$anonfun$8
  [ 9] cats.effect.IOFiber$$Lambda$202.0x0000000800da9800.apply
  [10] cats.effect.unsafe.WorkerThread.blockOn
  [11] scala.concurrent.package$.blocking
  [12] cats.effect.IOFiber.runLoop
  [13] cats.effect.IOFiber.execR
  [14] cats.effect.IOFiber.run
  [15] cats.effect.unsafe.WorkerThread.run

--- 51286527272 ns (3.52%), 5128 samples
  [ 0] inflate
  [ 1] java.util.zip.Inflater.inflateBytesBytes
  [ 2] java.util.zip.Inflater.inflate
  [ 3] java.util.zip.InflaterInputStream.read
  [ 4] java.io.InputStream.readNBytes
  [ 5] java.io.InputStream.readAllBytes
  [ 6] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [ 7] com.scalamandra.ZipLib$$anon$1$$Lambda$65.0x0000000800d25648.apply
  [ 8] cats.effect.IOFiber.$anonfun$8
  [ 9] cats.effect.IOFiber$$Lambda$202.0x0000000800da9800.apply
  [10] cats.effect.unsafe.WorkerThread.blockOn
  [11] scala.concurrent.package$.blocking
  [12] cats.effect.IOFiber.runLoop
  [13] cats.effect.IOFiber.execR
  [14] cats.effect.IOFiber.run
  [15] cats.effect.unsafe.WorkerThread.run

--- 44438532539 ns (3.05%), 4445 samples
  [ 0] /usr/lib/x86_64-linux-gnu/libz.so.1.2.11
  [ 1] [unknown]
  [ 2] java.util.zip.Inflater.inflateBytesBytes
  [ 3] java.util.zip.Inflater.inflate
  [ 4] java.util.zip.InflaterInputStream.read
  [ 5] java.io.InputStream.readNBytes
  [ 6] java.io.InputStream.readAllBytes
  [ 7] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [ 8] com.scalamandra.ZipLib$$anon$1$$Lambda$65.0x0000000800d25648.apply
  [ 9] cats.effect.IOFiber.$anonfun$8
  [10] cats.effect.IOFiber$$Lambda$202.0x0000000800da9800.apply
  [11] cats.effect.unsafe.WorkerThread.blockOn
  [12] scala.concurrent.package$.blocking
  [13] cats.effect.IOFiber.runLoop
  [14] cats.effect.IOFiber.execR
  [15] cats.effect.IOFiber.run
  [16] cats.effect.unsafe.WorkerThread.run

--- 37091953046 ns (2.54%), 3705 samples
  [ 0] java.lang.System.arraycopy
  [ 1] java.io.InputStream.readNBytes
  [ 2] java.io.InputStream.readAllBytes
  [ 3] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [ 4] com.scalamandra.ZipLib$$anon$1$$Lambda$65.0x0000000800d25648.apply
  [ 5] cats.effect.IOFiber.$anonfun$8
  [ 6] cats.effect.IOFiber$$Lambda$202.0x0000000800da9800.apply
  [ 7] cats.effect.unsafe.WorkerThread.blockOn
  [ 8] scala.concurrent.package$.blocking
  [ 9] cats.effect.IOFiber.runLoop
  [10] cats.effect.IOFiber.execR
  [11] cats.effect.IOFiber.run
  [12] cats.effect.unsafe.WorkerThread.run

--- 36968979172 ns (2.54%), 3693 samples
  [ 0] java.util.Arrays.copyOfRange
  [ 1] java.lang.String.<init>
  [ 2] java.lang.String.<init>
  [ 3] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [ 4] com.scalamandra.ZipLib$$anon$1$$Lambda$65.0x0000000800d25648.apply
  [ 5] cats.effect.IOFiber.$anonfun$8
  [ 6] cats.effect.IOFiber$$Lambda$202.0x0000000800da9800.apply
  [ 7] cats.effect.unsafe.WorkerThread.blockOn
  [ 8] scala.concurrent.package$.blocking
  [ 9] cats.effect.IOFiber.runLoop
  [10] cats.effect.IOFiber.execR
  [11] cats.effect.IOFiber.run
  [12] cats.effect.unsafe.WorkerThread.run

--- 27000292131 ns (1.85%), 2697 samples
  [ 0] __memset_avx2_unaligned_erms
  [ 1] MemAllocator::allocate() const
  [ 2] TypeArrayKlass::allocate_common(int, bool, JavaThread*)
  [ 3] JVMCIRuntime::new_array_common(JavaThread*, Klass*, int, bool)
  [ 4] java.io.InputStream.readNBytes
  [ 5] java.io.InputStream.readAllBytes
  [ 6] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [ 7] com.scalamandra.ZipLib$$anon$1$$Lambda$65.0x0000000800d25648.apply
  [ 8] cats.effect.IOFiber.$anonfun$8
  [ 9] cats.effect.IOFiber$$Lambda$202.0x0000000800da9800.apply
  [10] cats.effect.unsafe.WorkerThread.blockOn
  [11] scala.concurrent.package$.blocking
  [12] cats.effect.IOFiber.runLoop
  [13] cats.effect.IOFiber.execR
  [14] cats.effect.IOFiber.run
  [15] cats.effect.unsafe.WorkerThread.run

--- 24560878462 ns (1.68%), 2455 samples
  [ 0] java.io.InputStream.readNBytes
  [ 1] java.io.InputStream.readAllBytes
  [ 2] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [ 3] com.scalamandra.ZipLib$$anon$1$$Lambda$65.0x0000000800d25648.apply
  [ 4] cats.effect.IOFiber.$anonfun$8
  [ 5] cats.effect.IOFiber$$Lambda$202.0x0000000800da9800.apply
  [ 6] cats.effect.unsafe.WorkerThread.blockOn
  [ 7] scala.concurrent.package$.blocking
  [ 8] cats.effect.IOFiber.runLoop
  [ 9] cats.effect.IOFiber.execR
  [10] cats.effect.IOFiber.run
  [11] cats.effect.unsafe.WorkerThread.run

--- 23750110690 ns (1.63%), 2372 samples
  [ 0] __memset_avx2_unaligned_erms
  [ 1] MemAllocator::allocate() const
  [ 2] TypeArrayKlass::allocate_common(int, bool, JavaThread*)
  [ 3] JVMCIRuntime::new_array_common(JavaThread*, Klass*, int, bool)
  [ 4] java.nio.charset.Charset.forName
  [ 5] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [ 6] com.scalamandra.ZipLib$$anon$1$$Lambda$65.0x0000000800d25648.apply
  [ 7] cats.effect.IOFiber.$anonfun$8
  [ 8] cats.effect.IOFiber$$Lambda$202.0x0000000800da9800.apply
  [ 9] cats.effect.unsafe.WorkerThread.blockOn
  [10] scala.concurrent.package$.blocking
  [11] cats.effect.IOFiber.runLoop
  [12] cats.effect.IOFiber.execR
  [13] cats.effect.IOFiber.run
  [14] cats.effect.unsafe.WorkerThread.run

--- 22809880407 ns (1.56%), 2280 samples
  [ 0] java.lang.StringCoding.hasNegatives
  [ 1] java.lang.String.<init>
  [ 2] java.lang.String.<init>
  [ 3] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [ 4] com.scalamandra.ZipLib$$anon$1$$Lambda$65.0x0000000800d25648.apply
  [ 5] cats.effect.IOFiber.$anonfun$8
  [ 6] cats.effect.IOFiber$$Lambda$202.0x0000000800da9800.apply
  [ 7] cats.effect.unsafe.WorkerThread.blockOn
  [ 8] scala.concurrent.package$.blocking
  [ 9] cats.effect.IOFiber.runLoop
  [10] cats.effect.IOFiber.execR
  [11] cats.effect.IOFiber.run
  [12] cats.effect.unsafe.WorkerThread.run

--- 15797837421 ns (1.08%), 1574 samples
  [ 0] __memcpy_sse2_unaligned_erms
  [ 1] G1ParScanThreadState::steal_and_trim_queue(GenericTaskQueueSet<OverflowTaskQueue<ScannerTask, (MEMFLAGS)5, 131072u>, (MEMFLAGS)5>*)
  [ 2] G1ParEvacuateFollowersClosure::do_void()
  [ 3] G1EvacuateRegionsTask::evacuate_live_objects(G1ParScanThreadState*, unsigned int)
  [ 4] G1EvacuateRegionsBaseTask::work(unsigned int)
  [ 5] GangWorker::loop()
  [ 6] GangWorker::run()
  [ 7] Thread::call_run()
  [ 8] thread_native_entry(Thread*)
  [ 9] start_thread

--- 11550170393 ns (0.79%), 1151 samples
  [ 0] __memcpy_sse2_unaligned_erms
  [ 1] G1ParEvacuateFollowersClosure::do_void()
  [ 2] G1EvacuateRegionsTask::evacuate_live_objects(G1ParScanThreadState*, unsigned int)
  [ 3] G1EvacuateRegionsBaseTask::work(unsigned int)
  [ 4] GangWorker::loop()
  [ 5] GangWorker::run()
  [ 6] Thread::call_run()
  [ 7] thread_native_entry(Thread*)
  [ 8] start_thread

--- 9773907958 ns (0.67%), 977 samples
  [ 0] __memmove_avx_unaligned_erms
  [ 1] java.util.zip.Inflater.inflateBytesBytes
  [ 2] java.util.zip.Inflater.inflate
  [ 3] java.util.zip.InflaterInputStream.read
  [ 4] java.io.InputStream.readNBytes
  [ 5] java.io.InputStream.readAllBytes
  [ 6] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [ 7] com.scalamandra.ZipLib$$anon$1$$Lambda$65.0x0000000800d25648.apply
  [ 8] cats.effect.IOFiber.$anonfun$8
  [ 9] cats.effect.IOFiber$$Lambda$202.0x0000000800da9800.apply
  [10] cats.effect.unsafe.WorkerThread.blockOn
  [11] scala.concurrent.package$.blocking
  [12] cats.effect.IOFiber.runLoop
  [13] cats.effect.IOFiber.execR
  [14] cats.effect.IOFiber.run
  [15] cats.effect.unsafe.WorkerThread.run

--- 8323244241 ns (0.57%), 831 samples
  [ 0] copy_user_generic_string_[k]
  [ 1] zfs_uiomove_iter?[zfs]_[k]
  [ 2] zfs_uiomove?[zfs]_[k]
  [ 3] dmu_read_uio_dnode?[zfs]_[k]
  [ 4] dmu_read_uio_dbuf?[zfs]_[k]
  [ 5] mappedread?[zfs]_[k]
  [ 6] zfs_read?[zfs]_[k]
  [ 7] zpl_iter_read?[zfs]_[k]
  [ 8] new_sync_read_[k]
  [ 9] vfs_read_[k]
  [10] __x64_sys_pread64_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] __libc_pread64
  [14] sun.nio.ch.FileDispatcherImpl.pread0
  [15] sun.nio.ch.FileDispatcherImpl.pread
  [16] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [17] sun.nio.ch.IOUtil.read
  [18] sun.nio.ch.IOUtil.read
  [19] sun.nio.ch.FileChannelImpl.readInternal
  [20] sun.nio.ch.FileChannelImpl.read
  [21] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [22] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [23] jdk.nio.zipfs.ZipFileSystem$2.fill
  [24] java.util.zip.InflaterInputStream.read
  [25] java.io.InputStream.readNBytes
  [26] java.io.InputStream.readAllBytes
  [27] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [28] com.scalamandra.ZipLib$$anon$1$$Lambda$65.0x0000000800d25648.apply
  [29] cats.effect.IOFiber.$anonfun$8
  [30] cats.effect.IOFiber$$Lambda$202.0x0000000800da9800.apply
  [31] cats.effect.unsafe.WorkerThread.blockOn
  [32] scala.concurrent.package$.blocking
  [33] cats.effect.IOFiber.runLoop
  [34] cats.effect.IOFiber.execR
  [35] cats.effect.IOFiber.run
  [36] cats.effect.unsafe.WorkerThread.run

--- 6797185799 ns (0.47%), 679 samples
  [ 0] clear_page_rep_[k]
  [ 1] get_page_from_freelist_[k]
  [ 2] __alloc_pages_[k]
  [ 3] __folio_alloc_[k]
  [ 4] vma_alloc_folio_[k]
  [ 5] do_anonymous_page_[k]
  [ 6] handle_pte_fault_[k]
  [ 7] __handle_mm_fault_[k]
  [ 8] handle_mm_fault_[k]
  [ 9] do_user_addr_fault_[k]
  [10] exc_page_fault_[k]
  [11] asm_exc_page_fault_[k]
  [12] java.io.InputStream.readNBytes
  [13] java.io.InputStream.readAllBytes
  [14] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [15] com.scalamandra.ZipLib$$anon$1$$Lambda$65.0x0000000800d25648.apply
  [16] cats.effect.IOFiber.$anonfun$8
  [17] cats.effect.IOFiber$$Lambda$202.0x0000000800da9800.apply
  [18] cats.effect.unsafe.WorkerThread.blockOn
  [19] scala.concurrent.package$.blocking
  [20] cats.effect.IOFiber.runLoop
  [21] cats.effect.IOFiber.execR
  [22] cats.effect.IOFiber.run
  [23] cats.effect.unsafe.WorkerThread.run

--- 5949432052 ns (0.41%), 595 samples
  [ 0] inflate
  [ 1] java.util.zip.Inflater.inflateBytesBytes
  [ 2] java.util.zip.Inflater.inflate
  [ 3] java.util.zip.InflaterInputStream.read
  [ 4] java.io.InputStream.readNBytes
  [ 5] java.io.InputStream.readAllBytes
  [ 6] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [ 7] com.scalamandra.ZipLib$$anon$1$$Lambda$65.0x0000000800d25648.apply
  [ 8] cats.effect.IOFiber.$anonfun$8
  [ 9] cats.effect.IOFiber$$Lambda$202.0x0000000800da9800.apply
  [10] cats.effect.unsafe.WorkerThread.blockOn
  [11] scala.concurrent.package$.blocking
  [12] cats.effect.IOFiber.runLoop
  [13] cats.effect.IOFiber.execR
  [14] cats.effect.IOFiber.run
  [15] cats.effect.unsafe.WorkerThread.run

--- 4022347130 ns (0.28%), 402 samples
  [ 0] do_user_addr_fault_[k]
  [ 1] exc_page_fault_[k]
  [ 2] asm_exc_page_fault_[k]
  [ 3] java.io.InputStream.readNBytes
  [ 4] java.io.InputStream.readAllBytes
  [ 5] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [ 6] com.scalamandra.ZipLib$$anon$1$$Lambda$65.0x0000000800d25648.apply
  [ 7] cats.effect.IOFiber.$anonfun$8
  [ 8] cats.effect.IOFiber$$Lambda$202.0x0000000800da9800.apply
  [ 9] cats.effect.unsafe.WorkerThread.blockOn
  [10] scala.concurrent.package$.blocking
  [11] cats.effect.IOFiber.runLoop
  [12] cats.effect.IOFiber.execR
  [13] cats.effect.IOFiber.run
  [14] cats.effect.unsafe.WorkerThread.run

--- 3684573027 ns (0.25%), 368 samples
  [ 0] __memset_avx2_unaligned_erms
  [ 1] MemAllocator::allocate() const
  [ 2] TypeArrayKlass::allocate_common(int, bool, JavaThread*)
  [ 3] JVMCIRuntime::new_array_common(JavaThread*, Klass*, int, bool)
  [ 4] java.io.InputStream.readNBytes
  [ 5] java.io.InputStream.readAllBytes
  [ 6] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [ 7] com.scalamandra.ZipLib$$anon$1$$Lambda$65.0x0000000800d25648.apply
  [ 8] cats.effect.IOFiber.$anonfun$8
  [ 9] cats.effect.IOFiber$$Lambda$202.0x0000000800da9800.apply
  [10] cats.effect.unsafe.WorkerThread.blockOn
  [11] scala.concurrent.package$.blocking
  [12] cats.effect.IOFiber.runLoop
  [13] cats.effect.IOFiber.execR
  [14] cats.effect.IOFiber.run
  [15] cats.effect.unsafe.WorkerThread.run

--- 3345288155 ns (0.23%), 334 samples
  [ 0] find_vmap_area_[k]
  [ 1] check_heap_object_[k]
  [ 2] __check_object_size.part.0_[k]
  [ 3] __check_object_size_[k]
  [ 4] zfs_uiomove_iter?[zfs]_[k]
  [ 5] zfs_uiomove?[zfs]_[k]
  [ 6] dmu_read_uio_dnode?[zfs]_[k]
  [ 7] dmu_read_uio_dbuf?[zfs]_[k]
  [ 8] mappedread?[zfs]_[k]
  [ 9] zfs_read?[zfs]_[k]
  [10] zpl_iter_read?[zfs]_[k]
  [11] new_sync_read_[k]
  [12] vfs_read_[k]
  [13] __x64_sys_pread64_[k]
  [14] do_syscall_64_[k]
  [15] entry_SYSCALL_64_after_hwframe_[k]
  [16] __libc_pread64
  [17] sun.nio.ch.FileDispatcherImpl.pread0
  [18] sun.nio.ch.FileDispatcherImpl.pread
  [19] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [20] sun.nio.ch.IOUtil.read
  [21] sun.nio.ch.IOUtil.read
  [22] sun.nio.ch.FileChannelImpl.readInternal
  [23] sun.nio.ch.FileChannelImpl.read
  [24] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [25] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [26] jdk.nio.zipfs.ZipFileSystem$2.fill
  [27] java.util.zip.InflaterInputStream.read
  [28] java.io.InputStream.readNBytes
  [29] java.io.InputStream.readAllBytes
  [30] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [31] com.scalamandra.ZipLib$$anon$1$$Lambda$65.0x0000000800d25648.apply
  [32] cats.effect.IOFiber.$anonfun$8
  [33] cats.effect.IOFiber$$Lambda$202.0x0000000800da9800.apply
  [34] cats.effect.unsafe.WorkerThread.blockOn
  [35] scala.concurrent.package$.blocking
  [36] cats.effect.IOFiber.runLoop
  [37] cats.effect.IOFiber.execR
  [38] cats.effect.IOFiber.run
  [39] cats.effect.unsafe.WorkerThread.run

--- 3070000353 ns (0.21%), 307 samples
  [ 0] jlong_disjoint_arraycopy
  [ 1] jdk.internal.misc.Unsafe.copyMemory0
  [ 2] jdk.internal.misc.Unsafe.copyMemory
  [ 3] jdk.internal.misc.ScopedMemoryAccess.copyMemoryInternal
  [ 4] jdk.internal.misc.ScopedMemoryAccess.copyMemory
  [ 5] java.nio.ByteBuffer.putBuffer
  [ 6] java.nio.ByteBuffer.put
  [ 7] java.nio.HeapByteBuffer.put
  [ 8] sun.nio.ch.IOUtil.read
  [ 9] sun.nio.ch.IOUtil.read
  [10] sun.nio.ch.FileChannelImpl.readInternal
  [11] sun.nio.ch.FileChannelImpl.read
  [12] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [13] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [14] jdk.nio.zipfs.ZipFileSystem$2.fill
  [15] java.util.zip.InflaterInputStream.read
  [16] java.io.InputStream.readNBytes
  [17] java.io.InputStream.readAllBytes
  [18] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [19] com.scalamandra.ZipLib$$anon$1$$Lambda$65.0x0000000800d25648.apply
  [20] cats.effect.IOFiber.$anonfun$8
  [21] cats.effect.IOFiber$$Lambda$202.0x0000000800da9800.apply
  [22] cats.effect.unsafe.WorkerThread.blockOn
  [23] scala.concurrent.package$.blocking
  [24] cats.effect.IOFiber.runLoop
  [25] cats.effect.IOFiber.execR
  [26] cats.effect.IOFiber.run
  [27] cats.effect.unsafe.WorkerThread.run

--- 2775457789 ns (0.19%), 277 samples
  [ 0] __memset_avx2_unaligned_erms
  [ 1] MarkBitMap::do_clear(MemRegion, bool)
  [ 2] G1ClearBitMapTask::G1ClearBitmapHRClosure::do_heap_region(HeapRegion*)
  [ 3] HeapRegionManager::par_iterate(HeapRegionClosure*, HeapRegionClaimer*, unsigned int) const
  [ 4] G1ClearBitMapTask::work(unsigned int)
  [ 5] GangWorker::loop()
  [ 6] GangWorker::run()
  [ 7] Thread::call_run()
  [ 8] thread_native_entry(Thread*)
  [ 9] start_thread

--- 2673115436 ns (0.18%), 267 samples
  [ 0] java.util.Arrays.copyOfRange
  [ 1] java.lang.String.<init>
  [ 2] java.lang.String.<init>
  [ 3] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [ 4] com.scalamandra.ZipLib$$anon$1$$Lambda$65.0x0000000800d25648.apply
  [ 5] cats.effect.IOFiber.$anonfun$8
  [ 6] cats.effect.IOFiber$$Lambda$202.0x0000000800da9800.apply
  [ 7] cats.effect.unsafe.WorkerThread.blockOn
  [ 8] scala.concurrent.package$.blocking
  [ 9] cats.effect.IOFiber.runLoop
  [10] cats.effect.IOFiber.execR
  [11] cats.effect.IOFiber.run
  [12] cats.effect.unsafe.WorkerThread.run

--- 2652739793 ns (0.18%), 265 samples
  [ 0] zio_create?[zfs]_[k]
  [ 1] zio_null?[zfs]_[k]
  [ 2] zio_root?[zfs]_[k]
  [ 3] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 4] dmu_read_uio_dnode?[zfs]_[k]
  [ 5] dmu_read_uio_dbuf?[zfs]_[k]
  [ 6] mappedread?[zfs]_[k]
  [ 7] zfs_read?[zfs]_[k]
  [ 8] zpl_iter_read?[zfs]_[k]
  [ 9] new_sync_read_[k]
  [10] vfs_read_[k]
  [11] __x64_sys_pread64_[k]
  [12] do_syscall_64_[k]
  [13] entry_SYSCALL_64_after_hwframe_[k]
  [14] __libc_pread64
  [15] sun.nio.ch.FileDispatcherImpl.pread0
  [16] sun.nio.ch.FileDispatcherImpl.pread
  [17] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [18] sun.nio.ch.IOUtil.read
  [19] sun.nio.ch.IOUtil.read
  [20] sun.nio.ch.FileChannelImpl.readInternal
  [21] sun.nio.ch.FileChannelImpl.read
  [22] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [23] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [24] jdk.nio.zipfs.ZipFileSystem$2.fill
  [25] java.util.zip.InflaterInputStream.read
  [26] java.io.InputStream.readNBytes
  [27] java.io.InputStream.readAllBytes
  [28] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [29] com.scalamandra.ZipLib$$anon$1$$Lambda$65.0x0000000800d25648.apply
  [30] cats.effect.IOFiber.$anonfun$8
  [31] cats.effect.IOFiber$$Lambda$202.0x0000000800da9800.apply
  [32] cats.effect.unsafe.WorkerThread.blockOn
  [33] scala.concurrent.package$.blocking
  [34] cats.effect.IOFiber.runLoop
  [35] cats.effect.IOFiber.execR
  [36] cats.effect.IOFiber.run
  [37] cats.effect.unsafe.WorkerThread.run

--- 2642988420 ns (0.18%), 264 samples
  [ 0] java.lang.System.arraycopy
  [ 1] java.io.InputStream.readNBytes
  [ 2] java.io.InputStream.readAllBytes
  [ 3] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [ 4] com.scalamandra.ZipLib$$anon$1$$Lambda$65.0x0000000800d25648.apply
  [ 5] cats.effect.IOFiber.$anonfun$8
  [ 6] cats.effect.IOFiber$$Lambda$202.0x0000000800da9800.apply
  [ 7] cats.effect.unsafe.WorkerThread.blockOn
  [ 8] scala.concurrent.package$.blocking
  [ 9] cats.effect.IOFiber.runLoop
  [10] cats.effect.IOFiber.execR
  [11] cats.effect.IOFiber.run
  [12] cats.effect.unsafe.WorkerThread.run

--- 2002023853 ns (0.14%), 200 samples
  [ 0] java.util.Arrays.copyOfRange
  [ 1] java.lang.String.<init>
  [ 2] java.lang.String.<init>
  [ 3] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [ 4] com.scalamandra.ZipLib$$anon$1$$Lambda$65.0x0000000800d25648.apply
  [ 5] cats.effect.IOFiber.$anonfun$8
  [ 6] cats.effect.IOFiber$$Lambda$202.0x0000000800da9800.apply
  [ 7] cats.effect.unsafe.WorkerThread.blockOn
  [ 8] scala.concurrent.package$.blocking
  [ 9] cats.effect.IOFiber.runLoop
  [10] cats.effect.IOFiber.execR
  [11] cats.effect.IOFiber.run
  [12] cats.effect.unsafe.WorkerThread.run

--- 1970001819 ns (0.14%), 197 samples
  [ 0] /usr/lib/x86_64-linux-gnu/libz.so.1.2.11
  [ 1] java.util.zip.Inflater.inflateBytesBytes
  [ 2] java.util.zip.Inflater.inflate
  [ 3] java.util.zip.InflaterInputStream.read
  [ 4] java.io.InputStream.readNBytes
  [ 5] java.io.InputStream.readAllBytes
  [ 6] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [ 7] com.scalamandra.ZipLib$$anon$1$$Lambda$65.0x0000000800d25648.apply
  [ 8] cats.effect.IOFiber.$anonfun$8
  [ 9] cats.effect.IOFiber$$Lambda$202.0x0000000800da9800.apply
  [10] cats.effect.unsafe.WorkerThread.blockOn
  [11] scala.concurrent.package$.blocking
  [12] cats.effect.IOFiber.runLoop
  [13] cats.effect.IOFiber.execR
  [14] cats.effect.IOFiber.run
  [15] cats.effect.unsafe.WorkerThread.run

--- 1721721279 ns (0.12%), 172 samples
  [ 0] __memset_avx2_unaligned_erms
  [ 1] MemAllocator::allocate() const
  [ 2] TypeArrayKlass::allocate_common(int, bool, JavaThread*)
  [ 3] JVMCIRuntime::new_array_common(JavaThread*, Klass*, int, bool)
  [ 4] java.nio.charset.Charset.forName
  [ 5] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [ 6] com.scalamandra.ZipLib$$anon$1$$Lambda$65.0x0000000800d25648.apply
  [ 7] cats.effect.IOFiber.$anonfun$8
  [ 8] cats.effect.IOFiber$$Lambda$202.0x0000000800da9800.apply
  [ 9] cats.effect.unsafe.WorkerThread.blockOn
  [10] scala.concurrent.package$.blocking
  [11] cats.effect.IOFiber.runLoop
  [12] cats.effect.IOFiber.execR
  [13] cats.effect.IOFiber.run
  [14] cats.effect.unsafe.WorkerThread.run

--- 1665853719 ns (0.11%), 166 samples
  [ 0] G1ParScanThreadState::trim_queue_to_threshold(unsigned int)
  [ 1] G1ParScanThreadState::steal_and_trim_queue(GenericTaskQueueSet<OverflowTaskQueue<ScannerTask, (MEMFLAGS)5, 131072u>, (MEMFLAGS)5>*)
  [ 2] G1ParEvacuateFollowersClosure::do_void()
  [ 3] G1EvacuateRegionsTask::evacuate_live_objects(G1ParScanThreadState*, unsigned int)
  [ 4] G1EvacuateRegionsBaseTask::work(unsigned int)
  [ 5] GangWorker::loop()
  [ 6] GangWorker::run()
  [ 7] Thread::call_run()
  [ 8] thread_native_entry(Thread*)
  [ 9] start_thread

--- 1622581256 ns (0.11%), 162 samples
  [ 0] memset_[k]
  [ 1] spl_kmem_cache_alloc?[spl]_[k]
  [ 2] zio_create?[zfs]_[k]
  [ 3] zio_null?[zfs]_[k]
  [ 4] zio_root?[zfs]_[k]
  [ 5] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 6] dmu_read_uio_dnode?[zfs]_[k]
  [ 7] dmu_read_uio_dbuf?[zfs]_[k]
  [ 8] mappedread?[zfs]_[k]
  [ 9] zfs_read?[zfs]_[k]
  [10] zpl_iter_read?[zfs]_[k]
  [11] new_sync_read_[k]
  [12] vfs_read_[k]
  [13] __x64_sys_pread64_[k]
  [14] do_syscall_64_[k]
  [15] entry_SYSCALL_64_after_hwframe_[k]
  [16] __libc_pread64
  [17] sun.nio.ch.FileDispatcherImpl.pread0
  [18] sun.nio.ch.FileDispatcherImpl.pread
  [19] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [20] sun.nio.ch.IOUtil.read
  [21] sun.nio.ch.IOUtil.read
  [22] sun.nio.ch.FileChannelImpl.readInternal
  [23] sun.nio.ch.FileChannelImpl.read
  [24] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [25] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [26] jdk.nio.zipfs.ZipFileSystem$2.fill
  [27] java.util.zip.InflaterInputStream.read
  [28] java.io.InputStream.readNBytes
  [29] java.io.InputStream.readAllBytes
  [30] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [31] com.scalamandra.ZipLib$$anon$1$$Lambda$65.0x0000000800d25648.apply
  [32] cats.effect.IOFiber.$anonfun$8
  [33] cats.effect.IOFiber$$Lambda$202.0x0000000800da9800.apply
  [34] cats.effect.unsafe.WorkerThread.blockOn
  [35] scala.concurrent.package$.blocking
  [36] cats.effect.IOFiber.runLoop
  [37] cats.effect.IOFiber.execR
  [38] cats.effect.IOFiber.run
  [39] cats.effect.unsafe.WorkerThread.run

--- 1621874242 ns (0.11%), 162 samples
  [ 0] java.io.InputStream.readNBytes
  [ 1] java.io.InputStream.readAllBytes
  [ 2] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [ 3] com.scalamandra.ZipLib$$anon$1$$Lambda$65.0x0000000800d25648.apply
  [ 4] cats.effect.IOFiber.$anonfun$8
  [ 5] cats.effect.IOFiber$$Lambda$202.0x0000000800da9800.apply
  [ 6] cats.effect.unsafe.WorkerThread.blockOn
  [ 7] scala.concurrent.package$.blocking
  [ 8] cats.effect.IOFiber.runLoop
  [ 9] cats.effect.IOFiber.execR
  [10] cats.effect.IOFiber.run
  [11] cats.effect.unsafe.WorkerThread.run

--- 1601993385 ns (0.11%), 160 samples
  [ 0] clear_page_rep_[k]
  [ 1] get_page_from_freelist_[k]
  [ 2] __alloc_pages_[k]
  [ 3] __folio_alloc_[k]
  [ 4] vma_alloc_folio_[k]
  [ 5] do_anonymous_page_[k]
  [ 6] handle_pte_fault_[k]
  [ 7] __handle_mm_fault_[k]
  [ 8] handle_mm_fault_[k]
  [ 9] do_user_addr_fault_[k]
  [10] exc_page_fault_[k]
  [11] asm_exc_page_fault_[k]
  [12] __memset_avx2_unaligned_erms
  [13] MemAllocator::allocate() const
  [14] TypeArrayKlass::allocate_common(int, bool, JavaThread*)
  [15] JVMCIRuntime::new_array_common(JavaThread*, Klass*, int, bool)
  [16] java.nio.charset.Charset.forName
  [17] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [18] com.scalamandra.ZipLib$$anon$1$$Lambda$65.0x0000000800d25648.apply
  [19] cats.effect.IOFiber.$anonfun$8
  [20] cats.effect.IOFiber$$Lambda$202.0x0000000800da9800.apply
  [21] cats.effect.unsafe.WorkerThread.blockOn
  [22] scala.concurrent.package$.blocking
  [23] cats.effect.IOFiber.runLoop
  [24] cats.effect.IOFiber.execR
  [25] cats.effect.IOFiber.run
  [26] cats.effect.unsafe.WorkerThread.run

--- 1571884957 ns (0.11%), 157 samples
  [ 0] clear_page_rep_[k]
  [ 1] get_page_from_freelist_[k]
  [ 2] __alloc_pages_[k]
  [ 3] __folio_alloc_[k]
  [ 4] vma_alloc_folio_[k]
  [ 5] do_anonymous_page_[k]
  [ 6] handle_pte_fault_[k]
  [ 7] __handle_mm_fault_[k]
  [ 8] handle_mm_fault_[k]
  [ 9] do_user_addr_fault_[k]
  [10] exc_page_fault_[k]
  [11] asm_exc_page_fault_[k]
  [12] __memset_avx2_unaligned_erms
  [13] MemAllocator::allocate() const
  [14] TypeArrayKlass::allocate_common(int, bool, JavaThread*)
  [15] JVMCIRuntime::new_array_common(JavaThread*, Klass*, int, bool)
  [16] java.io.InputStream.readNBytes
  [17] java.io.InputStream.readAllBytes
  [18] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [19] com.scalamandra.ZipLib$$anon$1$$Lambda$65.0x0000000800d25648.apply
  [20] cats.effect.IOFiber.$anonfun$8
  [21] cats.effect.IOFiber$$Lambda$202.0x0000000800da9800.apply
  [22] cats.effect.unsafe.WorkerThread.blockOn
  [23] scala.concurrent.package$.blocking
  [24] cats.effect.IOFiber.runLoop
  [25] cats.effect.IOFiber.execR
  [26] cats.effect.IOFiber.run
  [27] cats.effect.unsafe.WorkerThread.run

--- 1520435416 ns (0.10%), 152 samples
  [ 0] java.io.InputStream.readNBytes
  [ 1] java.io.InputStream.readAllBytes
  [ 2] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [ 3] com.scalamandra.ZipLib$$anon$1$$Lambda$65.0x0000000800d25648.apply
  [ 4] cats.effect.IOFiber.$anonfun$8
  [ 5] cats.effect.IOFiber$$Lambda$202.0x0000000800da9800.apply
  [ 6] cats.effect.unsafe.WorkerThread.blockOn
  [ 7] scala.concurrent.package$.blocking
  [ 8] cats.effect.IOFiber.runLoop
  [ 9] cats.effect.IOFiber.execR
  [10] cats.effect.IOFiber.run
  [11] cats.effect.unsafe.WorkerThread.run

--- 1464149661 ns (0.10%), 146 samples
  [ 0] G1ParScanThreadState::trim_queue_to_threshold(unsigned int)
  [ 1] G1ParEvacuateFollowersClosure::do_void()
  [ 2] G1EvacuateRegionsTask::evacuate_live_objects(G1ParScanThreadState*, unsigned int)
  [ 3] G1EvacuateRegionsBaseTask::work(unsigned int)
  [ 4] GangWorker::loop()
  [ 5] GangWorker::run()
  [ 6] Thread::call_run()
  [ 7] thread_native_entry(Thread*)
  [ 8] start_thread

--- 1440685984 ns (0.10%), 144 samples
  [ 0] java.lang.StringCoding.hasNegatives
  [ 1] java.lang.String.<init>
  [ 2] java.lang.String.<init>
  [ 3] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [ 4] com.scalamandra.ZipLib$$anon$1$$Lambda$65.0x0000000800d25648.apply
  [ 5] cats.effect.IOFiber.$anonfun$8
  [ 6] cats.effect.IOFiber$$Lambda$202.0x0000000800da9800.apply
  [ 7] cats.effect.unsafe.WorkerThread.blockOn
  [ 8] scala.concurrent.package$.blocking
  [ 9] cats.effect.IOFiber.runLoop
  [10] cats.effect.IOFiber.execR
  [11] cats.effect.IOFiber.run
  [12] cats.effect.unsafe.WorkerThread.run

--- 1401800194 ns (0.10%), 140 samples
  [ 0] __memset_avx2_unaligned_erms
  [ 1] MemAllocator::allocate() const
  [ 2] TypeArrayKlass::allocate_common(int, bool, JavaThread*)
  [ 3] JVMCIRuntime::new_array_common(JavaThread*, Klass*, int, bool)
  [ 4] java.lang.String.<init>
  [ 5] java.lang.String.<init>
  [ 6] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [ 7] com.scalamandra.ZipLib$$anon$1$$Lambda$65.0x0000000800d25648.apply
  [ 8] cats.effect.IOFiber.$anonfun$8
  [ 9] cats.effect.IOFiber$$Lambda$202.0x0000000800da9800.apply
  [10] cats.effect.unsafe.WorkerThread.blockOn
  [11] scala.concurrent.package$.blocking
  [12] cats.effect.IOFiber.runLoop
  [13] cats.effect.IOFiber.execR
  [14] cats.effect.IOFiber.run
  [15] cats.effect.unsafe.WorkerThread.run

--- 1361615407 ns (0.09%), 136 samples
  [ 0] rmqueue_pcplist.constprop.0_[k]
  [ 1] rmqueue_[k]
  [ 2] get_page_from_freelist_[k]
  [ 3] __alloc_pages_[k]
  [ 4] __folio_alloc_[k]
  [ 5] vma_alloc_folio_[k]
  [ 6] do_anonymous_page_[k]
  [ 7] handle_pte_fault_[k]
  [ 8] __handle_mm_fault_[k]
  [ 9] handle_mm_fault_[k]
  [10] do_user_addr_fault_[k]
  [11] exc_page_fault_[k]
  [12] asm_exc_page_fault_[k]
  [13] java.io.InputStream.readNBytes
  [14] java.io.InputStream.readAllBytes
  [15] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [16] com.scalamandra.ZipLib$$anon$1$$Lambda$65.0x0000000800d25648.apply
  [17] cats.effect.IOFiber.$anonfun$8
  [18] cats.effect.IOFiber$$Lambda$202.0x0000000800da9800.apply
  [19] cats.effect.unsafe.WorkerThread.blockOn
  [20] scala.concurrent.package$.blocking
  [21] cats.effect.IOFiber.runLoop
  [22] cats.effect.IOFiber.execR
  [23] cats.effect.IOFiber.run
  [24] cats.effect.unsafe.WorkerThread.run

--- 1300454080 ns (0.09%), 130 samples
  [ 0] java.lang.StringCoding.hasNegatives
  [ 1] java.lang.String.<init>
  [ 2] java.lang.String.<init>
  [ 3] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [ 4] com.scalamandra.ZipLib$$anon$1$$Lambda$65.0x0000000800d25648.apply
  [ 5] cats.effect.IOFiber.$anonfun$8
  [ 6] cats.effect.IOFiber$$Lambda$202.0x0000000800da9800.apply
  [ 7] cats.effect.unsafe.WorkerThread.blockOn
  [ 8] scala.concurrent.package$.blocking
  [ 9] cats.effect.IOFiber.runLoop
  [10] cats.effect.IOFiber.execR
  [11] cats.effect.IOFiber.run
  [12] cats.effect.unsafe.WorkerThread.run

--- 1251204788 ns (0.09%), 125 samples
  [ 0] java.lang.System.arraycopy
  [ 1] java.io.InputStream.readNBytes
  [ 2] java.io.InputStream.readAllBytes
  [ 3] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [ 4] com.scalamandra.ZipLib$$anon$1$$Lambda$65.0x0000000800d25648.apply
  [ 5] cats.effect.IOFiber.$anonfun$8
  [ 6] cats.effect.IOFiber$$Lambda$202.0x0000000800da9800.apply
  [ 7] cats.effect.unsafe.WorkerThread.blockOn
  [ 8] scala.concurrent.package$.blocking
  [ 9] cats.effect.IOFiber.runLoop
  [10] cats.effect.IOFiber.execR
  [11] cats.effect.IOFiber.run
  [12] cats.effect.unsafe.WorkerThread.run

--- 1230147537 ns (0.08%), 123 samples
  [ 0] __memmove_avx_unaligned_erms
  [ 1] java.util.zip.Inflater.inflateBytesBytes
  [ 2] java.util.zip.Inflater.inflate
  [ 3] java.util.zip.InflaterInputStream.read
  [ 4] java.io.InputStream.readNBytes
  [ 5] java.io.InputStream.readAllBytes
  [ 6] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [ 7] com.scalamandra.ZipLib$$anon$1$$Lambda$65.0x0000000800d25648.apply
  [ 8] cats.effect.IOFiber.$anonfun$8
  [ 9] cats.effect.IOFiber$$Lambda$202.0x0000000800da9800.apply
  [10] cats.effect.unsafe.WorkerThread.blockOn
  [11] scala.concurrent.package$.blocking
  [12] cats.effect.IOFiber.runLoop
  [13] cats.effect.IOFiber.execR
  [14] cats.effect.IOFiber.run
  [15] cats.effect.unsafe.WorkerThread.run

--- 1189768806 ns (0.08%), 118 samples
  [ 0] free_unref_page_list_[k]
  [ 1] release_pages_[k]
  [ 2] free_pages_and_swap_cache_[k]
  [ 3] tlb_batch_pages_flush_[k]
  [ 4] tlb_flush_mmu_[k]
  [ 5] zap_pte_range_[k]
  [ 6] zap_pmd_range.isra.0_[k]
  [ 7] unmap_page_range_[k]
  [ 8] unmap_single_vma_[k]
  [ 9] unmap_vmas_[k]
  [10] unmap_region_[k]
  [11] __do_munmap_[k]
  [12] mmap_region_[k]
  [13] do_mmap_[k]
  [14] vm_mmap_pgoff_[k]
  [15] ksys_mmap_pgoff_[k]
  [16] __x64_sys_mmap_[k]
  [17] do_syscall_64_[k]
  [18] entry_SYSCALL_64_after_hwframe_[k]
  [19] __GI___mmap
  [20] G1PageBasedVirtualSpace::uncommit(unsigned long, unsigned long)
  [21] G1RegionsLargerThanCommitSizeMapper::uncommit_regions(unsigned int, unsigned long)
  [22] HeapRegionManager::uncommit_regions(unsigned int, unsigned int)
  [23] HeapRegionManager::uncommit_inactive_regions(unsigned int)
  [24] G1UncommitRegionTask::execute()
  [25] G1ServiceThread::run_task(G1ServiceTask*)
  [26] G1ServiceThread::run_service()
  [27] ConcurrentGCThread::run()
  [28] Thread::call_run()
  [29] thread_native_entry(Thread*)
  [30] start_thread

--- 1171022668 ns (0.08%), 117 samples
  [ 0] dbuf_rele_and_unlock?[zfs]_[k]
  [ 1] dbuf_rele?[zfs]_[k]
  [ 2] dmu_buf_rele_array?[zfs]_[k]
  [ 3] dmu_read_uio_dnode?[zfs]_[k]
  [ 4] dmu_read_uio_dbuf?[zfs]_[k]
  [ 5] mappedread?[zfs]_[k]
  [ 6] zfs_read?[zfs]_[k]
  [ 7] zpl_iter_read?[zfs]_[k]
  [ 8] new_sync_read_[k]
  [ 9] vfs_read_[k]
  [10] __x64_sys_pread64_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] __libc_pread64
  [14] sun.nio.ch.FileDispatcherImpl.pread0
  [15] sun.nio.ch.FileDispatcherImpl.pread
  [16] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [17] sun.nio.ch.IOUtil.read
  [18] sun.nio.ch.IOUtil.read
  [19] sun.nio.ch.FileChannelImpl.readInternal
  [20] sun.nio.ch.FileChannelImpl.read
  [21] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [22] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [23] jdk.nio.zipfs.ZipFileSystem$2.fill
  [24] java.util.zip.InflaterInputStream.read
  [25] java.io.InputStream.readNBytes
  [26] java.io.InputStream.readAllBytes
  [27] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [28] com.scalamandra.ZipLib$$anon$1$$Lambda$65.0x0000000800d25648.apply
  [29] cats.effect.IOFiber.$anonfun$8
  [30] cats.effect.IOFiber$$Lambda$202.0x0000000800da9800.apply
  [31] cats.effect.unsafe.WorkerThread.blockOn
  [32] scala.concurrent.package$.blocking
  [33] cats.effect.IOFiber.runLoop
  [34] cats.effect.IOFiber.execR
  [35] cats.effect.IOFiber.run
  [36] cats.effect.unsafe.WorkerThread.run

--- 1170511729 ns (0.08%), 117 samples
  [ 0] jni_GetPrimitiveArrayCritical
  [ 1] Java_java_util_zip_Inflater_inflateBytesBytes
  [ 2] java.util.zip.Inflater.inflateBytesBytes
  [ 3] java.util.zip.Inflater.inflate
  [ 4] java.util.zip.InflaterInputStream.read
  [ 5] java.io.InputStream.readNBytes
  [ 6] java.io.InputStream.readAllBytes
  [ 7] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [ 8] com.scalamandra.ZipLib$$anon$1$$Lambda$65.0x0000000800d25648.apply
  [ 9] cats.effect.IOFiber.$anonfun$8
  [10] cats.effect.IOFiber$$Lambda$202.0x0000000800da9800.apply
  [11] cats.effect.unsafe.WorkerThread.blockOn
  [12] scala.concurrent.package$.blocking
  [13] cats.effect.IOFiber.runLoop
  [14] cats.effect.IOFiber.execR
  [15] cats.effect.IOFiber.run
  [16] cats.effect.unsafe.WorkerThread.run

--- 1169910572 ns (0.08%), 117 samples
  [ 0] /usr/lib/x86_64-linux-gnu/libz.so.1.2.11
  [ 1] [unknown]
  [ 2] java.util.zip.Inflater.inflateBytesBytes
  [ 3] java.util.zip.Inflater.inflate
  [ 4] java.util.zip.InflaterInputStream.read
  [ 5] java.io.InputStream.readNBytes
  [ 6] java.io.InputStream.readAllBytes
  [ 7] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [ 8] com.scalamandra.ZipLib$$anon$1$$Lambda$65.0x0000000800d25648.apply
  [ 9] cats.effect.IOFiber.$anonfun$8
  [10] cats.effect.IOFiber$$Lambda$202.0x0000000800da9800.apply
  [11] cats.effect.unsafe.WorkerThread.blockOn
  [12] scala.concurrent.package$.blocking
  [13] cats.effect.IOFiber.runLoop
  [14] cats.effect.IOFiber.execR
  [15] cats.effect.IOFiber.run
  [16] cats.effect.unsafe.WorkerThread.run

--- 1097060907 ns (0.08%), 110 samples
  [ 0] zap_pte_range_[k]
  [ 1] zap_pmd_range.isra.0_[k]
  [ 2] unmap_page_range_[k]
  [ 3] unmap_single_vma_[k]
  [ 4] unmap_vmas_[k]
  [ 5] unmap_region_[k]
  [ 6] __do_munmap_[k]
  [ 7] mmap_region_[k]
  [ 8] do_mmap_[k]
  [ 9] vm_mmap_pgoff_[k]
  [10] ksys_mmap_pgoff_[k]
  [11] __x64_sys_mmap_[k]
  [12] do_syscall_64_[k]
  [13] entry_SYSCALL_64_after_hwframe_[k]
  [14] __GI___mmap
  [15] G1PageBasedVirtualSpace::uncommit(unsigned long, unsigned long)
  [16] G1RegionsLargerThanCommitSizeMapper::uncommit_regions(unsigned int, unsigned long)
  [17] HeapRegionManager::uncommit_regions(unsigned int, unsigned int)
  [18] HeapRegionManager::uncommit_inactive_regions(unsigned int)
  [19] G1UncommitRegionTask::execute()
  [20] G1ServiceThread::run_task(G1ServiceTask*)
  [21] G1ServiceThread::run_service()
  [22] ConcurrentGCThread::run()
  [23] Thread::call_run()
  [24] thread_native_entry(Thread*)
  [25] start_thread

--- 1081559624 ns (0.07%), 108 samples
  [ 0] copy_user_generic_string_[k]
  [ 1] zfs_uiomove_iter?[zfs]_[k]
  [ 2] zfs_uiomove?[zfs]_[k]
  [ 3] dmu_read_uio_dnode?[zfs]_[k]
  [ 4] dmu_read_uio_dbuf?[zfs]_[k]
  [ 5] mappedread?[zfs]_[k]
  [ 6] zfs_read?[zfs]_[k]
  [ 7] zpl_iter_read?[zfs]_[k]
  [ 8] new_sync_read_[k]
  [ 9] vfs_read_[k]
  [10] __x64_sys_pread64_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] __libc_pread64
  [14] sun.nio.ch.FileDispatcherImpl.pread0
  [15] sun.nio.ch.FileDispatcherImpl.pread
  [16] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [17] sun.nio.ch.IOUtil.read
  [18] sun.nio.ch.IOUtil.read
  [19] sun.nio.ch.FileChannelImpl.readInternal
  [20] sun.nio.ch.FileChannelImpl.read
  [21] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [22] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [23] jdk.nio.zipfs.ZipFileSystem$2.fill
  [24] java.util.zip.InflaterInputStream.read
  [25] java.io.InputStream.readNBytes
  [26] java.io.InputStream.readAllBytes
  [27] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [28] com.scalamandra.ZipLib$$anon$1$$Lambda$65.0x0000000800d25648.apply
  [29] cats.effect.IOFiber.$anonfun$8
  [30] cats.effect.IOFiber$$Lambda$202.0x0000000800da9800.apply
  [31] cats.effect.unsafe.WorkerThread.blockOn
  [32] scala.concurrent.package$.blocking
  [33] cats.effect.IOFiber.runLoop
  [34] cats.effect.IOFiber.execR
  [35] cats.effect.IOFiber.run
  [36] cats.effect.unsafe.WorkerThread.run

--- 1061491105 ns (0.07%), 106 samples
  [ 0] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 1] dmu_read_uio_dnode?[zfs]_[k]
  [ 2] dmu_read_uio_dbuf?[zfs]_[k]
  [ 3] mappedread?[zfs]_[k]
  [ 4] zfs_read?[zfs]_[k]
  [ 5] zpl_iter_read?[zfs]_[k]
  [ 6] new_sync_read_[k]
  [ 7] vfs_read_[k]
  [ 8] __x64_sys_pread64_[k]
  [ 9] do_syscall_64_[k]
  [10] entry_SYSCALL_64_after_hwframe_[k]
  [11] __libc_pread64
  [12] sun.nio.ch.FileDispatcherImpl.pread0
  [13] sun.nio.ch.FileDispatcherImpl.pread
  [14] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [15] sun.nio.ch.IOUtil.read
  [16] sun.nio.ch.IOUtil.read
  [17] sun.nio.ch.FileChannelImpl.readInternal
  [18] sun.nio.ch.FileChannelImpl.read
  [19] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [20] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [21] jdk.nio.zipfs.ZipFileSystem$2.fill
  [22] java.util.zip.InflaterInputStream.read
  [23] java.io.InputStream.readNBytes
  [24] java.io.InputStream.readAllBytes
  [25] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [26] com.scalamandra.ZipLib$$anon$1$$Lambda$65.0x0000000800d25648.apply
  [27] cats.effect.IOFiber.$anonfun$8
  [28] cats.effect.IOFiber$$Lambda$202.0x0000000800da9800.apply
  [29] cats.effect.unsafe.WorkerThread.blockOn
  [30] scala.concurrent.package$.blocking
  [31] cats.effect.IOFiber.runLoop
  [32] cats.effect.IOFiber.execR
  [33] cats.effect.IOFiber.run
  [34] cats.effect.unsafe.WorkerThread.run

--- 1041777227 ns (0.07%), 104 samples
  [ 0] kmem_cache_alloc_[k]
  [ 1] spl_kmem_cache_alloc?[spl]_[k]
  [ 2] zio_create?[zfs]_[k]
  [ 3] zio_null?[zfs]_[k]
  [ 4] zio_root?[zfs]_[k]
  [ 5] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 6] dmu_read_uio_dnode?[zfs]_[k]
  [ 7] dmu_read_uio_dbuf?[zfs]_[k]
  [ 8] mappedread?[zfs]_[k]
  [ 9] zfs_read?[zfs]_[k]
  [10] zpl_iter_read?[zfs]_[k]
  [11] new_sync_read_[k]
  [12] vfs_read_[k]
  [13] __x64_sys_pread64_[k]
  [14] do_syscall_64_[k]
  [15] entry_SYSCALL_64_after_hwframe_[k]
  [16] __libc_pread64
  [17] sun.nio.ch.FileDispatcherImpl.pread0
  [18] sun.nio.ch.FileDispatcherImpl.pread
  [19] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [20] sun.nio.ch.IOUtil.read
  [21] sun.nio.ch.IOUtil.read
  [22] sun.nio.ch.FileChannelImpl.readInternal
  [23] sun.nio.ch.FileChannelImpl.read
  [24] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [25] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [26] jdk.nio.zipfs.ZipFileSystem$2.fill
  [27] java.util.zip.InflaterInputStream.read
  [28] java.io.InputStream.readNBytes
  [29] java.io.InputStream.readAllBytes
  [30] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [31] com.scalamandra.ZipLib$$anon$1$$Lambda$65.0x0000000800d25648.apply
  [32] cats.effect.IOFiber.$anonfun$8
  [33] cats.effect.IOFiber$$Lambda$202.0x0000000800da9800.apply
  [34] cats.effect.unsafe.WorkerThread.blockOn
  [35] scala.concurrent.package$.blocking
  [36] cats.effect.IOFiber.runLoop
  [37] cats.effect.IOFiber.execR
  [38] cats.effect.IOFiber.run
  [39] cats.effect.unsafe.WorkerThread.run

--- 1041671850 ns (0.07%), 104 samples
  [ 0] zio_wait?[zfs]_[k]
  [ 1] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 2] dmu_read_uio_dnode?[zfs]_[k]
  [ 3] dmu_read_uio_dbuf?[zfs]_[k]
  [ 4] mappedread?[zfs]_[k]
  [ 5] zfs_read?[zfs]_[k]
  [ 6] zpl_iter_read?[zfs]_[k]
  [ 7] new_sync_read_[k]
  [ 8] vfs_read_[k]
  [ 9] __x64_sys_pread64_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] __libc_pread64
  [13] sun.nio.ch.FileDispatcherImpl.pread0
  [14] sun.nio.ch.FileDispatcherImpl.pread
  [15] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [16] sun.nio.ch.IOUtil.read
  [17] sun.nio.ch.IOUtil.read
  [18] sun.nio.ch.FileChannelImpl.readInternal
  [19] sun.nio.ch.FileChannelImpl.read
  [20] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [21] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [22] jdk.nio.zipfs.ZipFileSystem$2.fill
  [23] java.util.zip.InflaterInputStream.read
  [24] java.io.InputStream.readNBytes
  [25] java.io.InputStream.readAllBytes
  [26] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [27] com.scalamandra.ZipLib$$anon$1$$Lambda$65.0x0000000800d25648.apply
  [28] cats.effect.IOFiber.$anonfun$8
  [29] cats.effect.IOFiber$$Lambda$202.0x0000000800da9800.apply
  [30] cats.effect.unsafe.WorkerThread.blockOn
  [31] scala.concurrent.package$.blocking
  [32] cats.effect.IOFiber.runLoop
  [33] cats.effect.IOFiber.execR
  [34] cats.effect.IOFiber.run
  [35] cats.effect.unsafe.WorkerThread.run

--- 1041028098 ns (0.07%), 104 samples
  [ 0] clear_page_rep_[k]
  [ 1] get_page_from_freelist_[k]
  [ 2] __alloc_pages_[k]
  [ 3] __folio_alloc_[k]
  [ 4] vma_alloc_folio_[k]
  [ 5] do_anonymous_page_[k]
  [ 6] handle_pte_fault_[k]
  [ 7] __handle_mm_fault_[k]
  [ 8] handle_mm_fault_[k]
  [ 9] do_user_addr_fault_[k]
  [10] exc_page_fault_[k]
  [11] asm_exc_page_fault_[k]
  [12] __memcpy_sse2_unaligned_erms
  [13] G1ParScanThreadState::steal_and_trim_queue(GenericTaskQueueSet<OverflowTaskQueue<ScannerTask, (MEMFLAGS)5, 131072u>, (MEMFLAGS)5>*)
  [14] G1ParEvacuateFollowersClosure::do_void()
  [15] G1EvacuateRegionsTask::evacuate_live_objects(G1ParScanThreadState*, unsigned int)
  [16] G1EvacuateRegionsBaseTask::work(unsigned int)
  [17] GangWorker::loop()
  [18] GangWorker::run()
  [19] Thread::call_run()
  [20] thread_native_entry(Thread*)
  [21] start_thread

--- 1040620431 ns (0.07%), 104 samples
  [ 0] java.io.InputStream.readNBytes
  [ 1] java.io.InputStream.readAllBytes
  [ 2] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [ 3] com.scalamandra.ZipLib$$anon$1$$Lambda$65.0x0000000800d25648.apply
  [ 4] cats.effect.IOFiber.$anonfun$8
  [ 5] cats.effect.IOFiber$$Lambda$202.0x0000000800da9800.apply
  [ 6] cats.effect.unsafe.WorkerThread.blockOn
  [ 7] scala.concurrent.package$.blocking
  [ 8] cats.effect.IOFiber.runLoop
  [ 9] cats.effect.IOFiber.execR
  [10] cats.effect.IOFiber.run
  [11] cats.effect.unsafe.WorkerThread.run

--- 1020975793 ns (0.07%), 102 samples
  [ 0] _raw_spin_unlock_irqrestore_[k]
  [ 1] __pagevec_lru_add_[k]
  [ 2] folio_add_lru_[k]
  [ 3] lru_cache_add_[k]
  [ 4] lru_cache_add_inactive_or_unevictable_[k]
  [ 5] do_anonymous_page_[k]
  [ 6] handle_pte_fault_[k]
  [ 7] __handle_mm_fault_[k]
  [ 8] handle_mm_fault_[k]
  [ 9] do_user_addr_fault_[k]
  [10] exc_page_fault_[k]
  [11] asm_exc_page_fault_[k]
  [12] java.io.InputStream.readNBytes
  [13] java.io.InputStream.readAllBytes
  [14] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [15] com.scalamandra.ZipLib$$anon$1$$Lambda$65.0x0000000800d25648.apply
  [16] cats.effect.IOFiber.$anonfun$8
  [17] cats.effect.IOFiber$$Lambda$202.0x0000000800da9800.apply
  [18] cats.effect.unsafe.WorkerThread.blockOn
  [19] scala.concurrent.package$.blocking
  [20] cats.effect.IOFiber.runLoop
  [21] cats.effect.IOFiber.execR
  [22] cats.effect.IOFiber.run
  [23] cats.effect.unsafe.WorkerThread.run

--- 1000193463 ns (0.07%), 100 samples
  [ 0] void OopOopIterateDispatch<G1CMOopClosure>::Table::oop_oop_iterate<InstanceKlass, narrowOop>(G1CMOopClosure*, oopDesc*, Klass*)
  [ 1] void G1CMTask::process_grey_task_entry<true>(G1TaskQueueEntry)
  [ 2] G1CMTask::do_marking_step(double, bool, bool)
  [ 3] G1CMConcurrentMarkingTask::work(unsigned int)
  [ 4] GangWorker::loop()
  [ 5] GangWorker::run()
  [ 6] Thread::call_run()
  [ 7] thread_native_entry(Thread*)
  [ 8] start_thread

--- 990125674 ns (0.07%), 99 samples
  [ 0] G1RebuildRemSetTask::G1RebuildRemSetHeapRegionClosure::do_heap_region(HeapRegion*)
  [ 1] HeapRegionManager::par_iterate(HeapRegionClosure*, HeapRegionClaimer*, unsigned int) const
  [ 2] G1RebuildRemSetTask::work(unsigned int)
  [ 3] GangWorker::loop()
  [ 4] GangWorker::run()
  [ 5] Thread::call_run()
  [ 6] thread_native_entry(Thread*)
  [ 7] start_thread

--- 981219225 ns (0.07%), 98 samples
  [ 0] kmem_cache_free_[k]
  [ 1] spl_kmem_cache_free?[spl]_[k]
  [ 2] zio_destroy?[zfs]_[k]
  [ 3] zio_wait?[zfs]_[k]
  [ 4] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 5] dmu_read_uio_dnode?[zfs]_[k]
  [ 6] dmu_read_uio_dbuf?[zfs]_[k]
  [ 7] mappedread?[zfs]_[k]
  [ 8] zfs_read?[zfs]_[k]
  [ 9] zpl_iter_read?[zfs]_[k]
  [10] new_sync_read_[k]
  [11] vfs_read_[k]
  [12] __x64_sys_pread64_[k]
  [13] do_syscall_64_[k]
  [14] entry_SYSCALL_64_after_hwframe_[k]
  [15] __libc_pread64
  [16] sun.nio.ch.FileDispatcherImpl.pread0
  [17] sun.nio.ch.FileDispatcherImpl.pread
  [18] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [19] sun.nio.ch.IOUtil.read
  [20] sun.nio.ch.IOUtil.read
  [21] sun.nio.ch.FileChannelImpl.readInternal
  [22] sun.nio.ch.FileChannelImpl.read
  [23] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [24] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [25] jdk.nio.zipfs.ZipFileSystem$2.fill
  [26] java.util.zip.InflaterInputStream.read
  [27] java.io.InputStream.readNBytes
  [28] java.io.InputStream.readAllBytes
  [29] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [30] com.scalamandra.ZipLib$$anon$1$$Lambda$65.0x0000000800d25648.apply
  [31] cats.effect.IOFiber.$anonfun$8
  [32] cats.effect.IOFiber$$Lambda$202.0x0000000800da9800.apply
  [33] cats.effect.unsafe.WorkerThread.blockOn
  [34] scala.concurrent.package$.blocking
  [35] cats.effect.IOFiber.runLoop
  [36] cats.effect.IOFiber.execR
  [37] cats.effect.IOFiber.run
  [38] cats.effect.unsafe.WorkerThread.run

--- 980254612 ns (0.07%), 98 samples
  [ 0] java.util.zip.Inflater.inflateBytesBytes
  [ 1] java.util.zip.Inflater.inflate
  [ 2] java.util.zip.InflaterInputStream.read
  [ 3] java.io.InputStream.readNBytes
  [ 4] java.io.InputStream.readAllBytes
  [ 5] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [ 6] com.scalamandra.ZipLib$$anon$1$$Lambda$65.0x0000000800d25648.apply
  [ 7] cats.effect.IOFiber.$anonfun$8
  [ 8] cats.effect.IOFiber$$Lambda$202.0x0000000800da9800.apply
  [ 9] cats.effect.unsafe.WorkerThread.blockOn
  [10] scala.concurrent.package$.blocking
  [11] cats.effect.IOFiber.runLoop
  [12] cats.effect.IOFiber.execR
  [13] cats.effect.IOFiber.run
  [14] cats.effect.unsafe.WorkerThread.run

--- 970900953 ns (0.07%), 97 samples
  [ 0] do_user_addr_fault_[k]
  [ 1] exc_page_fault_[k]
  [ 2] asm_exc_page_fault_[k]
  [ 3] __memset_avx2_unaligned_erms
  [ 4] MemAllocator::allocate() const
  [ 5] TypeArrayKlass::allocate_common(int, bool, JavaThread*)
  [ 6] JVMCIRuntime::new_array_common(JavaThread*, Klass*, int, bool)
  [ 7] java.io.InputStream.readNBytes
  [ 8] java.io.InputStream.readAllBytes
  [ 9] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [10] com.scalamandra.ZipLib$$anon$1$$Lambda$65.0x0000000800d25648.apply
  [11] cats.effect.IOFiber.$anonfun$8
  [12] cats.effect.IOFiber$$Lambda$202.0x0000000800da9800.apply
  [13] cats.effect.unsafe.WorkerThread.blockOn
  [14] scala.concurrent.package$.blocking
  [15] cats.effect.IOFiber.runLoop
  [16] cats.effect.IOFiber.execR
  [17] cats.effect.IOFiber.run
  [18] cats.effect.unsafe.WorkerThread.run

--- 950911656 ns (0.07%), 95 samples
  [ 0] syscall_enter_from_user_mode_[k]
  [ 1] do_syscall_64_[k]
  [ 2] entry_SYSCALL_64_after_hwframe_[k]
  [ 3] __libc_pread64
  [ 4] sun.nio.ch.FileDispatcherImpl.pread0
  [ 5] sun.nio.ch.FileDispatcherImpl.pread
  [ 6] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [ 7] sun.nio.ch.IOUtil.read
  [ 8] sun.nio.ch.IOUtil.read
  [ 9] sun.nio.ch.FileChannelImpl.readInternal
  [10] sun.nio.ch.FileChannelImpl.read
  [11] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [12] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [13] jdk.nio.zipfs.ZipFileSystem$2.fill
  [14] java.util.zip.InflaterInputStream.read
  [15] java.io.InputStream.readNBytes
  [16] java.io.InputStream.readAllBytes
  [17] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [18] com.scalamandra.ZipLib$$anon$1$$Lambda$65.0x0000000800d25648.apply
  [19] cats.effect.IOFiber.$anonfun$8
  [20] cats.effect.IOFiber$$Lambda$202.0x0000000800da9800.apply
  [21] cats.effect.unsafe.WorkerThread.blockOn
  [22] scala.concurrent.package$.blocking
  [23] cats.effect.IOFiber.runLoop
  [24] cats.effect.IOFiber.execR
  [25] cats.effect.IOFiber.run
  [26] cats.effect.unsafe.WorkerThread.run

--- 930968221 ns (0.06%), 93 samples
  [ 0] java.lang.System.arraycopy
  [ 1] java.io.InputStream.readNBytes
  [ 2] java.io.InputStream.readAllBytes
  [ 3] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [ 4] com.scalamandra.ZipLib$$anon$1$$Lambda$65.0x0000000800d25648.apply
  [ 5] cats.effect.IOFiber.$anonfun$8
  [ 6] cats.effect.IOFiber$$Lambda$202.0x0000000800da9800.apply
  [ 7] cats.effect.unsafe.WorkerThread.blockOn
  [ 8] scala.concurrent.package$.blocking
  [ 9] cats.effect.IOFiber.runLoop
  [10] cats.effect.IOFiber.execR
  [11] cats.effect.IOFiber.run
  [12] cats.effect.unsafe.WorkerThread.run

--- 920126270 ns (0.06%), 92 samples
  [ 0] void OopOopIterateDispatch<G1CMOopClosure>::Table::oop_oop_iterate<ObjArrayKlass, narrowOop>(G1CMOopClosure*, oopDesc*, Klass*)
  [ 1] void G1CMTask::process_grey_task_entry<true>(G1TaskQueueEntry)
  [ 2] G1CMTask::do_marking_step(double, bool, bool)
  [ 3] G1CMConcurrentMarkingTask::work(unsigned int)
  [ 4] GangWorker::loop()
  [ 5] GangWorker::run()
  [ 6] Thread::call_run()
  [ 7] thread_native_entry(Thread*)
  [ 8] start_thread

--- 880938560 ns (0.06%), 88 samples
  [ 0] dbuf_read?[zfs]_[k]
  [ 1] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 2] dmu_read_uio_dnode?[zfs]_[k]
  [ 3] dmu_read_uio_dbuf?[zfs]_[k]
  [ 4] mappedread?[zfs]_[k]
  [ 5] zfs_read?[zfs]_[k]
  [ 6] zpl_iter_read?[zfs]_[k]
  [ 7] new_sync_read_[k]
  [ 8] vfs_read_[k]
  [ 9] __x64_sys_pread64_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] __libc_pread64
  [13] sun.nio.ch.FileDispatcherImpl.pread0
  [14] sun.nio.ch.FileDispatcherImpl.pread
  [15] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [16] sun.nio.ch.IOUtil.read
  [17] sun.nio.ch.IOUtil.read
  [18] sun.nio.ch.FileChannelImpl.readInternal
  [19] sun.nio.ch.FileChannelImpl.read
  [20] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [21] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [22] jdk.nio.zipfs.ZipFileSystem$2.fill
  [23] java.util.zip.InflaterInputStream.read
  [24] java.io.InputStream.readNBytes
  [25] java.io.InputStream.readAllBytes
  [26] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [27] com.scalamandra.ZipLib$$anon$1$$Lambda$65.0x0000000800d25648.apply
  [28] cats.effect.IOFiber.$anonfun$8
  [29] cats.effect.IOFiber$$Lambda$202.0x0000000800da9800.apply
  [30] cats.effect.unsafe.WorkerThread.blockOn
  [31] scala.concurrent.package$.blocking
  [32] cats.effect.IOFiber.runLoop
  [33] cats.effect.IOFiber.execR
  [34] cats.effect.IOFiber.run
  [35] cats.effect.unsafe.WorkerThread.run

--- 880145508 ns (0.06%), 88 samples
  [ 0] jni_ReleasePrimitiveArrayCritical
  [ 1] Java_java_util_zip_Inflater_inflateBytesBytes
  [ 2] java.util.zip.Inflater.inflateBytesBytes
  [ 3] java.util.zip.Inflater.inflate
  [ 4] java.util.zip.InflaterInputStream.read
  [ 5] java.io.InputStream.readNBytes
  [ 6] java.io.InputStream.readAllBytes
  [ 7] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [ 8] com.scalamandra.ZipLib$$anon$1$$Lambda$65.0x0000000800d25648.apply
  [ 9] cats.effect.IOFiber.$anonfun$8
  [10] cats.effect.IOFiber$$Lambda$202.0x0000000800da9800.apply
  [11] cats.effect.unsafe.WorkerThread.blockOn
  [12] scala.concurrent.package$.blocking
  [13] cats.effect.IOFiber.runLoop
  [14] cats.effect.IOFiber.execR
  [15] cats.effect.IOFiber.run
  [16] cats.effect.unsafe.WorkerThread.run

--- 871318547 ns (0.06%), 87 samples
  [ 0] __kmalloc_node_[k]
  [ 1] spl_kmem_alloc_impl?[spl]_[k]
  [ 2] spl_kmem_zalloc?[spl]_[k]
  [ 3] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 4] dmu_read_uio_dnode?[zfs]_[k]
  [ 5] dmu_read_uio_dbuf?[zfs]_[k]
  [ 6] mappedread?[zfs]_[k]
  [ 7] zfs_read?[zfs]_[k]
  [ 8] zpl_iter_read?[zfs]_[k]
  [ 9] new_sync_read_[k]
  [10] vfs_read_[k]
  [11] __x64_sys_pread64_[k]
  [12] do_syscall_64_[k]
  [13] entry_SYSCALL_64_after_hwframe_[k]
  [14] __libc_pread64
  [15] sun.nio.ch.FileDispatcherImpl.pread0
  [16] sun.nio.ch.FileDispatcherImpl.pread
  [17] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [18] sun.nio.ch.IOUtil.read
  [19] sun.nio.ch.IOUtil.read
  [20] sun.nio.ch.FileChannelImpl.readInternal
  [21] sun.nio.ch.FileChannelImpl.read
  [22] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [23] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [24] jdk.nio.zipfs.ZipFileSystem$2.fill
  [25] java.util.zip.InflaterInputStream.read
  [26] java.io.InputStream.readNBytes
  [27] java.io.InputStream.readAllBytes
  [28] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [29] com.scalamandra.ZipLib$$anon$1$$Lambda$65.0x0000000800d25648.apply
  [30] cats.effect.IOFiber.$anonfun$8
  [31] cats.effect.IOFiber$$Lambda$202.0x0000000800da9800.apply
  [32] cats.effect.unsafe.WorkerThread.blockOn
  [33] scala.concurrent.package$.blocking
  [34] cats.effect.IOFiber.runLoop
  [35] cats.effect.IOFiber.execR
  [36] cats.effect.IOFiber.run
  [37] cats.effect.unsafe.WorkerThread.run

--- 870596116 ns (0.06%), 87 samples
  [ 0] dbuf_hold_impl?[zfs]_[k]
  [ 1] dbuf_hold_level?[zfs]_[k]
  [ 2] dbuf_hold?[zfs]_[k]
  [ 3] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 4] dmu_read_uio_dnode?[zfs]_[k]
  [ 5] dmu_read_uio_dbuf?[zfs]_[k]
  [ 6] mappedread?[zfs]_[k]
  [ 7] zfs_read?[zfs]_[k]
  [ 8] zpl_iter_read?[zfs]_[k]
  [ 9] new_sync_read_[k]
  [10] vfs_read_[k]
  [11] __x64_sys_pread64_[k]
  [12] do_syscall_64_[k]
  [13] entry_SYSCALL_64_after_hwframe_[k]
  [14] __libc_pread64
  [15] sun.nio.ch.FileDispatcherImpl.pread0
  [16] sun.nio.ch.FileDispatcherImpl.pread
  [17] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [18] sun.nio.ch.IOUtil.read
  [19] sun.nio.ch.IOUtil.read
  [20] sun.nio.ch.FileChannelImpl.readInternal
  [21] sun.nio.ch.FileChannelImpl.read
  [22] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [23] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [24] jdk.nio.zipfs.ZipFileSystem$2.fill
  [25] java.util.zip.InflaterInputStream.read
  [26] java.io.InputStream.readNBytes
  [27] java.io.InputStream.readAllBytes
  [28] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [29] com.scalamandra.ZipLib$$anon$1$$Lambda$65.0x0000000800d25648.apply
  [30] cats.effect.IOFiber.$anonfun$8
  [31] cats.effect.IOFiber$$Lambda$202.0x0000000800da9800.apply
  [32] cats.effect.unsafe.WorkerThread.blockOn
  [33] scala.concurrent.package$.blocking
  [34] cats.effect.IOFiber.runLoop
  [35] cats.effect.IOFiber.execR
  [36] cats.effect.IOFiber.run
  [37] cats.effect.unsafe.WorkerThread.run

--- 860228821 ns (0.06%), 86 samples
  [ 0] __libc_pread64
  [ 1] sun.nio.ch.FileDispatcherImpl.pread0
  [ 2] sun.nio.ch.FileDispatcherImpl.pread
  [ 3] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [ 4] sun.nio.ch.IOUtil.read
  [ 5] sun.nio.ch.IOUtil.read
  [ 6] sun.nio.ch.FileChannelImpl.readInternal
  [ 7] sun.nio.ch.FileChannelImpl.read
  [ 8] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [ 9] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [10] jdk.nio.zipfs.ZipFileSystem$2.fill
  [11] java.util.zip.InflaterInputStream.read
  [12] java.io.InputStream.readNBytes
  [13] java.io.InputStream.readAllBytes
  [14] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [15] com.scalamandra.ZipLib$$anon$1$$Lambda$65.0x0000000800d25648.apply
  [16] cats.effect.IOFiber.$anonfun$8
  [17] cats.effect.IOFiber$$Lambda$202.0x0000000800da9800.apply
  [18] cats.effect.unsafe.WorkerThread.blockOn
  [19] scala.concurrent.package$.blocking
  [20] cats.effect.IOFiber.runLoop
  [21] cats.effect.IOFiber.execR
  [22] cats.effect.IOFiber.run
  [23] cats.effect.unsafe.WorkerThread.run

--- 850667141 ns (0.06%), 85 samples
  [ 0] do_user_addr_fault_[k]
  [ 1] exc_page_fault_[k]
  [ 2] asm_exc_page_fault_[k]
  [ 3] __memset_avx2_unaligned_erms
  [ 4] MemAllocator::allocate() const
  [ 5] TypeArrayKlass::allocate_common(int, bool, JavaThread*)
  [ 6] JVMCIRuntime::new_array_common(JavaThread*, Klass*, int, bool)
  [ 7] java.nio.charset.Charset.forName
  [ 8] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [ 9] com.scalamandra.ZipLib$$anon$1$$Lambda$65.0x0000000800d25648.apply
  [10] cats.effect.IOFiber.$anonfun$8
  [11] cats.effect.IOFiber$$Lambda$202.0x0000000800da9800.apply
  [12] cats.effect.unsafe.WorkerThread.blockOn
  [13] scala.concurrent.package$.blocking
  [14] cats.effect.IOFiber.runLoop
  [15] cats.effect.IOFiber.execR
  [16] cats.effect.IOFiber.run
  [17] cats.effect.unsafe.WorkerThread.run

--- 839986166 ns (0.06%), 84 samples
  [ 0] HeapRegionManager::par_iterate(HeapRegionClosure*, HeapRegionClaimer*, unsigned int) const
  [ 1] G1PrepareEvacuationTask::work(unsigned int)
  [ 2] GangWorker::loop()
  [ 3] GangWorker::run()
  [ 4] Thread::call_run()
  [ 5] thread_native_entry(Thread*)
  [ 6] start_thread

--- 821291484 ns (0.06%), 82 samples
  [ 0] zio_done?[zfs]_[k]
  [ 1] zio_wait?[zfs]_[k]
  [ 2] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 3] dmu_read_uio_dnode?[zfs]_[k]
  [ 4] dmu_read_uio_dbuf?[zfs]_[k]
  [ 5] mappedread?[zfs]_[k]
  [ 6] zfs_read?[zfs]_[k]
  [ 7] zpl_iter_read?[zfs]_[k]
  [ 8] new_sync_read_[k]
  [ 9] vfs_read_[k]
  [10] __x64_sys_pread64_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] __libc_pread64
  [14] sun.nio.ch.FileDispatcherImpl.pread0
  [15] sun.nio.ch.FileDispatcherImpl.pread
  [16] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [17] sun.nio.ch.IOUtil.read
  [18] sun.nio.ch.IOUtil.read
  [19] sun.nio.ch.FileChannelImpl.readInternal
  [20] sun.nio.ch.FileChannelImpl.read
  [21] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [22] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [23] jdk.nio.zipfs.ZipFileSystem$2.fill
  [24] java.util.zip.InflaterInputStream.read
  [25] java.io.InputStream.readNBytes
  [26] java.io.InputStream.readAllBytes
  [27] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [28] com.scalamandra.ZipLib$$anon$1$$Lambda$65.0x0000000800d25648.apply
  [29] cats.effect.IOFiber.$anonfun$8
  [30] cats.effect.IOFiber$$Lambda$202.0x0000000800da9800.apply
  [31] cats.effect.unsafe.WorkerThread.blockOn
  [32] scala.concurrent.package$.blocking
  [33] cats.effect.IOFiber.runLoop
  [34] cats.effect.IOFiber.execR
  [35] cats.effect.IOFiber.run
  [36] cats.effect.unsafe.WorkerThread.run

--- 819393800 ns (0.06%), 82 samples
  [ 0] void OopOopIterateDispatch<G1CMOopClosure>::Table::oop_oop_iterate<InstanceKlass, narrowOop>(G1CMOopClosure*, oopDesc*, Klass*)
  [ 1] void G1CMTask::process_grey_task_entry<true>(G1TaskQueueEntry)
  [ 2] G1CMTask::drain_local_queue(bool) [clone .part.0] [clone .constprop.1]
  [ 3] G1CMTask::do_marking_step(double, bool, bool)
  [ 4] G1CMConcurrentMarkingTask::work(unsigned int)
  [ 5] GangWorker::loop()
  [ 6] GangWorker::run()
  [ 7] Thread::call_run()
  [ 8] thread_native_entry(Thread*)
  [ 9] start_thread

--- 791415242 ns (0.05%), 79 samples
  [ 0] dbuf_find?[zfs]_[k]
  [ 1] dbuf_hold_impl?[zfs]_[k]
  [ 2] dbuf_hold_level?[zfs]_[k]
  [ 3] dbuf_hold?[zfs]_[k]
  [ 4] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 5] dmu_read_uio_dnode?[zfs]_[k]
  [ 6] dmu_read_uio_dbuf?[zfs]_[k]
  [ 7] mappedread?[zfs]_[k]
  [ 8] zfs_read?[zfs]_[k]
  [ 9] zpl_iter_read?[zfs]_[k]
  [10] new_sync_read_[k]
  [11] vfs_read_[k]
  [12] __x64_sys_pread64_[k]
  [13] do_syscall_64_[k]
  [14] entry_SYSCALL_64_after_hwframe_[k]
  [15] __libc_pread64
  [16] sun.nio.ch.FileDispatcherImpl.pread0
  [17] sun.nio.ch.FileDispatcherImpl.pread
  [18] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [19] sun.nio.ch.IOUtil.read
  [20] sun.nio.ch.IOUtil.read
  [21] sun.nio.ch.FileChannelImpl.readInternal
  [22] sun.nio.ch.FileChannelImpl.read
  [23] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [24] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [25] jdk.nio.zipfs.ZipFileSystem$2.fill
  [26] java.util.zip.InflaterInputStream.read
  [27] java.io.InputStream.readNBytes
  [28] java.io.InputStream.readAllBytes
  [29] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [30] com.scalamandra.ZipLib$$anon$1$$Lambda$65.0x0000000800d25648.apply
  [31] cats.effect.IOFiber.$anonfun$8
  [32] cats.effect.IOFiber$$Lambda$202.0x0000000800da9800.apply
  [33] cats.effect.unsafe.WorkerThread.blockOn
  [34] scala.concurrent.package$.blocking
  [35] cats.effect.IOFiber.runLoop
  [36] cats.effect.IOFiber.execR
  [37] cats.effect.IOFiber.run
  [38] cats.effect.unsafe.WorkerThread.run

--- 790968224 ns (0.05%), 79 samples
  [ 0] dmu_zfetch_prepare?[zfs]_[k]
  [ 1] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 2] dmu_read_uio_dnode?[zfs]_[k]
  [ 3] dmu_read_uio_dbuf?[zfs]_[k]
  [ 4] mappedread?[zfs]_[k]
  [ 5] zfs_read?[zfs]_[k]
  [ 6] zpl_iter_read?[zfs]_[k]
  [ 7] new_sync_read_[k]
  [ 8] vfs_read_[k]
  [ 9] __x64_sys_pread64_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] __libc_pread64
  [13] sun.nio.ch.FileDispatcherImpl.pread0
  [14] sun.nio.ch.FileDispatcherImpl.pread
  [15] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [16] sun.nio.ch.IOUtil.read
  [17] sun.nio.ch.IOUtil.read
  [18] sun.nio.ch.FileChannelImpl.readInternal
  [19] sun.nio.ch.FileChannelImpl.read
  [20] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [21] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [22] jdk.nio.zipfs.ZipFileSystem$2.fill
  [23] java.util.zip.InflaterInputStream.read
  [24] java.io.InputStream.readNBytes
  [25] java.io.InputStream.readAllBytes
  [26] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [27] com.scalamandra.ZipLib$$anon$1$$Lambda$65.0x0000000800d25648.apply
  [28] cats.effect.IOFiber.$anonfun$8
  [29] cats.effect.IOFiber$$Lambda$202.0x0000000800da9800.apply
  [30] cats.effect.unsafe.WorkerThread.blockOn
  [31] scala.concurrent.package$.blocking
  [32] cats.effect.IOFiber.runLoop
  [33] cats.effect.IOFiber.execR
  [34] cats.effect.IOFiber.run
  [35] cats.effect.unsafe.WorkerThread.run

--- 755942190 ns (0.05%), 75 samples
  [ 0] free_unref_page_list_[k]
  [ 1] release_pages_[k]
  [ 2] free_pages_and_swap_cache_[k]
  [ 3] tlb_batch_pages_flush_[k]
  [ 4] tlb_finish_mmu_[k]
  [ 5] unmap_region_[k]
  [ 6] __do_munmap_[k]
  [ 7] mmap_region_[k]
  [ 8] do_mmap_[k]
  [ 9] vm_mmap_pgoff_[k]
  [10] ksys_mmap_pgoff_[k]
  [11] __x64_sys_mmap_[k]
  [12] do_syscall_64_[k]
  [13] entry_SYSCALL_64_after_hwframe_[k]
  [14] __GI___mmap
  [15] G1PageBasedVirtualSpace::uncommit(unsigned long, unsigned long)
  [16] G1RegionsLargerThanCommitSizeMapper::uncommit_regions(unsigned int, unsigned long)
  [17] HeapRegionManager::uncommit_regions(unsigned int, unsigned int)
  [18] HeapRegionManager::uncommit_inactive_regions(unsigned int)
  [19] G1UncommitRegionTask::execute()
  [20] G1ServiceThread::run_task(G1ServiceTask*)
  [21] G1ServiceThread::run_service()
  [22] ConcurrentGCThread::run()
  [23] Thread::call_run()
  [24] thread_native_entry(Thread*)
  [25] start_thread

--- 750969140 ns (0.05%), 75 samples
  [ 0] mutex_unlock_[k]
  [ 1] dbuf_hold_impl?[zfs]_[k]
  [ 2] dbuf_hold_level?[zfs]_[k]
  [ 3] dbuf_hold?[zfs]_[k]
  [ 4] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 5] dmu_read_uio_dnode?[zfs]_[k]
  [ 6] dmu_read_uio_dbuf?[zfs]_[k]
  [ 7] mappedread?[zfs]_[k]
  [ 8] zfs_read?[zfs]_[k]
  [ 9] zpl_iter_read?[zfs]_[k]
  [10] new_sync_read_[k]
  [11] vfs_read_[k]
  [12] __x64_sys_pread64_[k]
  [13] do_syscall_64_[k]
  [14] entry_SYSCALL_64_after_hwframe_[k]
  [15] __libc_pread64
  [16] sun.nio.ch.FileDispatcherImpl.pread0
  [17] sun.nio.ch.FileDispatcherImpl.pread
  [18] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [19] sun.nio.ch.IOUtil.read
  [20] sun.nio.ch.IOUtil.read
  [21] sun.nio.ch.FileChannelImpl.readInternal
  [22] sun.nio.ch.FileChannelImpl.read
  [23] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [24] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [25] jdk.nio.zipfs.ZipFileSystem$2.fill
  [26] java.util.zip.InflaterInputStream.read
  [27] java.io.InputStream.readNBytes
  [28] java.io.InputStream.readAllBytes
  [29] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [30] com.scalamandra.ZipLib$$anon$1$$Lambda$65.0x0000000800d25648.apply
  [31] cats.effect.IOFiber.$anonfun$8
  [32] cats.effect.IOFiber$$Lambda$202.0x0000000800da9800.apply
  [33] cats.effect.unsafe.WorkerThread.blockOn
  [34] scala.concurrent.package$.blocking
  [35] cats.effect.IOFiber.runLoop
  [36] cats.effect.IOFiber.execR
  [37] cats.effect.IOFiber.run
  [38] cats.effect.unsafe.WorkerThread.run

--- 750248430 ns (0.05%), 75 samples
  [ 0] __memset_avx2_unaligned_erms
  [ 1] MemAllocator::allocate() const
  [ 2] TypeArrayKlass::allocate_common(int, bool, JavaThread*)
  [ 3] JVMCIRuntime::new_array_common(JavaThread*, Klass*, int, bool)
  [ 4] java.io.InputStream.readNBytes
  [ 5] java.io.InputStream.readAllBytes
  [ 6] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [ 7] com.scalamandra.ZipLib$$anon$1$$Lambda$65.0x0000000800d25648.apply
  [ 8] cats.effect.IOFiber.$anonfun$8
  [ 9] cats.effect.IOFiber$$Lambda$202.0x0000000800da9800.apply
  [10] cats.effect.unsafe.WorkerThread.blockOn
  [11] scala.concurrent.package$.blocking
  [12] cats.effect.IOFiber.runLoop
  [13] cats.effect.IOFiber.execR
  [14] cats.effect.IOFiber.run
  [15] cats.effect.unsafe.WorkerThread.run

--- 741422432 ns (0.05%), 74 samples
  [ 0] kfree_[k]
  [ 1] spl_kmem_free_impl?[spl]_[k]
  [ 2] spl_kmem_free?[spl]_[k]
  [ 3] dmu_buf_rele_array?[zfs]_[k]
  [ 4] dmu_read_uio_dnode?[zfs]_[k]
  [ 5] dmu_read_uio_dbuf?[zfs]_[k]
  [ 6] mappedread?[zfs]_[k]
  [ 7] zfs_read?[zfs]_[k]
  [ 8] zpl_iter_read?[zfs]_[k]
  [ 9] new_sync_read_[k]
  [10] vfs_read_[k]
  [11] __x64_sys_pread64_[k]
  [12] do_syscall_64_[k]
  [13] entry_SYSCALL_64_after_hwframe_[k]
  [14] __libc_pread64
  [15] sun.nio.ch.FileDispatcherImpl.pread0
  [16] sun.nio.ch.FileDispatcherImpl.pread
  [17] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [18] sun.nio.ch.IOUtil.read
  [19] sun.nio.ch.IOUtil.read
  [20] sun.nio.ch.FileChannelImpl.readInternal
  [21] sun.nio.ch.FileChannelImpl.read
  [22] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [23] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [24] jdk.nio.zipfs.ZipFileSystem$2.fill
  [25] java.util.zip.InflaterInputStream.read
  [26] java.io.InputStream.readNBytes
  [27] java.io.InputStream.readAllBytes
  [28] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [29] com.scalamandra.ZipLib$$anon$1$$Lambda$65.0x0000000800d25648.apply
  [30] cats.effect.IOFiber.$anonfun$8
  [31] cats.effect.IOFiber$$Lambda$202.0x0000000800da9800.apply
  [32] cats.effect.unsafe.WorkerThread.blockOn
  [33] scala.concurrent.package$.blocking
  [34] cats.effect.IOFiber.runLoop
  [35] cats.effect.IOFiber.execR
  [36] cats.effect.IOFiber.run
  [37] cats.effect.unsafe.WorkerThread.run

--- 740811005 ns (0.05%), 74 samples
  [ 0] mutex_unlock_[k]
  [ 1] zio_wait?[zfs]_[k]
  [ 2] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 3] dmu_read_uio_dnode?[zfs]_[k]
  [ 4] dmu_read_uio_dbuf?[zfs]_[k]
  [ 5] mappedread?[zfs]_[k]
  [ 6] zfs_read?[zfs]_[k]
  [ 7] zpl_iter_read?[zfs]_[k]
  [ 8] new_sync_read_[k]
  [ 9] vfs_read_[k]
  [10] __x64_sys_pread64_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] __libc_pread64
  [14] sun.nio.ch.FileDispatcherImpl.pread0
  [15] sun.nio.ch.FileDispatcherImpl.pread
  [16] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [17] sun.nio.ch.IOUtil.read
  [18] sun.nio.ch.IOUtil.read
  [19] sun.nio.ch.FileChannelImpl.readInternal
  [20] sun.nio.ch.FileChannelImpl.read
  [21] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [22] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [23] jdk.nio.zipfs.ZipFileSystem$2.fill
  [24] java.util.zip.InflaterInputStream.read
  [25] java.io.InputStream.readNBytes
  [26] java.io.InputStream.readAllBytes
  [27] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [28] com.scalamandra.ZipLib$$anon$1$$Lambda$65.0x0000000800d25648.apply
  [29] cats.effect.IOFiber.$anonfun$8
  [30] cats.effect.IOFiber$$Lambda$202.0x0000000800da9800.apply
  [31] cats.effect.unsafe.WorkerThread.blockOn
  [32] scala.concurrent.package$.blocking
  [33] cats.effect.IOFiber.runLoop
  [34] cats.effect.IOFiber.execR
  [35] cats.effect.IOFiber.run
  [36] cats.effect.unsafe.WorkerThread.run

--- 731935158 ns (0.05%), 73 samples
  [ 0] _raw_spin_unlock_irqrestore_[k]
  [ 1] try_to_wake_up_[k]
  [ 2] wake_up_q_[k]
  [ 3] futex_wake_[k]
  [ 4] do_futex_[k]
  [ 5] __x64_sys_futex_[k]
  [ 6] do_syscall_64_[k]
  [ 7] entry_SYSCALL_64_after_hwframe_[k]
  [ 8] pthread_cond_signal@@GLIBC_2.3.2
  [ 9] jdk.internal.misc.Unsafe.unpark
  [10] java.util.concurrent.locks.LockSupport.unpark
  [11] java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext
  [12] java.util.concurrent.locks.AbstractQueuedSynchronizer.release
  [13] java.util.concurrent.locks.ReentrantLock.unlock
  [14] java.util.concurrent.ArrayBlockingQueue.offer
  [15] cats.effect.IOPlatform.unsafeRunTimed$$anonfun$1
  [16] cats.effect.IOPlatform$$Lambda$144.0x0000000800d9a830.applyVoid
  [17] scala.runtime.function.JProcedure1.apply
  [18] scala.runtime.function.JProcedure1.apply
  [19] cats.effect.IO.unsafeRunAsync$$anonfun$3
  [20] cats.effect.IO$$Lambda$165.0x0000000800da0000.applyVoid
  [21] scala.runtime.function.JProcedure1.apply
  [22] scala.runtime.function.JProcedure1.apply
  [23] cats.effect.IO.$anonfun$6$$anonfun$3
  [24] cats.effect.IO$$Lambda$222.0x0000000800db1768.applyVoid
  [25] scala.runtime.function.JProcedure1.apply
  [26] scala.runtime.function.JProcedure1.apply
  [27] cats.effect.kernel.Outcome.fold
  [28] cats.effect.kernel.Outcome.fold$
  [29] cats.effect.kernel.Outcome$Succeeded.fold
  [30] cats.effect.IO.$anonfun$6
  [31] cats.effect.IO$$Lambda$176.0x0000000800da2be8.applyVoid
  [32] scala.runtime.function.JProcedure1.apply
  [33] scala.runtime.function.JProcedure1.apply
  [34] cats.effect.CallbackStack.apply
  [35] cats.effect.IOFiber.done
  [36] cats.effect.IOFiber.runTerminusSuccessK
  [37] cats.effect.IOFiber.succeeded
  [38] cats.effect.IOFiber.runLoop
  [39] cats.effect.IOFiber.execR
  [40] cats.effect.IOFiber.run
  [41] cats.effect.unsafe.WorkerThread.run

--- 721099281 ns (0.05%), 72 samples
  [ 0] __fget_light_[k]
  [ 1] __fdget_[k]
  [ 2] __x64_sys_pread64_[k]
  [ 3] do_syscall_64_[k]
  [ 4] entry_SYSCALL_64_after_hwframe_[k]
  [ 5] __libc_pread64
  [ 6] sun.nio.ch.FileDispatcherImpl.pread0
  [ 7] sun.nio.ch.FileDispatcherImpl.pread
  [ 8] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [ 9] sun.nio.ch.IOUtil.read
  [10] sun.nio.ch.IOUtil.read
  [11] sun.nio.ch.FileChannelImpl.readInternal
  [12] sun.nio.ch.FileChannelImpl.read
  [13] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [14] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [15] jdk.nio.zipfs.ZipFileSystem$2.fill
  [16] java.util.zip.InflaterInputStream.read
  [17] java.io.InputStream.readNBytes
  [18] java.io.InputStream.readAllBytes
  [19] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [20] com.scalamandra.ZipLib$$anon$1$$Lambda$65.0x0000000800d25648.apply
  [21] cats.effect.IOFiber.$anonfun$8
  [22] cats.effect.IOFiber$$Lambda$202.0x0000000800da9800.apply
  [23] cats.effect.unsafe.WorkerThread.blockOn
  [24] scala.concurrent.package$.blocking
  [25] cats.effect.IOFiber.runLoop
  [26] cats.effect.IOFiber.execR
  [27] cats.effect.IOFiber.run
  [28] cats.effect.unsafe.WorkerThread.run

--- 710511905 ns (0.05%), 71 samples
  [ 0] __handle_mm_fault_[k]
  [ 1] handle_mm_fault_[k]
  [ 2] do_user_addr_fault_[k]
  [ 3] exc_page_fault_[k]
  [ 4] asm_exc_page_fault_[k]
  [ 5] java.io.InputStream.readNBytes
  [ 6] java.io.InputStream.readAllBytes
  [ 7] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [ 8] com.scalamandra.ZipLib$$anon$1$$Lambda$65.0x0000000800d25648.apply
  [ 9] cats.effect.IOFiber.$anonfun$8
  [10] cats.effect.IOFiber$$Lambda$202.0x0000000800da9800.apply
  [11] cats.effect.unsafe.WorkerThread.blockOn
  [12] scala.concurrent.package$.blocking
  [13] cats.effect.IOFiber.runLoop
  [14] cats.effect.IOFiber.execR
  [15] cats.effect.IOFiber.run
  [16] cats.effect.unsafe.WorkerThread.run

--- 700522109 ns (0.05%), 70 samples
  [ 0] mutex_unlock_[k]
  [ 1] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 2] dmu_read_uio_dnode?[zfs]_[k]
  [ 3] dmu_read_uio_dbuf?[zfs]_[k]
  [ 4] mappedread?[zfs]_[k]
  [ 5] zfs_read?[zfs]_[k]
  [ 6] zpl_iter_read?[zfs]_[k]
  [ 7] new_sync_read_[k]
  [ 8] vfs_read_[k]
  [ 9] __x64_sys_pread64_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] __libc_pread64
  [13] sun.nio.ch.FileDispatcherImpl.pread0
  [14] sun.nio.ch.FileDispatcherImpl.pread
  [15] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [16] sun.nio.ch.IOUtil.read
  [17] sun.nio.ch.IOUtil.read
  [18] sun.nio.ch.FileChannelImpl.readInternal
  [19] sun.nio.ch.FileChannelImpl.read
  [20] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [21] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [22] jdk.nio.zipfs.ZipFileSystem$2.fill
  [23] java.util.zip.InflaterInputStream.read
  [24] java.io.InputStream.readNBytes
  [25] java.io.InputStream.readAllBytes
  [26] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [27] com.scalamandra.ZipLib$$anon$1$$Lambda$65.0x0000000800d25648.apply
  [28] cats.effect.IOFiber.$anonfun$8
  [29] cats.effect.IOFiber$$Lambda$202.0x0000000800da9800.apply
  [30] cats.effect.unsafe.WorkerThread.blockOn
  [31] scala.concurrent.package$.blocking
  [32] cats.effect.IOFiber.runLoop
  [33] cats.effect.IOFiber.execR
  [34] cats.effect.IOFiber.run
  [35] cats.effect.unsafe.WorkerThread.run

--- 690420852 ns (0.05%), 69 samples
  [ 0] clear_page_rep_[k]
  [ 1] get_page_from_freelist_[k]
  [ 2] __alloc_pages_[k]
  [ 3] __folio_alloc_[k]
  [ 4] vma_alloc_folio_[k]
  [ 5] do_anonymous_page_[k]
  [ 6] handle_pte_fault_[k]
  [ 7] __handle_mm_fault_[k]
  [ 8] handle_mm_fault_[k]
  [ 9] do_user_addr_fault_[k]
  [10] exc_page_fault_[k]
  [11] asm_exc_page_fault_[k]
  [12] __memcpy_sse2_unaligned_erms
  [13] G1ParEvacuateFollowersClosure::do_void()
  [14] G1EvacuateRegionsTask::evacuate_live_objects(G1ParScanThreadState*, unsigned int)
  [15] G1EvacuateRegionsBaseTask::work(unsigned int)
  [16] GangWorker::loop()
  [17] GangWorker::run()
  [18] Thread::call_run()
  [19] thread_native_entry(Thread*)
  [20] start_thread

--- 680974557 ns (0.05%), 68 samples
  [ 0] vfs_read_[k]
  [ 1] __x64_sys_pread64_[k]
  [ 2] do_syscall_64_[k]
  [ 3] entry_SYSCALL_64_after_hwframe_[k]
  [ 4] __libc_pread64
  [ 5] sun.nio.ch.FileDispatcherImpl.pread0
  [ 6] sun.nio.ch.FileDispatcherImpl.pread
  [ 7] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [ 8] sun.nio.ch.IOUtil.read
  [ 9] sun.nio.ch.IOUtil.read
  [10] sun.nio.ch.FileChannelImpl.readInternal
  [11] sun.nio.ch.FileChannelImpl.read
  [12] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [13] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [14] jdk.nio.zipfs.ZipFileSystem$2.fill
  [15] java.util.zip.InflaterInputStream.read
  [16] java.io.InputStream.readNBytes
  [17] java.io.InputStream.readAllBytes
  [18] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [19] com.scalamandra.ZipLib$$anon$1$$Lambda$65.0x0000000800d25648.apply
  [20] cats.effect.IOFiber.$anonfun$8
  [21] cats.effect.IOFiber$$Lambda$202.0x0000000800da9800.apply
  [22] cats.effect.unsafe.WorkerThread.blockOn
  [23] scala.concurrent.package$.blocking
  [24] cats.effect.IOFiber.runLoop
  [25] cats.effect.IOFiber.execR
  [26] cats.effect.IOFiber.run
  [27] cats.effect.unsafe.WorkerThread.run

--- 680336063 ns (0.05%), 68 samples
  [ 0] CollectedHeap::supports_object_pinning() const
  [ 1] Java_java_util_zip_Inflater_inflateBytesBytes
  [ 2] java.util.zip.Inflater.inflateBytesBytes
  [ 3] java.util.zip.Inflater.inflate
  [ 4] java.util.zip.InflaterInputStream.read
  [ 5] java.io.InputStream.readNBytes
  [ 6] java.io.InputStream.readAllBytes
  [ 7] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [ 8] com.scalamandra.ZipLib$$anon$1$$Lambda$65.0x0000000800d25648.apply
  [ 9] cats.effect.IOFiber.$anonfun$8
  [10] cats.effect.IOFiber$$Lambda$202.0x0000000800da9800.apply
  [11] cats.effect.unsafe.WorkerThread.blockOn
  [12] scala.concurrent.package$.blocking
  [13] cats.effect.IOFiber.runLoop
  [14] cats.effect.IOFiber.execR
  [15] cats.effect.IOFiber.run
  [16] cats.effect.unsafe.WorkerThread.run

--- 679977305 ns (0.05%), 68 samples
  [ 0] void OopOopIterateDispatch<G1RebuildRemSetClosure>::Table::oop_oop_iterate<InstanceKlass, narrowOop>(G1RebuildRemSetClosure*, oopDesc*, Klass*)
  [ 1] G1RebuildRemSetTask::G1RebuildRemSetHeapRegionClosure::do_heap_region(HeapRegion*)
  [ 2] HeapRegionManager::par_iterate(HeapRegionClosure*, HeapRegionClaimer*, unsigned int) const
  [ 3] G1RebuildRemSetTask::work(unsigned int)
  [ 4] GangWorker::loop()
  [ 5] GangWorker::run()
  [ 6] Thread::call_run()
  [ 7] thread_native_entry(Thread*)
  [ 8] start_thread

--- 677591431 ns (0.05%), 68 samples
  [ 0] _raw_spin_unlock_irqrestore_[k]
  [ 1] release_pages_[k]
  [ 2] free_pages_and_swap_cache_[k]
  [ 3] tlb_batch_pages_flush_[k]
  [ 4] tlb_flush_mmu_[k]
  [ 5] zap_pte_range_[k]
  [ 6] zap_pmd_range.isra.0_[k]
  [ 7] unmap_page_range_[k]
  [ 8] unmap_single_vma_[k]
  [ 9] unmap_vmas_[k]
  [10] unmap_region_[k]
  [11] __do_munmap_[k]
  [12] mmap_region_[k]
  [13] do_mmap_[k]
  [14] vm_mmap_pgoff_[k]
  [15] ksys_mmap_pgoff_[k]
  [16] __x64_sys_mmap_[k]
  [17] do_syscall_64_[k]
  [18] entry_SYSCALL_64_after_hwframe_[k]
  [19] __GI___mmap
  [20] G1PageBasedVirtualSpace::uncommit(unsigned long, unsigned long)
  [21] G1RegionsLargerThanCommitSizeMapper::uncommit_regions(unsigned int, unsigned long)
  [22] HeapRegionManager::uncommit_regions(unsigned int, unsigned int)
  [23] HeapRegionManager::uncommit_inactive_regions(unsigned int)
  [24] G1UncommitRegionTask::execute()
  [25] G1ServiceThread::run_task(G1ServiceTask*)
  [26] G1ServiceThread::run_service()
  [27] ConcurrentGCThread::run()
  [28] Thread::call_run()
  [29] thread_native_entry(Thread*)
  [30] start_thread

--- 670420466 ns (0.05%), 67 samples
  [ 0] Java_java_util_zip_Inflater_inflateBytesBytes
  [ 1] java.util.zip.Inflater.inflateBytesBytes
  [ 2] java.util.zip.Inflater.inflate
  [ 3] java.util.zip.InflaterInputStream.read
  [ 4] java.io.InputStream.readNBytes
  [ 5] java.io.InputStream.readAllBytes
  [ 6] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [ 7] com.scalamandra.ZipLib$$anon$1$$Lambda$65.0x0000000800d25648.apply
  [ 8] cats.effect.IOFiber.$anonfun$8
  [ 9] cats.effect.IOFiber$$Lambda$202.0x0000000800da9800.apply
  [10] cats.effect.unsafe.WorkerThread.blockOn
  [11] scala.concurrent.package$.blocking
  [12] cats.effect.IOFiber.runLoop
  [13] cats.effect.IOFiber.execR
  [14] cats.effect.IOFiber.run
  [15] cats.effect.unsafe.WorkerThread.run

--- 670403503 ns (0.05%), 67 samples
  [ 0] inflate
  [ 1] java.util.zip.Inflater.inflateBytesBytes
  [ 2] java.util.zip.Inflater.inflate
  [ 3] java.util.zip.InflaterInputStream.read
  [ 4] java.io.InputStream.readNBytes
  [ 5] java.io.InputStream.readAllBytes
  [ 6] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [ 7] com.scalamandra.ZipLib$$anon$1$$Lambda$65.0x0000000800d25648.apply
  [ 8] cats.effect.IOFiber.$anonfun$8
  [ 9] cats.effect.IOFiber$$Lambda$202.0x0000000800da9800.apply
  [10] cats.effect.unsafe.WorkerThread.blockOn
  [11] scala.concurrent.package$.blocking
  [12] cats.effect.IOFiber.runLoop
  [13] cats.effect.IOFiber.execR
  [14] cats.effect.IOFiber.run
  [15] cats.effect.unsafe.WorkerThread.run

--- 621073968 ns (0.04%), 62 samples
  [ 0] mutex_lock_[k]
  [ 1] arc_buf_access?[zfs]_[k]
  [ 2] dbuf_hold_impl?[zfs]_[k]
  [ 3] dbuf_hold_level?[zfs]_[k]
  [ 4] dbuf_hold?[zfs]_[k]
  [ 5] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 6] dmu_read_uio_dnode?[zfs]_[k]
  [ 7] dmu_read_uio_dbuf?[zfs]_[k]
  [ 8] mappedread?[zfs]_[k]
  [ 9] zfs_read?[zfs]_[k]
  [10] zpl_iter_read?[zfs]_[k]
  [11] new_sync_read_[k]
  [12] vfs_read_[k]
  [13] __x64_sys_pread64_[k]
  [14] do_syscall_64_[k]
  [15] entry_SYSCALL_64_after_hwframe_[k]
  [16] __libc_pread64
  [17] sun.nio.ch.FileDispatcherImpl.pread0
  [18] sun.nio.ch.FileDispatcherImpl.pread
  [19] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [20] sun.nio.ch.IOUtil.read
  [21] sun.nio.ch.IOUtil.read
  [22] sun.nio.ch.FileChannelImpl.readInternal
  [23] sun.nio.ch.FileChannelImpl.read
  [24] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [25] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [26] jdk.nio.zipfs.ZipFileSystem$2.fill
  [27] java.util.zip.InflaterInputStream.read
  [28] java.io.InputStream.readNBytes
  [29] java.io.InputStream.readAllBytes
  [30] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [31] com.scalamandra.ZipLib$$anon$1$$Lambda$65.0x0000000800d25648.apply
  [32] cats.effect.IOFiber.$anonfun$8
  [33] cats.effect.IOFiber$$Lambda$202.0x0000000800da9800.apply
  [34] cats.effect.unsafe.WorkerThread.blockOn
  [35] scala.concurrent.package$.blocking
  [36] cats.effect.IOFiber.runLoop
  [37] cats.effect.IOFiber.execR
  [38] cats.effect.IOFiber.run
  [39] cats.effect.unsafe.WorkerThread.run

--- 618882534 ns (0.04%), 62 samples
  [ 0] CompiledMethod::cleanup_inline_caches_impl(bool, bool)
  [ 1] CompiledMethod::unload_nmethod_caches(bool)
  [ 2] nmethod::do_unloading(bool)
  [ 3] CodeCacheUnloadingTask::work(unsigned int)
  [ 4] G1ParallelCleaningTask::work(unsigned int)
  [ 5] GangWorker::loop()
  [ 6] GangWorker::run()
  [ 7] Thread::call_run()
  [ 8] thread_native_entry(Thread*)
  [ 9] start_thread

--- 570575865 ns (0.04%), 57 samples
  [ 0] read_tsc_[k]
  [ 1] gethrtime?[zfs]_[k]
  [ 2] zio_wait?[zfs]_[k]
  [ 3] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 4] dmu_read_uio_dnode?[zfs]_[k]
  [ 5] dmu_read_uio_dbuf?[zfs]_[k]
  [ 6] mappedread?[zfs]_[k]
  [ 7] zfs_read?[zfs]_[k]
  [ 8] zpl_iter_read?[zfs]_[k]
  [ 9] new_sync_read_[k]
  [10] vfs_read_[k]
  [11] __x64_sys_pread64_[k]
  [12] do_syscall_64_[k]
  [13] entry_SYSCALL_64_after_hwframe_[k]
  [14] __libc_pread64
  [15] sun.nio.ch.FileDispatcherImpl.pread0
  [16] sun.nio.ch.FileDispatcherImpl.pread
  [17] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [18] sun.nio.ch.IOUtil.read
  [19] sun.nio.ch.IOUtil.read
  [20] sun.nio.ch.FileChannelImpl.readInternal
  [21] sun.nio.ch.FileChannelImpl.read
  [22] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [23] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [24] jdk.nio.zipfs.ZipFileSystem$2.fill
  [25] java.util.zip.InflaterInputStream.read
  [26] java.io.InputStream.readNBytes
  [27] java.io.InputStream.readAllBytes
  [28] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [29] com.scalamandra.ZipLib$$anon$1$$Lambda$65.0x0000000800d25648.apply
  [30] cats.effect.IOFiber.$anonfun$8
  [31] cats.effect.IOFiber$$Lambda$202.0x0000000800da9800.apply
  [32] cats.effect.unsafe.WorkerThread.blockOn
  [33] scala.concurrent.package$.blocking
  [34] cats.effect.IOFiber.runLoop
  [35] cats.effect.IOFiber.execR
  [36] cats.effect.IOFiber.run
  [37] cats.effect.unsafe.WorkerThread.run

--- 550956150 ns (0.04%), 55 samples
  [ 0] _copy_to_iter_[k]
  [ 1] zfs_uiomove_iter?[zfs]_[k]
  [ 2] zfs_uiomove?[zfs]_[k]
  [ 3] dmu_read_uio_dnode?[zfs]_[k]
  [ 4] dmu_read_uio_dbuf?[zfs]_[k]
  [ 5] mappedread?[zfs]_[k]
  [ 6] zfs_read?[zfs]_[k]
  [ 7] zpl_iter_read?[zfs]_[k]
  [ 8] new_sync_read_[k]
  [ 9] vfs_read_[k]
  [10] __x64_sys_pread64_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] __libc_pread64
  [14] sun.nio.ch.FileDispatcherImpl.pread0
  [15] sun.nio.ch.FileDispatcherImpl.pread
  [16] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [17] sun.nio.ch.IOUtil.read
  [18] sun.nio.ch.IOUtil.read
  [19] sun.nio.ch.FileChannelImpl.readInternal
  [20] sun.nio.ch.FileChannelImpl.read
  [21] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [22] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [23] jdk.nio.zipfs.ZipFileSystem$2.fill
  [24] java.util.zip.InflaterInputStream.read
  [25] java.io.InputStream.readNBytes
  [26] java.io.InputStream.readAllBytes
  [27] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [28] com.scalamandra.ZipLib$$anon$1$$Lambda$65.0x0000000800d25648.apply
  [29] cats.effect.IOFiber.$anonfun$8
  [30] cats.effect.IOFiber$$Lambda$202.0x0000000800da9800.apply
  [31] cats.effect.unsafe.WorkerThread.blockOn
  [32] scala.concurrent.package$.blocking
  [33] cats.effect.IOFiber.runLoop
  [34] cats.effect.IOFiber.execR
  [35] cats.effect.IOFiber.run
  [36] cats.effect.unsafe.WorkerThread.run

--- 550383762 ns (0.04%), 55 samples
  [ 0] do_anonymous_page_[k]
  [ 1] handle_pte_fault_[k]
  [ 2] __handle_mm_fault_[k]
  [ 3] handle_mm_fault_[k]
  [ 4] do_user_addr_fault_[k]
  [ 5] exc_page_fault_[k]
  [ 6] asm_exc_page_fault_[k]
  [ 7] java.io.InputStream.readNBytes
  [ 8] java.io.InputStream.readAllBytes
  [ 9] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [10] com.scalamandra.ZipLib$$anon$1$$Lambda$65.0x0000000800d25648.apply
  [11] cats.effect.IOFiber.$anonfun$8
  [12] cats.effect.IOFiber$$Lambda$202.0x0000000800da9800.apply
  [13] cats.effect.unsafe.WorkerThread.blockOn
  [14] scala.concurrent.package$.blocking
  [15] cats.effect.IOFiber.runLoop
  [16] cats.effect.IOFiber.execR
  [17] cats.effect.IOFiber.run
  [18] cats.effect.unsafe.WorkerThread.run

--- 540961171 ns (0.04%), 54 samples
  [ 0] zfs_read?[zfs]_[k]
  [ 1] zpl_iter_read?[zfs]_[k]
  [ 2] new_sync_read_[k]
  [ 3] vfs_read_[k]
  [ 4] __x64_sys_pread64_[k]
  [ 5] do_syscall_64_[k]
  [ 6] entry_SYSCALL_64_after_hwframe_[k]
  [ 7] __libc_pread64
  [ 8] sun.nio.ch.FileDispatcherImpl.pread0
  [ 9] sun.nio.ch.FileDispatcherImpl.pread
  [10] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [11] sun.nio.ch.IOUtil.read
  [12] sun.nio.ch.IOUtil.read
  [13] sun.nio.ch.FileChannelImpl.readInternal
  [14] sun.nio.ch.FileChannelImpl.read
  [15] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [16] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [17] jdk.nio.zipfs.ZipFileSystem$2.fill
  [18] java.util.zip.InflaterInputStream.read
  [19] java.io.InputStream.readNBytes
  [20] java.io.InputStream.readAllBytes
  [21] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [22] com.scalamandra.ZipLib$$anon$1$$Lambda$65.0x0000000800d25648.apply
  [23] cats.effect.IOFiber.$anonfun$8
  [24] cats.effect.IOFiber$$Lambda$202.0x0000000800da9800.apply
  [25] cats.effect.unsafe.WorkerThread.blockOn
  [26] scala.concurrent.package$.blocking
  [27] cats.effect.IOFiber.runLoop
  [28] cats.effect.IOFiber.execR
  [29] cats.effect.IOFiber.run
  [30] cats.effect.unsafe.WorkerThread.run

--- 520494308 ns (0.04%), 52 samples
  [ 0] __filemap_get_folio_[k]
  [ 1] pagecache_get_page_[k]
  [ 2] find_lock_page?[zfs]_[k]
  [ 3] mappedread?[zfs]_[k]
  [ 4] zfs_read?[zfs]_[k]
  [ 5] zpl_iter_read?[zfs]_[k]
  [ 6] new_sync_read_[k]
  [ 7] vfs_read_[k]
  [ 8] __x64_sys_pread64_[k]
  [ 9] do_syscall_64_[k]
  [10] entry_SYSCALL_64_after_hwframe_[k]
  [11] __libc_pread64
  [12] sun.nio.ch.FileDispatcherImpl.pread0
  [13] sun.nio.ch.FileDispatcherImpl.pread
  [14] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [15] sun.nio.ch.IOUtil.read
  [16] sun.nio.ch.IOUtil.read
  [17] sun.nio.ch.FileChannelImpl.readInternal
  [18] sun.nio.ch.FileChannelImpl.read
  [19] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [20] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [21] jdk.nio.zipfs.ZipFileSystem$2.fill
  [22] java.util.zip.InflaterInputStream.read
  [23] java.io.InputStream.readNBytes
  [24] java.io.InputStream.readAllBytes
  [25] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [26] com.scalamandra.ZipLib$$anon$1$$Lambda$65.0x0000000800d25648.apply
  [27] cats.effect.IOFiber.$anonfun$8
  [28] cats.effect.IOFiber$$Lambda$202.0x0000000800da9800.apply
  [29] cats.effect.unsafe.WorkerThread.blockOn
  [30] scala.concurrent.package$.blocking
  [31] cats.effect.IOFiber.runLoop
  [32] cats.effect.IOFiber.execR
  [33] cats.effect.IOFiber.run
  [34] cats.effect.unsafe.WorkerThread.run

--- 520281597 ns (0.04%), 52 samples
  [ 0] java.io.InputStream.readNBytes
  [ 1] java.io.InputStream.readAllBytes
  [ 2] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [ 3] com.scalamandra.ZipLib$$anon$1$$Lambda$65.0x0000000800d25648.apply
  [ 4] cats.effect.IOFiber.$anonfun$8
  [ 5] cats.effect.IOFiber$$Lambda$202.0x0000000800da9800.apply
  [ 6] cats.effect.unsafe.WorkerThread.blockOn
  [ 7] scala.concurrent.package$.blocking
  [ 8] cats.effect.IOFiber.runLoop
  [ 9] cats.effect.IOFiber.execR
  [10] cats.effect.IOFiber.run
  [11] cats.effect.unsafe.WorkerThread.run

--- 510850235 ns (0.04%), 51 samples
  [ 0] arc_buf_access?[zfs]_[k]
  [ 1] dbuf_hold_impl?[zfs]_[k]
  [ 2] dbuf_hold_level?[zfs]_[k]
  [ 3] dbuf_hold?[zfs]_[k]
  [ 4] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 5] dmu_read_uio_dnode?[zfs]_[k]
  [ 6] dmu_read_uio_dbuf?[zfs]_[k]
  [ 7] mappedread?[zfs]_[k]
  [ 8] zfs_read?[zfs]_[k]
  [ 9] zpl_iter_read?[zfs]_[k]
  [10] new_sync_read_[k]
  [11] vfs_read_[k]
  [12] __x64_sys_pread64_[k]
  [13] do_syscall_64_[k]
  [14] entry_SYSCALL_64_after_hwframe_[k]
  [15] __libc_pread64
  [16] sun.nio.ch.FileDispatcherImpl.pread0
  [17] sun.nio.ch.FileDispatcherImpl.pread
  [18] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [19] sun.nio.ch.IOUtil.read
  [20] sun.nio.ch.IOUtil.read
  [21] sun.nio.ch.FileChannelImpl.readInternal
  [22] sun.nio.ch.FileChannelImpl.read
  [23] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [24] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [25] jdk.nio.zipfs.ZipFileSystem$2.fill
  [26] java.util.zip.InflaterInputStream.read
  [27] java.io.InputStream.readNBytes
  [28] java.io.InputStream.readAllBytes
  [29] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [30] com.scalamandra.ZipLib$$anon$1$$Lambda$65.0x0000000800d25648.apply
  [31] cats.effect.IOFiber.$anonfun$8
  [32] cats.effect.IOFiber$$Lambda$202.0x0000000800da9800.apply
  [33] cats.effect.unsafe.WorkerThread.blockOn
  [34] scala.concurrent.package$.blocking
  [35] cats.effect.IOFiber.runLoop
  [36] cats.effect.IOFiber.execR
  [37] cats.effect.IOFiber.run
  [38] cats.effect.unsafe.WorkerThread.run

--- 509664937 ns (0.03%), 51 samples
  [ 0] void WeakProcessor::Task::work<G1STWIsAliveClosure, G1KeepAliveClosure>(unsigned int, G1STWIsAliveClosure*, G1KeepAliveClosure*)
  [ 1] GangWorker::loop()
  [ 2] GangWorker::run()
  [ 3] Thread::call_run()
  [ 4] thread_native_entry(Thread*)
  [ 5] start_thread

--- 500504188 ns (0.03%), 50 samples
  [ 0] charge_memcg_[k]
  [ 1] __mem_cgroup_charge_[k]
  [ 2] do_anonymous_page_[k]
  [ 3] handle_pte_fault_[k]
  [ 4] __handle_mm_fault_[k]
  [ 5] handle_mm_fault_[k]
  [ 6] do_user_addr_fault_[k]
  [ 7] exc_page_fault_[k]
  [ 8] asm_exc_page_fault_[k]
  [ 9] java.io.InputStream.readNBytes
  [10] java.io.InputStream.readAllBytes
  [11] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [12] com.scalamandra.ZipLib$$anon$1$$Lambda$65.0x0000000800d25648.apply
  [13] cats.effect.IOFiber.$anonfun$8
  [14] cats.effect.IOFiber$$Lambda$202.0x0000000800da9800.apply
  [15] cats.effect.unsafe.WorkerThread.blockOn
  [16] scala.concurrent.package$.blocking
  [17] cats.effect.IOFiber.runLoop
  [18] cats.effect.IOFiber.execR
  [19] cats.effect.IOFiber.run
  [20] cats.effect.unsafe.WorkerThread.run

--- 480742517 ns (0.03%), 48 samples
  [ 0] multilist_remove?[zfs]_[k]
  [ 1] dbuf_hold_impl?[zfs]_[k]
  [ 2] dbuf_hold_level?[zfs]_[k]
  [ 3] dbuf_hold?[zfs]_[k]
  [ 4] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 5] dmu_read_uio_dnode?[zfs]_[k]
  [ 6] dmu_read_uio_dbuf?[zfs]_[k]
  [ 7] mappedread?[zfs]_[k]
  [ 8] zfs_read?[zfs]_[k]
  [ 9] zpl_iter_read?[zfs]_[k]
  [10] new_sync_read_[k]
  [11] vfs_read_[k]
  [12] __x64_sys_pread64_[k]
  [13] do_syscall_64_[k]
  [14] entry_SYSCALL_64_after_hwframe_[k]
  [15] __libc_pread64
  [16] sun.nio.ch.FileDispatcherImpl.pread0
  [17] sun.nio.ch.FileDispatcherImpl.pread
  [18] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [19] sun.nio.ch.IOUtil.read
  [20] sun.nio.ch.IOUtil.read
  [21] sun.nio.ch.FileChannelImpl.readInternal
  [22] sun.nio.ch.FileChannelImpl.read
  [23] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [24] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [25] jdk.nio.zipfs.ZipFileSystem$2.fill
  [26] java.util.zip.InflaterInputStream.read
  [27] java.io.InputStream.readNBytes
  [28] java.io.InputStream.readAllBytes
  [29] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [30] com.scalamandra.ZipLib$$anon$1$$Lambda$65.0x0000000800d25648.apply
  [31] cats.effect.IOFiber.$anonfun$8
  [32] cats.effect.IOFiber$$Lambda$202.0x0000000800da9800.apply
  [33] cats.effect.unsafe.WorkerThread.blockOn
  [34] scala.concurrent.package$.blocking
  [35] cats.effect.IOFiber.runLoop
  [36] cats.effect.IOFiber.execR
  [37] cats.effect.IOFiber.run
  [38] cats.effect.unsafe.WorkerThread.run

--- 480333009 ns (0.03%), 48 samples
  [ 0] checkInflateStatus
  [ 1] java.util.zip.Inflater.inflateBytesBytes
  [ 2] java.util.zip.Inflater.inflate
  [ 3] java.util.zip.InflaterInputStream.read
  [ 4] java.io.InputStream.readNBytes
  [ 5] java.io.InputStream.readAllBytes
  [ 6] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [ 7] com.scalamandra.ZipLib$$anon$1$$Lambda$65.0x0000000800d25648.apply
  [ 8] cats.effect.IOFiber.$anonfun$8
  [ 9] cats.effect.IOFiber$$Lambda$202.0x0000000800da9800.apply
  [10] cats.effect.unsafe.WorkerThread.blockOn
  [11] scala.concurrent.package$.blocking
  [12] cats.effect.IOFiber.runLoop
  [13] cats.effect.IOFiber.execR
  [14] cats.effect.IOFiber.run
  [15] cats.effect.unsafe.WorkerThread.run

--- 460572231 ns (0.03%), 46 samples
  [ 0] dmu_read_uio_dnode?[zfs]_[k]
  [ 1] dmu_read_uio_dbuf?[zfs]_[k]
  [ 2] mappedread?[zfs]_[k]
  [ 3] zfs_read?[zfs]_[k]
  [ 4] zpl_iter_read?[zfs]_[k]
  [ 5] new_sync_read_[k]
  [ 6] vfs_read_[k]
  [ 7] __x64_sys_pread64_[k]
  [ 8] do_syscall_64_[k]
  [ 9] entry_SYSCALL_64_after_hwframe_[k]
  [10] __libc_pread64
  [11] sun.nio.ch.FileDispatcherImpl.pread0
  [12] sun.nio.ch.FileDispatcherImpl.pread
  [13] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [14] sun.nio.ch.IOUtil.read
  [15] sun.nio.ch.IOUtil.read
  [16] sun.nio.ch.FileChannelImpl.readInternal
  [17] sun.nio.ch.FileChannelImpl.read
  [18] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [19] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [20] jdk.nio.zipfs.ZipFileSystem$2.fill
  [21] java.util.zip.InflaterInputStream.read
  [22] java.io.InputStream.readNBytes
  [23] java.io.InputStream.readAllBytes
  [24] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [25] com.scalamandra.ZipLib$$anon$1$$Lambda$65.0x0000000800d25648.apply
  [26] cats.effect.IOFiber.$anonfun$8
  [27] cats.effect.IOFiber$$Lambda$202.0x0000000800da9800.apply
  [28] cats.effect.unsafe.WorkerThread.blockOn
  [29] scala.concurrent.package$.blocking
  [30] cats.effect.IOFiber.runLoop
  [31] cats.effect.IOFiber.execR
  [32] cats.effect.IOFiber.run
  [33] cats.effect.unsafe.WorkerThread.run

--- 459971010 ns (0.03%), 46 samples
  [ 0] void G1CMTask::process_grey_task_entry<true>(G1TaskQueueEntry)
  [ 1] G1CMTask::do_marking_step(double, bool, bool)
  [ 2] G1CMConcurrentMarkingTask::work(unsigned int)
  [ 3] GangWorker::loop()
  [ 4] GangWorker::run()
  [ 5] Thread::call_run()
  [ 6] thread_native_entry(Thread*)
  [ 7] start_thread

--- 459770471 ns (0.03%), 46 samples
  [ 0] G1CMTask::do_marking_step(double, bool, bool)
  [ 1] G1CMConcurrentMarkingTask::work(unsigned int)
  [ 2] GangWorker::loop()
  [ 3] GangWorker::run()
  [ 4] Thread::call_run()
  [ 5] thread_native_entry(Thread*)
  [ 6] start_thread

--- 450524643 ns (0.03%), 45 samples
  [ 0] read_tsc_[k]
  [ 1] gethrtime?[zfs]_[k]
  [ 2] dmu_zfetch_stream_create?[zfs]_[k]
  [ 3] dmu_zfetch_prepare?[zfs]_[k]
  [ 4] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 5] dmu_read_uio_dnode?[zfs]_[k]
  [ 6] dmu_read_uio_dbuf?[zfs]_[k]
  [ 7] mappedread?[zfs]_[k]
  [ 8] zfs_read?[zfs]_[k]
  [ 9] zpl_iter_read?[zfs]_[k]
  [10] new_sync_read_[k]
  [11] vfs_read_[k]
  [12] __x64_sys_pread64_[k]
  [13] do_syscall_64_[k]
  [14] entry_SYSCALL_64_after_hwframe_[k]
  [15] __libc_pread64
  [16] sun.nio.ch.FileDispatcherImpl.pread0
  [17] sun.nio.ch.FileDispatcherImpl.pread
  [18] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [19] sun.nio.ch.IOUtil.read
  [20] sun.nio.ch.IOUtil.read
  [21] sun.nio.ch.FileChannelImpl.readInternal
  [22] sun.nio.ch.FileChannelImpl.read
  [23] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [24] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [25] jdk.nio.zipfs.ZipFileSystem$2.fill
  [26] java.util.zip.InflaterInputStream.read
  [27] java.io.InputStream.readNBytes
  [28] java.io.InputStream.readAllBytes
  [29] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [30] com.scalamandra.ZipLib$$anon$1$$Lambda$65.0x0000000800d25648.apply
  [31] cats.effect.IOFiber.$anonfun$8
  [32] cats.effect.IOFiber$$Lambda$202.0x0000000800da9800.apply
  [33] cats.effect.unsafe.WorkerThread.blockOn
  [34] scala.concurrent.package$.blocking
  [35] cats.effect.IOFiber.runLoop
  [36] cats.effect.IOFiber.execR
  [37] cats.effect.IOFiber.run
  [38] cats.effect.unsafe.WorkerThread.run

--- 441437015 ns (0.03%), 44 samples
  [ 0] G1ParCopyClosure<(G1Barrier)1, true>::do_oop(oopDesc**)
  [ 1] ClassLoaderData::ChunkedHandleList::oops_do(OopClosure*)
  [ 2] G1CLDScanClosure::do_cld(ClassLoaderData*)
  [ 3] ClassLoaderDataGraph::roots_cld_do(CLDClosure*, CLDClosure*)
  [ 4] G1RootProcessor::process_java_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int)
  [ 5] G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int)
  [ 6] G1EvacuateRegionsTask::scan_roots(G1ParScanThreadState*, unsigned int)
  [ 7] G1EvacuateRegionsBaseTask::work(unsigned int)
  [ 8] GangWorker::loop()
  [ 9] GangWorker::run()
  [10] Thread::call_run()
  [11] thread_native_entry(Thread*)
  [12] start_thread

--- 440729915 ns (0.03%), 44 samples
  [ 0] down_read_[k]
  [ 1] dbuf_find?[zfs]_[k]
  [ 2] dbuf_hold_impl?[zfs]_[k]
  [ 3] dbuf_hold_level?[zfs]_[k]
  [ 4] dbuf_hold?[zfs]_[k]
  [ 5] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 6] dmu_read_uio_dnode?[zfs]_[k]
  [ 7] dmu_read_uio_dbuf?[zfs]_[k]
  [ 8] mappedread?[zfs]_[k]
  [ 9] zfs_read?[zfs]_[k]
  [10] zpl_iter_read?[zfs]_[k]
  [11] new_sync_read_[k]
  [12] vfs_read_[k]
  [13] __x64_sys_pread64_[k]
  [14] do_syscall_64_[k]
  [15] entry_SYSCALL_64_after_hwframe_[k]
  [16] __libc_pread64
  [17] sun.nio.ch.FileDispatcherImpl.pread0
  [18] sun.nio.ch.FileDispatcherImpl.pread
  [19] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [20] sun.nio.ch.IOUtil.read
  [21] sun.nio.ch.IOUtil.read
  [22] sun.nio.ch.FileChannelImpl.readInternal
  [23] sun.nio.ch.FileChannelImpl.read
  [24] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [25] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [26] jdk.nio.zipfs.ZipFileSystem$2.fill
  [27] java.util.zip.InflaterInputStream.read
  [28] java.io.InputStream.readNBytes
  [29] java.io.InputStream.readAllBytes
  [30] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [31] com.scalamandra.ZipLib$$anon$1$$Lambda$65.0x0000000800d25648.apply
  [32] cats.effect.IOFiber.$anonfun$8
  [33] cats.effect.IOFiber$$Lambda$202.0x0000000800da9800.apply
  [34] cats.effect.unsafe.WorkerThread.blockOn
  [35] scala.concurrent.package$.blocking
  [36] cats.effect.IOFiber.runLoop
  [37] cats.effect.IOFiber.execR
  [38] cats.effect.IOFiber.run
  [39] cats.effect.unsafe.WorkerThread.run

--- 440568517 ns (0.03%), 44 samples
  [ 0] mutex_unlock_[k]
  [ 1] dbuf_rele_and_unlock?[zfs]_[k]
  [ 2] dbuf_rele?[zfs]_[k]
  [ 3] dmu_buf_rele_array?[zfs]_[k]
  [ 4] dmu_read_uio_dnode?[zfs]_[k]
  [ 5] dmu_read_uio_dbuf?[zfs]_[k]
  [ 6] mappedread?[zfs]_[k]
  [ 7] zfs_read?[zfs]_[k]
  [ 8] zpl_iter_read?[zfs]_[k]
  [ 9] new_sync_read_[k]
  [10] vfs_read_[k]
  [11] __x64_sys_pread64_[k]
  [12] do_syscall_64_[k]
  [13] entry_SYSCALL_64_after_hwframe_[k]
  [14] __libc_pread64
  [15] sun.nio.ch.FileDispatcherImpl.pread0
  [16] sun.nio.ch.FileDispatcherImpl.pread
  [17] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [18] sun.nio.ch.IOUtil.read
  [19] sun.nio.ch.IOUtil.read
  [20] sun.nio.ch.FileChannelImpl.readInternal
  [21] sun.nio.ch.FileChannelImpl.read
  [22] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [23] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [24] jdk.nio.zipfs.ZipFileSystem$2.fill
  [25] java.util.zip.InflaterInputStream.read
  [26] java.io.InputStream.readNBytes
  [27] java.io.InputStream.readAllBytes
  [28] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [29] com.scalamandra.ZipLib$$anon$1$$Lambda$65.0x0000000800d25648.apply
  [30] cats.effect.IOFiber.$anonfun$8
  [31] cats.effect.IOFiber$$Lambda$202.0x0000000800da9800.apply
  [32] cats.effect.unsafe.WorkerThread.blockOn
  [33] scala.concurrent.package$.blocking
  [34] cats.effect.IOFiber.runLoop
  [35] cats.effect.IOFiber.execR
  [36] cats.effect.IOFiber.run
  [37] cats.effect.unsafe.WorkerThread.run

--- 440443134 ns (0.03%), 44 samples
  [ 0] clear_page_rep_[k]
  [ 1] get_page_from_freelist_[k]
  [ 2] __alloc_pages_[k]
  [ 3] __folio_alloc_[k]
  [ 4] vma_alloc_folio_[k]
  [ 5] do_anonymous_page_[k]
  [ 6] handle_pte_fault_[k]
  [ 7] __handle_mm_fault_[k]
  [ 8] handle_mm_fault_[k]
  [ 9] do_user_addr_fault_[k]
  [10] exc_page_fault_[k]
  [11] asm_exc_page_fault_[k]
  [12] java.io.InputStream.readNBytes
  [13] java.io.InputStream.readAllBytes
  [14] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [15] com.scalamandra.ZipLib$$anon$1$$Lambda$65.0x0000000800d25648.apply
  [16] cats.effect.IOFiber.$anonfun$8
  [17] cats.effect.IOFiber$$Lambda$202.0x0000000800da9800.apply
  [18] cats.effect.unsafe.WorkerThread.blockOn
  [19] scala.concurrent.package$.blocking
  [20] cats.effect.IOFiber.runLoop
  [21] cats.effect.IOFiber.execR
  [22] cats.effect.IOFiber.run
  [23] cats.effect.unsafe.WorkerThread.run

--- 440328451 ns (0.03%), 44 samples
  [ 0] _raw_spin_lock_[k]
  [ 1] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 2] dmu_read_uio_dnode?[zfs]_[k]
  [ 3] dmu_read_uio_dbuf?[zfs]_[k]
  [ 4] mappedread?[zfs]_[k]
  [ 5] zfs_read?[zfs]_[k]
  [ 6] zpl_iter_read?[zfs]_[k]
  [ 7] new_sync_read_[k]
  [ 8] vfs_read_[k]
  [ 9] __x64_sys_pread64_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] __libc_pread64
  [13] sun.nio.ch.FileDispatcherImpl.pread0
  [14] sun.nio.ch.FileDispatcherImpl.pread
  [15] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [16] sun.nio.ch.IOUtil.read
  [17] sun.nio.ch.IOUtil.read
  [18] sun.nio.ch.FileChannelImpl.readInternal
  [19] sun.nio.ch.FileChannelImpl.read
  [20] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [21] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [22] jdk.nio.zipfs.ZipFileSystem$2.fill
  [23] java.util.zip.InflaterInputStream.read
  [24] java.io.InputStream.readNBytes
  [25] java.io.InputStream.readAllBytes
  [26] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [27] com.scalamandra.ZipLib$$anon$1$$Lambda$65.0x0000000800d25648.apply
  [28] cats.effect.IOFiber.$anonfun$8
  [29] cats.effect.IOFiber$$Lambda$202.0x0000000800da9800.apply
  [30] cats.effect.unsafe.WorkerThread.blockOn
  [31] scala.concurrent.package$.blocking
  [32] cats.effect.IOFiber.runLoop
  [33] cats.effect.IOFiber.execR
  [34] cats.effect.IOFiber.run
  [35] cats.effect.unsafe.WorkerThread.run

--- 439156283 ns (0.03%), 44 samples
  [ 0] nmethod::oops_do(OopClosure*, bool)
  [ 1] ClosureIsUnloadingBehaviour::is_unloading(CompiledMethod*) const
  [ 2] nmethod::do_unloading(bool)
  [ 3] CodeCacheUnloadingTask::work(unsigned int)
  [ 4] G1ParallelCleaningTask::work(unsigned int)
  [ 5] GangWorker::loop()
  [ 6] GangWorker::run()
  [ 7] Thread::call_run()
  [ 8] thread_native_entry(Thread*)
  [ 9] start_thread

--- 420590822 ns (0.03%), 42 samples
  [ 0] __kmalloc_node_[k]
  [ 1] spl_kmem_alloc_impl?[spl]_[k]
  [ 2] spl_kmem_alloc?[spl]_[k]
  [ 3] zfs_rangelock_enter_impl?[zfs]_[k]
  [ 4] zfs_rangelock_enter?[zfs]_[k]
  [ 5] zfs_read?[zfs]_[k]
  [ 6] zpl_iter_read?[zfs]_[k]
  [ 7] new_sync_read_[k]
  [ 8] vfs_read_[k]
  [ 9] __x64_sys_pread64_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] __libc_pread64
  [13] sun.nio.ch.FileDispatcherImpl.pread0
  [14] sun.nio.ch.FileDispatcherImpl.pread
  [15] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [16] sun.nio.ch.IOUtil.read
  [17] sun.nio.ch.IOUtil.read
  [18] sun.nio.ch.FileChannelImpl.readInternal
  [19] sun.nio.ch.FileChannelImpl.read
  [20] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [21] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [22] jdk.nio.zipfs.ZipFileSystem$2.fill
  [23] java.util.zip.InflaterInputStream.read
  [24] java.io.InputStream.readNBytes
  [25] java.io.InputStream.readAllBytes
  [26] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [27] com.scalamandra.ZipLib$$anon$1$$Lambda$65.0x0000000800d25648.apply
  [28] cats.effect.IOFiber.$anonfun$8
  [29] cats.effect.IOFiber$$Lambda$202.0x0000000800da9800.apply
  [30] cats.effect.unsafe.WorkerThread.blockOn
  [31] scala.concurrent.package$.blocking
  [32] cats.effect.IOFiber.runLoop
  [33] cats.effect.IOFiber.execR
  [34] cats.effect.IOFiber.run
  [35] cats.effect.unsafe.WorkerThread.run

--- 420065794 ns (0.03%), 42 samples
  [ 0] do_user_addr_fault_[k]
  [ 1] exc_page_fault_[k]
  [ 2] asm_exc_page_fault_[k]
  [ 3] __memcpy_sse2_unaligned_erms
  [ 4] G1ParScanThreadState::steal_and_trim_queue(GenericTaskQueueSet<OverflowTaskQueue<ScannerTask, (MEMFLAGS)5, 131072u>, (MEMFLAGS)5>*)
  [ 5] G1ParEvacuateFollowersClosure::do_void()
  [ 6] G1EvacuateRegionsTask::evacuate_live_objects(G1ParScanThreadState*, unsigned int)
  [ 7] G1EvacuateRegionsBaseTask::work(unsigned int)
  [ 8] GangWorker::loop()
  [ 9] GangWorker::run()
  [10] Thread::call_run()
  [11] thread_native_entry(Thread*)
  [12] start_thread

--- 420001671 ns (0.03%), 42 samples
  [ 0] jni_ReleasePrimitiveArrayCritical
  [ 1] java.util.zip.Inflater.inflateBytesBytes
  [ 2] java.util.zip.Inflater.inflate
  [ 3] java.util.zip.InflaterInputStream.read
  [ 4] java.io.InputStream.readNBytes
  [ 5] java.io.InputStream.readAllBytes
  [ 6] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [ 7] com.scalamandra.ZipLib$$anon$1$$Lambda$65.0x0000000800d25648.apply
  [ 8] cats.effect.IOFiber.$anonfun$8
  [ 9] cats.effect.IOFiber$$Lambda$202.0x0000000800da9800.apply
  [10] cats.effect.unsafe.WorkerThread.blockOn
  [11] scala.concurrent.package$.blocking
  [12] cats.effect.IOFiber.runLoop
  [13] cats.effect.IOFiber.execR
  [14] cats.effect.IOFiber.run
  [15] cats.effect.unsafe.WorkerThread.run

--- 410760044 ns (0.03%), 41 samples
  [ 0] down_read_[k]
  [ 1] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 2] dmu_read_uio_dnode?[zfs]_[k]
  [ 3] dmu_read_uio_dbuf?[zfs]_[k]
  [ 4] mappedread?[zfs]_[k]
  [ 5] zfs_read?[zfs]_[k]
  [ 6] zpl_iter_read?[zfs]_[k]
  [ 7] new_sync_read_[k]
  [ 8] vfs_read_[k]
  [ 9] __x64_sys_pread64_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] __libc_pread64
  [13] sun.nio.ch.FileDispatcherImpl.pread0
  [14] sun.nio.ch.FileDispatcherImpl.pread
  [15] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [16] sun.nio.ch.IOUtil.read
  [17] sun.nio.ch.IOUtil.read
  [18] sun.nio.ch.FileChannelImpl.readInternal
  [19] sun.nio.ch.FileChannelImpl.read
  [20] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [21] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [22] jdk.nio.zipfs.ZipFileSystem$2.fill
  [23] java.util.zip.InflaterInputStream.read
  [24] java.io.InputStream.readNBytes
  [25] java.io.InputStream.readAllBytes
  [26] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [27] com.scalamandra.ZipLib$$anon$1$$Lambda$65.0x0000000800d25648.apply
  [28] cats.effect.IOFiber.$anonfun$8
  [29] cats.effect.IOFiber$$Lambda$202.0x0000000800da9800.apply
  [30] cats.effect.unsafe.WorkerThread.blockOn
  [31] scala.concurrent.package$.blocking
  [32] cats.effect.IOFiber.runLoop
  [33] cats.effect.IOFiber.execR
  [34] cats.effect.IOFiber.run
  [35] cats.effect.unsafe.WorkerThread.run

--- 410595051 ns (0.03%), 41 samples
  [ 0] handle_mm_fault_[k]
  [ 1] do_user_addr_fault_[k]
  [ 2] exc_page_fault_[k]
  [ 3] asm_exc_page_fault_[k]
  [ 4] java.io.InputStream.readNBytes
  [ 5] java.io.InputStream.readAllBytes
  [ 6] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [ 7] com.scalamandra.ZipLib$$anon$1$$Lambda$65.0x0000000800d25648.apply
  [ 8] cats.effect.IOFiber.$anonfun$8
  [ 9] cats.effect.IOFiber$$Lambda$202.0x0000000800da9800.apply
  [10] cats.effect.unsafe.WorkerThread.blockOn
  [11] scala.concurrent.package$.blocking
  [12] cats.effect.IOFiber.runLoop
  [13] cats.effect.IOFiber.execR
  [14] cats.effect.IOFiber.run
  [15] cats.effect.unsafe.WorkerThread.run

--- 410502966 ns (0.03%), 41 samples
  [ 0] zrl_add_impl?[zfs]_[k]
  [ 1] dbuf_include_in_metadata_cache?[zfs]_[k]
  [ 2] dbuf_rele_and_unlock?[zfs]_[k]
  [ 3] dbuf_rele?[zfs]_[k]
  [ 4] dmu_buf_rele_array?[zfs]_[k]
  [ 5] dmu_read_uio_dnode?[zfs]_[k]
  [ 6] dmu_read_uio_dbuf?[zfs]_[k]
  [ 7] mappedread?[zfs]_[k]
  [ 8] zfs_read?[zfs]_[k]
  [ 9] zpl_iter_read?[zfs]_[k]
  [10] new_sync_read_[k]
  [11] vfs_read_[k]
  [12] __x64_sys_pread64_[k]
  [13] do_syscall_64_[k]
  [14] entry_SYSCALL_64_after_hwframe_[k]
  [15] __libc_pread64
  [16] sun.nio.ch.FileDispatcherImpl.pread0
  [17] sun.nio.ch.FileDispatcherImpl.pread
  [18] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [19] sun.nio.ch.IOUtil.read
  [20] sun.nio.ch.IOUtil.read
  [21] sun.nio.ch.FileChannelImpl.readInternal
  [22] sun.nio.ch.FileChannelImpl.read
  [23] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [24] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [25] jdk.nio.zipfs.ZipFileSystem$2.fill
  [26] java.util.zip.InflaterInputStream.read
  [27] java.io.InputStream.readNBytes
  [28] java.io.InputStream.readAllBytes
  [29] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [30] com.scalamandra.ZipLib$$anon$1$$Lambda$65.0x0000000800d25648.apply
  [31] cats.effect.IOFiber.$anonfun$8
  [32] cats.effect.IOFiber$$Lambda$202.0x0000000800da9800.apply
  [33] cats.effect.unsafe.WorkerThread.blockOn
  [34] scala.concurrent.package$.blocking
  [35] cats.effect.IOFiber.runLoop
  [36] cats.effect.IOFiber.execR
  [37] cats.effect.IOFiber.run
  [38] cats.effect.unsafe.WorkerThread.run

--- 410213853 ns (0.03%), 41 samples
  [ 0] _raw_spin_lock_[k]
  [ 1] dbuf_hold_impl?[zfs]_[k]
  [ 2] dbuf_hold_level?[zfs]_[k]
  [ 3] dbuf_hold?[zfs]_[k]
  [ 4] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 5] dmu_read_uio_dnode?[zfs]_[k]
  [ 6] dmu_read_uio_dbuf?[zfs]_[k]
  [ 7] mappedread?[zfs]_[k]
  [ 8] zfs_read?[zfs]_[k]
  [ 9] zpl_iter_read?[zfs]_[k]
  [10] new_sync_read_[k]
  [11] vfs_read_[k]
  [12] __x64_sys_pread64_[k]
  [13] do_syscall_64_[k]
  [14] entry_SYSCALL_64_after_hwframe_[k]
  [15] __libc_pread64
  [16] sun.nio.ch.FileDispatcherImpl.pread0
  [17] sun.nio.ch.FileDispatcherImpl.pread
  [18] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [19] sun.nio.ch.IOUtil.read
  [20] sun.nio.ch.IOUtil.read
  [21] sun.nio.ch.FileChannelImpl.readInternal
  [22] sun.nio.ch.FileChannelImpl.read
  [23] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [24] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [25] jdk.nio.zipfs.ZipFileSystem$2.fill
  [26] java.util.zip.InflaterInputStream.read
  [27] java.io.InputStream.readNBytes
  [28] java.io.InputStream.readAllBytes
  [29] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [30] com.scalamandra.ZipLib$$anon$1$$Lambda$65.0x0000000800d25648.apply
  [31] cats.effect.IOFiber.$anonfun$8
  [32] cats.effect.IOFiber$$Lambda$202.0x0000000800da9800.apply
  [33] cats.effect.unsafe.WorkerThread.blockOn
  [34] scala.concurrent.package$.blocking
  [35] cats.effect.IOFiber.runLoop
  [36] cats.effect.IOFiber.execR
  [37] cats.effect.IOFiber.run
  [38] cats.effect.unsafe.WorkerThread.run

--- 409808168 ns (0.03%), 41 samples
  [ 0] void OopOopIterateDispatch<G1CMOopClosure>::Table::oop_oop_iterate<InstanceMirrorKlass, narrowOop>(G1CMOopClosure*, oopDesc*, Klass*)
  [ 1] void G1CMTask::process_grey_task_entry<true>(G1TaskQueueEntry)
  [ 2] G1CMTask::do_marking_step(double, bool, bool)
  [ 3] G1CMConcurrentMarkingTask::work(unsigned int)
  [ 4] GangWorker::loop()
  [ 5] GangWorker::run()
  [ 6] Thread::call_run()
  [ 7] thread_native_entry(Thread*)
  [ 8] start_thread

--- 401093685 ns (0.03%), 40 samples
  [ 0] G1ParScanThreadState::steal_and_trim_queue(GenericTaskQueueSet<OverflowTaskQueue<ScannerTask, (MEMFLAGS)5, 131072u>, (MEMFLAGS)5>*)
  [ 1] G1ParEvacuateFollowersClosure::do_void()
  [ 2] G1EvacuateRegionsTask::evacuate_live_objects(G1ParScanThreadState*, unsigned int)
  [ 3] G1EvacuateRegionsBaseTask::work(unsigned int)
  [ 4] GangWorker::loop()
  [ 5] GangWorker::run()
  [ 6] Thread::call_run()
  [ 7] thread_native_entry(Thread*)
  [ 8] start_thread

--- 400852292 ns (0.03%), 40 samples
  [ 0] clear_page_rep_[k]
  [ 1] get_page_from_freelist_[k]
  [ 2] __alloc_pages_[k]
  [ 3] __folio_alloc_[k]
  [ 4] vma_alloc_folio_[k]
  [ 5] do_anonymous_page_[k]
  [ 6] handle_pte_fault_[k]
  [ 7] __handle_mm_fault_[k]
  [ 8] handle_mm_fault_[k]
  [ 9] do_user_addr_fault_[k]
  [10] exc_page_fault_[k]
  [11] asm_exc_page_fault_[k]
  [12] __memset_avx2_unaligned_erms
  [13] MarkBitMap::do_clear(MemRegion, bool)
  [14] G1ClearBitMapTask::G1ClearBitmapHRClosure::do_heap_region(HeapRegion*)
  [15] HeapRegionManager::par_iterate(HeapRegionClosure*, HeapRegionClaimer*, unsigned int) const
  [16] G1ClearBitMapTask::work(unsigned int)
  [17] GangWorker::loop()
  [18] GangWorker::run()
  [19] Thread::call_run()
  [20] thread_native_entry(Thread*)
  [21] start_thread

--- 400260827 ns (0.03%), 40 samples
  [ 0] apparmor_file_permission_[k]
  [ 1] security_file_permission_[k]
  [ 2] rw_verify_area_[k]
  [ 3] vfs_read_[k]
  [ 4] __x64_sys_pread64_[k]
  [ 5] do_syscall_64_[k]
  [ 6] entry_SYSCALL_64_after_hwframe_[k]
  [ 7] __libc_pread64
  [ 8] sun.nio.ch.FileDispatcherImpl.pread0
  [ 9] sun.nio.ch.FileDispatcherImpl.pread
  [10] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [11] sun.nio.ch.IOUtil.read
  [12] sun.nio.ch.IOUtil.read
  [13] sun.nio.ch.FileChannelImpl.readInternal
  [14] sun.nio.ch.FileChannelImpl.read
  [15] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [16] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [17] jdk.nio.zipfs.ZipFileSystem$2.fill
  [18] java.util.zip.InflaterInputStream.read
  [19] java.io.InputStream.readNBytes
  [20] java.io.InputStream.readAllBytes
  [21] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [22] com.scalamandra.ZipLib$$anon$1$$Lambda$65.0x0000000800d25648.apply
  [23] cats.effect.IOFiber.$anonfun$8
  [24] cats.effect.IOFiber$$Lambda$202.0x0000000800da9800.apply
  [25] cats.effect.unsafe.WorkerThread.blockOn
  [26] scala.concurrent.package$.blocking
  [27] cats.effect.IOFiber.runLoop
  [28] cats.effect.IOFiber.execR
  [29] cats.effect.IOFiber.run
  [30] cats.effect.unsafe.WorkerThread.run

--- 399779036 ns (0.03%), 40 samples
  [ 0] G1CMTask::drain_local_queue(bool) [clone .part.0] [clone .constprop.1]
  [ 1] G1CMTask::do_marking_step(double, bool, bool)
  [ 2] G1CMConcurrentMarkingTask::work(unsigned int)
  [ 3] GangWorker::loop()
  [ 4] GangWorker::run()
  [ 5] Thread::call_run()
  [ 6] thread_native_entry(Thread*)
  [ 7] start_thread

--- 390702439 ns (0.03%), 39 samples
  [ 0] __list_del?[zfs]_[k]
  [ 1] list_del?[zfs]_[k]
  [ 2] list_remove?[zfs]_[k]
  [ 3] multilist_sublist_remove?[zfs]_[k]
  [ 4] multilist_remove?[zfs]_[k]
  [ 5] dbuf_hold_impl?[zfs]_[k]
  [ 6] dbuf_hold_level?[zfs]_[k]
  [ 7] dbuf_hold?[zfs]_[k]
  [ 8] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 9] dmu_read_uio_dnode?[zfs]_[k]
  [10] dmu_read_uio_dbuf?[zfs]_[k]
  [11] mappedread?[zfs]_[k]
  [12] zfs_read?[zfs]_[k]
  [13] zpl_iter_read?[zfs]_[k]
  [14] new_sync_read_[k]
  [15] vfs_read_[k]
  [16] __x64_sys_pread64_[k]
  [17] do_syscall_64_[k]
  [18] entry_SYSCALL_64_after_hwframe_[k]
  [19] __libc_pread64
  [20] sun.nio.ch.FileDispatcherImpl.pread0
  [21] sun.nio.ch.FileDispatcherImpl.pread
  [22] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [23] sun.nio.ch.IOUtil.read
  [24] sun.nio.ch.IOUtil.read
  [25] sun.nio.ch.FileChannelImpl.readInternal
  [26] sun.nio.ch.FileChannelImpl.read
  [27] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [28] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [29] jdk.nio.zipfs.ZipFileSystem$2.fill
  [30] java.util.zip.InflaterInputStream.read
  [31] java.io.InputStream.readNBytes
  [32] java.io.InputStream.readAllBytes
  [33] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [34] com.scalamandra.ZipLib$$anon$1$$Lambda$65.0x0000000800d25648.apply
  [35] cats.effect.IOFiber.$anonfun$8
  [36] cats.effect.IOFiber$$Lambda$202.0x0000000800da9800.apply
  [37] cats.effect.unsafe.WorkerThread.blockOn
  [38] scala.concurrent.package$.blocking
  [39] cats.effect.IOFiber.runLoop
  [40] cats.effect.IOFiber.execR
  [41] cats.effect.IOFiber.run
  [42] cats.effect.unsafe.WorkerThread.run

--- 390451258 ns (0.03%), 39 samples
  [ 0] dmu_read_uio_dbuf?[zfs]_[k]
  [ 1] mappedread?[zfs]_[k]
  [ 2] zfs_read?[zfs]_[k]
  [ 3] zpl_iter_read?[zfs]_[k]
  [ 4] new_sync_read_[k]
  [ 5] vfs_read_[k]
  [ 6] __x64_sys_pread64_[k]
  [ 7] do_syscall_64_[k]
  [ 8] entry_SYSCALL_64_after_hwframe_[k]
  [ 9] __libc_pread64
  [10] sun.nio.ch.FileDispatcherImpl.pread0
  [11] sun.nio.ch.FileDispatcherImpl.pread
  [12] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [13] sun.nio.ch.IOUtil.read
  [14] sun.nio.ch.IOUtil.read
  [15] sun.nio.ch.FileChannelImpl.readInternal
  [16] sun.nio.ch.FileChannelImpl.read
  [17] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [18] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [19] jdk.nio.zipfs.ZipFileSystem$2.fill
  [20] java.util.zip.InflaterInputStream.read
  [21] java.io.InputStream.readNBytes
  [22] java.io.InputStream.readAllBytes
  [23] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [24] com.scalamandra.ZipLib$$anon$1$$Lambda$65.0x0000000800d25648.apply
  [25] cats.effect.IOFiber.$anonfun$8
  [26] cats.effect.IOFiber$$Lambda$202.0x0000000800da9800.apply
  [27] cats.effect.unsafe.WorkerThread.blockOn
  [28] scala.concurrent.package$.blocking
  [29] cats.effect.IOFiber.runLoop
  [30] cats.effect.IOFiber.execR
  [31] cats.effect.IOFiber.run
  [32] cats.effect.unsafe.WorkerThread.run

--- 390155117 ns (0.03%), 39 samples
  [ 0] jni_GetPrimitiveArrayCritical
  [ 1] java.util.zip.Inflater.inflateBytesBytes
  [ 2] java.util.zip.Inflater.inflate
  [ 3] java.util.zip.InflaterInputStream.read
  [ 4] java.io.InputStream.readNBytes
  [ 5] java.io.InputStream.readAllBytes
  [ 6] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [ 7] com.scalamandra.ZipLib$$anon$1$$Lambda$65.0x0000000800d25648.apply
  [ 8] cats.effect.IOFiber.$anonfun$8
  [ 9] cats.effect.IOFiber$$Lambda$202.0x0000000800da9800.apply
  [10] cats.effect.unsafe.WorkerThread.blockOn
  [11] scala.concurrent.package$.blocking
  [12] cats.effect.IOFiber.runLoop
  [13] cats.effect.IOFiber.execR
  [14] cats.effect.IOFiber.run
  [15] cats.effect.unsafe.WorkerThread.run

--- 380617761 ns (0.03%), 38 samples
  [ 0] find_vmap_area_[k]
  [ 1] check_heap_object_[k]
  [ 2] __check_object_size.part.0_[k]
  [ 3] __check_object_size_[k]
  [ 4] zfs_uiomove_iter?[zfs]_[k]
  [ 5] zfs_uiomove?[zfs]_[k]
  [ 6] dmu_read_uio_dnode?[zfs]_[k]
  [ 7] dmu_read_uio_dbuf?[zfs]_[k]
  [ 8] mappedread?[zfs]_[k]
  [ 9] zfs_read?[zfs]_[k]
  [10] zpl_iter_read?[zfs]_[k]
  [11] new_sync_read_[k]
  [12] vfs_read_[k]
  [13] __x64_sys_pread64_[k]
  [14] do_syscall_64_[k]
  [15] entry_SYSCALL_64_after_hwframe_[k]
  [16] __libc_pread64
  [17] sun.nio.ch.FileDispatcherImpl.pread0
  [18] sun.nio.ch.FileDispatcherImpl.pread
  [19] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [20] sun.nio.ch.IOUtil.read
  [21] sun.nio.ch.IOUtil.read
  [22] sun.nio.ch.FileChannelImpl.readInternal
  [23] sun.nio.ch.FileChannelImpl.read
  [24] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [25] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [26] jdk.nio.zipfs.ZipFileSystem$2.fill
  [27] java.util.zip.InflaterInputStream.read
  [28] java.io.InputStream.readNBytes
  [29] java.io.InputStream.readAllBytes
  [30] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [31] com.scalamandra.ZipLib$$anon$1$$Lambda$65.0x0000000800d25648.apply
  [32] cats.effect.IOFiber.$anonfun$8
  [33] cats.effect.IOFiber$$Lambda$202.0x0000000800da9800.apply
  [34] cats.effect.unsafe.WorkerThread.blockOn
  [35] scala.concurrent.package$.blocking
  [36] cats.effect.IOFiber.runLoop
  [37] cats.effect.IOFiber.execR
  [38] cats.effect.IOFiber.run
  [39] cats.effect.unsafe.WorkerThread.run

--- 380325338 ns (0.03%), 38 samples
  [ 0] blk_cgroup_congested_[k]
  [ 1] __cgroup_throttle_swaprate_[k]
  [ 2] do_anonymous_page_[k]
  [ 3] handle_pte_fault_[k]
  [ 4] __handle_mm_fault_[k]
  [ 5] handle_mm_fault_[k]
  [ 6] do_user_addr_fault_[k]
  [ 7] exc_page_fault_[k]
  [ 8] asm_exc_page_fault_[k]
  [ 9] java.io.InputStream.readNBytes
  [10] java.io.InputStream.readAllBytes
  [11] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [12] com.scalamandra.ZipLib$$anon$1$$Lambda$65.0x0000000800d25648.apply
  [13] cats.effect.IOFiber.$anonfun$8
  [14] cats.effect.IOFiber$$Lambda$202.0x0000000800da9800.apply
  [15] cats.effect.unsafe.WorkerThread.blockOn
  [16] scala.concurrent.package$.blocking
  [17] cats.effect.IOFiber.runLoop
  [18] cats.effect.IOFiber.execR
  [19] cats.effect.IOFiber.run
  [20] cats.effect.unsafe.WorkerThread.run

--- 370311944 ns (0.03%), 37 samples
  [ 0] _raw_spin_lock_[k]
  [ 1] check_heap_object_[k]
  [ 2] __check_object_size.part.0_[k]
  [ 3] __check_object_size_[k]
  [ 4] zfs_uiomove_iter?[zfs]_[k]
  [ 5] zfs_uiomove?[zfs]_[k]
  [ 6] dmu_read_uio_dnode?[zfs]_[k]
  [ 7] dmu_read_uio_dbuf?[zfs]_[k]
  [ 8] mappedread?[zfs]_[k]
  [ 9] zfs_read?[zfs]_[k]
  [10] zpl_iter_read?[zfs]_[k]
  [11] new_sync_read_[k]
  [12] vfs_read_[k]
  [13] __x64_sys_pread64_[k]
  [14] do_syscall_64_[k]
  [15] entry_SYSCALL_64_after_hwframe_[k]
  [16] __libc_pread64
  [17] sun.nio.ch.FileDispatcherImpl.pread0
  [18] sun.nio.ch.FileDispatcherImpl.pread
  [19] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [20] sun.nio.ch.IOUtil.read
  [21] sun.nio.ch.IOUtil.read
  [22] sun.nio.ch.FileChannelImpl.readInternal
  [23] sun.nio.ch.FileChannelImpl.read
  [24] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [25] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [26] jdk.nio.zipfs.ZipFileSystem$2.fill
  [27] java.util.zip.InflaterInputStream.read
  [28] java.io.InputStream.readNBytes
  [29] java.io.InputStream.readAllBytes
  [30] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [31] com.scalamandra.ZipLib$$anon$1$$Lambda$65.0x0000000800d25648.apply
  [32] cats.effect.IOFiber.$anonfun$8
  [33] cats.effect.IOFiber$$Lambda$202.0x0000000800da9800.apply
  [34] cats.effect.unsafe.WorkerThread.blockOn
  [35] scala.concurrent.package$.blocking
  [36] cats.effect.IOFiber.runLoop
  [37] cats.effect.IOFiber.execR
  [38] cats.effect.IOFiber.run
  [39] cats.effect.unsafe.WorkerThread.run

--- 370191993 ns (0.03%), 37 samples
  [ 0] zio_ready?[zfs]_[k]
  [ 1] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 2] dmu_read_uio_dnode?[zfs]_[k]
  [ 3] dmu_read_uio_dbuf?[zfs]_[k]
  [ 4] mappedread?[zfs]_[k]
  [ 5] zfs_read?[zfs]_[k]
  [ 6] zpl_iter_read?[zfs]_[k]
  [ 7] new_sync_read_[k]
  [ 8] vfs_read_[k]
  [ 9] __x64_sys_pread64_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] __libc_pread64
  [13] sun.nio.ch.FileDispatcherImpl.pread0
  [14] sun.nio.ch.FileDispatcherImpl.pread
  [15] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [16] sun.nio.ch.IOUtil.read
  [17] sun.nio.ch.IOUtil.read
  [18] sun.nio.ch.FileChannelImpl.readInternal
  [19] sun.nio.ch.FileChannelImpl.read
  [20] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [21] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [22] jdk.nio.zipfs.ZipFileSystem$2.fill
  [23] java.util.zip.InflaterInputStream.read
  [24] java.io.InputStream.readNBytes
  [25] java.io.InputStream.readAllBytes
  [26] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [27] com.scalamandra.ZipLib$$anon$1$$Lambda$65.0x0000000800d25648.apply
  [28] cats.effect.IOFiber.$anonfun$8
  [29] cats.effect.IOFiber$$Lambda$202.0x0000000800da9800.apply
  [30] cats.effect.unsafe.WorkerThread.blockOn
  [31] scala.concurrent.package$.blocking
  [32] cats.effect.IOFiber.runLoop
  [33] cats.effect.IOFiber.execR
  [34] cats.effect.IOFiber.run
  [35] cats.effect.unsafe.WorkerThread.run

--- 360403789 ns (0.02%), 36 samples
  [ 0] _raw_spin_lock_[k]
  [ 1] zio_wait?[zfs]_[k]
  [ 2] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 3] dmu_read_uio_dnode?[zfs]_[k]
  [ 4] dmu_read_uio_dbuf?[zfs]_[k]
  [ 5] mappedread?[zfs]_[k]
  [ 6] zfs_read?[zfs]_[k]
  [ 7] zpl_iter_read?[zfs]_[k]
  [ 8] new_sync_read_[k]
  [ 9] vfs_read_[k]
  [10] __x64_sys_pread64_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] __libc_pread64
  [14] sun.nio.ch.FileDispatcherImpl.pread0
  [15] sun.nio.ch.FileDispatcherImpl.pread
  [16] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [17] sun.nio.ch.IOUtil.read
  [18] sun.nio.ch.IOUtil.read
  [19] sun.nio.ch.FileChannelImpl.readInternal
  [20] sun.nio.ch.FileChannelImpl.read
  [21] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [22] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [23] jdk.nio.zipfs.ZipFileSystem$2.fill
  [24] java.util.zip.InflaterInputStream.read
  [25] java.io.InputStream.readNBytes
  [26] java.io.InputStream.readAllBytes
  [27] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [28] com.scalamandra.ZipLib$$anon$1$$Lambda$65.0x0000000800d25648.apply
  [29] cats.effect.IOFiber.$anonfun$8
  [30] cats.effect.IOFiber$$Lambda$202.0x0000000800da9800.apply
  [31] cats.effect.unsafe.WorkerThread.blockOn
  [32] scala.concurrent.package$.blocking
  [33] cats.effect.IOFiber.runLoop
  [34] cats.effect.IOFiber.execR
  [35] cats.effect.IOFiber.run
  [36] cats.effect.unsafe.WorkerThread.run

--- 359938275 ns (0.02%), 36 samples
  [ 0] void G1RebuildRemSetClosure::do_oop_work<narrowOop>(narrowOop*)
  [ 1] G1RebuildRemSetTask::G1RebuildRemSetHeapRegionClosure::do_heap_region(HeapRegion*)
  [ 2] HeapRegionManager::par_iterate(HeapRegionClosure*, HeapRegionClaimer*, unsigned int) const
  [ 3] G1RebuildRemSetTask::work(unsigned int)
  [ 4] GangWorker::loop()
  [ 5] GangWorker::run()
  [ 6] Thread::call_run()
  [ 7] thread_native_entry(Thread*)
  [ 8] start_thread

--- 350251711 ns (0.02%), 35 samples
  [ 0] dbuf_read_verify_dnode_crypt?[zfs]_[k]
  [ 1] dbuf_read?[zfs]_[k]
  [ 2] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 3] dmu_read_uio_dnode?[zfs]_[k]
  [ 4] dmu_read_uio_dbuf?[zfs]_[k]
  [ 5] mappedread?[zfs]_[k]
  [ 6] zfs_read?[zfs]_[k]
  [ 7] zpl_iter_read?[zfs]_[k]
  [ 8] new_sync_read_[k]
  [ 9] vfs_read_[k]
  [10] __x64_sys_pread64_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] __libc_pread64
  [14] sun.nio.ch.FileDispatcherImpl.pread0
  [15] sun.nio.ch.FileDispatcherImpl.pread
  [16] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [17] sun.nio.ch.IOUtil.read
  [18] sun.nio.ch.IOUtil.read
  [19] sun.nio.ch.FileChannelImpl.readInternal
  [20] sun.nio.ch.FileChannelImpl.read
  [21] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [22] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [23] jdk.nio.zipfs.ZipFileSystem$2.fill
  [24] java.util.zip.InflaterInputStream.read
  [25] java.io.InputStream.readNBytes
  [26] java.io.InputStream.readAllBytes
  [27] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [28] com.scalamandra.ZipLib$$anon$1$$Lambda$65.0x0000000800d25648.apply
  [29] cats.effect.IOFiber.$anonfun$8
  [30] cats.effect.IOFiber$$Lambda$202.0x0000000800da9800.apply
  [31] cats.effect.unsafe.WorkerThread.blockOn
  [32] scala.concurrent.package$.blocking
  [33] cats.effect.IOFiber.runLoop
  [34] cats.effect.IOFiber.execR
  [35] cats.effect.IOFiber.run
  [36] cats.effect.unsafe.WorkerThread.run

--- 350234959 ns (0.02%), 35 samples
  [ 0] __alloc_pages_[k]
  [ 1] __folio_alloc_[k]
  [ 2] vma_alloc_folio_[k]
  [ 3] do_anonymous_page_[k]
  [ 4] handle_pte_fault_[k]
  [ 5] __handle_mm_fault_[k]
  [ 6] handle_mm_fault_[k]
  [ 7] do_user_addr_fault_[k]
  [ 8] exc_page_fault_[k]
  [ 9] asm_exc_page_fault_[k]
  [10] java.io.InputStream.readNBytes
  [11] java.io.InputStream.readAllBytes
  [12] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [13] com.scalamandra.ZipLib$$anon$1$$Lambda$65.0x0000000800d25648.apply
  [14] cats.effect.IOFiber.$anonfun$8
  [15] cats.effect.IOFiber$$Lambda$202.0x0000000800da9800.apply
  [16] cats.effect.unsafe.WorkerThread.blockOn
  [17] scala.concurrent.package$.blocking
  [18] cats.effect.IOFiber.runLoop
  [19] cats.effect.IOFiber.execR
  [20] cats.effect.IOFiber.run
  [21] cats.effect.unsafe.WorkerThread.run

--- 350104405 ns (0.02%), 35 samples
  [ 0] java.util.zip.Inflater.inflate
  [ 1] java.util.zip.InflaterInputStream.read
  [ 2] java.io.InputStream.readNBytes
  [ 3] java.io.InputStream.readAllBytes
  [ 4] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [ 5] com.scalamandra.ZipLib$$anon$1$$Lambda$65.0x0000000800d25648.apply
  [ 6] cats.effect.IOFiber.$anonfun$8
  [ 7] cats.effect.IOFiber$$Lambda$202.0x0000000800da9800.apply
  [ 8] cats.effect.unsafe.WorkerThread.blockOn
  [ 9] scala.concurrent.package$.blocking
  [10] cats.effect.IOFiber.runLoop
  [11] cats.effect.IOFiber.execR
  [12] cats.effect.IOFiber.run
  [13] cats.effect.unsafe.WorkerThread.run

--- 340551039 ns (0.02%), 34 samples
  [ 0] zio_ready?[zfs]_[k]
  [ 1] zio_wait?[zfs]_[k]
  [ 2] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 3] dmu_read_uio_dnode?[zfs]_[k]
  [ 4] dmu_read_uio_dbuf?[zfs]_[k]
  [ 5] mappedread?[zfs]_[k]
  [ 6] zfs_read?[zfs]_[k]
  [ 7] zpl_iter_read?[zfs]_[k]
  [ 8] new_sync_read_[k]
  [ 9] vfs_read_[k]
  [10] __x64_sys_pread64_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] __libc_pread64
  [14] sun.nio.ch.FileDispatcherImpl.pread0
  [15] sun.nio.ch.FileDispatcherImpl.pread
  [16] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [17] sun.nio.ch.IOUtil.read
  [18] sun.nio.ch.IOUtil.read
  [19] sun.nio.ch.FileChannelImpl.readInternal
  [20] sun.nio.ch.FileChannelImpl.read
  [21] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [22] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [23] jdk.nio.zipfs.ZipFileSystem$2.fill
  [24] java.util.zip.InflaterInputStream.read
  [25] java.io.InputStream.readNBytes
  [26] java.io.InputStream.readAllBytes
  [27] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [28] com.scalamandra.ZipLib$$anon$1$$Lambda$65.0x0000000800d25648.apply
  [29] cats.effect.IOFiber.$anonfun$8
  [30] cats.effect.IOFiber$$Lambda$202.0x0000000800da9800.apply
  [31] cats.effect.unsafe.WorkerThread.blockOn
  [32] scala.concurrent.package$.blocking
  [33] cats.effect.IOFiber.runLoop
  [34] cats.effect.IOFiber.execR
  [35] cats.effect.IOFiber.run
  [36] cats.effect.unsafe.WorkerThread.run

--- 340314300 ns (0.02%), 34 samples
  [ 0] zrl_add_impl?[zfs]_[k]
  [ 1] dbuf_read?[zfs]_[k]
  [ 2] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 3] dmu_read_uio_dnode?[zfs]_[k]
  [ 4] dmu_read_uio_dbuf?[zfs]_[k]
  [ 5] mappedread?[zfs]_[k]
  [ 6] zfs_read?[zfs]_[k]
  [ 7] zpl_iter_read?[zfs]_[k]
  [ 8] new_sync_read_[k]
  [ 9] vfs_read_[k]
  [10] __x64_sys_pread64_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] __libc_pread64
  [14] sun.nio.ch.FileDispatcherImpl.pread0
  [15] sun.nio.ch.FileDispatcherImpl.pread
  [16] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [17] sun.nio.ch.IOUtil.read
  [18] sun.nio.ch.IOUtil.read
  [19] sun.nio.ch.FileChannelImpl.readInternal
  [20] sun.nio.ch.FileChannelImpl.read
  [21] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [22] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [23] jdk.nio.zipfs.ZipFileSystem$2.fill
  [24] java.util.zip.InflaterInputStream.read
  [25] java.io.InputStream.readNBytes
  [26] java.io.InputStream.readAllBytes
  [27] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [28] com.scalamandra.ZipLib$$anon$1$$Lambda$65.0x0000000800d25648.apply
  [29] cats.effect.IOFiber.$anonfun$8
  [30] cats.effect.IOFiber$$Lambda$202.0x0000000800da9800.apply
  [31] cats.effect.unsafe.WorkerThread.blockOn
  [32] scala.concurrent.package$.blocking
  [33] cats.effect.IOFiber.runLoop
  [34] cats.effect.IOFiber.execR
  [35] cats.effect.IOFiber.run
  [36] cats.effect.unsafe.WorkerThread.run

--- 339211308 ns (0.02%), 34 samples
  [ 0] free_swap_cache_[k]
  [ 1] free_pages_and_swap_cache_[k]
  [ 2] tlb_batch_pages_flush_[k]
  [ 3] tlb_flush_mmu_[k]
  [ 4] zap_pte_range_[k]
  [ 5] zap_pmd_range.isra.0_[k]
  [ 6] unmap_page_range_[k]
  [ 7] unmap_single_vma_[k]
  [ 8] unmap_vmas_[k]
  [ 9] unmap_region_[k]
  [10] __do_munmap_[k]
  [11] mmap_region_[k]
  [12] do_mmap_[k]
  [13] vm_mmap_pgoff_[k]
  [14] ksys_mmap_pgoff_[k]
  [15] __x64_sys_mmap_[k]
  [16] do_syscall_64_[k]
  [17] entry_SYSCALL_64_after_hwframe_[k]
  [18] __GI___mmap
  [19] G1PageBasedVirtualSpace::uncommit(unsigned long, unsigned long)
  [20] G1RegionsLargerThanCommitSizeMapper::uncommit_regions(unsigned int, unsigned long)
  [21] HeapRegionManager::uncommit_regions(unsigned int, unsigned int)
  [22] HeapRegionManager::uncommit_inactive_regions(unsigned int)
  [23] G1UncommitRegionTask::execute()
  [24] G1ServiceThread::run_task(G1ServiceTask*)
  [25] G1ServiceThread::run_service()
  [26] ConcurrentGCThread::run()
  [27] Thread::call_run()
  [28] thread_native_entry(Thread*)
  [29] start_thread

--- 330524907 ns (0.02%), 33 samples
  [ 0] percpu_counter_add_batch_[k]
  [ 1] wmsum_add?[zfs]_[k]
  [ 2] arc_buf_access?[zfs]_[k]
  [ 3] dbuf_hold_impl?[zfs]_[k]
  [ 4] dbuf_hold_level?[zfs]_[k]
  [ 5] dbuf_hold?[zfs]_[k]
  [ 6] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 7] dmu_read_uio_dnode?[zfs]_[k]
  [ 8] dmu_read_uio_dbuf?[zfs]_[k]
  [ 9] mappedread?[zfs]_[k]
  [10] zfs_read?[zfs]_[k]
  [11] zpl_iter_read?[zfs]_[k]
  [12] new_sync_read_[k]
  [13] vfs_read_[k]
  [14] __x64_sys_pread64_[k]
  [15] do_syscall_64_[k]
  [16] entry_SYSCALL_64_after_hwframe_[k]
  [17] __libc_pread64
  [18] sun.nio.ch.FileDispatcherImpl.pread0
  [19] sun.nio.ch.FileDispatcherImpl.pread
  [20] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [21] sun.nio.ch.IOUtil.read
  [22] sun.nio.ch.IOUtil.read
  [23] sun.nio.ch.FileChannelImpl.readInternal
  [24] sun.nio.ch.FileChannelImpl.read
  [25] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [26] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [27] jdk.nio.zipfs.ZipFileSystem$2.fill
  [28] java.util.zip.InflaterInputStream.read
  [29] java.io.InputStream.readNBytes
  [30] java.io.InputStream.readAllBytes
  [31] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [32] com.scalamandra.ZipLib$$anon$1$$Lambda$65.0x0000000800d25648.apply
  [33] cats.effect.IOFiber.$anonfun$8
  [34] cats.effect.IOFiber$$Lambda$202.0x0000000800da9800.apply
  [35] cats.effect.unsafe.WorkerThread.blockOn
  [36] scala.concurrent.package$.blocking
  [37] cats.effect.IOFiber.runLoop
  [38] cats.effect.IOFiber.execR
  [39] cats.effect.IOFiber.run
  [40] cats.effect.unsafe.WorkerThread.run

--- 330515470 ns (0.02%), 33 samples
  [ 0] __mod_lruvec_page_state_[k]
  [ 1] page_add_new_anon_rmap_[k]
  [ 2] do_anonymous_page_[k]
  [ 3] handle_pte_fault_[k]
  [ 4] __handle_mm_fault_[k]
  [ 5] handle_mm_fault_[k]
  [ 6] do_user_addr_fault_[k]
  [ 7] exc_page_fault_[k]
  [ 8] asm_exc_page_fault_[k]
  [ 9] java.io.InputStream.readNBytes
  [10] java.io.InputStream.readAllBytes
  [11] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [12] com.scalamandra.ZipLib$$anon$1$$Lambda$65.0x0000000800d25648.apply
  [13] cats.effect.IOFiber.$anonfun$8
  [14] cats.effect.IOFiber$$Lambda$202.0x0000000800da9800.apply
  [15] cats.effect.unsafe.WorkerThread.blockOn
  [16] scala.concurrent.package$.blocking
  [17] cats.effect.IOFiber.runLoop
  [18] cats.effect.IOFiber.execR
  [19] cats.effect.IOFiber.run
  [20] cats.effect.unsafe.WorkerThread.run

--- 330514097 ns (0.02%), 33 samples
  [ 0] zrl_add_impl?[zfs]_[k]
  [ 1] dmu_read_uio_dbuf?[zfs]_[k]
  [ 2] mappedread?[zfs]_[k]
  [ 3] zfs_read?[zfs]_[k]
  [ 4] zpl_iter_read?[zfs]_[k]
  [ 5] new_sync_read_[k]
  [ 6] vfs_read_[k]
  [ 7] __x64_sys_pread64_[k]
  [ 8] do_syscall_64_[k]
  [ 9] entry_SYSCALL_64_after_hwframe_[k]
  [10] __libc_pread64
  [11] sun.nio.ch.FileDispatcherImpl.pread0
  [12] sun.nio.ch.FileDispatcherImpl.pread
  [13] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [14] sun.nio.ch.IOUtil.read
  [15] sun.nio.ch.IOUtil.read
  [16] sun.nio.ch.FileChannelImpl.readInternal
  [17] sun.nio.ch.FileChannelImpl.read
  [18] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [19] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [20] jdk.nio.zipfs.ZipFileSystem$2.fill
  [21] java.util.zip.InflaterInputStream.read
  [22] java.io.InputStream.readNBytes
  [23] java.io.InputStream.readAllBytes
  [24] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [25] com.scalamandra.ZipLib$$anon$1$$Lambda$65.0x0000000800d25648.apply
  [26] cats.effect.IOFiber.$anonfun$8
  [27] cats.effect.IOFiber$$Lambda$202.0x0000000800da9800.apply
  [28] cats.effect.unsafe.WorkerThread.blockOn
  [29] scala.concurrent.package$.blocking
  [30] cats.effect.IOFiber.runLoop
  [31] cats.effect.IOFiber.execR
  [32] cats.effect.IOFiber.run
  [33] cats.effect.unsafe.WorkerThread.run

--- 330475413 ns (0.02%), 33 samples
  [ 0] __list_del_entry?[zfs]_[k]
  [ 1] list_del?[zfs]_[k]
  [ 2] list_destroy?[zfs]_[k]
  [ 3] zio_destroy?[zfs]_[k]
  [ 4] zio_wait?[zfs]_[k]
  [ 5] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 6] dmu_read_uio_dnode?[zfs]_[k]
  [ 7] dmu_read_uio_dbuf?[zfs]_[k]
  [ 8] mappedread?[zfs]_[k]
  [ 9] zfs_read?[zfs]_[k]
  [10] zpl_iter_read?[zfs]_[k]
  [11] new_sync_read_[k]
  [12] vfs_read_[k]
  [13] __x64_sys_pread64_[k]
  [14] do_syscall_64_[k]
  [15] entry_SYSCALL_64_after_hwframe_[k]
  [16] __libc_pread64
  [17] sun.nio.ch.FileDispatcherImpl.pread0
  [18] sun.nio.ch.FileDispatcherImpl.pread
  [19] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [20] sun.nio.ch.IOUtil.read
  [21] sun.nio.ch.IOUtil.read
  [22] sun.nio.ch.FileChannelImpl.readInternal
  [23] sun.nio.ch.FileChannelImpl.read
  [24] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [25] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [26] jdk.nio.zipfs.ZipFileSystem$2.fill
  [27] java.util.zip.InflaterInputStream.read
  [28] java.io.InputStream.readNBytes
  [29] java.io.InputStream.readAllBytes
  [30] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [31] com.scalamandra.ZipLib$$anon$1$$Lambda$65.0x0000000800d25648.apply
  [32] cats.effect.IOFiber.$anonfun$8
  [33] cats.effect.IOFiber$$Lambda$202.0x0000000800da9800.apply
  [34] cats.effect.unsafe.WorkerThread.blockOn
  [35] scala.concurrent.package$.blocking
  [36] cats.effect.IOFiber.runLoop
  [37] cats.effect.IOFiber.execR
  [38] cats.effect.IOFiber.run
  [39] cats.effect.unsafe.WorkerThread.run

--- 330355735 ns (0.02%), 33 samples
  [ 0] java.util.zip.Inflater.inflateBytesBytes
  [ 1] java.util.zip.Inflater.inflate
  [ 2] java.util.zip.InflaterInputStream.read
  [ 3] java.io.InputStream.readNBytes
  [ 4] java.io.InputStream.readAllBytes
  [ 5] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [ 6] com.scalamandra.ZipLib$$anon$1$$Lambda$65.0x0000000800d25648.apply
  [ 7] cats.effect.IOFiber.$anonfun$8
  [ 8] cats.effect.IOFiber$$Lambda$202.0x0000000800da9800.apply
  [ 9] cats.effect.unsafe.WorkerThread.blockOn
  [10] scala.concurrent.package$.blocking
  [11] cats.effect.IOFiber.runLoop
  [12] cats.effect.IOFiber.execR
  [13] cats.effect.IOFiber.run
  [14] cats.effect.unsafe.WorkerThread.run

--- 330260074 ns (0.02%), 33 samples
  [ 0] apparmor_file_permission_[k]
  [ 1] rw_verify_area_[k]
  [ 2] vfs_read_[k]
  [ 3] __x64_sys_pread64_[k]
  [ 4] do_syscall_64_[k]
  [ 5] entry_SYSCALL_64_after_hwframe_[k]
  [ 6] __libc_pread64
  [ 7] sun.nio.ch.FileDispatcherImpl.pread0
  [ 8] sun.nio.ch.FileDispatcherImpl.pread
  [ 9] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [10] sun.nio.ch.IOUtil.read
  [11] sun.nio.ch.IOUtil.read
  [12] sun.nio.ch.FileChannelImpl.readInternal
  [13] sun.nio.ch.FileChannelImpl.read
  [14] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [15] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [16] jdk.nio.zipfs.ZipFileSystem$2.fill
  [17] java.util.zip.InflaterInputStream.read
  [18] java.io.InputStream.readNBytes
  [19] java.io.InputStream.readAllBytes
  [20] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [21] com.scalamandra.ZipLib$$anon$1$$Lambda$65.0x0000000800d25648.apply
  [22] cats.effect.IOFiber.$anonfun$8
  [23] cats.effect.IOFiber$$Lambda$202.0x0000000800da9800.apply
  [24] cats.effect.unsafe.WorkerThread.blockOn
  [25] scala.concurrent.package$.blocking
  [26] cats.effect.IOFiber.runLoop
  [27] cats.effect.IOFiber.execR
  [28] cats.effect.IOFiber.run
  [29] cats.effect.unsafe.WorkerThread.run

--- 330141252 ns (0.02%), 33 samples
  [ 0] cityhash4?[zcommon]_[k]
  [ 1] dbuf_hash?[zfs]_[k]
  [ 2] dbuf_find?[zfs]_[k]
  [ 3] dbuf_hold_impl?[zfs]_[k]
  [ 4] dbuf_hold_level?[zfs]_[k]
  [ 5] dbuf_hold?[zfs]_[k]
  [ 6] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 7] dmu_read_uio_dnode?[zfs]_[k]
  [ 8] dmu_read_uio_dbuf?[zfs]_[k]
  [ 9] mappedread?[zfs]_[k]
  [10] zfs_read?[zfs]_[k]
  [11] zpl_iter_read?[zfs]_[k]
  [12] new_sync_read_[k]
  [13] vfs_read_[k]
  [14] __x64_sys_pread64_[k]
  [15] do_syscall_64_[k]
  [16] entry_SYSCALL_64_after_hwframe_[k]
  [17] __libc_pread64
  [18] sun.nio.ch.FileDispatcherImpl.pread0
  [19] sun.nio.ch.FileDispatcherImpl.pread
  [20] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [21] sun.nio.ch.IOUtil.read
  [22] sun.nio.ch.IOUtil.read
  [23] sun.nio.ch.FileChannelImpl.readInternal
  [24] sun.nio.ch.FileChannelImpl.read
  [25] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [26] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [27] jdk.nio.zipfs.ZipFileSystem$2.fill
  [28] java.util.zip.InflaterInputStream.read
  [29] java.io.InputStream.readNBytes
  [30] java.io.InputStream.readAllBytes
  [31] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [32] com.scalamandra.ZipLib$$anon$1$$Lambda$65.0x0000000800d25648.apply
  [33] cats.effect.IOFiber.$anonfun$8
  [34] cats.effect.IOFiber$$Lambda$202.0x0000000800da9800.apply
  [35] cats.effect.unsafe.WorkerThread.blockOn
  [36] scala.concurrent.package$.blocking
  [37] cats.effect.IOFiber.runLoop
  [38] cats.effect.IOFiber.execR
  [39] cats.effect.IOFiber.run
  [40] cats.effect.unsafe.WorkerThread.run

--- 330036032 ns (0.02%), 33 samples
  [ 0] native_queued_spin_lock_slowpath.part.0_[k]
  [ 1] native_queued_spin_lock_slowpath_[k]
  [ 2] _raw_spin_lock_[k]
  [ 3] do_anonymous_page_[k]
  [ 4] handle_pte_fault_[k]
  [ 5] __handle_mm_fault_[k]
  [ 6] handle_mm_fault_[k]
  [ 7] do_user_addr_fault_[k]
  [ 8] exc_page_fault_[k]
  [ 9] asm_exc_page_fault_[k]
  [10] __memcpy_sse2_unaligned_erms
  [11] G1ParScanThreadState::steal_and_trim_queue(GenericTaskQueueSet<OverflowTaskQueue<ScannerTask, (MEMFLAGS)5, 131072u>, (MEMFLAGS)5>*)
  [12] G1ParEvacuateFollowersClosure::do_void()
  [13] G1EvacuateRegionsTask::evacuate_live_objects(G1ParScanThreadState*, unsigned int)
  [14] G1EvacuateRegionsBaseTask::work(unsigned int)
  [15] GangWorker::loop()
  [16] GangWorker::run()
  [17] Thread::call_run()
  [18] thread_native_entry(Thread*)
  [19] start_thread

--- 329754796 ns (0.02%), 33 samples
  [ 0] _raw_spin_unlock_irqrestore_[k]
  [ 1] release_pages_[k]
  [ 2] free_pages_and_swap_cache_[k]
  [ 3] tlb_batch_pages_flush_[k]
  [ 4] tlb_finish_mmu_[k]
  [ 5] unmap_region_[k]
  [ 6] __do_munmap_[k]
  [ 7] mmap_region_[k]
  [ 8] do_mmap_[k]
  [ 9] vm_mmap_pgoff_[k]
  [10] ksys_mmap_pgoff_[k]
  [11] __x64_sys_mmap_[k]
  [12] do_syscall_64_[k]
  [13] entry_SYSCALL_64_after_hwframe_[k]
  [14] __GI___mmap
  [15] G1PageBasedVirtualSpace::uncommit(unsigned long, unsigned long)
  [16] G1RegionsLargerThanCommitSizeMapper::uncommit_regions(unsigned int, unsigned long)
  [17] HeapRegionManager::uncommit_regions(unsigned int, unsigned int)
  [18] HeapRegionManager::uncommit_inactive_regions(unsigned int)
  [19] G1UncommitRegionTask::execute()
  [20] G1ServiceThread::run_task(G1ServiceTask*)
  [21] G1ServiceThread::run_service()
  [22] ConcurrentGCThread::run()
  [23] Thread::call_run()
  [24] thread_native_entry(Thread*)
  [25] start_thread

--- 320409997 ns (0.02%), 32 samples
  [ 0] fsnotify_perm.part.0_[k]
  [ 1] security_file_permission_[k]
  [ 2] rw_verify_area_[k]
  [ 3] vfs_read_[k]
  [ 4] __x64_sys_pread64_[k]
  [ 5] do_syscall_64_[k]
  [ 6] entry_SYSCALL_64_after_hwframe_[k]
  [ 7] __libc_pread64
  [ 8] sun.nio.ch.FileDispatcherImpl.pread0
  [ 9] sun.nio.ch.FileDispatcherImpl.pread
  [10] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [11] sun.nio.ch.IOUtil.read
  [12] sun.nio.ch.IOUtil.read
  [13] sun.nio.ch.FileChannelImpl.readInternal
  [14] sun.nio.ch.FileChannelImpl.read
  [15] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [16] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [17] jdk.nio.zipfs.ZipFileSystem$2.fill
  [18] java.util.zip.InflaterInputStream.read
  [19] java.io.InputStream.readNBytes
  [20] java.io.InputStream.readAllBytes
  [21] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [22] com.scalamandra.ZipLib$$anon$1$$Lambda$65.0x0000000800d25648.apply
  [23] cats.effect.IOFiber.$anonfun$8
  [24] cats.effect.IOFiber$$Lambda$202.0x0000000800da9800.apply
  [25] cats.effect.unsafe.WorkerThread.blockOn
  [26] scala.concurrent.package$.blocking
  [27] cats.effect.IOFiber.runLoop
  [28] cats.effect.IOFiber.execR
  [29] cats.effect.IOFiber.run
  [30] cats.effect.unsafe.WorkerThread.run

--- 320303256 ns (0.02%), 32 samples
  [ 0] _raw_spin_unlock_irqrestore_[k]
  [ 1] __pagevec_lru_add_[k]
  [ 2] folio_add_lru_[k]
  [ 3] lru_cache_add_[k]
  [ 4] lru_cache_add_inactive_or_unevictable_[k]
  [ 5] do_anonymous_page_[k]
  [ 6] handle_pte_fault_[k]
  [ 7] __handle_mm_fault_[k]
  [ 8] handle_mm_fault_[k]
  [ 9] do_user_addr_fault_[k]
  [10] exc_page_fault_[k]
  [11] asm_exc_page_fault_[k]
  [12] __memset_avx2_unaligned_erms
  [13] MemAllocator::allocate() const
  [14] TypeArrayKlass::allocate_common(int, bool, JavaThread*)
  [15] JVMCIRuntime::new_array_common(JavaThread*, Klass*, int, bool)
  [16] java.io.InputStream.readNBytes
  [17] java.io.InputStream.readAllBytes
  [18] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [19] com.scalamandra.ZipLib$$anon$1$$Lambda$65.0x0000000800d25648.apply
  [20] cats.effect.IOFiber.$anonfun$8
  [21] cats.effect.IOFiber$$Lambda$202.0x0000000800da9800.apply
  [22] cats.effect.unsafe.WorkerThread.blockOn
  [23] scala.concurrent.package$.blocking
  [24] cats.effect.IOFiber.runLoop
  [25] cats.effect.IOFiber.execR
  [26] cats.effect.IOFiber.run
  [27] cats.effect.unsafe.WorkerThread.run

--- 320213534 ns (0.02%), 32 samples
  [ 0] mappedread?[zfs]_[k]
  [ 1] zfs_read?[zfs]_[k]
  [ 2] zpl_iter_read?[zfs]_[k]
  [ 3] new_sync_read_[k]
  [ 4] vfs_read_[k]
  [ 5] __x64_sys_pread64_[k]
  [ 6] do_syscall_64_[k]
  [ 7] entry_SYSCALL_64_after_hwframe_[k]
  [ 8] __libc_pread64
  [ 9] sun.nio.ch.FileDispatcherImpl.pread0
  [10] sun.nio.ch.FileDispatcherImpl.pread
  [11] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [12] sun.nio.ch.IOUtil.read
  [13] sun.nio.ch.IOUtil.read
  [14] sun.nio.ch.FileChannelImpl.readInternal
  [15] sun.nio.ch.FileChannelImpl.read
  [16] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [17] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [18] jdk.nio.zipfs.ZipFileSystem$2.fill
  [19] java.util.zip.InflaterInputStream.read
  [20] java.io.InputStream.readNBytes
  [21] java.io.InputStream.readAllBytes
  [22] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [23] com.scalamandra.ZipLib$$anon$1$$Lambda$65.0x0000000800d25648.apply
  [24] cats.effect.IOFiber.$anonfun$8
  [25] cats.effect.IOFiber$$Lambda$202.0x0000000800da9800.apply
  [26] cats.effect.unsafe.WorkerThread.blockOn
  [27] scala.concurrent.package$.blocking
  [28] cats.effect.IOFiber.runLoop
  [29] cats.effect.IOFiber.execR
  [30] cats.effect.IOFiber.run
  [31] cats.effect.unsafe.WorkerThread.run

--- 319817284 ns (0.02%), 32 samples
  [ 0] SpinPause
  [ 1] G1CMTask::do_marking_step(double, bool, bool)
  [ 2] G1CMConcurrentMarkingTask::work(unsigned int)
  [ 3] GangWorker::loop()
  [ 4] GangWorker::run()
  [ 5] Thread::call_run()
  [ 6] thread_native_entry(Thread*)
  [ 7] start_thread

--- 310347681 ns (0.02%), 31 samples
  [ 0] dbuf_cache_multilist_index_func?[zfs]_[k]
  [ 1] dbuf_hold_impl?[zfs]_[k]
  [ 2] dbuf_hold_level?[zfs]_[k]
  [ 3] dbuf_hold?[zfs]_[k]
  [ 4] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 5] dmu_read_uio_dnode?[zfs]_[k]
  [ 6] dmu_read_uio_dbuf?[zfs]_[k]
  [ 7] mappedread?[zfs]_[k]
  [ 8] zfs_read?[zfs]_[k]
  [ 9] zpl_iter_read?[zfs]_[k]
  [10] new_sync_read_[k]
  [11] vfs_read_[k]
  [12] __x64_sys_pread64_[k]
  [13] do_syscall_64_[k]
  [14] entry_SYSCALL_64_after_hwframe_[k]
  [15] __libc_pread64
  [16] sun.nio.ch.FileDispatcherImpl.pread0
  [17] sun.nio.ch.FileDispatcherImpl.pread
  [18] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [19] sun.nio.ch.IOUtil.read
  [20] sun.nio.ch.IOUtil.read
  [21] sun.nio.ch.FileChannelImpl.readInternal
  [22] sun.nio.ch.FileChannelImpl.read
  [23] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [24] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [25] jdk.nio.zipfs.ZipFileSystem$2.fill
  [26] java.util.zip.InflaterInputStream.read
  [27] java.io.InputStream.readNBytes
  [28] java.io.InputStream.readAllBytes
  [29] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [30] com.scalamandra.ZipLib$$anon$1$$Lambda$65.0x0000000800d25648.apply
  [31] cats.effect.IOFiber.$anonfun$8
  [32] cats.effect.IOFiber$$Lambda$202.0x0000000800da9800.apply
  [33] cats.effect.unsafe.WorkerThread.blockOn
  [34] scala.concurrent.package$.blocking
  [35] cats.effect.IOFiber.runLoop
  [36] cats.effect.IOFiber.execR
  [37] cats.effect.IOFiber.run
  [38] cats.effect.unsafe.WorkerThread.run

--- 310187186 ns (0.02%), 31 samples
  [ 0] zio_wait_for_children?[zfs]_[k]
  [ 1] zio_ready?[zfs]_[k]
  [ 2] zio_wait?[zfs]_[k]
  [ 3] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 4] dmu_read_uio_dnode?[zfs]_[k]
  [ 5] dmu_read_uio_dbuf?[zfs]_[k]
  [ 6] mappedread?[zfs]_[k]
  [ 7] zfs_read?[zfs]_[k]
  [ 8] zpl_iter_read?[zfs]_[k]
  [ 9] new_sync_read_[k]
  [10] vfs_read_[k]
  [11] __x64_sys_pread64_[k]
  [12] do_syscall_64_[k]
  [13] entry_SYSCALL_64_after_hwframe_[k]
  [14] __libc_pread64
  [15] sun.nio.ch.FileDispatcherImpl.pread0
  [16] sun.nio.ch.FileDispatcherImpl.pread
  [17] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [18] sun.nio.ch.IOUtil.read
  [19] sun.nio.ch.IOUtil.read
  [20] sun.nio.ch.FileChannelImpl.readInternal
  [21] sun.nio.ch.FileChannelImpl.read
  [22] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [23] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [24] jdk.nio.zipfs.ZipFileSystem$2.fill
  [25] java.util.zip.InflaterInputStream.read
  [26] java.io.InputStream.readNBytes
  [27] java.io.InputStream.readAllBytes
  [28] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [29] com.scalamandra.ZipLib$$anon$1$$Lambda$65.0x0000000800d25648.apply
  [30] cats.effect.IOFiber.$anonfun$8
  [31] cats.effect.IOFiber$$Lambda$202.0x0000000800da9800.apply
  [32] cats.effect.unsafe.WorkerThread.blockOn
  [33] scala.concurrent.package$.blocking
  [34] cats.effect.IOFiber.runLoop
  [35] cats.effect.IOFiber.execR
  [36] cats.effect.IOFiber.run
  [37] cats.effect.unsafe.WorkerThread.run

--- 310000864 ns (0.02%), 31 samples
  [ 0] void OopOopIterateDispatch<G1CMOopClosure>::Table::oop_oop_iterate<ObjArrayKlass, narrowOop>(G1CMOopClosure*, oopDesc*, Klass*)
  [ 1] void G1CMTask::process_grey_task_entry<true>(G1TaskQueueEntry)
  [ 2] G1CMTask::drain_local_queue(bool) [clone .part.0] [clone .constprop.1]
  [ 3] G1CMTask::do_marking_step(double, bool, bool)
  [ 4] G1CMConcurrentMarkingTask::work(unsigned int)
  [ 5] GangWorker::loop()
  [ 6] GangWorker::run()
  [ 7] Thread::call_run()
  [ 8] thread_native_entry(Thread*)
  [ 9] start_thread

--- 300530437 ns (0.02%), 30 samples
  [ 0] percpu_counter_add_batch_[k]
  [ 1] wmsum_add?[zfs]_[k]
  [ 2] arc_access?[zfs]_[k]
  [ 3] arc_buf_access?[zfs]_[k]
  [ 4] dbuf_hold_impl?[zfs]_[k]
  [ 5] dbuf_hold_level?[zfs]_[k]
  [ 6] dbuf_hold?[zfs]_[k]
  [ 7] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 8] dmu_read_uio_dnode?[zfs]_[k]
  [ 9] dmu_read_uio_dbuf?[zfs]_[k]
  [10] mappedread?[zfs]_[k]
  [11] zfs_read?[zfs]_[k]
  [12] zpl_iter_read?[zfs]_[k]
  [13] new_sync_read_[k]
  [14] vfs_read_[k]
  [15] __x64_sys_pread64_[k]
  [16] do_syscall_64_[k]
  [17] entry_SYSCALL_64_after_hwframe_[k]
  [18] __libc_pread64
  [19] sun.nio.ch.FileDispatcherImpl.pread0
  [20] sun.nio.ch.FileDispatcherImpl.pread
  [21] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [22] sun.nio.ch.IOUtil.read
  [23] sun.nio.ch.IOUtil.read
  [24] sun.nio.ch.FileChannelImpl.readInternal
  [25] sun.nio.ch.FileChannelImpl.read
  [26] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [27] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [28] jdk.nio.zipfs.ZipFileSystem$2.fill
  [29] java.util.zip.InflaterInputStream.read
  [30] java.io.InputStream.readNBytes
  [31] java.io.InputStream.readAllBytes
  [32] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [33] com.scalamandra.ZipLib$$anon$1$$Lambda$65.0x0000000800d25648.apply
  [34] cats.effect.IOFiber.$anonfun$8
  [35] cats.effect.IOFiber$$Lambda$202.0x0000000800da9800.apply
  [36] cats.effect.unsafe.WorkerThread.blockOn
  [37] scala.concurrent.package$.blocking
  [38] cats.effect.IOFiber.runLoop
  [39] cats.effect.IOFiber.execR
  [40] cats.effect.IOFiber.run
  [41] cats.effect.unsafe.WorkerThread.run

--- 300444939 ns (0.02%), 30 samples
  [ 0] up_read_[k]
  [ 1] dmu_read_uio_dnode?[zfs]_[k]
  [ 2] dmu_read_uio_dbuf?[zfs]_[k]
  [ 3] mappedread?[zfs]_[k]
  [ 4] zfs_read?[zfs]_[k]
  [ 5] zpl_iter_read?[zfs]_[k]
  [ 6] new_sync_read_[k]
  [ 7] vfs_read_[k]
  [ 8] __x64_sys_pread64_[k]
  [ 9] do_syscall_64_[k]
  [10] entry_SYSCALL_64_after_hwframe_[k]
  [11] __libc_pread64
  [12] sun.nio.ch.FileDispatcherImpl.pread0
  [13] sun.nio.ch.FileDispatcherImpl.pread
  [14] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [15] sun.nio.ch.IOUtil.read
  [16] sun.nio.ch.IOUtil.read
  [17] sun.nio.ch.FileChannelImpl.readInternal
  [18] sun.nio.ch.FileChannelImpl.read
  [19] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [20] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [21] jdk.nio.zipfs.ZipFileSystem$2.fill
  [22] java.util.zip.InflaterInputStream.read
  [23] java.io.InputStream.readNBytes
  [24] java.io.InputStream.readAllBytes
  [25] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [26] com.scalamandra.ZipLib$$anon$1$$Lambda$65.0x0000000800d25648.apply
  [27] cats.effect.IOFiber.$anonfun$8
  [28] cats.effect.IOFiber$$Lambda$202.0x0000000800da9800.apply
  [29] cats.effect.unsafe.WorkerThread.blockOn
  [30] scala.concurrent.package$.blocking
  [31] cats.effect.IOFiber.runLoop
  [32] cats.effect.IOFiber.execR
  [33] cats.effect.IOFiber.run
  [34] cats.effect.unsafe.WorkerThread.run

--- 290330000 ns (0.02%), 29 samples
  [ 0] zio_execute_stack_check.constprop.0?[zfs]_[k]
  [ 1] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 2] dmu_read_uio_dnode?[zfs]_[k]
  [ 3] dmu_read_uio_dbuf?[zfs]_[k]
  [ 4] mappedread?[zfs]_[k]
  [ 5] zfs_read?[zfs]_[k]
  [ 6] zpl_iter_read?[zfs]_[k]
  [ 7] new_sync_read_[k]
  [ 8] vfs_read_[k]
  [ 9] __x64_sys_pread64_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] __libc_pread64
  [13] sun.nio.ch.FileDispatcherImpl.pread0
  [14] sun.nio.ch.FileDispatcherImpl.pread
  [15] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [16] sun.nio.ch.IOUtil.read
  [17] sun.nio.ch.IOUtil.read
  [18] sun.nio.ch.FileChannelImpl.readInternal
  [19] sun.nio.ch.FileChannelImpl.read
  [20] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [21] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [22] jdk.nio.zipfs.ZipFileSystem$2.fill
  [23] java.util.zip.InflaterInputStream.read
  [24] java.io.InputStream.readNBytes
  [25] java.io.InputStream.readAllBytes
  [26] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [27] com.scalamandra.ZipLib$$anon$1$$Lambda$65.0x0000000800d25648.apply
  [28] cats.effect.IOFiber.$anonfun$8
  [29] cats.effect.IOFiber$$Lambda$202.0x0000000800da9800.apply
  [30] cats.effect.unsafe.WorkerThread.blockOn
  [31] scala.concurrent.package$.blocking
  [32] cats.effect.IOFiber.runLoop
  [33] cats.effect.IOFiber.execR
  [34] cats.effect.IOFiber.run
  [35] cats.effect.unsafe.WorkerThread.run

--- 290225951 ns (0.02%), 29 samples
  [ 0] __memcpy_avx_unaligned
  [ 1] java.util.zip.Inflater.inflateBytesBytes
  [ 2] java.util.zip.Inflater.inflate
  [ 3] java.util.zip.InflaterInputStream.read
  [ 4] java.io.InputStream.readNBytes
  [ 5] java.io.InputStream.readAllBytes
  [ 6] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [ 7] com.scalamandra.ZipLib$$anon$1$$Lambda$65.0x0000000800d25648.apply
  [ 8] cats.effect.IOFiber.$anonfun$8
  [ 9] cats.effect.IOFiber$$Lambda$202.0x0000000800da9800.apply
  [10] cats.effect.unsafe.WorkerThread.blockOn
  [11] scala.concurrent.package$.blocking
  [12] cats.effect.IOFiber.runLoop
  [13] cats.effect.IOFiber.execR
  [14] cats.effect.IOFiber.run
  [15] cats.effect.unsafe.WorkerThread.run

--- 290196024 ns (0.02%), 29 samples
  [ 0] java.util.zip.InflaterInputStream.ensureOpen
  [ 1] java.util.zip.InflaterInputStream.read
  [ 2] java.io.InputStream.readNBytes
  [ 3] java.io.InputStream.readAllBytes
  [ 4] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [ 5] com.scalamandra.ZipLib$$anon$1$$Lambda$65.0x0000000800d25648.apply
  [ 6] cats.effect.IOFiber.$anonfun$8
  [ 7] cats.effect.IOFiber$$Lambda$202.0x0000000800da9800.apply
  [ 8] cats.effect.unsafe.WorkerThread.blockOn
  [ 9] scala.concurrent.package$.blocking
  [10] cats.effect.IOFiber.runLoop
  [11] cats.effect.IOFiber.execR
  [12] cats.effect.IOFiber.run
  [13] cats.effect.unsafe.WorkerThread.run

--- 280801231 ns (0.02%), 28 samples
  [ 0] __memcpy_sse2_unaligned_erms
  [ 1] G1ScanHRForRegionClosure::scan_heap_roots(HeapRegion*)
  [ 2] G1RemSet::scan_heap_roots(G1ParScanThreadState*, unsigned int, G1GCPhaseTimes::GCParPhases, G1GCPhaseTimes::GCParPhases, bool)
  [ 3] G1EvacuateRegionsTask::scan_roots(G1ParScanThreadState*, unsigned int)
  [ 4] G1EvacuateRegionsBaseTask::work(unsigned int)
  [ 5] GangWorker::loop()
  [ 6] GangWorker::run()
  [ 7] Thread::call_run()
  [ 8] thread_native_entry(Thread*)
  [ 9] start_thread

--- 280623251 ns (0.02%), 28 samples
  [ 0] kfree_[k]
  [ 1] spl_kmem_free_impl?[spl]_[k]
  [ 2] spl_kmem_free?[spl]_[k]
  [ 3] zfs_rangelock_free?[zfs]_[k]
  [ 4] zfs_rangelock_exit?[zfs]_[k]
  [ 5] zfs_read?[zfs]_[k]
  [ 6] zpl_iter_read?[zfs]_[k]
  [ 7] new_sync_read_[k]
  [ 8] vfs_read_[k]
  [ 9] __x64_sys_pread64_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] __libc_pread64
  [13] sun.nio.ch.FileDispatcherImpl.pread0
  [14] sun.nio.ch.FileDispatcherImpl.pread
  [15] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [16] sun.nio.ch.IOUtil.read
  [17] sun.nio.ch.IOUtil.read
  [18] sun.nio.ch.FileChannelImpl.readInternal
  [19] sun.nio.ch.FileChannelImpl.read
  [20] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [21] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [22] jdk.nio.zipfs.ZipFileSystem$2.fill
  [23] java.util.zip.InflaterInputStream.read
  [24] java.io.InputStream.readNBytes
  [25] java.io.InputStream.readAllBytes
  [26] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [27] com.scalamandra.ZipLib$$anon$1$$Lambda$65.0x0000000800d25648.apply
  [28] cats.effect.IOFiber.$anonfun$8
  [29] cats.effect.IOFiber$$Lambda$202.0x0000000800da9800.apply
  [30] cats.effect.unsafe.WorkerThread.blockOn
  [31] scala.concurrent.package$.blocking
  [32] cats.effect.IOFiber.runLoop
  [33] cats.effect.IOFiber.execR
  [34] cats.effect.IOFiber.run
  [35] cats.effect.unsafe.WorkerThread.run

--- 280217073 ns (0.02%), 28 samples
  [ 0] mutex_unlock_[k]
  [ 1] dmu_read_uio_dnode?[zfs]_[k]
  [ 2] dmu_read_uio_dbuf?[zfs]_[k]
  [ 3] mappedread?[zfs]_[k]
  [ 4] zfs_read?[zfs]_[k]
  [ 5] zpl_iter_read?[zfs]_[k]
  [ 6] new_sync_read_[k]
  [ 7] vfs_read_[k]
  [ 8] __x64_sys_pread64_[k]
  [ 9] do_syscall_64_[k]
  [10] entry_SYSCALL_64_after_hwframe_[k]
  [11] __libc_pread64
  [12] sun.nio.ch.FileDispatcherImpl.pread0
  [13] sun.nio.ch.FileDispatcherImpl.pread
  [14] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [15] sun.nio.ch.IOUtil.read
  [16] sun.nio.ch.IOUtil.read
  [17] sun.nio.ch.FileChannelImpl.readInternal
  [18] sun.nio.ch.FileChannelImpl.read
  [19] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [20] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [21] jdk.nio.zipfs.ZipFileSystem$2.fill
  [22] java.util.zip.InflaterInputStream.read
  [23] java.io.InputStream.readNBytes
  [24] java.io.InputStream.readAllBytes
  [25] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [26] com.scalamandra.ZipLib$$anon$1$$Lambda$65.0x0000000800d25648.apply
  [27] cats.effect.IOFiber.$anonfun$8
  [28] cats.effect.IOFiber$$Lambda$202.0x0000000800da9800.apply
  [29] cats.effect.unsafe.WorkerThread.blockOn
  [30] scala.concurrent.package$.blocking
  [31] cats.effect.IOFiber.runLoop
  [32] cats.effect.IOFiber.execR
  [33] cats.effect.IOFiber.run
  [34] cats.effect.unsafe.WorkerThread.run

--- 280211216 ns (0.02%), 28 samples
  [ 0] do_user_addr_fault_[k]
  [ 1] exc_page_fault_[k]
  [ 2] asm_exc_page_fault_[k]
  [ 3] java.io.InputStream.readNBytes
  [ 4] java.io.InputStream.readAllBytes
  [ 5] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [ 6] com.scalamandra.ZipLib$$anon$1$$Lambda$65.0x0000000800d25648.apply
  [ 7] cats.effect.IOFiber.$anonfun$8
  [ 8] cats.effect.IOFiber$$Lambda$202.0x0000000800da9800.apply
  [ 9] cats.effect.unsafe.WorkerThread.blockOn
  [10] scala.concurrent.package$.blocking
  [11] cats.effect.IOFiber.runLoop
  [12] cats.effect.IOFiber.execR
  [13] cats.effect.IOFiber.run
  [14] cats.effect.unsafe.WorkerThread.run

--- 280146436 ns (0.02%), 28 samples
  [ 0] zpl_iter_read?[zfs]_[k]
  [ 1] new_sync_read_[k]
  [ 2] vfs_read_[k]
  [ 3] __x64_sys_pread64_[k]
  [ 4] do_syscall_64_[k]
  [ 5] entry_SYSCALL_64_after_hwframe_[k]
  [ 6] __libc_pread64
  [ 7] sun.nio.ch.FileDispatcherImpl.pread0
  [ 8] sun.nio.ch.FileDispatcherImpl.pread
  [ 9] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [10] sun.nio.ch.IOUtil.read
  [11] sun.nio.ch.IOUtil.read
  [12] sun.nio.ch.FileChannelImpl.readInternal
  [13] sun.nio.ch.FileChannelImpl.read
  [14] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [15] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [16] jdk.nio.zipfs.ZipFileSystem$2.fill
  [17] java.util.zip.InflaterInputStream.read
  [18] java.io.InputStream.readNBytes
  [19] java.io.InputStream.readAllBytes
  [20] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [21] com.scalamandra.ZipLib$$anon$1$$Lambda$65.0x0000000800d25648.apply
  [22] cats.effect.IOFiber.$anonfun$8
  [23] cats.effect.IOFiber$$Lambda$202.0x0000000800da9800.apply
  [24] cats.effect.unsafe.WorkerThread.blockOn
  [25] scala.concurrent.package$.blocking
  [26] cats.effect.IOFiber.runLoop
  [27] cats.effect.IOFiber.execR
  [28] cats.effect.IOFiber.run
  [29] cats.effect.unsafe.WorkerThread.run

--- 280060814 ns (0.02%), 28 samples
  [ 0] sun.nio.ch.FileDispatcherImpl.pread0
  [ 1] sun.nio.ch.FileDispatcherImpl.pread
  [ 2] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [ 3] sun.nio.ch.IOUtil.read
  [ 4] sun.nio.ch.IOUtil.read
  [ 5] sun.nio.ch.FileChannelImpl.readInternal
  [ 6] sun.nio.ch.FileChannelImpl.read
  [ 7] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [ 8] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [ 9] jdk.nio.zipfs.ZipFileSystem$2.fill
  [10] java.util.zip.InflaterInputStream.read
  [11] java.io.InputStream.readNBytes
  [12] java.io.InputStream.readAllBytes
  [13] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [14] com.scalamandra.ZipLib$$anon$1$$Lambda$65.0x0000000800d25648.apply
  [15] cats.effect.IOFiber.$anonfun$8
  [16] cats.effect.IOFiber$$Lambda$202.0x0000000800da9800.apply
  [17] cats.effect.unsafe.WorkerThread.blockOn
  [18] scala.concurrent.package$.blocking
  [19] cats.effect.IOFiber.runLoop
  [20] cats.effect.IOFiber.execR
  [21] cats.effect.IOFiber.run
  [22] cats.effect.unsafe.WorkerThread.run

--- 270390690 ns (0.02%), 27 samples
  [ 0] spl_kmem_cache_alloc?[spl]_[k]
  [ 1] zio_create?[zfs]_[k]
  [ 2] zio_null?[zfs]_[k]
  [ 3] zio_root?[zfs]_[k]
  [ 4] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 5] dmu_read_uio_dnode?[zfs]_[k]
  [ 6] dmu_read_uio_dbuf?[zfs]_[k]
  [ 7] mappedread?[zfs]_[k]
  [ 8] zfs_read?[zfs]_[k]
  [ 9] zpl_iter_read?[zfs]_[k]
  [10] new_sync_read_[k]
  [11] vfs_read_[k]
  [12] __x64_sys_pread64_[k]
  [13] do_syscall_64_[k]
  [14] entry_SYSCALL_64_after_hwframe_[k]
  [15] __libc_pread64
  [16] sun.nio.ch.FileDispatcherImpl.pread0
  [17] sun.nio.ch.FileDispatcherImpl.pread
  [18] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [19] sun.nio.ch.IOUtil.read
  [20] sun.nio.ch.IOUtil.read
  [21] sun.nio.ch.FileChannelImpl.readInternal
  [22] sun.nio.ch.FileChannelImpl.read
  [23] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [24] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [25] jdk.nio.zipfs.ZipFileSystem$2.fill
  [26] java.util.zip.InflaterInputStream.read
  [27] java.io.InputStream.readNBytes
  [28] java.io.InputStream.readAllBytes
  [29] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [30] com.scalamandra.ZipLib$$anon$1$$Lambda$65.0x0000000800d25648.apply
  [31] cats.effect.IOFiber.$anonfun$8
  [32] cats.effect.IOFiber$$Lambda$202.0x0000000800da9800.apply
  [33] cats.effect.unsafe.WorkerThread.blockOn
  [34] scala.concurrent.package$.blocking
  [35] cats.effect.IOFiber.runLoop
  [36] cats.effect.IOFiber.execR
  [37] cats.effect.IOFiber.run
  [38] cats.effect.unsafe.WorkerThread.run

--- 270115607 ns (0.02%), 27 samples
  [ 0] java.util.ArrayList.add
  [ 1] java.util.ArrayList.add
  [ 2] java.io.InputStream.readNBytes
  [ 3] java.io.InputStream.readAllBytes
  [ 4] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [ 5] com.scalamandra.ZipLib$$anon$1$$Lambda$65.0x0000000800d25648.apply
  [ 6] cats.effect.IOFiber.$anonfun$8
  [ 7] cats.effect.IOFiber$$Lambda$202.0x0000000800da9800.apply
  [ 8] cats.effect.unsafe.WorkerThread.blockOn
  [ 9] scala.concurrent.package$.blocking
  [10] cats.effect.IOFiber.runLoop
  [11] cats.effect.IOFiber.execR
  [12] cats.effect.IOFiber.run
  [13] cats.effect.unsafe.WorkerThread.run

--- 270024113 ns (0.02%), 27 samples
  [ 0] native_queued_spin_lock_slowpath.part.0_[k]
  [ 1] native_queued_spin_lock_slowpath_[k]
  [ 2] _raw_spin_lock_[k]
  [ 3] do_anonymous_page_[k]
  [ 4] handle_pte_fault_[k]
  [ 5] __handle_mm_fault_[k]
  [ 6] handle_mm_fault_[k]
  [ 7] do_user_addr_fault_[k]
  [ 8] exc_page_fault_[k]
  [ 9] asm_exc_page_fault_[k]
  [10] __memcpy_sse2_unaligned_erms
  [11] G1ParEvacuateFollowersClosure::do_void()
  [12] G1EvacuateRegionsTask::evacuate_live_objects(G1ParScanThreadState*, unsigned int)
  [13] G1EvacuateRegionsBaseTask::work(unsigned int)
  [14] GangWorker::loop()
  [15] GangWorker::run()
  [16] Thread::call_run()
  [17] thread_native_entry(Thread*)
  [18] start_thread

--- 260488663 ns (0.02%), 26 samples
  [ 0] mutex_lock_[k]
  [ 1] zio_wait?[zfs]_[k]
  [ 2] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 3] dmu_read_uio_dnode?[zfs]_[k]
  [ 4] dmu_read_uio_dbuf?[zfs]_[k]
  [ 5] mappedread?[zfs]_[k]
  [ 6] zfs_read?[zfs]_[k]
  [ 7] zpl_iter_read?[zfs]_[k]
  [ 8] new_sync_read_[k]
  [ 9] vfs_read_[k]
  [10] __x64_sys_pread64_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] __libc_pread64
  [14] sun.nio.ch.FileDispatcherImpl.pread0
  [15] sun.nio.ch.FileDispatcherImpl.pread
  [16] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [17] sun.nio.ch.IOUtil.read
  [18] sun.nio.ch.IOUtil.read
  [19] sun.nio.ch.FileChannelImpl.readInternal
  [20] sun.nio.ch.FileChannelImpl.read
  [21] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [22] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [23] jdk.nio.zipfs.ZipFileSystem$2.fill
  [24] java.util.zip.InflaterInputStream.read
  [25] java.io.InputStream.readNBytes
  [26] java.io.InputStream.readAllBytes
  [27] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [28] com.scalamandra.ZipLib$$anon$1$$Lambda$65.0x0000000800d25648.apply
  [29] cats.effect.IOFiber.$anonfun$8
  [30] cats.effect.IOFiber$$Lambda$202.0x0000000800da9800.apply
  [31] cats.effect.unsafe.WorkerThread.blockOn
  [32] scala.concurrent.package$.blocking
  [33] cats.effect.IOFiber.runLoop
  [34] cats.effect.IOFiber.execR
  [35] cats.effect.IOFiber.run
  [36] cats.effect.unsafe.WorkerThread.run

--- 260334687 ns (0.02%), 26 samples
  [ 0] vdev_stat_update?[zfs]_[k]
  [ 1] zio_done?[zfs]_[k]
  [ 2] zio_wait?[zfs]_[k]
  [ 3] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 4] dmu_read_uio_dnode?[zfs]_[k]
  [ 5] dmu_read_uio_dbuf?[zfs]_[k]
  [ 6] mappedread?[zfs]_[k]
  [ 7] zfs_read?[zfs]_[k]
  [ 8] zpl_iter_read?[zfs]_[k]
  [ 9] new_sync_read_[k]
  [10] vfs_read_[k]
  [11] __x64_sys_pread64_[k]
  [12] do_syscall_64_[k]
  [13] entry_SYSCALL_64_after_hwframe_[k]
  [14] __libc_pread64
  [15] sun.nio.ch.FileDispatcherImpl.pread0
  [16] sun.nio.ch.FileDispatcherImpl.pread
  [17] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [18] sun.nio.ch.IOUtil.read
  [19] sun.nio.ch.IOUtil.read
  [20] sun.nio.ch.FileChannelImpl.readInternal
  [21] sun.nio.ch.FileChannelImpl.read
  [22] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [23] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [24] jdk.nio.zipfs.ZipFileSystem$2.fill
  [25] java.util.zip.InflaterInputStream.read
  [26] java.io.InputStream.readNBytes
  [27] java.io.InputStream.readAllBytes
  [28] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [29] com.scalamandra.ZipLib$$anon$1$$Lambda$65.0x0000000800d25648.apply
  [30] cats.effect.IOFiber.$anonfun$8
  [31] cats.effect.IOFiber$$Lambda$202.0x0000000800da9800.apply
  [32] cats.effect.unsafe.WorkerThread.blockOn
  [33] scala.concurrent.package$.blocking
  [34] cats.effect.IOFiber.runLoop
  [35] cats.effect.IOFiber.execR
  [36] cats.effect.IOFiber.run
  [37] cats.effect.unsafe.WorkerThread.run

--- 260270831 ns (0.02%), 26 samples
  [ 0] multilist_insert?[zfs]_[k]
  [ 1] dbuf_rele_and_unlock?[zfs]_[k]
  [ 2] dbuf_rele?[zfs]_[k]
  [ 3] dmu_buf_rele_array?[zfs]_[k]
  [ 4] dmu_read_uio_dnode?[zfs]_[k]
  [ 5] dmu_read_uio_dbuf?[zfs]_[k]
  [ 6] mappedread?[zfs]_[k]
  [ 7] zfs_read?[zfs]_[k]
  [ 8] zpl_iter_read?[zfs]_[k]
  [ 9] new_sync_read_[k]
  [10] vfs_read_[k]
  [11] __x64_sys_pread64_[k]
  [12] do_syscall_64_[k]
  [13] entry_SYSCALL_64_after_hwframe_[k]
  [14] __libc_pread64
  [15] sun.nio.ch.FileDispatcherImpl.pread0
  [16] sun.nio.ch.FileDispatcherImpl.pread
  [17] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [18] sun.nio.ch.IOUtil.read
  [19] sun.nio.ch.IOUtil.read
  [20] sun.nio.ch.FileChannelImpl.readInternal
  [21] sun.nio.ch.FileChannelImpl.read
  [22] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [23] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [24] jdk.nio.zipfs.ZipFileSystem$2.fill
  [25] java.util.zip.InflaterInputStream.read
  [26] java.io.InputStream.readNBytes
  [27] java.io.InputStream.readAllBytes
  [28] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [29] com.scalamandra.ZipLib$$anon$1$$Lambda$65.0x0000000800d25648.apply
  [30] cats.effect.IOFiber.$anonfun$8
  [31] cats.effect.IOFiber$$Lambda$202.0x0000000800da9800.apply
  [32] cats.effect.unsafe.WorkerThread.blockOn
  [33] scala.concurrent.package$.blocking
  [34] cats.effect.IOFiber.runLoop
  [35] cats.effect.IOFiber.execR
  [36] cats.effect.IOFiber.run
  [37] cats.effect.unsafe.WorkerThread.run

--- 260246502 ns (0.02%), 26 samples
  [ 0] zrl_add_impl?[zfs]_[k]
  [ 1] dbuf_read_verify_dnode_crypt?[zfs]_[k]
  [ 2] dbuf_read?[zfs]_[k]
  [ 3] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 4] dmu_read_uio_dnode?[zfs]_[k]
  [ 5] dmu_read_uio_dbuf?[zfs]_[k]
  [ 6] mappedread?[zfs]_[k]
  [ 7] zfs_read?[zfs]_[k]
  [ 8] zpl_iter_read?[zfs]_[k]
  [ 9] new_sync_read_[k]
  [10] vfs_read_[k]
  [11] __x64_sys_pread64_[k]
  [12] do_syscall_64_[k]
  [13] entry_SYSCALL_64_after_hwframe_[k]
  [14] __libc_pread64
  [15] sun.nio.ch.FileDispatcherImpl.pread0
  [16] sun.nio.ch.FileDispatcherImpl.pread
  [17] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [18] sun.nio.ch.IOUtil.read
  [19] sun.nio.ch.IOUtil.read
  [20] sun.nio.ch.FileChannelImpl.readInternal
  [21] sun.nio.ch.FileChannelImpl.read
  [22] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [23] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [24] jdk.nio.zipfs.ZipFileSystem$2.fill
  [25] java.util.zip.InflaterInputStream.read
  [26] java.io.InputStream.readNBytes
  [27] java.io.InputStream.readAllBytes
  [28] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [29] com.scalamandra.ZipLib$$anon$1$$Lambda$65.0x0000000800d25648.apply
  [30] cats.effect.IOFiber.$anonfun$8
  [31] cats.effect.IOFiber$$Lambda$202.0x0000000800da9800.apply
  [32] cats.effect.unsafe.WorkerThread.blockOn
  [33] scala.concurrent.package$.blocking
  [34] cats.effect.IOFiber.runLoop
  [35] cats.effect.IOFiber.execR
  [36] cats.effect.IOFiber.run
  [37] cats.effect.unsafe.WorkerThread.run

--- 260218966 ns (0.02%), 26 samples
  [ 0] __cv_broadcast?[spl]_[k]
  [ 1] zio_done?[zfs]_[k]
  [ 2] zio_wait?[zfs]_[k]
  [ 3] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 4] dmu_read_uio_dnode?[zfs]_[k]
  [ 5] dmu_read_uio_dbuf?[zfs]_[k]
  [ 6] mappedread?[zfs]_[k]
  [ 7] zfs_read?[zfs]_[k]
  [ 8] zpl_iter_read?[zfs]_[k]
  [ 9] new_sync_read_[k]
  [10] vfs_read_[k]
  [11] __x64_sys_pread64_[k]
  [12] do_syscall_64_[k]
  [13] entry_SYSCALL_64_after_hwframe_[k]
  [14] __libc_pread64
  [15] sun.nio.ch.FileDispatcherImpl.pread0
  [16] sun.nio.ch.FileDispatcherImpl.pread
  [17] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [18] sun.nio.ch.IOUtil.read
  [19] sun.nio.ch.IOUtil.read
  [20] sun.nio.ch.FileChannelImpl.readInternal
  [21] sun.nio.ch.FileChannelImpl.read
  [22] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [23] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [24] jdk.nio.zipfs.ZipFileSystem$2.fill
  [25] java.util.zip.InflaterInputStream.read
  [26] java.io.InputStream.readNBytes
  [27] java.io.InputStream.readAllBytes
  [28] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [29] com.scalamandra.ZipLib$$anon$1$$Lambda$65.0x0000000800d25648.apply
  [30] cats.effect.IOFiber.$anonfun$8
  [31] cats.effect.IOFiber$$Lambda$202.0x0000000800da9800.apply
  [32] cats.effect.unsafe.WorkerThread.blockOn
  [33] scala.concurrent.package$.blocking
  [34] cats.effect.IOFiber.runLoop
  [35] cats.effect.IOFiber.execR
  [36] cats.effect.IOFiber.run
  [37] cats.effect.unsafe.WorkerThread.run

--- 260187351 ns (0.02%), 26 samples
  [ 0] xas_start_[k]
  [ 1] xas_load_[k]
  [ 2] __filemap_get_folio_[k]
  [ 3] pagecache_get_page_[k]
  [ 4] find_lock_page?[zfs]_[k]
  [ 5] mappedread?[zfs]_[k]
  [ 6] zfs_read?[zfs]_[k]
  [ 7] zpl_iter_read?[zfs]_[k]
  [ 8] new_sync_read_[k]
  [ 9] vfs_read_[k]
  [10] __x64_sys_pread64_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] __libc_pread64
  [14] sun.nio.ch.FileDispatcherImpl.pread0
  [15] sun.nio.ch.FileDispatcherImpl.pread
  [16] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [17] sun.nio.ch.IOUtil.read
  [18] sun.nio.ch.IOUtil.read
  [19] sun.nio.ch.FileChannelImpl.readInternal
  [20] sun.nio.ch.FileChannelImpl.read
  [21] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [22] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [23] jdk.nio.zipfs.ZipFileSystem$2.fill
  [24] java.util.zip.InflaterInputStream.read
  [25] java.io.InputStream.readNBytes
  [26] java.io.InputStream.readAllBytes
  [27] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [28] com.scalamandra.ZipLib$$anon$1$$Lambda$65.0x0000000800d25648.apply
  [29] cats.effect.IOFiber.$anonfun$8
  [30] cats.effect.IOFiber$$Lambda$202.0x0000000800da9800.apply
  [31] cats.effect.unsafe.WorkerThread.blockOn
  [32] scala.concurrent.package$.blocking
  [33] cats.effect.IOFiber.runLoop
  [34] cats.effect.IOFiber.execR
  [35] cats.effect.IOFiber.run
  [36] cats.effect.unsafe.WorkerThread.run

--- 260017546 ns (0.02%), 26 samples
  [ 0] percpu_counter_add_batch_[k]
  [ 1] wmsum_add?[zfs]_[k]
  [ 2] dbuf_rele_and_unlock?[zfs]_[k]
  [ 3] dbuf_rele?[zfs]_[k]
  [ 4] dmu_buf_rele_array?[zfs]_[k]
  [ 5] dmu_read_uio_dnode?[zfs]_[k]
  [ 6] dmu_read_uio_dbuf?[zfs]_[k]
  [ 7] mappedread?[zfs]_[k]
  [ 8] zfs_read?[zfs]_[k]
  [ 9] zpl_iter_read?[zfs]_[k]
  [10] new_sync_read_[k]
  [11] vfs_read_[k]
  [12] __x64_sys_pread64_[k]
  [13] do_syscall_64_[k]
  [14] entry_SYSCALL_64_after_hwframe_[k]
  [15] __libc_pread64
  [16] sun.nio.ch.FileDispatcherImpl.pread0
  [17] sun.nio.ch.FileDispatcherImpl.pread
  [18] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [19] sun.nio.ch.IOUtil.read
  [20] sun.nio.ch.IOUtil.read
  [21] sun.nio.ch.FileChannelImpl.readInternal
  [22] sun.nio.ch.FileChannelImpl.read
  [23] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [24] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [25] jdk.nio.zipfs.ZipFileSystem$2.fill
  [26] java.util.zip.InflaterInputStream.read
  [27] java.io.InputStream.readNBytes
  [28] java.io.InputStream.readAllBytes
  [29] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [30] com.scalamandra.ZipLib$$anon$1$$Lambda$65.0x0000000800d25648.apply
  [31] cats.effect.IOFiber.$anonfun$8
  [32] cats.effect.IOFiber$$Lambda$202.0x0000000800da9800.apply
  [33] cats.effect.unsafe.WorkerThread.blockOn
  [34] scala.concurrent.package$.blocking
  [35] cats.effect.IOFiber.runLoop
  [36] cats.effect.IOFiber.execR
  [37] cats.effect.IOFiber.run
  [38] cats.effect.unsafe.WorkerThread.run

--- 259999058 ns (0.02%), 26 samples
  [ 0] up_read_[k]
  [ 1] exc_page_fault_[k]
  [ 2] asm_exc_page_fault_[k]
  [ 3] java.io.InputStream.readNBytes
  [ 4] java.io.InputStream.readAllBytes
  [ 5] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [ 6] com.scalamandra.ZipLib$$anon$1$$Lambda$65.0x0000000800d25648.apply
  [ 7] cats.effect.IOFiber.$anonfun$8
  [ 8] cats.effect.IOFiber$$Lambda$202.0x0000000800da9800.apply
  [ 9] cats.effect.unsafe.WorkerThread.blockOn
  [10] scala.concurrent.package$.blocking
  [11] cats.effect.IOFiber.runLoop
  [12] cats.effect.IOFiber.execR
  [13] cats.effect.IOFiber.run
  [14] cats.effect.unsafe.WorkerThread.run

--- 259848830 ns (0.02%), 26 samples
  [ 0] do_user_addr_fault_[k]
  [ 1] exc_page_fault_[k]
  [ 2] asm_exc_page_fault_[k]
  [ 3] __memcpy_sse2_unaligned_erms
  [ 4] G1ParEvacuateFollowersClosure::do_void()
  [ 5] G1EvacuateRegionsTask::evacuate_live_objects(G1ParScanThreadState*, unsigned int)
  [ 6] G1EvacuateRegionsBaseTask::work(unsigned int)
  [ 7] GangWorker::loop()
  [ 8] GangWorker::run()
  [ 9] Thread::call_run()
  [10] thread_native_entry(Thread*)
  [11] start_thread

--- 250379389 ns (0.02%), 25 samples
  [ 0] new_sync_read_[k]
  [ 1] vfs_read_[k]
  [ 2] __x64_sys_pread64_[k]
  [ 3] do_syscall_64_[k]
  [ 4] entry_SYSCALL_64_after_hwframe_[k]
  [ 5] __libc_pread64
  [ 6] sun.nio.ch.FileDispatcherImpl.pread0
  [ 7] sun.nio.ch.FileDispatcherImpl.pread
  [ 8] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [ 9] sun.nio.ch.IOUtil.read
  [10] sun.nio.ch.IOUtil.read
  [11] sun.nio.ch.FileChannelImpl.readInternal
  [12] sun.nio.ch.FileChannelImpl.read
  [13] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [14] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [15] jdk.nio.zipfs.ZipFileSystem$2.fill
  [16] java.util.zip.InflaterInputStream.read
  [17] java.io.InputStream.readNBytes
  [18] java.io.InputStream.readAllBytes
  [19] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [20] com.scalamandra.ZipLib$$anon$1$$Lambda$65.0x0000000800d25648.apply
  [21] cats.effect.IOFiber.$anonfun$8
  [22] cats.effect.IOFiber$$Lambda$202.0x0000000800da9800.apply
  [23] cats.effect.unsafe.WorkerThread.blockOn
  [24] scala.concurrent.package$.blocking
  [25] cats.effect.IOFiber.runLoop
  [26] cats.effect.IOFiber.execR
  [27] cats.effect.IOFiber.run
  [28] cats.effect.unsafe.WorkerThread.run

--- 250334462 ns (0.02%), 25 samples
  [ 0] rmqueue_pcplist.constprop.0_[k]
  [ 1] rmqueue_[k]
  [ 2] get_page_from_freelist_[k]
  [ 3] __alloc_pages_[k]
  [ 4] __folio_alloc_[k]
  [ 5] vma_alloc_folio_[k]
  [ 6] do_anonymous_page_[k]
  [ 7] handle_pte_fault_[k]
  [ 8] __handle_mm_fault_[k]
  [ 9] handle_mm_fault_[k]
  [10] do_user_addr_fault_[k]
  [11] exc_page_fault_[k]
  [12] asm_exc_page_fault_[k]
  [13] __memset_avx2_unaligned_erms
  [14] MemAllocator::allocate() const
  [15] TypeArrayKlass::allocate_common(int, bool, JavaThread*)
  [16] JVMCIRuntime::new_array_common(JavaThread*, Klass*, int, bool)
  [17] java.io.InputStream.readNBytes
  [18] java.io.InputStream.readAllBytes
  [19] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [20] com.scalamandra.ZipLib$$anon$1$$Lambda$65.0x0000000800d25648.apply
  [21] cats.effect.IOFiber.$anonfun$8
  [22] cats.effect.IOFiber$$Lambda$202.0x0000000800da9800.apply
  [23] cats.effect.unsafe.WorkerThread.blockOn
  [24] scala.concurrent.package$.blocking
  [25] cats.effect.IOFiber.runLoop
  [26] cats.effect.IOFiber.execR
  [27] cats.effect.IOFiber.run
  [28] cats.effect.unsafe.WorkerThread.run

--- 250301256 ns (0.02%), 25 samples
  [ 0] count_memcg_events.constprop.0_[k]
  [ 1] handle_mm_fault_[k]
  [ 2] do_user_addr_fault_[k]
  [ 3] exc_page_fault_[k]
  [ 4] asm_exc_page_fault_[k]
  [ 5] java.io.InputStream.readNBytes
  [ 6] java.io.InputStream.readAllBytes
  [ 7] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [ 8] com.scalamandra.ZipLib$$anon$1$$Lambda$65.0x0000000800d25648.apply
  [ 9] cats.effect.IOFiber.$anonfun$8
  [10] cats.effect.IOFiber$$Lambda$202.0x0000000800da9800.apply
  [11] cats.effect.unsafe.WorkerThread.blockOn
  [12] scala.concurrent.package$.blocking
  [13] cats.effect.IOFiber.runLoop
  [14] cats.effect.IOFiber.execR
  [15] cats.effect.IOFiber.run
  [16] cats.effect.unsafe.WorkerThread.run

--- 250278948 ns (0.02%), 25 samples
  [ 0] mutex_lock_[k]
  [ 1] zio_done?[zfs]_[k]
  [ 2] zio_wait?[zfs]_[k]
  [ 3] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 4] dmu_read_uio_dnode?[zfs]_[k]
  [ 5] dmu_read_uio_dbuf?[zfs]_[k]
  [ 6] mappedread?[zfs]_[k]
  [ 7] zfs_read?[zfs]_[k]
  [ 8] zpl_iter_read?[zfs]_[k]
  [ 9] new_sync_read_[k]
  [10] vfs_read_[k]
  [11] __x64_sys_pread64_[k]
  [12] do_syscall_64_[k]
  [13] entry_SYSCALL_64_after_hwframe_[k]
  [14] __libc_pread64
  [15] sun.nio.ch.FileDispatcherImpl.pread0
  [16] sun.nio.ch.FileDispatcherImpl.pread
  [17] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [18] sun.nio.ch.IOUtil.read
  [19] sun.nio.ch.IOUtil.read
  [20] sun.nio.ch.FileChannelImpl.readInternal
  [21] sun.nio.ch.FileChannelImpl.read
  [22] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [23] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [24] jdk.nio.zipfs.ZipFileSystem$2.fill
  [25] java.util.zip.InflaterInputStream.read
  [26] java.io.InputStream.readNBytes
  [27] java.io.InputStream.readAllBytes
  [28] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [29] com.scalamandra.ZipLib$$anon$1$$Lambda$65.0x0000000800d25648.apply
  [30] cats.effect.IOFiber.$anonfun$8
  [31] cats.effect.IOFiber$$Lambda$202.0x0000000800da9800.apply
  [32] cats.effect.unsafe.WorkerThread.blockOn
  [33] scala.concurrent.package$.blocking
  [34] cats.effect.IOFiber.runLoop
  [35] cats.effect.IOFiber.execR
  [36] cats.effect.IOFiber.run
  [37] cats.effect.unsafe.WorkerThread.run

--- 250274765 ns (0.02%), 25 samples
  [ 0] zio_inherit_child_errors?[zfs]_[k]
  [ 1] zio_done?[zfs]_[k]
  [ 2] zio_wait?[zfs]_[k]
  [ 3] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 4] dmu_read_uio_dnode?[zfs]_[k]
  [ 5] dmu_read_uio_dbuf?[zfs]_[k]
  [ 6] mappedread?[zfs]_[k]
  [ 7] zfs_read?[zfs]_[k]
  [ 8] zpl_iter_read?[zfs]_[k]
  [ 9] new_sync_read_[k]
  [10] vfs_read_[k]
  [11] __x64_sys_pread64_[k]
  [12] do_syscall_64_[k]
  [13] entry_SYSCALL_64_after_hwframe_[k]
  [14] __libc_pread64
  [15] sun.nio.ch.FileDispatcherImpl.pread0
  [16] sun.nio.ch.FileDispatcherImpl.pread
  [17] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [18] sun.nio.ch.IOUtil.read
  [19] sun.nio.ch.IOUtil.read
  [20] sun.nio.ch.FileChannelImpl.readInternal
  [21] sun.nio.ch.FileChannelImpl.read
  [22] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [23] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [24] jdk.nio.zipfs.ZipFileSystem$2.fill
  [25] java.util.zip.InflaterInputStream.read
  [26] java.io.InputStream.readNBytes
  [27] java.io.InputStream.readAllBytes
  [28] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [29] com.scalamandra.ZipLib$$anon$1$$Lambda$65.0x0000000800d25648.apply
  [30] cats.effect.IOFiber.$anonfun$8
  [31] cats.effect.IOFiber$$Lambda$202.0x0000000800da9800.apply
  [32] cats.effect.unsafe.WorkerThread.blockOn
  [33] scala.concurrent.package$.blocking
  [34] cats.effect.IOFiber.runLoop
  [35] cats.effect.IOFiber.execR
  [36] cats.effect.IOFiber.run
  [37] cats.effect.unsafe.WorkerThread.run

--- 250199647 ns (0.02%), 25 samples
  [ 0] sa_get_db?[zfs]_[k]
  [ 1] zfs_read?[zfs]_[k]
  [ 2] zpl_iter_read?[zfs]_[k]
  [ 3] new_sync_read_[k]
  [ 4] vfs_read_[k]
  [ 5] __x64_sys_pread64_[k]
  [ 6] do_syscall_64_[k]
  [ 7] entry_SYSCALL_64_after_hwframe_[k]
  [ 8] __libc_pread64
  [ 9] sun.nio.ch.FileDispatcherImpl.pread0
  [10] sun.nio.ch.FileDispatcherImpl.pread
  [11] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [12] sun.nio.ch.IOUtil.read
  [13] sun.nio.ch.IOUtil.read
  [14] sun.nio.ch.FileChannelImpl.readInternal
  [15] sun.nio.ch.FileChannelImpl.read
  [16] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [17] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [18] jdk.nio.zipfs.ZipFileSystem$2.fill
  [19] java.util.zip.InflaterInputStream.read
  [20] java.io.InputStream.readNBytes
  [21] java.io.InputStream.readAllBytes
  [22] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [23] com.scalamandra.ZipLib$$anon$1$$Lambda$65.0x0000000800d25648.apply
  [24] cats.effect.IOFiber.$anonfun$8
  [25] cats.effect.IOFiber$$Lambda$202.0x0000000800da9800.apply
  [26] cats.effect.unsafe.WorkerThread.blockOn
  [27] scala.concurrent.package$.blocking
  [28] cats.effect.IOFiber.runLoop
  [29] cats.effect.IOFiber.execR
  [30] cats.effect.IOFiber.run
  [31] cats.effect.unsafe.WorkerThread.run

--- 250156640 ns (0.02%), 25 samples
  [ 0] handle_pte_fault_[k]
  [ 1] __handle_mm_fault_[k]
  [ 2] handle_mm_fault_[k]
  [ 3] do_user_addr_fault_[k]
  [ 4] exc_page_fault_[k]
  [ 5] asm_exc_page_fault_[k]
  [ 6] java.io.InputStream.readNBytes
  [ 7] java.io.InputStream.readAllBytes
  [ 8] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [ 9] com.scalamandra.ZipLib$$anon$1$$Lambda$65.0x0000000800d25648.apply
  [10] cats.effect.IOFiber.$anonfun$8
  [11] cats.effect.IOFiber$$Lambda$202.0x0000000800da9800.apply
  [12] cats.effect.unsafe.WorkerThread.blockOn
  [13] scala.concurrent.package$.blocking
  [14] cats.effect.IOFiber.runLoop
  [15] cats.effect.IOFiber.execR
  [16] cats.effect.IOFiber.run
  [17] cats.effect.unsafe.WorkerThread.run

--- 250041079 ns (0.02%), 25 samples
  [ 0] zfs_rangelock_exit?[zfs]_[k]
  [ 1] zfs_read?[zfs]_[k]
  [ 2] zpl_iter_read?[zfs]_[k]
  [ 3] new_sync_read_[k]
  [ 4] vfs_read_[k]
  [ 5] __x64_sys_pread64_[k]
  [ 6] do_syscall_64_[k]
  [ 7] entry_SYSCALL_64_after_hwframe_[k]
  [ 8] __libc_pread64
  [ 9] sun.nio.ch.FileDispatcherImpl.pread0
  [10] sun.nio.ch.FileDispatcherImpl.pread
  [11] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [12] sun.nio.ch.IOUtil.read
  [13] sun.nio.ch.IOUtil.read
  [14] sun.nio.ch.FileChannelImpl.readInternal
  [15] sun.nio.ch.FileChannelImpl.read
  [16] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [17] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [18] jdk.nio.zipfs.ZipFileSystem$2.fill
  [19] java.util.zip.InflaterInputStream.read
  [20] java.io.InputStream.readNBytes
  [21] java.io.InputStream.readAllBytes
  [22] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [23] com.scalamandra.ZipLib$$anon$1$$Lambda$65.0x0000000800d25648.apply
  [24] cats.effect.IOFiber.$anonfun$8
  [25] cats.effect.IOFiber$$Lambda$202.0x0000000800da9800.apply
  [26] cats.effect.unsafe.WorkerThread.blockOn
  [27] scala.concurrent.package$.blocking
  [28] cats.effect.IOFiber.runLoop
  [29] cats.effect.IOFiber.execR
  [30] cats.effect.IOFiber.run
  [31] cats.effect.unsafe.WorkerThread.run

--- 249877414 ns (0.02%), 25 samples
  [ 0] sun.nio.ch.NativeThreadSet.add
  [ 1] sun.nio.ch.FileChannelImpl.readInternal
  [ 2] sun.nio.ch.FileChannelImpl.read
  [ 3] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [ 4] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [ 5] jdk.nio.zipfs.ZipFileSystem$2.fill
  [ 6] java.util.zip.InflaterInputStream.read
  [ 7] java.io.InputStream.readNBytes
  [ 8] java.io.InputStream.readAllBytes
  [ 9] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [10] com.scalamandra.ZipLib$$anon$1$$Lambda$65.0x0000000800d25648.apply
  [11] cats.effect.IOFiber.$anonfun$8
  [12] cats.effect.IOFiber$$Lambda$202.0x0000000800da9800.apply
  [13] cats.effect.unsafe.WorkerThread.blockOn
  [14] scala.concurrent.package$.blocking
  [15] cats.effect.IOFiber.runLoop
  [16] cats.effect.IOFiber.execR
  [17] cats.effect.IOFiber.run
  [18] cats.effect.unsafe.WorkerThread.run

--- 241158440 ns (0.02%), 24 samples
  [ 0] _raw_spin_unlock_irqrestore_[k]
  [ 1] try_to_wake_up_[k]
  [ 2] wake_up_q_[k]
  [ 3] futex_wake_[k]
  [ 4] do_futex_[k]
  [ 5] __x64_sys_futex_[k]
  [ 6] do_syscall_64_[k]
  [ 7] entry_SYSCALL_64_after_hwframe_[k]
  [ 8] __lll_lock_wake
  [ 9] G1PLABAllocator::allocate_direct_or_new_plab(G1HeapRegionAttr, unsigned long, bool*, unsigned int)
  [10] G1ParScanThreadState::allocate_copy_slow(G1HeapRegionAttr*, oopDesc*, unsigned long, unsigned int, unsigned int)
  [11] G1ParScanThreadState::trim_queue_to_threshold(unsigned int)
  [12] G1ParScanThreadState::steal_and_trim_queue(GenericTaskQueueSet<OverflowTaskQueue<ScannerTask, (MEMFLAGS)5, 131072u>, (MEMFLAGS)5>*)
  [13] G1ParEvacuateFollowersClosure::do_void()
  [14] G1EvacuateRegionsTask::evacuate_live_objects(G1ParScanThreadState*, unsigned int)
  [15] G1EvacuateRegionsBaseTask::work(unsigned int)
  [16] GangWorker::loop()
  [17] GangWorker::run()
  [18] Thread::call_run()
  [19] thread_native_entry(Thread*)
  [20] start_thread

--- 240494331 ns (0.02%), 24 samples
  [ 0] do_user_addr_fault_[k]
  [ 1] exc_page_fault_[k]
  [ 2] asm_exc_page_fault_[k]
  [ 3] __memset_avx2_unaligned_erms
  [ 4] MarkBitMap::do_clear(MemRegion, bool)
  [ 5] G1ClearBitMapTask::G1ClearBitmapHRClosure::do_heap_region(HeapRegion*)
  [ 6] HeapRegionManager::par_iterate(HeapRegionClosure*, HeapRegionClaimer*, unsigned int) const
  [ 7] G1ClearBitMapTask::work(unsigned int)
  [ 8] GangWorker::loop()
  [ 9] GangWorker::run()
  [10] Thread::call_run()
  [11] thread_native_entry(Thread*)
  [12] start_thread

--- 240364378 ns (0.02%), 24 samples
  [ 0] percpu_counter_add_batch_[k]
  [ 1] wmsum_add?[zfs]_[k]
  [ 2] dbuf_hold_impl?[zfs]_[k]
  [ 3] dbuf_hold_level?[zfs]_[k]
  [ 4] dbuf_hold?[zfs]_[k]
  [ 5] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 6] dmu_read_uio_dnode?[zfs]_[k]
  [ 7] dmu_read_uio_dbuf?[zfs]_[k]
  [ 8] mappedread?[zfs]_[k]
  [ 9] zfs_read?[zfs]_[k]
  [10] zpl_iter_read?[zfs]_[k]
  [11] new_sync_read_[k]
  [12] vfs_read_[k]
  [13] __x64_sys_pread64_[k]
  [14] do_syscall_64_[k]
  [15] entry_SYSCALL_64_after_hwframe_[k]
  [16] __libc_pread64
  [17] sun.nio.ch.FileDispatcherImpl.pread0
  [18] sun.nio.ch.FileDispatcherImpl.pread
  [19] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [20] sun.nio.ch.IOUtil.read
  [21] sun.nio.ch.IOUtil.read
  [22] sun.nio.ch.FileChannelImpl.readInternal
  [23] sun.nio.ch.FileChannelImpl.read
  [24] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [25] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [26] jdk.nio.zipfs.ZipFileSystem$2.fill
  [27] java.util.zip.InflaterInputStream.read
  [28] java.io.InputStream.readNBytes
  [29] java.io.InputStream.readAllBytes
  [30] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [31] com.scalamandra.ZipLib$$anon$1$$Lambda$65.0x0000000800d25648.apply
  [32] cats.effect.IOFiber.$anonfun$8
  [33] cats.effect.IOFiber$$Lambda$202.0x0000000800da9800.apply
  [34] cats.effect.unsafe.WorkerThread.blockOn
  [35] scala.concurrent.package$.blocking
  [36] cats.effect.IOFiber.runLoop
  [37] cats.effect.IOFiber.execR
  [38] cats.effect.IOFiber.run
  [39] cats.effect.unsafe.WorkerThread.run

--- 240327162 ns (0.02%), 24 samples
  [ 0] rmqueue_pcplist.constprop.0_[k]
  [ 1] rmqueue_[k]
  [ 2] get_page_from_freelist_[k]
  [ 3] __alloc_pages_[k]
  [ 4] __folio_alloc_[k]
  [ 5] vma_alloc_folio_[k]
  [ 6] do_anonymous_page_[k]
  [ 7] handle_pte_fault_[k]
  [ 8] __handle_mm_fault_[k]
  [ 9] handle_mm_fault_[k]
  [10] do_user_addr_fault_[k]
  [11] exc_page_fault_[k]
  [12] asm_exc_page_fault_[k]
  [13] __memset_avx2_unaligned_erms
  [14] MemAllocator::allocate() const
  [15] TypeArrayKlass::allocate_common(int, bool, JavaThread*)
  [16] JVMCIRuntime::new_array_common(JavaThread*, Klass*, int, bool)
  [17] java.nio.charset.Charset.forName
  [18] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [19] com.scalamandra.ZipLib$$anon$1$$Lambda$65.0x0000000800d25648.apply
  [20] cats.effect.IOFiber.$anonfun$8
  [21] cats.effect.IOFiber$$Lambda$202.0x0000000800da9800.apply
  [22] cats.effect.unsafe.WorkerThread.blockOn
  [23] scala.concurrent.package$.blocking
  [24] cats.effect.IOFiber.runLoop
  [25] cats.effect.IOFiber.execR
  [26] cats.effect.IOFiber.run
  [27] cats.effect.unsafe.WorkerThread.run

--- 240248999 ns (0.02%), 24 samples
  [ 0] zio_done?[zfs]_[k]
  [ 1] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 2] dmu_read_uio_dnode?[zfs]_[k]
  [ 3] dmu_read_uio_dbuf?[zfs]_[k]
  [ 4] mappedread?[zfs]_[k]
  [ 5] zfs_read?[zfs]_[k]
  [ 6] zpl_iter_read?[zfs]_[k]
  [ 7] new_sync_read_[k]
  [ 8] vfs_read_[k]
  [ 9] __x64_sys_pread64_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] __libc_pread64
  [13] sun.nio.ch.FileDispatcherImpl.pread0
  [14] sun.nio.ch.FileDispatcherImpl.pread
  [15] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [16] sun.nio.ch.IOUtil.read
  [17] sun.nio.ch.IOUtil.read
  [18] sun.nio.ch.FileChannelImpl.readInternal
  [19] sun.nio.ch.FileChannelImpl.read
  [20] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [21] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [22] jdk.nio.zipfs.ZipFileSystem$2.fill
  [23] java.util.zip.InflaterInputStream.read
  [24] java.io.InputStream.readNBytes
  [25] java.io.InputStream.readAllBytes
  [26] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [27] com.scalamandra.ZipLib$$anon$1$$Lambda$65.0x0000000800d25648.apply
  [28] cats.effect.IOFiber.$anonfun$8
  [29] cats.effect.IOFiber$$Lambda$202.0x0000000800da9800.apply
  [30] cats.effect.unsafe.WorkerThread.blockOn
  [31] scala.concurrent.package$.blocking
  [32] cats.effect.IOFiber.runLoop
  [33] cats.effect.IOFiber.execR
  [34] cats.effect.IOFiber.run
  [35] cats.effect.unsafe.WorkerThread.run

--- 240234622 ns (0.02%), 24 samples
  [ 0] arc_target_bytes?[zfs]_[k]
  [ 1] dbuf_evict_notify?[zfs]_[k]
  [ 2] dbuf_rele_and_unlock?[zfs]_[k]
  [ 3] dbuf_rele?[zfs]_[k]
  [ 4] dmu_buf_rele_array?[zfs]_[k]
  [ 5] dmu_read_uio_dnode?[zfs]_[k]
  [ 6] dmu_read_uio_dbuf?[zfs]_[k]
  [ 7] mappedread?[zfs]_[k]
  [ 8] zfs_read?[zfs]_[k]
  [ 9] zpl_iter_read?[zfs]_[k]
  [10] new_sync_read_[k]
  [11] vfs_read_[k]
  [12] __x64_sys_pread64_[k]
  [13] do_syscall_64_[k]
  [14] entry_SYSCALL_64_after_hwframe_[k]
  [15] __libc_pread64
  [16] sun.nio.ch.FileDispatcherImpl.pread0
  [17] sun.nio.ch.FileDispatcherImpl.pread
  [18] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [19] sun.nio.ch.IOUtil.read
  [20] sun.nio.ch.IOUtil.read
  [21] sun.nio.ch.FileChannelImpl.readInternal
  [22] sun.nio.ch.FileChannelImpl.read
  [23] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [24] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [25] jdk.nio.zipfs.ZipFileSystem$2.fill
  [26] java.util.zip.InflaterInputStream.read
  [27] java.io.InputStream.readNBytes
  [28] java.io.InputStream.readAllBytes
  [29] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [30] com.scalamandra.ZipLib$$anon$1$$Lambda$65.0x0000000800d25648.apply
  [31] cats.effect.IOFiber.$anonfun$8
  [32] cats.effect.IOFiber$$Lambda$202.0x0000000800da9800.apply
  [33] cats.effect.unsafe.WorkerThread.blockOn
  [34] scala.concurrent.package$.blocking
  [35] cats.effect.IOFiber.runLoop
  [36] cats.effect.IOFiber.execR
  [37] cats.effect.IOFiber.run
  [38] cats.effect.unsafe.WorkerThread.run

--- 240174708 ns (0.02%), 24 samples
  [ 0] get_page_from_freelist_[k]
  [ 1] __alloc_pages_[k]
  [ 2] __folio_alloc_[k]
  [ 3] vma_alloc_folio_[k]
  [ 4] do_anonymous_page_[k]
  [ 5] handle_pte_fault_[k]
  [ 6] __handle_mm_fault_[k]
  [ 7] handle_mm_fault_[k]
  [ 8] do_user_addr_fault_[k]
  [ 9] exc_page_fault_[k]
  [10] asm_exc_page_fault_[k]
  [11] java.io.InputStream.readNBytes
  [12] java.io.InputStream.readAllBytes
  [13] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [14] com.scalamandra.ZipLib$$anon$1$$Lambda$65.0x0000000800d25648.apply
  [15] cats.effect.IOFiber.$anonfun$8
  [16] cats.effect.IOFiber$$Lambda$202.0x0000000800da9800.apply
  [17] cats.effect.unsafe.WorkerThread.blockOn
  [18] scala.concurrent.package$.blocking
  [19] cats.effect.IOFiber.runLoop
  [20] cats.effect.IOFiber.execR
  [21] cats.effect.IOFiber.run
  [22] cats.effect.unsafe.WorkerThread.run

--- 240157036 ns (0.02%), 24 samples
  [ 0] __rcu_read_unlock_[k]
  [ 1] pagecache_get_page_[k]
  [ 2] find_lock_page?[zfs]_[k]
  [ 3] mappedread?[zfs]_[k]
  [ 4] zfs_read?[zfs]_[k]
  [ 5] zpl_iter_read?[zfs]_[k]
  [ 6] new_sync_read_[k]
  [ 7] vfs_read_[k]
  [ 8] __x64_sys_pread64_[k]
  [ 9] do_syscall_64_[k]
  [10] entry_SYSCALL_64_after_hwframe_[k]
  [11] __libc_pread64
  [12] sun.nio.ch.FileDispatcherImpl.pread0
  [13] sun.nio.ch.FileDispatcherImpl.pread
  [14] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [15] sun.nio.ch.IOUtil.read
  [16] sun.nio.ch.IOUtil.read
  [17] sun.nio.ch.FileChannelImpl.readInternal
  [18] sun.nio.ch.FileChannelImpl.read
  [19] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [20] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [21] jdk.nio.zipfs.ZipFileSystem$2.fill
  [22] java.util.zip.InflaterInputStream.read
  [23] java.io.InputStream.readNBytes
  [24] java.io.InputStream.readAllBytes
  [25] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [26] com.scalamandra.ZipLib$$anon$1$$Lambda$65.0x0000000800d25648.apply
  [27] cats.effect.IOFiber.$anonfun$8
  [28] cats.effect.IOFiber$$Lambda$202.0x0000000800da9800.apply
  [29] cats.effect.unsafe.WorkerThread.blockOn
  [30] scala.concurrent.package$.blocking
  [31] cats.effect.IOFiber.runLoop
  [32] cats.effect.IOFiber.execR
  [33] cats.effect.IOFiber.run
  [34] cats.effect.unsafe.WorkerThread.run

--- 240072216 ns (0.02%), 24 samples
  [ 0] _raw_spin_lock_[k]
  [ 1] dmu_read_uio_dnode?[zfs]_[k]
  [ 2] dmu_read_uio_dbuf?[zfs]_[k]
  [ 3] mappedread?[zfs]_[k]
  [ 4] zfs_read?[zfs]_[k]
  [ 5] zpl_iter_read?[zfs]_[k]
  [ 6] new_sync_read_[k]
  [ 7] vfs_read_[k]
  [ 8] __x64_sys_pread64_[k]
  [ 9] do_syscall_64_[k]
  [10] entry_SYSCALL_64_after_hwframe_[k]
  [11] __libc_pread64
  [12] sun.nio.ch.FileDispatcherImpl.pread0
  [13] sun.nio.ch.FileDispatcherImpl.pread
  [14] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [15] sun.nio.ch.IOUtil.read
  [16] sun.nio.ch.IOUtil.read
  [17] sun.nio.ch.FileChannelImpl.readInternal
  [18] sun.nio.ch.FileChannelImpl.read
  [19] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [20] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [21] jdk.nio.zipfs.ZipFileSystem$2.fill
  [22] java.util.zip.InflaterInputStream.read
  [23] java.io.InputStream.readNBytes
  [24] java.io.InputStream.readAllBytes
  [25] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [26] com.scalamandra.ZipLib$$anon$1$$Lambda$65.0x0000000800d25648.apply
  [27] cats.effect.IOFiber.$anonfun$8
  [28] cats.effect.IOFiber$$Lambda$202.0x0000000800da9800.apply
  [29] cats.effect.unsafe.WorkerThread.blockOn
  [30] scala.concurrent.package$.blocking
  [31] cats.effect.IOFiber.runLoop
  [32] cats.effect.IOFiber.execR
  [33] cats.effect.IOFiber.run
  [34] cats.effect.unsafe.WorkerThread.run

--- 240061723 ns (0.02%), 24 samples
  [ 0] vma_alloc_folio_[k]
  [ 1] do_anonymous_page_[k]
  [ 2] handle_pte_fault_[k]
  [ 3] __handle_mm_fault_[k]
  [ 4] handle_mm_fault_[k]
  [ 5] do_user_addr_fault_[k]
  [ 6] exc_page_fault_[k]
  [ 7] asm_exc_page_fault_[k]
  [ 8] java.io.InputStream.readNBytes
  [ 9] java.io.InputStream.readAllBytes
  [10] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [11] com.scalamandra.ZipLib$$anon$1$$Lambda$65.0x0000000800d25648.apply
  [12] cats.effect.IOFiber.$anonfun$8
  [13] cats.effect.IOFiber$$Lambda$202.0x0000000800da9800.apply
  [14] cats.effect.unsafe.WorkerThread.blockOn
  [15] scala.concurrent.package$.blocking
  [16] cats.effect.IOFiber.runLoop
  [17] cats.effect.IOFiber.execR
  [18] cats.effect.IOFiber.run
  [19] cats.effect.unsafe.WorkerThread.run

--- 239950196 ns (0.02%), 24 samples
  [ 0] java.util.zip.Inflater.inflate
  [ 1] java.util.zip.InflaterInputStream.read
  [ 2] java.io.InputStream.readNBytes
  [ 3] java.io.InputStream.readAllBytes
  [ 4] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [ 5] com.scalamandra.ZipLib$$anon$1$$Lambda$65.0x0000000800d25648.apply
  [ 6] cats.effect.IOFiber.$anonfun$8
  [ 7] cats.effect.IOFiber$$Lambda$202.0x0000000800da9800.apply
  [ 8] cats.effect.unsafe.WorkerThread.blockOn
  [ 9] scala.concurrent.package$.blocking
  [10] cats.effect.IOFiber.runLoop
  [11] cats.effect.IOFiber.execR
  [12] cats.effect.IOFiber.run
  [13] cats.effect.unsafe.WorkerThread.run

--- 230497460 ns (0.02%), 23 samples
  [ 0] __fsnotify_parent_[k]
  [ 1] fsnotify_perm.part.0_[k]
  [ 2] security_file_permission_[k]
  [ 3] rw_verify_area_[k]
  [ 4] vfs_read_[k]
  [ 5] __x64_sys_pread64_[k]
  [ 6] do_syscall_64_[k]
  [ 7] entry_SYSCALL_64_after_hwframe_[k]
  [ 8] __libc_pread64
  [ 9] sun.nio.ch.FileDispatcherImpl.pread0
  [10] sun.nio.ch.FileDispatcherImpl.pread
  [11] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [12] sun.nio.ch.IOUtil.read
  [13] sun.nio.ch.IOUtil.read
  [14] sun.nio.ch.FileChannelImpl.readInternal
  [15] sun.nio.ch.FileChannelImpl.read
  [16] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [17] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [18] jdk.nio.zipfs.ZipFileSystem$2.fill
  [19] java.util.zip.InflaterInputStream.read
  [20] java.io.InputStream.readNBytes
  [21] java.io.InputStream.readAllBytes
  [22] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [23] com.scalamandra.ZipLib$$anon$1$$Lambda$65.0x0000000800d25648.apply
  [24] cats.effect.IOFiber.$anonfun$8
  [25] cats.effect.IOFiber$$Lambda$202.0x0000000800da9800.apply
  [26] cats.effect.unsafe.WorkerThread.blockOn
  [27] scala.concurrent.package$.blocking
  [28] cats.effect.IOFiber.runLoop
  [29] cats.effect.IOFiber.execR
  [30] cats.effect.IOFiber.run
  [31] cats.effect.unsafe.WorkerThread.run

--- 230367935 ns (0.02%), 23 samples
  [ 0] mutex_unlock_[k]
  [ 1] zio_done?[zfs]_[k]
  [ 2] zio_wait?[zfs]_[k]
  [ 3] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 4] dmu_read_uio_dnode?[zfs]_[k]
  [ 5] dmu_read_uio_dbuf?[zfs]_[k]
  [ 6] mappedread?[zfs]_[k]
  [ 7] zfs_read?[zfs]_[k]
  [ 8] zpl_iter_read?[zfs]_[k]
  [ 9] new_sync_read_[k]
  [10] vfs_read_[k]
  [11] __x64_sys_pread64_[k]
  [12] do_syscall_64_[k]
  [13] entry_SYSCALL_64_after_hwframe_[k]
  [14] __libc_pread64
  [15] sun.nio.ch.FileDispatcherImpl.pread0
  [16] sun.nio.ch.FileDispatcherImpl.pread
  [17] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [18] sun.nio.ch.IOUtil.read
  [19] sun.nio.ch.IOUtil.read
  [20] sun.nio.ch.FileChannelImpl.readInternal
  [21] sun.nio.ch.FileChannelImpl.read
  [22] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [23] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [24] jdk.nio.zipfs.ZipFileSystem$2.fill
  [25] java.util.zip.InflaterInputStream.read
  [26] java.io.InputStream.readNBytes
  [27] java.io.InputStream.readAllBytes
  [28] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [29] com.scalamandra.ZipLib$$anon$1$$Lambda$65.0x0000000800d25648.apply
  [30] cats.effect.IOFiber.$anonfun$8
  [31] cats.effect.IOFiber$$Lambda$202.0x0000000800da9800.apply
  [32] cats.effect.unsafe.WorkerThread.blockOn
  [33] scala.concurrent.package$.blocking
  [34] cats.effect.IOFiber.runLoop
  [35] cats.effect.IOFiber.execR
  [36] cats.effect.IOFiber.run
  [37] cats.effect.unsafe.WorkerThread.run

--- 230330351 ns (0.02%), 23 samples
  [ 0] spl_kmem_alloc_impl?[spl]_[k]
  [ 1] spl_kmem_zalloc?[spl]_[k]
  [ 2] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 3] dmu_read_uio_dnode?[zfs]_[k]
  [ 4] dmu_read_uio_dbuf?[zfs]_[k]
  [ 5] mappedread?[zfs]_[k]
  [ 6] zfs_read?[zfs]_[k]
  [ 7] zpl_iter_read?[zfs]_[k]
  [ 8] new_sync_read_[k]
  [ 9] vfs_read_[k]
  [10] __x64_sys_pread64_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] __libc_pread64
  [14] sun.nio.ch.FileDispatcherImpl.pread0
  [15] sun.nio.ch.FileDispatcherImpl.pread
  [16] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [17] sun.nio.ch.IOUtil.read
  [18] sun.nio.ch.IOUtil.read
  [19] sun.nio.ch.FileChannelImpl.readInternal
  [20] sun.nio.ch.FileChannelImpl.read
  [21] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [22] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [23] jdk.nio.zipfs.ZipFileSystem$2.fill
  [24] java.util.zip.InflaterInputStream.read
  [25] java.io.InputStream.readNBytes
  [26] java.io.InputStream.readAllBytes
  [27] com.scalamandra.ZipLib$$anon$1.nioInputStream$$anonfun$1
  [28] com.scalamandra.ZipLib$$anon$1$$Lambda$65.0x0000000800d25648.apply
  [29] cats.effect.IOFiber.$anonfun$8
  [30] cats.effect.IOFiber$$Lambda$202.0x0000000800da9800.apply
  [31] cats.effect.unsafe.WorkerThread.blockOn
  [32] scala.concurrent.package$.blocking
  [33] cats.effect.IOFiber.runLoop
  [34] cats.effect.IOFiber.execR
  [35] cats.effect.IOFiber.run
  [36] cats.effect.unsafe.WorkerThread.run

          ns  percent  samples  top
  ----------  -------  -------  ---
939724778716   64.45%    93976  /usr/lib/x86_64-linux-gnu/libz.so.1.2.11
 62005834623    4.25%     6193  __memset_avx2_unaligned_erms
 58166419294    3.99%     5816  inflate
 42097263050    2.89%     4205  java.lang.System.arraycopy
 41714293114    2.86%     4167  java.util.Arrays.copyOfRange
 30174688723    2.07%     3016  java.io.InputStream.readNBytes
 27698729081    1.90%     2760  __memcpy_sse2_unaligned_erms
 25651092561    1.76%     2564  java.lang.StringCoding.hasNegatives
 13706284903    0.94%     1369  clear_page_rep_[k]
 11064172969    0.76%     1106  __memmove_avx_unaligned_erms
  9525134782    0.65%      951  copy_user_generic_string_[k]
  7685575055    0.53%      768  do_user_addr_fault_[k]
  5471321986    0.38%      546  _raw_spin_unlock_irqrestore_[k]
  4474966460    0.31%      447  mutex_unlock_[k]
  3886121885    0.27%      388  find_vmap_area_[k]
  3874793999    0.27%      387  mutex_lock_[k]
  3773342858    0.26%      377  _raw_spin_lock_[k]
  3490047992    0.24%      349  jlong_disjoint_arraycopy
  3160049073    0.22%      315  G1ParScanThreadState::trim_queue_to_threshold(unsigned int)
  3003860618    0.21%      300  percpu_counter_add_batch_[k]
  2892879428    0.20%      289  zio_create?[zfs]_[k]
  2543798707    0.17%      254  rmqueue_pcplist.constprop.0_[k]
  2223391340    0.15%      222  memset_[k]
  1989540308    0.14%      199  void OopOopIterateDispatch<G1CMOopClosure>::Table::oop_oop_iterate<InstanceKlass, narrowOop>(G1CMOopClosure*, oopDesc*, Klass*)
  1975789032    0.14%      196  free_unref_page_list_[k]
  1740771958    0.12%      174  jni_GetPrimitiveArrayCritical
  1532291470    0.11%      153  __kmalloc_node_[k]
  1521474821    0.10%      152  __handle_mm_fault_[k]
  1510546023    0.10%      151  java.util.zip.Inflater.inflate
  1501821751    0.10%      150  zrl_add_impl?[zfs]_[k]
  1500258287    0.10%      150  jni_ReleasePrimitiveArrayCritical
  1471314703    0.10%      147  dbuf_rele_and_unlock?[zfs]_[k]
  1450677059    0.10%      145  java.util.zip.Inflater.inflateBytesBytes
  1432397134    0.10%      143  syscall_enter_from_user_mode_[k]
  1372338113    0.09%      137  kmem_cache_alloc_[k]
  1352552854    0.09%      135  kfree_[k]
  1270132487    0.09%      127  void OopOopIterateDispatch<G1CMOopClosure>::Table::oop_oop_iterate<ObjArrayKlass, narrowOop>(G1CMOopClosure*, oopDesc*, Klass*)
  1211825257    0.08%      121  zio_wait?[zfs]_[k]
  1211812702    0.08%      121  zio_done?[zfs]_[k]
  1201540764    0.08%      120  cityhash4?[zcommon]_[k]
  1201520318    0.08%      120  dmu_buf_hold_array_by_dnode?[zfs]_[k]
  1201330890    0.08%      120  kmem_cache_free_[k]
  1191429182    0.08%      119  charge_memcg_[k]
  1179970814    0.08%      118  HeapRegionManager::par_iterate(HeapRegionClosure*, HeapRegionClaimer*, unsigned int) const
  1160974730    0.08%      116  up_read_[k]
  1151175772    0.08%      115  read_tsc_[k]
  1121102898    0.08%      112  do_anonymous_page_[k]
  1107071928    0.08%      111  zap_pte_range_[k]
  1071119810    0.07%      107  dbuf_read?[zfs]_[k]
  1070410788    0.07%      107  __rcu_read_lock_[k]
  1030912836    0.07%      103  dbuf_cache_multilist_index_func?[zfs]_[k]
  1030260004    0.07%      103  __libc_pread64
  1021588582    0.07%      102  down_read_[k]
  1020956357    0.07%      102  __rcu_read_unlock_[k]
  1020784361    0.07%      102  native_queued_spin_lock_slowpath.part.0_[k]
  1000630356    0.07%      100  dbuf_hold_impl?[zfs]_[k]
   990125674    0.07%       99  G1RebuildRemSetTask::G1RebuildRemSetHeapRegionClosure::do_heap_region(HeapRegion*)
   971138898    0.07%       97  __list_del_entry?[zfs]_[k]
   911542595    0.06%       91  dbuf_find?[zfs]_[k]
   911004429    0.06%       91  dmu_zfetch_prepare?[zfs]_[k]
   870567210    0.06%       87  Java_java_util_zip_Inflater_inflateBytesBytes
   851453403    0.06%       85  __fget_light_[k]
   840970722    0.06%       84  zio_ready?[zfs]_[k]
   820355407    0.06%       82  CollectedHeap::supports_object_pinning() const
   801187056    0.05%       80  handle_mm_fault_[k]
   800687596    0.05%       80  apparmor_file_permission_[k]
   789865149    0.05%       79  void OopOopIterateDispatch<G1RebuildRemSetClosure>::Table::oop_oop_iterate<InstanceKlass, narrowOop>(G1RebuildRemSetClosure*, oopDesc*, Klass*)
   781366478    0.05%       78  spl_mutex_set_owner?[zfs]_[k]
   771090622    0.05%       77  vfs_read_[k]
   760994209    0.05%       76  blk_cgroup_congested_[k]
   731144267    0.05%       73  arc_buf_access?[zfs]_[k]
   731045670    0.05%       73  _copy_to_iter_[k]
   701045695    0.05%       70  zfs_read?[zfs]_[k]
   700618594    0.05%       70  __alloc_pages_[k]
   690760093    0.05%       69  __filemap_get_folio_[k]
   690706668    0.05%       69  list_del?[zfs]_[k]
   670718757    0.05%       67  zrl_remove?[zfs]_[k]
   670583305    0.05%       67  zio_wait_for_children?[zfs]_[k]
   660335632    0.05%       66  __mod_lruvec_page_state_[k]
   658798304    0.05%       66  nmethod::oops_do(OopClosure*, bool)
   630829337    0.04%       63  __list_del?[zfs]_[k]
   630439186    0.04%       63  spl_mutex_clear_owner?[zfs]_[k]
   630406618    0.04%       63  count_memcg_events.constprop.0_[k]
   620747466    0.04%       62  __cond_resched_[k]
   618882534    0.04%       62  CompiledMethod::cleanup_inline_caches_impl(bool, bool)
   601031235    0.04%       60  ktime_get_raw_ts64_[k]
   599893776    0.04%       60  void G1CMTask::process_grey_task_entry<true>(G1TaskQueueEntry)
   591041155    0.04%       59  multilist_remove?[zfs]_[k]
   560871262    0.04%       56  __next_zones_zonelist_[k]
   550557706    0.04%       55  _raw_spin_unlock_[k]
   539912669    0.04%       54  GreyObjectsWalker_walkGreyObjects_eb32754f646620dd6416e9c72990a79fa796f775
   530636657    0.04%       53  get_page_from_freelist_[k]
   520705040    0.04%       52  dmu_read_uio_dnode?[zfs]_[k]
   520451193    0.04%       52  handle_pte_fault_[k]
   520365228    0.04%       52  checkInflateStatus
   510658793    0.04%       51  __x86_return_thunk_[k]
   510231972    0.03%       51  vma_alloc_folio_[k]
   509664937    0.03%       51  void WeakProcessor::Task::work<G1STWIsAliveClosure, G1KeepAliveClosure>(unsigned int, G1STWIsAliveClosure*, G1KeepAliveClosure*)
   500942884    0.03%       50  kmalloc_slab_[k]
   500709157    0.03%       50  __fsnotify_parent_[k]
   500676393    0.03%       50  zio_walk_parents?[zfs]_[k]
   500505943    0.03%       50  __mod_node_page_state_[k]
   500483528    0.03%       50  vdev_stat_update?[zfs]_[k]
   490622891    0.03%       49  dmu_read_uio_dbuf?[zfs]_[k]
   480476801    0.03%       48  list_head?[zfs]_[k]
   479179463    0.03%       48  free_swap_cache_[k]
   470293090    0.03%       47  down_read_trylock_[k]
   460844189    0.03%       46  memcg_slab_post_alloc_hook_[k]
   460390582    0.03%       46  lockref_get_not_zero_[k]
   460319730    0.03%       46  pmd_val_[k]
   460279627    0.03%       46  sun.nio.ch.FileDispatcherImpl.pread0
   459770471    0.03%       46  G1CMTask::do_marking_step(double, bool, bool)
   450488462    0.03%       45  dbuf_read_verify_dnode_crypt?[zfs]_[k]
   449991664    0.03%       45  java.lang.Thread.blockedOn
   449860580    0.03%       45  void OopOopIterateDispatch<G1CMOopClosure>::Table::oop_oop_iterate<InstanceMirrorKlass, narrowOop>(G1CMOopClosure*, oopDesc*, Klass*)
   441437015    0.03%       44  G1ParCopyClosure<(G1Barrier)1, true>::do_oop(oopDesc**)
   440465631    0.03%       44  cats.effect.unsafe.WorkerThread.run
   440196116    0.03%       44  java.util.ArrayList.add
   430479367    0.03%       43  __cv_broadcast?[spl]_[k]
   420296068    0.03%       42  zpl_iter_read?[zfs]_[k]
   420281041    0.03%       42  __x64_sys_pread64_[k]
   410465867    0.03%       41  get_mem_cgroup_from_mm_[k]
   409886807    0.03%       41  sun.nio.ch.NativeThreadSet.add
   401093685    0.03%       40  G1ParScanThreadState::steal_and_trim_queue(GenericTaskQueueSet<OverflowTaskQueue<ScannerTask, (MEMFLAGS)5, 131072u>, (MEMFLAGS)5>*)
   399779036    0.03%       40  G1CMTask::drain_local_queue(bool) [clone .part.0] [clone .constprop.1]
   390620570    0.03%       39  spl_kmem_alloc_impl?[spl]_[k]
   390486630    0.03%       39  list_create.constprop.0?[zfs]_[k]
   390357798    0.03%       39  zio_inherit_child_errors?[zfs]_[k]
   390325033    0.03%       39  __tls_get_addr
   380563699    0.03%       38  RW_WRITE_HELD?[zfs]_[k]
   380521180    0.03%       38  fsnotify_perm.part.0_[k]
   380302713    0.03%       38  mappedread?[zfs]_[k]
   370483798    0.03%       37  cityhash_helper.constprop.0?[zcommon]_[k]
   370426514    0.03%       37  list_destroy?[zfs]_[k]
   369887218    0.03%       37  void G1RebuildRemSetClosure::do_oop_work<narrowOop>(narrowOop*)
   360373420    0.02%       36  arc_released?[zfs]_[k]
   360190615    0.02%       36  zfs_rangelock_exit?[zfs]_[k]
   360010857    0.02%       36  __mod_memcg_lruvec_state_[k]
   350243083    0.02%       35  __list_add?[zfs]_[k]
   340561776    0.02%       34  spl_kmem_cache_alloc?[spl]_[k]
   340521700    0.02%       34  new_sync_read_[k]
   340469119    0.02%       34  wmsum_add?[zfs]_[k]
   340389420    0.02%       34  kmem_flags_convert?[spl]_[k]
   340261219    0.02%       34  java.nio.Buffer.position
   340227777    0.02%       34  java.util.zip.InflaterInputStream.ensureOpen
   339822993    0.02%       34  SpinPause
   330423617    0.02%       33  consume_stock_[k]
   330379882    0.02%       33  __mem_cgroup_charge_[k]
   330379707    0.02%       33  zio_execute_stack_check.constprop.0?[zfs]_[k]
   330362514    0.02%       33  dbuf_include_in_metadata_cache?[zfs]_[k]
   330348490    0.02%       33  dmu_buf_rele_array?[zfs]_[k]
   330287469    0.02%       33  __memcpy_avx_unaligned
   330072606    0.02%       33  folio_add_lru_[k]
   320312328    0.02%       32  xas_start_[k]
   310724461    0.02%       31  pthread_mutex_trylock@@GLIBC_2.34
   310461876    0.02%       31  __mutex_lock.constprop.0_[k]
   310414215    0.02%       31  AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<548964ul, G1BarrierSet>, (AccessInternal::BarrierType)2, 548964ul>::oop_access_barrier(void*)
   310366893    0.02%       31  multilist_insert?[zfs]_[k]
   300219969    0.02%       30  try_charge_memcg_[k]
   300176294    0.02%       30  fsnotify_[k]
   290346335    0.02%       29  sa_get_db?[zfs]_[k]
   290026428    0.02%       29  multilist_link_active?[zfs]_[k]
   281447560    0.02%       28  exit_to_user_mode_loop_[k]
   280329540    0.02%       28  list_remove_head?[zfs]_[k]
   280119022    0.02%       28  G1FromCardCache::clear(unsigned int)
   280004318    0.02%       28  sun.nio.ch.NativeThreadSet.remove
   271274939    0.02%       27  futex_wake_[k]
   270731998    0.02%       27  [vdso]
   270435380    0.02%       27  arc_access?[zfs]_[k]
   270403547    0.02%       27  mem_cgroup_from_task_[k]
   270305257    0.02%       27  taskq_init_ent?[spl]_[k]
   270288789    0.02%       27  __page_set_anon_rmap_[k]
   270236237    0.02%       27  arc_target_bytes?[zfs]_[k]
   270063368    0.02%       27  dmu_zfetch_stream_create?[zfs]_[k]
   260439538    0.02%       26  check_stack_object_[k]
   260431084    0.02%       26  avl_remove?[zavl]_[k]
   260393001    0.02%       26  security_file_permission_[k]
   260380902    0.02%       26  zfs_uiomove_iter?[zfs]_[k]
   259898951    0.02%       26  post_alloc_hook_[k]
   250536985    0.02%       25  __schedule_[k]
   250354752    0.02%       25  INIT_LIST_HEAD?[zfs]_[k]
   250299760    0.02%       25  dbuf_whichblock?[zfs]_[k]
   250057338    0.02%       25  pud_val_[k]
   240651612    0.02%       24  spa_indirect_vdevs_loaded?[zfs]_[k]
   240338656    0.02%       24  java.util.concurrent.ConcurrentLinkedQueue.poll
   240290330    0.02%       24  sun.nio.ch.Util$BufferCache.get
   240247461    0.02%       24  rotate?[zcommon]_[k]
   230439142    0.02%       23  is_vmalloc_addr_[k]
   230272069    0.02%       23  spl_kmem_cache_free?[spl]_[k]
   230050976    0.02%       23  dmu_objset_spa?[zfs]_[k]
   229954392    0.02%       23  Java_sun_nio_ch_FileDispatcherImpl_pread0
   220311556    0.02%       22  zfs_rangelock_compare?[zfs]_[k]
   220256131    0.02%       22  metaslab_trace_init?[zfs]_[k]
   220138533    0.02%       22  multilist_get_num_sublists?[zfs]_[k]
   220083254    0.02%       22  java.util.Arrays.copyOf
   220075455    0.02%       22  HeapRegionManager::find_contiguous_in_free_list(unsigned int)
   210428435    0.01%       21  rrm_exit?[zfs]_[k]
   210349980    0.01%       21  page_counter_try_charge_[k]
   210332373    0.01%       21  get_new_cred.constprop.0?[spl]_[k]
   210260138    0.01%       21  dbuf_hold_level?[zfs]_[k]
Async profiler results:
  profile/com.scalamandra.ZipBench.nioInputStream-Throughput-fileName-over64kb.txt/summary-cpu.txt


# JMH version: 1.32
# VM version: JDK 17.0.6, Java HotSpot(TM) 64-Bit Server VM, 17.0.6+9-LTS-jvmci-22.3-b11
# VM invoker: /home/rajven/graal/java17/bin/java
# VM options: -XX:ThreadPriorityPolicy=1 -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCIProduct -XX:JVMCIThreadsPerNativeLibraryRuntime=1 -XX:-UnlockExperimentalVMOptions
# Blackhole mode: full + dont-inline hint
# Warmup: 20 iterations, 10 s each
# Measurement: 20 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.scalamandra.ZipBench.nioReadAllBytes
# Parameters: (fileName = under64kb.txt)

# Run progress: 40,00% complete, ETA 00:40:29
# Fork: 1 of 1
# Preparing profilers: AsyncProfiler 
Java HotSpot(TM) 64-Bit Server VM warning: -XX:ThreadPriorityPolicy=1 may require system level permission, e.g., being the root user. If the necessary permission is not possessed, changes to priority will be silently ignored.
# Warmup Iteration   1: 12227,259 ops/s
# Warmup Iteration   2: 14487,764 ops/s
# Warmup Iteration   3: 13874,890 ops/s
# Warmup Iteration   4: 14703,233 ops/s
# Warmup Iteration   5: 14565,251 ops/s
# Warmup Iteration   6: 14345,786 ops/s
# Warmup Iteration   7: 14309,492 ops/s
# Warmup Iteration   8: 14067,793 ops/s
# Warmup Iteration   9: 14370,031 ops/s
# Warmup Iteration  10: 14589,598 ops/s
# Warmup Iteration  11: 14502,061 ops/s
# Warmup Iteration  12: 14452,125 ops/s
# Warmup Iteration  13: 14251,674 ops/s
# Warmup Iteration  14: 14350,526 ops/s
# Warmup Iteration  15: 14175,963 ops/s
# Warmup Iteration  16: 14054,552 ops/s
# Warmup Iteration  17: 14101,503 ops/s
# Warmup Iteration  18: 14038,789 ops/s
# Warmup Iteration  19: 14047,092 ops/s
# Warmup Iteration  20: 14080,704 ops/s
Iteration   1: 14058,941 ops/s
Iteration   2: 10704,066 ops/s
Iteration   3: 12850,832 ops/s
Iteration   4: 14269,887 ops/s
Iteration   5: 14824,838 ops/s
Iteration   6: 14626,471 ops/s
Iteration   7: 14523,049 ops/s
Iteration   8: 14388,710 ops/s
Iteration   9: 14346,407 ops/s
Iteration  10: 14166,801 ops/s
Iteration  11: 14211,088 ops/s
Iteration  12: 14161,908 ops/s
Iteration  13: 14180,812 ops/s
Iteration  14: 14162,643 ops/s
Iteration  15: 14127,097 ops/s
Iteration  16: 14088,832 ops/s
Iteration  17: 13924,581 ops/s
Iteration  18: 14102,794 ops/s
Iteration  19: 14093,195 ops/s
Iteration  20: [WARN] Unknown argument: summary
9573,250 ops/s
                 ·async: (text only)

# Processing profiler results: AsyncProfiler 


Result "com.scalamandra.ZipBench.nioReadAllBytes":
  13769,310 ±(99.9%) 1137,724 ops/s [Average]
  (min, avg, max) = (9573,250, 13769,310, 14824,838), stdev = 1310,204
  CI (99.9%): [12631,587, 14907,034] (assumes normal distribution)

Secondary result "com.scalamandra.ZipBench.nioReadAllBytes:·async":
--- Execution profile ---
Total samples       : 141691
GC_active           : 1 (0.00%)
unknown_Java        : 285 (0.20%)

--- 328620638127 ns (23.12%), 32794 samples
  [ 0] /usr/lib/x86_64-linux-gnu/libz.so.1.2.11
  [ 1] java.util.zip.Inflater.inflateBytesBytes
  [ 2] java.util.zip.Inflater.inflate
  [ 3] java.util.zip.InflaterInputStream.read
  [ 4] java.io.InputStream.readNBytes
  [ 5] java.io.InputStream.readAllBytes
  [ 6] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [ 7] jdk.nio.zipfs.ZipPath.newByteChannel
  [ 8] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [ 9] java.nio.file.Files.newByteChannel
  [10] java.nio.file.Files.newByteChannel
  [11] java.nio.file.Files.readAllBytes
  [12] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [13] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25648.apply
  [14] cats.effect.IOFiber.$anonfun$8
  [15] cats.effect.IOFiber$$Lambda$200.0x0000000800dadd60.apply
  [16] cats.effect.unsafe.WorkerThread.blockOn
  [17] scala.concurrent.package$.blocking
  [18] cats.effect.IOFiber.runLoop
  [19] cats.effect.IOFiber.execR
  [20] cats.effect.IOFiber.run
  [21] cats.effect.unsafe.WorkerThread.run

--- 195464829659 ns (13.75%), 19503 samples
  [ 0] /usr/lib/x86_64-linux-gnu/libz.so.1.2.11
  [ 1] java.util.zip.Inflater.inflateBytesBytes
  [ 2] java.util.zip.Inflater.inflate
  [ 3] java.util.zip.InflaterInputStream.read
  [ 4] java.io.InputStream.readNBytes
  [ 5] java.io.InputStream.readAllBytes
  [ 6] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [ 7] jdk.nio.zipfs.ZipPath.newByteChannel
  [ 8] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [ 9] java.nio.file.Files.newByteChannel
  [10] java.nio.file.Files.newByteChannel
  [11] java.nio.file.Files.readAllBytes
  [12] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [13] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25648.apply
  [14] cats.effect.IOFiber.$anonfun$8
  [15] cats.effect.IOFiber$$Lambda$200.0x0000000800dadd60.apply
  [16] cats.effect.unsafe.WorkerThread.blockOn
  [17] scala.concurrent.package$.blocking
  [18] cats.effect.IOFiber.runLoop
  [19] cats.effect.IOFiber.execR
  [20] cats.effect.IOFiber.run
  [21] cats.effect.unsafe.WorkerThread.run

--- 191423417843 ns (13.47%), 19109 samples
  [ 0] /usr/lib/x86_64-linux-gnu/libz.so.1.2.11
  [ 1] [unknown]
  [ 2] java.util.zip.Inflater.inflateBytesBytes
  [ 3] java.util.zip.Inflater.inflate
  [ 4] java.util.zip.InflaterInputStream.read
  [ 5] java.io.InputStream.readNBytes
  [ 6] java.io.InputStream.readAllBytes
  [ 7] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [ 8] jdk.nio.zipfs.ZipPath.newByteChannel
  [ 9] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [10] java.nio.file.Files.newByteChannel
  [11] java.nio.file.Files.newByteChannel
  [12] java.nio.file.Files.readAllBytes
  [13] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [14] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25648.apply
  [15] cats.effect.IOFiber.$anonfun$8
  [16] cats.effect.IOFiber$$Lambda$200.0x0000000800dadd60.apply
  [17] cats.effect.unsafe.WorkerThread.blockOn
  [18] scala.concurrent.package$.blocking
  [19] cats.effect.IOFiber.runLoop
  [20] cats.effect.IOFiber.execR
  [21] cats.effect.IOFiber.run
  [22] cats.effect.unsafe.WorkerThread.run

--- 114473939129 ns (8.05%), 11426 samples
  [ 0] /usr/lib/x86_64-linux-gnu/libz.so.1.2.11
  [ 1] [unknown]
  [ 2] java.util.zip.Inflater.inflateBytesBytes
  [ 3] java.util.zip.Inflater.inflate
  [ 4] java.util.zip.InflaterInputStream.read
  [ 5] java.io.InputStream.readNBytes
  [ 6] java.io.InputStream.readAllBytes
  [ 7] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [ 8] jdk.nio.zipfs.ZipPath.newByteChannel
  [ 9] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [10] java.nio.file.Files.newByteChannel
  [11] java.nio.file.Files.newByteChannel
  [12] java.nio.file.Files.readAllBytes
  [13] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [14] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25648.apply
  [15] cats.effect.IOFiber.$anonfun$8
  [16] cats.effect.IOFiber$$Lambda$200.0x0000000800dadd60.apply
  [17] cats.effect.unsafe.WorkerThread.blockOn
  [18] scala.concurrent.package$.blocking
  [19] cats.effect.IOFiber.runLoop
  [20] cats.effect.IOFiber.execR
  [21] cats.effect.IOFiber.run
  [22] cats.effect.unsafe.WorkerThread.run

--- 27276737244 ns (1.92%), 2722 samples
  [ 0] inflate
  [ 1] java.util.zip.Inflater.inflateBytesBytes
  [ 2] java.util.zip.Inflater.inflate
  [ 3] java.util.zip.InflaterInputStream.read
  [ 4] java.io.InputStream.readNBytes
  [ 5] java.io.InputStream.readAllBytes
  [ 6] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [ 7] jdk.nio.zipfs.ZipPath.newByteChannel
  [ 8] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [ 9] java.nio.file.Files.newByteChannel
  [10] java.nio.file.Files.newByteChannel
  [11] java.nio.file.Files.readAllBytes
  [12] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [13] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25648.apply
  [14] cats.effect.IOFiber.$anonfun$8
  [15] cats.effect.IOFiber$$Lambda$200.0x0000000800dadd60.apply
  [16] cats.effect.unsafe.WorkerThread.blockOn
  [17] scala.concurrent.package$.blocking
  [18] cats.effect.IOFiber.runLoop
  [19] cats.effect.IOFiber.execR
  [20] cats.effect.IOFiber.run
  [21] cats.effect.unsafe.WorkerThread.run

--- 16626770479 ns (1.17%), 1659 samples
  [ 0] inflate
  [ 1] java.util.zip.Inflater.inflateBytesBytes
  [ 2] java.util.zip.Inflater.inflate
  [ 3] java.util.zip.InflaterInputStream.read
  [ 4] java.io.InputStream.readNBytes
  [ 5] java.io.InputStream.readAllBytes
  [ 6] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [ 7] jdk.nio.zipfs.ZipPath.newByteChannel
  [ 8] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [ 9] java.nio.file.Files.newByteChannel
  [10] java.nio.file.Files.newByteChannel
  [11] java.nio.file.Files.readAllBytes
  [12] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [13] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25648.apply
  [14] cats.effect.IOFiber.$anonfun$8
  [15] cats.effect.IOFiber$$Lambda$200.0x0000000800dadd60.apply
  [16] cats.effect.unsafe.WorkerThread.blockOn
  [17] scala.concurrent.package$.blocking
  [18] cats.effect.IOFiber.runLoop
  [19] cats.effect.IOFiber.execR
  [20] cats.effect.IOFiber.run
  [21] cats.effect.unsafe.WorkerThread.run

--- 12828850340 ns (0.90%), 1280 samples
  [ 0] java.util.Arrays.copyOfRange
  [ 1] java.lang.String.<init>
  [ 2] java.lang.String.<init>
  [ 3] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [ 4] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25648.apply
  [ 5] cats.effect.IOFiber.$anonfun$8
  [ 6] cats.effect.IOFiber$$Lambda$200.0x0000000800dadd60.apply
  [ 7] cats.effect.unsafe.WorkerThread.blockOn
  [ 8] scala.concurrent.package$.blocking
  [ 9] cats.effect.IOFiber.runLoop
  [10] cats.effect.IOFiber.execR
  [11] cats.effect.IOFiber.run
  [12] cats.effect.unsafe.WorkerThread.run

--- 12255596451 ns (0.86%), 1223 samples
  [ 0] java.io.InputStream.readNBytes
  [ 1] java.io.InputStream.readAllBytes
  [ 2] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [ 3] jdk.nio.zipfs.ZipPath.newByteChannel
  [ 4] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [ 5] java.nio.file.Files.newByteChannel
  [ 6] java.nio.file.Files.newByteChannel
  [ 7] java.nio.file.Files.readAllBytes
  [ 8] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [ 9] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25648.apply
  [10] cats.effect.IOFiber.$anonfun$8
  [11] cats.effect.IOFiber$$Lambda$200.0x0000000800dadd60.apply
  [12] cats.effect.unsafe.WorkerThread.blockOn
  [13] scala.concurrent.package$.blocking
  [14] cats.effect.IOFiber.runLoop
  [15] cats.effect.IOFiber.execR
  [16] cats.effect.IOFiber.run
  [17] cats.effect.unsafe.WorkerThread.run

--- 9510439530 ns (0.67%), 949 samples
  [ 0] java.lang.System.arraycopy
  [ 1] java.io.InputStream.readNBytes
  [ 2] java.io.InputStream.readAllBytes
  [ 3] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [ 4] jdk.nio.zipfs.ZipPath.newByteChannel
  [ 5] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [ 6] java.nio.file.Files.newByteChannel
  [ 7] java.nio.file.Files.newByteChannel
  [ 8] java.nio.file.Files.readAllBytes
  [ 9] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [10] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25648.apply
  [11] cats.effect.IOFiber.$anonfun$8
  [12] cats.effect.IOFiber$$Lambda$200.0x0000000800dadd60.apply
  [13] cats.effect.unsafe.WorkerThread.blockOn
  [14] scala.concurrent.package$.blocking
  [15] cats.effect.IOFiber.runLoop
  [16] cats.effect.IOFiber.execR
  [17] cats.effect.IOFiber.run
  [18] cats.effect.unsafe.WorkerThread.run

--- 8909501033 ns (0.63%), 889 samples
  [ 0] java.nio.file.Files.read
  [ 1] java.nio.file.Files.readAllBytes
  [ 2] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [ 3] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25648.apply
  [ 4] cats.effect.IOFiber.$anonfun$8
  [ 5] cats.effect.IOFiber$$Lambda$200.0x0000000800dadd60.apply
  [ 6] cats.effect.unsafe.WorkerThread.blockOn
  [ 7] scala.concurrent.package$.blocking
  [ 8] cats.effect.IOFiber.runLoop
  [ 9] cats.effect.IOFiber.execR
  [10] cats.effect.IOFiber.run
  [11] cats.effect.unsafe.WorkerThread.run

--- 8688815335 ns (0.61%), 867 samples
  [ 0] java.io.InputStream.readNBytes
  [ 1] java.io.InputStream.readAllBytes
  [ 2] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [ 3] jdk.nio.zipfs.ZipPath.newByteChannel
  [ 4] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [ 5] java.nio.file.Files.newByteChannel
  [ 6] java.nio.file.Files.newByteChannel
  [ 7] java.nio.file.Files.readAllBytes
  [ 8] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [ 9] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25648.apply
  [10] cats.effect.IOFiber.$anonfun$8
  [11] cats.effect.IOFiber$$Lambda$200.0x0000000800dadd60.apply
  [12] cats.effect.unsafe.WorkerThread.blockOn
  [13] scala.concurrent.package$.blocking
  [14] cats.effect.IOFiber.runLoop
  [15] cats.effect.IOFiber.execR
  [16] cats.effect.IOFiber.run
  [17] cats.effect.unsafe.WorkerThread.run

--- 8107395543 ns (0.57%), 809 samples
  [ 0] java.lang.System.arraycopy
  [ 1] java.nio.HeapByteBuffer.put
  [ 2] jdk.nio.zipfs.ByteArrayChannel.read
  [ 3] sun.nio.ch.ChannelInputStream.read
  [ 4] sun.nio.ch.ChannelInputStream.read
  [ 5] sun.nio.ch.ChannelInputStream.read
  [ 6] java.nio.file.Files.read
  [ 7] java.nio.file.Files.readAllBytes
  [ 8] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [ 9] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25648.apply
  [10] cats.effect.IOFiber.$anonfun$8
  [11] cats.effect.IOFiber$$Lambda$200.0x0000000800dadd60.apply
  [12] cats.effect.unsafe.WorkerThread.blockOn
  [13] scala.concurrent.package$.blocking
  [14] cats.effect.IOFiber.runLoop
  [15] cats.effect.IOFiber.execR
  [16] cats.effect.IOFiber.run
  [17] cats.effect.unsafe.WorkerThread.run

--- 8018255410 ns (0.56%), 800 samples
  [ 0] __memset_avx2_unaligned_erms
  [ 1] MemAllocator::allocate() const
  [ 2] TypeArrayKlass::allocate_common(int, bool, JavaThread*)
  [ 3] JVMCIRuntime::new_array_common(JavaThread*, Klass*, int, bool)
  [ 4] jdk.nio.zipfs.ZipFileSystem.getInflater
  [ 5] jdk.nio.zipfs.ZipFileSystem.getInputStream
  [ 6] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [ 7] jdk.nio.zipfs.ZipPath.newByteChannel
  [ 8] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [ 9] java.nio.file.Files.newByteChannel
  [10] java.nio.file.Files.newByteChannel
  [11] java.nio.file.Files.readAllBytes
  [12] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [13] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25648.apply
  [14] cats.effect.IOFiber.$anonfun$8
  [15] cats.effect.IOFiber$$Lambda$200.0x0000000800dadd60.apply
  [16] cats.effect.unsafe.WorkerThread.blockOn
  [17] scala.concurrent.package$.blocking
  [18] cats.effect.IOFiber.runLoop
  [19] cats.effect.IOFiber.execR
  [20] cats.effect.IOFiber.run
  [21] cats.effect.unsafe.WorkerThread.run

--- 7696120046 ns (0.54%), 768 samples
  [ 0] /usr/lib/x86_64-linux-gnu/libz.so.1.2.11
  [ 1] java.util.zip.Inflater.inflateBytesBytes
  [ 2] java.util.zip.Inflater.inflate
  [ 3] java.util.zip.InflaterInputStream.read
  [ 4] java.io.InputStream.readNBytes
  [ 5] java.io.InputStream.readAllBytes
  [ 6] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [ 7] jdk.nio.zipfs.ZipPath.newByteChannel
  [ 8] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [ 9] java.nio.file.Files.newByteChannel
  [10] java.nio.file.Files.newByteChannel
  [11] java.nio.file.Files.readAllBytes
  [12] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [13] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25648.apply
  [14] cats.effect.IOFiber.$anonfun$8
  [15] cats.effect.IOFiber$$Lambda$200.0x0000000800dadd60.apply
  [16] cats.effect.unsafe.WorkerThread.blockOn
  [17] scala.concurrent.package$.blocking
  [18] cats.effect.IOFiber.runLoop
  [19] cats.effect.IOFiber.execR
  [20] cats.effect.IOFiber.run
  [21] cats.effect.unsafe.WorkerThread.run

--- 7686069486 ns (0.54%), 767 samples
  [ 0] __memmove_avx_unaligned_erms
  [ 1] java.util.zip.Inflater.inflateBytesBytes
  [ 2] java.util.zip.Inflater.inflate
  [ 3] java.util.zip.InflaterInputStream.read
  [ 4] java.io.InputStream.readNBytes
  [ 5] java.io.InputStream.readAllBytes
  [ 6] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [ 7] jdk.nio.zipfs.ZipPath.newByteChannel
  [ 8] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [ 9] java.nio.file.Files.newByteChannel
  [10] java.nio.file.Files.newByteChannel
  [11] java.nio.file.Files.readAllBytes
  [12] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [13] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25648.apply
  [14] cats.effect.IOFiber.$anonfun$8
  [15] cats.effect.IOFiber$$Lambda$200.0x0000000800dadd60.apply
  [16] cats.effect.unsafe.WorkerThread.blockOn
  [17] scala.concurrent.package$.blocking
  [18] cats.effect.IOFiber.runLoop
  [19] cats.effect.IOFiber.execR
  [20] cats.effect.IOFiber.run
  [21] cats.effect.unsafe.WorkerThread.run

--- 7464592652 ns (0.53%), 743 samples
  [ 0] _raw_spin_unlock_irqrestore_[k]
  [ 1] try_to_wake_up_[k]
  [ 2] wake_up_q_[k]
  [ 3] futex_wake_[k]
  [ 4] do_futex_[k]
  [ 5] __x64_sys_futex_[k]
  [ 6] do_syscall_64_[k]
  [ 7] entry_SYSCALL_64_after_hwframe_[k]
  [ 8] pthread_cond_signal@@GLIBC_2.3.2
  [ 9] jdk.internal.misc.Unsafe.unpark
  [10] java.util.concurrent.locks.LockSupport.unpark
  [11] cats.effect.unsafe.WorkStealingThreadPool.notifyParked
  [12] cats.effect.unsafe.WorkerThread.blockOn
  [13] scala.concurrent.package$.blocking
  [14] cats.effect.IOFiber.runLoop
  [15] cats.effect.IOFiber.execR
  [16] cats.effect.IOFiber.run
  [17] cats.effect.unsafe.WorkerThread.run

--- 7141696036 ns (0.50%), 712 samples
  [ 0] _raw_spin_unlock_irqrestore_[k]
  [ 1] try_to_wake_up_[k]
  [ 2] wake_up_q_[k]
  [ 3] futex_wake_[k]
  [ 4] do_futex_[k]
  [ 5] __x64_sys_futex_[k]
  [ 6] do_syscall_64_[k]
  [ 7] entry_SYSCALL_64_after_hwframe_[k]
  [ 8] pthread_cond_signal@@GLIBC_2.3.2
  [ 9] jdk.internal.misc.Unsafe.unpark
  [10] java.util.concurrent.locks.LockSupport.unpark
  [11] java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext
  [12] java.util.concurrent.locks.AbstractQueuedSynchronizer.release
  [13] java.util.concurrent.locks.ReentrantLock.unlock
  [14] java.util.concurrent.ArrayBlockingQueue.offer
  [15] cats.effect.IOPlatform.unsafeRunTimed$$anonfun$1
  [16] cats.effect.IOPlatform$$Lambda$145.0x0000000800d9b040.applyVoid
  [17] scala.runtime.function.JProcedure1.apply
  [18] scala.runtime.function.JProcedure1.apply
  [19] cats.effect.IO.unsafeRunAsync$$anonfun$3
  [20] cats.effect.IO$$Lambda$164.0x0000000800da0408.applyVoid
  [21] scala.runtime.function.JProcedure1.apply
  [22] scala.runtime.function.JProcedure1.apply
  [23] cats.effect.IO.$anonfun$6$$anonfun$3
  [24] cats.effect.IO$$Lambda$228.0x0000000800db6738.applyVoid
  [25] scala.runtime.function.JProcedure1.apply
  [26] scala.runtime.function.JProcedure1.apply
  [27] cats.effect.kernel.Outcome.fold
  [28] cats.effect.kernel.Outcome.fold$
  [29] cats.effect.kernel.Outcome$Succeeded.fold
  [30] cats.effect.IO.$anonfun$6
  [31] cats.effect.IO$$Lambda$171.0x0000000800da1de0.applyVoid
  [32] scala.runtime.function.JProcedure1.apply
  [33] scala.runtime.function.JProcedure1.apply
  [34] cats.effect.CallbackStack.apply
  [35] cats.effect.IOFiber.done
  [36] cats.effect.IOFiber.runTerminusSuccessK
  [37] cats.effect.IOFiber.succeeded
  [38] cats.effect.IOFiber.runLoop
  [39] cats.effect.IOFiber.execR
  [40] cats.effect.IOFiber.run
  [41] cats.effect.unsafe.WorkerThread.run

--- 7065966041 ns (0.50%), 705 samples
  [ 0] java.util.Arrays.copyOfRange
  [ 1] java.lang.String.<init>
  [ 2] java.lang.String.<init>
  [ 3] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [ 4] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25648.apply
  [ 5] cats.effect.IOFiber.$anonfun$8
  [ 6] cats.effect.IOFiber$$Lambda$200.0x0000000800dadd60.apply
  [ 7] cats.effect.unsafe.WorkerThread.blockOn
  [ 8] scala.concurrent.package$.blocking
  [ 9] cats.effect.IOFiber.runLoop
  [10] cats.effect.IOFiber.execR
  [11] cats.effect.IOFiber.run
  [12] cats.effect.unsafe.WorkerThread.run

--- 6805332697 ns (0.48%), 679 samples
  [ 0] java.io.InputStream.readNBytes
  [ 1] java.io.InputStream.readAllBytes
  [ 2] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [ 3] jdk.nio.zipfs.ZipPath.newByteChannel
  [ 4] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [ 5] java.nio.file.Files.newByteChannel
  [ 6] java.nio.file.Files.newByteChannel
  [ 7] java.nio.file.Files.readAllBytes
  [ 8] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [ 9] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25648.apply
  [10] cats.effect.IOFiber.$anonfun$8
  [11] cats.effect.IOFiber$$Lambda$200.0x0000000800dadd60.apply
  [12] cats.effect.unsafe.WorkerThread.blockOn
  [13] scala.concurrent.package$.blocking
  [14] cats.effect.IOFiber.runLoop
  [15] cats.effect.IOFiber.execR
  [16] cats.effect.IOFiber.run
  [17] cats.effect.unsafe.WorkerThread.run

--- 6743989217 ns (0.47%), 672 samples
  [ 0] _raw_spin_unlock_irqrestore_[k]
  [ 1] try_to_wake_up_[k]
  [ 2] wake_up_q_[k]
  [ 3] futex_wake_[k]
  [ 4] do_futex_[k]
  [ 5] __x64_sys_futex_[k]
  [ 6] do_syscall_64_[k]
  [ 7] entry_SYSCALL_64_after_hwframe_[k]
  [ 8] pthread_cond_signal@@GLIBC_2.3.2
  [ 9] jdk.internal.misc.Unsafe.unpark
  [10] java.util.concurrent.locks.LockSupport.unpark
  [11] java.util.concurrent.LinkedTransferQueue$Node.tryMatch
  [12] java.util.concurrent.LinkedTransferQueue.xfer
  [13] java.util.concurrent.LinkedTransferQueue.transfer
  [14] cats.effect.unsafe.WorkerThread.blockOn
  [15] scala.concurrent.package$.blocking
  [16] cats.effect.IOFiber.runLoop
  [17] cats.effect.IOFiber.execR
  [18] cats.effect.IOFiber.run
  [19] cats.effect.unsafe.WorkerThread.run

--- 6153342403 ns (0.43%), 614 samples
  [ 0] java.lang.StringCoding.hasNegatives
  [ 1] java.lang.String.<init>
  [ 2] java.lang.String.<init>
  [ 3] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [ 4] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25648.apply
  [ 5] cats.effect.IOFiber.$anonfun$8
  [ 6] cats.effect.IOFiber$$Lambda$200.0x0000000800dadd60.apply
  [ 7] cats.effect.unsafe.WorkerThread.blockOn
  [ 8] scala.concurrent.package$.blocking
  [ 9] cats.effect.IOFiber.runLoop
  [10] cats.effect.IOFiber.execR
  [11] cats.effect.IOFiber.run
  [12] cats.effect.unsafe.WorkerThread.run

--- 6014023568 ns (0.42%), 600 samples
  [ 0] __memset_avx2_unaligned_erms
  [ 1] MemAllocator::allocate() const
  [ 2] TypeArrayKlass::allocate_common(int, bool, JavaThread*)
  [ 3] JVMCIRuntime::new_array_common(JavaThread*, Klass*, int, bool)
  [ 4] java.nio.charset.Charset.forName
  [ 5] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [ 6] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25648.apply
  [ 7] cats.effect.IOFiber.$anonfun$8
  [ 8] cats.effect.IOFiber$$Lambda$200.0x0000000800dadd60.apply
  [ 9] cats.effect.unsafe.WorkerThread.blockOn
  [10] scala.concurrent.package$.blocking
  [11] cats.effect.IOFiber.runLoop
  [12] cats.effect.IOFiber.execR
  [13] cats.effect.IOFiber.run
  [14] cats.effect.unsafe.WorkerThread.run

--- 5973708500 ns (0.42%), 596 samples
  [ 0] __memset_avx2_unaligned_erms
  [ 1] MemAllocator::allocate() const
  [ 2] TypeArrayKlass::allocate_common(int, bool, JavaThread*)
  [ 3] JVMCIRuntime::new_array_common(JavaThread*, Klass*, int, bool)
  [ 4] java.io.InputStream.readNBytes
  [ 5] java.io.InputStream.readAllBytes
  [ 6] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [ 7] jdk.nio.zipfs.ZipPath.newByteChannel
  [ 8] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [ 9] java.nio.file.Files.newByteChannel
  [10] java.nio.file.Files.newByteChannel
  [11] java.nio.file.Files.readAllBytes
  [12] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [13] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25648.apply
  [14] cats.effect.IOFiber.$anonfun$8
  [15] cats.effect.IOFiber$$Lambda$200.0x0000000800dadd60.apply
  [16] cats.effect.unsafe.WorkerThread.blockOn
  [17] scala.concurrent.package$.blocking
  [18] cats.effect.IOFiber.runLoop
  [19] cats.effect.IOFiber.execR
  [20] cats.effect.IOFiber.run
  [21] cats.effect.unsafe.WorkerThread.run

--- 5782536920 ns (0.41%), 577 samples
  [ 0] java.util.zip.InflaterInputStream.<init>
  [ 1] jdk.nio.zipfs.ZipFileSystem$2.<init>
  [ 2] jdk.nio.zipfs.ZipFileSystem.getInputStream
  [ 3] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [ 4] jdk.nio.zipfs.ZipPath.newByteChannel
  [ 5] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [ 6] java.nio.file.Files.newByteChannel
  [ 7] java.nio.file.Files.newByteChannel
  [ 8] java.nio.file.Files.readAllBytes
  [ 9] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [10] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25648.apply
  [11] cats.effect.IOFiber.$anonfun$8
  [12] cats.effect.IOFiber$$Lambda$200.0x0000000800dadd60.apply
  [13] cats.effect.unsafe.WorkerThread.blockOn
  [14] scala.concurrent.package$.blocking
  [15] cats.effect.IOFiber.runLoop
  [16] cats.effect.IOFiber.execR
  [17] cats.effect.IOFiber.run
  [18] cats.effect.unsafe.WorkerThread.run

--- 5652491574 ns (0.40%), 564 samples
  [ 0] java.nio.file.Files.read
  [ 1] java.nio.file.Files.readAllBytes
  [ 2] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [ 3] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25648.apply
  [ 4] cats.effect.IOFiber.$anonfun$8
  [ 5] cats.effect.IOFiber$$Lambda$200.0x0000000800dadd60.apply
  [ 6] cats.effect.unsafe.WorkerThread.blockOn
  [ 7] scala.concurrent.package$.blocking
  [ 8] cats.effect.IOFiber.runLoop
  [ 9] cats.effect.IOFiber.execR
  [10] cats.effect.IOFiber.run
  [11] cats.effect.unsafe.WorkerThread.run

--- 5532624558 ns (0.39%), 552 samples
  [ 0] java.lang.System.arraycopy
  [ 1] java.io.InputStream.readNBytes
  [ 2] java.io.InputStream.readAllBytes
  [ 3] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [ 4] jdk.nio.zipfs.ZipPath.newByteChannel
  [ 5] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [ 6] java.nio.file.Files.newByteChannel
  [ 7] java.nio.file.Files.newByteChannel
  [ 8] java.nio.file.Files.readAllBytes
  [ 9] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [10] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25648.apply
  [11] cats.effect.IOFiber.$anonfun$8
  [12] cats.effect.IOFiber$$Lambda$200.0x0000000800dadd60.apply
  [13] cats.effect.unsafe.WorkerThread.blockOn
  [14] scala.concurrent.package$.blocking
  [15] cats.effect.IOFiber.runLoop
  [16] cats.effect.IOFiber.execR
  [17] cats.effect.IOFiber.run
  [18] cats.effect.unsafe.WorkerThread.run

--- 5523738460 ns (0.39%), 551 samples
  [ 0] __memset_avx2_unaligned_erms
  [ 1] MemAllocator::allocate() const
  [ 2] TypeArrayKlass::allocate_common(int, bool, JavaThread*)
  [ 3] JVMCIRuntime::new_array_common(JavaThread*, Klass*, int, bool)
  [ 4] jdk.nio.zipfs.ZipFileSystem.getInflater
  [ 5] jdk.nio.zipfs.ZipFileSystem.getInputStream
  [ 6] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [ 7] jdk.nio.zipfs.ZipPath.newByteChannel
  [ 8] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [ 9] java.nio.file.Files.newByteChannel
  [10] java.nio.file.Files.newByteChannel
  [11] java.nio.file.Files.readAllBytes
  [12] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [13] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25648.apply
  [14] cats.effect.IOFiber.$anonfun$8
  [15] cats.effect.IOFiber$$Lambda$200.0x0000000800dadd60.apply
  [16] cats.effect.unsafe.WorkerThread.blockOn
  [17] scala.concurrent.package$.blocking
  [18] cats.effect.IOFiber.runLoop
  [19] cats.effect.IOFiber.execR
  [20] cats.effect.IOFiber.run
  [21] cats.effect.unsafe.WorkerThread.run

--- 5075609601 ns (0.36%), 506 samples
  [ 0] copy_user_generic_string_[k]
  [ 1] zfs_uiomove_iter?[zfs]_[k]
  [ 2] zfs_uiomove?[zfs]_[k]
  [ 3] dmu_read_uio_dnode?[zfs]_[k]
  [ 4] dmu_read_uio_dbuf?[zfs]_[k]
  [ 5] mappedread?[zfs]_[k]
  [ 6] zfs_read?[zfs]_[k]
  [ 7] zpl_iter_read?[zfs]_[k]
  [ 8] new_sync_read_[k]
  [ 9] vfs_read_[k]
  [10] __x64_sys_pread64_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] __libc_pread64
  [14] sun.nio.ch.FileDispatcherImpl.pread0
  [15] sun.nio.ch.FileDispatcherImpl.pread
  [16] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [17] sun.nio.ch.IOUtil.read
  [18] sun.nio.ch.IOUtil.read
  [19] sun.nio.ch.FileChannelImpl.readInternal
  [20] sun.nio.ch.FileChannelImpl.read
  [21] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [22] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [23] jdk.nio.zipfs.ZipFileSystem$2.fill
  [24] java.util.zip.InflaterInputStream.read
  [25] java.io.InputStream.readNBytes
  [26] java.io.InputStream.readAllBytes
  [27] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [28] jdk.nio.zipfs.ZipPath.newByteChannel
  [29] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [30] java.nio.file.Files.newByteChannel
  [31] java.nio.file.Files.newByteChannel
  [32] java.nio.file.Files.readAllBytes
  [33] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [34] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25648.apply
  [35] cats.effect.IOFiber.$anonfun$8
  [36] cats.effect.IOFiber$$Lambda$200.0x0000000800dadd60.apply
  [37] cats.effect.unsafe.WorkerThread.blockOn
  [38] scala.concurrent.package$.blocking
  [39] cats.effect.IOFiber.runLoop
  [40] cats.effect.IOFiber.execR
  [41] cats.effect.IOFiber.run
  [42] cats.effect.unsafe.WorkerThread.run

--- 5051246345 ns (0.36%), 504 samples
  [ 0] java.lang.System.arraycopy
  [ 1] java.nio.HeapByteBuffer.put
  [ 2] jdk.nio.zipfs.ByteArrayChannel.read
  [ 3] sun.nio.ch.ChannelInputStream.read
  [ 4] sun.nio.ch.ChannelInputStream.read
  [ 5] sun.nio.ch.ChannelInputStream.read
  [ 6] java.nio.file.Files.read
  [ 7] java.nio.file.Files.readAllBytes
  [ 8] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [ 9] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25648.apply
  [10] cats.effect.IOFiber.$anonfun$8
  [11] cats.effect.IOFiber$$Lambda$200.0x0000000800dadd60.apply
  [12] cats.effect.unsafe.WorkerThread.blockOn
  [13] scala.concurrent.package$.blocking
  [14] cats.effect.IOFiber.runLoop
  [15] cats.effect.IOFiber.execR
  [16] cats.effect.IOFiber.run
  [17] cats.effect.unsafe.WorkerThread.run

--- 4951302846 ns (0.35%), 494 samples
  [ 0] __memset_avx2_unaligned_erms
  [ 1] MemAllocator::allocate() const
  [ 2] TypeArrayKlass::allocate_common(int, bool, JavaThread*)
  [ 3] JVMCIRuntime::new_array_common(JavaThread*, Klass*, int, bool)
  [ 4] jdk.nio.zipfs.ByteArrayChannel.endRead
  [ 5] jdk.nio.zipfs.ByteArrayChannel.size
  [ 6] java.nio.file.Files.readAllBytes
  [ 7] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [ 8] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25648.apply
  [ 9] cats.effect.IOFiber.$anonfun$8
  [10] cats.effect.IOFiber$$Lambda$200.0x0000000800dadd60.apply
  [11] cats.effect.unsafe.WorkerThread.blockOn
  [12] scala.concurrent.package$.blocking
  [13] cats.effect.IOFiber.runLoop
  [14] cats.effect.IOFiber.execR
  [15] cats.effect.IOFiber.run
  [16] cats.effect.unsafe.WorkerThread.run

--- 4748058299 ns (0.33%), 474 samples
  [ 0] /usr/lib/x86_64-linux-gnu/libz.so.1.2.11
  [ 1] [unknown]
  [ 2] java.util.zip.Inflater.inflateBytesBytes
  [ 3] java.util.zip.Inflater.inflate
  [ 4] java.util.zip.InflaterInputStream.read
  [ 5] java.io.InputStream.readNBytes
  [ 6] java.io.InputStream.readAllBytes
  [ 7] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [ 8] jdk.nio.zipfs.ZipPath.newByteChannel
  [ 9] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [10] java.nio.file.Files.newByteChannel
  [11] java.nio.file.Files.newByteChannel
  [12] java.nio.file.Files.readAllBytes
  [13] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [14] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25648.apply
  [15] cats.effect.IOFiber.$anonfun$8
  [16] cats.effect.IOFiber$$Lambda$200.0x0000000800dadd60.apply
  [17] cats.effect.unsafe.WorkerThread.blockOn
  [18] scala.concurrent.package$.blocking
  [19] cats.effect.IOFiber.runLoop
  [20] cats.effect.IOFiber.execR
  [21] cats.effect.IOFiber.run
  [22] cats.effect.unsafe.WorkerThread.run

--- 4650059606 ns (0.33%), 464 samples
  [ 0] __memmove_avx_unaligned_erms
  [ 1] java.util.zip.Inflater.inflateBytesBytes
  [ 2] java.util.zip.Inflater.inflate
  [ 3] java.util.zip.InflaterInputStream.read
  [ 4] java.io.InputStream.readNBytes
  [ 5] java.io.InputStream.readAllBytes
  [ 6] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [ 7] jdk.nio.zipfs.ZipPath.newByteChannel
  [ 8] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [ 9] java.nio.file.Files.newByteChannel
  [10] java.nio.file.Files.newByteChannel
  [11] java.nio.file.Files.readAllBytes
  [12] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [13] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25648.apply
  [14] cats.effect.IOFiber.$anonfun$8
  [15] cats.effect.IOFiber$$Lambda$200.0x0000000800dadd60.apply
  [16] cats.effect.unsafe.WorkerThread.blockOn
  [17] scala.concurrent.package$.blocking
  [18] cats.effect.IOFiber.runLoop
  [19] cats.effect.IOFiber.execR
  [20] cats.effect.IOFiber.run
  [21] cats.effect.unsafe.WorkerThread.run

--- 4239901058 ns (0.30%), 423 samples
  [ 0] java.io.InputStream.readNBytes
  [ 1] java.io.InputStream.readAllBytes
  [ 2] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [ 3] jdk.nio.zipfs.ZipPath.newByteChannel
  [ 4] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [ 5] java.nio.file.Files.newByteChannel
  [ 6] java.nio.file.Files.newByteChannel
  [ 7] java.nio.file.Files.readAllBytes
  [ 8] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [ 9] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25648.apply
  [10] cats.effect.IOFiber.$anonfun$8
  [11] cats.effect.IOFiber$$Lambda$200.0x0000000800dadd60.apply
  [12] cats.effect.unsafe.WorkerThread.blockOn
  [13] scala.concurrent.package$.blocking
  [14] cats.effect.IOFiber.runLoop
  [15] cats.effect.IOFiber.execR
  [16] cats.effect.IOFiber.run
  [17] cats.effect.unsafe.WorkerThread.run

--- 3929963001 ns (0.28%), 392 samples
  [ 0] __memset_avx2_unaligned_erms
  [ 1] MemAllocator::allocate() const
  [ 2] TypeArrayKlass::allocate_common(int, bool, JavaThread*)
  [ 3] JVMCIRuntime::new_array_common(JavaThread*, Klass*, int, bool)
  [ 4] java.nio.charset.Charset.forName
  [ 5] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [ 6] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25648.apply
  [ 7] cats.effect.IOFiber.$anonfun$8
  [ 8] cats.effect.IOFiber$$Lambda$200.0x0000000800dadd60.apply
  [ 9] cats.effect.unsafe.WorkerThread.blockOn
  [10] scala.concurrent.package$.blocking
  [11] cats.effect.IOFiber.runLoop
  [12] cats.effect.IOFiber.execR
  [13] cats.effect.IOFiber.run
  [14] cats.effect.unsafe.WorkerThread.run

--- 3888734896 ns (0.27%), 388 samples
  [ 0] __memset_avx2_unaligned_erms
  [ 1] MemAllocator::allocate() const
  [ 2] TypeArrayKlass::allocate_common(int, bool, JavaThread*)
  [ 3] JVMCIRuntime::new_array_common(JavaThread*, Klass*, int, bool)
  [ 4] java.io.InputStream.readNBytes
  [ 5] java.io.InputStream.readAllBytes
  [ 6] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [ 7] jdk.nio.zipfs.ZipPath.newByteChannel
  [ 8] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [ 9] java.nio.file.Files.newByteChannel
  [10] java.nio.file.Files.newByteChannel
  [11] java.nio.file.Files.readAllBytes
  [12] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [13] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25648.apply
  [14] cats.effect.IOFiber.$anonfun$8
  [15] cats.effect.IOFiber$$Lambda$200.0x0000000800dadd60.apply
  [16] cats.effect.unsafe.WorkerThread.blockOn
  [17] scala.concurrent.package$.blocking
  [18] cats.effect.IOFiber.runLoop
  [19] cats.effect.IOFiber.execR
  [20] cats.effect.IOFiber.run
  [21] cats.effect.unsafe.WorkerThread.run

--- 3731690658 ns (0.26%), 372 samples
  [ 0] _raw_spin_unlock_irqrestore_[k]
  [ 1] try_to_wake_up_[k]
  [ 2] wake_up_q_[k]
  [ 3] futex_wake_[k]
  [ 4] do_futex_[k]
  [ 5] __x64_sys_futex_[k]
  [ 6] do_syscall_64_[k]
  [ 7] entry_SYSCALL_64_after_hwframe_[k]
  [ 8] pthread_cond_signal@@GLIBC_2.3.2
  [ 9] jdk.internal.misc.Unsafe.unpark
  [10] java.util.concurrent.locks.LockSupport.unpark
  [11] java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext
  [12] java.util.concurrent.locks.AbstractQueuedSynchronizer.release
  [13] java.util.concurrent.locks.ReentrantLock.unlock
  [14] java.util.concurrent.ArrayBlockingQueue.offer
  [15] cats.effect.IOPlatform.unsafeRunTimed$$anonfun$1
  [16] cats.effect.IOPlatform$$Lambda$145.0x0000000800d9b040.applyVoid
  [17] scala.runtime.function.JProcedure1.apply
  [18] scala.runtime.function.JProcedure1.apply
  [19] cats.effect.IO.unsafeRunAsync$$anonfun$3
  [20] cats.effect.IO$$Lambda$164.0x0000000800da0408.applyVoid
  [21] scala.runtime.function.JProcedure1.apply
  [22] scala.runtime.function.JProcedure1.apply
  [23] cats.effect.IO.$anonfun$6$$anonfun$3
  [24] cats.effect.IO$$Lambda$228.0x0000000800db6738.applyVoid
  [25] scala.runtime.function.JProcedure1.apply
  [26] scala.runtime.function.JProcedure1.apply
  [27] cats.effect.kernel.Outcome.fold
  [28] cats.effect.kernel.Outcome.fold$
  [29] cats.effect.kernel.Outcome$Succeeded.fold
  [30] cats.effect.IO.$anonfun$6
  [31] cats.effect.IO$$Lambda$171.0x0000000800da1de0.applyVoid
  [32] scala.runtime.function.JProcedure1.apply
  [33] scala.runtime.function.JProcedure1.apply
  [34] cats.effect.CallbackStack.apply
  [35] cats.effect.IOFiber.done
  [36] cats.effect.IOFiber.runTerminusSuccessK
  [37] cats.effect.IOFiber.succeeded
  [38] cats.effect.IOFiber.runLoop
  [39] cats.effect.IOFiber.execR
  [40] cats.effect.IOFiber.run
  [41] cats.effect.unsafe.WorkerThread.run

--- 3684417282 ns (0.26%), 367 samples
  [ 0] _raw_spin_unlock_irqrestore_[k]
  [ 1] try_to_wake_up_[k]
  [ 2] wake_up_q_[k]
  [ 3] futex_wake_[k]
  [ 4] do_futex_[k]
  [ 5] __x64_sys_futex_[k]
  [ 6] do_syscall_64_[k]
  [ 7] entry_SYSCALL_64_after_hwframe_[k]
  [ 8] pthread_cond_signal@@GLIBC_2.3.2
  [ 9] jdk.internal.misc.Unsafe.unpark
  [10] java.util.concurrent.locks.LockSupport.unpark
  [11] java.util.concurrent.LinkedTransferQueue$Node.tryMatch
  [12] java.util.concurrent.LinkedTransferQueue.xfer
  [13] java.util.concurrent.LinkedTransferQueue.transfer
  [14] cats.effect.unsafe.WorkerThread.blockOn
  [15] scala.concurrent.package$.blocking
  [16] cats.effect.IOFiber.runLoop
  [17] cats.effect.IOFiber.execR
  [18] cats.effect.IOFiber.run
  [19] cats.effect.unsafe.WorkerThread.run

--- 3597961933 ns (0.25%), 359 samples
  [ 0] java.util.zip.InflaterInputStream.<init>
  [ 1] jdk.nio.zipfs.ZipFileSystem$2.<init>
  [ 2] jdk.nio.zipfs.ZipFileSystem.getInputStream
  [ 3] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [ 4] jdk.nio.zipfs.ZipPath.newByteChannel
  [ 5] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [ 6] java.nio.file.Files.newByteChannel
  [ 7] java.nio.file.Files.newByteChannel
  [ 8] java.nio.file.Files.readAllBytes
  [ 9] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [10] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25648.apply
  [11] cats.effect.IOFiber.$anonfun$8
  [12] cats.effect.IOFiber$$Lambda$200.0x0000000800dadd60.apply
  [13] cats.effect.unsafe.WorkerThread.blockOn
  [14] scala.concurrent.package$.blocking
  [15] cats.effect.IOFiber.runLoop
  [16] cats.effect.IOFiber.execR
  [17] cats.effect.IOFiber.run
  [18] cats.effect.unsafe.WorkerThread.run

--- 3528272143 ns (0.25%), 352 samples
  [ 0] __memset_avx2_unaligned_erms
  [ 1] MemAllocator::allocate() const
  [ 2] TypeArrayKlass::allocate_common(int, bool, JavaThread*)
  [ 3] JVMCIRuntime::new_array_common(JavaThread*, Klass*, int, bool)
  [ 4] java.io.InputStream.readNBytes
  [ 5] java.io.InputStream.readAllBytes
  [ 6] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [ 7] jdk.nio.zipfs.ZipPath.newByteChannel
  [ 8] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [ 9] java.nio.file.Files.newByteChannel
  [10] java.nio.file.Files.newByteChannel
  [11] java.nio.file.Files.readAllBytes
  [12] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [13] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25648.apply
  [14] cats.effect.IOFiber.$anonfun$8
  [15] cats.effect.IOFiber$$Lambda$200.0x0000000800dadd60.apply
  [16] cats.effect.unsafe.WorkerThread.blockOn
  [17] scala.concurrent.package$.blocking
  [18] cats.effect.IOFiber.runLoop
  [19] cats.effect.IOFiber.execR
  [20] cats.effect.IOFiber.run
  [21] cats.effect.unsafe.WorkerThread.run

--- 3377784636 ns (0.24%), 337 samples
  [ 0] java.lang.StringCoding.hasNegatives
  [ 1] java.lang.String.<init>
  [ 2] java.lang.String.<init>
  [ 3] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [ 4] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25648.apply
  [ 5] cats.effect.IOFiber.$anonfun$8
  [ 6] cats.effect.IOFiber$$Lambda$200.0x0000000800dadd60.apply
  [ 7] cats.effect.unsafe.WorkerThread.blockOn
  [ 8] scala.concurrent.package$.blocking
  [ 9] cats.effect.IOFiber.runLoop
  [10] cats.effect.IOFiber.execR
  [11] cats.effect.IOFiber.run
  [12] cats.effect.unsafe.WorkerThread.run

--- 3304940715 ns (0.23%), 321 samples
  [ 0] _raw_spin_unlock_irqrestore_[k]
  [ 1] try_to_wake_up_[k]
  [ 2] wake_up_q_[k]
  [ 3] futex_wake_[k]
  [ 4] do_futex_[k]
  [ 5] __x64_sys_futex_[k]
  [ 6] do_syscall_64_[k]
  [ 7] entry_SYSCALL_64_after_hwframe_[k]
  [ 8] pthread_cond_signal@@GLIBC_2.3.2
  [ 9] jdk.internal.misc.Unsafe.unpark
  [10] java.util.concurrent.locks.LockSupport.unpark
  [11] cats.effect.unsafe.WorkStealingThreadPool.notifyParked
  [12] cats.effect.unsafe.WorkStealingThreadPool.scheduleExternal
  [13] cats.effect.unsafe.WorkStealingThreadPool.execute
  [14] cats.effect.IO.unsafeRunFiber
  [15] cats.effect.IO.unsafeRunAsync
  [16] cats.effect.IOPlatform.unsafeRunTimed
  [17] cats.effect.IOPlatform.unsafeRunSync
  [18] com.scalamandra.ZipBench.nioReadAllBytes
  [19] com.scalamandra.jmh_generated.ZipBench_nioReadAllBytes_jmhTest.nioReadAllBytes_thrpt_jmhStub
  [20] com.scalamandra.jmh_generated.ZipBench_nioReadAllBytes_jmhTest.nioReadAllBytes_Throughput
  [21] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [22] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [23] java.lang.reflect.Method.invoke
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.Executors$RunnableAdapter.call
  [28] java.util.concurrent.FutureTask.run
  [29] java.util.concurrent.ThreadPoolExecutor.runWorker
  [30] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [31] java.lang.Thread.run

--- 3240249246 ns (0.23%), 323 samples
  [ 0] copy_user_generic_string_[k]
  [ 1] zfs_uiomove_iter?[zfs]_[k]
  [ 2] zfs_uiomove?[zfs]_[k]
  [ 3] dmu_read_uio_dnode?[zfs]_[k]
  [ 4] dmu_read_uio_dbuf?[zfs]_[k]
  [ 5] mappedread?[zfs]_[k]
  [ 6] zfs_read?[zfs]_[k]
  [ 7] zpl_iter_read?[zfs]_[k]
  [ 8] new_sync_read_[k]
  [ 9] vfs_read_[k]
  [10] __x64_sys_pread64_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] __libc_pread64
  [14] sun.nio.ch.FileDispatcherImpl.pread0
  [15] sun.nio.ch.FileDispatcherImpl.pread
  [16] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [17] sun.nio.ch.IOUtil.read
  [18] sun.nio.ch.IOUtil.read
  [19] sun.nio.ch.FileChannelImpl.readInternal
  [20] sun.nio.ch.FileChannelImpl.read
  [21] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [22] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [23] jdk.nio.zipfs.ZipFileSystem$2.fill
  [24] java.util.zip.InflaterInputStream.read
  [25] java.io.InputStream.readNBytes
  [26] java.io.InputStream.readAllBytes
  [27] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [28] jdk.nio.zipfs.ZipPath.newByteChannel
  [29] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [30] java.nio.file.Files.newByteChannel
  [31] java.nio.file.Files.newByteChannel
  [32] java.nio.file.Files.readAllBytes
  [33] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [34] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25648.apply
  [35] cats.effect.IOFiber.$anonfun$8
  [36] cats.effect.IOFiber$$Lambda$200.0x0000000800dadd60.apply
  [37] cats.effect.unsafe.WorkerThread.blockOn
  [38] scala.concurrent.package$.blocking
  [39] cats.effect.IOFiber.runLoop
  [40] cats.effect.IOFiber.execR
  [41] cats.effect.IOFiber.run
  [42] cats.effect.unsafe.WorkerThread.run

--- 3187884798 ns (0.22%), 318 samples
  [ 0] __memset_avx2_unaligned_erms
  [ 1] MemAllocator::allocate() const
  [ 2] TypeArrayKlass::allocate_common(int, bool, JavaThread*)
  [ 3] JVMCIRuntime::new_array_common(JavaThread*, Klass*, int, bool)
  [ 4] jdk.nio.zipfs.ByteArrayChannel.endRead
  [ 5] jdk.nio.zipfs.ByteArrayChannel.size
  [ 6] java.nio.file.Files.readAllBytes
  [ 7] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [ 8] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25648.apply
  [ 9] cats.effect.IOFiber.$anonfun$8
  [10] cats.effect.IOFiber$$Lambda$200.0x0000000800dadd60.apply
  [11] cats.effect.unsafe.WorkerThread.blockOn
  [12] scala.concurrent.package$.blocking
  [13] cats.effect.IOFiber.runLoop
  [14] cats.effect.IOFiber.execR
  [15] cats.effect.IOFiber.run
  [16] cats.effect.unsafe.WorkerThread.run

--- 2790092122 ns (0.20%), 271 samples
  [ 0] _raw_spin_unlock_irqrestore_[k]
  [ 1] hrtimer_start_range_ns_[k]
  [ 2] hrtimer_sleeper_start_expires_[k]
  [ 3] futex_wait_queue_[k]
  [ 4] futex_wait_[k]
  [ 5] do_futex_[k]
  [ 6] __x64_sys_futex_[k]
  [ 7] do_syscall_64_[k]
  [ 8] entry_SYSCALL_64_after_hwframe_[k]
  [ 9] __futex_abstimed_wait_cancelable64
  [10] [unknown]
  [11] jdk.internal.misc.Unsafe.park
  [12] java.util.concurrent.locks.LockSupport.parkNanos
  [13] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos
  [14] java.util.concurrent.ArrayBlockingQueue.poll
  [15] cats.effect.IOPlatform.$anonfun$1
  [16] cats.effect.IOPlatform$$Lambda$192.0x0000000800dac530.apply
  [17] scala.concurrent.BlockContext$DefaultBlockContext$.blockOn
  [18] scala.concurrent.package$.blocking
  [19] cats.effect.IOPlatform.unsafeRunTimed
  [20] cats.effect.IOPlatform.unsafeRunSync
  [21] com.scalamandra.ZipBench.nioReadAllBytes
  [22] com.scalamandra.jmh_generated.ZipBench_nioReadAllBytes_jmhTest.nioReadAllBytes_thrpt_jmhStub
  [23] com.scalamandra.jmh_generated.ZipBench_nioReadAllBytes_jmhTest.nioReadAllBytes_Throughput
  [24] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [25] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [26] java.lang.reflect.Method.invoke
  [27] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [28] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [29] java.util.concurrent.FutureTask.run
  [30] java.util.concurrent.Executors$RunnableAdapter.call
  [31] java.util.concurrent.FutureTask.run
  [32] java.util.concurrent.ThreadPoolExecutor.runWorker
  [33] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [34] java.lang.Thread.run

--- 2666191790 ns (0.19%), 266 samples
  [ 0] __memset_avx2_unaligned_erms
  [ 1] MemAllocator::allocate() const
  [ 2] TypeArrayKlass::allocate_common(int, bool, JavaThread*)
  [ 3] JVMCIRuntime::new_array_common(JavaThread*, Klass*, int, bool)
  [ 4] java.io.InputStream.readNBytes
  [ 5] java.io.InputStream.readAllBytes
  [ 6] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [ 7] jdk.nio.zipfs.ZipPath.newByteChannel
  [ 8] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [ 9] java.nio.file.Files.newByteChannel
  [10] java.nio.file.Files.newByteChannel
  [11] java.nio.file.Files.readAllBytes
  [12] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [13] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25648.apply
  [14] cats.effect.IOFiber.$anonfun$8
  [15] cats.effect.IOFiber$$Lambda$200.0x0000000800dadd60.apply
  [16] cats.effect.unsafe.WorkerThread.blockOn
  [17] scala.concurrent.package$.blocking
  [18] cats.effect.IOFiber.runLoop
  [19] cats.effect.IOFiber.execR
  [20] cats.effect.IOFiber.run
  [21] cats.effect.unsafe.WorkerThread.run

--- 2183829930 ns (0.15%), 218 samples
  [ 0] jbyte_disjoint_arraycopy
  [ 1] jdk.internal.misc.Unsafe.copyMemory0
  [ 2] jdk.internal.misc.Unsafe.copyMemory
  [ 3] jdk.internal.misc.ScopedMemoryAccess.copyMemoryInternal
  [ 4] jdk.internal.misc.ScopedMemoryAccess.copyMemory
  [ 5] java.nio.ByteBuffer.putBuffer
  [ 6] java.nio.ByteBuffer.put
  [ 7] java.nio.HeapByteBuffer.put
  [ 8] sun.nio.ch.IOUtil.read
  [ 9] sun.nio.ch.IOUtil.read
  [10] sun.nio.ch.FileChannelImpl.readInternal
  [11] sun.nio.ch.FileChannelImpl.read
  [12] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [13] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [14] jdk.nio.zipfs.ZipFileSystem$2.fill
  [15] java.util.zip.InflaterInputStream.read
  [16] java.io.InputStream.readNBytes
  [17] java.io.InputStream.readAllBytes
  [18] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [19] jdk.nio.zipfs.ZipPath.newByteChannel
  [20] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [21] java.nio.file.Files.newByteChannel
  [22] java.nio.file.Files.newByteChannel
  [23] java.nio.file.Files.readAllBytes
  [24] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [25] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25648.apply
  [26] cats.effect.IOFiber.$anonfun$8
  [27] cats.effect.IOFiber$$Lambda$200.0x0000000800dadd60.apply
  [28] cats.effect.unsafe.WorkerThread.blockOn
  [29] scala.concurrent.package$.blocking
  [30] cats.effect.IOFiber.runLoop
  [31] cats.effect.IOFiber.execR
  [32] cats.effect.IOFiber.run
  [33] cats.effect.unsafe.WorkerThread.run

--- 1716273328 ns (0.12%), 171 samples
  [ 0] java.util.concurrent.ConcurrentLinkedQueue.poll
  [ 1] cats.effect.unsafe.ScalQueue.poll
  [ 2] cats.effect.unsafe.WorkerThread.run

--- 1673569424 ns (0.12%), 167 samples
  [ 0] java.util.Arrays.copyOfRange
  [ 1] java.io.InputStream.readNBytes
  [ 2] java.io.InputStream.readAllBytes
  [ 3] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [ 4] jdk.nio.zipfs.ZipPath.newByteChannel
  [ 5] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [ 6] java.nio.file.Files.newByteChannel
  [ 7] java.nio.file.Files.newByteChannel
  [ 8] java.nio.file.Files.readAllBytes
  [ 9] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [10] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25648.apply
  [11] cats.effect.IOFiber.$anonfun$8
  [12] cats.effect.IOFiber$$Lambda$200.0x0000000800dadd60.apply
  [13] cats.effect.unsafe.WorkerThread.blockOn
  [14] scala.concurrent.package$.blocking
  [15] cats.effect.IOFiber.runLoop
  [16] cats.effect.IOFiber.execR
  [17] cats.effect.IOFiber.run
  [18] cats.effect.unsafe.WorkerThread.run

--- 1354075124 ns (0.10%), 135 samples
  [ 0] zio_create?[zfs]_[k]
  [ 1] zio_null?[zfs]_[k]
  [ 2] zio_root?[zfs]_[k]
  [ 3] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 4] dmu_read_uio_dnode?[zfs]_[k]
  [ 5] dmu_read_uio_dbuf?[zfs]_[k]
  [ 6] mappedread?[zfs]_[k]
  [ 7] zfs_read?[zfs]_[k]
  [ 8] zpl_iter_read?[zfs]_[k]
  [ 9] new_sync_read_[k]
  [10] vfs_read_[k]
  [11] __x64_sys_pread64_[k]
  [12] do_syscall_64_[k]
  [13] entry_SYSCALL_64_after_hwframe_[k]
  [14] __libc_pread64
  [15] sun.nio.ch.FileDispatcherImpl.pread0
  [16] sun.nio.ch.FileDispatcherImpl.pread
  [17] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [18] sun.nio.ch.IOUtil.read
  [19] sun.nio.ch.IOUtil.read
  [20] sun.nio.ch.FileChannelImpl.readInternal
  [21] sun.nio.ch.FileChannelImpl.read
  [22] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [23] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [24] jdk.nio.zipfs.ZipFileSystem$2.fill
  [25] java.util.zip.InflaterInputStream.read
  [26] java.io.InputStream.readNBytes
  [27] java.io.InputStream.readAllBytes
  [28] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [29] jdk.nio.zipfs.ZipPath.newByteChannel
  [30] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [31] java.nio.file.Files.newByteChannel
  [32] java.nio.file.Files.newByteChannel
  [33] java.nio.file.Files.readAllBytes
  [34] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [35] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25648.apply
  [36] cats.effect.IOFiber.$anonfun$8
  [37] cats.effect.IOFiber$$Lambda$200.0x0000000800dadd60.apply
  [38] cats.effect.unsafe.WorkerThread.blockOn
  [39] scala.concurrent.package$.blocking
  [40] cats.effect.IOFiber.runLoop
  [41] cats.effect.IOFiber.execR
  [42] cats.effect.IOFiber.run
  [43] cats.effect.unsafe.WorkerThread.run

--- 1342514256 ns (0.09%), 133 samples
  [ 0] HeapRegionManager::par_iterate(HeapRegionClosure*, HeapRegionClaimer*, unsigned int) const
  [ 1] G1PrepareEvacuationTask::work(unsigned int)
  [ 2] GangWorker::loop()
  [ 3] GangWorker::run()
  [ 4] Thread::call_run()
  [ 5] thread_native_entry(Thread*)
  [ 6] start_thread

--- 1324999451 ns (0.09%), 132 samples
  [ 0] __vfprintf_internal
  [ 1] [unknown]
  [ 2] java.lang.Thread.setNativeName
  [ 3] java.lang.Thread.setName
  [ 4] cats.effect.unsafe.WorkerThread.blockOn
  [ 5] scala.concurrent.package$.blocking
  [ 6] cats.effect.IOFiber.runLoop
  [ 7] cats.effect.IOFiber.execR
  [ 8] cats.effect.IOFiber.run
  [ 9] cats.effect.unsafe.WorkerThread.run

--- 1307181431 ns (0.09%), 127 samples
  [ 0] Unsafe_Park
  [ 1] jdk.internal.misc.Unsafe.park
  [ 2] java.util.concurrent.locks.LockSupport.parkNanos
  [ 3] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos
  [ 4] java.util.concurrent.ArrayBlockingQueue.poll
  [ 5] cats.effect.IOPlatform.$anonfun$1
  [ 6] cats.effect.IOPlatform$$Lambda$192.0x0000000800dac530.apply
  [ 7] scala.concurrent.BlockContext$DefaultBlockContext$.blockOn
  [ 8] scala.concurrent.package$.blocking
  [ 9] cats.effect.IOPlatform.unsafeRunTimed
  [10] cats.effect.IOPlatform.unsafeRunSync
  [11] com.scalamandra.ZipBench.nioReadAllBytes
  [12] com.scalamandra.jmh_generated.ZipBench_nioReadAllBytes_jmhTest.nioReadAllBytes_thrpt_jmhStub
  [13] com.scalamandra.jmh_generated.ZipBench_nioReadAllBytes_jmhTest.nioReadAllBytes_Throughput
  [14] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [15] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [16] java.lang.reflect.Method.invoke
  [17] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [18] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [19] java.util.concurrent.FutureTask.run
  [20] java.util.concurrent.Executors$RunnableAdapter.call
  [21] java.util.concurrent.FutureTask.run
  [22] java.util.concurrent.ThreadPoolExecutor.runWorker
  [23] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [24] java.lang.Thread.run

--- 1203338400 ns (0.08%), 120 samples
  [ 0] find_vmap_area_[k]
  [ 1] check_heap_object_[k]
  [ 2] __check_object_size.part.0_[k]
  [ 3] __check_object_size_[k]
  [ 4] zfs_uiomove_iter?[zfs]_[k]
  [ 5] zfs_uiomove?[zfs]_[k]
  [ 6] dmu_read_uio_dnode?[zfs]_[k]
  [ 7] dmu_read_uio_dbuf?[zfs]_[k]
  [ 8] mappedread?[zfs]_[k]
  [ 9] zfs_read?[zfs]_[k]
  [10] zpl_iter_read?[zfs]_[k]
  [11] new_sync_read_[k]
  [12] vfs_read_[k]
  [13] __x64_sys_pread64_[k]
  [14] do_syscall_64_[k]
  [15] entry_SYSCALL_64_after_hwframe_[k]
  [16] __libc_pread64
  [17] sun.nio.ch.FileDispatcherImpl.pread0
  [18] sun.nio.ch.FileDispatcherImpl.pread
  [19] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [20] sun.nio.ch.IOUtil.read
  [21] sun.nio.ch.IOUtil.read
  [22] sun.nio.ch.FileChannelImpl.readInternal
  [23] sun.nio.ch.FileChannelImpl.read
  [24] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [25] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [26] jdk.nio.zipfs.ZipFileSystem$2.fill
  [27] java.util.zip.InflaterInputStream.read
  [28] java.io.InputStream.readNBytes
  [29] java.io.InputStream.readAllBytes
  [30] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [31] jdk.nio.zipfs.ZipPath.newByteChannel
  [32] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [33] java.nio.file.Files.newByteChannel
  [34] java.nio.file.Files.newByteChannel
  [35] java.nio.file.Files.readAllBytes
  [36] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [37] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25648.apply
  [38] cats.effect.IOFiber.$anonfun$8
  [39] cats.effect.IOFiber$$Lambda$200.0x0000000800dadd60.apply
  [40] cats.effect.unsafe.WorkerThread.blockOn
  [41] scala.concurrent.package$.blocking
  [42] cats.effect.IOFiber.runLoop
  [43] cats.effect.IOFiber.execR
  [44] cats.effect.IOFiber.run
  [45] cats.effect.unsafe.WorkerThread.run

--- 1192262145 ns (0.08%), 119 samples
  [ 0] jbyte_disjoint_arraycopy
  [ 1] jdk.internal.misc.Unsafe.copyMemory0
  [ 2] jdk.internal.misc.Unsafe.copyMemory
  [ 3] jdk.internal.misc.ScopedMemoryAccess.copyMemoryInternal
  [ 4] jdk.internal.misc.ScopedMemoryAccess.copyMemory
  [ 5] java.nio.ByteBuffer.putBuffer
  [ 6] java.nio.ByteBuffer.put
  [ 7] java.nio.HeapByteBuffer.put
  [ 8] sun.nio.ch.IOUtil.read
  [ 9] sun.nio.ch.IOUtil.read
  [10] sun.nio.ch.FileChannelImpl.readInternal
  [11] sun.nio.ch.FileChannelImpl.read
  [12] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [13] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [14] jdk.nio.zipfs.ZipFileSystem$2.fill
  [15] java.util.zip.InflaterInputStream.read
  [16] java.io.InputStream.readNBytes
  [17] java.io.InputStream.readAllBytes
  [18] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [19] jdk.nio.zipfs.ZipPath.newByteChannel
  [20] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [21] java.nio.file.Files.newByteChannel
  [22] java.nio.file.Files.newByteChannel
  [23] java.nio.file.Files.readAllBytes
  [24] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [25] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25648.apply
  [26] cats.effect.IOFiber.$anonfun$8
  [27] cats.effect.IOFiber$$Lambda$200.0x0000000800dadd60.apply
  [28] cats.effect.unsafe.WorkerThread.blockOn
  [29] scala.concurrent.package$.blocking
  [30] cats.effect.IOFiber.runLoop
  [31] cats.effect.IOFiber.execR
  [32] cats.effect.IOFiber.run
  [33] cats.effect.unsafe.WorkerThread.run

--- 1152770504 ns (0.08%), 112 samples
  [ 0] __schedule_[k]
  [ 1] schedule_[k]
  [ 2] futex_wait_queue_[k]
  [ 3] futex_wait_[k]
  [ 4] do_futex_[k]
  [ 5] __x64_sys_futex_[k]
  [ 6] do_syscall_64_[k]
  [ 7] entry_SYSCALL_64_after_hwframe_[k]
  [ 8] __futex_abstimed_wait_cancelable64
  [ 9] [unknown]
  [10] jdk.internal.misc.Unsafe.park
  [11] java.util.concurrent.locks.LockSupport.parkNanos
  [12] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos
  [13] java.util.concurrent.ArrayBlockingQueue.poll
  [14] cats.effect.IOPlatform.$anonfun$1
  [15] cats.effect.IOPlatform$$Lambda$192.0x0000000800dac530.apply
  [16] scala.concurrent.BlockContext$DefaultBlockContext$.blockOn
  [17] scala.concurrent.package$.blocking
  [18] cats.effect.IOPlatform.unsafeRunTimed
  [19] cats.effect.IOPlatform.unsafeRunSync
  [20] com.scalamandra.ZipBench.nioReadAllBytes
  [21] com.scalamandra.jmh_generated.ZipBench_nioReadAllBytes_jmhTest.nioReadAllBytes_thrpt_jmhStub
  [22] com.scalamandra.jmh_generated.ZipBench_nioReadAllBytes_jmhTest.nioReadAllBytes_Throughput
  [23] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [24] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [25] java.lang.reflect.Method.invoke
  [26] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [27] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [28] java.util.concurrent.FutureTask.run
  [29] java.util.concurrent.Executors$RunnableAdapter.call
  [30] java.util.concurrent.FutureTask.run
  [31] java.util.concurrent.ThreadPoolExecutor.runWorker
  [32] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [33] java.lang.Thread.run

--- 982975399 ns (0.07%), 98 samples
  [ 0] find_vmap_area_[k]
  [ 1] check_heap_object_[k]
  [ 2] __check_object_size.part.0_[k]
  [ 3] __check_object_size_[k]
  [ 4] zfs_uiomove_iter?[zfs]_[k]
  [ 5] zfs_uiomove?[zfs]_[k]
  [ 6] dmu_read_uio_dnode?[zfs]_[k]
  [ 7] dmu_read_uio_dbuf?[zfs]_[k]
  [ 8] mappedread?[zfs]_[k]
  [ 9] zfs_read?[zfs]_[k]
  [10] zpl_iter_read?[zfs]_[k]
  [11] new_sync_read_[k]
  [12] vfs_read_[k]
  [13] __x64_sys_pread64_[k]
  [14] do_syscall_64_[k]
  [15] entry_SYSCALL_64_after_hwframe_[k]
  [16] __libc_pread64
  [17] sun.nio.ch.FileDispatcherImpl.pread0
  [18] sun.nio.ch.FileDispatcherImpl.pread
  [19] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [20] sun.nio.ch.IOUtil.read
  [21] sun.nio.ch.IOUtil.read
  [22] sun.nio.ch.FileChannelImpl.readInternal
  [23] sun.nio.ch.FileChannelImpl.read
  [24] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [25] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [26] jdk.nio.zipfs.ZipFileSystem$Entry.readLocEXTT
  [27] jdk.nio.zipfs.ZipFileSystem$Entry.readExtra
  [28] jdk.nio.zipfs.ZipFileSystem$Entry.readCEN
  [29] jdk.nio.zipfs.ZipFileSystem$Entry.<init>
  [30] jdk.nio.zipfs.ZipFileSystem.getEntry
  [31] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [32] jdk.nio.zipfs.ZipPath.newByteChannel
  [33] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [34] java.nio.file.Files.newByteChannel
  [35] java.nio.file.Files.newByteChannel
  [36] java.nio.file.Files.readAllBytes
  [37] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [38] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25648.apply
  [39] cats.effect.IOFiber.$anonfun$8
  [40] cats.effect.IOFiber$$Lambda$200.0x0000000800dadd60.apply
  [41] cats.effect.unsafe.WorkerThread.blockOn
  [42] scala.concurrent.package$.blocking
  [43] cats.effect.IOFiber.runLoop
  [44] cats.effect.IOFiber.execR
  [45] cats.effect.IOFiber.run
  [46] cats.effect.unsafe.WorkerThread.run

--- 972994287 ns (0.07%), 97 samples
  [ 0] zio_create?[zfs]_[k]
  [ 1] zio_null?[zfs]_[k]
  [ 2] zio_root?[zfs]_[k]
  [ 3] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 4] dmu_read_uio_dnode?[zfs]_[k]
  [ 5] dmu_read_uio_dbuf?[zfs]_[k]
  [ 6] mappedread?[zfs]_[k]
  [ 7] zfs_read?[zfs]_[k]
  [ 8] zpl_iter_read?[zfs]_[k]
  [ 9] new_sync_read_[k]
  [10] vfs_read_[k]
  [11] __x64_sys_pread64_[k]
  [12] do_syscall_64_[k]
  [13] entry_SYSCALL_64_after_hwframe_[k]
  [14] __libc_pread64
  [15] sun.nio.ch.FileDispatcherImpl.pread0
  [16] sun.nio.ch.FileDispatcherImpl.pread
  [17] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [18] sun.nio.ch.IOUtil.read
  [19] sun.nio.ch.IOUtil.read
  [20] sun.nio.ch.FileChannelImpl.readInternal
  [21] sun.nio.ch.FileChannelImpl.read
  [22] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [23] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [24] jdk.nio.zipfs.ZipFileSystem$2.fill
  [25] java.util.zip.InflaterInputStream.read
  [26] java.io.InputStream.readNBytes
  [27] java.io.InputStream.readAllBytes
  [28] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [29] jdk.nio.zipfs.ZipPath.newByteChannel
  [30] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [31] java.nio.file.Files.newByteChannel
  [32] java.nio.file.Files.newByteChannel
  [33] java.nio.file.Files.readAllBytes
  [34] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [35] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25648.apply
  [36] cats.effect.IOFiber.$anonfun$8
  [37] cats.effect.IOFiber$$Lambda$200.0x0000000800dadd60.apply
  [38] cats.effect.unsafe.WorkerThread.blockOn
  [39] scala.concurrent.package$.blocking
  [40] cats.effect.IOFiber.runLoop
  [41] cats.effect.IOFiber.execR
  [42] cats.effect.IOFiber.run
  [43] cats.effect.unsafe.WorkerThread.run

--- 972378838 ns (0.07%), 97 samples
  [ 0] java.util.Arrays.copyOfRange
  [ 1] java.io.InputStream.readNBytes
  [ 2] java.io.InputStream.readAllBytes
  [ 3] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [ 4] jdk.nio.zipfs.ZipPath.newByteChannel
  [ 5] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [ 6] java.nio.file.Files.newByteChannel
  [ 7] java.nio.file.Files.newByteChannel
  [ 8] java.nio.file.Files.readAllBytes
  [ 9] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [10] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25648.apply
  [11] cats.effect.IOFiber.$anonfun$8
  [12] cats.effect.IOFiber$$Lambda$200.0x0000000800dadd60.apply
  [13] cats.effect.unsafe.WorkerThread.blockOn
  [14] scala.concurrent.package$.blocking
  [15] cats.effect.IOFiber.runLoop
  [16] cats.effect.IOFiber.execR
  [17] cats.effect.IOFiber.run
  [18] cats.effect.unsafe.WorkerThread.run

--- 947247138 ns (0.07%), 92 samples
  [ 0] futex_q_lock_[k]
  [ 1] futex_wait_setup_[k]
  [ 2] futex_wait_[k]
  [ 3] do_futex_[k]
  [ 4] __x64_sys_futex_[k]
  [ 5] do_syscall_64_[k]
  [ 6] entry_SYSCALL_64_after_hwframe_[k]
  [ 7] __futex_abstimed_wait_cancelable64
  [ 8] [unknown]
  [ 9] jdk.internal.misc.Unsafe.park
  [10] java.util.concurrent.locks.LockSupport.parkNanos
  [11] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos
  [12] java.util.concurrent.ArrayBlockingQueue.poll
  [13] cats.effect.IOPlatform.$anonfun$1
  [14] cats.effect.IOPlatform$$Lambda$192.0x0000000800dac530.apply
  [15] scala.concurrent.BlockContext$DefaultBlockContext$.blockOn
  [16] scala.concurrent.package$.blocking
  [17] cats.effect.IOPlatform.unsafeRunTimed
  [18] cats.effect.IOPlatform.unsafeRunSync
  [19] com.scalamandra.ZipBench.nioReadAllBytes
  [20] com.scalamandra.jmh_generated.ZipBench_nioReadAllBytes_jmhTest.nioReadAllBytes_thrpt_jmhStub
  [21] com.scalamandra.jmh_generated.ZipBench_nioReadAllBytes_jmhTest.nioReadAllBytes_Throughput
  [22] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [23] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [24] java.lang.reflect.Method.invoke
  [25] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [26] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [27] java.util.concurrent.FutureTask.run
  [28] java.util.concurrent.Executors$RunnableAdapter.call
  [29] java.util.concurrent.FutureTask.run
  [30] java.util.concurrent.ThreadPoolExecutor.runWorker
  [31] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [32] java.lang.Thread.run

--- 892802205 ns (0.06%), 89 samples
  [ 0] memset_[k]
  [ 1] spl_kmem_cache_alloc?[spl]_[k]
  [ 2] zio_create?[zfs]_[k]
  [ 3] zio_null?[zfs]_[k]
  [ 4] zio_root?[zfs]_[k]
  [ 5] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 6] dmu_read_uio_dnode?[zfs]_[k]
  [ 7] dmu_read_uio_dbuf?[zfs]_[k]
  [ 8] mappedread?[zfs]_[k]
  [ 9] zfs_read?[zfs]_[k]
  [10] zpl_iter_read?[zfs]_[k]
  [11] new_sync_read_[k]
  [12] vfs_read_[k]
  [13] __x64_sys_pread64_[k]
  [14] do_syscall_64_[k]
  [15] entry_SYSCALL_64_after_hwframe_[k]
  [16] __libc_pread64
  [17] sun.nio.ch.FileDispatcherImpl.pread0
  [18] sun.nio.ch.FileDispatcherImpl.pread
  [19] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [20] sun.nio.ch.IOUtil.read
  [21] sun.nio.ch.IOUtil.read
  [22] sun.nio.ch.FileChannelImpl.readInternal
  [23] sun.nio.ch.FileChannelImpl.read
  [24] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [25] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [26] jdk.nio.zipfs.ZipFileSystem$2.fill
  [27] java.util.zip.InflaterInputStream.read
  [28] java.io.InputStream.readNBytes
  [29] java.io.InputStream.readAllBytes
  [30] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [31] jdk.nio.zipfs.ZipPath.newByteChannel
  [32] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [33] java.nio.file.Files.newByteChannel
  [34] java.nio.file.Files.newByteChannel
  [35] java.nio.file.Files.readAllBytes
  [36] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [37] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25648.apply
  [38] cats.effect.IOFiber.$anonfun$8
  [39] cats.effect.IOFiber$$Lambda$200.0x0000000800dadd60.apply
  [40] cats.effect.unsafe.WorkerThread.blockOn
  [41] scala.concurrent.package$.blocking
  [42] cats.effect.IOFiber.runLoop
  [43] cats.effect.IOFiber.execR
  [44] cats.effect.IOFiber.run
  [45] cats.effect.unsafe.WorkerThread.run

--- 843890248 ns (0.06%), 82 samples
  [ 0] syscall_enter_from_user_mode_[k]
  [ 1] do_syscall_64_[k]
  [ 2] entry_SYSCALL_64_after_hwframe_[k]
  [ 3] __futex_abstimed_wait_cancelable64
  [ 4] [unknown]
  [ 5] jdk.internal.misc.Unsafe.park
  [ 6] java.util.concurrent.locks.LockSupport.parkNanos
  [ 7] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos
  [ 8] java.util.concurrent.ArrayBlockingQueue.poll
  [ 9] cats.effect.IOPlatform.$anonfun$1
  [10] cats.effect.IOPlatform$$Lambda$192.0x0000000800dac530.apply
  [11] scala.concurrent.BlockContext$DefaultBlockContext$.blockOn
  [12] scala.concurrent.package$.blocking
  [13] cats.effect.IOPlatform.unsafeRunTimed
  [14] cats.effect.IOPlatform.unsafeRunSync
  [15] com.scalamandra.ZipBench.nioReadAllBytes
  [16] com.scalamandra.jmh_generated.ZipBench_nioReadAllBytes_jmhTest.nioReadAllBytes_thrpt_jmhStub
  [17] com.scalamandra.jmh_generated.ZipBench_nioReadAllBytes_jmhTest.nioReadAllBytes_Throughput
  [18] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [19] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.run

--- 823861995 ns (0.06%), 80 samples
  [ 0] futex_wait_[k]
  [ 1] do_futex_[k]
  [ 2] __x64_sys_futex_[k]
  [ 3] do_syscall_64_[k]
  [ 4] entry_SYSCALL_64_after_hwframe_[k]
  [ 5] __futex_abstimed_wait_cancelable64
  [ 6] [unknown]
  [ 7] jdk.internal.misc.Unsafe.park
  [ 8] java.util.concurrent.locks.LockSupport.parkNanos
  [ 9] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos
  [10] java.util.concurrent.ArrayBlockingQueue.poll
  [11] cats.effect.IOPlatform.$anonfun$1
  [12] cats.effect.IOPlatform$$Lambda$192.0x0000000800dac530.apply
  [13] scala.concurrent.BlockContext$DefaultBlockContext$.blockOn
  [14] scala.concurrent.package$.blocking
  [15] cats.effect.IOPlatform.unsafeRunTimed
  [16] cats.effect.IOPlatform.unsafeRunSync
  [17] com.scalamandra.ZipBench.nioReadAllBytes
  [18] com.scalamandra.jmh_generated.ZipBench_nioReadAllBytes_jmhTest.nioReadAllBytes_thrpt_jmhStub
  [19] com.scalamandra.jmh_generated.ZipBench_nioReadAllBytes_jmhTest.nioReadAllBytes_Throughput
  [20] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [21] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [22] java.lang.reflect.Method.invoke
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.Executors$RunnableAdapter.call
  [27] java.util.concurrent.FutureTask.run
  [28] java.util.concurrent.ThreadPoolExecutor.runWorker
  [29] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [30] java.lang.Thread.run

--- 782100393 ns (0.06%), 76 samples
  [ 0] copy_user_generic_string_[k]
  [ 1] get_timespec64_[k]
  [ 2] __x64_sys_futex_[k]
  [ 3] do_syscall_64_[k]
  [ 4] entry_SYSCALL_64_after_hwframe_[k]
  [ 5] __futex_abstimed_wait_cancelable64
  [ 6] [unknown]
  [ 7] jdk.internal.misc.Unsafe.park
  [ 8] java.util.concurrent.locks.LockSupport.parkNanos
  [ 9] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos
  [10] java.util.concurrent.ArrayBlockingQueue.poll
  [11] cats.effect.IOPlatform.$anonfun$1
  [12] cats.effect.IOPlatform$$Lambda$192.0x0000000800dac530.apply
  [13] scala.concurrent.BlockContext$DefaultBlockContext$.blockOn
  [14] scala.concurrent.package$.blocking
  [15] cats.effect.IOPlatform.unsafeRunTimed
  [16] cats.effect.IOPlatform.unsafeRunSync
  [17] com.scalamandra.ZipBench.nioReadAllBytes
  [18] com.scalamandra.jmh_generated.ZipBench_nioReadAllBytes_jmhTest.nioReadAllBytes_thrpt_jmhStub
  [19] com.scalamandra.jmh_generated.ZipBench_nioReadAllBytes_jmhTest.nioReadAllBytes_Throughput
  [20] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [21] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [22] java.lang.reflect.Method.invoke
  [23] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.Executors$RunnableAdapter.call
  [27] java.util.concurrent.FutureTask.run
  [28] java.util.concurrent.ThreadPoolExecutor.runWorker
  [29] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [30] java.lang.Thread.run

--- 762318218 ns (0.05%), 76 samples
  [ 0] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 1] dmu_read_uio_dnode?[zfs]_[k]
  [ 2] dmu_read_uio_dbuf?[zfs]_[k]
  [ 3] mappedread?[zfs]_[k]
  [ 4] zfs_read?[zfs]_[k]
  [ 5] zpl_iter_read?[zfs]_[k]
  [ 6] new_sync_read_[k]
  [ 7] vfs_read_[k]
  [ 8] __x64_sys_pread64_[k]
  [ 9] do_syscall_64_[k]
  [10] entry_SYSCALL_64_after_hwframe_[k]
  [11] __libc_pread64
  [12] sun.nio.ch.FileDispatcherImpl.pread0
  [13] sun.nio.ch.FileDispatcherImpl.pread
  [14] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [15] sun.nio.ch.IOUtil.read
  [16] sun.nio.ch.IOUtil.read
  [17] sun.nio.ch.FileChannelImpl.readInternal
  [18] sun.nio.ch.FileChannelImpl.read
  [19] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [20] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [21] jdk.nio.zipfs.ZipFileSystem$2.fill
  [22] java.util.zip.InflaterInputStream.read
  [23] java.io.InputStream.readNBytes
  [24] java.io.InputStream.readAllBytes
  [25] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [26] jdk.nio.zipfs.ZipPath.newByteChannel
  [27] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [28] java.nio.file.Files.newByteChannel
  [29] java.nio.file.Files.newByteChannel
  [30] java.nio.file.Files.readAllBytes
  [31] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [32] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25648.apply
  [33] cats.effect.IOFiber.$anonfun$8
  [34] cats.effect.IOFiber$$Lambda$200.0x0000000800dadd60.apply
  [35] cats.effect.unsafe.WorkerThread.blockOn
  [36] scala.concurrent.package$.blocking
  [37] cats.effect.IOFiber.runLoop
  [38] cats.effect.IOFiber.execR
  [39] cats.effect.IOFiber.run
  [40] cats.effect.unsafe.WorkerThread.run

--- 732323794 ns (0.05%), 73 samples
  [ 0] __vfprintf_internal
  [ 1] [unknown]
  [ 2] java.lang.Thread.setNativeName
  [ 3] java.lang.Thread.setName
  [ 4] cats.effect.unsafe.WorkerThread.blockOn
  [ 5] scala.concurrent.package$.blocking
  [ 6] cats.effect.IOFiber.runLoop
  [ 7] cats.effect.IOFiber.execR
  [ 8] cats.effect.IOFiber.run
  [ 9] cats.effect.unsafe.WorkerThread.run

--- 730980809 ns (0.05%), 71 samples
  [ 0] __x64_sys_futex_[k]
  [ 1] do_syscall_64_[k]
  [ 2] entry_SYSCALL_64_after_hwframe_[k]
  [ 3] __futex_abstimed_wait_cancelable64
  [ 4] [unknown]
  [ 5] jdk.internal.misc.Unsafe.park
  [ 6] java.util.concurrent.locks.LockSupport.parkNanos
  [ 7] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos
  [ 8] java.util.concurrent.ArrayBlockingQueue.poll
  [ 9] cats.effect.IOPlatform.$anonfun$1
  [10] cats.effect.IOPlatform$$Lambda$192.0x0000000800dac530.apply
  [11] scala.concurrent.BlockContext$DefaultBlockContext$.blockOn
  [12] scala.concurrent.package$.blocking
  [13] cats.effect.IOPlatform.unsafeRunTimed
  [14] cats.effect.IOPlatform.unsafeRunSync
  [15] com.scalamandra.ZipBench.nioReadAllBytes
  [16] com.scalamandra.jmh_generated.ZipBench_nioReadAllBytes_jmhTest.nioReadAllBytes_thrpt_jmhStub
  [17] com.scalamandra.jmh_generated.ZipBench_nioReadAllBytes_jmhTest.nioReadAllBytes_Throughput
  [18] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [19] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.run

--- 706510888 ns (0.05%), 70 samples
  [ 0] void WeakProcessor::Task::work<G1STWIsAliveClosure, G1KeepAliveClosure>(unsigned int, G1STWIsAliveClosure*, G1KeepAliveClosure*)
  [ 1] GangWorker::loop()
  [ 2] GangWorker::run()
  [ 3] Thread::call_run()
  [ 4] thread_native_entry(Thread*)
  [ 5] start_thread

--- 702252697 ns (0.05%), 70 samples
  [ 0] find_vmap_area_[k]
  [ 1] check_heap_object_[k]
  [ 2] __check_object_size.part.0_[k]
  [ 3] __check_object_size_[k]
  [ 4] zfs_uiomove_iter?[zfs]_[k]
  [ 5] zfs_uiomove?[zfs]_[k]
  [ 6] dmu_read_uio_dnode?[zfs]_[k]
  [ 7] dmu_read_uio_dbuf?[zfs]_[k]
  [ 8] mappedread?[zfs]_[k]
  [ 9] zfs_read?[zfs]_[k]
  [10] zpl_iter_read?[zfs]_[k]
  [11] new_sync_read_[k]
  [12] vfs_read_[k]
  [13] __x64_sys_pread64_[k]
  [14] do_syscall_64_[k]
  [15] entry_SYSCALL_64_after_hwframe_[k]
  [16] __libc_pread64
  [17] sun.nio.ch.FileDispatcherImpl.pread0
  [18] sun.nio.ch.FileDispatcherImpl.pread
  [19] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [20] sun.nio.ch.IOUtil.read
  [21] sun.nio.ch.IOUtil.read
  [22] sun.nio.ch.FileChannelImpl.readInternal
  [23] sun.nio.ch.FileChannelImpl.read
  [24] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [25] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [26] jdk.nio.zipfs.ZipFileSystem$2.fill
  [27] java.util.zip.InflaterInputStream.read
  [28] java.io.InputStream.readNBytes
  [29] java.io.InputStream.readAllBytes
  [30] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [31] jdk.nio.zipfs.ZipPath.newByteChannel
  [32] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [33] java.nio.file.Files.newByteChannel
  [34] java.nio.file.Files.newByteChannel
  [35] java.nio.file.Files.readAllBytes
  [36] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [37] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25648.apply
  [38] cats.effect.IOFiber.$anonfun$8
  [39] cats.effect.IOFiber$$Lambda$200.0x0000000800dadd60.apply
  [40] cats.effect.unsafe.WorkerThread.blockOn
  [41] scala.concurrent.package$.blocking
  [42] cats.effect.IOFiber.runLoop
  [43] cats.effect.IOFiber.execR
  [44] cats.effect.IOFiber.run
  [45] cats.effect.unsafe.WorkerThread.run

--- 692548531 ns (0.05%), 69 samples
  [ 0] __vfprintf_internal
  [ 1] [unknown]
  [ 2] java.lang.Thread.setNativeName
  [ 3] java.lang.Thread.setName
  [ 4] cats.effect.unsafe.WorkerThread.init
  [ 5] cats.effect.unsafe.WorkerThread.run

--- 679407227 ns (0.05%), 66 samples
  [ 0] jdk.internal.misc.Unsafe.compareAndSetReference
  [ 1] java.lang.invoke.VarHandleReferences$FieldInstanceReadWrite.compareAndSet
  [ 2] java.lang.invoke.VarHandleGuards.guard_LLL_Z
  [ 3] java.util.concurrent.ConcurrentLinkedQueue.offer
  [ 4] cats.effect.unsafe.ScalQueue.offer
  [ 5] cats.effect.unsafe.WorkStealingThreadPool.scheduleExternal
  [ 6] cats.effect.unsafe.WorkStealingThreadPool.execute
  [ 7] cats.effect.IO.unsafeRunFiber
  [ 8] cats.effect.IO.unsafeRunAsync
  [ 9] cats.effect.IOPlatform.unsafeRunTimed
  [10] cats.effect.IOPlatform.unsafeRunSync
  [11] com.scalamandra.ZipBench.nioReadAllBytes
  [12] com.scalamandra.jmh_generated.ZipBench_nioReadAllBytes_jmhTest.nioReadAllBytes_thrpt_jmhStub
  [13] com.scalamandra.jmh_generated.ZipBench_nioReadAllBytes_jmhTest.nioReadAllBytes_Throughput
  [14] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [15] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [16] java.lang.reflect.Method.invoke
  [17] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [18] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [19] java.util.concurrent.FutureTask.run
  [20] java.util.concurrent.Executors$RunnableAdapter.call
  [21] java.util.concurrent.FutureTask.run
  [22] java.util.concurrent.ThreadPoolExecutor.runWorker
  [23] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [24] java.lang.Thread.run

--- 676399563 ns (0.05%), 67 samples
  [ 0] __memcpy_sse2_unaligned_erms
  [ 1] G1ParEvacuateFollowersClosure::do_void()
  [ 2] G1EvacuateRegionsTask::evacuate_live_objects(G1ParScanThreadState*, unsigned int)
  [ 3] G1EvacuateRegionsBaseTask::work(unsigned int)
  [ 4] GangWorker::loop()
  [ 5] GangWorker::run()
  [ 6] Thread::call_run()
  [ 7] thread_native_entry(Thread*)
  [ 8] start_thread

--- 662563958 ns (0.05%), 66 samples
  [ 0] java.lang.StringBuilder.toString
  [ 1] cats.effect.unsafe.WorkerThread.blockOn
  [ 2] scala.concurrent.package$.blocking
  [ 3] cats.effect.IOFiber.runLoop
  [ 4] cats.effect.IOFiber.execR
  [ 5] cats.effect.IOFiber.run
  [ 6] cats.effect.unsafe.WorkerThread.run

--- 651970834 ns (0.05%), 65 samples
  [ 0] JVM_SetNativeThreadName
  [ 1] java.lang.Thread.setNativeName
  [ 2] java.lang.Thread.setName
  [ 3] cats.effect.unsafe.WorkerThread.blockOn
  [ 4] scala.concurrent.package$.blocking
  [ 5] cats.effect.IOFiber.runLoop
  [ 6] cats.effect.IOFiber.execR
  [ 7] cats.effect.IOFiber.run
  [ 8] cats.effect.unsafe.WorkerThread.run

--- 642170210 ns (0.05%), 64 samples
  [ 0] kmem_cache_alloc_[k]
  [ 1] spl_kmem_cache_alloc?[spl]_[k]
  [ 2] zio_create?[zfs]_[k]
  [ 3] zio_null?[zfs]_[k]
  [ 4] zio_root?[zfs]_[k]
  [ 5] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 6] dmu_read_uio_dnode?[zfs]_[k]
  [ 7] dmu_read_uio_dbuf?[zfs]_[k]
  [ 8] mappedread?[zfs]_[k]
  [ 9] zfs_read?[zfs]_[k]
  [10] zpl_iter_read?[zfs]_[k]
  [11] new_sync_read_[k]
  [12] vfs_read_[k]
  [13] __x64_sys_pread64_[k]
  [14] do_syscall_64_[k]
  [15] entry_SYSCALL_64_after_hwframe_[k]
  [16] __libc_pread64
  [17] sun.nio.ch.FileDispatcherImpl.pread0
  [18] sun.nio.ch.FileDispatcherImpl.pread
  [19] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [20] sun.nio.ch.IOUtil.read
  [21] sun.nio.ch.IOUtil.read
  [22] sun.nio.ch.FileChannelImpl.readInternal
  [23] sun.nio.ch.FileChannelImpl.read
  [24] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [25] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [26] jdk.nio.zipfs.ZipFileSystem$Entry.readLocEXTT
  [27] jdk.nio.zipfs.ZipFileSystem$Entry.readExtra
  [28] jdk.nio.zipfs.ZipFileSystem$Entry.readCEN
  [29] jdk.nio.zipfs.ZipFileSystem$Entry.<init>
  [30] jdk.nio.zipfs.ZipFileSystem.getEntry
  [31] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [32] jdk.nio.zipfs.ZipPath.newByteChannel
  [33] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [34] java.nio.file.Files.newByteChannel
  [35] java.nio.file.Files.newByteChannel
  [36] java.nio.file.Files.readAllBytes
  [37] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [38] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25648.apply
  [39] cats.effect.IOFiber.$anonfun$8
  [40] cats.effect.IOFiber$$Lambda$200.0x0000000800dadd60.apply
  [41] cats.effect.unsafe.WorkerThread.blockOn
  [42] scala.concurrent.package$.blocking
  [43] cats.effect.IOFiber.runLoop
  [44] cats.effect.IOFiber.execR
  [45] cats.effect.IOFiber.run
  [46] cats.effect.unsafe.WorkerThread.run

--- 632161100 ns (0.04%), 63 samples
  [ 0] __kmalloc_node_[k]
  [ 1] spl_kmem_alloc_impl?[spl]_[k]
  [ 2] spl_kmem_zalloc?[spl]_[k]
  [ 3] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 4] dmu_read_uio_dnode?[zfs]_[k]
  [ 5] dmu_read_uio_dbuf?[zfs]_[k]
  [ 6] mappedread?[zfs]_[k]
  [ 7] zfs_read?[zfs]_[k]
  [ 8] zpl_iter_read?[zfs]_[k]
  [ 9] new_sync_read_[k]
  [10] vfs_read_[k]
  [11] __x64_sys_pread64_[k]
  [12] do_syscall_64_[k]
  [13] entry_SYSCALL_64_after_hwframe_[k]
  [14] __libc_pread64
  [15] sun.nio.ch.FileDispatcherImpl.pread0
  [16] sun.nio.ch.FileDispatcherImpl.pread
  [17] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [18] sun.nio.ch.IOUtil.read
  [19] sun.nio.ch.IOUtil.read
  [20] sun.nio.ch.FileChannelImpl.readInternal
  [21] sun.nio.ch.FileChannelImpl.read
  [22] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [23] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [24] jdk.nio.zipfs.ZipFileSystem$Entry.readLocEXTT
  [25] jdk.nio.zipfs.ZipFileSystem$Entry.readExtra
  [26] jdk.nio.zipfs.ZipFileSystem$Entry.readCEN
  [27] jdk.nio.zipfs.ZipFileSystem$Entry.<init>
  [28] jdk.nio.zipfs.ZipFileSystem.getEntry
  [29] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [30] jdk.nio.zipfs.ZipPath.newByteChannel
  [31] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [32] java.nio.file.Files.newByteChannel
  [33] java.nio.file.Files.newByteChannel
  [34] java.nio.file.Files.readAllBytes
  [35] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [36] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25648.apply
  [37] cats.effect.IOFiber.$anonfun$8
  [38] cats.effect.IOFiber$$Lambda$200.0x0000000800dadd60.apply
  [39] cats.effect.unsafe.WorkerThread.blockOn
  [40] scala.concurrent.package$.blocking
  [41] cats.effect.IOFiber.runLoop
  [42] cats.effect.IOFiber.execR
  [43] cats.effect.IOFiber.run
  [44] cats.effect.unsafe.WorkerThread.run

--- 622406354 ns (0.04%), 62 samples
  [ 0] __GI__IO_setb
  [ 1] java.lang.Thread.setNativeName
  [ 2] java.lang.Thread.setName
  [ 3] cats.effect.unsafe.WorkerThread.blockOn
  [ 4] scala.concurrent.package$.blocking
  [ 5] cats.effect.IOFiber.runLoop
  [ 6] cats.effect.IOFiber.execR
  [ 7] cats.effect.IOFiber.run
  [ 8] cats.effect.unsafe.WorkerThread.run

--- 607041522 ns (0.04%), 59 samples
  [ 0] cats.effect.unsafe.ThreadSafeHashtable.put
  [ 1] cats.effect.unsafe.StripedHashtable.put
  [ 2] cats.effect.IO.unsafeRunFiber
  [ 3] cats.effect.IO.unsafeRunAsync
  [ 4] cats.effect.IOPlatform.unsafeRunTimed
  [ 5] cats.effect.IOPlatform.unsafeRunSync
  [ 6] com.scalamandra.ZipBench.nioReadAllBytes
  [ 7] com.scalamandra.jmh_generated.ZipBench_nioReadAllBytes_jmhTest.nioReadAllBytes_thrpt_jmhStub
  [ 8] com.scalamandra.jmh_generated.ZipBench_nioReadAllBytes_jmhTest.nioReadAllBytes_Throughput
  [ 9] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [10] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [11] java.lang.reflect.Method.invoke
  [12] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.Executors$RunnableAdapter.call
  [16] java.util.concurrent.FutureTask.run
  [17] java.util.concurrent.ThreadPoolExecutor.runWorker
  [18] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [19] java.lang.Thread.run

--- 602249097 ns (0.04%), 60 samples
  [ 0] char* UNICODE::as_utf8<signed char>(signed char const*, int&)
  [ 1] java_lang_String::as_utf8_string(oopDesc*)
  [ 2] JVM_SetNativeThreadName
  [ 3] java.lang.Thread.setNativeName
  [ 4] java.lang.Thread.setName
  [ 5] cats.effect.unsafe.WorkerThread.blockOn
  [ 6] scala.concurrent.package$.blocking
  [ 7] cats.effect.IOFiber.runLoop
  [ 8] cats.effect.IOFiber.execR
  [ 9] cats.effect.IOFiber.run
  [10] cats.effect.unsafe.WorkerThread.run

--- 592107376 ns (0.04%), 59 samples
  [ 0] syscall_enter_from_user_mode_[k]
  [ 1] do_syscall_64_[k]
  [ 2] entry_SYSCALL_64_after_hwframe_[k]
  [ 3] __GI___prctl
  [ 4] [unknown]
  [ 5] java.lang.Thread.setNativeName
  [ 6] java.lang.Thread.setName
  [ 7] cats.effect.unsafe.WorkerThread.blockOn
  [ 8] scala.concurrent.package$.blocking
  [ 9] cats.effect.IOFiber.runLoop
  [10] cats.effect.IOFiber.execR
  [11] cats.effect.IOFiber.run
  [12] cats.effect.unsafe.WorkerThread.run

--- 581682133 ns (0.04%), 58 samples
  [ 0] mutex_spin_on_owner_[k]
  [ 1] __mutex_lock.constprop.0_[k]
  [ 2] __mutex_lock_slowpath_[k]
  [ 3] mutex_lock_[k]
  [ 4] dbuf_find?[zfs]_[k]
  [ 5] dbuf_hold_impl?[zfs]_[k]
  [ 6] dbuf_hold_level?[zfs]_[k]
  [ 7] dbuf_hold?[zfs]_[k]
  [ 8] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 9] dmu_read_uio_dnode?[zfs]_[k]
  [10] dmu_read_uio_dbuf?[zfs]_[k]
  [11] mappedread?[zfs]_[k]
  [12] zfs_read?[zfs]_[k]
  [13] zpl_iter_read?[zfs]_[k]
  [14] new_sync_read_[k]
  [15] vfs_read_[k]
  [16] __x64_sys_pread64_[k]
  [17] do_syscall_64_[k]
  [18] entry_SYSCALL_64_after_hwframe_[k]
  [19] __libc_pread64
  [20] sun.nio.ch.FileDispatcherImpl.pread0
  [21] sun.nio.ch.FileDispatcherImpl.pread
  [22] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [23] sun.nio.ch.IOUtil.read
  [24] sun.nio.ch.IOUtil.read
  [25] sun.nio.ch.FileChannelImpl.readInternal
  [26] sun.nio.ch.FileChannelImpl.read
  [27] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [28] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [29] jdk.nio.zipfs.ZipFileSystem$2.fill
  [30] java.util.zip.InflaterInputStream.read
  [31] java.io.InputStream.readNBytes
  [32] java.io.InputStream.readAllBytes
  [33] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [34] jdk.nio.zipfs.ZipPath.newByteChannel
  [35] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [36] java.nio.file.Files.newByteChannel
  [37] java.nio.file.Files.newByteChannel
  [38] java.nio.file.Files.readAllBytes
  [39] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [40] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25648.apply
  [41] cats.effect.IOFiber.$anonfun$8
  [42] cats.effect.IOFiber$$Lambda$200.0x0000000800dadd60.apply
  [43] cats.effect.unsafe.WorkerThread.blockOn
  [44] scala.concurrent.package$.blocking
  [45] cats.effect.IOFiber.runLoop
  [46] cats.effect.IOFiber.execR
  [47] cats.effect.IOFiber.run
  [48] cats.effect.unsafe.WorkerThread.run

--- 581562016 ns (0.04%), 58 samples
  [ 0] futex_wake_[k]
  [ 1] do_futex_[k]
  [ 2] __x64_sys_futex_[k]
  [ 3] do_syscall_64_[k]
  [ 4] entry_SYSCALL_64_after_hwframe_[k]
  [ 5] pthread_cond_signal@@GLIBC_2.3.2
  [ 6] jdk.internal.misc.Unsafe.unpark
  [ 7] java.util.concurrent.locks.LockSupport.unpark
  [ 8] java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext
  [ 9] java.util.concurrent.locks.AbstractQueuedSynchronizer.release
  [10] java.util.concurrent.locks.ReentrantLock.unlock
  [11] java.util.concurrent.ArrayBlockingQueue.offer
  [12] cats.effect.IOPlatform.unsafeRunTimed$$anonfun$1
  [13] cats.effect.IOPlatform$$Lambda$145.0x0000000800d9b040.applyVoid
  [14] scala.runtime.function.JProcedure1.apply
  [15] scala.runtime.function.JProcedure1.apply
  [16] cats.effect.IO.unsafeRunAsync$$anonfun$3
  [17] cats.effect.IO$$Lambda$164.0x0000000800da0408.applyVoid
  [18] scala.runtime.function.JProcedure1.apply
  [19] scala.runtime.function.JProcedure1.apply
  [20] cats.effect.IO.$anonfun$6$$anonfun$3
  [21] cats.effect.IO$$Lambda$228.0x0000000800db6738.applyVoid
  [22] scala.runtime.function.JProcedure1.apply
  [23] scala.runtime.function.JProcedure1.apply
  [24] cats.effect.kernel.Outcome.fold
  [25] cats.effect.kernel.Outcome.fold$
  [26] cats.effect.kernel.Outcome$Succeeded.fold
  [27] cats.effect.IO.$anonfun$6
  [28] cats.effect.IO$$Lambda$171.0x0000000800da1de0.applyVoid
  [29] scala.runtime.function.JProcedure1.apply
  [30] scala.runtime.function.JProcedure1.apply
  [31] cats.effect.CallbackStack.apply
  [32] cats.effect.IOFiber.done
  [33] cats.effect.IOFiber.runTerminusSuccessK
  [34] cats.effect.IOFiber.succeeded
  [35] cats.effect.IOFiber.runLoop
  [36] cats.effect.IOFiber.execR
  [37] cats.effect.IOFiber.run
  [38] cats.effect.unsafe.WorkerThread.run

--- 571871222 ns (0.04%), 57 samples
  [ 0] __fget_light_[k]
  [ 1] __fdget_[k]
  [ 2] __x64_sys_pread64_[k]
  [ 3] do_syscall_64_[k]
  [ 4] entry_SYSCALL_64_after_hwframe_[k]
  [ 5] __libc_pread64
  [ 6] sun.nio.ch.FileDispatcherImpl.pread0
  [ 7] sun.nio.ch.FileDispatcherImpl.pread
  [ 8] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [ 9] sun.nio.ch.IOUtil.read
  [10] sun.nio.ch.IOUtil.read
  [11] sun.nio.ch.FileChannelImpl.readInternal
  [12] sun.nio.ch.FileChannelImpl.read
  [13] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [14] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [15] jdk.nio.zipfs.ZipFileSystem$Entry.readLocEXTT
  [16] jdk.nio.zipfs.ZipFileSystem$Entry.readExtra
  [17] jdk.nio.zipfs.ZipFileSystem$Entry.readCEN
  [18] jdk.nio.zipfs.ZipFileSystem$Entry.<init>
  [19] jdk.nio.zipfs.ZipFileSystem.getEntry
  [20] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [21] jdk.nio.zipfs.ZipPath.newByteChannel
  [22] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [23] java.nio.file.Files.newByteChannel
  [24] java.nio.file.Files.newByteChannel
  [25] java.nio.file.Files.readAllBytes
  [26] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [27] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25648.apply
  [28] cats.effect.IOFiber.$anonfun$8
  [29] cats.effect.IOFiber$$Lambda$200.0x0000000800dadd60.apply
  [30] cats.effect.unsafe.WorkerThread.blockOn
  [31] scala.concurrent.package$.blocking
  [32] cats.effect.IOFiber.runLoop
  [33] cats.effect.IOFiber.execR
  [34] cats.effect.IOFiber.run
  [35] cats.effect.unsafe.WorkerThread.run

--- 571854574 ns (0.04%), 57 samples
  [ 0] __kmalloc_node_[k]
  [ 1] spl_kmem_alloc_impl?[spl]_[k]
  [ 2] spl_kmem_alloc?[spl]_[k]
  [ 3] zfs_rangelock_enter_impl?[zfs]_[k]
  [ 4] zfs_rangelock_enter?[zfs]_[k]
  [ 5] zfs_read?[zfs]_[k]
  [ 6] zpl_iter_read?[zfs]_[k]
  [ 7] new_sync_read_[k]
  [ 8] vfs_read_[k]
  [ 9] __x64_sys_pread64_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] __libc_pread64
  [13] sun.nio.ch.FileDispatcherImpl.pread0
  [14] sun.nio.ch.FileDispatcherImpl.pread
  [15] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [16] sun.nio.ch.IOUtil.read
  [17] sun.nio.ch.IOUtil.read
  [18] sun.nio.ch.FileChannelImpl.readInternal
  [19] sun.nio.ch.FileChannelImpl.read
  [20] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [21] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [22] jdk.nio.zipfs.ZipFileSystem$Entry.readLocEXTT
  [23] jdk.nio.zipfs.ZipFileSystem$Entry.readExtra
  [24] jdk.nio.zipfs.ZipFileSystem$Entry.readCEN
  [25] jdk.nio.zipfs.ZipFileSystem$Entry.<init>
  [26] jdk.nio.zipfs.ZipFileSystem.getEntry
  [27] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [28] jdk.nio.zipfs.ZipPath.newByteChannel
  [29] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [30] java.nio.file.Files.newByteChannel
  [31] java.nio.file.Files.newByteChannel
  [32] java.nio.file.Files.readAllBytes
  [33] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [34] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25648.apply
  [35] cats.effect.IOFiber.$anonfun$8
  [36] cats.effect.IOFiber$$Lambda$200.0x0000000800dadd60.apply
  [37] cats.effect.unsafe.WorkerThread.blockOn
  [38] scala.concurrent.package$.blocking
  [39] cats.effect.IOFiber.runLoop
  [40] cats.effect.IOFiber.execR
  [41] cats.effect.IOFiber.run
  [42] cats.effect.unsafe.WorkerThread.run

--- 571665383 ns (0.04%), 57 samples
  [ 0] __schedule_[k]
  [ 1] schedule_[k]
  [ 2] do_sched_yield_[k]
  [ 3] __x64_sys_sched_yield_[k]
  [ 4] do_syscall_64_[k]
  [ 5] entry_SYSCALL_64_after_hwframe_[k]
  [ 6] __GI___sched_yield
  [ 7] java.lang.Thread.yield
  [ 8] java.util.concurrent.LinkedTransferQueue.awaitMatch
  [ 9] java.util.concurrent.LinkedTransferQueue.xfer
  [10] java.util.concurrent.LinkedTransferQueue.poll
  [11] cats.effect.unsafe.WorkerThread.run

--- 551804762 ns (0.04%), 55 samples
  [ 0] memset_[k]
  [ 1] spl_kmem_cache_alloc?[spl]_[k]
  [ 2] zio_create?[zfs]_[k]
  [ 3] zio_null?[zfs]_[k]
  [ 4] zio_root?[zfs]_[k]
  [ 5] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 6] dmu_read_uio_dnode?[zfs]_[k]
  [ 7] dmu_read_uio_dbuf?[zfs]_[k]
  [ 8] mappedread?[zfs]_[k]
  [ 9] zfs_read?[zfs]_[k]
  [10] zpl_iter_read?[zfs]_[k]
  [11] new_sync_read_[k]
  [12] vfs_read_[k]
  [13] __x64_sys_pread64_[k]
  [14] do_syscall_64_[k]
  [15] entry_SYSCALL_64_after_hwframe_[k]
  [16] __libc_pread64
  [17] sun.nio.ch.FileDispatcherImpl.pread0
  [18] sun.nio.ch.FileDispatcherImpl.pread
  [19] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [20] sun.nio.ch.IOUtil.read
  [21] sun.nio.ch.IOUtil.read
  [22] sun.nio.ch.FileChannelImpl.readInternal
  [23] sun.nio.ch.FileChannelImpl.read
  [24] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [25] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [26] jdk.nio.zipfs.ZipFileSystem$2.fill
  [27] java.util.zip.InflaterInputStream.read
  [28] java.io.InputStream.readNBytes
  [29] java.io.InputStream.readAllBytes
  [30] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [31] jdk.nio.zipfs.ZipPath.newByteChannel
  [32] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [33] java.nio.file.Files.newByteChannel
  [34] java.nio.file.Files.newByteChannel
  [35] java.nio.file.Files.readAllBytes
  [36] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [37] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25648.apply
  [38] cats.effect.IOFiber.$anonfun$8
  [39] cats.effect.IOFiber$$Lambda$200.0x0000000800dadd60.apply
  [40] cats.effect.unsafe.WorkerThread.blockOn
  [41] scala.concurrent.package$.blocking
  [42] cats.effect.IOFiber.runLoop
  [43] cats.effect.IOFiber.execR
  [44] cats.effect.IOFiber.run
  [45] cats.effect.unsafe.WorkerThread.run

--- 541896354 ns (0.04%), 54 samples
  [ 0] __GI__IO_setb
  [ 1] java.lang.Thread.setNativeName
  [ 2] java.lang.Thread.setName
  [ 3] cats.effect.unsafe.WorkerThread.blockOn
  [ 4] scala.concurrent.package$.blocking
  [ 5] cats.effect.IOFiber.runLoop
  [ 6] cats.effect.IOFiber.execR
  [ 7] cats.effect.IOFiber.run
  [ 8] cats.effect.unsafe.WorkerThread.run

--- 541552898 ns (0.04%), 54 samples
  [ 0] pthread_cond_signal@@GLIBC_2.3.2
  [ 1] jdk.internal.misc.Unsafe.unpark
  [ 2] java.util.concurrent.locks.LockSupport.unpark
  [ 3] java.util.concurrent.LinkedTransferQueue$Node.tryMatch
  [ 4] java.util.concurrent.LinkedTransferQueue.xfer
  [ 5] java.util.concurrent.LinkedTransferQueue.transfer
  [ 6] cats.effect.unsafe.WorkerThread.blockOn
  [ 7] scala.concurrent.package$.blocking
  [ 8] cats.effect.IOFiber.runLoop
  [ 9] cats.effect.IOFiber.execR
  [10] cats.effect.IOFiber.run
  [11] cats.effect.unsafe.WorkerThread.run

--- 541522439 ns (0.04%), 54 samples
  [ 0] dbuf_hold_impl?[zfs]_[k]
  [ 1] dbuf_hold_level?[zfs]_[k]
  [ 2] dbuf_hold?[zfs]_[k]
  [ 3] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 4] dmu_read_uio_dnode?[zfs]_[k]
  [ 5] dmu_read_uio_dbuf?[zfs]_[k]
  [ 6] mappedread?[zfs]_[k]
  [ 7] zfs_read?[zfs]_[k]
  [ 8] zpl_iter_read?[zfs]_[k]
  [ 9] new_sync_read_[k]
  [10] vfs_read_[k]
  [11] __x64_sys_pread64_[k]
  [12] do_syscall_64_[k]
  [13] entry_SYSCALL_64_after_hwframe_[k]
  [14] __libc_pread64
  [15] sun.nio.ch.FileDispatcherImpl.pread0
  [16] sun.nio.ch.FileDispatcherImpl.pread
  [17] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [18] sun.nio.ch.IOUtil.read
  [19] sun.nio.ch.IOUtil.read
  [20] sun.nio.ch.FileChannelImpl.readInternal
  [21] sun.nio.ch.FileChannelImpl.read
  [22] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [23] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [24] jdk.nio.zipfs.ZipFileSystem$2.fill
  [25] java.util.zip.InflaterInputStream.read
  [26] java.io.InputStream.readNBytes
  [27] java.io.InputStream.readAllBytes
  [28] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [29] jdk.nio.zipfs.ZipPath.newByteChannel
  [30] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [31] java.nio.file.Files.newByteChannel
  [32] java.nio.file.Files.newByteChannel
  [33] java.nio.file.Files.readAllBytes
  [34] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [35] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25648.apply
  [36] cats.effect.IOFiber.$anonfun$8
  [37] cats.effect.IOFiber$$Lambda$200.0x0000000800dadd60.apply
  [38] cats.effect.unsafe.WorkerThread.blockOn
  [39] scala.concurrent.package$.blocking
  [40] cats.effect.IOFiber.runLoop
  [41] cats.effect.IOFiber.execR
  [42] cats.effect.IOFiber.run
  [43] cats.effect.unsafe.WorkerThread.run

--- 541299509 ns (0.04%), 54 samples
  [ 0] inflate
  [ 1] java.util.zip.Inflater.inflateBytesBytes
  [ 2] java.util.zip.Inflater.inflate
  [ 3] java.util.zip.InflaterInputStream.read
  [ 4] java.io.InputStream.readNBytes
  [ 5] java.io.InputStream.readAllBytes
  [ 6] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [ 7] jdk.nio.zipfs.ZipPath.newByteChannel
  [ 8] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [ 9] java.nio.file.Files.newByteChannel
  [10] java.nio.file.Files.newByteChannel
  [11] java.nio.file.Files.readAllBytes
  [12] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [13] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25648.apply
  [14] cats.effect.IOFiber.$anonfun$8
  [15] cats.effect.IOFiber$$Lambda$200.0x0000000800dadd60.apply
  [16] cats.effect.unsafe.WorkerThread.blockOn
  [17] scala.concurrent.package$.blocking
  [18] cats.effect.IOFiber.runLoop
  [19] cats.effect.IOFiber.execR
  [20] cats.effect.IOFiber.run
  [21] cats.effect.unsafe.WorkerThread.run

--- 532160185 ns (0.04%), 53 samples
  [ 0] strncpy_from_user_[k]
  [ 1] __do_sys_prctl_[k]
  [ 2] __x64_sys_prctl_[k]
  [ 3] do_syscall_64_[k]
  [ 4] entry_SYSCALL_64_after_hwframe_[k]
  [ 5] __GI___prctl
  [ 6] [unknown]
  [ 7] java.lang.Thread.setNativeName
  [ 8] java.lang.Thread.setName
  [ 9] cats.effect.unsafe.WorkerThread.init
  [10] cats.effect.unsafe.WorkerThread.run

--- 521940259 ns (0.04%), 52 samples
  [ 0] pthread_cond_signal@@GLIBC_2.3.2
  [ 1] jdk.internal.misc.Unsafe.unpark
  [ 2] java.util.concurrent.locks.LockSupport.unpark
  [ 3] cats.effect.unsafe.WorkStealingThreadPool.notifyParked
  [ 4] cats.effect.unsafe.WorkerThread.blockOn
  [ 5] scala.concurrent.package$.blocking
  [ 6] cats.effect.IOFiber.runLoop
  [ 7] cats.effect.IOFiber.execR
  [ 8] cats.effect.IOFiber.run
  [ 9] cats.effect.unsafe.WorkerThread.run

--- 521904505 ns (0.04%), 52 samples
  [ 0] JVM_SetNativeThreadName
  [ 1] java.lang.Thread.setNativeName
  [ 2] java.lang.Thread.setName
  [ 3] cats.effect.unsafe.WorkerThread.blockOn
  [ 4] scala.concurrent.package$.blocking
  [ 5] cats.effect.IOFiber.runLoop
  [ 6] cats.effect.IOFiber.execR
  [ 7] cats.effect.IOFiber.run
  [ 8] cats.effect.unsafe.WorkerThread.run

--- 511999548 ns (0.04%), 51 samples
  [ 0] futex_q_lock_[k]
  [ 1] futex_wait_setup_[k]
  [ 2] futex_wait_[k]
  [ 3] do_futex_[k]
  [ 4] __x64_sys_futex_[k]
  [ 5] do_syscall_64_[k]
  [ 6] entry_SYSCALL_64_after_hwframe_[k]
  [ 7] __futex_abstimed_wait_cancelable64
  [ 8] [unknown]
  [ 9] jdk.internal.misc.Unsafe.park
  [10] java.util.concurrent.locks.LockSupport.park
  [11] cats.effect.unsafe.WorkerThread.parkLoop$1
  [12] cats.effect.unsafe.WorkerThread.run

--- 501491916 ns (0.04%), 50 samples
  [ 0] zio_wait?[zfs]_[k]
  [ 1] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 2] dmu_read_uio_dnode?[zfs]_[k]
  [ 3] dmu_read_uio_dbuf?[zfs]_[k]
  [ 4] mappedread?[zfs]_[k]
  [ 5] zfs_read?[zfs]_[k]
  [ 6] zpl_iter_read?[zfs]_[k]
  [ 7] new_sync_read_[k]
  [ 8] vfs_read_[k]
  [ 9] __x64_sys_pread64_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] __libc_pread64
  [13] sun.nio.ch.FileDispatcherImpl.pread0
  [14] sun.nio.ch.FileDispatcherImpl.pread
  [15] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [16] sun.nio.ch.IOUtil.read
  [17] sun.nio.ch.IOUtil.read
  [18] sun.nio.ch.FileChannelImpl.readInternal
  [19] sun.nio.ch.FileChannelImpl.read
  [20] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [21] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [22] jdk.nio.zipfs.ZipFileSystem$2.fill
  [23] java.util.zip.InflaterInputStream.read
  [24] java.io.InputStream.readNBytes
  [25] java.io.InputStream.readAllBytes
  [26] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [27] jdk.nio.zipfs.ZipPath.newByteChannel
  [28] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [29] java.nio.file.Files.newByteChannel
  [30] java.nio.file.Files.newByteChannel
  [31] java.nio.file.Files.readAllBytes
  [32] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [33] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25648.apply
  [34] cats.effect.IOFiber.$anonfun$8
  [35] cats.effect.IOFiber$$Lambda$200.0x0000000800dadd60.apply
  [36] cats.effect.unsafe.WorkerThread.blockOn
  [37] scala.concurrent.package$.blocking
  [38] cats.effect.IOFiber.runLoop
  [39] cats.effect.IOFiber.execR
  [40] cats.effect.IOFiber.run
  [41] cats.effect.unsafe.WorkerThread.run

--- 491481271 ns (0.03%), 49 samples
  [ 0] do_sched_yield_[k]
  [ 1] __x64_sys_sched_yield_[k]
  [ 2] do_syscall_64_[k]
  [ 3] entry_SYSCALL_64_after_hwframe_[k]
  [ 4] __GI___sched_yield
  [ 5] java.lang.Thread.yield
  [ 6] java.util.concurrent.LinkedTransferQueue.awaitMatch
  [ 7] java.util.concurrent.LinkedTransferQueue.xfer
  [ 8] java.util.concurrent.LinkedTransferQueue.poll
  [ 9] cats.effect.unsafe.WorkerThread.run

--- 483340714 ns (0.03%), 47 samples
  [ 0] Parker::park(bool, long)
  [ 1] Unsafe_Park
  [ 2] jdk.internal.misc.Unsafe.park
  [ 3] java.util.concurrent.locks.LockSupport.parkNanos
  [ 4] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos
  [ 5] java.util.concurrent.ArrayBlockingQueue.poll
  [ 6] cats.effect.IOPlatform.$anonfun$1
  [ 7] cats.effect.IOPlatform$$Lambda$192.0x0000000800dac530.apply
  [ 8] scala.concurrent.BlockContext$DefaultBlockContext$.blockOn
  [ 9] scala.concurrent.package$.blocking
  [10] cats.effect.IOPlatform.unsafeRunTimed
  [11] cats.effect.IOPlatform.unsafeRunSync
  [12] com.scalamandra.ZipBench.nioReadAllBytes
  [13] com.scalamandra.jmh_generated.ZipBench_nioReadAllBytes_jmhTest.nioReadAllBytes_thrpt_jmhStub
  [14] com.scalamandra.jmh_generated.ZipBench_nioReadAllBytes_jmhTest.nioReadAllBytes_Throughput
  [15] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [16] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [17] java.lang.reflect.Method.invoke
  [18] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [19] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [20] java.util.concurrent.FutureTask.run
  [21] java.util.concurrent.Executors$RunnableAdapter.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.ThreadPoolExecutor.runWorker
  [24] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [25] java.lang.Thread.run

--- 481733028 ns (0.03%), 48 samples
  [ 0] futex_wake_[k]
  [ 1] do_futex_[k]
  [ 2] __x64_sys_futex_[k]
  [ 3] do_syscall_64_[k]
  [ 4] entry_SYSCALL_64_after_hwframe_[k]
  [ 5] pthread_cond_signal@@GLIBC_2.3.2
  [ 6] jdk.internal.misc.Unsafe.unpark
  [ 7] java.util.concurrent.locks.LockSupport.unpark
  [ 8] java.util.concurrent.LinkedTransferQueue$Node.tryMatch
  [ 9] java.util.concurrent.LinkedTransferQueue.xfer
  [10] java.util.concurrent.LinkedTransferQueue.transfer
  [11] cats.effect.unsafe.WorkerThread.blockOn
  [12] scala.concurrent.package$.blocking
  [13] cats.effect.IOFiber.runLoop
  [14] cats.effect.IOFiber.execR
  [15] cats.effect.IOFiber.run
  [16] cats.effect.unsafe.WorkerThread.run

--- 481499306 ns (0.03%), 48 samples
  [ 0] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 1] dmu_read_uio_dnode?[zfs]_[k]
  [ 2] dmu_read_uio_dbuf?[zfs]_[k]
  [ 3] mappedread?[zfs]_[k]
  [ 4] zfs_read?[zfs]_[k]
  [ 5] zpl_iter_read?[zfs]_[k]
  [ 6] new_sync_read_[k]
  [ 7] vfs_read_[k]
  [ 8] __x64_sys_pread64_[k]
  [ 9] do_syscall_64_[k]
  [10] entry_SYSCALL_64_after_hwframe_[k]
  [11] __libc_pread64
  [12] sun.nio.ch.FileDispatcherImpl.pread0
  [13] sun.nio.ch.FileDispatcherImpl.pread
  [14] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [15] sun.nio.ch.IOUtil.read
  [16] sun.nio.ch.IOUtil.read
  [17] sun.nio.ch.FileChannelImpl.readInternal
  [18] sun.nio.ch.FileChannelImpl.read
  [19] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [20] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [21] jdk.nio.zipfs.ZipFileSystem$2.fill
  [22] java.util.zip.InflaterInputStream.read
  [23] java.io.InputStream.readNBytes
  [24] java.io.InputStream.readAllBytes
  [25] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [26] jdk.nio.zipfs.ZipPath.newByteChannel
  [27] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [28] java.nio.file.Files.newByteChannel
  [29] java.nio.file.Files.newByteChannel
  [30] java.nio.file.Files.readAllBytes
  [31] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [32] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25648.apply
  [33] cats.effect.IOFiber.$anonfun$8
  [34] cats.effect.IOFiber$$Lambda$200.0x0000000800dadd60.apply
  [35] cats.effect.unsafe.WorkerThread.blockOn
  [36] scala.concurrent.package$.blocking
  [37] cats.effect.IOFiber.runLoop
  [38] cats.effect.IOFiber.execR
  [39] cats.effect.IOFiber.run
  [40] cats.effect.unsafe.WorkerThread.run

--- 471913500 ns (0.03%), 47 samples
  [ 0] syscall_enter_from_user_mode_[k]
  [ 1] do_syscall_64_[k]
  [ 2] entry_SYSCALL_64_after_hwframe_[k]
  [ 3] __futex_abstimed_wait_cancelable64
  [ 4] [unknown]
  [ 5] jdk.internal.misc.Unsafe.park
  [ 6] java.util.concurrent.locks.LockSupport.park
  [ 7] cats.effect.unsafe.WorkerThread.parkLoop$1
  [ 8] cats.effect.unsafe.WorkerThread.run

--- 471442597 ns (0.03%), 47 samples
  [ 0] kmem_cache_alloc_[k]
  [ 1] spl_kmem_cache_alloc?[spl]_[k]
  [ 2] zio_create?[zfs]_[k]
  [ 3] zio_null?[zfs]_[k]
  [ 4] zio_root?[zfs]_[k]
  [ 5] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 6] dmu_read_uio_dnode?[zfs]_[k]
  [ 7] dmu_read_uio_dbuf?[zfs]_[k]
  [ 8] mappedread?[zfs]_[k]
  [ 9] zfs_read?[zfs]_[k]
  [10] zpl_iter_read?[zfs]_[k]
  [11] new_sync_read_[k]
  [12] vfs_read_[k]
  [13] __x64_sys_pread64_[k]
  [14] do_syscall_64_[k]
  [15] entry_SYSCALL_64_after_hwframe_[k]
  [16] __libc_pread64
  [17] sun.nio.ch.FileDispatcherImpl.pread0
  [18] sun.nio.ch.FileDispatcherImpl.pread
  [19] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [20] sun.nio.ch.IOUtil.read
  [21] sun.nio.ch.IOUtil.read
  [22] sun.nio.ch.FileChannelImpl.readInternal
  [23] sun.nio.ch.FileChannelImpl.read
  [24] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [25] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [26] jdk.nio.zipfs.ZipFileSystem$2.fill
  [27] java.util.zip.InflaterInputStream.read
  [28] java.io.InputStream.readNBytes
  [29] java.io.InputStream.readAllBytes
  [30] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [31] jdk.nio.zipfs.ZipPath.newByteChannel
  [32] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [33] java.nio.file.Files.newByteChannel
  [34] java.nio.file.Files.newByteChannel
  [35] java.nio.file.Files.readAllBytes
  [36] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [37] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25648.apply
  [38] cats.effect.IOFiber.$anonfun$8
  [39] cats.effect.IOFiber$$Lambda$200.0x0000000800dadd60.apply
  [40] cats.effect.unsafe.WorkerThread.blockOn
  [41] scala.concurrent.package$.blocking
  [42] cats.effect.IOFiber.runLoop
  [43] cats.effect.IOFiber.execR
  [44] cats.effect.IOFiber.run
  [45] cats.effect.unsafe.WorkerThread.run

--- 471257092 ns (0.03%), 47 samples
  [ 0] dbuf_rele_and_unlock?[zfs]_[k]
  [ 1] dbuf_rele?[zfs]_[k]
  [ 2] dmu_buf_rele_array?[zfs]_[k]
  [ 3] dmu_read_uio_dnode?[zfs]_[k]
  [ 4] dmu_read_uio_dbuf?[zfs]_[k]
  [ 5] mappedread?[zfs]_[k]
  [ 6] zfs_read?[zfs]_[k]
  [ 7] zpl_iter_read?[zfs]_[k]
  [ 8] new_sync_read_[k]
  [ 9] vfs_read_[k]
  [10] __x64_sys_pread64_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] __libc_pread64
  [14] sun.nio.ch.FileDispatcherImpl.pread0
  [15] sun.nio.ch.FileDispatcherImpl.pread
  [16] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [17] sun.nio.ch.IOUtil.read
  [18] sun.nio.ch.IOUtil.read
  [19] sun.nio.ch.FileChannelImpl.readInternal
  [20] sun.nio.ch.FileChannelImpl.read
  [21] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [22] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [23] jdk.nio.zipfs.ZipFileSystem$2.fill
  [24] java.util.zip.InflaterInputStream.read
  [25] java.io.InputStream.readNBytes
  [26] java.io.InputStream.readAllBytes
  [27] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [28] jdk.nio.zipfs.ZipPath.newByteChannel
  [29] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [30] java.nio.file.Files.newByteChannel
  [31] java.nio.file.Files.newByteChannel
  [32] java.nio.file.Files.readAllBytes
  [33] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [34] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25648.apply
  [35] cats.effect.IOFiber.$anonfun$8
  [36] cats.effect.IOFiber$$Lambda$200.0x0000000800dadd60.apply
  [37] cats.effect.unsafe.WorkerThread.blockOn
  [38] scala.concurrent.package$.blocking
  [39] cats.effect.IOFiber.runLoop
  [40] cats.effect.IOFiber.execR
  [41] cats.effect.IOFiber.run
  [42] cats.effect.unsafe.WorkerThread.run

--- 452000311 ns (0.03%), 45 samples
  [ 0] futex_wake_[k]
  [ 1] do_futex_[k]
  [ 2] __x64_sys_futex_[k]
  [ 3] do_syscall_64_[k]
  [ 4] entry_SYSCALL_64_after_hwframe_[k]
  [ 5] pthread_cond_signal@@GLIBC_2.3.2
  [ 6] jdk.internal.misc.Unsafe.unpark
  [ 7] java.util.concurrent.locks.LockSupport.unpark
  [ 8] cats.effect.unsafe.WorkStealingThreadPool.notifyParked
  [ 9] cats.effect.unsafe.WorkerThread.blockOn
  [10] scala.concurrent.package$.blocking
  [11] cats.effect.IOFiber.runLoop
  [12] cats.effect.IOFiber.execR
  [13] cats.effect.IOFiber.run
  [14] cats.effect.unsafe.WorkerThread.run

--- 451812796 ns (0.03%), 45 samples
  [ 0] __schedule_[k]
  [ 1] schedule_[k]
  [ 2] futex_wait_queue_[k]
  [ 3] futex_wait_[k]
  [ 4] do_futex_[k]
  [ 5] __x64_sys_futex_[k]
  [ 6] do_syscall_64_[k]
  [ 7] entry_SYSCALL_64_after_hwframe_[k]
  [ 8] __futex_abstimed_wait_cancelable64
  [ 9] [unknown]
  [10] jdk.internal.misc.Unsafe.park
  [11] java.util.concurrent.locks.LockSupport.park
  [12] cats.effect.unsafe.WorkerThread.parkLoop$1
  [13] cats.effect.unsafe.WorkerThread.run

--- 451521068 ns (0.03%), 45 samples
  [ 0] memset_[k]
  [ 1] spl_kmem_cache_alloc?[spl]_[k]
  [ 2] zio_create?[zfs]_[k]
  [ 3] zio_null?[zfs]_[k]
  [ 4] zio_root?[zfs]_[k]
  [ 5] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 6] dmu_read_uio_dnode?[zfs]_[k]
  [ 7] dmu_read_uio_dbuf?[zfs]_[k]
  [ 8] mappedread?[zfs]_[k]
  [ 9] zfs_read?[zfs]_[k]
  [10] zpl_iter_read?[zfs]_[k]
  [11] new_sync_read_[k]
  [12] vfs_read_[k]
  [13] __x64_sys_pread64_[k]
  [14] do_syscall_64_[k]
  [15] entry_SYSCALL_64_after_hwframe_[k]
  [16] __libc_pread64
  [17] sun.nio.ch.FileDispatcherImpl.pread0
  [18] sun.nio.ch.FileDispatcherImpl.pread
  [19] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [20] sun.nio.ch.IOUtil.read
  [21] sun.nio.ch.IOUtil.read
  [22] sun.nio.ch.FileChannelImpl.readInternal
  [23] sun.nio.ch.FileChannelImpl.read
  [24] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [25] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [26] jdk.nio.zipfs.ZipFileSystem$Entry.readLocEXTT
  [27] jdk.nio.zipfs.ZipFileSystem$Entry.readExtra
  [28] jdk.nio.zipfs.ZipFileSystem$Entry.readCEN
  [29] jdk.nio.zipfs.ZipFileSystem$Entry.<init>
  [30] jdk.nio.zipfs.ZipFileSystem.getEntry
  [31] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [32] jdk.nio.zipfs.ZipPath.newByteChannel
  [33] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [34] java.nio.file.Files.newByteChannel
  [35] java.nio.file.Files.newByteChannel
  [36] java.nio.file.Files.readAllBytes
  [37] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [38] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25648.apply
  [39] cats.effect.IOFiber.$anonfun$8
  [40] cats.effect.IOFiber$$Lambda$200.0x0000000800dadd60.apply
  [41] cats.effect.unsafe.WorkerThread.blockOn
  [42] scala.concurrent.package$.blocking
  [43] cats.effect.IOFiber.runLoop
  [44] cats.effect.IOFiber.execR
  [45] cats.effect.IOFiber.run
  [46] cats.effect.unsafe.WorkerThread.run

--- 441435856 ns (0.03%), 44 samples
  [ 0] find_vmap_area_[k]
  [ 1] check_heap_object_[k]
  [ 2] __check_object_size.part.0_[k]
  [ 3] __check_object_size_[k]
  [ 4] zfs_uiomove_iter?[zfs]_[k]
  [ 5] zfs_uiomove?[zfs]_[k]
  [ 6] dmu_read_uio_dnode?[zfs]_[k]
  [ 7] dmu_read_uio_dbuf?[zfs]_[k]
  [ 8] mappedread?[zfs]_[k]
  [ 9] zfs_read?[zfs]_[k]
  [10] zpl_iter_read?[zfs]_[k]
  [11] new_sync_read_[k]
  [12] vfs_read_[k]
  [13] __x64_sys_pread64_[k]
  [14] do_syscall_64_[k]
  [15] entry_SYSCALL_64_after_hwframe_[k]
  [16] __libc_pread64
  [17] sun.nio.ch.FileDispatcherImpl.pread0
  [18] sun.nio.ch.FileDispatcherImpl.pread
  [19] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [20] sun.nio.ch.IOUtil.read
  [21] sun.nio.ch.IOUtil.read
  [22] sun.nio.ch.FileChannelImpl.readInternal
  [23] sun.nio.ch.FileChannelImpl.read
  [24] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [25] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [26] jdk.nio.zipfs.ZipFileSystem$Entry.readLocEXTT
  [27] jdk.nio.zipfs.ZipFileSystem$Entry.readExtra
  [28] jdk.nio.zipfs.ZipFileSystem$Entry.readCEN
  [29] jdk.nio.zipfs.ZipFileSystem$Entry.<init>
  [30] jdk.nio.zipfs.ZipFileSystem.getEntry
  [31] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [32] jdk.nio.zipfs.ZipPath.newByteChannel
  [33] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [34] java.nio.file.Files.newByteChannel
  [35] java.nio.file.Files.newByteChannel
  [36] java.nio.file.Files.readAllBytes
  [37] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [38] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25648.apply
  [39] cats.effect.IOFiber.$anonfun$8
  [40] cats.effect.IOFiber$$Lambda$200.0x0000000800dadd60.apply
  [41] cats.effect.unsafe.WorkerThread.blockOn
  [42] scala.concurrent.package$.blocking
  [43] cats.effect.IOFiber.runLoop
  [44] cats.effect.IOFiber.execR
  [45] cats.effect.IOFiber.run
  [46] cats.effect.unsafe.WorkerThread.run

--- 441362825 ns (0.03%), 44 samples
  [ 0] zio_done?[zfs]_[k]
  [ 1] zio_wait?[zfs]_[k]
  [ 2] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 3] dmu_read_uio_dnode?[zfs]_[k]
  [ 4] dmu_read_uio_dbuf?[zfs]_[k]
  [ 5] mappedread?[zfs]_[k]
  [ 6] zfs_read?[zfs]_[k]
  [ 7] zpl_iter_read?[zfs]_[k]
  [ 8] new_sync_read_[k]
  [ 9] vfs_read_[k]
  [10] __x64_sys_pread64_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] __libc_pread64
  [14] sun.nio.ch.FileDispatcherImpl.pread0
  [15] sun.nio.ch.FileDispatcherImpl.pread
  [16] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [17] sun.nio.ch.IOUtil.read
  [18] sun.nio.ch.IOUtil.read
  [19] sun.nio.ch.FileChannelImpl.readInternal
  [20] sun.nio.ch.FileChannelImpl.read
  [21] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [22] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [23] jdk.nio.zipfs.ZipFileSystem$2.fill
  [24] java.util.zip.InflaterInputStream.read
  [25] java.io.InputStream.readNBytes
  [26] java.io.InputStream.readAllBytes
  [27] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [28] jdk.nio.zipfs.ZipPath.newByteChannel
  [29] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [30] java.nio.file.Files.newByteChannel
  [31] java.nio.file.Files.newByteChannel
  [32] java.nio.file.Files.readAllBytes
  [33] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [34] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25648.apply
  [35] cats.effect.IOFiber.$anonfun$8
  [36] cats.effect.IOFiber$$Lambda$200.0x0000000800dadd60.apply
  [37] cats.effect.unsafe.WorkerThread.blockOn
  [38] scala.concurrent.package$.blocking
  [39] cats.effect.IOFiber.runLoop
  [40] cats.effect.IOFiber.execR
  [41] cats.effect.IOFiber.run
  [42] cats.effect.unsafe.WorkerThread.run

--- 433855503 ns (0.03%), 43 samples
  [ 0] HeapRegionClaimer::claim_region(unsigned int)
  [ 1] G1CollectionSet::iterate_incremental_part_from(HeapRegionClosure*, HeapRegionClaimer*, unsigned int, unsigned int) const
  [ 2] G1MergeHeapRootsTask::work(unsigned int)
  [ 3] GangWorker::loop()
  [ 4] GangWorker::run()
  [ 5] Thread::call_run()
  [ 6] thread_native_entry(Thread*)
  [ 7] start_thread

--- 431114565 ns (0.03%), 43 samples
  [ 0] __GI___prctl
  [ 1] [unknown]
  [ 2] java.lang.Thread.setNativeName
  [ 3] java.lang.Thread.setName
  [ 4] cats.effect.unsafe.WorkerThread.blockOn
  [ 5] scala.concurrent.package$.blocking
  [ 6] cats.effect.IOFiber.runLoop
  [ 7] cats.effect.IOFiber.execR
  [ 8] cats.effect.IOFiber.run
  [ 9] cats.effect.unsafe.WorkerThread.run

--- 430919503 ns (0.03%), 43 samples
  [ 0] jni_GetPrimitiveArrayCritical
  [ 1] Java_java_util_zip_Inflater_inflateBytesBytes
  [ 2] java.util.zip.Inflater.inflateBytesBytes
  [ 3] java.util.zip.Inflater.inflate
  [ 4] java.util.zip.InflaterInputStream.read
  [ 5] java.io.InputStream.readNBytes
  [ 6] java.io.InputStream.readAllBytes
  [ 7] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [ 8] jdk.nio.zipfs.ZipPath.newByteChannel
  [ 9] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [10] java.nio.file.Files.newByteChannel
  [11] java.nio.file.Files.newByteChannel
  [12] java.nio.file.Files.readAllBytes
  [13] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [14] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25648.apply
  [15] cats.effect.IOFiber.$anonfun$8
  [16] cats.effect.IOFiber$$Lambda$200.0x0000000800dadd60.apply
  [17] cats.effect.unsafe.WorkerThread.blockOn
  [18] scala.concurrent.package$.blocking
  [19] cats.effect.IOFiber.runLoop
  [20] cats.effect.IOFiber.execR
  [21] cats.effect.IOFiber.run
  [22] cats.effect.unsafe.WorkerThread.run

--- 421413621 ns (0.03%), 42 samples
  [ 0] __GI___prctl
  [ 1] [unknown]
  [ 2] java.lang.Thread.setNativeName
  [ 3] java.lang.Thread.setName
  [ 4] cats.effect.unsafe.WorkerThread.init
  [ 5] cats.effect.unsafe.WorkerThread.run

--- 421220612 ns (0.03%), 42 samples
  [ 0] mutex_lock_[k]
  [ 1] arc_buf_access?[zfs]_[k]
  [ 2] dbuf_hold_impl?[zfs]_[k]
  [ 3] dbuf_hold_level?[zfs]_[k]
  [ 4] dbuf_hold?[zfs]_[k]
  [ 5] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 6] dmu_read_uio_dnode?[zfs]_[k]
  [ 7] dmu_read_uio_dbuf?[zfs]_[k]
  [ 8] mappedread?[zfs]_[k]
  [ 9] zfs_read?[zfs]_[k]
  [10] zpl_iter_read?[zfs]_[k]
  [11] new_sync_read_[k]
  [12] vfs_read_[k]
  [13] __x64_sys_pread64_[k]
  [14] do_syscall_64_[k]
  [15] entry_SYSCALL_64_after_hwframe_[k]
  [16] __libc_pread64
  [17] sun.nio.ch.FileDispatcherImpl.pread0
  [18] sun.nio.ch.FileDispatcherImpl.pread
  [19] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [20] sun.nio.ch.IOUtil.read
  [21] sun.nio.ch.IOUtil.read
  [22] sun.nio.ch.FileChannelImpl.readInternal
  [23] sun.nio.ch.FileChannelImpl.read
  [24] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [25] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [26] jdk.nio.zipfs.ZipFileSystem$2.fill
  [27] java.util.zip.InflaterInputStream.read
  [28] java.io.InputStream.readNBytes
  [29] java.io.InputStream.readAllBytes
  [30] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [31] jdk.nio.zipfs.ZipPath.newByteChannel
  [32] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [33] java.nio.file.Files.newByteChannel
  [34] java.nio.file.Files.newByteChannel
  [35] java.nio.file.Files.readAllBytes
  [36] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [37] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25648.apply
  [38] cats.effect.IOFiber.$anonfun$8
  [39] cats.effect.IOFiber$$Lambda$200.0x0000000800dadd60.apply
  [40] cats.effect.unsafe.WorkerThread.blockOn
  [41] scala.concurrent.package$.blocking
  [42] cats.effect.IOFiber.runLoop
  [43] cats.effect.IOFiber.execR
  [44] cats.effect.IOFiber.run
  [45] cats.effect.unsafe.WorkerThread.run

--- 421145170 ns (0.03%), 42 samples
  [ 0] java.util.HashMap.getNode
  [ 1] java.util.LinkedHashMap.get
  [ 2] jdk.nio.zipfs.ZipFileSystem.getInode
  [ 3] jdk.nio.zipfs.ZipFileSystem.getEntry
  [ 4] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [ 5] jdk.nio.zipfs.ZipPath.newByteChannel
  [ 6] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [ 7] java.nio.file.Files.newByteChannel
  [ 8] java.nio.file.Files.newByteChannel
  [ 9] java.nio.file.Files.readAllBytes
  [10] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [11] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25648.apply
  [12] cats.effect.IOFiber.$anonfun$8
  [13] cats.effect.IOFiber$$Lambda$200.0x0000000800dadd60.apply
  [14] cats.effect.unsafe.WorkerThread.blockOn
  [15] scala.concurrent.package$.blocking
  [16] cats.effect.IOFiber.runLoop
  [17] cats.effect.IOFiber.execR
  [18] cats.effect.IOFiber.run
  [19] cats.effect.unsafe.WorkerThread.run

--- 421077786 ns (0.03%), 42 samples
  [ 0] syscall_enter_from_user_mode_[k]
  [ 1] do_syscall_64_[k]
  [ 2] entry_SYSCALL_64_after_hwframe_[k]
  [ 3] pthread_cond_signal@@GLIBC_2.3.2
  [ 4] jdk.internal.misc.Unsafe.unpark
  [ 5] java.util.concurrent.locks.LockSupport.unpark
  [ 6] java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext
  [ 7] java.util.concurrent.locks.AbstractQueuedSynchronizer.release
  [ 8] java.util.concurrent.locks.ReentrantLock.unlock
  [ 9] java.util.concurrent.ArrayBlockingQueue.offer
  [10] cats.effect.IOPlatform.unsafeRunTimed$$anonfun$1
  [11] cats.effect.IOPlatform$$Lambda$145.0x0000000800d9b040.applyVoid
  [12] scala.runtime.function.JProcedure1.apply
  [13] scala.runtime.function.JProcedure1.apply
  [14] cats.effect.IO.unsafeRunAsync$$anonfun$3
  [15] cats.effect.IO$$Lambda$164.0x0000000800da0408.applyVoid
  [16] scala.runtime.function.JProcedure1.apply
  [17] scala.runtime.function.JProcedure1.apply
  [18] cats.effect.IO.$anonfun$6$$anonfun$3
  [19] cats.effect.IO$$Lambda$228.0x0000000800db6738.applyVoid
  [20] scala.runtime.function.JProcedure1.apply
  [21] scala.runtime.function.JProcedure1.apply
  [22] cats.effect.kernel.Outcome.fold
  [23] cats.effect.kernel.Outcome.fold$
  [24] cats.effect.kernel.Outcome$Succeeded.fold
  [25] cats.effect.IO.$anonfun$6
  [26] cats.effect.IO$$Lambda$171.0x0000000800da1de0.applyVoid
  [27] scala.runtime.function.JProcedure1.apply
  [28] scala.runtime.function.JProcedure1.apply
  [29] cats.effect.CallbackStack.apply
  [30] cats.effect.IOFiber.done
  [31] cats.effect.IOFiber.runTerminusSuccessK
  [32] cats.effect.IOFiber.succeeded
  [33] cats.effect.IOFiber.runLoop
  [34] cats.effect.IOFiber.execR
  [35] cats.effect.IOFiber.run
  [36] cats.effect.unsafe.WorkerThread.run

--- 411428006 ns (0.03%), 41 samples
  [ 0] kmem_cache_alloc_[k]
  [ 1] spl_kmem_cache_alloc?[spl]_[k]
  [ 2] zio_create?[zfs]_[k]
  [ 3] zio_null?[zfs]_[k]
  [ 4] zio_root?[zfs]_[k]
  [ 5] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 6] dmu_read_uio_dnode?[zfs]_[k]
  [ 7] dmu_read_uio_dbuf?[zfs]_[k]
  [ 8] mappedread?[zfs]_[k]
  [ 9] zfs_read?[zfs]_[k]
  [10] zpl_iter_read?[zfs]_[k]
  [11] new_sync_read_[k]
  [12] vfs_read_[k]
  [13] __x64_sys_pread64_[k]
  [14] do_syscall_64_[k]
  [15] entry_SYSCALL_64_after_hwframe_[k]
  [16] __libc_pread64
  [17] sun.nio.ch.FileDispatcherImpl.pread0
  [18] sun.nio.ch.FileDispatcherImpl.pread
  [19] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [20] sun.nio.ch.IOUtil.read
  [21] sun.nio.ch.IOUtil.read
  [22] sun.nio.ch.FileChannelImpl.readInternal
  [23] sun.nio.ch.FileChannelImpl.read
  [24] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [25] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [26] jdk.nio.zipfs.ZipFileSystem$Entry.readLocEXTT
  [27] jdk.nio.zipfs.ZipFileSystem$Entry.readExtra
  [28] jdk.nio.zipfs.ZipFileSystem$Entry.readCEN
  [29] jdk.nio.zipfs.ZipFileSystem$Entry.<init>
  [30] jdk.nio.zipfs.ZipFileSystem.getEntry
  [31] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [32] jdk.nio.zipfs.ZipPath.newByteChannel
  [33] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [34] java.nio.file.Files.newByteChannel
  [35] java.nio.file.Files.newByteChannel
  [36] java.nio.file.Files.readAllBytes
  [37] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [38] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25648.apply
  [39] cats.effect.IOFiber.$anonfun$8
  [40] cats.effect.IOFiber$$Lambda$200.0x0000000800dadd60.apply
  [41] cats.effect.unsafe.WorkerThread.blockOn
  [42] scala.concurrent.package$.blocking
  [43] cats.effect.IOFiber.runLoop
  [44] cats.effect.IOFiber.execR
  [45] cats.effect.IOFiber.run
  [46] cats.effect.unsafe.WorkerThread.run

--- 411375427 ns (0.03%), 40 samples
  [ 0] JVMCIRuntime::new_instance_common(JavaThread*, Klass*, bool)
  [ 1] java.util.concurrent.ConcurrentLinkedQueue.offer
  [ 2] cats.effect.unsafe.ScalQueue.offer
  [ 3] cats.effect.unsafe.WorkStealingThreadPool.scheduleExternal
  [ 4] cats.effect.unsafe.WorkStealingThreadPool.execute
  [ 5] cats.effect.IO.unsafeRunFiber
  [ 6] cats.effect.IO.unsafeRunAsync
  [ 7] cats.effect.IOPlatform.unsafeRunTimed
  [ 8] cats.effect.IOPlatform.unsafeRunSync
  [ 9] com.scalamandra.ZipBench.nioReadAllBytes
  [10] com.scalamandra.jmh_generated.ZipBench_nioReadAllBytes_jmhTest.nioReadAllBytes_thrpt_jmhStub
  [11] com.scalamandra.jmh_generated.ZipBench_nioReadAllBytes_jmhTest.nioReadAllBytes_Throughput
  [12] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [13] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [14] java.lang.reflect.Method.invoke
  [15] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [16] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [17] java.util.concurrent.FutureTask.run
  [18] java.util.concurrent.Executors$RunnableAdapter.call
  [19] java.util.concurrent.FutureTask.run
  [20] java.util.concurrent.ThreadPoolExecutor.runWorker
  [21] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [22] java.lang.Thread.run

--- 411191396 ns (0.03%), 41 samples
  [ 0] _raw_spin_lock_[k]
  [ 1] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 2] dmu_read_uio_dnode?[zfs]_[k]
  [ 3] dmu_read_uio_dbuf?[zfs]_[k]
  [ 4] mappedread?[zfs]_[k]
  [ 5] zfs_read?[zfs]_[k]
  [ 6] zpl_iter_read?[zfs]_[k]
  [ 7] new_sync_read_[k]
  [ 8] vfs_read_[k]
  [ 9] __x64_sys_pread64_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] __libc_pread64
  [13] sun.nio.ch.FileDispatcherImpl.pread0
  [14] sun.nio.ch.FileDispatcherImpl.pread
  [15] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [16] sun.nio.ch.IOUtil.read
  [17] sun.nio.ch.IOUtil.read
  [18] sun.nio.ch.FileChannelImpl.readInternal
  [19] sun.nio.ch.FileChannelImpl.read
  [20] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [21] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [22] jdk.nio.zipfs.ZipFileSystem$2.fill
  [23] java.util.zip.InflaterInputStream.read
  [24] java.io.InputStream.readNBytes
  [25] java.io.InputStream.readAllBytes
  [26] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [27] jdk.nio.zipfs.ZipPath.newByteChannel
  [28] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [29] java.nio.file.Files.newByteChannel
  [30] java.nio.file.Files.newByteChannel
  [31] java.nio.file.Files.readAllBytes
  [32] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [33] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25648.apply
  [34] cats.effect.IOFiber.$anonfun$8
  [35] cats.effect.IOFiber$$Lambda$200.0x0000000800dadd60.apply
  [36] cats.effect.unsafe.WorkerThread.blockOn
  [37] scala.concurrent.package$.blocking
  [38] cats.effect.IOFiber.runLoop
  [39] cats.effect.IOFiber.execR
  [40] cats.effect.IOFiber.run
  [41] cats.effect.unsafe.WorkerThread.run

--- 410946123 ns (0.03%), 41 samples
  [ 0] pthread_cond_signal@@GLIBC_2.3.2
  [ 1] jdk.internal.misc.Unsafe.unpark
  [ 2] java.util.concurrent.locks.LockSupport.unpark
  [ 3] java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext
  [ 4] java.util.concurrent.locks.AbstractQueuedSynchronizer.release
  [ 5] java.util.concurrent.locks.ReentrantLock.unlock
  [ 6] java.util.concurrent.ArrayBlockingQueue.offer
  [ 7] cats.effect.IOPlatform.unsafeRunTimed$$anonfun$1
  [ 8] cats.effect.IOPlatform$$Lambda$145.0x0000000800d9b040.applyVoid
  [ 9] scala.runtime.function.JProcedure1.apply
  [10] scala.runtime.function.JProcedure1.apply
  [11] cats.effect.IO.unsafeRunAsync$$anonfun$3
  [12] cats.effect.IO$$Lambda$164.0x0000000800da0408.applyVoid
  [13] scala.runtime.function.JProcedure1.apply
  [14] scala.runtime.function.JProcedure1.apply
  [15] cats.effect.IO.$anonfun$6$$anonfun$3
  [16] cats.effect.IO$$Lambda$228.0x0000000800db6738.applyVoid
  [17] scala.runtime.function.JProcedure1.apply
  [18] scala.runtime.function.JProcedure1.apply
  [19] cats.effect.kernel.Outcome.fold
  [20] cats.effect.kernel.Outcome.fold$
  [21] cats.effect.kernel.Outcome$Succeeded.fold
  [22] cats.effect.IO.$anonfun$6
  [23] cats.effect.IO$$Lambda$171.0x0000000800da1de0.applyVoid
  [24] scala.runtime.function.JProcedure1.apply
  [25] scala.runtime.function.JProcedure1.apply
  [26] cats.effect.CallbackStack.apply
  [27] cats.effect.IOFiber.done
  [28] cats.effect.IOFiber.runTerminusSuccessK
  [29] cats.effect.IOFiber.succeeded
  [30] cats.effect.IOFiber.runLoop
  [31] cats.effect.IOFiber.execR
  [32] cats.effect.IOFiber.run
  [33] cats.effect.unsafe.WorkerThread.run

--- 401456420 ns (0.03%), 40 samples
  [ 0] __kmalloc_node_[k]
  [ 1] spl_kmem_alloc_impl?[spl]_[k]
  [ 2] spl_kmem_alloc?[spl]_[k]
  [ 3] zfs_rangelock_enter_impl?[zfs]_[k]
  [ 4] zfs_rangelock_enter?[zfs]_[k]
  [ 5] zfs_read?[zfs]_[k]
  [ 6] zpl_iter_read?[zfs]_[k]
  [ 7] new_sync_read_[k]
  [ 8] vfs_read_[k]
  [ 9] __x64_sys_pread64_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] __libc_pread64
  [13] sun.nio.ch.FileDispatcherImpl.pread0
  [14] sun.nio.ch.FileDispatcherImpl.pread
  [15] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [16] sun.nio.ch.IOUtil.read
  [17] sun.nio.ch.IOUtil.read
  [18] sun.nio.ch.FileChannelImpl.readInternal
  [19] sun.nio.ch.FileChannelImpl.read
  [20] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [21] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [22] jdk.nio.zipfs.ZipFileSystem$Entry.readLocEXTT
  [23] jdk.nio.zipfs.ZipFileSystem$Entry.readExtra
  [24] jdk.nio.zipfs.ZipFileSystem$Entry.readCEN
  [25] jdk.nio.zipfs.ZipFileSystem$Entry.<init>
  [26] jdk.nio.zipfs.ZipFileSystem.getEntry
  [27] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [28] jdk.nio.zipfs.ZipPath.newByteChannel
  [29] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [30] java.nio.file.Files.newByteChannel
  [31] java.nio.file.Files.newByteChannel
  [32] java.nio.file.Files.readAllBytes
  [33] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [34] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25648.apply
  [35] cats.effect.IOFiber.$anonfun$8
  [36] cats.effect.IOFiber$$Lambda$200.0x0000000800dadd60.apply
  [37] cats.effect.unsafe.WorkerThread.blockOn
  [38] scala.concurrent.package$.blocking
  [39] cats.effect.IOFiber.runLoop
  [40] cats.effect.IOFiber.execR
  [41] cats.effect.IOFiber.run
  [42] cats.effect.unsafe.WorkerThread.run

--- 401406873 ns (0.03%), 40 samples
  [ 0] strncpy_from_user_[k]
  [ 1] __do_sys_prctl_[k]
  [ 2] __x64_sys_prctl_[k]
  [ 3] do_syscall_64_[k]
  [ 4] entry_SYSCALL_64_after_hwframe_[k]
  [ 5] __GI___prctl
  [ 6] [unknown]
  [ 7] java.lang.Thread.setNativeName
  [ 8] java.lang.Thread.setName
  [ 9] cats.effect.unsafe.WorkerThread.blockOn
  [10] scala.concurrent.package$.blocking
  [11] cats.effect.IOFiber.runLoop
  [12] cats.effect.IOFiber.execR
  [13] cats.effect.IOFiber.run
  [14] cats.effect.unsafe.WorkerThread.run

--- 401373202 ns (0.03%), 40 samples
  [ 0] pthread_cond_signal@@GLIBC_2.3.2
  [ 1] jdk.internal.misc.Unsafe.unpark
  [ 2] java.util.concurrent.locks.LockSupport.unpark
  [ 3] java.util.concurrent.LinkedTransferQueue$Node.tryMatch
  [ 4] java.util.concurrent.LinkedTransferQueue.xfer
  [ 5] java.util.concurrent.LinkedTransferQueue.transfer
  [ 6] cats.effect.unsafe.WorkerThread.blockOn
  [ 7] scala.concurrent.package$.blocking
  [ 8] cats.effect.IOFiber.runLoop
  [ 9] cats.effect.IOFiber.execR
  [10] cats.effect.IOFiber.run
  [11] cats.effect.unsafe.WorkerThread.run

--- 391351640 ns (0.03%), 39 samples
  [ 0] zio_create?[zfs]_[k]
  [ 1] zio_null?[zfs]_[k]
  [ 2] zio_root?[zfs]_[k]
  [ 3] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 4] dmu_read_uio_dnode?[zfs]_[k]
  [ 5] dmu_read_uio_dbuf?[zfs]_[k]
  [ 6] mappedread?[zfs]_[k]
  [ 7] zfs_read?[zfs]_[k]
  [ 8] zpl_iter_read?[zfs]_[k]
  [ 9] new_sync_read_[k]
  [10] vfs_read_[k]
  [11] __x64_sys_pread64_[k]
  [12] do_syscall_64_[k]
  [13] entry_SYSCALL_64_after_hwframe_[k]
  [14] __libc_pread64
  [15] sun.nio.ch.FileDispatcherImpl.pread0
  [16] sun.nio.ch.FileDispatcherImpl.pread
  [17] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [18] sun.nio.ch.IOUtil.read
  [19] sun.nio.ch.IOUtil.read
  [20] sun.nio.ch.FileChannelImpl.readInternal
  [21] sun.nio.ch.FileChannelImpl.read
  [22] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [23] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [24] jdk.nio.zipfs.ZipFileSystem$Entry.readLocEXTT
  [25] jdk.nio.zipfs.ZipFileSystem$Entry.readExtra
  [26] jdk.nio.zipfs.ZipFileSystem$Entry.readCEN
  [27] jdk.nio.zipfs.ZipFileSystem$Entry.<init>
  [28] jdk.nio.zipfs.ZipFileSystem.getEntry
  [29] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [30] jdk.nio.zipfs.ZipPath.newByteChannel
  [31] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [32] java.nio.file.Files.newByteChannel
  [33] java.nio.file.Files.newByteChannel
  [34] java.nio.file.Files.readAllBytes
  [35] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [36] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25648.apply
  [37] cats.effect.IOFiber.$anonfun$8
  [38] cats.effect.IOFiber$$Lambda$200.0x0000000800dadd60.apply
  [39] cats.effect.unsafe.WorkerThread.blockOn
  [40] scala.concurrent.package$.blocking
  [41] cats.effect.IOFiber.runLoop
  [42] cats.effect.IOFiber.execR
  [43] cats.effect.IOFiber.run
  [44] cats.effect.unsafe.WorkerThread.run

--- 391297097 ns (0.03%), 39 samples
  [ 0] fsnotify_perm.part.0_[k]
  [ 1] security_file_permission_[k]
  [ 2] rw_verify_area_[k]
  [ 3] vfs_read_[k]
  [ 4] __x64_sys_pread64_[k]
  [ 5] do_syscall_64_[k]
  [ 6] entry_SYSCALL_64_after_hwframe_[k]
  [ 7] __libc_pread64
  [ 8] sun.nio.ch.FileDispatcherImpl.pread0
  [ 9] sun.nio.ch.FileDispatcherImpl.pread
  [10] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [11] sun.nio.ch.IOUtil.read
  [12] sun.nio.ch.IOUtil.read
  [13] sun.nio.ch.FileChannelImpl.readInternal
  [14] sun.nio.ch.FileChannelImpl.read
  [15] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [16] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [17] jdk.nio.zipfs.ZipFileSystem$Entry.readLocEXTT
  [18] jdk.nio.zipfs.ZipFileSystem$Entry.readExtra
  [19] jdk.nio.zipfs.ZipFileSystem$Entry.readCEN
  [20] jdk.nio.zipfs.ZipFileSystem$Entry.<init>
  [21] jdk.nio.zipfs.ZipFileSystem.getEntry
  [22] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [23] jdk.nio.zipfs.ZipPath.newByteChannel
  [24] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [25] java.nio.file.Files.newByteChannel
  [26] java.nio.file.Files.newByteChannel
  [27] java.nio.file.Files.readAllBytes
  [28] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [29] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25648.apply
  [30] cats.effect.IOFiber.$anonfun$8
  [31] cats.effect.IOFiber$$Lambda$200.0x0000000800dadd60.apply
  [32] cats.effect.unsafe.WorkerThread.blockOn
  [33] scala.concurrent.package$.blocking
  [34] cats.effect.IOFiber.runLoop
  [35] cats.effect.IOFiber.execR
  [36] cats.effect.IOFiber.run
  [37] cats.effect.unsafe.WorkerThread.run

--- 381467251 ns (0.03%), 38 samples
  [ 0] syscall_enter_from_user_mode_[k]
  [ 1] do_syscall_64_[k]
  [ 2] entry_SYSCALL_64_after_hwframe_[k]
  [ 3] __GI___prctl
  [ 4] [unknown]
  [ 5] java.lang.Thread.setNativeName
  [ 6] java.lang.Thread.setName
  [ 7] cats.effect.unsafe.WorkerThread.blockOn
  [ 8] scala.concurrent.package$.blocking
  [ 9] cats.effect.IOFiber.runLoop
  [10] cats.effect.IOFiber.execR
  [11] cats.effect.IOFiber.run
  [12] cats.effect.unsafe.WorkerThread.run

--- 381160002 ns (0.03%), 38 samples
  [ 0] find_vmap_area_[k]
  [ 1] check_heap_object_[k]
  [ 2] __check_object_size.part.0_[k]
  [ 3] __check_object_size_[k]
  [ 4] zfs_uiomove_iter?[zfs]_[k]
  [ 5] zfs_uiomove?[zfs]_[k]
  [ 6] dmu_read_uio_dnode?[zfs]_[k]
  [ 7] dmu_read_uio_dbuf?[zfs]_[k]
  [ 8] mappedread?[zfs]_[k]
  [ 9] zfs_read?[zfs]_[k]
  [10] zpl_iter_read?[zfs]_[k]
  [11] new_sync_read_[k]
  [12] vfs_read_[k]
  [13] __x64_sys_pread64_[k]
  [14] do_syscall_64_[k]
  [15] entry_SYSCALL_64_after_hwframe_[k]
  [16] __libc_pread64
  [17] sun.nio.ch.FileDispatcherImpl.pread0
  [18] sun.nio.ch.FileDispatcherImpl.pread
  [19] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [20] sun.nio.ch.IOUtil.read
  [21] sun.nio.ch.IOUtil.read
  [22] sun.nio.ch.FileChannelImpl.readInternal
  [23] sun.nio.ch.FileChannelImpl.read
  [24] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [25] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [26] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.initDataPos
  [27] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [28] jdk.nio.zipfs.ZipFileSystem$2.fill
  [29] java.util.zip.InflaterInputStream.read
  [30] java.io.InputStream.readNBytes
  [31] java.io.InputStream.readAllBytes
  [32] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [33] jdk.nio.zipfs.ZipPath.newByteChannel
  [34] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [35] java.nio.file.Files.newByteChannel
  [36] java.nio.file.Files.newByteChannel
  [37] java.nio.file.Files.readAllBytes
  [38] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [39] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25648.apply
  [40] cats.effect.IOFiber.$anonfun$8
  [41] cats.effect.IOFiber$$Lambda$200.0x0000000800dadd60.apply
  [42] cats.effect.unsafe.WorkerThread.blockOn
  [43] scala.concurrent.package$.blocking
  [44] cats.effect.IOFiber.runLoop
  [45] cats.effect.IOFiber.execR
  [46] cats.effect.IOFiber.run
  [47] cats.effect.unsafe.WorkerThread.run

--- 371233516 ns (0.03%), 37 samples
  [ 0] kfree_[k]
  [ 1] spl_kmem_free_impl?[spl]_[k]
  [ 2] spl_kmem_free?[spl]_[k]
  [ 3] dmu_buf_rele_array?[zfs]_[k]
  [ 4] dmu_read_uio_dnode?[zfs]_[k]
  [ 5] dmu_read_uio_dbuf?[zfs]_[k]
  [ 6] mappedread?[zfs]_[k]
  [ 7] zfs_read?[zfs]_[k]
  [ 8] zpl_iter_read?[zfs]_[k]
  [ 9] new_sync_read_[k]
  [10] vfs_read_[k]
  [11] __x64_sys_pread64_[k]
  [12] do_syscall_64_[k]
  [13] entry_SYSCALL_64_after_hwframe_[k]
  [14] __libc_pread64
  [15] sun.nio.ch.FileDispatcherImpl.pread0
  [16] sun.nio.ch.FileDispatcherImpl.pread
  [17] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [18] sun.nio.ch.IOUtil.read
  [19] sun.nio.ch.IOUtil.read
  [20] sun.nio.ch.FileChannelImpl.readInternal
  [21] sun.nio.ch.FileChannelImpl.read
  [22] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [23] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [24] jdk.nio.zipfs.ZipFileSystem$2.fill
  [25] java.util.zip.InflaterInputStream.read
  [26] java.io.InputStream.readNBytes
  [27] java.io.InputStream.readAllBytes
  [28] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [29] jdk.nio.zipfs.ZipPath.newByteChannel
  [30] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [31] java.nio.file.Files.newByteChannel
  [32] java.nio.file.Files.newByteChannel
  [33] java.nio.file.Files.readAllBytes
  [34] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [35] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25648.apply
  [36] cats.effect.IOFiber.$anonfun$8
  [37] cats.effect.IOFiber$$Lambda$200.0x0000000800dadd60.apply
  [38] cats.effect.unsafe.WorkerThread.blockOn
  [39] scala.concurrent.package$.blocking
  [40] cats.effect.IOFiber.runLoop
  [41] cats.effect.IOFiber.execR
  [42] cats.effect.IOFiber.run
  [43] cats.effect.unsafe.WorkerThread.run

--- 371183631 ns (0.03%), 37 samples
  [ 0] dbuf_find?[zfs]_[k]
  [ 1] dbuf_hold_impl?[zfs]_[k]
  [ 2] dbuf_hold_level?[zfs]_[k]
  [ 3] dbuf_hold?[zfs]_[k]
  [ 4] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 5] dmu_read_uio_dnode?[zfs]_[k]
  [ 6] dmu_read_uio_dbuf?[zfs]_[k]
  [ 7] mappedread?[zfs]_[k]
  [ 8] zfs_read?[zfs]_[k]
  [ 9] zpl_iter_read?[zfs]_[k]
  [10] new_sync_read_[k]
  [11] vfs_read_[k]
  [12] __x64_sys_pread64_[k]
  [13] do_syscall_64_[k]
  [14] entry_SYSCALL_64_after_hwframe_[k]
  [15] __libc_pread64
  [16] sun.nio.ch.FileDispatcherImpl.pread0
  [17] sun.nio.ch.FileDispatcherImpl.pread
  [18] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [19] sun.nio.ch.IOUtil.read
  [20] sun.nio.ch.IOUtil.read
  [21] sun.nio.ch.FileChannelImpl.readInternal
  [22] sun.nio.ch.FileChannelImpl.read
  [23] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [24] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [25] jdk.nio.zipfs.ZipFileSystem$2.fill
  [26] java.util.zip.InflaterInputStream.read
  [27] java.io.InputStream.readNBytes
  [28] java.io.InputStream.readAllBytes
  [29] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [30] jdk.nio.zipfs.ZipPath.newByteChannel
  [31] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [32] java.nio.file.Files.newByteChannel
  [33] java.nio.file.Files.newByteChannel
  [34] java.nio.file.Files.readAllBytes
  [35] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [36] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25648.apply
  [37] cats.effect.IOFiber.$anonfun$8
  [38] cats.effect.IOFiber$$Lambda$200.0x0000000800dadd60.apply
  [39] cats.effect.unsafe.WorkerThread.blockOn
  [40] scala.concurrent.package$.blocking
  [41] cats.effect.IOFiber.runLoop
  [42] cats.effect.IOFiber.execR
  [43] cats.effect.IOFiber.run
  [44] cats.effect.unsafe.WorkerThread.run

--- 371112342 ns (0.03%), 37 samples
  [ 0] java.util.HashMap.getNode
  [ 1] java.util.LinkedHashMap.get
  [ 2] jdk.nio.zipfs.ZipFileSystem.getInode
  [ 3] jdk.nio.zipfs.ZipFileSystem.getEntry
  [ 4] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [ 5] jdk.nio.zipfs.ZipPath.newByteChannel
  [ 6] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [ 7] java.nio.file.Files.newByteChannel
  [ 8] java.nio.file.Files.newByteChannel
  [ 9] java.nio.file.Files.readAllBytes
  [10] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [11] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25648.apply
  [12] cats.effect.IOFiber.$anonfun$8
  [13] cats.effect.IOFiber$$Lambda$200.0x0000000800dadd60.apply
  [14] cats.effect.unsafe.WorkerThread.blockOn
  [15] scala.concurrent.package$.blocking
  [16] cats.effect.IOFiber.runLoop
  [17] cats.effect.IOFiber.execR
  [18] cats.effect.IOFiber.run
  [19] cats.effect.unsafe.WorkerThread.run

--- 371075833 ns (0.03%), 37 samples
  [ 0] _raw_spin_unlock_irqrestore_[k]
  [ 1] hrtimer_start_range_ns_[k]
  [ 2] hrtimer_sleeper_start_expires_[k]
  [ 3] futex_wait_queue_[k]
  [ 4] futex_wait_[k]
  [ 5] do_futex_[k]
  [ 6] __x64_sys_futex_[k]
  [ 7] do_syscall_64_[k]
  [ 8] entry_SYSCALL_64_after_hwframe_[k]
  [ 9] __futex_abstimed_wait_cancelable64
  [10] [unknown]
  [11] jdk.internal.misc.Unsafe.park
  [12] java.util.concurrent.locks.LockSupport.parkNanos
  [13] java.util.concurrent.LinkedTransferQueue.awaitMatch
  [14] java.util.concurrent.LinkedTransferQueue.xfer
  [15] java.util.concurrent.LinkedTransferQueue.poll
  [16] cats.effect.unsafe.WorkerThread.run

--- 370633309 ns (0.03%), 36 samples
  [ 0] __get_user_nocheck_4_[k]
  [ 1] futex_wait_setup_[k]
  [ 2] futex_wait_[k]
  [ 3] do_futex_[k]
  [ 4] __x64_sys_futex_[k]
  [ 5] do_syscall_64_[k]
  [ 6] entry_SYSCALL_64_after_hwframe_[k]
  [ 7] __futex_abstimed_wait_cancelable64
  [ 8] [unknown]
  [ 9] jdk.internal.misc.Unsafe.park
  [10] java.util.concurrent.locks.LockSupport.parkNanos
  [11] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos
  [12] java.util.concurrent.ArrayBlockingQueue.poll
  [13] cats.effect.IOPlatform.$anonfun$1
  [14] cats.effect.IOPlatform$$Lambda$192.0x0000000800dac530.apply
  [15] scala.concurrent.BlockContext$DefaultBlockContext$.blockOn
  [16] scala.concurrent.package$.blocking
  [17] cats.effect.IOPlatform.unsafeRunTimed
  [18] cats.effect.IOPlatform.unsafeRunSync
  [19] com.scalamandra.ZipBench.nioReadAllBytes
  [20] com.scalamandra.jmh_generated.ZipBench_nioReadAllBytes_jmhTest.nioReadAllBytes_thrpt_jmhStub
  [21] com.scalamandra.jmh_generated.ZipBench_nioReadAllBytes_jmhTest.nioReadAllBytes_Throughput
  [22] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [23] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [24] java.lang.reflect.Method.invoke
  [25] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [26] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [27] java.util.concurrent.FutureTask.run
  [28] java.util.concurrent.Executors$RunnableAdapter.call
  [29] java.util.concurrent.FutureTask.run
  [30] java.util.concurrent.ThreadPoolExecutor.runWorker
  [31] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [32] java.lang.Thread.run

--- 361253623 ns (0.03%), 36 samples
  [ 0] cats.effect.tracing.RingBuffer.push
  [ 1] cats.effect.IOFiber.pushTracingEvent
  [ 2] cats.effect.IOFiber.runLoop
  [ 3] cats.effect.IOFiber.execR
  [ 4] cats.effect.IOFiber.run
  [ 5] cats.effect.unsafe.WorkerThread.run

--- 361239226 ns (0.03%), 36 samples
  [ 0] strncpy_from_user_[k]
  [ 1] __do_sys_prctl_[k]
  [ 2] __x64_sys_prctl_[k]
  [ 3] do_syscall_64_[k]
  [ 4] entry_SYSCALL_64_after_hwframe_[k]
  [ 5] __GI___prctl
  [ 6] [unknown]
  [ 7] java.lang.Thread.setNativeName
  [ 8] java.lang.Thread.setName
  [ 9] cats.effect.unsafe.WorkerThread.blockOn
  [10] scala.concurrent.package$.blocking
  [11] cats.effect.IOFiber.runLoop
  [12] cats.effect.IOFiber.execR
  [13] cats.effect.IOFiber.run
  [14] cats.effect.unsafe.WorkerThread.run

--- 360820988 ns (0.03%), 36 samples
  [ 0] jni_ReleasePrimitiveArrayCritical
  [ 1] Java_java_util_zip_Inflater_inflateBytesBytes
  [ 2] java.util.zip.Inflater.inflateBytesBytes
  [ 3] java.util.zip.Inflater.inflate
  [ 4] java.util.zip.InflaterInputStream.read
  [ 5] java.io.InputStream.readNBytes
  [ 6] java.io.InputStream.readAllBytes
  [ 7] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [ 8] jdk.nio.zipfs.ZipPath.newByteChannel
  [ 9] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [10] java.nio.file.Files.newByteChannel
  [11] java.nio.file.Files.newByteChannel
  [12] java.nio.file.Files.readAllBytes
  [13] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [14] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25648.apply
  [15] cats.effect.IOFiber.$anonfun$8
  [16] cats.effect.IOFiber$$Lambda$200.0x0000000800dadd60.apply
  [17] cats.effect.unsafe.WorkerThread.blockOn
  [18] scala.concurrent.package$.blocking
  [19] cats.effect.IOFiber.runLoop
  [20] cats.effect.IOFiber.execR
  [21] cats.effect.IOFiber.run
  [22] cats.effect.unsafe.WorkerThread.run

--- 360772100 ns (0.03%), 36 samples
  [ 0] java.io.InputStream.readNBytes
  [ 1] java.io.InputStream.readAllBytes
  [ 2] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [ 3] jdk.nio.zipfs.ZipPath.newByteChannel
  [ 4] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [ 5] java.nio.file.Files.newByteChannel
  [ 6] java.nio.file.Files.newByteChannel
  [ 7] java.nio.file.Files.readAllBytes
  [ 8] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [ 9] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25648.apply
  [10] cats.effect.IOFiber.$anonfun$8
  [11] cats.effect.IOFiber$$Lambda$200.0x0000000800dadd60.apply
  [12] cats.effect.unsafe.WorkerThread.blockOn
  [13] scala.concurrent.package$.blocking
  [14] cats.effect.IOFiber.runLoop
  [15] cats.effect.IOFiber.execR
  [16] cats.effect.IOFiber.run
  [17] cats.effect.unsafe.WorkerThread.run

--- 360296942 ns (0.03%), 35 samples
  [ 0] __GI___pthread_enable_asynccancel
  [ 1] [unknown]
  [ 2] jdk.internal.misc.Unsafe.park
  [ 3] java.util.concurrent.locks.LockSupport.parkNanos
  [ 4] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos
  [ 5] java.util.concurrent.ArrayBlockingQueue.poll
  [ 6] cats.effect.IOPlatform.$anonfun$1
  [ 7] cats.effect.IOPlatform$$Lambda$192.0x0000000800dac530.apply
  [ 8] scala.concurrent.BlockContext$DefaultBlockContext$.blockOn
  [ 9] scala.concurrent.package$.blocking
  [10] cats.effect.IOPlatform.unsafeRunTimed
  [11] cats.effect.IOPlatform.unsafeRunSync
  [12] com.scalamandra.ZipBench.nioReadAllBytes
  [13] com.scalamandra.jmh_generated.ZipBench_nioReadAllBytes_jmhTest.nioReadAllBytes_thrpt_jmhStub
  [14] com.scalamandra.jmh_generated.ZipBench_nioReadAllBytes_jmhTest.nioReadAllBytes_Throughput
  [15] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [16] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [17] java.lang.reflect.Method.invoke
  [18] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [19] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [20] java.util.concurrent.FutureTask.run
  [21] java.util.concurrent.Executors$RunnableAdapter.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.ThreadPoolExecutor.runWorker
  [24] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [25] java.lang.Thread.run

--- 351190819 ns (0.02%), 35 samples
  [ 0] _IO_default_xsputn
  [ 1] java.lang.Thread.setNativeName
  [ 2] java.lang.Thread.setName
  [ 3] cats.effect.unsafe.WorkerThread.blockOn
  [ 4] scala.concurrent.package$.blocking
  [ 5] cats.effect.IOFiber.runLoop
  [ 6] cats.effect.IOFiber.execR
  [ 7] cats.effect.IOFiber.run
  [ 8] cats.effect.unsafe.WorkerThread.run

--- 351148087 ns (0.02%), 35 samples
  [ 0] dbuf_read?[zfs]_[k]
  [ 1] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 2] dmu_read_uio_dnode?[zfs]_[k]
  [ 3] dmu_read_uio_dbuf?[zfs]_[k]
  [ 4] mappedread?[zfs]_[k]
  [ 5] zfs_read?[zfs]_[k]
  [ 6] zpl_iter_read?[zfs]_[k]
  [ 7] new_sync_read_[k]
  [ 8] vfs_read_[k]
  [ 9] __x64_sys_pread64_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] __libc_pread64
  [13] sun.nio.ch.FileDispatcherImpl.pread0
  [14] sun.nio.ch.FileDispatcherImpl.pread
  [15] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [16] sun.nio.ch.IOUtil.read
  [17] sun.nio.ch.IOUtil.read
  [18] sun.nio.ch.FileChannelImpl.readInternal
  [19] sun.nio.ch.FileChannelImpl.read
  [20] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [21] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [22] jdk.nio.zipfs.ZipFileSystem$2.fill
  [23] java.util.zip.InflaterInputStream.read
  [24] java.io.InputStream.readNBytes
  [25] java.io.InputStream.readAllBytes
  [26] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [27] jdk.nio.zipfs.ZipPath.newByteChannel
  [28] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [29] java.nio.file.Files.newByteChannel
  [30] java.nio.file.Files.newByteChannel
  [31] java.nio.file.Files.readAllBytes
  [32] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [33] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25648.apply
  [34] cats.effect.IOFiber.$anonfun$8
  [35] cats.effect.IOFiber$$Lambda$200.0x0000000800dadd60.apply
  [36] cats.effect.unsafe.WorkerThread.blockOn
  [37] scala.concurrent.package$.blocking
  [38] cats.effect.IOFiber.runLoop
  [39] cats.effect.IOFiber.execR
  [40] cats.effect.IOFiber.run
  [41] cats.effect.unsafe.WorkerThread.run

--- 351083653 ns (0.02%), 35 samples
  [ 0] zio_wait_for_children?[zfs]_[k]
  [ 1] zio_ready?[zfs]_[k]
  [ 2] zio_wait?[zfs]_[k]
  [ 3] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 4] dmu_read_uio_dnode?[zfs]_[k]
  [ 5] dmu_read_uio_dbuf?[zfs]_[k]
  [ 6] mappedread?[zfs]_[k]
  [ 7] zfs_read?[zfs]_[k]
  [ 8] zpl_iter_read?[zfs]_[k]
  [ 9] new_sync_read_[k]
  [10] vfs_read_[k]
  [11] __x64_sys_pread64_[k]
  [12] do_syscall_64_[k]
  [13] entry_SYSCALL_64_after_hwframe_[k]
  [14] __libc_pread64
  [15] sun.nio.ch.FileDispatcherImpl.pread0
  [16] sun.nio.ch.FileDispatcherImpl.pread
  [17] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [18] sun.nio.ch.IOUtil.read
  [19] sun.nio.ch.IOUtil.read
  [20] sun.nio.ch.FileChannelImpl.readInternal
  [21] sun.nio.ch.FileChannelImpl.read
  [22] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [23] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [24] jdk.nio.zipfs.ZipFileSystem$2.fill
  [25] java.util.zip.InflaterInputStream.read
  [26] java.io.InputStream.readNBytes
  [27] java.io.InputStream.readAllBytes
  [28] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [29] jdk.nio.zipfs.ZipPath.newByteChannel
  [30] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [31] java.nio.file.Files.newByteChannel
  [32] java.nio.file.Files.newByteChannel
  [33] java.nio.file.Files.readAllBytes
  [34] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [35] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25648.apply
  [36] cats.effect.IOFiber.$anonfun$8
  [37] cats.effect.IOFiber$$Lambda$200.0x0000000800dadd60.apply
  [38] cats.effect.unsafe.WorkerThread.blockOn
  [39] scala.concurrent.package$.blocking
  [40] cats.effect.IOFiber.runLoop
  [41] cats.effect.IOFiber.execR
  [42] cats.effect.IOFiber.run
  [43] cats.effect.unsafe.WorkerThread.run

--- 351055357 ns (0.02%), 35 samples
  [ 0] kmem_cache_free_[k]
  [ 1] spl_kmem_cache_free?[spl]_[k]
  [ 2] zio_destroy?[zfs]_[k]
  [ 3] zio_wait?[zfs]_[k]
  [ 4] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 5] dmu_read_uio_dnode?[zfs]_[k]
  [ 6] dmu_read_uio_dbuf?[zfs]_[k]
  [ 7] mappedread?[zfs]_[k]
  [ 8] zfs_read?[zfs]_[k]
  [ 9] zpl_iter_read?[zfs]_[k]
  [10] new_sync_read_[k]
  [11] vfs_read_[k]
  [12] __x64_sys_pread64_[k]
  [13] do_syscall_64_[k]
  [14] entry_SYSCALL_64_after_hwframe_[k]
  [15] __libc_pread64
  [16] sun.nio.ch.FileDispatcherImpl.pread0
  [17] sun.nio.ch.FileDispatcherImpl.pread
  [18] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [19] sun.nio.ch.IOUtil.read
  [20] sun.nio.ch.IOUtil.read
  [21] sun.nio.ch.FileChannelImpl.readInternal
  [22] sun.nio.ch.FileChannelImpl.read
  [23] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [24] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [25] jdk.nio.zipfs.ZipFileSystem$2.fill
  [26] java.util.zip.InflaterInputStream.read
  [27] java.io.InputStream.readNBytes
  [28] java.io.InputStream.readAllBytes
  [29] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [30] jdk.nio.zipfs.ZipPath.newByteChannel
  [31] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [32] java.nio.file.Files.newByteChannel
  [33] java.nio.file.Files.newByteChannel
  [34] java.nio.file.Files.readAllBytes
  [35] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [36] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25648.apply
  [37] cats.effect.IOFiber.$anonfun$8
  [38] cats.effect.IOFiber$$Lambda$200.0x0000000800dadd60.apply
  [39] cats.effect.unsafe.WorkerThread.blockOn
  [40] scala.concurrent.package$.blocking
  [41] cats.effect.IOFiber.runLoop
  [42] cats.effect.IOFiber.execR
  [43] cats.effect.IOFiber.run
  [44] cats.effect.unsafe.WorkerThread.run

--- 350220067 ns (0.02%), 34 samples
  [ 0] futex_wake_[k]
  [ 1] do_futex_[k]
  [ 2] __x64_sys_futex_[k]
  [ 3] do_syscall_64_[k]
  [ 4] entry_SYSCALL_64_after_hwframe_[k]
  [ 5] pthread_cond_signal@@GLIBC_2.3.2
  [ 6] jdk.internal.misc.Unsafe.unpark
  [ 7] java.util.concurrent.locks.LockSupport.unpark
  [ 8] cats.effect.unsafe.WorkStealingThreadPool.notifyParked
  [ 9] cats.effect.unsafe.WorkStealingThreadPool.scheduleExternal
  [10] cats.effect.unsafe.WorkStealingThreadPool.execute
  [11] cats.effect.IO.unsafeRunFiber
  [12] cats.effect.IO.unsafeRunAsync
  [13] cats.effect.IOPlatform.unsafeRunTimed
  [14] cats.effect.IOPlatform.unsafeRunSync
  [15] com.scalamandra.ZipBench.nioReadAllBytes
  [16] com.scalamandra.jmh_generated.ZipBench_nioReadAllBytes_jmhTest.nioReadAllBytes_thrpt_jmhStub
  [17] com.scalamandra.jmh_generated.ZipBench_nioReadAllBytes_jmhTest.nioReadAllBytes_Throughput
  [18] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [19] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [20] java.lang.reflect.Method.invoke
  [21] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [22] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.Executors$RunnableAdapter.call
  [25] java.util.concurrent.FutureTask.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.run

--- 349841222 ns (0.02%), 34 samples
  [ 0] pthread_cond_signal@@GLIBC_2.3.2
  [ 1] jdk.internal.misc.Unsafe.unpark
  [ 2] java.util.concurrent.locks.LockSupport.unpark
  [ 3] cats.effect.unsafe.WorkStealingThreadPool.notifyParked
  [ 4] cats.effect.unsafe.WorkStealingThreadPool.scheduleExternal
  [ 5] cats.effect.unsafe.WorkStealingThreadPool.execute
  [ 6] cats.effect.IO.unsafeRunFiber
  [ 7] cats.effect.IO.unsafeRunAsync
  [ 8] cats.effect.IOPlatform.unsafeRunTimed
  [ 9] cats.effect.IOPlatform.unsafeRunSync
  [10] com.scalamandra.ZipBench.nioReadAllBytes
  [11] com.scalamandra.jmh_generated.ZipBench_nioReadAllBytes_jmhTest.nioReadAllBytes_thrpt_jmhStub
  [12] com.scalamandra.jmh_generated.ZipBench_nioReadAllBytes_jmhTest.nioReadAllBytes_Throughput
  [13] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [14] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [15] java.lang.reflect.Method.invoke
  [16] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [17] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [18] java.util.concurrent.FutureTask.run
  [19] java.util.concurrent.Executors$RunnableAdapter.call
  [20] java.util.concurrent.FutureTask.run
  [21] java.util.concurrent.ThreadPoolExecutor.runWorker
  [22] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [23] java.lang.Thread.run

--- 342818569 ns (0.02%), 34 samples
  [ 0] G1ScanHRForRegionClosure::scan_heap_roots(HeapRegion*)
  [ 1] G1RemSet::scan_heap_roots(G1ParScanThreadState*, unsigned int, G1GCPhaseTimes::GCParPhases, G1GCPhaseTimes::GCParPhases, bool)
  [ 2] G1EvacuateRegionsTask::scan_roots(G1ParScanThreadState*, unsigned int)
  [ 3] G1EvacuateRegionsBaseTask::work(unsigned int)
  [ 4] GangWorker::loop()
  [ 5] GangWorker::run()
  [ 6] Thread::call_run()
  [ 7] thread_native_entry(Thread*)
  [ 8] start_thread

--- 341368908 ns (0.02%), 34 samples
  [ 0] Parker::park(bool, long)
  [ 1] Unsafe_Park
  [ 2] jdk.internal.misc.Unsafe.park
  [ 3] java.util.concurrent.locks.LockSupport.park
  [ 4] cats.effect.unsafe.WorkerThread.parkLoop$1
  [ 5] cats.effect.unsafe.WorkerThread.run

--- 341223737 ns (0.02%), 34 samples
  [ 0] java.util.concurrent.ConcurrentLinkedQueue.poll
  [ 1] cats.effect.unsafe.ScalQueue.poll
  [ 2] cats.effect.unsafe.WorkerThread.run

--- 341217998 ns (0.02%), 34 samples
  [ 0] kmem_cache_free_[k]
  [ 1] spl_kmem_cache_free?[spl]_[k]
  [ 2] zio_destroy?[zfs]_[k]
  [ 3] zio_wait?[zfs]_[k]
  [ 4] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 5] dmu_read_uio_dnode?[zfs]_[k]
  [ 6] dmu_read_uio_dbuf?[zfs]_[k]
  [ 7] mappedread?[zfs]_[k]
  [ 8] zfs_read?[zfs]_[k]
  [ 9] zpl_iter_read?[zfs]_[k]
  [10] new_sync_read_[k]
  [11] vfs_read_[k]
  [12] __x64_sys_pread64_[k]
  [13] do_syscall_64_[k]
  [14] entry_SYSCALL_64_after_hwframe_[k]
  [15] __libc_pread64
  [16] sun.nio.ch.FileDispatcherImpl.pread0
  [17] sun.nio.ch.FileDispatcherImpl.pread
  [18] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [19] sun.nio.ch.IOUtil.read
  [20] sun.nio.ch.IOUtil.read
  [21] sun.nio.ch.FileChannelImpl.readInternal
  [22] sun.nio.ch.FileChannelImpl.read
  [23] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [24] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [25] jdk.nio.zipfs.ZipFileSystem$Entry.readLocEXTT
  [26] jdk.nio.zipfs.ZipFileSystem$Entry.readExtra
  [27] jdk.nio.zipfs.ZipFileSystem$Entry.readCEN
  [28] jdk.nio.zipfs.ZipFileSystem$Entry.<init>
  [29] jdk.nio.zipfs.ZipFileSystem.getEntry
  [30] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [31] jdk.nio.zipfs.ZipPath.newByteChannel
  [32] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [33] java.nio.file.Files.newByteChannel
  [34] java.nio.file.Files.newByteChannel
  [35] java.nio.file.Files.readAllBytes
  [36] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [37] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25648.apply
  [38] cats.effect.IOFiber.$anonfun$8
  [39] cats.effect.IOFiber$$Lambda$200.0x0000000800dadd60.apply
  [40] cats.effect.unsafe.WorkerThread.blockOn
  [41] scala.concurrent.package$.blocking
  [42] cats.effect.IOFiber.runLoop
  [43] cats.effect.IOFiber.execR
  [44] cats.effect.IOFiber.run
  [45] cats.effect.unsafe.WorkerThread.run

--- 341092589 ns (0.02%), 34 samples
  [ 0] ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**)
  [ 1] Unsafe_Unpark
  [ 2] jdk.internal.misc.Unsafe.unpark
  [ 3] java.util.concurrent.locks.LockSupport.unpark
  [ 4] java.util.concurrent.LinkedTransferQueue$Node.tryMatch
  [ 5] java.util.concurrent.LinkedTransferQueue.xfer
  [ 6] java.util.concurrent.LinkedTransferQueue.transfer
  [ 7] cats.effect.unsafe.WorkerThread.blockOn
  [ 8] scala.concurrent.package$.blocking
  [ 9] cats.effect.IOFiber.runLoop
  [10] cats.effect.IOFiber.execR
  [11] cats.effect.IOFiber.run
  [12] cats.effect.unsafe.WorkerThread.run

--- 341083481 ns (0.02%), 34 samples
  [ 0] read_tsc_[k]
  [ 1] gethrtime?[zfs]_[k]
  [ 2] zio_wait?[zfs]_[k]
  [ 3] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 4] dmu_read_uio_dnode?[zfs]_[k]
  [ 5] dmu_read_uio_dbuf?[zfs]_[k]
  [ 6] mappedread?[zfs]_[k]
  [ 7] zfs_read?[zfs]_[k]
  [ 8] zpl_iter_read?[zfs]_[k]
  [ 9] new_sync_read_[k]
  [10] vfs_read_[k]
  [11] __x64_sys_pread64_[k]
  [12] do_syscall_64_[k]
  [13] entry_SYSCALL_64_after_hwframe_[k]
  [14] __libc_pread64
  [15] sun.nio.ch.FileDispatcherImpl.pread0
  [16] sun.nio.ch.FileDispatcherImpl.pread
  [17] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [18] sun.nio.ch.IOUtil.read
  [19] sun.nio.ch.IOUtil.read
  [20] sun.nio.ch.FileChannelImpl.readInternal
  [21] sun.nio.ch.FileChannelImpl.read
  [22] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [23] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [24] jdk.nio.zipfs.ZipFileSystem$2.fill
  [25] java.util.zip.InflaterInputStream.read
  [26] java.io.InputStream.readNBytes
  [27] java.io.InputStream.readAllBytes
  [28] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [29] jdk.nio.zipfs.ZipPath.newByteChannel
  [30] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [31] java.nio.file.Files.newByteChannel
  [32] java.nio.file.Files.newByteChannel
  [33] java.nio.file.Files.readAllBytes
  [34] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [35] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25648.apply
  [36] cats.effect.IOFiber.$anonfun$8
  [37] cats.effect.IOFiber$$Lambda$200.0x0000000800dadd60.apply
  [38] cats.effect.unsafe.WorkerThread.blockOn
  [39] scala.concurrent.package$.blocking
  [40] cats.effect.IOFiber.runLoop
  [41] cats.effect.IOFiber.execR
  [42] cats.effect.IOFiber.run
  [43] cats.effect.unsafe.WorkerThread.run

--- 341055500 ns (0.02%), 34 samples
  [ 0] sun.nio.ch.FileChannelImpl.read
  [ 1] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [ 2] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [ 3] jdk.nio.zipfs.ZipFileSystem$Entry.readLocEXTT
  [ 4] jdk.nio.zipfs.ZipFileSystem$Entry.readExtra
  [ 5] jdk.nio.zipfs.ZipFileSystem$Entry.readCEN
  [ 6] jdk.nio.zipfs.ZipFileSystem$Entry.<init>
  [ 7] jdk.nio.zipfs.ZipFileSystem.getEntry
  [ 8] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [ 9] jdk.nio.zipfs.ZipPath.newByteChannel
  [10] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [11] java.nio.file.Files.newByteChannel
  [12] java.nio.file.Files.newByteChannel
  [13] java.nio.file.Files.readAllBytes
  [14] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [15] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25648.apply
  [16] cats.effect.IOFiber.$anonfun$8
  [17] cats.effect.IOFiber$$Lambda$200.0x0000000800dadd60.apply
  [18] cats.effect.unsafe.WorkerThread.blockOn
  [19] scala.concurrent.package$.blocking
  [20] cats.effect.IOFiber.runLoop
  [21] cats.effect.IOFiber.execR
  [22] cats.effect.IOFiber.run
  [23] cats.effect.unsafe.WorkerThread.run

--- 340978784 ns (0.02%), 34 samples
  [ 0] mutex_unlock_[k]
  [ 1] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 2] dmu_read_uio_dnode?[zfs]_[k]
  [ 3] dmu_read_uio_dbuf?[zfs]_[k]
  [ 4] mappedread?[zfs]_[k]
  [ 5] zfs_read?[zfs]_[k]
  [ 6] zpl_iter_read?[zfs]_[k]
  [ 7] new_sync_read_[k]
  [ 8] vfs_read_[k]
  [ 9] __x64_sys_pread64_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] __libc_pread64
  [13] sun.nio.ch.FileDispatcherImpl.pread0
  [14] sun.nio.ch.FileDispatcherImpl.pread
  [15] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [16] sun.nio.ch.IOUtil.read
  [17] sun.nio.ch.IOUtil.read
  [18] sun.nio.ch.FileChannelImpl.readInternal
  [19] sun.nio.ch.FileChannelImpl.read
  [20] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [21] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [22] jdk.nio.zipfs.ZipFileSystem$2.fill
  [23] java.util.zip.InflaterInputStream.read
  [24] java.io.InputStream.readNBytes
  [25] java.io.InputStream.readAllBytes
  [26] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [27] jdk.nio.zipfs.ZipPath.newByteChannel
  [28] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [29] java.nio.file.Files.newByteChannel
  [30] java.nio.file.Files.newByteChannel
  [31] java.nio.file.Files.readAllBytes
  [32] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [33] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25648.apply
  [34] cats.effect.IOFiber.$anonfun$8
  [35] cats.effect.IOFiber$$Lambda$200.0x0000000800dadd60.apply
  [36] cats.effect.unsafe.WorkerThread.blockOn
  [37] scala.concurrent.package$.blocking
  [38] cats.effect.IOFiber.runLoop
  [39] cats.effect.IOFiber.execR
  [40] cats.effect.IOFiber.run
  [41] cats.effect.unsafe.WorkerThread.run

--- 340957444 ns (0.02%), 34 samples
  [ 0] zfs_read?[zfs]_[k]
  [ 1] zpl_iter_read?[zfs]_[k]
  [ 2] new_sync_read_[k]
  [ 3] vfs_read_[k]
  [ 4] __x64_sys_pread64_[k]
  [ 5] do_syscall_64_[k]
  [ 6] entry_SYSCALL_64_after_hwframe_[k]
  [ 7] __libc_pread64
  [ 8] sun.nio.ch.FileDispatcherImpl.pread0
  [ 9] sun.nio.ch.FileDispatcherImpl.pread
  [10] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [11] sun.nio.ch.IOUtil.read
  [12] sun.nio.ch.IOUtil.read
  [13] sun.nio.ch.FileChannelImpl.readInternal
  [14] sun.nio.ch.FileChannelImpl.read
  [15] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [16] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [17] jdk.nio.zipfs.ZipFileSystem$Entry.readLocEXTT
  [18] jdk.nio.zipfs.ZipFileSystem$Entry.readExtra
  [19] jdk.nio.zipfs.ZipFileSystem$Entry.readCEN
  [20] jdk.nio.zipfs.ZipFileSystem$Entry.<init>
  [21] jdk.nio.zipfs.ZipFileSystem.getEntry
  [22] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [23] jdk.nio.zipfs.ZipPath.newByteChannel
  [24] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [25] java.nio.file.Files.newByteChannel
  [26] java.nio.file.Files.newByteChannel
  [27] java.nio.file.Files.readAllBytes
  [28] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [29] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25648.apply
  [30] cats.effect.IOFiber.$anonfun$8
  [31] cats.effect.IOFiber$$Lambda$200.0x0000000800dadd60.apply
  [32] cats.effect.unsafe.WorkerThread.blockOn
  [33] scala.concurrent.package$.blocking
  [34] cats.effect.IOFiber.runLoop
  [35] cats.effect.IOFiber.execR
  [36] cats.effect.IOFiber.run
  [37] cats.effect.unsafe.WorkerThread.run

--- 340944384 ns (0.02%), 34 samples
  [ 0] dmu_read_uio_dnode?[zfs]_[k]
  [ 1] dmu_read_uio_dbuf?[zfs]_[k]
  [ 2] mappedread?[zfs]_[k]
  [ 3] zfs_read?[zfs]_[k]
  [ 4] zpl_iter_read?[zfs]_[k]
  [ 5] new_sync_read_[k]
  [ 6] vfs_read_[k]
  [ 7] __x64_sys_pread64_[k]
  [ 8] do_syscall_64_[k]
  [ 9] entry_SYSCALL_64_after_hwframe_[k]
  [10] __libc_pread64
  [11] sun.nio.ch.FileDispatcherImpl.pread0
  [12] sun.nio.ch.FileDispatcherImpl.pread
  [13] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [14] sun.nio.ch.IOUtil.read
  [15] sun.nio.ch.IOUtil.read
  [16] sun.nio.ch.FileChannelImpl.readInternal
  [17] sun.nio.ch.FileChannelImpl.read
  [18] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [19] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [20] jdk.nio.zipfs.ZipFileSystem$2.fill
  [21] java.util.zip.InflaterInputStream.read
  [22] java.io.InputStream.readNBytes
  [23] java.io.InputStream.readAllBytes
  [24] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [25] jdk.nio.zipfs.ZipPath.newByteChannel
  [26] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [27] java.nio.file.Files.newByteChannel
  [28] java.nio.file.Files.newByteChannel
  [29] java.nio.file.Files.readAllBytes
  [30] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [31] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25648.apply
  [32] cats.effect.IOFiber.$anonfun$8
  [33] cats.effect.IOFiber$$Lambda$200.0x0000000800dadd60.apply
  [34] cats.effect.unsafe.WorkerThread.blockOn
  [35] scala.concurrent.package$.blocking
  [36] cats.effect.IOFiber.runLoop
  [37] cats.effect.IOFiber.execR
  [38] cats.effect.IOFiber.run
  [39] cats.effect.unsafe.WorkerThread.run

--- 331111839 ns (0.02%), 33 samples
  [ 0] JVM_SetNativeThreadName
  [ 1] java.lang.Thread.setNativeName
  [ 2] java.lang.Thread.setName
  [ 3] cats.effect.unsafe.WorkerThread.init
  [ 4] cats.effect.unsafe.WorkerThread.run

--- 331039068 ns (0.02%), 33 samples
  [ 0] java.lang.StringBuilder.toString
  [ 1] cats.effect.unsafe.WorkerThread.blockOn
  [ 2] scala.concurrent.package$.blocking
  [ 3] cats.effect.IOFiber.runLoop
  [ 4] cats.effect.IOFiber.execR
  [ 5] cats.effect.IOFiber.run
  [ 6] cats.effect.unsafe.WorkerThread.run

--- 331033902 ns (0.02%), 33 samples
  [ 0] syscall_enter_from_user_mode_[k]
  [ 1] do_syscall_64_[k]
  [ 2] entry_SYSCALL_64_after_hwframe_[k]
  [ 3] __libc_pread64
  [ 4] sun.nio.ch.FileDispatcherImpl.pread0
  [ 5] sun.nio.ch.FileDispatcherImpl.pread
  [ 6] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [ 7] sun.nio.ch.IOUtil.read
  [ 8] sun.nio.ch.IOUtil.read
  [ 9] sun.nio.ch.FileChannelImpl.readInternal
  [10] sun.nio.ch.FileChannelImpl.read
  [11] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [12] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [13] jdk.nio.zipfs.ZipFileSystem$Entry.readLocEXTT
  [14] jdk.nio.zipfs.ZipFileSystem$Entry.readExtra
  [15] jdk.nio.zipfs.ZipFileSystem$Entry.readCEN
  [16] jdk.nio.zipfs.ZipFileSystem$Entry.<init>
  [17] jdk.nio.zipfs.ZipFileSystem.getEntry
  [18] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [19] jdk.nio.zipfs.ZipPath.newByteChannel
  [20] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [21] java.nio.file.Files.newByteChannel
  [22] java.nio.file.Files.newByteChannel
  [23] java.nio.file.Files.readAllBytes
  [24] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [25] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25648.apply
  [26] cats.effect.IOFiber.$anonfun$8
  [27] cats.effect.IOFiber$$Lambda$200.0x0000000800dadd60.apply
  [28] cats.effect.unsafe.WorkerThread.blockOn
  [29] scala.concurrent.package$.blocking
  [30] cats.effect.IOFiber.runLoop
  [31] cats.effect.IOFiber.execR
  [32] cats.effect.IOFiber.run
  [33] cats.effect.unsafe.WorkerThread.run

--- 331010720 ns (0.02%), 33 samples
  [ 0] mutex_unlock_[k]
  [ 1] zio_wait?[zfs]_[k]
  [ 2] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 3] dmu_read_uio_dnode?[zfs]_[k]
  [ 4] dmu_read_uio_dbuf?[zfs]_[k]
  [ 5] mappedread?[zfs]_[k]
  [ 6] zfs_read?[zfs]_[k]
  [ 7] zpl_iter_read?[zfs]_[k]
  [ 8] new_sync_read_[k]
  [ 9] vfs_read_[k]
  [10] __x64_sys_pread64_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] __libc_pread64
  [14] sun.nio.ch.FileDispatcherImpl.pread0
  [15] sun.nio.ch.FileDispatcherImpl.pread
  [16] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [17] sun.nio.ch.IOUtil.read
  [18] sun.nio.ch.IOUtil.read
  [19] sun.nio.ch.FileChannelImpl.readInternal
  [20] sun.nio.ch.FileChannelImpl.read
  [21] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [22] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [23] jdk.nio.zipfs.ZipFileSystem$2.fill
  [24] java.util.zip.InflaterInputStream.read
  [25] java.io.InputStream.readNBytes
  [26] java.io.InputStream.readAllBytes
  [27] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [28] jdk.nio.zipfs.ZipPath.newByteChannel
  [29] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [30] java.nio.file.Files.newByteChannel
  [31] java.nio.file.Files.newByteChannel
  [32] java.nio.file.Files.readAllBytes
  [33] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [34] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25648.apply
  [35] cats.effect.IOFiber.$anonfun$8
  [36] cats.effect.IOFiber$$Lambda$200.0x0000000800dadd60.apply
  [37] cats.effect.unsafe.WorkerThread.blockOn
  [38] scala.concurrent.package$.blocking
  [39] cats.effect.IOFiber.runLoop
  [40] cats.effect.IOFiber.execR
  [41] cats.effect.IOFiber.run
  [42] cats.effect.unsafe.WorkerThread.run

--- 330970488 ns (0.02%), 33 samples
  [ 0] _copy_to_iter_[k]
  [ 1] zfs_uiomove_iter?[zfs]_[k]
  [ 2] zfs_uiomove?[zfs]_[k]
  [ 3] dmu_read_uio_dnode?[zfs]_[k]
  [ 4] dmu_read_uio_dbuf?[zfs]_[k]
  [ 5] mappedread?[zfs]_[k]
  [ 6] zfs_read?[zfs]_[k]
  [ 7] zpl_iter_read?[zfs]_[k]
  [ 8] new_sync_read_[k]
  [ 9] vfs_read_[k]
  [10] __x64_sys_pread64_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] __libc_pread64
  [14] sun.nio.ch.FileDispatcherImpl.pread0
  [15] sun.nio.ch.FileDispatcherImpl.pread
  [16] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [17] sun.nio.ch.IOUtil.read
  [18] sun.nio.ch.IOUtil.read
  [19] sun.nio.ch.FileChannelImpl.readInternal
  [20] sun.nio.ch.FileChannelImpl.read
  [21] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [22] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [23] jdk.nio.zipfs.ZipFileSystem$2.fill
  [24] java.util.zip.InflaterInputStream.read
  [25] java.io.InputStream.readNBytes
  [26] java.io.InputStream.readAllBytes
  [27] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [28] jdk.nio.zipfs.ZipPath.newByteChannel
  [29] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [30] java.nio.file.Files.newByteChannel
  [31] java.nio.file.Files.newByteChannel
  [32] java.nio.file.Files.readAllBytes
  [33] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [34] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25648.apply
  [35] cats.effect.IOFiber.$anonfun$8
  [36] cats.effect.IOFiber$$Lambda$200.0x0000000800dadd60.apply
  [37] cats.effect.unsafe.WorkerThread.blockOn
  [38] scala.concurrent.package$.blocking
  [39] cats.effect.IOFiber.runLoop
  [40] cats.effect.IOFiber.execR
  [41] cats.effect.IOFiber.run
  [42] cats.effect.unsafe.WorkerThread.run

--- 321096993 ns (0.02%), 32 samples
  [ 0] down_read_[k]
  [ 1] dbuf_find?[zfs]_[k]
  [ 2] dbuf_hold_impl?[zfs]_[k]
  [ 3] dbuf_hold_level?[zfs]_[k]
  [ 4] dbuf_hold?[zfs]_[k]
  [ 5] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 6] dmu_read_uio_dnode?[zfs]_[k]
  [ 7] dmu_read_uio_dbuf?[zfs]_[k]
  [ 8] mappedread?[zfs]_[k]
  [ 9] zfs_read?[zfs]_[k]
  [10] zpl_iter_read?[zfs]_[k]
  [11] new_sync_read_[k]
  [12] vfs_read_[k]
  [13] __x64_sys_pread64_[k]
  [14] do_syscall_64_[k]
  [15] entry_SYSCALL_64_after_hwframe_[k]
  [16] __libc_pread64
  [17] sun.nio.ch.FileDispatcherImpl.pread0
  [18] sun.nio.ch.FileDispatcherImpl.pread
  [19] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [20] sun.nio.ch.IOUtil.read
  [21] sun.nio.ch.IOUtil.read
  [22] sun.nio.ch.FileChannelImpl.readInternal
  [23] sun.nio.ch.FileChannelImpl.read
  [24] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [25] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [26] jdk.nio.zipfs.ZipFileSystem$2.fill
  [27] java.util.zip.InflaterInputStream.read
  [28] java.io.InputStream.readNBytes
  [29] java.io.InputStream.readAllBytes
  [30] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [31] jdk.nio.zipfs.ZipPath.newByteChannel
  [32] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [33] java.nio.file.Files.newByteChannel
  [34] java.nio.file.Files.newByteChannel
  [35] java.nio.file.Files.readAllBytes
  [36] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [37] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25648.apply
  [38] cats.effect.IOFiber.$anonfun$8
  [39] cats.effect.IOFiber$$Lambda$200.0x0000000800dadd60.apply
  [40] cats.effect.unsafe.WorkerThread.blockOn
  [41] scala.concurrent.package$.blocking
  [42] cats.effect.IOFiber.runLoop
  [43] cats.effect.IOFiber.execR
  [44] cats.effect.IOFiber.run
  [45] cats.effect.unsafe.WorkerThread.run

--- 321010795 ns (0.02%), 32 samples
  [ 0] Unsafe_Park
  [ 1] jdk.internal.misc.Unsafe.park
  [ 2] java.util.concurrent.locks.LockSupport.park
  [ 3] cats.effect.unsafe.WorkerThread.parkLoop$1
  [ 4] cats.effect.unsafe.WorkerThread.run

--- 320864823 ns (0.02%), 32 samples
  [ 0] mutex_unlock_[k]
  [ 1] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 2] dmu_read_uio_dnode?[zfs]_[k]
  [ 3] dmu_read_uio_dbuf?[zfs]_[k]
  [ 4] mappedread?[zfs]_[k]
  [ 5] zfs_read?[zfs]_[k]
  [ 6] zpl_iter_read?[zfs]_[k]
  [ 7] new_sync_read_[k]
  [ 8] vfs_read_[k]
  [ 9] __x64_sys_pread64_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] __libc_pread64
  [13] sun.nio.ch.FileDispatcherImpl.pread0
  [14] sun.nio.ch.FileDispatcherImpl.pread
  [15] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [16] sun.nio.ch.IOUtil.read
  [17] sun.nio.ch.IOUtil.read
  [18] sun.nio.ch.FileChannelImpl.readInternal
  [19] sun.nio.ch.FileChannelImpl.read
  [20] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [21] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [22] jdk.nio.zipfs.ZipFileSystem$2.fill
  [23] java.util.zip.InflaterInputStream.read
  [24] java.io.InputStream.readNBytes
  [25] java.io.InputStream.readAllBytes
  [26] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [27] jdk.nio.zipfs.ZipPath.newByteChannel
  [28] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [29] java.nio.file.Files.newByteChannel
  [30] java.nio.file.Files.newByteChannel
  [31] java.nio.file.Files.readAllBytes
  [32] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [33] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25648.apply
  [34] cats.effect.IOFiber.$anonfun$8
  [35] cats.effect.IOFiber$$Lambda$200.0x0000000800dadd60.apply
  [36] cats.effect.unsafe.WorkerThread.blockOn
  [37] scala.concurrent.package$.blocking
  [38] cats.effect.IOFiber.runLoop
  [39] cats.effect.IOFiber.execR
  [40] cats.effect.IOFiber.run
  [41] cats.effect.unsafe.WorkerThread.run

--- 320821530 ns (0.02%), 32 samples
  [ 0] __GI___prctl
  [ 1] [unknown]
  [ 2] java.lang.Thread.setNativeName
  [ 3] java.lang.Thread.setName
  [ 4] cats.effect.unsafe.WorkerThread.blockOn
  [ 5] scala.concurrent.package$.blocking
  [ 6] cats.effect.IOFiber.runLoop
  [ 7] cats.effect.IOFiber.execR
  [ 8] cats.effect.IOFiber.run
  [ 9] cats.effect.unsafe.WorkerThread.run

--- 319114244 ns (0.02%), 31 samples
  [ 0] cats.effect.IO.unsafeRunFiber
  [ 1] cats.effect.IO.unsafeRunAsync
  [ 2] cats.effect.IOPlatform.unsafeRunTimed
  [ 3] cats.effect.IOPlatform.unsafeRunSync
  [ 4] com.scalamandra.ZipBench.nioReadAllBytes
  [ 5] com.scalamandra.jmh_generated.ZipBench_nioReadAllBytes_jmhTest.nioReadAllBytes_thrpt_jmhStub
  [ 6] com.scalamandra.jmh_generated.ZipBench_nioReadAllBytes_jmhTest.nioReadAllBytes_Throughput
  [ 7] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [ 8] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [ 9] java.lang.reflect.Method.invoke
  [10] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [11] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [12] java.util.concurrent.FutureTask.run
  [13] java.util.concurrent.Executors$RunnableAdapter.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.ThreadPoolExecutor.runWorker
  [16] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [17] java.lang.Thread.run

--- 311336974 ns (0.02%), 31 samples
  [ 0] futex_wait_[k]
  [ 1] do_futex_[k]
  [ 2] __x64_sys_futex_[k]
  [ 3] do_syscall_64_[k]
  [ 4] entry_SYSCALL_64_after_hwframe_[k]
  [ 5] __futex_abstimed_wait_cancelable64
  [ 6] [unknown]
  [ 7] jdk.internal.misc.Unsafe.park
  [ 8] java.util.concurrent.locks.LockSupport.park
  [ 9] cats.effect.unsafe.WorkerThread.parkLoop$1
  [10] cats.effect.unsafe.WorkerThread.run

--- 311112795 ns (0.02%), 31 samples
  [ 0] syscall_enter_from_user_mode_[k]
  [ 1] do_syscall_64_[k]
  [ 2] entry_SYSCALL_64_after_hwframe_[k]
  [ 3] __GI___prctl
  [ 4] [unknown]
  [ 5] java.lang.Thread.setNativeName
  [ 6] java.lang.Thread.setName
  [ 7] cats.effect.unsafe.WorkerThread.init
  [ 8] cats.effect.unsafe.WorkerThread.run

--- 311065088 ns (0.02%), 31 samples
  [ 0] cats.effect.unsafe.WorkerThread.run

--- 310958620 ns (0.02%), 31 samples
  [ 0] mutex_spin_on_owner_[k]
  [ 1] __mutex_lock.constprop.0_[k]
  [ 2] __mutex_lock_slowpath_[k]
  [ 3] mutex_lock_[k]
  [ 4] dbuf_read?[zfs]_[k]
  [ 5] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 6] dmu_read_uio_dnode?[zfs]_[k]
  [ 7] dmu_read_uio_dbuf?[zfs]_[k]
  [ 8] mappedread?[zfs]_[k]
  [ 9] zfs_read?[zfs]_[k]
  [10] zpl_iter_read?[zfs]_[k]
  [11] new_sync_read_[k]
  [12] vfs_read_[k]
  [13] __x64_sys_pread64_[k]
  [14] do_syscall_64_[k]
  [15] entry_SYSCALL_64_after_hwframe_[k]
  [16] __libc_pread64
  [17] sun.nio.ch.FileDispatcherImpl.pread0
  [18] sun.nio.ch.FileDispatcherImpl.pread
  [19] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [20] sun.nio.ch.IOUtil.read
  [21] sun.nio.ch.IOUtil.read
  [22] sun.nio.ch.FileChannelImpl.readInternal
  [23] sun.nio.ch.FileChannelImpl.read
  [24] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [25] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [26] jdk.nio.zipfs.ZipFileSystem$2.fill
  [27] java.util.zip.InflaterInputStream.read
  [28] java.io.InputStream.readNBytes
  [29] java.io.InputStream.readAllBytes
  [30] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [31] jdk.nio.zipfs.ZipPath.newByteChannel
  [32] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [33] java.nio.file.Files.newByteChannel
  [34] java.nio.file.Files.newByteChannel
  [35] java.nio.file.Files.readAllBytes
  [36] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [37] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25648.apply
  [38] cats.effect.IOFiber.$anonfun$8
  [39] cats.effect.IOFiber$$Lambda$200.0x0000000800dadd60.apply
  [40] cats.effect.unsafe.WorkerThread.blockOn
  [41] scala.concurrent.package$.blocking
  [42] cats.effect.IOFiber.runLoop
  [43] cats.effect.IOFiber.execR
  [44] cats.effect.IOFiber.run
  [45] cats.effect.unsafe.WorkerThread.run

--- 310938559 ns (0.02%), 31 samples
  [ 0] dbuf_rele_and_unlock?[zfs]_[k]
  [ 1] dbuf_rele?[zfs]_[k]
  [ 2] dmu_buf_rele_array?[zfs]_[k]
  [ 3] dmu_read_uio_dnode?[zfs]_[k]
  [ 4] dmu_read_uio_dbuf?[zfs]_[k]
  [ 5] mappedread?[zfs]_[k]
  [ 6] zfs_read?[zfs]_[k]
  [ 7] zpl_iter_read?[zfs]_[k]
  [ 8] new_sync_read_[k]
  [ 9] vfs_read_[k]
  [10] __x64_sys_pread64_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] __libc_pread64
  [14] sun.nio.ch.FileDispatcherImpl.pread0
  [15] sun.nio.ch.FileDispatcherImpl.pread
  [16] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [17] sun.nio.ch.IOUtil.read
  [18] sun.nio.ch.IOUtil.read
  [19] sun.nio.ch.FileChannelImpl.readInternal
  [20] sun.nio.ch.FileChannelImpl.read
  [21] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [22] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [23] jdk.nio.zipfs.ZipFileSystem$2.fill
  [24] java.util.zip.InflaterInputStream.read
  [25] java.io.InputStream.readNBytes
  [26] java.io.InputStream.readAllBytes
  [27] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [28] jdk.nio.zipfs.ZipPath.newByteChannel
  [29] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [30] java.nio.file.Files.newByteChannel
  [31] java.nio.file.Files.newByteChannel
  [32] java.nio.file.Files.readAllBytes
  [33] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [34] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25648.apply
  [35] cats.effect.IOFiber.$anonfun$8
  [36] cats.effect.IOFiber$$Lambda$200.0x0000000800dadd60.apply
  [37] cats.effect.unsafe.WorkerThread.blockOn
  [38] scala.concurrent.package$.blocking
  [39] cats.effect.IOFiber.runLoop
  [40] cats.effect.IOFiber.execR
  [41] cats.effect.IOFiber.run
  [42] cats.effect.unsafe.WorkerThread.run

--- 310924447 ns (0.02%), 31 samples
  [ 0] arc_buf_access?[zfs]_[k]
  [ 1] dbuf_hold_impl?[zfs]_[k]
  [ 2] dbuf_hold_level?[zfs]_[k]
  [ 3] dbuf_hold?[zfs]_[k]
  [ 4] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 5] dmu_read_uio_dnode?[zfs]_[k]
  [ 6] dmu_read_uio_dbuf?[zfs]_[k]
  [ 7] mappedread?[zfs]_[k]
  [ 8] zfs_read?[zfs]_[k]
  [ 9] zpl_iter_read?[zfs]_[k]
  [10] new_sync_read_[k]
  [11] vfs_read_[k]
  [12] __x64_sys_pread64_[k]
  [13] do_syscall_64_[k]
  [14] entry_SYSCALL_64_after_hwframe_[k]
  [15] __libc_pread64
  [16] sun.nio.ch.FileDispatcherImpl.pread0
  [17] sun.nio.ch.FileDispatcherImpl.pread
  [18] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [19] sun.nio.ch.IOUtil.read
  [20] sun.nio.ch.IOUtil.read
  [21] sun.nio.ch.FileChannelImpl.readInternal
  [22] sun.nio.ch.FileChannelImpl.read
  [23] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [24] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [25] jdk.nio.zipfs.ZipFileSystem$2.fill
  [26] java.util.zip.InflaterInputStream.read
  [27] java.io.InputStream.readNBytes
  [28] java.io.InputStream.readAllBytes
  [29] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [30] jdk.nio.zipfs.ZipPath.newByteChannel
  [31] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [32] java.nio.file.Files.newByteChannel
  [33] java.nio.file.Files.newByteChannel
  [34] java.nio.file.Files.readAllBytes
  [35] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [36] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25648.apply
  [37] cats.effect.IOFiber.$anonfun$8
  [38] cats.effect.IOFiber$$Lambda$200.0x0000000800dadd60.apply
  [39] cats.effect.unsafe.WorkerThread.blockOn
  [40] scala.concurrent.package$.blocking
  [41] cats.effect.IOFiber.runLoop
  [42] cats.effect.IOFiber.execR
  [43] cats.effect.IOFiber.run
  [44] cats.effect.unsafe.WorkerThread.run

--- 310743931 ns (0.02%), 31 samples
  [ 0] __libc_pread64
  [ 1] sun.nio.ch.FileDispatcherImpl.pread0
  [ 2] sun.nio.ch.FileDispatcherImpl.pread
  [ 3] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [ 4] sun.nio.ch.IOUtil.read
  [ 5] sun.nio.ch.IOUtil.read
  [ 6] sun.nio.ch.FileChannelImpl.readInternal
  [ 7] sun.nio.ch.FileChannelImpl.read
  [ 8] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [ 9] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [10] jdk.nio.zipfs.ZipFileSystem$Entry.readLocEXTT
  [11] jdk.nio.zipfs.ZipFileSystem$Entry.readExtra
  [12] jdk.nio.zipfs.ZipFileSystem$Entry.readCEN
  [13] jdk.nio.zipfs.ZipFileSystem$Entry.<init>
  [14] jdk.nio.zipfs.ZipFileSystem.getEntry
  [15] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [16] jdk.nio.zipfs.ZipPath.newByteChannel
  [17] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [18] java.nio.file.Files.newByteChannel
  [19] java.nio.file.Files.newByteChannel
  [20] java.nio.file.Files.readAllBytes
  [21] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [22] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25648.apply
  [23] cats.effect.IOFiber.$anonfun$8
  [24] cats.effect.IOFiber$$Lambda$200.0x0000000800dadd60.apply
  [25] cats.effect.unsafe.WorkerThread.blockOn
  [26] scala.concurrent.package$.blocking
  [27] cats.effect.IOFiber.runLoop
  [28] cats.effect.IOFiber.execR
  [29] cats.effect.IOFiber.run
  [30] cats.effect.unsafe.WorkerThread.run

--- 310712557 ns (0.02%), 31 samples
  [ 0] java.util.zip.Inflater.inflateBytesBytes
  [ 1] java.util.zip.Inflater.inflate
  [ 2] java.util.zip.InflaterInputStream.read
  [ 3] java.io.InputStream.readNBytes
  [ 4] java.io.InputStream.readAllBytes
  [ 5] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [ 6] jdk.nio.zipfs.ZipPath.newByteChannel
  [ 7] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [ 8] java.nio.file.Files.newByteChannel
  [ 9] java.nio.file.Files.newByteChannel
  [10] java.nio.file.Files.readAllBytes
  [11] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [12] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25648.apply
  [13] cats.effect.IOFiber.$anonfun$8
  [14] cats.effect.IOFiber$$Lambda$200.0x0000000800dadd60.apply
  [15] cats.effect.unsafe.WorkerThread.blockOn
  [16] scala.concurrent.package$.blocking
  [17] cats.effect.IOFiber.runLoop
  [18] cats.effect.IOFiber.execR
  [19] cats.effect.IOFiber.run
  [20] cats.effect.unsafe.WorkerThread.run

--- 310706708 ns (0.02%), 31 samples
  [ 0] java.util.zip.Inflater.inflateBytesBytes
  [ 1] java.util.zip.Inflater.inflate
  [ 2] java.util.zip.InflaterInputStream.read
  [ 3] java.io.InputStream.readNBytes
  [ 4] java.io.InputStream.readAllBytes
  [ 5] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [ 6] jdk.nio.zipfs.ZipPath.newByteChannel
  [ 7] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [ 8] java.nio.file.Files.newByteChannel
  [ 9] java.nio.file.Files.newByteChannel
  [10] java.nio.file.Files.readAllBytes
  [11] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [12] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25648.apply
  [13] cats.effect.IOFiber.$anonfun$8
  [14] cats.effect.IOFiber$$Lambda$200.0x0000000800dadd60.apply
  [15] cats.effect.unsafe.WorkerThread.blockOn
  [16] scala.concurrent.package$.blocking
  [17] cats.effect.IOFiber.runLoop
  [18] cats.effect.IOFiber.execR
  [19] cats.effect.IOFiber.run
  [20] cats.effect.unsafe.WorkerThread.run

--- 310677516 ns (0.02%), 31 samples
  [ 0] jni_GetPrimitiveArrayCritical
  [ 1] Java_java_util_zip_Inflater_inflateBytesBytes
  [ 2] java.util.zip.Inflater.inflateBytesBytes
  [ 3] java.util.zip.Inflater.inflate
  [ 4] java.util.zip.InflaterInputStream.read
  [ 5] java.io.InputStream.readNBytes
  [ 6] java.io.InputStream.readAllBytes
  [ 7] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [ 8] jdk.nio.zipfs.ZipPath.newByteChannel
  [ 9] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [10] java.nio.file.Files.newByteChannel
  [11] java.nio.file.Files.newByteChannel
  [12] java.nio.file.Files.readAllBytes
  [13] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [14] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25648.apply
  [15] cats.effect.IOFiber.$anonfun$8
  [16] cats.effect.IOFiber$$Lambda$200.0x0000000800dadd60.apply
  [17] cats.effect.unsafe.WorkerThread.blockOn
  [18] scala.concurrent.package$.blocking
  [19] cats.effect.IOFiber.runLoop
  [20] cats.effect.IOFiber.execR
  [21] cats.effect.IOFiber.run
  [22] cats.effect.unsafe.WorkerThread.run

--- 310634189 ns (0.02%), 31 samples
  [ 0] inflate
  [ 1] java.util.zip.Inflater.inflateBytesBytes
  [ 2] java.util.zip.Inflater.inflate
  [ 3] java.util.zip.InflaterInputStream.read
  [ 4] java.io.InputStream.readNBytes
  [ 5] java.io.InputStream.readAllBytes
  [ 6] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [ 7] jdk.nio.zipfs.ZipPath.newByteChannel
  [ 8] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [ 9] java.nio.file.Files.newByteChannel
  [10] java.nio.file.Files.newByteChannel
  [11] java.nio.file.Files.readAllBytes
  [12] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [13] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25648.apply
  [14] cats.effect.IOFiber.$anonfun$8
  [15] cats.effect.IOFiber$$Lambda$200.0x0000000800dadd60.apply
  [16] cats.effect.unsafe.WorkerThread.blockOn
  [17] scala.concurrent.package$.blocking
  [18] cats.effect.IOFiber.runLoop
  [19] cats.effect.IOFiber.execR
  [20] cats.effect.IOFiber.run
  [21] cats.effect.unsafe.WorkerThread.run

--- 308952847 ns (0.02%), 30 samples
  [ 0] [vdso]
  [ 1] clock_gettime@@GLIBC_2.17
  [ 2] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos
  [ 3] java.util.concurrent.ArrayBlockingQueue.poll
  [ 4] cats.effect.IOPlatform.$anonfun$1
  [ 5] cats.effect.IOPlatform$$Lambda$192.0x0000000800dac530.apply
  [ 6] scala.concurrent.BlockContext$DefaultBlockContext$.blockOn
  [ 7] scala.concurrent.package$.blocking
  [ 8] cats.effect.IOPlatform.unsafeRunTimed
  [ 9] cats.effect.IOPlatform.unsafeRunSync
  [10] com.scalamandra.ZipBench.nioReadAllBytes
  [11] com.scalamandra.jmh_generated.ZipBench_nioReadAllBytes_jmhTest.nioReadAllBytes_thrpt_jmhStub
  [12] com.scalamandra.jmh_generated.ZipBench_nioReadAllBytes_jmhTest.nioReadAllBytes_Throughput
  [13] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [14] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [15] java.lang.reflect.Method.invoke
  [16] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [17] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [18] java.util.concurrent.FutureTask.run
  [19] java.util.concurrent.Executors$RunnableAdapter.call
  [20] java.util.concurrent.FutureTask.run
  [21] java.util.concurrent.ThreadPoolExecutor.runWorker
  [22] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [23] java.lang.Thread.run

--- 308624028 ns (0.02%), 30 samples
  [ 0] ___pthread_cond_timedwait64
  [ 1] [unknown]
  [ 2] jdk.internal.misc.Unsafe.park
  [ 3] java.util.concurrent.locks.LockSupport.parkNanos
  [ 4] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos
  [ 5] java.util.concurrent.ArrayBlockingQueue.poll
  [ 6] cats.effect.IOPlatform.$anonfun$1
  [ 7] cats.effect.IOPlatform$$Lambda$192.0x0000000800dac530.apply
  [ 8] scala.concurrent.BlockContext$DefaultBlockContext$.blockOn
  [ 9] scala.concurrent.package$.blocking
  [10] cats.effect.IOPlatform.unsafeRunTimed
  [11] cats.effect.IOPlatform.unsafeRunSync
  [12] com.scalamandra.ZipBench.nioReadAllBytes
  [13] com.scalamandra.jmh_generated.ZipBench_nioReadAllBytes_jmhTest.nioReadAllBytes_thrpt_jmhStub
  [14] com.scalamandra.jmh_generated.ZipBench_nioReadAllBytes_jmhTest.nioReadAllBytes_Throughput
  [15] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [16] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [17] java.lang.reflect.Method.invoke
  [18] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [19] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [20] java.util.concurrent.FutureTask.run
  [21] java.util.concurrent.Executors$RunnableAdapter.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.ThreadPoolExecutor.runWorker
  [24] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [25] java.lang.Thread.run

--- 301075549 ns (0.02%), 30 samples
  [ 0] _IO_strn_overflow
  [ 1] java.lang.Thread.setNativeName
  [ 2] java.lang.Thread.setName
  [ 3] cats.effect.unsafe.WorkerThread.blockOn
  [ 4] scala.concurrent.package$.blocking
  [ 5] cats.effect.IOFiber.runLoop
  [ 6] cats.effect.IOFiber.execR
  [ 7] cats.effect.IOFiber.run
  [ 8] cats.effect.unsafe.WorkerThread.run

--- 300986639 ns (0.02%), 30 samples
  [ 0] java.lang.ThreadLocal.setInitialValue
  [ 1] [unknown_Java]

--- 300955019 ns (0.02%), 30 samples
  [ 0] kmem_cache_free_[k]
  [ 1] spl_kmem_cache_free?[spl]_[k]
  [ 2] zio_destroy?[zfs]_[k]
  [ 3] zio_wait?[zfs]_[k]
  [ 4] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 5] dmu_read_uio_dnode?[zfs]_[k]
  [ 6] dmu_read_uio_dbuf?[zfs]_[k]
  [ 7] mappedread?[zfs]_[k]
  [ 8] zfs_read?[zfs]_[k]
  [ 9] zpl_iter_read?[zfs]_[k]
  [10] new_sync_read_[k]
  [11] vfs_read_[k]
  [12] __x64_sys_pread64_[k]
  [13] do_syscall_64_[k]
  [14] entry_SYSCALL_64_after_hwframe_[k]
  [15] __libc_pread64
  [16] sun.nio.ch.FileDispatcherImpl.pread0
  [17] sun.nio.ch.FileDispatcherImpl.pread
  [18] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [19] sun.nio.ch.IOUtil.read
  [20] sun.nio.ch.IOUtil.read
  [21] sun.nio.ch.FileChannelImpl.readInternal
  [22] sun.nio.ch.FileChannelImpl.read
  [23] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [24] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [25] jdk.nio.zipfs.ZipFileSystem$2.fill
  [26] java.util.zip.InflaterInputStream.read
  [27] java.io.InputStream.readNBytes
  [28] java.io.InputStream.readAllBytes
  [29] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [30] jdk.nio.zipfs.ZipPath.newByteChannel
  [31] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [32] java.nio.file.Files.newByteChannel
  [33] java.nio.file.Files.newByteChannel
  [34] java.nio.file.Files.readAllBytes
  [35] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [36] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25648.apply
  [37] cats.effect.IOFiber.$anonfun$8
  [38] cats.effect.IOFiber$$Lambda$200.0x0000000800dadd60.apply
  [39] cats.effect.unsafe.WorkerThread.blockOn
  [40] scala.concurrent.package$.blocking
  [41] cats.effect.IOFiber.runLoop
  [42] cats.effect.IOFiber.execR
  [43] cats.effect.IOFiber.run
  [44] cats.effect.unsafe.WorkerThread.run

--- 300899950 ns (0.02%), 30 samples
  [ 0] zio_create?[zfs]_[k]
  [ 1] zio_null?[zfs]_[k]
  [ 2] zio_root?[zfs]_[k]
  [ 3] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 4] dmu_read_uio_dnode?[zfs]_[k]
  [ 5] dmu_read_uio_dbuf?[zfs]_[k]
  [ 6] mappedread?[zfs]_[k]
  [ 7] zfs_read?[zfs]_[k]
  [ 8] zpl_iter_read?[zfs]_[k]
  [ 9] new_sync_read_[k]
  [10] vfs_read_[k]
  [11] __x64_sys_pread64_[k]
  [12] do_syscall_64_[k]
  [13] entry_SYSCALL_64_after_hwframe_[k]
  [14] __libc_pread64
  [15] sun.nio.ch.FileDispatcherImpl.pread0
  [16] sun.nio.ch.FileDispatcherImpl.pread
  [17] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [18] sun.nio.ch.IOUtil.read
  [19] sun.nio.ch.IOUtil.read
  [20] sun.nio.ch.FileChannelImpl.readInternal
  [21] sun.nio.ch.FileChannelImpl.read
  [22] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [23] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [24] jdk.nio.zipfs.ZipFileSystem$Entry.readLocEXTT
  [25] jdk.nio.zipfs.ZipFileSystem$Entry.readExtra
  [26] jdk.nio.zipfs.ZipFileSystem$Entry.readCEN
  [27] jdk.nio.zipfs.ZipFileSystem$Entry.<init>
  [28] jdk.nio.zipfs.ZipFileSystem.getEntry
  [29] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [30] jdk.nio.zipfs.ZipPath.newByteChannel
  [31] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [32] java.nio.file.Files.newByteChannel
  [33] java.nio.file.Files.newByteChannel
  [34] java.nio.file.Files.readAllBytes
  [35] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [36] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25648.apply
  [37] cats.effect.IOFiber.$anonfun$8
  [38] cats.effect.IOFiber$$Lambda$200.0x0000000800dadd60.apply
  [39] cats.effect.unsafe.WorkerThread.blockOn
  [40] scala.concurrent.package$.blocking
  [41] cats.effect.IOFiber.runLoop
  [42] cats.effect.IOFiber.execR
  [43] cats.effect.IOFiber.run
  [44] cats.effect.unsafe.WorkerThread.run

--- 300715993 ns (0.02%), 30 samples
  [ 0] java.io.InputStream.readNBytes
  [ 1] java.io.InputStream.readAllBytes
  [ 2] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [ 3] jdk.nio.zipfs.ZipPath.newByteChannel
  [ 4] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [ 5] java.nio.file.Files.newByteChannel
  [ 6] java.nio.file.Files.newByteChannel
  [ 7] java.nio.file.Files.readAllBytes
  [ 8] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [ 9] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25648.apply
  [10] cats.effect.IOFiber.$anonfun$8
  [11] cats.effect.IOFiber$$Lambda$200.0x0000000800dadd60.apply
  [12] cats.effect.unsafe.WorkerThread.blockOn
  [13] scala.concurrent.package$.blocking
  [14] cats.effect.IOFiber.runLoop
  [15] cats.effect.IOFiber.execR
  [16] cats.effect.IOFiber.run
  [17] cats.effect.unsafe.WorkerThread.run

--- 300697421 ns (0.02%), 30 samples
  [ 0] sun.nio.ch.Util$BufferCache.get
  [ 1] sun.nio.ch.Util.getTemporaryDirectBuffer
  [ 2] sun.nio.ch.IOUtil.read
  [ 3] sun.nio.ch.IOUtil.read
  [ 4] sun.nio.ch.FileChannelImpl.readInternal
  [ 5] sun.nio.ch.FileChannelImpl.read
  [ 6] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [ 7] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [ 8] jdk.nio.zipfs.ZipFileSystem$Entry.readLocEXTT
  [ 9] jdk.nio.zipfs.ZipFileSystem$Entry.readExtra
  [10] jdk.nio.zipfs.ZipFileSystem$Entry.readCEN
  [11] jdk.nio.zipfs.ZipFileSystem$Entry.<init>
  [12] jdk.nio.zipfs.ZipFileSystem.getEntry
  [13] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [14] jdk.nio.zipfs.ZipPath.newByteChannel
  [15] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [16] java.nio.file.Files.newByteChannel
  [17] java.nio.file.Files.newByteChannel
  [18] java.nio.file.Files.readAllBytes
  [19] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [20] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25648.apply
  [21] cats.effect.IOFiber.$anonfun$8
  [22] cats.effect.IOFiber$$Lambda$200.0x0000000800dadd60.apply
  [23] cats.effect.unsafe.WorkerThread.blockOn
  [24] scala.concurrent.package$.blocking
  [25] cats.effect.IOFiber.runLoop
  [26] cats.effect.IOFiber.execR
  [27] cats.effect.IOFiber.run
  [28] cats.effect.unsafe.WorkerThread.run

--- 300665835 ns (0.02%), 30 samples
  [ 0] __memcpy_avx_unaligned
  [ 1] java.util.zip.Inflater.inflateBytesBytes
  [ 2] java.util.zip.Inflater.inflate
  [ 3] java.util.zip.InflaterInputStream.read
  [ 4] java.io.InputStream.readNBytes
  [ 5] java.io.InputStream.readAllBytes
  [ 6] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [ 7] jdk.nio.zipfs.ZipPath.newByteChannel
  [ 8] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [ 9] java.nio.file.Files.newByteChannel
  [10] java.nio.file.Files.newByteChannel
  [11] java.nio.file.Files.readAllBytes
  [12] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [13] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25648.apply
  [14] cats.effect.IOFiber.$anonfun$8
  [15] cats.effect.IOFiber$$Lambda$200.0x0000000800dadd60.apply
  [16] cats.effect.unsafe.WorkerThread.blockOn
  [17] scala.concurrent.package$.blocking
  [18] cats.effect.IOFiber.runLoop
  [19] cats.effect.IOFiber.execR
  [20] cats.effect.IOFiber.run
  [21] cats.effect.unsafe.WorkerThread.run

--- 298578174 ns (0.02%), 29 samples
  [ 0] MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&) const
  [ 1] MemAllocator::allocate() const
  [ 2] InstanceKlass::allocate_instance(JavaThread*)
  [ 3] JVMCIRuntime::new_instance_common(JavaThread*, Klass*, bool)
  [ 4] java.util.concurrent.ConcurrentLinkedQueue.offer
  [ 5] cats.effect.unsafe.ScalQueue.offer
  [ 6] cats.effect.unsafe.WorkStealingThreadPool.scheduleExternal
  [ 7] cats.effect.unsafe.WorkStealingThreadPool.execute
  [ 8] cats.effect.IO.unsafeRunFiber
  [ 9] cats.effect.IO.unsafeRunAsync
  [10] cats.effect.IOPlatform.unsafeRunTimed
  [11] cats.effect.IOPlatform.unsafeRunSync
  [12] com.scalamandra.ZipBench.nioReadAllBytes
  [13] com.scalamandra.jmh_generated.ZipBench_nioReadAllBytes_jmhTest.nioReadAllBytes_thrpt_jmhStub
  [14] com.scalamandra.jmh_generated.ZipBench_nioReadAllBytes_jmhTest.nioReadAllBytes_Throughput
  [15] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [16] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [17] java.lang.reflect.Method.invoke
  [18] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [19] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [20] java.util.concurrent.FutureTask.run
  [21] java.util.concurrent.Executors$RunnableAdapter.call
  [22] java.util.concurrent.FutureTask.run
  [23] java.util.concurrent.ThreadPoolExecutor.runWorker
  [24] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [25] java.lang.Thread.run

--- 290954678 ns (0.02%), 29 samples
  [ 0] mutex_unlock_[k]
  [ 1] zio_wait?[zfs]_[k]
  [ 2] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 3] dmu_read_uio_dnode?[zfs]_[k]
  [ 4] dmu_read_uio_dbuf?[zfs]_[k]
  [ 5] mappedread?[zfs]_[k]
  [ 6] zfs_read?[zfs]_[k]
  [ 7] zpl_iter_read?[zfs]_[k]
  [ 8] new_sync_read_[k]
  [ 9] vfs_read_[k]
  [10] __x64_sys_pread64_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] __libc_pread64
  [14] sun.nio.ch.FileDispatcherImpl.pread0
  [15] sun.nio.ch.FileDispatcherImpl.pread
  [16] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [17] sun.nio.ch.IOUtil.read
  [18] sun.nio.ch.IOUtil.read
  [19] sun.nio.ch.FileChannelImpl.readInternal
  [20] sun.nio.ch.FileChannelImpl.read
  [21] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [22] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [23] jdk.nio.zipfs.ZipFileSystem$2.fill
  [24] java.util.zip.InflaterInputStream.read
  [25] java.io.InputStream.readNBytes
  [26] java.io.InputStream.readAllBytes
  [27] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [28] jdk.nio.zipfs.ZipPath.newByteChannel
  [29] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [30] java.nio.file.Files.newByteChannel
  [31] java.nio.file.Files.newByteChannel
  [32] java.nio.file.Files.readAllBytes
  [33] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [34] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25648.apply
  [35] cats.effect.IOFiber.$anonfun$8
  [36] cats.effect.IOFiber$$Lambda$200.0x0000000800dadd60.apply
  [37] cats.effect.unsafe.WorkerThread.blockOn
  [38] scala.concurrent.package$.blocking
  [39] cats.effect.IOFiber.runLoop
  [40] cats.effect.IOFiber.execR
  [41] cats.effect.IOFiber.run
  [42] cats.effect.unsafe.WorkerThread.run

--- 290953975 ns (0.02%), 29 samples
  [ 0] mutex_spin_on_owner_[k]
  [ 1] __mutex_lock.constprop.0_[k]
  [ 2] __mutex_lock_slowpath_[k]
  [ 3] mutex_lock_[k]
  [ 4] dbuf_find?[zfs]_[k]
  [ 5] dbuf_hold_impl?[zfs]_[k]
  [ 6] dbuf_hold_level?[zfs]_[k]
  [ 7] dbuf_hold?[zfs]_[k]
  [ 8] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 9] dmu_read_uio_dnode?[zfs]_[k]
  [10] dmu_read_uio_dbuf?[zfs]_[k]
  [11] mappedread?[zfs]_[k]
  [12] zfs_read?[zfs]_[k]
  [13] zpl_iter_read?[zfs]_[k]
  [14] new_sync_read_[k]
  [15] vfs_read_[k]
  [16] __x64_sys_pread64_[k]
  [17] do_syscall_64_[k]
  [18] entry_SYSCALL_64_after_hwframe_[k]
  [19] __libc_pread64
  [20] sun.nio.ch.FileDispatcherImpl.pread0
  [21] sun.nio.ch.FileDispatcherImpl.pread
  [22] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [23] sun.nio.ch.IOUtil.read
  [24] sun.nio.ch.IOUtil.read
  [25] sun.nio.ch.FileChannelImpl.readInternal
  [26] sun.nio.ch.FileChannelImpl.read
  [27] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [28] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [29] jdk.nio.zipfs.ZipFileSystem$2.fill
  [30] java.util.zip.InflaterInputStream.read
  [31] java.io.InputStream.readNBytes
  [32] java.io.InputStream.readAllBytes
  [33] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [34] jdk.nio.zipfs.ZipPath.newByteChannel
  [35] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [36] java.nio.file.Files.newByteChannel
  [37] java.nio.file.Files.newByteChannel
  [38] java.nio.file.Files.readAllBytes
  [39] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [40] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25648.apply
  [41] cats.effect.IOFiber.$anonfun$8
  [42] cats.effect.IOFiber$$Lambda$200.0x0000000800dadd60.apply
  [43] cats.effect.unsafe.WorkerThread.blockOn
  [44] scala.concurrent.package$.blocking
  [45] cats.effect.IOFiber.runLoop
  [46] cats.effect.IOFiber.execR
  [47] cats.effect.IOFiber.run
  [48] cats.effect.unsafe.WorkerThread.run

--- 290936383 ns (0.02%), 29 samples
  [ 0] dbuf_hold_impl?[zfs]_[k]
  [ 1] dbuf_hold_level?[zfs]_[k]
  [ 2] dbuf_hold?[zfs]_[k]
  [ 3] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 4] dmu_read_uio_dnode?[zfs]_[k]
  [ 5] dmu_read_uio_dbuf?[zfs]_[k]
  [ 6] mappedread?[zfs]_[k]
  [ 7] zfs_read?[zfs]_[k]
  [ 8] zpl_iter_read?[zfs]_[k]
  [ 9] new_sync_read_[k]
  [10] vfs_read_[k]
  [11] __x64_sys_pread64_[k]
  [12] do_syscall_64_[k]
  [13] entry_SYSCALL_64_after_hwframe_[k]
  [14] __libc_pread64
  [15] sun.nio.ch.FileDispatcherImpl.pread0
  [16] sun.nio.ch.FileDispatcherImpl.pread
  [17] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [18] sun.nio.ch.IOUtil.read
  [19] sun.nio.ch.IOUtil.read
  [20] sun.nio.ch.FileChannelImpl.readInternal
  [21] sun.nio.ch.FileChannelImpl.read
  [22] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [23] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [24] jdk.nio.zipfs.ZipFileSystem$2.fill
  [25] java.util.zip.InflaterInputStream.read
  [26] java.io.InputStream.readNBytes
  [27] java.io.InputStream.readAllBytes
  [28] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [29] jdk.nio.zipfs.ZipPath.newByteChannel
  [30] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [31] java.nio.file.Files.newByteChannel
  [32] java.nio.file.Files.newByteChannel
  [33] java.nio.file.Files.readAllBytes
  [34] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [35] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25648.apply
  [36] cats.effect.IOFiber.$anonfun$8
  [37] cats.effect.IOFiber$$Lambda$200.0x0000000800dadd60.apply
  [38] cats.effect.unsafe.WorkerThread.blockOn
  [39] scala.concurrent.package$.blocking
  [40] cats.effect.IOFiber.runLoop
  [41] cats.effect.IOFiber.execR
  [42] cats.effect.IOFiber.run
  [43] cats.effect.unsafe.WorkerThread.run

--- 290927012 ns (0.02%), 29 samples
  [ 0] copy_user_generic_string_[k]
  [ 1] zfs_uiomove_iter?[zfs]_[k]
  [ 2] zfs_uiomove?[zfs]_[k]
  [ 3] dmu_read_uio_dnode?[zfs]_[k]
  [ 4] dmu_read_uio_dbuf?[zfs]_[k]
  [ 5] mappedread?[zfs]_[k]
  [ 6] zfs_read?[zfs]_[k]
  [ 7] zpl_iter_read?[zfs]_[k]
  [ 8] new_sync_read_[k]
  [ 9] vfs_read_[k]
  [10] __x64_sys_pread64_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] __libc_pread64
  [14] sun.nio.ch.FileDispatcherImpl.pread0
  [15] sun.nio.ch.FileDispatcherImpl.pread
  [16] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [17] sun.nio.ch.IOUtil.read
  [18] sun.nio.ch.IOUtil.read
  [19] sun.nio.ch.FileChannelImpl.readInternal
  [20] sun.nio.ch.FileChannelImpl.read
  [21] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [22] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [23] jdk.nio.zipfs.ZipFileSystem$Entry.readLocEXTT
  [24] jdk.nio.zipfs.ZipFileSystem$Entry.readExtra
  [25] jdk.nio.zipfs.ZipFileSystem$Entry.readCEN
  [26] jdk.nio.zipfs.ZipFileSystem$Entry.<init>
  [27] jdk.nio.zipfs.ZipFileSystem.getEntry
  [28] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [29] jdk.nio.zipfs.ZipPath.newByteChannel
  [30] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [31] java.nio.file.Files.newByteChannel
  [32] java.nio.file.Files.newByteChannel
  [33] java.nio.file.Files.readAllBytes
  [34] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [35] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25648.apply
  [36] cats.effect.IOFiber.$anonfun$8
  [37] cats.effect.IOFiber$$Lambda$200.0x0000000800dadd60.apply
  [38] cats.effect.unsafe.WorkerThread.blockOn
  [39] scala.concurrent.package$.blocking
  [40] cats.effect.IOFiber.runLoop
  [41] cats.effect.IOFiber.execR
  [42] cats.effect.IOFiber.run
  [43] cats.effect.unsafe.WorkerThread.run

--- 290915246 ns (0.02%), 29 samples
  [ 0] zio_create?[zfs]_[k]
  [ 1] zio_null?[zfs]_[k]
  [ 2] zio_root?[zfs]_[k]
  [ 3] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 4] dmu_read_uio_dnode?[zfs]_[k]
  [ 5] dmu_read_uio_dbuf?[zfs]_[k]
  [ 6] mappedread?[zfs]_[k]
  [ 7] zfs_read?[zfs]_[k]
  [ 8] zpl_iter_read?[zfs]_[k]
  [ 9] new_sync_read_[k]
  [10] vfs_read_[k]
  [11] __x64_sys_pread64_[k]
  [12] do_syscall_64_[k]
  [13] entry_SYSCALL_64_after_hwframe_[k]
  [14] __libc_pread64
  [15] sun.nio.ch.FileDispatcherImpl.pread0
  [16] sun.nio.ch.FileDispatcherImpl.pread
  [17] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [18] sun.nio.ch.IOUtil.read
  [19] sun.nio.ch.IOUtil.read
  [20] sun.nio.ch.FileChannelImpl.readInternal
  [21] sun.nio.ch.FileChannelImpl.read
  [22] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [23] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [24] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.initDataPos
  [25] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [26] jdk.nio.zipfs.ZipFileSystem$2.fill
  [27] java.util.zip.InflaterInputStream.read
  [28] java.io.InputStream.readNBytes
  [29] java.io.InputStream.readAllBytes
  [30] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [31] jdk.nio.zipfs.ZipPath.newByteChannel
  [32] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [33] java.nio.file.Files.newByteChannel
  [34] java.nio.file.Files.newByteChannel
  [35] java.nio.file.Files.readAllBytes
  [36] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [37] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25648.apply
  [38] cats.effect.IOFiber.$anonfun$8
  [39] cats.effect.IOFiber$$Lambda$200.0x0000000800dadd60.apply
  [40] cats.effect.unsafe.WorkerThread.blockOn
  [41] scala.concurrent.package$.blocking
  [42] cats.effect.IOFiber.runLoop
  [43] cats.effect.IOFiber.execR
  [44] cats.effect.IOFiber.run
  [45] cats.effect.unsafe.WorkerThread.run

--- 290914683 ns (0.02%), 29 samples
  [ 0] char* UNICODE::as_utf8<signed char>(signed char const*, int&)
  [ 1] java_lang_String::as_utf8_string(oopDesc*)
  [ 2] JVM_SetNativeThreadName
  [ 3] java.lang.Thread.setNativeName
  [ 4] java.lang.Thread.setName
  [ 5] cats.effect.unsafe.WorkerThread.blockOn
  [ 6] scala.concurrent.package$.blocking
  [ 7] cats.effect.IOFiber.runLoop
  [ 8] cats.effect.IOFiber.execR
  [ 9] cats.effect.IOFiber.run
  [10] cats.effect.unsafe.WorkerThread.run

--- 290553516 ns (0.02%), 29 samples
  [ 0] __libc_pread64
  [ 1] sun.nio.ch.FileDispatcherImpl.pread0
  [ 2] sun.nio.ch.FileDispatcherImpl.pread
  [ 3] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [ 4] sun.nio.ch.IOUtil.read
  [ 5] sun.nio.ch.IOUtil.read
  [ 6] sun.nio.ch.FileChannelImpl.readInternal
  [ 7] sun.nio.ch.FileChannelImpl.read
  [ 8] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [ 9] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [10] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.initDataPos
  [11] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [12] jdk.nio.zipfs.ZipFileSystem$2.fill
  [13] java.util.zip.InflaterInputStream.read
  [14] java.io.InputStream.readNBytes
  [15] java.io.InputStream.readAllBytes
  [16] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [17] jdk.nio.zipfs.ZipPath.newByteChannel
  [18] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [19] java.nio.file.Files.newByteChannel
  [20] java.nio.file.Files.newByteChannel
  [21] java.nio.file.Files.readAllBytes
  [22] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [23] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25648.apply
  [24] cats.effect.IOFiber.$anonfun$8
  [25] cats.effect.IOFiber$$Lambda$200.0x0000000800dadd60.apply
  [26] cats.effect.unsafe.WorkerThread.blockOn
  [27] scala.concurrent.package$.blocking
  [28] cats.effect.IOFiber.runLoop
  [29] cats.effect.IOFiber.execR
  [30] cats.effect.IOFiber.run
  [31] cats.effect.unsafe.WorkerThread.run

--- 288083607 ns (0.02%), 28 samples
  [ 0] __hrtimer_init_[k]
  [ 1] hrtimer_init_sleeper_[k]
  [ 2] futex_setup_timer_[k]
  [ 3] futex_wait_[k]
  [ 4] do_futex_[k]
  [ 5] __x64_sys_futex_[k]
  [ 6] do_syscall_64_[k]
  [ 7] entry_SYSCALL_64_after_hwframe_[k]
  [ 8] __futex_abstimed_wait_cancelable64
  [ 9] [unknown]
  [10] jdk.internal.misc.Unsafe.park
  [11] java.util.concurrent.locks.LockSupport.parkNanos
  [12] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos
  [13] java.util.concurrent.ArrayBlockingQueue.poll
  [14] cats.effect.IOPlatform.$anonfun$1
  [15] cats.effect.IOPlatform$$Lambda$192.0x0000000800dac530.apply
  [16] scala.concurrent.BlockContext$DefaultBlockContext$.blockOn
  [17] scala.concurrent.package$.blocking
  [18] cats.effect.IOPlatform.unsafeRunTimed
  [19] cats.effect.IOPlatform.unsafeRunSync
  [20] com.scalamandra.ZipBench.nioReadAllBytes
  [21] com.scalamandra.jmh_generated.ZipBench_nioReadAllBytes_jmhTest.nioReadAllBytes_thrpt_jmhStub
  [22] com.scalamandra.jmh_generated.ZipBench_nioReadAllBytes_jmhTest.nioReadAllBytes_Throughput
  [23] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [24] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [25] java.lang.reflect.Method.invoke
  [26] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [27] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [28] java.util.concurrent.FutureTask.run
  [29] java.util.concurrent.Executors$RunnableAdapter.call
  [30] java.util.concurrent.FutureTask.run
  [31] java.util.concurrent.ThreadPoolExecutor.runWorker
  [32] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [33] java.lang.Thread.run

--- 287920101 ns (0.02%), 28 samples
  [ 0] [vdso]
  [ 1] clock_gettime@@GLIBC_2.17
  [ 2] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos
  [ 3] java.util.concurrent.ArrayBlockingQueue.poll
  [ 4] cats.effect.IOPlatform.$anonfun$1
  [ 5] cats.effect.IOPlatform$$Lambda$192.0x0000000800dac530.apply
  [ 6] scala.concurrent.BlockContext$DefaultBlockContext$.blockOn
  [ 7] scala.concurrent.package$.blocking
  [ 8] cats.effect.IOPlatform.unsafeRunTimed
  [ 9] cats.effect.IOPlatform.unsafeRunSync
  [10] com.scalamandra.ZipBench.nioReadAllBytes
  [11] com.scalamandra.jmh_generated.ZipBench_nioReadAllBytes_jmhTest.nioReadAllBytes_thrpt_jmhStub
  [12] com.scalamandra.jmh_generated.ZipBench_nioReadAllBytes_jmhTest.nioReadAllBytes_Throughput
  [13] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [14] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [15] java.lang.reflect.Method.invoke
  [16] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [17] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [18] java.util.concurrent.FutureTask.run
  [19] java.util.concurrent.Executors$RunnableAdapter.call
  [20] java.util.concurrent.FutureTask.run
  [21] java.util.concurrent.ThreadPoolExecutor.runWorker
  [22] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [23] java.lang.Thread.run

--- 280973732 ns (0.02%), 28 samples
  [ 0] java.lang.Integer.valueOf
  [ 1] scala.Predef$.int2Integer
  [ 2] cats.effect.unsafe.WorkerThread.blockOn
  [ 3] scala.concurrent.package$.blocking
  [ 4] cats.effect.IOFiber.runLoop
  [ 5] cats.effect.IOFiber.execR
  [ 6] cats.effect.IOFiber.run
  [ 7] cats.effect.unsafe.WorkerThread.run

--- 280864242 ns (0.02%), 28 samples
  [ 0] __kmalloc_node_[k]
  [ 1] spl_kmem_alloc_impl?[spl]_[k]
  [ 2] spl_kmem_zalloc?[spl]_[k]
  [ 3] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 4] dmu_read_uio_dnode?[zfs]_[k]
  [ 5] dmu_read_uio_dbuf?[zfs]_[k]
  [ 6] mappedread?[zfs]_[k]
  [ 7] zfs_read?[zfs]_[k]
  [ 8] zpl_iter_read?[zfs]_[k]
  [ 9] new_sync_read_[k]
  [10] vfs_read_[k]
  [11] __x64_sys_pread64_[k]
  [12] do_syscall_64_[k]
  [13] entry_SYSCALL_64_after_hwframe_[k]
  [14] __libc_pread64
  [15] sun.nio.ch.FileDispatcherImpl.pread0
  [16] sun.nio.ch.FileDispatcherImpl.pread
  [17] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [18] sun.nio.ch.IOUtil.read
  [19] sun.nio.ch.IOUtil.read
  [20] sun.nio.ch.FileChannelImpl.readInternal
  [21] sun.nio.ch.FileChannelImpl.read
  [22] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [23] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [24] jdk.nio.zipfs.ZipFileSystem$2.fill
  [25] java.util.zip.InflaterInputStream.read
  [26] java.io.InputStream.readNBytes
  [27] java.io.InputStream.readAllBytes
  [28] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [29] jdk.nio.zipfs.ZipPath.newByteChannel
  [30] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [31] java.nio.file.Files.newByteChannel
  [32] java.nio.file.Files.newByteChannel
  [33] java.nio.file.Files.readAllBytes
  [34] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [35] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25648.apply
  [36] cats.effect.IOFiber.$anonfun$8
  [37] cats.effect.IOFiber$$Lambda$200.0x0000000800dadd60.apply
  [38] cats.effect.unsafe.WorkerThread.blockOn
  [39] scala.concurrent.package$.blocking
  [40] cats.effect.IOFiber.runLoop
  [41] cats.effect.IOFiber.execR
  [42] cats.effect.IOFiber.run
  [43] cats.effect.unsafe.WorkerThread.run

--- 280817055 ns (0.02%), 28 samples
  [ 0] new_sync_read_[k]
  [ 1] vfs_read_[k]
  [ 2] __x64_sys_pread64_[k]
  [ 3] do_syscall_64_[k]
  [ 4] entry_SYSCALL_64_after_hwframe_[k]
  [ 5] __libc_pread64
  [ 6] sun.nio.ch.FileDispatcherImpl.pread0
  [ 7] sun.nio.ch.FileDispatcherImpl.pread
  [ 8] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [ 9] sun.nio.ch.IOUtil.read
  [10] sun.nio.ch.IOUtil.read
  [11] sun.nio.ch.FileChannelImpl.readInternal
  [12] sun.nio.ch.FileChannelImpl.read
  [13] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [14] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [15] jdk.nio.zipfs.ZipFileSystem$Entry.readLocEXTT
  [16] jdk.nio.zipfs.ZipFileSystem$Entry.readExtra
  [17] jdk.nio.zipfs.ZipFileSystem$Entry.readCEN
  [18] jdk.nio.zipfs.ZipFileSystem$Entry.<init>
  [19] jdk.nio.zipfs.ZipFileSystem.getEntry
  [20] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [21] jdk.nio.zipfs.ZipPath.newByteChannel
  [22] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [23] java.nio.file.Files.newByteChannel
  [24] java.nio.file.Files.newByteChannel
  [25] java.nio.file.Files.readAllBytes
  [26] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [27] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25648.apply
  [28] cats.effect.IOFiber.$anonfun$8
  [29] cats.effect.IOFiber$$Lambda$200.0x0000000800dadd60.apply
  [30] cats.effect.unsafe.WorkerThread.blockOn
  [31] scala.concurrent.package$.blocking
  [32] cats.effect.IOFiber.runLoop
  [33] cats.effect.IOFiber.execR
  [34] cats.effect.IOFiber.run
  [35] cats.effect.unsafe.WorkerThread.run

--- 280648815 ns (0.02%), 28 samples
  [ 0] cats.effect.unsafe.ThreadSafeHashtable.remove
  [ 1] cats.effect.unsafe.StripedHashtable.remove
  [ 2] cats.effect.IO.$anonfun$6$$anonfun$3
  [ 3] cats.effect.IO$$Lambda$228.0x0000000800db6738.applyVoid
  [ 4] scala.runtime.function.JProcedure1.apply
  [ 5] scala.runtime.function.JProcedure1.apply
  [ 6] cats.effect.kernel.Outcome.fold
  [ 7] cats.effect.kernel.Outcome.fold$
  [ 8] cats.effect.kernel.Outcome$Succeeded.fold
  [ 9] cats.effect.IO.$anonfun$6
  [10] cats.effect.IO$$Lambda$171.0x0000000800da1de0.applyVoid
  [11] scala.runtime.function.JProcedure1.apply
  [12] scala.runtime.function.JProcedure1.apply
  [13] cats.effect.CallbackStack.apply
  [14] cats.effect.IOFiber.done
  [15] cats.effect.IOFiber.runTerminusSuccessK
  [16] cats.effect.IOFiber.succeeded
  [17] cats.effect.IOFiber.runLoop
  [18] cats.effect.IOFiber.execR
  [19] cats.effect.IOFiber.run
  [20] cats.effect.unsafe.WorkerThread.run

--- 280612367 ns (0.02%), 28 samples
  [ 0] java.util.zip.Inflater.inflate
  [ 1] java.util.zip.InflaterInputStream.read
  [ 2] java.io.InputStream.readNBytes
  [ 3] java.io.InputStream.readAllBytes
  [ 4] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [ 5] jdk.nio.zipfs.ZipPath.newByteChannel
  [ 6] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [ 7] java.nio.file.Files.newByteChannel
  [ 8] java.nio.file.Files.newByteChannel
  [ 9] java.nio.file.Files.readAllBytes
  [10] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [11] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25648.apply
  [12] cats.effect.IOFiber.$anonfun$8
  [13] cats.effect.IOFiber$$Lambda$200.0x0000000800dadd60.apply
  [14] cats.effect.unsafe.WorkerThread.blockOn
  [15] scala.concurrent.package$.blocking
  [16] cats.effect.IOFiber.runLoop
  [17] cats.effect.IOFiber.execR
  [18] cats.effect.IOFiber.run
  [19] cats.effect.unsafe.WorkerThread.run

--- 280567987 ns (0.02%), 28 samples
  [ 0] Java_java_util_zip_Inflater_inflateBytesBytes
  [ 1] java.util.zip.Inflater.inflateBytesBytes
  [ 2] java.util.zip.Inflater.inflate
  [ 3] java.util.zip.InflaterInputStream.read
  [ 4] java.io.InputStream.readNBytes
  [ 5] java.io.InputStream.readAllBytes
  [ 6] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [ 7] jdk.nio.zipfs.ZipPath.newByteChannel
  [ 8] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [ 9] java.nio.file.Files.newByteChannel
  [10] java.nio.file.Files.newByteChannel
  [11] java.nio.file.Files.readAllBytes
  [12] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [13] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25648.apply
  [14] cats.effect.IOFiber.$anonfun$8
  [15] cats.effect.IOFiber$$Lambda$200.0x0000000800dadd60.apply
  [16] cats.effect.unsafe.WorkerThread.blockOn
  [17] scala.concurrent.package$.blocking
  [18] cats.effect.IOFiber.runLoop
  [19] cats.effect.IOFiber.execR
  [20] cats.effect.IOFiber.run
  [21] cats.effect.unsafe.WorkerThread.run

--- 278021034 ns (0.02%), 27 samples
  [ 0] [vdso]
  [ 1] clock_gettime@@GLIBC_2.17
  [ 2] Unsafe_Park
  [ 3] jdk.internal.misc.Unsafe.park
  [ 4] java.util.concurrent.locks.LockSupport.parkNanos
  [ 5] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos
  [ 6] java.util.concurrent.ArrayBlockingQueue.poll
  [ 7] cats.effect.IOPlatform.$anonfun$1
  [ 8] cats.effect.IOPlatform$$Lambda$192.0x0000000800dac530.apply
  [ 9] scala.concurrent.BlockContext$DefaultBlockContext$.blockOn
  [10] scala.concurrent.package$.blocking
  [11] cats.effect.IOPlatform.unsafeRunTimed
  [12] cats.effect.IOPlatform.unsafeRunSync
  [13] com.scalamandra.ZipBench.nioReadAllBytes
  [14] com.scalamandra.jmh_generated.ZipBench_nioReadAllBytes_jmhTest.nioReadAllBytes_thrpt_jmhStub
  [15] com.scalamandra.jmh_generated.ZipBench_nioReadAllBytes_jmhTest.nioReadAllBytes_Throughput
  [16] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [17] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [18] java.lang.reflect.Method.invoke
  [19] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] java.util.concurrent.FutureTask.run
  [22] java.util.concurrent.Executors$RunnableAdapter.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.ThreadPoolExecutor.runWorker
  [25] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [26] java.lang.Thread.run

--- 271022628 ns (0.02%), 27 samples
  [ 0] __kmalloc_node_[k]
  [ 1] spl_kmem_alloc_impl?[spl]_[k]
  [ 2] spl_kmem_zalloc?[spl]_[k]
  [ 3] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 4] dmu_read_uio_dnode?[zfs]_[k]
  [ 5] dmu_read_uio_dbuf?[zfs]_[k]
  [ 6] mappedread?[zfs]_[k]
  [ 7] zfs_read?[zfs]_[k]
  [ 8] zpl_iter_read?[zfs]_[k]
  [ 9] new_sync_read_[k]
  [10] vfs_read_[k]
  [11] __x64_sys_pread64_[k]
  [12] do_syscall_64_[k]
  [13] entry_SYSCALL_64_after_hwframe_[k]
  [14] __libc_pread64
  [15] sun.nio.ch.FileDispatcherImpl.pread0
  [16] sun.nio.ch.FileDispatcherImpl.pread
  [17] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [18] sun.nio.ch.IOUtil.read
  [19] sun.nio.ch.IOUtil.read
  [20] sun.nio.ch.FileChannelImpl.readInternal
  [21] sun.nio.ch.FileChannelImpl.read
  [22] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [23] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [24] jdk.nio.zipfs.ZipFileSystem$Entry.readLocEXTT
  [25] jdk.nio.zipfs.ZipFileSystem$Entry.readExtra
  [26] jdk.nio.zipfs.ZipFileSystem$Entry.readCEN
  [27] jdk.nio.zipfs.ZipFileSystem$Entry.<init>
  [28] jdk.nio.zipfs.ZipFileSystem.getEntry
  [29] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [30] jdk.nio.zipfs.ZipPath.newByteChannel
  [31] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [32] java.nio.file.Files.newByteChannel
  [33] java.nio.file.Files.newByteChannel
  [34] java.nio.file.Files.readAllBytes
  [35] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [36] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25648.apply
  [37] cats.effect.IOFiber.$anonfun$8
  [38] cats.effect.IOFiber$$Lambda$200.0x0000000800dadd60.apply
  [39] cats.effect.unsafe.WorkerThread.blockOn
  [40] scala.concurrent.package$.blocking
  [41] cats.effect.IOFiber.runLoop
  [42] cats.effect.IOFiber.execR
  [43] cats.effect.IOFiber.run
  [44] cats.effect.unsafe.WorkerThread.run

--- 270712405 ns (0.02%), 27 samples
  [ 0] vfs_read_[k]
  [ 1] __x64_sys_pread64_[k]
  [ 2] do_syscall_64_[k]
  [ 3] entry_SYSCALL_64_after_hwframe_[k]
  [ 4] __libc_pread64
  [ 5] sun.nio.ch.FileDispatcherImpl.pread0
  [ 6] sun.nio.ch.FileDispatcherImpl.pread
  [ 7] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [ 8] sun.nio.ch.IOUtil.read
  [ 9] sun.nio.ch.IOUtil.read
  [10] sun.nio.ch.FileChannelImpl.readInternal
  [11] sun.nio.ch.FileChannelImpl.read
  [12] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [13] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [14] jdk.nio.zipfs.ZipFileSystem$Entry.readLocEXTT
  [15] jdk.nio.zipfs.ZipFileSystem$Entry.readExtra
  [16] jdk.nio.zipfs.ZipFileSystem$Entry.readCEN
  [17] jdk.nio.zipfs.ZipFileSystem$Entry.<init>
  [18] jdk.nio.zipfs.ZipFileSystem.getEntry
  [19] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [20] jdk.nio.zipfs.ZipPath.newByteChannel
  [21] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [22] java.nio.file.Files.newByteChannel
  [23] java.nio.file.Files.newByteChannel
  [24] java.nio.file.Files.readAllBytes
  [25] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [26] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25648.apply
  [27] cats.effect.IOFiber.$anonfun$8
  [28] cats.effect.IOFiber$$Lambda$200.0x0000000800dadd60.apply
  [29] cats.effect.unsafe.WorkerThread.blockOn
  [30] scala.concurrent.package$.blocking
  [31] cats.effect.IOFiber.runLoop
  [32] cats.effect.IOFiber.execR
  [33] cats.effect.IOFiber.run
  [34] cats.effect.unsafe.WorkerThread.run

--- 270659717 ns (0.02%), 27 samples
  [ 0] java.util.Arrays.copyOfRange
  [ 1] java.lang.String.<init>
  [ 2] java.lang.String.<init>
  [ 3] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [ 4] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25648.apply
  [ 5] cats.effect.IOFiber.$anonfun$8
  [ 6] cats.effect.IOFiber$$Lambda$200.0x0000000800dadd60.apply
  [ 7] cats.effect.unsafe.WorkerThread.blockOn
  [ 8] scala.concurrent.package$.blocking
  [ 9] cats.effect.IOFiber.runLoop
  [10] cats.effect.IOFiber.execR
  [11] cats.effect.IOFiber.run
  [12] cats.effect.unsafe.WorkerThread.run

          ns  percent  samples  top
  ----------  -------  -------  ---
842427003103   59.28%    84074  /usr/lib/x86_64-linux-gnu/libz.so.1.2.11
 49642571051    3.49%     4952  __memset_avx2_unaligned_erms
 45346860748    3.19%     4525  inflate
 36540317723    2.57%     3625  _raw_spin_unlock_irqrestore_[k]
 33843876321    2.38%     3377  java.io.InputStream.readNBytes
 28732905609    2.02%     2867  java.lang.System.arraycopy
 23092139890    1.62%     2304  java.util.Arrays.copyOfRange
 14792522457    1.04%     1476  java.nio.file.Files.read
 12486495418    0.88%     1246  __memmove_avx_unaligned_erms
 10121341916    0.71%     1007  copy_user_generic_string_[k]
  9671510826    0.68%      965  java.lang.StringCoding.hasNegatives
  9610992692    0.68%      959  java.util.zip.InflaterInputStream.<init>
  6700743174    0.47%      668  mutex_lock_[k]
  5796601502    0.41%      575  syscall_enter_from_user_mode_[k]
  5581810216    0.39%      556  _raw_spin_lock_[k]
  5376772924    0.38%      536  mutex_unlock_[k]
  4473428282    0.31%      446  find_vmap_area_[k]
  4043184565    0.28%      403  memset_[k]
  3962456895    0.28%      395  zio_create?[zfs]_[k]
  3872150341    0.27%      386  percpu_counter_add_batch_[k]
  3767294156    0.27%      376  jbyte_disjoint_arraycopy
  3470700820    0.24%      343  __schedule_[k]
  3110359574    0.22%      310  __kmalloc_node_[k]
  3109529100    0.22%      310  mutex_spin_on_owner_[k]
  3081349342    0.22%      307  __vfprintf_internal
  2750014456    0.19%      274  java.util.concurrent.ConcurrentLinkedQueue.poll
  2747947270    0.19%      273  pthread_cond_signal@@GLIBC_2.3.2
  2568875723    0.18%      255  futex_wake_[k]
  2166677316    0.15%      216  osq_lock_[k]
  2127099550    0.15%      212  kmem_cache_alloc_[k]
  2123948029    0.15%      210  jdk.internal.misc.Unsafe.compareAndSetReference
  2076392446    0.15%      207  dmu_buf_hold_array_by_dnode?[zfs]_[k]
  2016663714    0.14%      201  kfree_[k]
  1986871666    0.14%      198  cats.effect.unsafe.WorkerThread.run
  1921415867    0.14%      188  Unsafe_Park
  1775033670    0.12%      177  zrl_add_impl?[zfs]_[k]
  1745603899    0.12%      174  kmem_cache_free_[k]
  1735356911    0.12%      173  zio_wait?[zfs]_[k]
  1713589641    0.12%      171  java.util.zip.Inflater.inflate
  1673870904    0.12%      167  __libc_pread64
  1615350910    0.11%      161  zio_done?[zfs]_[k]
  1603600443    0.11%      160  jni_GetPrimitiveArrayCritical
  1590352890    0.11%      156  futex_q_lock_[k]
  1565078754    0.11%      156  down_read_[k]
  1559879981    0.11%      155  ObjArrayAllocator::initialize(HeapWordImpl**) const
  1555080443    0.11%      155  JVM_SetNativeThreadName
  1544524537    0.11%      154  dbuf_hold_impl?[zfs]_[k]
  1534694100    0.11%      153  dbuf_rele_and_unlock?[zfs]_[k]
  1484852727    0.10%      148  __mutex_lock.constprop.0_[k]
  1456424556    0.10%      143  __x64_sys_futex_[k]
  1444029299    0.10%      143  __tls_get_addr
  1427709280    0.10%      140  futex_wait_[k]
  1420010030    0.10%      139  [vdso]
  1405123706    0.10%      140  __GI__IO_setb
  1364323611    0.10%      136  __fget_light_[k]
  1362414501    0.10%      135  G1CollectedHeap::mem_allocate(unsigned long, bool*)
  1345057519    0.09%      134  strncpy_from_user_[k]
  1342514256    0.09%      133  HeapRegionManager::par_iterate(HeapRegionClosure*, HeapRegionClaimer*, unsigned int) const
  1313231293    0.09%      131  sun.nio.ch.NativeThreadSet.add
  1304661595    0.09%      130  cats.effect.unsafe.ScalQueue.poll
  1293929493    0.09%      129  cityhash4?[zcommon]_[k]
  1263947511    0.09%      126  zio_wait_for_children?[zfs]_[k]
  1253870973    0.09%      125  zfs_read?[zfs]_[k]
  1244015109    0.09%      124  zio_ready?[zfs]_[k]
  1232976360    0.09%      123  java.lang.Thread.blockedOn
  1222667262    0.09%      122  jni_ReleasePrimitiveArrayCritical
  1213549072    0.09%      121  dbuf_read?[zfs]_[k]
  1183831111    0.08%      118  java.util.concurrent.LinkedTransferQueue.xfer
  1183390085    0.08%      118  __GI___prctl
  1140343592    0.08%      113  __memcpy_sse2_unaligned_erms
  1134169146    0.08%      113  java.lang.StringBuilder.toString
  1113954419    0.08%      111  char* UNICODE::as_utf8<signed char>(signed char const*, int&)
  1113595186    0.08%      111  dbuf_find?[zfs]_[k]
  1113408849    0.08%      111  apparmor_file_permission_[k]
  1100856059    0.08%      109  MemAllocator::allocate() const
  1086223065    0.08%      108  ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**)
  1043265002    0.07%      104  arc_buf_access?[zfs]_[k]
  1033256824    0.07%      103  __list_del_entry?[zfs]_[k]
  1030365941    0.07%      101  MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&) const
  1026144158    0.07%      102  _raw_spin_unlock_[k]
  1013093974    0.07%      101  zrl_remove?[zfs]_[k]
  1012911497    0.07%      101  vfs_read_[k]
  1002862401    0.07%      100  java.util.HashMap.getNode
  1001561473    0.07%       99  java.lang.ThreadLocal$ThreadLocalMap.getEntry
   992269757    0.07%       99  java.util.zip.Inflater.inflateBytesBytes
   985070976    0.07%       97  Parker::park(bool, long)
   962894554    0.07%       96  spl_mutex_clear_owner?[zfs]_[k]
   952981164    0.07%       95  fsnotify_perm.part.0_[k]
   936550465    0.07%       91  java.util.concurrent.ConcurrentLinkedQueue.offer
   934750799    0.07%       93  ___pthread_mutex_lock
   923315718    0.06%       92  java.lang.Thread.setName
   903228974    0.06%       90  _IO_default_xsputn
   882645437    0.06%       88  dmu_read_uio_dnode?[zfs]_[k]
   872025597    0.06%       87  sun.nio.ch.FileDispatcherImpl.pread0
   862356106    0.06%       86  sun.nio.ch.Util$BufferCache.get
   854397108    0.06%       85  futex_wake_mark_[k]
   850583896    0.06%       84  JVMCIRuntime::new_array_common(JavaThread*, Klass*, int, bool)
   842509856    0.06%       84  __cond_resched_[k]
   832598980    0.06%       83  spl_mutex_set_owner?[zfs]_[k]
   822275955    0.06%       82  dbuf_cache_multilist_index_func?[zfs]_[k]
   812243187    0.06%       81  new_sync_read_[k]
   795577522    0.06%       79  jdk.internal.misc.Unsafe.unpark
   792422737    0.06%       79  dmu_zfetch_prepare?[zfs]_[k]
   783010938    0.06%       78  security_task_prctl_[k]
   782360577    0.06%       78  __fsnotify_parent_[k]
   772334516    0.05%       77  read_tsc_[k]
   771860684    0.05%       77  cats.effect.unsafe.ThreadSafeHashtable.remove
   771545447    0.05%       75  cats.effect.unsafe.ThreadSafeHashtable.put
   762518247    0.05%       76  vdev_stat_update?[zfs]_[k]
   760071129    0.05%       75  JfrObjectAllocationSample::send_event(Klass const*, unsigned long, bool, Thread*)
   752074121    0.05%       75  jdk.nio.zipfs.ZipUtils.dosToJavaTime
   722120895    0.05%       72  zpl_iter_read?[zfs]_[k]
   719906202    0.05%       70  JVMCIRuntime::new_instance_common(JavaThread*, Klass*, bool)
   712621934    0.05%       71  _IO_no_init
   712116370    0.05%       71  __filemap_get_folio_[k]
   706510888    0.05%       70  void WeakProcessor::Task::work<G1STWIsAliveClosure, G1KeepAliveClosure>(unsigned int, G1STWIsAliveClosure*, G1KeepAliveClosure*)
   693262353    0.05%       69  Unsafe_Unpark
   692444340    0.05%       69  java.lang.Thread.setNativeName
   692053453    0.05%       69  list_del?[zfs]_[k]
   691214499    0.05%       68  __GI___pthread_enable_asynccancel
   682101242    0.05%       68  _copy_to_iter_[k]
   681962010    0.05%       68  sun.nio.ch.FileChannelImpl.read
   674372492    0.05%       67  AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<548964ul, G1BarrierSet>, (AccessInternal::BarrierType)2, 548964ul>::oop_access_barrier(void*)
   672702158    0.05%       67  __x86_return_thunk_[k]
   672154015    0.05%       67  java.util.concurrent.ConcurrentSkipListMap.findPredecessor
   662112930    0.05%       66  is_vmalloc_addr_[k]
   661384071    0.05%       66  Java_java_util_zip_Inflater_inflateBytesBytes
   652261710    0.05%       65  kmalloc_slab_[k]
   651946813    0.05%       65  mappedread?[zfs]_[k]
   651941894    0.05%       65  lockref_get_not_zero_[k]
   641978475    0.05%       64  zfs_rangelock_compare?[zfs]_[k]
   641742051    0.05%       64  fsnotify_[k]
   631815625    0.04%       63  java.util.concurrent.ConcurrentSkipListMap.doRemoveFirstEntry
   631424418    0.04%       63  sun.nio.ch.NativeThreadSet.remove
   621882017    0.04%       61  __get_user_nocheck_4_[k]
   612466196    0.04%       61  __do_sys_prctl_[k]
   611887029    0.04%       61  ktime_get_raw_ts64_[k]
   611840989    0.04%       61  __list_del?[zfs]_[k]
   611602348    0.04%       61  __x64_sys_pread64_[k]
   602091308    0.04%       60  memcg_slab_post_alloc_hook_[k]
   601999284    0.04%       60  zio_walk_parents?[zfs]_[k]
   601945759    0.04%       60  multilist_remove?[zfs]_[k]
   601818420    0.04%       60  dbuf_read_verify_dnode_crypt?[zfs]_[k]
   597285432    0.04%       59  SharedRuntime::on_slowpath_allocation_exit(JavaThread*)
   591508892    0.04%       59  jdk.nio.zipfs.ZipFileSystem$Entry.readExtra
   582325925    0.04%       58  ThreadsListHandle::ThreadsListHandle(Thread*)
   581833758    0.04%       58  __cv_broadcast?[spl]_[k]
   572054447    0.04%       57  check_stack_object_[k]
   571943030    0.04%       57  try_to_wake_up_[k]
   571839121    0.04%       57  dmu_read_uio_dbuf?[zfs]_[k]
   565963913    0.04%       56  ObjectSampler::is_created()
   553575197    0.04%       54  ___pthread_cond_timedwait64
   552023279    0.04%       55  cats.effect.unsafe.WorkStealingThreadPool.stealFromOtherWorkerThread
   544791123    0.04%       54  HeapRegionClaimer::claim_region(unsigned int)
   541893005    0.04%       54  _IO_strn_overflow
   541870412    0.04%       54  java.lang.Integer.valueOf
   539815085    0.04%       53  pthread_mutex_trylock@@GLIBC_2.34
   535339547    0.04%       53  get_futex_key_[k]
   531621200    0.04%       53  do_sched_yield_[k]
   531287941    0.04%       53  java.nio.Buffer.position
   531284887    0.04%       53  CollectedHeap::supports_object_pinning() const
   521804551    0.04%       52  __check_object_size.part.0_[k]
   521717878    0.04%       52  dbuf_whichblock?[zfs]_[k]
   521607593    0.04%       52  list_head?[zfs]_[k]
   521330670    0.04%       52  sun.nio.ch.NativeThread.current
   512051687    0.04%       51  yama_task_prctl_[k]
   511091123    0.04%       51  __memcpy_avx_unaligned
   501678480    0.04%       50  kmem_flags_convert?[spl]_[k]
   501609540    0.04%       50  up_read_[k]
   501589453    0.04%       50  __pthread_self
   501426387    0.04%       50  __rcu_read_unlock_[k]
   496510123    0.03%       49  schedule_[k]
   494793220    0.03%       49  futex_hash_[k]
   491680278    0.03%       49  cats.effect.tracing.RingBuffer.push
   491564694    0.03%       49  zio_execute_stack_check.constprop.0?[zfs]_[k]
   491550023    0.03%       49  multilist_insert?[zfs]_[k]
   491488805    0.03%       49  avl_remove?[zavl]_[k]
   481625949    0.03%       48  spl_kmem_alloc_impl?[spl]_[k]
   471717295    0.03%       47  ResourceArea::rollback_to(ResourceArea::SavedState const&)
   471485385    0.03%       47  arc_access?[zfs]_[k]
   471452133    0.03%       47  zfs_uiomove_iter?[zfs]_[k]
   471440696    0.03%       47  wmsum_add?[zfs]_[k]
   471431608    0.03%       47  spl_kmem_cache_free?[spl]_[k]
   461325890    0.03%       46  list_destroy?[zfs]_[k]
   461216797    0.03%       46  java.lang.ref.Reference.refersTo0
   461080729    0.03%       46  java.lang.Object.hashCode
   453312892    0.03%       45  oopDesc::address_field(int) const
   451463886    0.03%       45  zio_inherit_child_errors?[zfs]_[k]
   451423978    0.03%       45  cityhash_helper.constprop.0?[zcommon]_[k]
   451328369    0.03%       45  java.time.LocalDateTime.plusWithOverflow
   451235262    0.03%       45  fdval
   442223789    0.03%       44  do_syscall_64_[k]
   441519773    0.03%       44  spl_kmem_cache_alloc?[spl]_[k]
   441398119    0.03%       44  xas_start_[k]
   441317486    0.03%       44  __rcu_read_lock_[k]
   441234524    0.03%       44  java.nio.channels.spi.AbstractInterruptibleChannel.blockedOn
   441015614    0.03%       44  java.util.concurrent.ConcurrentSkipListMap.doPut
   435601192    0.03%       43  CollectedHeap::tlab_alloc_reserve() const
   431588421    0.03%       43  cap_task_prctl_[k]
   431353397    0.03%       43  rrw_enter_read_impl?[zfs]_[k]
Async profiler results:
  profile/com.scalamandra.ZipBench.nioReadAllBytes-Throughput-fileName-under64kb.txt/summary-cpu.txt


# JMH version: 1.32
# VM version: JDK 17.0.6, Java HotSpot(TM) 64-Bit Server VM, 17.0.6+9-LTS-jvmci-22.3-b11
# VM invoker: /home/rajven/graal/java17/bin/java
# VM options: -XX:ThreadPriorityPolicy=1 -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCIProduct -XX:JVMCIThreadsPerNativeLibraryRuntime=1 -XX:-UnlockExperimentalVMOptions
# Blackhole mode: full + dont-inline hint
# Warmup: 20 iterations, 10 s each
# Measurement: 20 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.scalamandra.ZipBench.nioReadAllBytes
# Parameters: (fileName = over64kb.txt)

# Run progress: 50,00% complete, ETA 00:33:42
# Fork: 1 of 1
# Preparing profilers: AsyncProfiler 
Java HotSpot(TM) 64-Bit Server VM warning: -XX:ThreadPriorityPolicy=1 may require system level permission, e.g., being the root user. If the necessary permission is not possessed, changes to priority will be silently ignored.
# Warmup Iteration   1: 164,402 ops/s
# Warmup Iteration   2: 173,003 ops/s
# Warmup Iteration   3: 174,646 ops/s
# Warmup Iteration   4: 175,636 ops/s
# Warmup Iteration   5: 172,263 ops/s
# Warmup Iteration   6: 174,325 ops/s
# Warmup Iteration   7: 173,173 ops/s
# Warmup Iteration   8: 171,621 ops/s
# Warmup Iteration   9: 171,300 ops/s
# Warmup Iteration  10: 168,494 ops/s
# Warmup Iteration  11: 174,555 ops/s
# Warmup Iteration  12: 122,706 ops/s
# Warmup Iteration  13: 164,482 ops/s
# Warmup Iteration  14: 178,998 ops/s
# Warmup Iteration  15: 175,455 ops/s
# Warmup Iteration  16: 178,059 ops/s
# Warmup Iteration  17: 168,073 ops/s
# Warmup Iteration  18: 174,148 ops/s
# Warmup Iteration  19: 172,817 ops/s
# Warmup Iteration  20: 173,985 ops/s
Iteration   1: 175,454 ops/s
Iteration   2: 135,666 ops/s
Iteration   3: 156,188 ops/s
Iteration   4: 167,704 ops/s
Iteration   5: 130,886 ops/s
Iteration   6: 171,606 ops/s
Iteration   7: 176,738 ops/s
Iteration   8: 176,293 ops/s
Iteration   9: 177,876 ops/s
Iteration  10: 176,774 ops/s
Iteration  11: 170,080 ops/s
Iteration  12: 172,302 ops/s
Iteration  13: 174,271 ops/s
Iteration  14: 172,469 ops/s
Iteration  15: 172,848 ops/s
Iteration  16: 120,578 ops/s
Iteration  17: 169,848 ops/s
Iteration  18: 174,315 ops/s
Iteration  19: 176,021 ops/s
Iteration  20: [WARN] Unknown argument: summary
176,846 ops/s
                 ·async: (text only)

# Processing profiler results: AsyncProfiler 


Result "com.scalamandra.ZipBench.nioReadAllBytes":
  166,238 ±(99.9%) 14,678 ops/s [Average]
  (min, avg, max) = (120,578, 166,238, 177,876), stdev = 16,904
  CI (99.9%): [151,560, 180,917] (assumes normal distribution)

Secondary result "com.scalamandra.ZipBench.nioReadAllBytes:·async":
--- Execution profile ---
Total samples       : 144311
GC_active           : 7 (0.00%)
unknown_Java        : 58 (0.04%)
not_walkable_Java   : 2 (0.00%)
deoptimization      : 1 (0.00%)

--- 417522396299 ns (28.92%), 41751 samples
  [ 0] /usr/lib/x86_64-linux-gnu/libz.so.1.2.11
  [ 1] java.util.zip.Inflater.inflateBytesBytes
  [ 2] java.util.zip.Inflater.inflate
  [ 3] java.util.zip.InflaterInputStream.read
  [ 4] java.io.InputStream.readNBytes
  [ 5] java.io.InputStream.readAllBytes
  [ 6] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [ 7] jdk.nio.zipfs.ZipPath.newByteChannel
  [ 8] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [ 9] java.nio.file.Files.newByteChannel
  [10] java.nio.file.Files.newByteChannel
  [11] java.nio.file.Files.readAllBytes
  [12] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [13] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25908.apply
  [14] cats.effect.IOFiber.$anonfun$8
  [15] cats.effect.IOFiber$$Lambda$196.0x0000000800dae2e0.apply
  [16] cats.effect.unsafe.WorkerThread.blockOn
  [17] scala.concurrent.package$.blocking
  [18] cats.effect.IOFiber.runLoop
  [19] cats.effect.IOFiber.execR
  [20] cats.effect.IOFiber.run
  [21] cats.effect.unsafe.WorkerThread.run

--- 339947097370 ns (23.55%), 34005 samples
  [ 0] /usr/lib/x86_64-linux-gnu/libz.so.1.2.11
  [ 1] [unknown]
  [ 2] java.util.zip.Inflater.inflateBytesBytes
  [ 3] java.util.zip.Inflater.inflate
  [ 4] java.util.zip.InflaterInputStream.read
  [ 5] java.io.InputStream.readNBytes
  [ 6] java.io.InputStream.readAllBytes
  [ 7] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [ 8] jdk.nio.zipfs.ZipPath.newByteChannel
  [ 9] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [10] java.nio.file.Files.newByteChannel
  [11] java.nio.file.Files.newByteChannel
  [12] java.nio.file.Files.readAllBytes
  [13] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [14] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25908.apply
  [15] cats.effect.IOFiber.$anonfun$8
  [16] cats.effect.IOFiber$$Lambda$196.0x0000000800dae2e0.apply
  [17] cats.effect.unsafe.WorkerThread.blockOn
  [18] scala.concurrent.package$.blocking
  [19] cats.effect.IOFiber.runLoop
  [20] cats.effect.IOFiber.execR
  [21] cats.effect.IOFiber.run
  [22] cats.effect.unsafe.WorkerThread.run

--- 46991304374 ns (3.25%), 4699 samples
  [ 0] inflate
  [ 1] java.util.zip.Inflater.inflateBytesBytes
  [ 2] java.util.zip.Inflater.inflate
  [ 3] java.util.zip.InflaterInputStream.read
  [ 4] java.io.InputStream.readNBytes
  [ 5] java.io.InputStream.readAllBytes
  [ 6] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [ 7] jdk.nio.zipfs.ZipPath.newByteChannel
  [ 8] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [ 9] java.nio.file.Files.newByteChannel
  [10] java.nio.file.Files.newByteChannel
  [11] java.nio.file.Files.readAllBytes
  [12] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [13] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25908.apply
  [14] cats.effect.IOFiber.$anonfun$8
  [15] cats.effect.IOFiber$$Lambda$196.0x0000000800dae2e0.apply
  [16] cats.effect.unsafe.WorkerThread.blockOn
  [17] scala.concurrent.package$.blocking
  [18] cats.effect.IOFiber.runLoop
  [19] cats.effect.IOFiber.execR
  [20] cats.effect.IOFiber.run
  [21] cats.effect.unsafe.WorkerThread.run

--- 46365377583 ns (3.21%), 4637 samples
  [ 0] /usr/lib/x86_64-linux-gnu/libz.so.1.2.11
  [ 1] java.util.zip.Inflater.inflateBytesBytes
  [ 2] java.util.zip.Inflater.inflate
  [ 3] java.util.zip.InflaterInputStream.read
  [ 4] java.io.InputStream.readNBytes
  [ 5] java.io.InputStream.readAllBytes
  [ 6] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [ 7] jdk.nio.zipfs.ZipPath.newByteChannel
  [ 8] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [ 9] java.nio.file.Files.newByteChannel
  [10] java.nio.file.Files.newByteChannel
  [11] java.nio.file.Files.readAllBytes
  [12] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [13] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25908.apply
  [14] cats.effect.IOFiber.$anonfun$8
  [15] cats.effect.IOFiber$$Lambda$196.0x0000000800dae2e0.apply
  [16] cats.effect.unsafe.WorkerThread.blockOn
  [17] scala.concurrent.package$.blocking
  [18] cats.effect.IOFiber.runLoop
  [19] cats.effect.IOFiber.execR
  [20] cats.effect.IOFiber.run
  [21] cats.effect.unsafe.WorkerThread.run

--- 39788163584 ns (2.76%), 3974 samples
  [ 0] java.lang.System.arraycopy
  [ 1] java.io.InputStream.readNBytes
  [ 2] java.io.InputStream.readAllBytes
  [ 3] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [ 4] jdk.nio.zipfs.ZipPath.newByteChannel
  [ 5] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [ 6] java.nio.file.Files.newByteChannel
  [ 7] java.nio.file.Files.newByteChannel
  [ 8] java.nio.file.Files.readAllBytes
  [ 9] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [10] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25908.apply
  [11] cats.effect.IOFiber.$anonfun$8
  [12] cats.effect.IOFiber$$Lambda$196.0x0000000800dae2e0.apply
  [13] cats.effect.unsafe.WorkerThread.blockOn
  [14] scala.concurrent.package$.blocking
  [15] cats.effect.IOFiber.runLoop
  [16] cats.effect.IOFiber.execR
  [17] cats.effect.IOFiber.run
  [18] cats.effect.unsafe.WorkerThread.run

--- 39015274095 ns (2.70%), 3899 samples
  [ 0] java.lang.System.arraycopy
  [ 1] java.nio.HeapByteBuffer.put
  [ 2] jdk.nio.zipfs.ByteArrayChannel.read
  [ 3] sun.nio.ch.ChannelInputStream.read
  [ 4] sun.nio.ch.ChannelInputStream.read
  [ 5] sun.nio.ch.ChannelInputStream.read
  [ 6] java.nio.file.Files.read
  [ 7] java.nio.file.Files.readAllBytes
  [ 8] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [ 9] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25908.apply
  [10] cats.effect.IOFiber.$anonfun$8
  [11] cats.effect.IOFiber$$Lambda$196.0x0000000800dae2e0.apply
  [12] cats.effect.unsafe.WorkerThread.blockOn
  [13] scala.concurrent.package$.blocking
  [14] cats.effect.IOFiber.runLoop
  [15] cats.effect.IOFiber.execR
  [16] cats.effect.IOFiber.run
  [17] cats.effect.unsafe.WorkerThread.run

--- 37897280839 ns (2.63%), 3791 samples
  [ 0] /usr/lib/x86_64-linux-gnu/libz.so.1.2.11
  [ 1] [unknown]
  [ 2] java.util.zip.Inflater.inflateBytesBytes
  [ 3] java.util.zip.Inflater.inflate
  [ 4] java.util.zip.InflaterInputStream.read
  [ 5] java.io.InputStream.readNBytes
  [ 6] java.io.InputStream.readAllBytes
  [ 7] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [ 8] jdk.nio.zipfs.ZipPath.newByteChannel
  [ 9] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [10] java.nio.file.Files.newByteChannel
  [11] java.nio.file.Files.newByteChannel
  [12] java.nio.file.Files.readAllBytes
  [13] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [14] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25908.apply
  [15] cats.effect.IOFiber.$anonfun$8
  [16] cats.effect.IOFiber$$Lambda$196.0x0000000800dae2e0.apply
  [17] cats.effect.unsafe.WorkerThread.blockOn
  [18] scala.concurrent.package$.blocking
  [19] cats.effect.IOFiber.runLoop
  [20] cats.effect.IOFiber.execR
  [21] cats.effect.IOFiber.run
  [22] cats.effect.unsafe.WorkerThread.run

--- 33312458285 ns (2.31%), 3329 samples
  [ 0] java.util.Arrays.copyOfRange
  [ 1] java.lang.String.<init>
  [ 2] java.lang.String.<init>
  [ 3] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [ 4] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25908.apply
  [ 5] cats.effect.IOFiber.$anonfun$8
  [ 6] cats.effect.IOFiber$$Lambda$196.0x0000000800dae2e0.apply
  [ 7] cats.effect.unsafe.WorkerThread.blockOn
  [ 8] scala.concurrent.package$.blocking
  [ 9] cats.effect.IOFiber.runLoop
  [10] cats.effect.IOFiber.execR
  [11] cats.effect.IOFiber.run
  [12] cats.effect.unsafe.WorkerThread.run

--- 28107449733 ns (1.95%), 2807 samples
  [ 0] __memset_avx2_unaligned_erms
  [ 1] MemAllocator::allocate() const
  [ 2] TypeArrayKlass::allocate_common(int, bool, JavaThread*)
  [ 3] JVMCIRuntime::new_array_common(JavaThread*, Klass*, int, bool)
  [ 4] jdk.nio.zipfs.ByteArrayChannel.endRead
  [ 5] jdk.nio.zipfs.ByteArrayChannel.size
  [ 6] java.nio.file.Files.readAllBytes
  [ 7] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [ 8] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25908.apply
  [ 9] cats.effect.IOFiber.$anonfun$8
  [10] cats.effect.IOFiber$$Lambda$196.0x0000000800dae2e0.apply
  [11] cats.effect.unsafe.WorkerThread.blockOn
  [12] scala.concurrent.package$.blocking
  [13] cats.effect.IOFiber.runLoop
  [14] cats.effect.IOFiber.execR
  [15] cats.effect.IOFiber.run
  [16] cats.effect.unsafe.WorkerThread.run

--- 28085968841 ns (1.95%), 2805 samples
  [ 0] __memset_avx2_unaligned_erms
  [ 1] MemAllocator::allocate() const
  [ 2] TypeArrayKlass::allocate_common(int, bool, JavaThread*)
  [ 3] JVMCIRuntime::new_array_common(JavaThread*, Klass*, int, bool)
  [ 4] java.io.InputStream.readNBytes
  [ 5] java.io.InputStream.readAllBytes
  [ 6] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [ 7] jdk.nio.zipfs.ZipPath.newByteChannel
  [ 8] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [ 9] java.nio.file.Files.newByteChannel
  [10] java.nio.file.Files.newByteChannel
  [11] java.nio.file.Files.readAllBytes
  [12] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [13] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25908.apply
  [14] cats.effect.IOFiber.$anonfun$8
  [15] cats.effect.IOFiber$$Lambda$196.0x0000000800dae2e0.apply
  [16] cats.effect.unsafe.WorkerThread.blockOn
  [17] scala.concurrent.package$.blocking
  [18] cats.effect.IOFiber.runLoop
  [19] cats.effect.IOFiber.execR
  [20] cats.effect.IOFiber.run
  [21] cats.effect.unsafe.WorkerThread.run

--- 26168195687 ns (1.81%), 2614 samples
  [ 0] __memset_avx2_unaligned_erms
  [ 1] MemAllocator::allocate() const
  [ 2] TypeArrayKlass::allocate_common(int, bool, JavaThread*)
  [ 3] JVMCIRuntime::new_array_common(JavaThread*, Klass*, int, bool)
  [ 4] java.nio.charset.Charset.forName
  [ 5] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [ 6] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25908.apply
  [ 7] cats.effect.IOFiber.$anonfun$8
  [ 8] cats.effect.IOFiber$$Lambda$196.0x0000000800dae2e0.apply
  [ 9] cats.effect.unsafe.WorkerThread.blockOn
  [10] scala.concurrent.package$.blocking
  [11] cats.effect.IOFiber.runLoop
  [12] cats.effect.IOFiber.execR
  [13] cats.effect.IOFiber.run
  [14] cats.effect.unsafe.WorkerThread.run

--- 25305092841 ns (1.75%), 2529 samples
  [ 0] java.io.InputStream.readNBytes
  [ 1] java.io.InputStream.readAllBytes
  [ 2] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [ 3] jdk.nio.zipfs.ZipPath.newByteChannel
  [ 4] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [ 5] java.nio.file.Files.newByteChannel
  [ 6] java.nio.file.Files.newByteChannel
  [ 7] java.nio.file.Files.readAllBytes
  [ 8] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [ 9] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25908.apply
  [10] cats.effect.IOFiber.$anonfun$8
  [11] cats.effect.IOFiber$$Lambda$196.0x0000000800dae2e0.apply
  [12] cats.effect.unsafe.WorkerThread.blockOn
  [13] scala.concurrent.package$.blocking
  [14] cats.effect.IOFiber.runLoop
  [15] cats.effect.IOFiber.execR
  [16] cats.effect.IOFiber.run
  [17] cats.effect.unsafe.WorkerThread.run

--- 20255175753 ns (1.40%), 2024 samples
  [ 0] java.lang.StringCoding.hasNegatives
  [ 1] java.lang.String.<init>
  [ 2] java.lang.String.<init>
  [ 3] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [ 4] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25908.apply
  [ 5] cats.effect.IOFiber.$anonfun$8
  [ 6] cats.effect.IOFiber$$Lambda$196.0x0000000800dae2e0.apply
  [ 7] cats.effect.unsafe.WorkerThread.blockOn
  [ 8] scala.concurrent.package$.blocking
  [ 9] cats.effect.IOFiber.runLoop
  [10] cats.effect.IOFiber.execR
  [11] cats.effect.IOFiber.run
  [12] cats.effect.unsafe.WorkerThread.run

--- 16503494507 ns (1.14%), 1643 samples
  [ 0] __memcpy_sse2_unaligned_erms
  [ 1] G1ParScanThreadState::steal_and_trim_queue(GenericTaskQueueSet<OverflowTaskQueue<ScannerTask, (MEMFLAGS)5, 131072u>, (MEMFLAGS)5>*)
  [ 2] G1ParEvacuateFollowersClosure::do_void()
  [ 3] G1EvacuateRegionsTask::evacuate_live_objects(G1ParScanThreadState*, unsigned int)
  [ 4] G1EvacuateRegionsBaseTask::work(unsigned int)
  [ 5] GangWorker::loop()
  [ 6] GangWorker::run()
  [ 7] Thread::call_run()
  [ 8] thread_native_entry(Thread*)
  [ 9] start_thread

--- 12029529776 ns (0.83%), 1198 samples
  [ 0] __memcpy_sse2_unaligned_erms
  [ 1] G1ParEvacuateFollowersClosure::do_void()
  [ 2] G1EvacuateRegionsTask::evacuate_live_objects(G1ParScanThreadState*, unsigned int)
  [ 3] G1EvacuateRegionsBaseTask::work(unsigned int)
  [ 4] GangWorker::loop()
  [ 5] GangWorker::run()
  [ 6] Thread::call_run()
  [ 7] thread_native_entry(Thread*)
  [ 8] start_thread

--- 9663166871 ns (0.67%), 966 samples
  [ 0] __memmove_avx_unaligned_erms
  [ 1] java.util.zip.Inflater.inflateBytesBytes
  [ 2] java.util.zip.Inflater.inflate
  [ 3] java.util.zip.InflaterInputStream.read
  [ 4] java.io.InputStream.readNBytes
  [ 5] java.io.InputStream.readAllBytes
  [ 6] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [ 7] jdk.nio.zipfs.ZipPath.newByteChannel
  [ 8] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [ 9] java.nio.file.Files.newByteChannel
  [10] java.nio.file.Files.newByteChannel
  [11] java.nio.file.Files.readAllBytes
  [12] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [13] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25908.apply
  [14] cats.effect.IOFiber.$anonfun$8
  [15] cats.effect.IOFiber$$Lambda$196.0x0000000800dae2e0.apply
  [16] cats.effect.unsafe.WorkerThread.blockOn
  [17] scala.concurrent.package$.blocking
  [18] cats.effect.IOFiber.runLoop
  [19] cats.effect.IOFiber.execR
  [20] cats.effect.IOFiber.run
  [21] cats.effect.unsafe.WorkerThread.run

--- 8251543720 ns (0.57%), 824 samples
  [ 0] copy_user_generic_string_[k]
  [ 1] zfs_uiomove_iter?[zfs]_[k]
  [ 2] zfs_uiomove?[zfs]_[k]
  [ 3] dmu_read_uio_dnode?[zfs]_[k]
  [ 4] dmu_read_uio_dbuf?[zfs]_[k]
  [ 5] mappedread?[zfs]_[k]
  [ 6] zfs_read?[zfs]_[k]
  [ 7] zpl_iter_read?[zfs]_[k]
  [ 8] new_sync_read_[k]
  [ 9] vfs_read_[k]
  [10] __x64_sys_pread64_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] __libc_pread64
  [14] sun.nio.ch.FileDispatcherImpl.pread0
  [15] sun.nio.ch.FileDispatcherImpl.pread
  [16] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [17] sun.nio.ch.IOUtil.read
  [18] sun.nio.ch.IOUtil.read
  [19] sun.nio.ch.FileChannelImpl.readInternal
  [20] sun.nio.ch.FileChannelImpl.read
  [21] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [22] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [23] jdk.nio.zipfs.ZipFileSystem$2.fill
  [24] java.util.zip.InflaterInputStream.read
  [25] java.io.InputStream.readNBytes
  [26] java.io.InputStream.readAllBytes
  [27] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [28] jdk.nio.zipfs.ZipPath.newByteChannel
  [29] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [30] java.nio.file.Files.newByteChannel
  [31] java.nio.file.Files.newByteChannel
  [32] java.nio.file.Files.readAllBytes
  [33] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [34] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25908.apply
  [35] cats.effect.IOFiber.$anonfun$8
  [36] cats.effect.IOFiber$$Lambda$196.0x0000000800dae2e0.apply
  [37] cats.effect.unsafe.WorkerThread.blockOn
  [38] scala.concurrent.package$.blocking
  [39] cats.effect.IOFiber.runLoop
  [40] cats.effect.IOFiber.execR
  [41] cats.effect.IOFiber.run
  [42] cats.effect.unsafe.WorkerThread.run

--- 6658640521 ns (0.46%), 665 samples
  [ 0] clear_page_rep_[k]
  [ 1] get_page_from_freelist_[k]
  [ 2] __alloc_pages_[k]
  [ 3] __folio_alloc_[k]
  [ 4] vma_alloc_folio_[k]
  [ 5] do_anonymous_page_[k]
  [ 6] handle_pte_fault_[k]
  [ 7] __handle_mm_fault_[k]
  [ 8] handle_mm_fault_[k]
  [ 9] do_user_addr_fault_[k]
  [10] exc_page_fault_[k]
  [11] asm_exc_page_fault_[k]
  [12] java.io.InputStream.readNBytes
  [13] java.io.InputStream.readAllBytes
  [14] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [15] jdk.nio.zipfs.ZipPath.newByteChannel
  [16] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [17] java.nio.file.Files.newByteChannel
  [18] java.nio.file.Files.newByteChannel
  [19] java.nio.file.Files.readAllBytes
  [20] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [21] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25908.apply
  [22] cats.effect.IOFiber.$anonfun$8
  [23] cats.effect.IOFiber$$Lambda$196.0x0000000800dae2e0.apply
  [24] cats.effect.unsafe.WorkerThread.blockOn
  [25] scala.concurrent.package$.blocking
  [26] cats.effect.IOFiber.runLoop
  [27] cats.effect.IOFiber.execR
  [28] cats.effect.IOFiber.run
  [29] cats.effect.unsafe.WorkerThread.run

--- 5564562377 ns (0.39%), 556 samples
  [ 0] java.util.Arrays.copyOfRange
  [ 1] java.lang.String.<init>
  [ 2] java.lang.String.<init>
  [ 3] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [ 4] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25908.apply
  [ 5] cats.effect.IOFiber.$anonfun$8
  [ 6] cats.effect.IOFiber$$Lambda$196.0x0000000800dae2e0.apply
  [ 7] cats.effect.unsafe.WorkerThread.blockOn
  [ 8] scala.concurrent.package$.blocking
  [ 9] cats.effect.IOFiber.runLoop
  [10] cats.effect.IOFiber.execR
  [11] cats.effect.IOFiber.run
  [12] cats.effect.unsafe.WorkerThread.run

--- 5379732867 ns (0.37%), 538 samples
  [ 0] inflate
  [ 1] java.util.zip.Inflater.inflateBytesBytes
  [ 2] java.util.zip.Inflater.inflate
  [ 3] java.util.zip.InflaterInputStream.read
  [ 4] java.io.InputStream.readNBytes
  [ 5] java.io.InputStream.readAllBytes
  [ 6] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [ 7] jdk.nio.zipfs.ZipPath.newByteChannel
  [ 8] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [ 9] java.nio.file.Files.newByteChannel
  [10] java.nio.file.Files.newByteChannel
  [11] java.nio.file.Files.readAllBytes
  [12] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [13] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25908.apply
  [14] cats.effect.IOFiber.$anonfun$8
  [15] cats.effect.IOFiber$$Lambda$196.0x0000000800dae2e0.apply
  [16] cats.effect.unsafe.WorkerThread.blockOn
  [17] scala.concurrent.package$.blocking
  [18] cats.effect.IOFiber.runLoop
  [19] cats.effect.IOFiber.execR
  [20] cats.effect.IOFiber.run
  [21] cats.effect.unsafe.WorkerThread.run

--- 5046787272 ns (0.35%), 504 samples
  [ 0] java.lang.System.arraycopy
  [ 1] java.io.InputStream.readNBytes
  [ 2] java.io.InputStream.readAllBytes
  [ 3] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [ 4] jdk.nio.zipfs.ZipPath.newByteChannel
  [ 5] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [ 6] java.nio.file.Files.newByteChannel
  [ 7] java.nio.file.Files.newByteChannel
  [ 8] java.nio.file.Files.readAllBytes
  [ 9] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [10] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25908.apply
  [11] cats.effect.IOFiber.$anonfun$8
  [12] cats.effect.IOFiber$$Lambda$196.0x0000000800dae2e0.apply
  [13] cats.effect.unsafe.WorkerThread.blockOn
  [14] scala.concurrent.package$.blocking
  [15] cats.effect.IOFiber.runLoop
  [16] cats.effect.IOFiber.execR
  [17] cats.effect.IOFiber.run
  [18] cats.effect.unsafe.WorkerThread.run

--- 4712934338 ns (0.33%), 471 samples
  [ 0] java.lang.System.arraycopy
  [ 1] java.nio.HeapByteBuffer.put
  [ 2] jdk.nio.zipfs.ByteArrayChannel.read
  [ 3] sun.nio.ch.ChannelInputStream.read
  [ 4] sun.nio.ch.ChannelInputStream.read
  [ 5] sun.nio.ch.ChannelInputStream.read
  [ 6] java.nio.file.Files.read
  [ 7] java.nio.file.Files.readAllBytes
  [ 8] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [ 9] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25908.apply
  [10] cats.effect.IOFiber.$anonfun$8
  [11] cats.effect.IOFiber$$Lambda$196.0x0000000800dae2e0.apply
  [12] cats.effect.unsafe.WorkerThread.blockOn
  [13] scala.concurrent.package$.blocking
  [14] cats.effect.IOFiber.runLoop
  [15] cats.effect.IOFiber.execR
  [16] cats.effect.IOFiber.run
  [17] cats.effect.unsafe.WorkerThread.run

--- 4027568774 ns (0.28%), 402 samples
  [ 0] __memset_avx2_unaligned_erms
  [ 1] MarkBitMap::do_clear(MemRegion, bool)
  [ 2] G1ClearBitMapTask::G1ClearBitmapHRClosure::do_heap_region(HeapRegion*)
  [ 3] HeapRegionManager::par_iterate(HeapRegionClosure*, HeapRegionClaimer*, unsigned int) const
  [ 4] G1ClearBitMapTask::work(unsigned int)
  [ 5] GangWorker::loop()
  [ 6] GangWorker::run()
  [ 7] Thread::call_run()
  [ 8] thread_native_entry(Thread*)
  [ 9] start_thread

--- 3971511452 ns (0.28%), 397 samples
  [ 0] java.util.Arrays.copyOfRange
  [ 1] java.lang.String.<init>
  [ 2] java.lang.String.<init>
  [ 3] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [ 4] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25908.apply
  [ 5] cats.effect.IOFiber.$anonfun$8
  [ 6] cats.effect.IOFiber$$Lambda$196.0x0000000800dae2e0.apply
  [ 7] cats.effect.unsafe.WorkerThread.blockOn
  [ 8] scala.concurrent.package$.blocking
  [ 9] cats.effect.IOFiber.runLoop
  [10] cats.effect.IOFiber.execR
  [11] cats.effect.IOFiber.run
  [12] cats.effect.unsafe.WorkerThread.run

--- 3511771618 ns (0.24%), 351 samples
  [ 0] java.lang.StringCoding.hasNegatives
  [ 1] java.lang.String.<init>
  [ 2] java.lang.String.<init>
  [ 3] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [ 4] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25908.apply
  [ 5] cats.effect.IOFiber.$anonfun$8
  [ 6] cats.effect.IOFiber$$Lambda$196.0x0000000800dae2e0.apply
  [ 7] cats.effect.unsafe.WorkerThread.blockOn
  [ 8] scala.concurrent.package$.blocking
  [ 9] cats.effect.IOFiber.runLoop
  [10] cats.effect.IOFiber.execR
  [11] cats.effect.IOFiber.run
  [12] cats.effect.unsafe.WorkerThread.run

--- 3364576869 ns (0.23%), 336 samples
  [ 0] __memset_avx2_unaligned_erms
  [ 1] MemAllocator::allocate() const
  [ 2] TypeArrayKlass::allocate_common(int, bool, JavaThread*)
  [ 3] JVMCIRuntime::new_array_common(JavaThread*, Klass*, int, bool)
  [ 4] java.io.InputStream.readNBytes
  [ 5] java.io.InputStream.readAllBytes
  [ 6] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [ 7] jdk.nio.zipfs.ZipPath.newByteChannel
  [ 8] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [ 9] java.nio.file.Files.newByteChannel
  [10] java.nio.file.Files.newByteChannel
  [11] java.nio.file.Files.readAllBytes
  [12] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [13] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25908.apply
  [14] cats.effect.IOFiber.$anonfun$8
  [15] cats.effect.IOFiber$$Lambda$196.0x0000000800dae2e0.apply
  [16] cats.effect.unsafe.WorkerThread.blockOn
  [17] scala.concurrent.package$.blocking
  [18] cats.effect.IOFiber.runLoop
  [19] cats.effect.IOFiber.execR
  [20] cats.effect.IOFiber.run
  [21] cats.effect.unsafe.WorkerThread.run

--- 3294537226 ns (0.23%), 329 samples
  [ 0] __memset_avx2_unaligned_erms
  [ 1] MemAllocator::allocate() const
  [ 2] TypeArrayKlass::allocate_common(int, bool, JavaThread*)
  [ 3] JVMCIRuntime::new_array_common(JavaThread*, Klass*, int, bool)
  [ 4] jdk.nio.zipfs.ByteArrayChannel.endRead
  [ 5] jdk.nio.zipfs.ByteArrayChannel.size
  [ 6] java.nio.file.Files.readAllBytes
  [ 7] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [ 8] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25908.apply
  [ 9] cats.effect.IOFiber.$anonfun$8
  [10] cats.effect.IOFiber$$Lambda$196.0x0000000800dae2e0.apply
  [11] cats.effect.unsafe.WorkerThread.blockOn
  [12] scala.concurrent.package$.blocking
  [13] cats.effect.IOFiber.runLoop
  [14] cats.effect.IOFiber.execR
  [15] cats.effect.IOFiber.run
  [16] cats.effect.unsafe.WorkerThread.run

--- 3161886159 ns (0.22%), 316 samples
  [ 0] do_user_addr_fault_[k]
  [ 1] exc_page_fault_[k]
  [ 2] asm_exc_page_fault_[k]
  [ 3] java.io.InputStream.readNBytes
  [ 4] java.io.InputStream.readAllBytes
  [ 5] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [ 6] jdk.nio.zipfs.ZipPath.newByteChannel
  [ 7] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [ 8] java.nio.file.Files.newByteChannel
  [ 9] java.nio.file.Files.newByteChannel
  [10] java.nio.file.Files.readAllBytes
  [11] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [12] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25908.apply
  [13] cats.effect.IOFiber.$anonfun$8
  [14] cats.effect.IOFiber$$Lambda$196.0x0000000800dae2e0.apply
  [15] cats.effect.unsafe.WorkerThread.blockOn
  [16] scala.concurrent.package$.blocking
  [17] cats.effect.IOFiber.runLoop
  [18] cats.effect.IOFiber.execR
  [19] cats.effect.IOFiber.run
  [20] cats.effect.unsafe.WorkerThread.run

--- 3130836946 ns (0.22%), 313 samples
  [ 0] jlong_disjoint_arraycopy
  [ 1] jdk.internal.misc.Unsafe.copyMemory0
  [ 2] jdk.internal.misc.Unsafe.copyMemory
  [ 3] jdk.internal.misc.ScopedMemoryAccess.copyMemoryInternal
  [ 4] jdk.internal.misc.ScopedMemoryAccess.copyMemory
  [ 5] java.nio.ByteBuffer.putBuffer
  [ 6] java.nio.ByteBuffer.put
  [ 7] java.nio.HeapByteBuffer.put
  [ 8] sun.nio.ch.IOUtil.read
  [ 9] sun.nio.ch.IOUtil.read
  [10] sun.nio.ch.FileChannelImpl.readInternal
  [11] sun.nio.ch.FileChannelImpl.read
  [12] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [13] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [14] jdk.nio.zipfs.ZipFileSystem$2.fill
  [15] java.util.zip.InflaterInputStream.read
  [16] java.io.InputStream.readNBytes
  [17] java.io.InputStream.readAllBytes
  [18] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [19] jdk.nio.zipfs.ZipPath.newByteChannel
  [20] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [21] java.nio.file.Files.newByteChannel
  [22] java.nio.file.Files.newByteChannel
  [23] java.nio.file.Files.readAllBytes
  [24] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [25] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25908.apply
  [26] cats.effect.IOFiber.$anonfun$8
  [27] cats.effect.IOFiber$$Lambda$196.0x0000000800dae2e0.apply
  [28] cats.effect.unsafe.WorkerThread.blockOn
  [29] scala.concurrent.package$.blocking
  [30] cats.effect.IOFiber.runLoop
  [31] cats.effect.IOFiber.execR
  [32] cats.effect.IOFiber.run
  [33] cats.effect.unsafe.WorkerThread.run

--- 3034212398 ns (0.21%), 303 samples
  [ 0] find_vmap_area_[k]
  [ 1] check_heap_object_[k]
  [ 2] __check_object_size.part.0_[k]
  [ 3] __check_object_size_[k]
  [ 4] zfs_uiomove_iter?[zfs]_[k]
  [ 5] zfs_uiomove?[zfs]_[k]
  [ 6] dmu_read_uio_dnode?[zfs]_[k]
  [ 7] dmu_read_uio_dbuf?[zfs]_[k]
  [ 8] mappedread?[zfs]_[k]
  [ 9] zfs_read?[zfs]_[k]
  [10] zpl_iter_read?[zfs]_[k]
  [11] new_sync_read_[k]
  [12] vfs_read_[k]
  [13] __x64_sys_pread64_[k]
  [14] do_syscall_64_[k]
  [15] entry_SYSCALL_64_after_hwframe_[k]
  [16] __libc_pread64
  [17] sun.nio.ch.FileDispatcherImpl.pread0
  [18] sun.nio.ch.FileDispatcherImpl.pread
  [19] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [20] sun.nio.ch.IOUtil.read
  [21] sun.nio.ch.IOUtil.read
  [22] sun.nio.ch.FileChannelImpl.readInternal
  [23] sun.nio.ch.FileChannelImpl.read
  [24] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [25] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [26] jdk.nio.zipfs.ZipFileSystem$2.fill
  [27] java.util.zip.InflaterInputStream.read
  [28] java.io.InputStream.readNBytes
  [29] java.io.InputStream.readAllBytes
  [30] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [31] jdk.nio.zipfs.ZipPath.newByteChannel
  [32] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [33] java.nio.file.Files.newByteChannel
  [34] java.nio.file.Files.newByteChannel
  [35] java.nio.file.Files.readAllBytes
  [36] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [37] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25908.apply
  [38] cats.effect.IOFiber.$anonfun$8
  [39] cats.effect.IOFiber$$Lambda$196.0x0000000800dae2e0.apply
  [40] cats.effect.unsafe.WorkerThread.blockOn
  [41] scala.concurrent.package$.blocking
  [42] cats.effect.IOFiber.runLoop
  [43] cats.effect.IOFiber.execR
  [44] cats.effect.IOFiber.run
  [45] cats.effect.unsafe.WorkerThread.run

--- 2963859708 ns (0.21%), 296 samples
  [ 0] __memset_avx2_unaligned_erms
  [ 1] MemAllocator::allocate() const
  [ 2] TypeArrayKlass::allocate_common(int, bool, JavaThread*)
  [ 3] JVMCIRuntime::new_array_common(JavaThread*, Klass*, int, bool)
  [ 4] java.nio.charset.Charset.forName
  [ 5] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [ 6] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25908.apply
  [ 7] cats.effect.IOFiber.$anonfun$8
  [ 8] cats.effect.IOFiber$$Lambda$196.0x0000000800dae2e0.apply
  [ 9] cats.effect.unsafe.WorkerThread.blockOn
  [10] scala.concurrent.package$.blocking
  [11] cats.effect.IOFiber.runLoop
  [12] cats.effect.IOFiber.execR
  [13] cats.effect.IOFiber.run
  [14] cats.effect.unsafe.WorkerThread.run

--- 2750906473 ns (0.19%), 275 samples
  [ 0] java.io.InputStream.readNBytes
  [ 1] java.io.InputStream.readAllBytes
  [ 2] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [ 3] jdk.nio.zipfs.ZipPath.newByteChannel
  [ 4] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [ 5] java.nio.file.Files.newByteChannel
  [ 6] java.nio.file.Files.newByteChannel
  [ 7] java.nio.file.Files.readAllBytes
  [ 8] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [ 9] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25908.apply
  [10] cats.effect.IOFiber.$anonfun$8
  [11] cats.effect.IOFiber$$Lambda$196.0x0000000800dae2e0.apply
  [12] cats.effect.unsafe.WorkerThread.blockOn
  [13] scala.concurrent.package$.blocking
  [14] cats.effect.IOFiber.runLoop
  [15] cats.effect.IOFiber.execR
  [16] cats.effect.IOFiber.run
  [17] cats.effect.unsafe.WorkerThread.run

--- 2421948305 ns (0.17%), 242 samples
  [ 0] zio_create?[zfs]_[k]
  [ 1] zio_null?[zfs]_[k]
  [ 2] zio_root?[zfs]_[k]
  [ 3] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 4] dmu_read_uio_dnode?[zfs]_[k]
  [ 5] dmu_read_uio_dbuf?[zfs]_[k]
  [ 6] mappedread?[zfs]_[k]
  [ 7] zfs_read?[zfs]_[k]
  [ 8] zpl_iter_read?[zfs]_[k]
  [ 9] new_sync_read_[k]
  [10] vfs_read_[k]
  [11] __x64_sys_pread64_[k]
  [12] do_syscall_64_[k]
  [13] entry_SYSCALL_64_after_hwframe_[k]
  [14] __libc_pread64
  [15] sun.nio.ch.FileDispatcherImpl.pread0
  [16] sun.nio.ch.FileDispatcherImpl.pread
  [17] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [18] sun.nio.ch.IOUtil.read
  [19] sun.nio.ch.IOUtil.read
  [20] sun.nio.ch.FileChannelImpl.readInternal
  [21] sun.nio.ch.FileChannelImpl.read
  [22] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [23] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [24] jdk.nio.zipfs.ZipFileSystem$2.fill
  [25] java.util.zip.InflaterInputStream.read
  [26] java.io.InputStream.readNBytes
  [27] java.io.InputStream.readAllBytes
  [28] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [29] jdk.nio.zipfs.ZipPath.newByteChannel
  [30] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [31] java.nio.file.Files.newByteChannel
  [32] java.nio.file.Files.newByteChannel
  [33] java.nio.file.Files.readAllBytes
  [34] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [35] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25908.apply
  [36] cats.effect.IOFiber.$anonfun$8
  [37] cats.effect.IOFiber$$Lambda$196.0x0000000800dae2e0.apply
  [38] cats.effect.unsafe.WorkerThread.blockOn
  [39] scala.concurrent.package$.blocking
  [40] cats.effect.IOFiber.runLoop
  [41] cats.effect.IOFiber.execR
  [42] cats.effect.IOFiber.run
  [43] cats.effect.unsafe.WorkerThread.run

--- 2271650696 ns (0.16%), 227 samples
  [ 0] java.lang.StringCoding.hasNegatives
  [ 1] java.lang.String.<init>
  [ 2] java.lang.String.<init>
  [ 3] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [ 4] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25908.apply
  [ 5] cats.effect.IOFiber.$anonfun$8
  [ 6] cats.effect.IOFiber$$Lambda$196.0x0000000800dae2e0.apply
  [ 7] cats.effect.unsafe.WorkerThread.blockOn
  [ 8] scala.concurrent.package$.blocking
  [ 9] cats.effect.IOFiber.runLoop
  [10] cats.effect.IOFiber.execR
  [11] cats.effect.IOFiber.run
  [12] cats.effect.unsafe.WorkerThread.run

--- 1877793544 ns (0.13%), 187 samples
  [ 0] G1ParScanThreadState::trim_queue_to_threshold(unsigned int)
  [ 1] G1ParScanThreadState::steal_and_trim_queue(GenericTaskQueueSet<OverflowTaskQueue<ScannerTask, (MEMFLAGS)5, 131072u>, (MEMFLAGS)5>*)
  [ 2] G1ParEvacuateFollowersClosure::do_void()
  [ 3] G1EvacuateRegionsTask::evacuate_live_objects(G1ParScanThreadState*, unsigned int)
  [ 4] G1EvacuateRegionsBaseTask::work(unsigned int)
  [ 5] GangWorker::loop()
  [ 6] GangWorker::run()
  [ 7] Thread::call_run()
  [ 8] thread_native_entry(Thread*)
  [ 9] start_thread

--- 1521502115 ns (0.11%), 152 samples
  [ 0] java.io.InputStream.readNBytes
  [ 1] java.io.InputStream.readAllBytes
  [ 2] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [ 3] jdk.nio.zipfs.ZipPath.newByteChannel
  [ 4] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [ 5] java.nio.file.Files.newByteChannel
  [ 6] java.nio.file.Files.newByteChannel
  [ 7] java.nio.file.Files.readAllBytes
  [ 8] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [ 9] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25908.apply
  [10] cats.effect.IOFiber.$anonfun$8
  [11] cats.effect.IOFiber$$Lambda$196.0x0000000800dae2e0.apply
  [12] cats.effect.unsafe.WorkerThread.blockOn
  [13] scala.concurrent.package$.blocking
  [14] cats.effect.IOFiber.runLoop
  [15] cats.effect.IOFiber.execR
  [16] cats.effect.IOFiber.run
  [17] cats.effect.unsafe.WorkerThread.run

--- 1512188750 ns (0.10%), 151 samples
  [ 0] memset_[k]
  [ 1] spl_kmem_cache_alloc?[spl]_[k]
  [ 2] zio_create?[zfs]_[k]
  [ 3] zio_null?[zfs]_[k]
  [ 4] zio_root?[zfs]_[k]
  [ 5] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 6] dmu_read_uio_dnode?[zfs]_[k]
  [ 7] dmu_read_uio_dbuf?[zfs]_[k]
  [ 8] mappedread?[zfs]_[k]
  [ 9] zfs_read?[zfs]_[k]
  [10] zpl_iter_read?[zfs]_[k]
  [11] new_sync_read_[k]
  [12] vfs_read_[k]
  [13] __x64_sys_pread64_[k]
  [14] do_syscall_64_[k]
  [15] entry_SYSCALL_64_after_hwframe_[k]
  [16] __libc_pread64
  [17] sun.nio.ch.FileDispatcherImpl.pread0
  [18] sun.nio.ch.FileDispatcherImpl.pread
  [19] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [20] sun.nio.ch.IOUtil.read
  [21] sun.nio.ch.IOUtil.read
  [22] sun.nio.ch.FileChannelImpl.readInternal
  [23] sun.nio.ch.FileChannelImpl.read
  [24] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [25] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [26] jdk.nio.zipfs.ZipFileSystem$2.fill
  [27] java.util.zip.InflaterInputStream.read
  [28] java.io.InputStream.readNBytes
  [29] java.io.InputStream.readAllBytes
  [30] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [31] jdk.nio.zipfs.ZipPath.newByteChannel
  [32] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [33] java.nio.file.Files.newByteChannel
  [34] java.nio.file.Files.newByteChannel
  [35] java.nio.file.Files.readAllBytes
  [36] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [37] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25908.apply
  [38] cats.effect.IOFiber.$anonfun$8
  [39] cats.effect.IOFiber$$Lambda$196.0x0000000800dae2e0.apply
  [40] cats.effect.unsafe.WorkerThread.blockOn
  [41] scala.concurrent.package$.blocking
  [42] cats.effect.IOFiber.runLoop
  [43] cats.effect.IOFiber.execR
  [44] cats.effect.IOFiber.run
  [45] cats.effect.unsafe.WorkerThread.run

--- 1355506386 ns (0.09%), 135 samples
  [ 0] G1ParScanThreadState::trim_queue_to_threshold(unsigned int)
  [ 1] G1ParEvacuateFollowersClosure::do_void()
  [ 2] G1EvacuateRegionsTask::evacuate_live_objects(G1ParScanThreadState*, unsigned int)
  [ 3] G1EvacuateRegionsBaseTask::work(unsigned int)
  [ 4] GangWorker::loop()
  [ 5] GangWorker::run()
  [ 6] Thread::call_run()
  [ 7] thread_native_entry(Thread*)
  [ 8] start_thread

--- 1319987659 ns (0.09%), 132 samples
  [ 0] void OopOopIterateDispatch<G1CMOopClosure>::Table::oop_oop_iterate<InstanceKlass, narrowOop>(G1CMOopClosure*, oopDesc*, Klass*)
  [ 1] void G1CMTask::process_grey_task_entry<true>(G1TaskQueueEntry)
  [ 2] G1CMTask::do_marking_step(double, bool, bool)
  [ 3] G1CMConcurrentMarkingTask::work(unsigned int)
  [ 4] GangWorker::loop()
  [ 5] GangWorker::run()
  [ 6] Thread::call_run()
  [ 7] thread_native_entry(Thread*)
  [ 8] start_thread

--- 1319868178 ns (0.09%), 132 samples
  [ 0] /usr/lib/x86_64-linux-gnu/libz.so.1.2.11
  [ 1] java.util.zip.Inflater.inflateBytesBytes
  [ 2] java.util.zip.Inflater.inflate
  [ 3] java.util.zip.InflaterInputStream.read
  [ 4] java.io.InputStream.readNBytes
  [ 5] java.io.InputStream.readAllBytes
  [ 6] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [ 7] jdk.nio.zipfs.ZipPath.newByteChannel
  [ 8] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [ 9] java.nio.file.Files.newByteChannel
  [10] java.nio.file.Files.newByteChannel
  [11] java.nio.file.Files.readAllBytes
  [12] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [13] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25908.apply
  [14] cats.effect.IOFiber.$anonfun$8
  [15] cats.effect.IOFiber$$Lambda$196.0x0000000800dae2e0.apply
  [16] cats.effect.unsafe.WorkerThread.blockOn
  [17] scala.concurrent.package$.blocking
  [18] cats.effect.IOFiber.runLoop
  [19] cats.effect.IOFiber.execR
  [20] cats.effect.IOFiber.run
  [21] cats.effect.unsafe.WorkerThread.run

--- 1291838634 ns (0.09%), 129 samples
  [ 0] clear_page_rep_[k]
  [ 1] get_page_from_freelist_[k]
  [ 2] __alloc_pages_[k]
  [ 3] __folio_alloc_[k]
  [ 4] vma_alloc_folio_[k]
  [ 5] do_anonymous_page_[k]
  [ 6] handle_pte_fault_[k]
  [ 7] __handle_mm_fault_[k]
  [ 8] handle_mm_fault_[k]
  [ 9] do_user_addr_fault_[k]
  [10] exc_page_fault_[k]
  [11] asm_exc_page_fault_[k]
  [12] __memset_avx2_unaligned_erms
  [13] MemAllocator::allocate() const
  [14] TypeArrayKlass::allocate_common(int, bool, JavaThread*)
  [15] JVMCIRuntime::new_array_common(JavaThread*, Klass*, int, bool)
  [16] java.io.InputStream.readNBytes
  [17] java.io.InputStream.readAllBytes
  [18] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [19] jdk.nio.zipfs.ZipPath.newByteChannel
  [20] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [21] java.nio.file.Files.newByteChannel
  [22] java.nio.file.Files.newByteChannel
  [23] java.nio.file.Files.readAllBytes
  [24] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [25] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25908.apply
  [26] cats.effect.IOFiber.$anonfun$8
  [27] cats.effect.IOFiber$$Lambda$196.0x0000000800dae2e0.apply
  [28] cats.effect.unsafe.WorkerThread.blockOn
  [29] scala.concurrent.package$.blocking
  [30] cats.effect.IOFiber.runLoop
  [31] cats.effect.IOFiber.execR
  [32] cats.effect.IOFiber.run
  [33] cats.effect.unsafe.WorkerThread.run

--- 1235978424 ns (0.09%), 124 samples
  [ 0] zap_pte_range_[k]
  [ 1] zap_pmd_range.isra.0_[k]
  [ 2] unmap_page_range_[k]
  [ 3] unmap_single_vma_[k]
  [ 4] unmap_vmas_[k]
  [ 5] unmap_region_[k]
  [ 6] __do_munmap_[k]
  [ 7] mmap_region_[k]
  [ 8] do_mmap_[k]
  [ 9] vm_mmap_pgoff_[k]
  [10] ksys_mmap_pgoff_[k]
  [11] __x64_sys_mmap_[k]
  [12] do_syscall_64_[k]
  [13] entry_SYSCALL_64_after_hwframe_[k]
  [14] __GI___mmap
  [15] G1PageBasedVirtualSpace::uncommit(unsigned long, unsigned long)
  [16] G1RegionsLargerThanCommitSizeMapper::uncommit_regions(unsigned int, unsigned long)
  [17] HeapRegionManager::uncommit_regions(unsigned int, unsigned int)
  [18] HeapRegionManager::uncommit_inactive_regions(unsigned int)
  [19] G1UncommitRegionTask::execute()
  [20] G1ServiceThread::run_task(G1ServiceTask*)
  [21] G1ServiceThread::run_service()
  [22] ConcurrentGCThread::run()
  [23] Thread::call_run()
  [24] thread_native_entry(Thread*)
  [25] start_thread

--- 1231128515 ns (0.09%), 123 samples
  [ 0] clear_page_rep_[k]
  [ 1] get_page_from_freelist_[k]
  [ 2] __alloc_pages_[k]
  [ 3] __folio_alloc_[k]
  [ 4] vma_alloc_folio_[k]
  [ 5] do_anonymous_page_[k]
  [ 6] handle_pte_fault_[k]
  [ 7] __handle_mm_fault_[k]
  [ 8] handle_mm_fault_[k]
  [ 9] do_user_addr_fault_[k]
  [10] exc_page_fault_[k]
  [11] asm_exc_page_fault_[k]
  [12] __memset_avx2_unaligned_erms
  [13] MemAllocator::allocate() const
  [14] TypeArrayKlass::allocate_common(int, bool, JavaThread*)
  [15] JVMCIRuntime::new_array_common(JavaThread*, Klass*, int, bool)
  [16] java.nio.charset.Charset.forName
  [17] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [18] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25908.apply
  [19] cats.effect.IOFiber.$anonfun$8
  [20] cats.effect.IOFiber$$Lambda$196.0x0000000800dae2e0.apply
  [21] cats.effect.unsafe.WorkerThread.blockOn
  [22] scala.concurrent.package$.blocking
  [23] cats.effect.IOFiber.runLoop
  [24] cats.effect.IOFiber.execR
  [25] cats.effect.IOFiber.run
  [26] cats.effect.unsafe.WorkerThread.run

--- 1209582377 ns (0.08%), 121 samples
  [ 0] void OopOopIterateDispatch<G1CMOopClosure>::Table::oop_oop_iterate<InstanceKlass, narrowOop>(G1CMOopClosure*, oopDesc*, Klass*)
  [ 1] void G1CMTask::process_grey_task_entry<true>(G1TaskQueueEntry)
  [ 2] G1CMTask::drain_local_queue(bool) [clone .part.0] [clone .constprop.1]
  [ 3] G1CMTask::do_marking_step(double, bool, bool)
  [ 4] G1CMConcurrentMarkingTask::work(unsigned int)
  [ 5] GangWorker::loop()
  [ 6] GangWorker::run()
  [ 7] Thread::call_run()
  [ 8] thread_native_entry(Thread*)
  [ 9] start_thread

--- 1201580645 ns (0.08%), 120 samples
  [ 0] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 1] dmu_read_uio_dnode?[zfs]_[k]
  [ 2] dmu_read_uio_dbuf?[zfs]_[k]
  [ 3] mappedread?[zfs]_[k]
  [ 4] zfs_read?[zfs]_[k]
  [ 5] zpl_iter_read?[zfs]_[k]
  [ 6] new_sync_read_[k]
  [ 7] vfs_read_[k]
  [ 8] __x64_sys_pread64_[k]
  [ 9] do_syscall_64_[k]
  [10] entry_SYSCALL_64_after_hwframe_[k]
  [11] __libc_pread64
  [12] sun.nio.ch.FileDispatcherImpl.pread0
  [13] sun.nio.ch.FileDispatcherImpl.pread
  [14] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [15] sun.nio.ch.IOUtil.read
  [16] sun.nio.ch.IOUtil.read
  [17] sun.nio.ch.FileChannelImpl.readInternal
  [18] sun.nio.ch.FileChannelImpl.read
  [19] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [20] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [21] jdk.nio.zipfs.ZipFileSystem$2.fill
  [22] java.util.zip.InflaterInputStream.read
  [23] java.io.InputStream.readNBytes
  [24] java.io.InputStream.readAllBytes
  [25] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [26] jdk.nio.zipfs.ZipPath.newByteChannel
  [27] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [28] java.nio.file.Files.newByteChannel
  [29] java.nio.file.Files.newByteChannel
  [30] java.nio.file.Files.readAllBytes
  [31] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [32] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25908.apply
  [33] cats.effect.IOFiber.$anonfun$8
  [34] cats.effect.IOFiber$$Lambda$196.0x0000000800dae2e0.apply
  [35] cats.effect.unsafe.WorkerThread.blockOn
  [36] scala.concurrent.package$.blocking
  [37] cats.effect.IOFiber.runLoop
  [38] cats.effect.IOFiber.execR
  [39] cats.effect.IOFiber.run
  [40] cats.effect.unsafe.WorkerThread.run

--- 1180222541 ns (0.08%), 118 samples
  [ 0] G1RebuildRemSetTask::G1RebuildRemSetHeapRegionClosure::do_heap_region(HeapRegion*)
  [ 1] HeapRegionManager::par_iterate(HeapRegionClosure*, HeapRegionClaimer*, unsigned int) const
  [ 2] G1RebuildRemSetTask::work(unsigned int)
  [ 3] GangWorker::loop()
  [ 4] GangWorker::run()
  [ 5] Thread::call_run()
  [ 6] thread_native_entry(Thread*)
  [ 7] start_thread

--- 1178713896 ns (0.08%), 117 samples
  [ 0] free_unref_page_list_[k]
  [ 1] release_pages_[k]
  [ 2] free_pages_and_swap_cache_[k]
  [ 3] tlb_batch_pages_flush_[k]
  [ 4] tlb_flush_mmu_[k]
  [ 5] zap_pte_range_[k]
  [ 6] zap_pmd_range.isra.0_[k]
  [ 7] unmap_page_range_[k]
  [ 8] unmap_single_vma_[k]
  [ 9] unmap_vmas_[k]
  [10] unmap_region_[k]
  [11] __do_munmap_[k]
  [12] mmap_region_[k]
  [13] do_mmap_[k]
  [14] vm_mmap_pgoff_[k]
  [15] ksys_mmap_pgoff_[k]
  [16] __x64_sys_mmap_[k]
  [17] do_syscall_64_[k]
  [18] entry_SYSCALL_64_after_hwframe_[k]
  [19] __GI___mmap
  [20] G1PageBasedVirtualSpace::uncommit(unsigned long, unsigned long)
  [21] G1RegionsLargerThanCommitSizeMapper::uncommit_regions(unsigned int, unsigned long)
  [22] HeapRegionManager::uncommit_regions(unsigned int, unsigned int)
  [23] HeapRegionManager::uncommit_inactive_regions(unsigned int)
  [24] G1UncommitRegionTask::execute()
  [25] G1ServiceThread::run_task(G1ServiceTask*)
  [26] G1ServiceThread::run_service()
  [27] ConcurrentGCThread::run()
  [28] Thread::call_run()
  [29] thread_native_entry(Thread*)
  [30] start_thread

--- 1171754476 ns (0.08%), 117 samples
  [ 0] clear_page_rep_[k]
  [ 1] get_page_from_freelist_[k]
  [ 2] __alloc_pages_[k]
  [ 3] __folio_alloc_[k]
  [ 4] vma_alloc_folio_[k]
  [ 5] do_anonymous_page_[k]
  [ 6] handle_pte_fault_[k]
  [ 7] __handle_mm_fault_[k]
  [ 8] handle_mm_fault_[k]
  [ 9] do_user_addr_fault_[k]
  [10] exc_page_fault_[k]
  [11] asm_exc_page_fault_[k]
  [12] __memset_avx2_unaligned_erms
  [13] MemAllocator::allocate() const
  [14] TypeArrayKlass::allocate_common(int, bool, JavaThread*)
  [15] JVMCIRuntime::new_array_common(JavaThread*, Klass*, int, bool)
  [16] jdk.nio.zipfs.ByteArrayChannel.endRead
  [17] jdk.nio.zipfs.ByteArrayChannel.size
  [18] java.nio.file.Files.readAllBytes
  [19] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [20] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25908.apply
  [21] cats.effect.IOFiber.$anonfun$8
  [22] cats.effect.IOFiber$$Lambda$196.0x0000000800dae2e0.apply
  [23] cats.effect.unsafe.WorkerThread.blockOn
  [24] scala.concurrent.package$.blocking
  [25] cats.effect.IOFiber.runLoop
  [26] cats.effect.IOFiber.execR
  [27] cats.effect.IOFiber.run
  [28] cats.effect.unsafe.WorkerThread.run

--- 1151280735 ns (0.08%), 115 samples
  [ 0] zio_wait?[zfs]_[k]
  [ 1] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 2] dmu_read_uio_dnode?[zfs]_[k]
  [ 3] dmu_read_uio_dbuf?[zfs]_[k]
  [ 4] mappedread?[zfs]_[k]
  [ 5] zfs_read?[zfs]_[k]
  [ 6] zpl_iter_read?[zfs]_[k]
  [ 7] new_sync_read_[k]
  [ 8] vfs_read_[k]
  [ 9] __x64_sys_pread64_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] __libc_pread64
  [13] sun.nio.ch.FileDispatcherImpl.pread0
  [14] sun.nio.ch.FileDispatcherImpl.pread
  [15] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [16] sun.nio.ch.IOUtil.read
  [17] sun.nio.ch.IOUtil.read
  [18] sun.nio.ch.FileChannelImpl.readInternal
  [19] sun.nio.ch.FileChannelImpl.read
  [20] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [21] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [22] jdk.nio.zipfs.ZipFileSystem$2.fill
  [23] java.util.zip.InflaterInputStream.read
  [24] java.io.InputStream.readNBytes
  [25] java.io.InputStream.readAllBytes
  [26] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [27] jdk.nio.zipfs.ZipPath.newByteChannel
  [28] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [29] java.nio.file.Files.newByteChannel
  [30] java.nio.file.Files.newByteChannel
  [31] java.nio.file.Files.readAllBytes
  [32] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [33] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25908.apply
  [34] cats.effect.IOFiber.$anonfun$8
  [35] cats.effect.IOFiber$$Lambda$196.0x0000000800dae2e0.apply
  [36] cats.effect.unsafe.WorkerThread.blockOn
  [37] scala.concurrent.package$.blocking
  [38] cats.effect.IOFiber.runLoop
  [39] cats.effect.IOFiber.execR
  [40] cats.effect.IOFiber.run
  [41] cats.effect.unsafe.WorkerThread.run

--- 1130834018 ns (0.08%), 113 samples
  [ 0] dbuf_rele_and_unlock?[zfs]_[k]
  [ 1] dbuf_rele?[zfs]_[k]
  [ 2] dmu_buf_rele_array?[zfs]_[k]
  [ 3] dmu_read_uio_dnode?[zfs]_[k]
  [ 4] dmu_read_uio_dbuf?[zfs]_[k]
  [ 5] mappedread?[zfs]_[k]
  [ 6] zfs_read?[zfs]_[k]
  [ 7] zpl_iter_read?[zfs]_[k]
  [ 8] new_sync_read_[k]
  [ 9] vfs_read_[k]
  [10] __x64_sys_pread64_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] __libc_pread64
  [14] sun.nio.ch.FileDispatcherImpl.pread0
  [15] sun.nio.ch.FileDispatcherImpl.pread
  [16] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [17] sun.nio.ch.IOUtil.read
  [18] sun.nio.ch.IOUtil.read
  [19] sun.nio.ch.FileChannelImpl.readInternal
  [20] sun.nio.ch.FileChannelImpl.read
  [21] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [22] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [23] jdk.nio.zipfs.ZipFileSystem$2.fill
  [24] java.util.zip.InflaterInputStream.read
  [25] java.io.InputStream.readNBytes
  [26] java.io.InputStream.readAllBytes
  [27] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [28] jdk.nio.zipfs.ZipPath.newByteChannel
  [29] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [30] java.nio.file.Files.newByteChannel
  [31] java.nio.file.Files.newByteChannel
  [32] java.nio.file.Files.readAllBytes
  [33] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [34] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25908.apply
  [35] cats.effect.IOFiber.$anonfun$8
  [36] cats.effect.IOFiber$$Lambda$196.0x0000000800dae2e0.apply
  [37] cats.effect.unsafe.WorkerThread.blockOn
  [38] scala.concurrent.package$.blocking
  [39] cats.effect.IOFiber.runLoop
  [40] cats.effect.IOFiber.execR
  [41] cats.effect.IOFiber.run
  [42] cats.effect.unsafe.WorkerThread.run

--- 1110514529 ns (0.08%), 111 samples
  [ 0] jni_GetPrimitiveArrayCritical
  [ 1] Java_java_util_zip_Inflater_inflateBytesBytes
  [ 2] java.util.zip.Inflater.inflateBytesBytes
  [ 3] java.util.zip.Inflater.inflate
  [ 4] java.util.zip.InflaterInputStream.read
  [ 5] java.io.InputStream.readNBytes
  [ 6] java.io.InputStream.readAllBytes
  [ 7] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [ 8] jdk.nio.zipfs.ZipPath.newByteChannel
  [ 9] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [10] java.nio.file.Files.newByteChannel
  [11] java.nio.file.Files.newByteChannel
  [12] java.nio.file.Files.readAllBytes
  [13] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [14] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25908.apply
  [15] cats.effect.IOFiber.$anonfun$8
  [16] cats.effect.IOFiber$$Lambda$196.0x0000000800dae2e0.apply
  [17] cats.effect.unsafe.WorkerThread.blockOn
  [18] scala.concurrent.package$.blocking
  [19] cats.effect.IOFiber.runLoop
  [20] cats.effect.IOFiber.execR
  [21] cats.effect.IOFiber.run
  [22] cats.effect.unsafe.WorkerThread.run

--- 1061883667 ns (0.07%), 106 samples
  [ 0] kmem_cache_free_[k]
  [ 1] spl_kmem_cache_free?[spl]_[k]
  [ 2] zio_destroy?[zfs]_[k]
  [ 3] zio_wait?[zfs]_[k]
  [ 4] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 5] dmu_read_uio_dnode?[zfs]_[k]
  [ 6] dmu_read_uio_dbuf?[zfs]_[k]
  [ 7] mappedread?[zfs]_[k]
  [ 8] zfs_read?[zfs]_[k]
  [ 9] zpl_iter_read?[zfs]_[k]
  [10] new_sync_read_[k]
  [11] vfs_read_[k]
  [12] __x64_sys_pread64_[k]
  [13] do_syscall_64_[k]
  [14] entry_SYSCALL_64_after_hwframe_[k]
  [15] __libc_pread64
  [16] sun.nio.ch.FileDispatcherImpl.pread0
  [17] sun.nio.ch.FileDispatcherImpl.pread
  [18] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [19] sun.nio.ch.IOUtil.read
  [20] sun.nio.ch.IOUtil.read
  [21] sun.nio.ch.FileChannelImpl.readInternal
  [22] sun.nio.ch.FileChannelImpl.read
  [23] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [24] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [25] jdk.nio.zipfs.ZipFileSystem$2.fill
  [26] java.util.zip.InflaterInputStream.read
  [27] java.io.InputStream.readNBytes
  [28] java.io.InputStream.readAllBytes
  [29] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [30] jdk.nio.zipfs.ZipPath.newByteChannel
  [31] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [32] java.nio.file.Files.newByteChannel
  [33] java.nio.file.Files.newByteChannel
  [34] java.nio.file.Files.readAllBytes
  [35] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [36] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25908.apply
  [37] cats.effect.IOFiber.$anonfun$8
  [38] cats.effect.IOFiber$$Lambda$196.0x0000000800dae2e0.apply
  [39] cats.effect.unsafe.WorkerThread.blockOn
  [40] scala.concurrent.package$.blocking
  [41] cats.effect.IOFiber.runLoop
  [42] cats.effect.IOFiber.execR
  [43] cats.effect.IOFiber.run
  [44] cats.effect.unsafe.WorkerThread.run

--- 1060096488 ns (0.07%), 106 samples
  [ 0] __memmove_avx_unaligned_erms
  [ 1] java.util.zip.Inflater.inflateBytesBytes
  [ 2] java.util.zip.Inflater.inflate
  [ 3] java.util.zip.InflaterInputStream.read
  [ 4] java.io.InputStream.readNBytes
  [ 5] java.io.InputStream.readAllBytes
  [ 6] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [ 7] jdk.nio.zipfs.ZipPath.newByteChannel
  [ 8] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [ 9] java.nio.file.Files.newByteChannel
  [10] java.nio.file.Files.newByteChannel
  [11] java.nio.file.Files.readAllBytes
  [12] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [13] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25908.apply
  [14] cats.effect.IOFiber.$anonfun$8
  [15] cats.effect.IOFiber$$Lambda$196.0x0000000800dae2e0.apply
  [16] cats.effect.unsafe.WorkerThread.blockOn
  [17] scala.concurrent.package$.blocking
  [18] cats.effect.IOFiber.runLoop
  [19] cats.effect.IOFiber.execR
  [20] cats.effect.IOFiber.run
  [21] cats.effect.unsafe.WorkerThread.run

--- 1051706106 ns (0.07%), 105 samples
  [ 0] clear_page_rep_[k]
  [ 1] get_page_from_freelist_[k]
  [ 2] __alloc_pages_[k]
  [ 3] __folio_alloc_[k]
  [ 4] vma_alloc_folio_[k]
  [ 5] do_anonymous_page_[k]
  [ 6] handle_pte_fault_[k]
  [ 7] __handle_mm_fault_[k]
  [ 8] handle_mm_fault_[k]
  [ 9] do_user_addr_fault_[k]
  [10] exc_page_fault_[k]
  [11] asm_exc_page_fault_[k]
  [12] __memcpy_sse2_unaligned_erms
  [13] G1ParScanThreadState::steal_and_trim_queue(GenericTaskQueueSet<OverflowTaskQueue<ScannerTask, (MEMFLAGS)5, 131072u>, (MEMFLAGS)5>*)
  [14] G1ParEvacuateFollowersClosure::do_void()
  [15] G1EvacuateRegionsTask::evacuate_live_objects(G1ParScanThreadState*, unsigned int)
  [16] G1EvacuateRegionsBaseTask::work(unsigned int)
  [17] GangWorker::loop()
  [18] GangWorker::run()
  [19] Thread::call_run()
  [20] thread_native_entry(Thread*)
  [21] start_thread

--- 1049715259 ns (0.07%), 105 samples
  [ 0] /usr/lib/x86_64-linux-gnu/libz.so.1.2.11
  [ 1] [unknown]
  [ 2] java.util.zip.Inflater.inflateBytesBytes
  [ 3] java.util.zip.Inflater.inflate
  [ 4] java.util.zip.InflaterInputStream.read
  [ 5] java.io.InputStream.readNBytes
  [ 6] java.io.InputStream.readAllBytes
  [ 7] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [ 8] jdk.nio.zipfs.ZipPath.newByteChannel
  [ 9] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [10] java.nio.file.Files.newByteChannel
  [11] java.nio.file.Files.newByteChannel
  [12] java.nio.file.Files.readAllBytes
  [13] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [14] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25908.apply
  [15] cats.effect.IOFiber.$anonfun$8
  [16] cats.effect.IOFiber$$Lambda$196.0x0000000800dae2e0.apply
  [17] cats.effect.unsafe.WorkerThread.blockOn
  [18] scala.concurrent.package$.blocking
  [19] cats.effect.IOFiber.runLoop
  [20] cats.effect.IOFiber.execR
  [21] cats.effect.IOFiber.run
  [22] cats.effect.unsafe.WorkerThread.run

--- 1021521349 ns (0.07%), 102 samples
  [ 0] __fget_light_[k]
  [ 1] __fdget_[k]
  [ 2] __x64_sys_pread64_[k]
  [ 3] do_syscall_64_[k]
  [ 4] entry_SYSCALL_64_after_hwframe_[k]
  [ 5] __libc_pread64
  [ 6] sun.nio.ch.FileDispatcherImpl.pread0
  [ 7] sun.nio.ch.FileDispatcherImpl.pread
  [ 8] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [ 9] sun.nio.ch.IOUtil.read
  [10] sun.nio.ch.IOUtil.read
  [11] sun.nio.ch.FileChannelImpl.readInternal
  [12] sun.nio.ch.FileChannelImpl.read
  [13] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [14] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [15] jdk.nio.zipfs.ZipFileSystem$2.fill
  [16] java.util.zip.InflaterInputStream.read
  [17] java.io.InputStream.readNBytes
  [18] java.io.InputStream.readAllBytes
  [19] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [20] jdk.nio.zipfs.ZipPath.newByteChannel
  [21] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [22] java.nio.file.Files.newByteChannel
  [23] java.nio.file.Files.newByteChannel
  [24] java.nio.file.Files.readAllBytes
  [25] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [26] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25908.apply
  [27] cats.effect.IOFiber.$anonfun$8
  [28] cats.effect.IOFiber$$Lambda$196.0x0000000800dae2e0.apply
  [29] cats.effect.unsafe.WorkerThread.blockOn
  [30] scala.concurrent.package$.blocking
  [31] cats.effect.IOFiber.runLoop
  [32] cats.effect.IOFiber.execR
  [33] cats.effect.IOFiber.run
  [34] cats.effect.unsafe.WorkerThread.run

--- 1011233276 ns (0.07%), 101 samples
  [ 0] rmqueue_pcplist.constprop.0_[k]
  [ 1] rmqueue_[k]
  [ 2] get_page_from_freelist_[k]
  [ 3] __alloc_pages_[k]
  [ 4] __folio_alloc_[k]
  [ 5] vma_alloc_folio_[k]
  [ 6] do_anonymous_page_[k]
  [ 7] handle_pte_fault_[k]
  [ 8] __handle_mm_fault_[k]
  [ 9] handle_mm_fault_[k]
  [10] do_user_addr_fault_[k]
  [11] exc_page_fault_[k]
  [12] asm_exc_page_fault_[k]
  [13] java.io.InputStream.readNBytes
  [14] java.io.InputStream.readAllBytes
  [15] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [16] jdk.nio.zipfs.ZipPath.newByteChannel
  [17] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [18] java.nio.file.Files.newByteChannel
  [19] java.nio.file.Files.newByteChannel
  [20] java.nio.file.Files.readAllBytes
  [21] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [22] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25908.apply
  [23] cats.effect.IOFiber.$anonfun$8
  [24] cats.effect.IOFiber$$Lambda$196.0x0000000800dae2e0.apply
  [25] cats.effect.unsafe.WorkerThread.blockOn
  [26] scala.concurrent.package$.blocking
  [27] cats.effect.IOFiber.runLoop
  [28] cats.effect.IOFiber.execR
  [29] cats.effect.IOFiber.run
  [30] cats.effect.unsafe.WorkerThread.run

--- 1001801824 ns (0.07%), 100 samples
  [ 0] kmem_cache_alloc_[k]
  [ 1] spl_kmem_cache_alloc?[spl]_[k]
  [ 2] zio_create?[zfs]_[k]
  [ 3] zio_null?[zfs]_[k]
  [ 4] zio_root?[zfs]_[k]
  [ 5] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 6] dmu_read_uio_dnode?[zfs]_[k]
  [ 7] dmu_read_uio_dbuf?[zfs]_[k]
  [ 8] mappedread?[zfs]_[k]
  [ 9] zfs_read?[zfs]_[k]
  [10] zpl_iter_read?[zfs]_[k]
  [11] new_sync_read_[k]
  [12] vfs_read_[k]
  [13] __x64_sys_pread64_[k]
  [14] do_syscall_64_[k]
  [15] entry_SYSCALL_64_after_hwframe_[k]
  [16] __libc_pread64
  [17] sun.nio.ch.FileDispatcherImpl.pread0
  [18] sun.nio.ch.FileDispatcherImpl.pread
  [19] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [20] sun.nio.ch.IOUtil.read
  [21] sun.nio.ch.IOUtil.read
  [22] sun.nio.ch.FileChannelImpl.readInternal
  [23] sun.nio.ch.FileChannelImpl.read
  [24] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [25] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [26] jdk.nio.zipfs.ZipFileSystem$2.fill
  [27] java.util.zip.InflaterInputStream.read
  [28] java.io.InputStream.readNBytes
  [29] java.io.InputStream.readAllBytes
  [30] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [31] jdk.nio.zipfs.ZipPath.newByteChannel
  [32] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [33] java.nio.file.Files.newByteChannel
  [34] java.nio.file.Files.newByteChannel
  [35] java.nio.file.Files.readAllBytes
  [36] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [37] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25908.apply
  [38] cats.effect.IOFiber.$anonfun$8
  [39] cats.effect.IOFiber$$Lambda$196.0x0000000800dae2e0.apply
  [40] cats.effect.unsafe.WorkerThread.blockOn
  [41] scala.concurrent.package$.blocking
  [42] cats.effect.IOFiber.runLoop
  [43] cats.effect.IOFiber.execR
  [44] cats.effect.IOFiber.run
  [45] cats.effect.unsafe.WorkerThread.run

--- 971233229 ns (0.07%), 97 samples
  [ 0] copy_user_generic_string_[k]
  [ 1] zfs_uiomove_iter?[zfs]_[k]
  [ 2] zfs_uiomove?[zfs]_[k]
  [ 3] dmu_read_uio_dnode?[zfs]_[k]
  [ 4] dmu_read_uio_dbuf?[zfs]_[k]
  [ 5] mappedread?[zfs]_[k]
  [ 6] zfs_read?[zfs]_[k]
  [ 7] zpl_iter_read?[zfs]_[k]
  [ 8] new_sync_read_[k]
  [ 9] vfs_read_[k]
  [10] __x64_sys_pread64_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] __libc_pread64
  [14] sun.nio.ch.FileDispatcherImpl.pread0
  [15] sun.nio.ch.FileDispatcherImpl.pread
  [16] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [17] sun.nio.ch.IOUtil.read
  [18] sun.nio.ch.IOUtil.read
  [19] sun.nio.ch.FileChannelImpl.readInternal
  [20] sun.nio.ch.FileChannelImpl.read
  [21] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [22] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [23] jdk.nio.zipfs.ZipFileSystem$2.fill
  [24] java.util.zip.InflaterInputStream.read
  [25] java.io.InputStream.readNBytes
  [26] java.io.InputStream.readAllBytes
  [27] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [28] jdk.nio.zipfs.ZipPath.newByteChannel
  [29] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [30] java.nio.file.Files.newByteChannel
  [31] java.nio.file.Files.newByteChannel
  [32] java.nio.file.Files.readAllBytes
  [33] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [34] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25908.apply
  [35] cats.effect.IOFiber.$anonfun$8
  [36] cats.effect.IOFiber$$Lambda$196.0x0000000800dae2e0.apply
  [37] cats.effect.unsafe.WorkerThread.blockOn
  [38] scala.concurrent.package$.blocking
  [39] cats.effect.IOFiber.runLoop
  [40] cats.effect.IOFiber.execR
  [41] cats.effect.IOFiber.run
  [42] cats.effect.unsafe.WorkerThread.run

--- 961520573 ns (0.07%), 96 samples
  [ 0] clear_page_rep_[k]
  [ 1] get_page_from_freelist_[k]
  [ 2] __alloc_pages_[k]
  [ 3] __folio_alloc_[k]
  [ 4] vma_alloc_folio_[k]
  [ 5] do_anonymous_page_[k]
  [ 6] handle_pte_fault_[k]
  [ 7] __handle_mm_fault_[k]
  [ 8] handle_mm_fault_[k]
  [ 9] do_user_addr_fault_[k]
  [10] exc_page_fault_[k]
  [11] asm_exc_page_fault_[k]
  [12] __memcpy_sse2_unaligned_erms
  [13] G1ParEvacuateFollowersClosure::do_void()
  [14] G1EvacuateRegionsTask::evacuate_live_objects(G1ParScanThreadState*, unsigned int)
  [15] G1EvacuateRegionsBaseTask::work(unsigned int)
  [16] GangWorker::loop()
  [17] GangWorker::run()
  [18] Thread::call_run()
  [19] thread_native_entry(Thread*)
  [20] start_thread

--- 952215701 ns (0.07%), 95 samples
  [ 0] dbuf_find?[zfs]_[k]
  [ 1] dbuf_hold_impl?[zfs]_[k]
  [ 2] dbuf_hold_level?[zfs]_[k]
  [ 3] dbuf_hold?[zfs]_[k]
  [ 4] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 5] dmu_read_uio_dnode?[zfs]_[k]
  [ 6] dmu_read_uio_dbuf?[zfs]_[k]
  [ 7] mappedread?[zfs]_[k]
  [ 8] zfs_read?[zfs]_[k]
  [ 9] zpl_iter_read?[zfs]_[k]
  [10] new_sync_read_[k]
  [11] vfs_read_[k]
  [12] __x64_sys_pread64_[k]
  [13] do_syscall_64_[k]
  [14] entry_SYSCALL_64_after_hwframe_[k]
  [15] __libc_pread64
  [16] sun.nio.ch.FileDispatcherImpl.pread0
  [17] sun.nio.ch.FileDispatcherImpl.pread
  [18] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [19] sun.nio.ch.IOUtil.read
  [20] sun.nio.ch.IOUtil.read
  [21] sun.nio.ch.FileChannelImpl.readInternal
  [22] sun.nio.ch.FileChannelImpl.read
  [23] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [24] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [25] jdk.nio.zipfs.ZipFileSystem$2.fill
  [26] java.util.zip.InflaterInputStream.read
  [27] java.io.InputStream.readNBytes
  [28] java.io.InputStream.readAllBytes
  [29] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [30] jdk.nio.zipfs.ZipPath.newByteChannel
  [31] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [32] java.nio.file.Files.newByteChannel
  [33] java.nio.file.Files.newByteChannel
  [34] java.nio.file.Files.readAllBytes
  [35] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [36] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25908.apply
  [37] cats.effect.IOFiber.$anonfun$8
  [38] cats.effect.IOFiber$$Lambda$196.0x0000000800dae2e0.apply
  [39] cats.effect.unsafe.WorkerThread.blockOn
  [40] scala.concurrent.package$.blocking
  [41] cats.effect.IOFiber.runLoop
  [42] cats.effect.IOFiber.execR
  [43] cats.effect.IOFiber.run
  [44] cats.effect.unsafe.WorkerThread.run

--- 951139736 ns (0.07%), 95 samples
  [ 0] _raw_spin_unlock_irqrestore_[k]
  [ 1] __pagevec_lru_add_[k]
  [ 2] folio_add_lru_[k]
  [ 3] lru_cache_add_[k]
  [ 4] lru_cache_add_inactive_or_unevictable_[k]
  [ 5] do_anonymous_page_[k]
  [ 6] handle_pte_fault_[k]
  [ 7] __handle_mm_fault_[k]
  [ 8] handle_mm_fault_[k]
  [ 9] do_user_addr_fault_[k]
  [10] exc_page_fault_[k]
  [11] asm_exc_page_fault_[k]
  [12] java.io.InputStream.readNBytes
  [13] java.io.InputStream.readAllBytes
  [14] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [15] jdk.nio.zipfs.ZipPath.newByteChannel
  [16] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [17] java.nio.file.Files.newByteChannel
  [18] java.nio.file.Files.newByteChannel
  [19] java.nio.file.Files.readAllBytes
  [20] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [21] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25908.apply
  [22] cats.effect.IOFiber.$anonfun$8
  [23] cats.effect.IOFiber$$Lambda$196.0x0000000800dae2e0.apply
  [24] cats.effect.unsafe.WorkerThread.blockOn
  [25] scala.concurrent.package$.blocking
  [26] cats.effect.IOFiber.runLoop
  [27] cats.effect.IOFiber.execR
  [28] cats.effect.IOFiber.run
  [29] cats.effect.unsafe.WorkerThread.run

--- 921798926 ns (0.06%), 92 samples
  [ 0] syscall_enter_from_user_mode_[k]
  [ 1] do_syscall_64_[k]
  [ 2] entry_SYSCALL_64_after_hwframe_[k]
  [ 3] __libc_pread64
  [ 4] sun.nio.ch.FileDispatcherImpl.pread0
  [ 5] sun.nio.ch.FileDispatcherImpl.pread
  [ 6] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [ 7] sun.nio.ch.IOUtil.read
  [ 8] sun.nio.ch.IOUtil.read
  [ 9] sun.nio.ch.FileChannelImpl.readInternal
  [10] sun.nio.ch.FileChannelImpl.read
  [11] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [12] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [13] jdk.nio.zipfs.ZipFileSystem$2.fill
  [14] java.util.zip.InflaterInputStream.read
  [15] java.io.InputStream.readNBytes
  [16] java.io.InputStream.readAllBytes
  [17] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [18] jdk.nio.zipfs.ZipPath.newByteChannel
  [19] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [20] java.nio.file.Files.newByteChannel
  [21] java.nio.file.Files.newByteChannel
  [22] java.nio.file.Files.readAllBytes
  [23] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [24] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25908.apply
  [25] cats.effect.IOFiber.$anonfun$8
  [26] cats.effect.IOFiber$$Lambda$196.0x0000000800dae2e0.apply
  [27] cats.effect.unsafe.WorkerThread.blockOn
  [28] scala.concurrent.package$.blocking
  [29] cats.effect.IOFiber.runLoop
  [30] cats.effect.IOFiber.execR
  [31] cats.effect.IOFiber.run
  [32] cats.effect.unsafe.WorkerThread.run

--- 910574693 ns (0.06%), 91 samples
  [ 0] native_queued_spin_lock_slowpath.part.0_[k]
  [ 1] native_queued_spin_lock_slowpath_[k]
  [ 2] _raw_spin_lock_[k]
  [ 3] do_anonymous_page_[k]
  [ 4] handle_pte_fault_[k]
  [ 5] __handle_mm_fault_[k]
  [ 6] handle_mm_fault_[k]
  [ 7] do_user_addr_fault_[k]
  [ 8] exc_page_fault_[k]
  [ 9] asm_exc_page_fault_[k]
  [10] __memcpy_sse2_unaligned_erms
  [11] G1ParScanThreadState::steal_and_trim_queue(GenericTaskQueueSet<OverflowTaskQueue<ScannerTask, (MEMFLAGS)5, 131072u>, (MEMFLAGS)5>*)
  [12] G1ParEvacuateFollowersClosure::do_void()
  [13] G1EvacuateRegionsTask::evacuate_live_objects(G1ParScanThreadState*, unsigned int)
  [14] G1EvacuateRegionsBaseTask::work(unsigned int)
  [15] GangWorker::loop()
  [16] GangWorker::run()
  [17] Thread::call_run()
  [18] thread_native_entry(Thread*)
  [19] start_thread

--- 909961362 ns (0.06%), 91 samples
  [ 0] java.util.zip.Inflater.inflateBytesBytes
  [ 1] java.util.zip.Inflater.inflate
  [ 2] java.util.zip.InflaterInputStream.read
  [ 3] java.io.InputStream.readNBytes
  [ 4] java.io.InputStream.readAllBytes
  [ 5] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [ 6] jdk.nio.zipfs.ZipPath.newByteChannel
  [ 7] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [ 8] java.nio.file.Files.newByteChannel
  [ 9] java.nio.file.Files.newByteChannel
  [10] java.nio.file.Files.readAllBytes
  [11] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [12] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25908.apply
  [13] cats.effect.IOFiber.$anonfun$8
  [14] cats.effect.IOFiber$$Lambda$196.0x0000000800dae2e0.apply
  [15] cats.effect.unsafe.WorkerThread.blockOn
  [16] scala.concurrent.package$.blocking
  [17] cats.effect.IOFiber.runLoop
  [18] cats.effect.IOFiber.execR
  [19] cats.effect.IOFiber.run
  [20] cats.effect.unsafe.WorkerThread.run

--- 900588462 ns (0.06%), 90 samples
  [ 0] jni_ReleasePrimitiveArrayCritical
  [ 1] Java_java_util_zip_Inflater_inflateBytesBytes
  [ 2] java.util.zip.Inflater.inflateBytesBytes
  [ 3] java.util.zip.Inflater.inflate
  [ 4] java.util.zip.InflaterInputStream.read
  [ 5] java.io.InputStream.readNBytes
  [ 6] java.io.InputStream.readAllBytes
  [ 7] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [ 8] jdk.nio.zipfs.ZipPath.newByteChannel
  [ 9] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [10] java.nio.file.Files.newByteChannel
  [11] java.nio.file.Files.newByteChannel
  [12] java.nio.file.Files.readAllBytes
  [13] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [14] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25908.apply
  [15] cats.effect.IOFiber.$anonfun$8
  [16] cats.effect.IOFiber$$Lambda$196.0x0000000800dae2e0.apply
  [17] cats.effect.unsafe.WorkerThread.blockOn
  [18] scala.concurrent.package$.blocking
  [19] cats.effect.IOFiber.runLoop
  [20] cats.effect.IOFiber.execR
  [21] cats.effect.IOFiber.run
  [22] cats.effect.unsafe.WorkerThread.run

--- 881813418 ns (0.06%), 88 samples
  [ 0] HeapRegionManager::par_iterate(HeapRegionClosure*, HeapRegionClaimer*, unsigned int) const
  [ 1] G1PrepareEvacuationTask::work(unsigned int)
  [ 2] GangWorker::loop()
  [ 3] GangWorker::run()
  [ 4] Thread::call_run()
  [ 5] thread_native_entry(Thread*)
  [ 6] start_thread

--- 871224059 ns (0.06%), 87 samples
  [ 0] dbuf_hold_impl?[zfs]_[k]
  [ 1] dbuf_hold_level?[zfs]_[k]
  [ 2] dbuf_hold?[zfs]_[k]
  [ 3] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 4] dmu_read_uio_dnode?[zfs]_[k]
  [ 5] dmu_read_uio_dbuf?[zfs]_[k]
  [ 6] mappedread?[zfs]_[k]
  [ 7] zfs_read?[zfs]_[k]
  [ 8] zpl_iter_read?[zfs]_[k]
  [ 9] new_sync_read_[k]
  [10] vfs_read_[k]
  [11] __x64_sys_pread64_[k]
  [12] do_syscall_64_[k]
  [13] entry_SYSCALL_64_after_hwframe_[k]
  [14] __libc_pread64
  [15] sun.nio.ch.FileDispatcherImpl.pread0
  [16] sun.nio.ch.FileDispatcherImpl.pread
  [17] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [18] sun.nio.ch.IOUtil.read
  [19] sun.nio.ch.IOUtil.read
  [20] sun.nio.ch.FileChannelImpl.readInternal
  [21] sun.nio.ch.FileChannelImpl.read
  [22] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [23] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [24] jdk.nio.zipfs.ZipFileSystem$2.fill
  [25] java.util.zip.InflaterInputStream.read
  [26] java.io.InputStream.readNBytes
  [27] java.io.InputStream.readAllBytes
  [28] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [29] jdk.nio.zipfs.ZipPath.newByteChannel
  [30] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [31] java.nio.file.Files.newByteChannel
  [32] java.nio.file.Files.newByteChannel
  [33] java.nio.file.Files.readAllBytes
  [34] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [35] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25908.apply
  [36] cats.effect.IOFiber.$anonfun$8
  [37] cats.effect.IOFiber$$Lambda$196.0x0000000800dae2e0.apply
  [38] cats.effect.unsafe.WorkerThread.blockOn
  [39] scala.concurrent.package$.blocking
  [40] cats.effect.IOFiber.runLoop
  [41] cats.effect.IOFiber.execR
  [42] cats.effect.IOFiber.run
  [43] cats.effect.unsafe.WorkerThread.run

--- 850603336 ns (0.06%), 85 samples
  [ 0] java.util.Arrays.copyOfRange
  [ 1] java.lang.String.<init>
  [ 2] java.lang.String.<init>
  [ 3] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [ 4] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25908.apply
  [ 5] cats.effect.IOFiber.$anonfun$8
  [ 6] cats.effect.IOFiber$$Lambda$196.0x0000000800dae2e0.apply
  [ 7] cats.effect.unsafe.WorkerThread.blockOn
  [ 8] scala.concurrent.package$.blocking
  [ 9] cats.effect.IOFiber.runLoop
  [10] cats.effect.IOFiber.execR
  [11] cats.effect.IOFiber.run
  [12] cats.effect.unsafe.WorkerThread.run

--- 831718094 ns (0.06%), 83 samples
  [ 0] zfs_read?[zfs]_[k]
  [ 1] zpl_iter_read?[zfs]_[k]
  [ 2] new_sync_read_[k]
  [ 3] vfs_read_[k]
  [ 4] __x64_sys_pread64_[k]
  [ 5] do_syscall_64_[k]
  [ 6] entry_SYSCALL_64_after_hwframe_[k]
  [ 7] __libc_pread64
  [ 8] sun.nio.ch.FileDispatcherImpl.pread0
  [ 9] sun.nio.ch.FileDispatcherImpl.pread
  [10] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [11] sun.nio.ch.IOUtil.read
  [12] sun.nio.ch.IOUtil.read
  [13] sun.nio.ch.FileChannelImpl.readInternal
  [14] sun.nio.ch.FileChannelImpl.read
  [15] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [16] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [17] jdk.nio.zipfs.ZipFileSystem$2.fill
  [18] java.util.zip.InflaterInputStream.read
  [19] java.io.InputStream.readNBytes
  [20] java.io.InputStream.readAllBytes
  [21] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [22] jdk.nio.zipfs.ZipPath.newByteChannel
  [23] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [24] java.nio.file.Files.newByteChannel
  [25] java.nio.file.Files.newByteChannel
  [26] java.nio.file.Files.readAllBytes
  [27] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [28] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25908.apply
  [29] cats.effect.IOFiber.$anonfun$8
  [30] cats.effect.IOFiber$$Lambda$196.0x0000000800dae2e0.apply
  [31] cats.effect.unsafe.WorkerThread.blockOn
  [32] scala.concurrent.package$.blocking
  [33] cats.effect.IOFiber.runLoop
  [34] cats.effect.IOFiber.execR
  [35] cats.effect.IOFiber.run
  [36] cats.effect.unsafe.WorkerThread.run

--- 830667646 ns (0.06%), 83 samples
  [ 0] __libc_pread64
  [ 1] sun.nio.ch.FileDispatcherImpl.pread0
  [ 2] sun.nio.ch.FileDispatcherImpl.pread
  [ 3] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [ 4] sun.nio.ch.IOUtil.read
  [ 5] sun.nio.ch.IOUtil.read
  [ 6] sun.nio.ch.FileChannelImpl.readInternal
  [ 7] sun.nio.ch.FileChannelImpl.read
  [ 8] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [ 9] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [10] jdk.nio.zipfs.ZipFileSystem$2.fill
  [11] java.util.zip.InflaterInputStream.read
  [12] java.io.InputStream.readNBytes
  [13] java.io.InputStream.readAllBytes
  [14] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [15] jdk.nio.zipfs.ZipPath.newByteChannel
  [16] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [17] java.nio.file.Files.newByteChannel
  [18] java.nio.file.Files.newByteChannel
  [19] java.nio.file.Files.readAllBytes
  [20] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [21] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25908.apply
  [22] cats.effect.IOFiber.$anonfun$8
  [23] cats.effect.IOFiber$$Lambda$196.0x0000000800dae2e0.apply
  [24] cats.effect.unsafe.WorkerThread.blockOn
  [25] scala.concurrent.package$.blocking
  [26] cats.effect.IOFiber.runLoop
  [27] cats.effect.IOFiber.execR
  [28] cats.effect.IOFiber.run
  [29] cats.effect.unsafe.WorkerThread.run

--- 819805130 ns (0.06%), 82 samples
  [ 0] void OopOopIterateDispatch<G1CMOopClosure>::Table::oop_oop_iterate<ObjArrayKlass, narrowOop>(G1CMOopClosure*, oopDesc*, Klass*)
  [ 1] void G1CMTask::process_grey_task_entry<true>(G1TaskQueueEntry)
  [ 2] G1CMTask::do_marking_step(double, bool, bool)
  [ 3] G1CMConcurrentMarkingTask::work(unsigned int)
  [ 4] GangWorker::loop()
  [ 5] GangWorker::run()
  [ 6] Thread::call_run()
  [ 7] thread_native_entry(Thread*)
  [ 8] start_thread

--- 801044275 ns (0.06%), 80 samples
  [ 0] mutex_unlock_[k]
  [ 1] dbuf_hold_impl?[zfs]_[k]
  [ 2] dbuf_hold_level?[zfs]_[k]
  [ 3] dbuf_hold?[zfs]_[k]
  [ 4] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 5] dmu_read_uio_dnode?[zfs]_[k]
  [ 6] dmu_read_uio_dbuf?[zfs]_[k]
  [ 7] mappedread?[zfs]_[k]
  [ 8] zfs_read?[zfs]_[k]
  [ 9] zpl_iter_read?[zfs]_[k]
  [10] new_sync_read_[k]
  [11] vfs_read_[k]
  [12] __x64_sys_pread64_[k]
  [13] do_syscall_64_[k]
  [14] entry_SYSCALL_64_after_hwframe_[k]
  [15] __libc_pread64
  [16] sun.nio.ch.FileDispatcherImpl.pread0
  [17] sun.nio.ch.FileDispatcherImpl.pread
  [18] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [19] sun.nio.ch.IOUtil.read
  [20] sun.nio.ch.IOUtil.read
  [21] sun.nio.ch.FileChannelImpl.readInternal
  [22] sun.nio.ch.FileChannelImpl.read
  [23] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [24] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [25] jdk.nio.zipfs.ZipFileSystem$2.fill
  [26] java.util.zip.InflaterInputStream.read
  [27] java.io.InputStream.readNBytes
  [28] java.io.InputStream.readAllBytes
  [29] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [30] jdk.nio.zipfs.ZipPath.newByteChannel
  [31] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [32] java.nio.file.Files.newByteChannel
  [33] java.nio.file.Files.newByteChannel
  [34] java.nio.file.Files.readAllBytes
  [35] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [36] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25908.apply
  [37] cats.effect.IOFiber.$anonfun$8
  [38] cats.effect.IOFiber$$Lambda$196.0x0000000800dae2e0.apply
  [39] cats.effect.unsafe.WorkerThread.blockOn
  [40] scala.concurrent.package$.blocking
  [41] cats.effect.IOFiber.runLoop
  [42] cats.effect.IOFiber.execR
  [43] cats.effect.IOFiber.run
  [44] cats.effect.unsafe.WorkerThread.run

--- 800509541 ns (0.06%), 80 samples
  [ 0] __memset_avx2_unaligned_erms
  [ 1] MemAllocator::allocate() const
  [ 2] TypeArrayKlass::allocate_common(int, bool, JavaThread*)
  [ 3] JVMCIRuntime::new_array_common(JavaThread*, Klass*, int, bool)
  [ 4] java.io.InputStream.readNBytes
  [ 5] java.io.InputStream.readAllBytes
  [ 6] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [ 7] jdk.nio.zipfs.ZipPath.newByteChannel
  [ 8] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [ 9] java.nio.file.Files.newByteChannel
  [10] java.nio.file.Files.newByteChannel
  [11] java.nio.file.Files.readAllBytes
  [12] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [13] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25908.apply
  [14] cats.effect.IOFiber.$anonfun$8
  [15] cats.effect.IOFiber$$Lambda$196.0x0000000800dae2e0.apply
  [16] cats.effect.unsafe.WorkerThread.blockOn
  [17] scala.concurrent.package$.blocking
  [18] cats.effect.IOFiber.runLoop
  [19] cats.effect.IOFiber.execR
  [20] cats.effect.IOFiber.run
  [21] cats.effect.unsafe.WorkerThread.run

--- 780197595 ns (0.05%), 78 samples
  [ 0] Java_java_util_zip_Inflater_inflateBytesBytes
  [ 1] java.util.zip.Inflater.inflateBytesBytes
  [ 2] java.util.zip.Inflater.inflate
  [ 3] java.util.zip.InflaterInputStream.read
  [ 4] java.io.InputStream.readNBytes
  [ 5] java.io.InputStream.readAllBytes
  [ 6] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [ 7] jdk.nio.zipfs.ZipPath.newByteChannel
  [ 8] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [ 9] java.nio.file.Files.newByteChannel
  [10] java.nio.file.Files.newByteChannel
  [11] java.nio.file.Files.readAllBytes
  [12] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [13] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25908.apply
  [14] cats.effect.IOFiber.$anonfun$8
  [15] cats.effect.IOFiber$$Lambda$196.0x0000000800dae2e0.apply
  [16] cats.effect.unsafe.WorkerThread.blockOn
  [17] scala.concurrent.package$.blocking
  [18] cats.effect.IOFiber.runLoop
  [19] cats.effect.IOFiber.execR
  [20] cats.effect.IOFiber.run
  [21] cats.effect.unsafe.WorkerThread.run

--- 779752100 ns (0.05%), 78 samples
  [ 0] void OopOopIterateDispatch<G1RebuildRemSetClosure>::Table::oop_oop_iterate<InstanceKlass, narrowOop>(G1RebuildRemSetClosure*, oopDesc*, Klass*)
  [ 1] G1RebuildRemSetTask::G1RebuildRemSetHeapRegionClosure::do_heap_region(HeapRegion*)
  [ 2] HeapRegionManager::par_iterate(HeapRegionClosure*, HeapRegionClaimer*, unsigned int) const
  [ 3] G1RebuildRemSetTask::work(unsigned int)
  [ 4] GangWorker::loop()
  [ 5] GangWorker::run()
  [ 6] Thread::call_run()
  [ 7] thread_native_entry(Thread*)
  [ 8] start_thread

--- 770135765 ns (0.05%), 77 samples
  [ 0] native_queued_spin_lock_slowpath.part.0_[k]
  [ 1] native_queued_spin_lock_slowpath_[k]
  [ 2] _raw_spin_lock_[k]
  [ 3] do_anonymous_page_[k]
  [ 4] handle_pte_fault_[k]
  [ 5] __handle_mm_fault_[k]
  [ 6] handle_mm_fault_[k]
  [ 7] do_user_addr_fault_[k]
  [ 8] exc_page_fault_[k]
  [ 9] asm_exc_page_fault_[k]
  [10] __memcpy_sse2_unaligned_erms
  [11] G1ParEvacuateFollowersClosure::do_void()
  [12] G1EvacuateRegionsTask::evacuate_live_objects(G1ParScanThreadState*, unsigned int)
  [13] G1EvacuateRegionsBaseTask::work(unsigned int)
  [14] GangWorker::loop()
  [15] GangWorker::run()
  [16] Thread::call_run()
  [17] thread_native_entry(Thread*)
  [18] start_thread

--- 740955177 ns (0.05%), 74 samples
  [ 0] zio_done?[zfs]_[k]
  [ 1] zio_wait?[zfs]_[k]
  [ 2] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 3] dmu_read_uio_dnode?[zfs]_[k]
  [ 4] dmu_read_uio_dbuf?[zfs]_[k]
  [ 5] mappedread?[zfs]_[k]
  [ 6] zfs_read?[zfs]_[k]
  [ 7] zpl_iter_read?[zfs]_[k]
  [ 8] new_sync_read_[k]
  [ 9] vfs_read_[k]
  [10] __x64_sys_pread64_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] __libc_pread64
  [14] sun.nio.ch.FileDispatcherImpl.pread0
  [15] sun.nio.ch.FileDispatcherImpl.pread
  [16] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [17] sun.nio.ch.IOUtil.read
  [18] sun.nio.ch.IOUtil.read
  [19] sun.nio.ch.FileChannelImpl.readInternal
  [20] sun.nio.ch.FileChannelImpl.read
  [21] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [22] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [23] jdk.nio.zipfs.ZipFileSystem$2.fill
  [24] java.util.zip.InflaterInputStream.read
  [25] java.io.InputStream.readNBytes
  [26] java.io.InputStream.readAllBytes
  [27] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [28] jdk.nio.zipfs.ZipPath.newByteChannel
  [29] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [30] java.nio.file.Files.newByteChannel
  [31] java.nio.file.Files.newByteChannel
  [32] java.nio.file.Files.readAllBytes
  [33] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [34] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25908.apply
  [35] cats.effect.IOFiber.$anonfun$8
  [36] cats.effect.IOFiber$$Lambda$196.0x0000000800dae2e0.apply
  [37] cats.effect.unsafe.WorkerThread.blockOn
  [38] scala.concurrent.package$.blocking
  [39] cats.effect.IOFiber.runLoop
  [40] cats.effect.IOFiber.execR
  [41] cats.effect.IOFiber.run
  [42] cats.effect.unsafe.WorkerThread.run

--- 731290292 ns (0.05%), 73 samples
  [ 0] kfree_[k]
  [ 1] spl_kmem_free_impl?[spl]_[k]
  [ 2] spl_kmem_free?[spl]_[k]
  [ 3] dmu_buf_rele_array?[zfs]_[k]
  [ 4] dmu_read_uio_dnode?[zfs]_[k]
  [ 5] dmu_read_uio_dbuf?[zfs]_[k]
  [ 6] mappedread?[zfs]_[k]
  [ 7] zfs_read?[zfs]_[k]
  [ 8] zpl_iter_read?[zfs]_[k]
  [ 9] new_sync_read_[k]
  [10] vfs_read_[k]
  [11] __x64_sys_pread64_[k]
  [12] do_syscall_64_[k]
  [13] entry_SYSCALL_64_after_hwframe_[k]
  [14] __libc_pread64
  [15] sun.nio.ch.FileDispatcherImpl.pread0
  [16] sun.nio.ch.FileDispatcherImpl.pread
  [17] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [18] sun.nio.ch.IOUtil.read
  [19] sun.nio.ch.IOUtil.read
  [20] sun.nio.ch.FileChannelImpl.readInternal
  [21] sun.nio.ch.FileChannelImpl.read
  [22] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [23] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [24] jdk.nio.zipfs.ZipFileSystem$2.fill
  [25] java.util.zip.InflaterInputStream.read
  [26] java.io.InputStream.readNBytes
  [27] java.io.InputStream.readAllBytes
  [28] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [29] jdk.nio.zipfs.ZipPath.newByteChannel
  [30] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [31] java.nio.file.Files.newByteChannel
  [32] java.nio.file.Files.newByteChannel
  [33] java.nio.file.Files.readAllBytes
  [34] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [35] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25908.apply
  [36] cats.effect.IOFiber.$anonfun$8
  [37] cats.effect.IOFiber$$Lambda$196.0x0000000800dae2e0.apply
  [38] cats.effect.unsafe.WorkerThread.blockOn
  [39] scala.concurrent.package$.blocking
  [40] cats.effect.IOFiber.runLoop
  [41] cats.effect.IOFiber.execR
  [42] cats.effect.IOFiber.run
  [43] cats.effect.unsafe.WorkerThread.run

--- 725227581 ns (0.05%), 72 samples
  [ 0] free_unref_page_list_[k]
  [ 1] release_pages_[k]
  [ 2] free_pages_and_swap_cache_[k]
  [ 3] tlb_batch_pages_flush_[k]
  [ 4] tlb_finish_mmu_[k]
  [ 5] unmap_region_[k]
  [ 6] __do_munmap_[k]
  [ 7] mmap_region_[k]
  [ 8] do_mmap_[k]
  [ 9] vm_mmap_pgoff_[k]
  [10] ksys_mmap_pgoff_[k]
  [11] __x64_sys_mmap_[k]
  [12] do_syscall_64_[k]
  [13] entry_SYSCALL_64_after_hwframe_[k]
  [14] __GI___mmap
  [15] G1PageBasedVirtualSpace::uncommit(unsigned long, unsigned long)
  [16] G1RegionsLargerThanCommitSizeMapper::uncommit_regions(unsigned int, unsigned long)
  [17] HeapRegionManager::uncommit_regions(unsigned int, unsigned int)
  [18] HeapRegionManager::uncommit_inactive_regions(unsigned int)
  [19] G1UncommitRegionTask::execute()
  [20] G1ServiceThread::run_task(G1ServiceTask*)
  [21] G1ServiceThread::run_service()
  [22] ConcurrentGCThread::run()
  [23] Thread::call_run()
  [24] thread_native_entry(Thread*)
  [25] start_thread

--- 720794560 ns (0.05%), 72 samples
  [ 0] dbuf_read?[zfs]_[k]
  [ 1] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 2] dmu_read_uio_dnode?[zfs]_[k]
  [ 3] dmu_read_uio_dbuf?[zfs]_[k]
  [ 4] mappedread?[zfs]_[k]
  [ 5] zfs_read?[zfs]_[k]
  [ 6] zpl_iter_read?[zfs]_[k]
  [ 7] new_sync_read_[k]
  [ 8] vfs_read_[k]
  [ 9] __x64_sys_pread64_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] __libc_pread64
  [13] sun.nio.ch.FileDispatcherImpl.pread0
  [14] sun.nio.ch.FileDispatcherImpl.pread
  [15] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [16] sun.nio.ch.IOUtil.read
  [17] sun.nio.ch.IOUtil.read
  [18] sun.nio.ch.FileChannelImpl.readInternal
  [19] sun.nio.ch.FileChannelImpl.read
  [20] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [21] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [22] jdk.nio.zipfs.ZipFileSystem$2.fill
  [23] java.util.zip.InflaterInputStream.read
  [24] java.io.InputStream.readNBytes
  [25] java.io.InputStream.readAllBytes
  [26] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [27] jdk.nio.zipfs.ZipPath.newByteChannel
  [28] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [29] java.nio.file.Files.newByteChannel
  [30] java.nio.file.Files.newByteChannel
  [31] java.nio.file.Files.readAllBytes
  [32] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [33] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25908.apply
  [34] cats.effect.IOFiber.$anonfun$8
  [35] cats.effect.IOFiber$$Lambda$196.0x0000000800dae2e0.apply
  [36] cats.effect.unsafe.WorkerThread.blockOn
  [37] scala.concurrent.package$.blocking
  [38] cats.effect.IOFiber.runLoop
  [39] cats.effect.IOFiber.execR
  [40] cats.effect.IOFiber.run
  [41] cats.effect.unsafe.WorkerThread.run

--- 690707074 ns (0.05%), 69 samples
  [ 0] vfs_read_[k]
  [ 1] __x64_sys_pread64_[k]
  [ 2] do_syscall_64_[k]
  [ 3] entry_SYSCALL_64_after_hwframe_[k]
  [ 4] __libc_pread64
  [ 5] sun.nio.ch.FileDispatcherImpl.pread0
  [ 6] sun.nio.ch.FileDispatcherImpl.pread
  [ 7] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [ 8] sun.nio.ch.IOUtil.read
  [ 9] sun.nio.ch.IOUtil.read
  [10] sun.nio.ch.FileChannelImpl.readInternal
  [11] sun.nio.ch.FileChannelImpl.read
  [12] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [13] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [14] jdk.nio.zipfs.ZipFileSystem$2.fill
  [15] java.util.zip.InflaterInputStream.read
  [16] java.io.InputStream.readNBytes
  [17] java.io.InputStream.readAllBytes
  [18] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [19] jdk.nio.zipfs.ZipPath.newByteChannel
  [20] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [21] java.nio.file.Files.newByteChannel
  [22] java.nio.file.Files.newByteChannel
  [23] java.nio.file.Files.readAllBytes
  [24] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [25] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25908.apply
  [26] cats.effect.IOFiber.$anonfun$8
  [27] cats.effect.IOFiber$$Lambda$196.0x0000000800dae2e0.apply
  [28] cats.effect.unsafe.WorkerThread.blockOn
  [29] scala.concurrent.package$.blocking
  [30] cats.effect.IOFiber.runLoop
  [31] cats.effect.IOFiber.execR
  [32] cats.effect.IOFiber.run
  [33] cats.effect.unsafe.WorkerThread.run

--- 690211667 ns (0.05%), 69 samples
  [ 0] java.util.zip.Inflater.inflate
  [ 1] java.util.zip.InflaterInputStream.read
  [ 2] java.io.InputStream.readNBytes
  [ 3] java.io.InputStream.readAllBytes
  [ 4] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [ 5] jdk.nio.zipfs.ZipPath.newByteChannel
  [ 6] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [ 7] java.nio.file.Files.newByteChannel
  [ 8] java.nio.file.Files.newByteChannel
  [ 9] java.nio.file.Files.readAllBytes
  [10] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [11] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25908.apply
  [12] cats.effect.IOFiber.$anonfun$8
  [13] cats.effect.IOFiber$$Lambda$196.0x0000000800dae2e0.apply
  [14] cats.effect.unsafe.WorkerThread.blockOn
  [15] scala.concurrent.package$.blocking
  [16] cats.effect.IOFiber.runLoop
  [17] cats.effect.IOFiber.execR
  [18] cats.effect.IOFiber.run
  [19] cats.effect.unsafe.WorkerThread.run

--- 682467003 ns (0.05%), 68 samples
  [ 0] G1ParCopyClosure<(G1Barrier)1, true>::do_oop(oopDesc**)
  [ 1] ClassLoaderData::ChunkedHandleList::oops_do(OopClosure*)
  [ 2] G1CLDScanClosure::do_cld(ClassLoaderData*)
  [ 3] ClassLoaderDataGraph::roots_cld_do(CLDClosure*, CLDClosure*)
  [ 4] G1RootProcessor::process_java_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int)
  [ 5] G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int)
  [ 6] G1EvacuateRegionsTask::scan_roots(G1ParScanThreadState*, unsigned int)
  [ 7] G1EvacuateRegionsBaseTask::work(unsigned int)
  [ 8] GangWorker::loop()
  [ 9] GangWorker::run()
  [10] Thread::call_run()
  [11] thread_native_entry(Thread*)
  [12] start_thread

--- 680782848 ns (0.05%), 68 samples
  [ 0] dmu_zfetch_prepare?[zfs]_[k]
  [ 1] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 2] dmu_read_uio_dnode?[zfs]_[k]
  [ 3] dmu_read_uio_dbuf?[zfs]_[k]
  [ 4] mappedread?[zfs]_[k]
  [ 5] zfs_read?[zfs]_[k]
  [ 6] zpl_iter_read?[zfs]_[k]
  [ 7] new_sync_read_[k]
  [ 8] vfs_read_[k]
  [ 9] __x64_sys_pread64_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] __libc_pread64
  [13] sun.nio.ch.FileDispatcherImpl.pread0
  [14] sun.nio.ch.FileDispatcherImpl.pread
  [15] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [16] sun.nio.ch.IOUtil.read
  [17] sun.nio.ch.IOUtil.read
  [18] sun.nio.ch.FileChannelImpl.readInternal
  [19] sun.nio.ch.FileChannelImpl.read
  [20] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [21] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [22] jdk.nio.zipfs.ZipFileSystem$2.fill
  [23] java.util.zip.InflaterInputStream.read
  [24] java.io.InputStream.readNBytes
  [25] java.io.InputStream.readAllBytes
  [26] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [27] jdk.nio.zipfs.ZipPath.newByteChannel
  [28] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [29] java.nio.file.Files.newByteChannel
  [30] java.nio.file.Files.newByteChannel
  [31] java.nio.file.Files.readAllBytes
  [32] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [33] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25908.apply
  [34] cats.effect.IOFiber.$anonfun$8
  [35] cats.effect.IOFiber$$Lambda$196.0x0000000800dae2e0.apply
  [36] cats.effect.unsafe.WorkerThread.blockOn
  [37] scala.concurrent.package$.blocking
  [38] cats.effect.IOFiber.runLoop
  [39] cats.effect.IOFiber.execR
  [40] cats.effect.IOFiber.run
  [41] cats.effect.unsafe.WorkerThread.run

--- 669920465 ns (0.05%), 67 samples
  [ 0] CollectedHeap::supports_object_pinning() const
  [ 1] Java_java_util_zip_Inflater_inflateBytesBytes
  [ 2] java.util.zip.Inflater.inflateBytesBytes
  [ 3] java.util.zip.Inflater.inflate
  [ 4] java.util.zip.InflaterInputStream.read
  [ 5] java.io.InputStream.readNBytes
  [ 6] java.io.InputStream.readAllBytes
  [ 7] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [ 8] jdk.nio.zipfs.ZipPath.newByteChannel
  [ 9] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [10] java.nio.file.Files.newByteChannel
  [11] java.nio.file.Files.newByteChannel
  [12] java.nio.file.Files.readAllBytes
  [13] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [14] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25908.apply
  [15] cats.effect.IOFiber.$anonfun$8
  [16] cats.effect.IOFiber$$Lambda$196.0x0000000800dae2e0.apply
  [17] cats.effect.unsafe.WorkerThread.blockOn
  [18] scala.concurrent.package$.blocking
  [19] cats.effect.IOFiber.runLoop
  [20] cats.effect.IOFiber.execR
  [21] cats.effect.IOFiber.run
  [22] cats.effect.unsafe.WorkerThread.run

--- 660495799 ns (0.05%), 66 samples
  [ 0] java.util.zip.Inflater.inflate
  [ 1] java.util.zip.InflaterInputStream.read
  [ 2] java.io.InputStream.readNBytes
  [ 3] java.io.InputStream.readAllBytes
  [ 4] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [ 5] jdk.nio.zipfs.ZipPath.newByteChannel
  [ 6] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [ 7] java.nio.file.Files.newByteChannel
  [ 8] java.nio.file.Files.newByteChannel
  [ 9] java.nio.file.Files.readAllBytes
  [10] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [11] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25908.apply
  [12] cats.effect.IOFiber.$anonfun$8
  [13] cats.effect.IOFiber$$Lambda$196.0x0000000800dae2e0.apply
  [14] cats.effect.unsafe.WorkerThread.blockOn
  [15] scala.concurrent.package$.blocking
  [16] cats.effect.IOFiber.runLoop
  [17] cats.effect.IOFiber.execR
  [18] cats.effect.IOFiber.run
  [19] cats.effect.unsafe.WorkerThread.run

--- 641519690 ns (0.04%), 64 samples
  [ 0] __kmalloc_node_[k]
  [ 1] spl_kmem_alloc_impl?[spl]_[k]
  [ 2] spl_kmem_zalloc?[spl]_[k]
  [ 3] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 4] dmu_read_uio_dnode?[zfs]_[k]
  [ 5] dmu_read_uio_dbuf?[zfs]_[k]
  [ 6] mappedread?[zfs]_[k]
  [ 7] zfs_read?[zfs]_[k]
  [ 8] zpl_iter_read?[zfs]_[k]
  [ 9] new_sync_read_[k]
  [10] vfs_read_[k]
  [11] __x64_sys_pread64_[k]
  [12] do_syscall_64_[k]
  [13] entry_SYSCALL_64_after_hwframe_[k]
  [14] __libc_pread64
  [15] sun.nio.ch.FileDispatcherImpl.pread0
  [16] sun.nio.ch.FileDispatcherImpl.pread
  [17] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [18] sun.nio.ch.IOUtil.read
  [19] sun.nio.ch.IOUtil.read
  [20] sun.nio.ch.FileChannelImpl.readInternal
  [21] sun.nio.ch.FileChannelImpl.read
  [22] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [23] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [24] jdk.nio.zipfs.ZipFileSystem$2.fill
  [25] java.util.zip.InflaterInputStream.read
  [26] java.io.InputStream.readNBytes
  [27] java.io.InputStream.readAllBytes
  [28] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [29] jdk.nio.zipfs.ZipPath.newByteChannel
  [30] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [31] java.nio.file.Files.newByteChannel
  [32] java.nio.file.Files.newByteChannel
  [33] java.nio.file.Files.readAllBytes
  [34] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [35] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25908.apply
  [36] cats.effect.IOFiber.$anonfun$8
  [37] cats.effect.IOFiber$$Lambda$196.0x0000000800dae2e0.apply
  [38] cats.effect.unsafe.WorkerThread.blockOn
  [39] scala.concurrent.package$.blocking
  [40] cats.effect.IOFiber.runLoop
  [41] cats.effect.IOFiber.execR
  [42] cats.effect.IOFiber.run
  [43] cats.effect.unsafe.WorkerThread.run

--- 640891178 ns (0.04%), 64 samples
  [ 0] mutex_lock_[k]
  [ 1] arc_buf_access?[zfs]_[k]
  [ 2] dbuf_hold_impl?[zfs]_[k]
  [ 3] dbuf_hold_level?[zfs]_[k]
  [ 4] dbuf_hold?[zfs]_[k]
  [ 5] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 6] dmu_read_uio_dnode?[zfs]_[k]
  [ 7] dmu_read_uio_dbuf?[zfs]_[k]
  [ 8] mappedread?[zfs]_[k]
  [ 9] zfs_read?[zfs]_[k]
  [10] zpl_iter_read?[zfs]_[k]
  [11] new_sync_read_[k]
  [12] vfs_read_[k]
  [13] __x64_sys_pread64_[k]
  [14] do_syscall_64_[k]
  [15] entry_SYSCALL_64_after_hwframe_[k]
  [16] __libc_pread64
  [17] sun.nio.ch.FileDispatcherImpl.pread0
  [18] sun.nio.ch.FileDispatcherImpl.pread
  [19] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [20] sun.nio.ch.IOUtil.read
  [21] sun.nio.ch.IOUtil.read
  [22] sun.nio.ch.FileChannelImpl.readInternal
  [23] sun.nio.ch.FileChannelImpl.read
  [24] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [25] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [26] jdk.nio.zipfs.ZipFileSystem$2.fill
  [27] java.util.zip.InflaterInputStream.read
  [28] java.io.InputStream.readNBytes
  [29] java.io.InputStream.readAllBytes
  [30] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [31] jdk.nio.zipfs.ZipPath.newByteChannel
  [32] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [33] java.nio.file.Files.newByteChannel
  [34] java.nio.file.Files.newByteChannel
  [35] java.nio.file.Files.readAllBytes
  [36] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [37] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25908.apply
  [38] cats.effect.IOFiber.$anonfun$8
  [39] cats.effect.IOFiber$$Lambda$196.0x0000000800dae2e0.apply
  [40] cats.effect.unsafe.WorkerThread.blockOn
  [41] scala.concurrent.package$.blocking
  [42] cats.effect.IOFiber.runLoop
  [43] cats.effect.IOFiber.execR
  [44] cats.effect.IOFiber.run
  [45] cats.effect.unsafe.WorkerThread.run

--- 630659777 ns (0.04%), 63 samples
  [ 0] do_user_addr_fault_[k]
  [ 1] exc_page_fault_[k]
  [ 2] asm_exc_page_fault_[k]
  [ 3] __memset_avx2_unaligned_erms
  [ 4] MemAllocator::allocate() const
  [ 5] TypeArrayKlass::allocate_common(int, bool, JavaThread*)
  [ 6] JVMCIRuntime::new_array_common(JavaThread*, Klass*, int, bool)
  [ 7] java.io.InputStream.readNBytes
  [ 8] java.io.InputStream.readAllBytes
  [ 9] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [10] jdk.nio.zipfs.ZipPath.newByteChannel
  [11] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [12] java.nio.file.Files.newByteChannel
  [13] java.nio.file.Files.newByteChannel
  [14] java.nio.file.Files.readAllBytes
  [15] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [16] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25908.apply
  [17] cats.effect.IOFiber.$anonfun$8
  [18] cats.effect.IOFiber$$Lambda$196.0x0000000800dae2e0.apply
  [19] cats.effect.unsafe.WorkerThread.blockOn
  [20] scala.concurrent.package$.blocking
  [21] cats.effect.IOFiber.runLoop
  [22] cats.effect.IOFiber.execR
  [23] cats.effect.IOFiber.run
  [24] cats.effect.unsafe.WorkerThread.run

--- 621221207 ns (0.04%), 62 samples
  [ 0] arc_buf_access?[zfs]_[k]
  [ 1] dbuf_hold_impl?[zfs]_[k]
  [ 2] dbuf_hold_level?[zfs]_[k]
  [ 3] dbuf_hold?[zfs]_[k]
  [ 4] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 5] dmu_read_uio_dnode?[zfs]_[k]
  [ 6] dmu_read_uio_dbuf?[zfs]_[k]
  [ 7] mappedread?[zfs]_[k]
  [ 8] zfs_read?[zfs]_[k]
  [ 9] zpl_iter_read?[zfs]_[k]
  [10] new_sync_read_[k]
  [11] vfs_read_[k]
  [12] __x64_sys_pread64_[k]
  [13] do_syscall_64_[k]
  [14] entry_SYSCALL_64_after_hwframe_[k]
  [15] __libc_pread64
  [16] sun.nio.ch.FileDispatcherImpl.pread0
  [17] sun.nio.ch.FileDispatcherImpl.pread
  [18] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [19] sun.nio.ch.IOUtil.read
  [20] sun.nio.ch.IOUtil.read
  [21] sun.nio.ch.FileChannelImpl.readInternal
  [22] sun.nio.ch.FileChannelImpl.read
  [23] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [24] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [25] jdk.nio.zipfs.ZipFileSystem$2.fill
  [26] java.util.zip.InflaterInputStream.read
  [27] java.io.InputStream.readNBytes
  [28] java.io.InputStream.readAllBytes
  [29] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [30] jdk.nio.zipfs.ZipPath.newByteChannel
  [31] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [32] java.nio.file.Files.newByteChannel
  [33] java.nio.file.Files.newByteChannel
  [34] java.nio.file.Files.readAllBytes
  [35] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [36] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25908.apply
  [37] cats.effect.IOFiber.$anonfun$8
  [38] cats.effect.IOFiber$$Lambda$196.0x0000000800dae2e0.apply
  [39] cats.effect.unsafe.WorkerThread.blockOn
  [40] scala.concurrent.package$.blocking
  [41] cats.effect.IOFiber.runLoop
  [42] cats.effect.IOFiber.execR
  [43] cats.effect.IOFiber.run
  [44] cats.effect.unsafe.WorkerThread.run

--- 610899010 ns (0.04%), 61 samples
  [ 0] zio_ready?[zfs]_[k]
  [ 1] zio_wait?[zfs]_[k]
  [ 2] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 3] dmu_read_uio_dnode?[zfs]_[k]
  [ 4] dmu_read_uio_dbuf?[zfs]_[k]
  [ 5] mappedread?[zfs]_[k]
  [ 6] zfs_read?[zfs]_[k]
  [ 7] zpl_iter_read?[zfs]_[k]
  [ 8] new_sync_read_[k]
  [ 9] vfs_read_[k]
  [10] __x64_sys_pread64_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] __libc_pread64
  [14] sun.nio.ch.FileDispatcherImpl.pread0
  [15] sun.nio.ch.FileDispatcherImpl.pread
  [16] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [17] sun.nio.ch.IOUtil.read
  [18] sun.nio.ch.IOUtil.read
  [19] sun.nio.ch.FileChannelImpl.readInternal
  [20] sun.nio.ch.FileChannelImpl.read
  [21] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [22] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [23] jdk.nio.zipfs.ZipFileSystem$2.fill
  [24] java.util.zip.InflaterInputStream.read
  [25] java.io.InputStream.readNBytes
  [26] java.io.InputStream.readAllBytes
  [27] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [28] jdk.nio.zipfs.ZipPath.newByteChannel
  [29] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [30] java.nio.file.Files.newByteChannel
  [31] java.nio.file.Files.newByteChannel
  [32] java.nio.file.Files.readAllBytes
  [33] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [34] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25908.apply
  [35] cats.effect.IOFiber.$anonfun$8
  [36] cats.effect.IOFiber$$Lambda$196.0x0000000800dae2e0.apply
  [37] cats.effect.unsafe.WorkerThread.blockOn
  [38] scala.concurrent.package$.blocking
  [39] cats.effect.IOFiber.runLoop
  [40] cats.effect.IOFiber.execR
  [41] cats.effect.IOFiber.run
  [42] cats.effect.unsafe.WorkerThread.run

--- 610277631 ns (0.04%), 61 samples
  [ 0] mutex_unlock_[k]
  [ 1] zio_wait?[zfs]_[k]
  [ 2] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 3] dmu_read_uio_dnode?[zfs]_[k]
  [ 4] dmu_read_uio_dbuf?[zfs]_[k]
  [ 5] mappedread?[zfs]_[k]
  [ 6] zfs_read?[zfs]_[k]
  [ 7] zpl_iter_read?[zfs]_[k]
  [ 8] new_sync_read_[k]
  [ 9] vfs_read_[k]
  [10] __x64_sys_pread64_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] __libc_pread64
  [14] sun.nio.ch.FileDispatcherImpl.pread0
  [15] sun.nio.ch.FileDispatcherImpl.pread
  [16] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [17] sun.nio.ch.IOUtil.read
  [18] sun.nio.ch.IOUtil.read
  [19] sun.nio.ch.FileChannelImpl.readInternal
  [20] sun.nio.ch.FileChannelImpl.read
  [21] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [22] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [23] jdk.nio.zipfs.ZipFileSystem$2.fill
  [24] java.util.zip.InflaterInputStream.read
  [25] java.io.InputStream.readNBytes
  [26] java.io.InputStream.readAllBytes
  [27] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [28] jdk.nio.zipfs.ZipPath.newByteChannel
  [29] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [30] java.nio.file.Files.newByteChannel
  [31] java.nio.file.Files.newByteChannel
  [32] java.nio.file.Files.readAllBytes
  [33] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [34] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25908.apply
  [35] cats.effect.IOFiber.$anonfun$8
  [36] cats.effect.IOFiber$$Lambda$196.0x0000000800dae2e0.apply
  [37] cats.effect.unsafe.WorkerThread.blockOn
  [38] scala.concurrent.package$.blocking
  [39] cats.effect.IOFiber.runLoop
  [40] cats.effect.IOFiber.execR
  [41] cats.effect.IOFiber.run
  [42] cats.effect.unsafe.WorkerThread.run

--- 590916110 ns (0.04%), 59 samples
  [ 0] __kmalloc_node_[k]
  [ 1] spl_kmem_alloc_impl?[spl]_[k]
  [ 2] spl_kmem_alloc?[spl]_[k]
  [ 3] zfs_rangelock_enter_impl?[zfs]_[k]
  [ 4] zfs_rangelock_enter?[zfs]_[k]
  [ 5] zfs_read?[zfs]_[k]
  [ 6] zpl_iter_read?[zfs]_[k]
  [ 7] new_sync_read_[k]
  [ 8] vfs_read_[k]
  [ 9] __x64_sys_pread64_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] __libc_pread64
  [13] sun.nio.ch.FileDispatcherImpl.pread0
  [14] sun.nio.ch.FileDispatcherImpl.pread
  [15] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [16] sun.nio.ch.IOUtil.read
  [17] sun.nio.ch.IOUtil.read
  [18] sun.nio.ch.FileChannelImpl.readInternal
  [19] sun.nio.ch.FileChannelImpl.read
  [20] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [21] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [22] jdk.nio.zipfs.ZipFileSystem$2.fill
  [23] java.util.zip.InflaterInputStream.read
  [24] java.io.InputStream.readNBytes
  [25] java.io.InputStream.readAllBytes
  [26] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [27] jdk.nio.zipfs.ZipPath.newByteChannel
  [28] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [29] java.nio.file.Files.newByteChannel
  [30] java.nio.file.Files.newByteChannel
  [31] java.nio.file.Files.readAllBytes
  [32] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [33] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25908.apply
  [34] cats.effect.IOFiber.$anonfun$8
  [35] cats.effect.IOFiber$$Lambda$196.0x0000000800dae2e0.apply
  [36] cats.effect.unsafe.WorkerThread.blockOn
  [37] scala.concurrent.package$.blocking
  [38] cats.effect.IOFiber.runLoop
  [39] cats.effect.IOFiber.execR
  [40] cats.effect.IOFiber.run
  [41] cats.effect.unsafe.WorkerThread.run

--- 570335654 ns (0.04%), 57 samples
  [ 0] mutex_unlock_[k]
  [ 1] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 2] dmu_read_uio_dnode?[zfs]_[k]
  [ 3] dmu_read_uio_dbuf?[zfs]_[k]
  [ 4] mappedread?[zfs]_[k]
  [ 5] zfs_read?[zfs]_[k]
  [ 6] zpl_iter_read?[zfs]_[k]
  [ 7] new_sync_read_[k]
  [ 8] vfs_read_[k]
  [ 9] __x64_sys_pread64_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] __libc_pread64
  [13] sun.nio.ch.FileDispatcherImpl.pread0
  [14] sun.nio.ch.FileDispatcherImpl.pread
  [15] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [16] sun.nio.ch.IOUtil.read
  [17] sun.nio.ch.IOUtil.read
  [18] sun.nio.ch.FileChannelImpl.readInternal
  [19] sun.nio.ch.FileChannelImpl.read
  [20] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [21] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [22] jdk.nio.zipfs.ZipFileSystem$2.fill
  [23] java.util.zip.InflaterInputStream.read
  [24] java.io.InputStream.readNBytes
  [25] java.io.InputStream.readAllBytes
  [26] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [27] jdk.nio.zipfs.ZipPath.newByteChannel
  [28] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [29] java.nio.file.Files.newByteChannel
  [30] java.nio.file.Files.newByteChannel
  [31] java.nio.file.Files.readAllBytes
  [32] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [33] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25908.apply
  [34] cats.effect.IOFiber.$anonfun$8
  [35] cats.effect.IOFiber$$Lambda$196.0x0000000800dae2e0.apply
  [36] cats.effect.unsafe.WorkerThread.blockOn
  [37] scala.concurrent.package$.blocking
  [38] cats.effect.IOFiber.runLoop
  [39] cats.effect.IOFiber.execR
  [40] cats.effect.IOFiber.run
  [41] cats.effect.unsafe.WorkerThread.run

--- 560822685 ns (0.04%), 56 samples
  [ 0] clear_page_rep_[k]
  [ 1] get_page_from_freelist_[k]
  [ 2] __alloc_pages_[k]
  [ 3] __folio_alloc_[k]
  [ 4] vma_alloc_folio_[k]
  [ 5] do_anonymous_page_[k]
  [ 6] handle_pte_fault_[k]
  [ 7] __handle_mm_fault_[k]
  [ 8] handle_mm_fault_[k]
  [ 9] do_user_addr_fault_[k]
  [10] exc_page_fault_[k]
  [11] asm_exc_page_fault_[k]
  [12] __memset_avx2_unaligned_erms
  [13] MarkBitMap::do_clear(MemRegion, bool)
  [14] G1ClearBitMapTask::G1ClearBitmapHRClosure::do_heap_region(HeapRegion*)
  [15] HeapRegionManager::par_iterate(HeapRegionClosure*, HeapRegionClaimer*, unsigned int) const
  [16] G1ClearBitMapTask::work(unsigned int)
  [17] GangWorker::loop()
  [18] GangWorker::run()
  [19] Thread::call_run()
  [20] thread_native_entry(Thread*)
  [21] start_thread

--- 560640526 ns (0.04%), 56 samples
  [ 0] inflate
  [ 1] java.util.zip.Inflater.inflateBytesBytes
  [ 2] java.util.zip.Inflater.inflate
  [ 3] java.util.zip.InflaterInputStream.read
  [ 4] java.io.InputStream.readNBytes
  [ 5] java.io.InputStream.readAllBytes
  [ 6] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [ 7] jdk.nio.zipfs.ZipPath.newByteChannel
  [ 8] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [ 9] java.nio.file.Files.newByteChannel
  [10] java.nio.file.Files.newByteChannel
  [11] java.nio.file.Files.readAllBytes
  [12] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [13] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25908.apply
  [14] cats.effect.IOFiber.$anonfun$8
  [15] cats.effect.IOFiber$$Lambda$196.0x0000000800dae2e0.apply
  [16] cats.effect.unsafe.WorkerThread.blockOn
  [17] scala.concurrent.package$.blocking
  [18] cats.effect.IOFiber.runLoop
  [19] cats.effect.IOFiber.execR
  [20] cats.effect.IOFiber.run
  [21] cats.effect.unsafe.WorkerThread.run

--- 550567064 ns (0.04%), 55 samples
  [ 0] clear_page_rep_[k]
  [ 1] get_page_from_freelist_[k]
  [ 2] __alloc_pages_[k]
  [ 3] __folio_alloc_[k]
  [ 4] vma_alloc_folio_[k]
  [ 5] do_anonymous_page_[k]
  [ 6] handle_pte_fault_[k]
  [ 7] __handle_mm_fault_[k]
  [ 8] handle_mm_fault_[k]
  [ 9] do_user_addr_fault_[k]
  [10] exc_page_fault_[k]
  [11] asm_exc_page_fault_[k]
  [12] java.io.InputStream.readNBytes
  [13] java.io.InputStream.readAllBytes
  [14] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [15] jdk.nio.zipfs.ZipPath.newByteChannel
  [16] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [17] java.nio.file.Files.newByteChannel
  [18] java.nio.file.Files.newByteChannel
  [19] java.nio.file.Files.readAllBytes
  [20] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [21] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25908.apply
  [22] cats.effect.IOFiber.$anonfun$8
  [23] cats.effect.IOFiber$$Lambda$196.0x0000000800dae2e0.apply
  [24] cats.effect.unsafe.WorkerThread.blockOn
  [25] scala.concurrent.package$.blocking
  [26] cats.effect.IOFiber.runLoop
  [27] cats.effect.IOFiber.execR
  [28] cats.effect.IOFiber.run
  [29] cats.effect.unsafe.WorkerThread.run

--- 550502891 ns (0.04%), 55 samples
  [ 0] do_anonymous_page_[k]
  [ 1] handle_pte_fault_[k]
  [ 2] __handle_mm_fault_[k]
  [ 3] handle_mm_fault_[k]
  [ 4] do_user_addr_fault_[k]
  [ 5] exc_page_fault_[k]
  [ 6] asm_exc_page_fault_[k]
  [ 7] java.io.InputStream.readNBytes
  [ 8] java.io.InputStream.readAllBytes
  [ 9] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [10] jdk.nio.zipfs.ZipPath.newByteChannel
  [11] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [12] java.nio.file.Files.newByteChannel
  [13] java.nio.file.Files.newByteChannel
  [14] java.nio.file.Files.readAllBytes
  [15] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [16] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25908.apply
  [17] cats.effect.IOFiber.$anonfun$8
  [18] cats.effect.IOFiber$$Lambda$196.0x0000000800dae2e0.apply
  [19] cats.effect.unsafe.WorkerThread.blockOn
  [20] scala.concurrent.package$.blocking
  [21] cats.effect.IOFiber.runLoop
  [22] cats.effect.IOFiber.execR
  [23] cats.effect.IOFiber.run
  [24] cats.effect.unsafe.WorkerThread.run

--- 549879066 ns (0.04%), 55 samples
  [ 0] G1CMTask::do_marking_step(double, bool, bool)
  [ 1] G1CMConcurrentMarkingTask::work(unsigned int)
  [ 2] GangWorker::loop()
  [ 3] GangWorker::run()
  [ 4] Thread::call_run()
  [ 5] thread_native_entry(Thread*)
  [ 6] start_thread

--- 540413915 ns (0.04%), 54 samples
  [ 0] charge_memcg_[k]
  [ 1] __mem_cgroup_charge_[k]
  [ 2] do_anonymous_page_[k]
  [ 3] handle_pte_fault_[k]
  [ 4] __handle_mm_fault_[k]
  [ 5] handle_mm_fault_[k]
  [ 6] do_user_addr_fault_[k]
  [ 7] exc_page_fault_[k]
  [ 8] asm_exc_page_fault_[k]
  [ 9] java.io.InputStream.readNBytes
  [10] java.io.InputStream.readAllBytes
  [11] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [12] jdk.nio.zipfs.ZipPath.newByteChannel
  [13] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [14] java.nio.file.Files.newByteChannel
  [15] java.nio.file.Files.newByteChannel
  [16] java.nio.file.Files.readAllBytes
  [17] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [18] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25908.apply
  [19] cats.effect.IOFiber.$anonfun$8
  [20] cats.effect.IOFiber$$Lambda$196.0x0000000800dae2e0.apply
  [21] cats.effect.unsafe.WorkerThread.blockOn
  [22] scala.concurrent.package$.blocking
  [23] cats.effect.IOFiber.runLoop
  [24] cats.effect.IOFiber.execR
  [25] cats.effect.IOFiber.run
  [26] cats.effect.unsafe.WorkerThread.run

--- 539972922 ns (0.04%), 54 samples
  [ 0] void OopOopIterateDispatch<G1CMOopClosure>::Table::oop_oop_iterate<ObjArrayKlass, narrowOop>(G1CMOopClosure*, oopDesc*, Klass*)
  [ 1] void G1CMTask::process_grey_task_entry<true>(G1TaskQueueEntry)
  [ 2] G1CMTask::drain_local_queue(bool) [clone .part.0] [clone .constprop.1]
  [ 3] G1CMTask::do_marking_step(double, bool, bool)
  [ 4] G1CMConcurrentMarkingTask::work(unsigned int)
  [ 5] GangWorker::loop()
  [ 6] GangWorker::run()
  [ 7] Thread::call_run()
  [ 8] thread_native_entry(Thread*)
  [ 9] start_thread

--- 520319108 ns (0.04%), 52 samples
  [ 0] java.lang.StringCoding.hasNegatives
  [ 1] java.lang.String.<init>
  [ 2] java.lang.String.<init>
  [ 3] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [ 4] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25908.apply
  [ 5] cats.effect.IOFiber.$anonfun$8
  [ 6] cats.effect.IOFiber$$Lambda$196.0x0000000800dae2e0.apply
  [ 7] cats.effect.unsafe.WorkerThread.blockOn
  [ 8] scala.concurrent.package$.blocking
  [ 9] cats.effect.IOFiber.runLoop
  [10] cats.effect.IOFiber.execR
  [11] cats.effect.IOFiber.run
  [12] cats.effect.unsafe.WorkerThread.run

--- 510430550 ns (0.04%), 51 samples
  [ 0] _copy_to_iter_[k]
  [ 1] zfs_uiomove_iter?[zfs]_[k]
  [ 2] zfs_uiomove?[zfs]_[k]
  [ 3] dmu_read_uio_dnode?[zfs]_[k]
  [ 4] dmu_read_uio_dbuf?[zfs]_[k]
  [ 5] mappedread?[zfs]_[k]
  [ 6] zfs_read?[zfs]_[k]
  [ 7] zpl_iter_read?[zfs]_[k]
  [ 8] new_sync_read_[k]
  [ 9] vfs_read_[k]
  [10] __x64_sys_pread64_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] __libc_pread64
  [14] sun.nio.ch.FileDispatcherImpl.pread0
  [15] sun.nio.ch.FileDispatcherImpl.pread
  [16] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [17] sun.nio.ch.IOUtil.read
  [18] sun.nio.ch.IOUtil.read
  [19] sun.nio.ch.FileChannelImpl.readInternal
  [20] sun.nio.ch.FileChannelImpl.read
  [21] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [22] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [23] jdk.nio.zipfs.ZipFileSystem$2.fill
  [24] java.util.zip.InflaterInputStream.read
  [25] java.io.InputStream.readNBytes
  [26] java.io.InputStream.readAllBytes
  [27] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [28] jdk.nio.zipfs.ZipPath.newByteChannel
  [29] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [30] java.nio.file.Files.newByteChannel
  [31] java.nio.file.Files.newByteChannel
  [32] java.nio.file.Files.readAllBytes
  [33] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [34] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25908.apply
  [35] cats.effect.IOFiber.$anonfun$8
  [36] cats.effect.IOFiber$$Lambda$196.0x0000000800dae2e0.apply
  [37] cats.effect.unsafe.WorkerThread.blockOn
  [38] scala.concurrent.package$.blocking
  [39] cats.effect.IOFiber.runLoop
  [40] cats.effect.IOFiber.execR
  [41] cats.effect.IOFiber.run
  [42] cats.effect.unsafe.WorkerThread.run

--- 510275916 ns (0.04%), 51 samples
  [ 0] do_user_addr_fault_[k]
  [ 1] exc_page_fault_[k]
  [ 2] asm_exc_page_fault_[k]
  [ 3] __memset_avx2_unaligned_erms
  [ 4] MemAllocator::allocate() const
  [ 5] TypeArrayKlass::allocate_common(int, bool, JavaThread*)
  [ 6] JVMCIRuntime::new_array_common(JavaThread*, Klass*, int, bool)
  [ 7] java.nio.charset.Charset.forName
  [ 8] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [ 9] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25908.apply
  [10] cats.effect.IOFiber.$anonfun$8
  [11] cats.effect.IOFiber$$Lambda$196.0x0000000800dae2e0.apply
  [12] cats.effect.unsafe.WorkerThread.blockOn
  [13] scala.concurrent.package$.blocking
  [14] cats.effect.IOFiber.runLoop
  [15] cats.effect.IOFiber.execR
  [16] cats.effect.IOFiber.run
  [17] cats.effect.unsafe.WorkerThread.run

--- 500612308 ns (0.03%), 50 samples
  [ 0] down_read_[k]
  [ 1] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 2] dmu_read_uio_dnode?[zfs]_[k]
  [ 3] dmu_read_uio_dbuf?[zfs]_[k]
  [ 4] mappedread?[zfs]_[k]
  [ 5] zfs_read?[zfs]_[k]
  [ 6] zpl_iter_read?[zfs]_[k]
  [ 7] new_sync_read_[k]
  [ 8] vfs_read_[k]
  [ 9] __x64_sys_pread64_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] __libc_pread64
  [13] sun.nio.ch.FileDispatcherImpl.pread0
  [14] sun.nio.ch.FileDispatcherImpl.pread
  [15] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [16] sun.nio.ch.IOUtil.read
  [17] sun.nio.ch.IOUtil.read
  [18] sun.nio.ch.FileChannelImpl.readInternal
  [19] sun.nio.ch.FileChannelImpl.read
  [20] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [21] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [22] jdk.nio.zipfs.ZipFileSystem$2.fill
  [23] java.util.zip.InflaterInputStream.read
  [24] java.io.InputStream.readNBytes
  [25] java.io.InputStream.readAllBytes
  [26] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [27] jdk.nio.zipfs.ZipPath.newByteChannel
  [28] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [29] java.nio.file.Files.newByteChannel
  [30] java.nio.file.Files.newByteChannel
  [31] java.nio.file.Files.readAllBytes
  [32] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [33] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25908.apply
  [34] cats.effect.IOFiber.$anonfun$8
  [35] cats.effect.IOFiber$$Lambda$196.0x0000000800dae2e0.apply
  [36] cats.effect.unsafe.WorkerThread.blockOn
  [37] scala.concurrent.package$.blocking
  [38] cats.effect.IOFiber.runLoop
  [39] cats.effect.IOFiber.execR
  [40] cats.effect.IOFiber.run
  [41] cats.effect.unsafe.WorkerThread.run

--- 500227713 ns (0.03%), 50 samples
  [ 0] checkInflateStatus
  [ 1] java.util.zip.Inflater.inflateBytesBytes
  [ 2] java.util.zip.Inflater.inflate
  [ 3] java.util.zip.InflaterInputStream.read
  [ 4] java.io.InputStream.readNBytes
  [ 5] java.io.InputStream.readAllBytes
  [ 6] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [ 7] jdk.nio.zipfs.ZipPath.newByteChannel
  [ 8] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [ 9] java.nio.file.Files.newByteChannel
  [10] java.nio.file.Files.newByteChannel
  [11] java.nio.file.Files.readAllBytes
  [12] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [13] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25908.apply
  [14] cats.effect.IOFiber.$anonfun$8
  [15] cats.effect.IOFiber$$Lambda$196.0x0000000800dae2e0.apply
  [16] cats.effect.unsafe.WorkerThread.blockOn
  [17] scala.concurrent.package$.blocking
  [18] cats.effect.IOFiber.runLoop
  [19] cats.effect.IOFiber.execR
  [20] cats.effect.IOFiber.run
  [21] cats.effect.unsafe.WorkerThread.run

--- 490640734 ns (0.03%), 49 samples
  [ 0] void WeakProcessor::Task::work<G1STWIsAliveClosure, G1KeepAliveClosure>(unsigned int, G1STWIsAliveClosure*, G1KeepAliveClosure*)
  [ 1] GangWorker::loop()
  [ 2] GangWorker::run()
  [ 3] Thread::call_run()
  [ 4] thread_native_entry(Thread*)
  [ 5] start_thread

--- 488910374 ns (0.03%), 49 samples
  [ 0] _raw_spin_unlock_irqrestore_[k]
  [ 1] release_pages_[k]
  [ 2] free_pages_and_swap_cache_[k]
  [ 3] tlb_batch_pages_flush_[k]
  [ 4] tlb_flush_mmu_[k]
  [ 5] zap_pte_range_[k]
  [ 6] zap_pmd_range.isra.0_[k]
  [ 7] unmap_page_range_[k]
  [ 8] unmap_single_vma_[k]
  [ 9] unmap_vmas_[k]
  [10] unmap_region_[k]
  [11] __do_munmap_[k]
  [12] mmap_region_[k]
  [13] do_mmap_[k]
  [14] vm_mmap_pgoff_[k]
  [15] ksys_mmap_pgoff_[k]
  [16] __x64_sys_mmap_[k]
  [17] do_syscall_64_[k]
  [18] entry_SYSCALL_64_after_hwframe_[k]
  [19] __GI___mmap
  [20] G1PageBasedVirtualSpace::uncommit(unsigned long, unsigned long)
  [21] G1RegionsLargerThanCommitSizeMapper::uncommit_regions(unsigned int, unsigned long)
  [22] HeapRegionManager::uncommit_regions(unsigned int, unsigned int)
  [23] HeapRegionManager::uncommit_inactive_regions(unsigned int)
  [24] G1UncommitRegionTask::execute()
  [25] G1ServiceThread::run_task(G1ServiceTask*)
  [26] G1ServiceThread::run_service()
  [27] ConcurrentGCThread::run()
  [28] Thread::call_run()
  [29] thread_native_entry(Thread*)
  [30] start_thread

--- 480742908 ns (0.03%), 48 samples
  [ 0] dmu_read_uio_dbuf?[zfs]_[k]
  [ 1] mappedread?[zfs]_[k]
  [ 2] zfs_read?[zfs]_[k]
  [ 3] zpl_iter_read?[zfs]_[k]
  [ 4] new_sync_read_[k]
  [ 5] vfs_read_[k]
  [ 6] __x64_sys_pread64_[k]
  [ 7] do_syscall_64_[k]
  [ 8] entry_SYSCALL_64_after_hwframe_[k]
  [ 9] __libc_pread64
  [10] sun.nio.ch.FileDispatcherImpl.pread0
  [11] sun.nio.ch.FileDispatcherImpl.pread
  [12] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [13] sun.nio.ch.IOUtil.read
  [14] sun.nio.ch.IOUtil.read
  [15] sun.nio.ch.FileChannelImpl.readInternal
  [16] sun.nio.ch.FileChannelImpl.read
  [17] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [18] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [19] jdk.nio.zipfs.ZipFileSystem$2.fill
  [20] java.util.zip.InflaterInputStream.read
  [21] java.io.InputStream.readNBytes
  [22] java.io.InputStream.readAllBytes
  [23] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [24] jdk.nio.zipfs.ZipPath.newByteChannel
  [25] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [26] java.nio.file.Files.newByteChannel
  [27] java.nio.file.Files.newByteChannel
  [28] java.nio.file.Files.readAllBytes
  [29] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [30] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25908.apply
  [31] cats.effect.IOFiber.$anonfun$8
  [32] cats.effect.IOFiber$$Lambda$196.0x0000000800dae2e0.apply
  [33] cats.effect.unsafe.WorkerThread.blockOn
  [34] scala.concurrent.package$.blocking
  [35] cats.effect.IOFiber.runLoop
  [36] cats.effect.IOFiber.execR
  [37] cats.effect.IOFiber.run
  [38] cats.effect.unsafe.WorkerThread.run

--- 480553112 ns (0.03%), 48 samples
  [ 0] down_read_[k]
  [ 1] dbuf_find?[zfs]_[k]
  [ 2] dbuf_hold_impl?[zfs]_[k]
  [ 3] dbuf_hold_level?[zfs]_[k]
  [ 4] dbuf_hold?[zfs]_[k]
  [ 5] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 6] dmu_read_uio_dnode?[zfs]_[k]
  [ 7] dmu_read_uio_dbuf?[zfs]_[k]
  [ 8] mappedread?[zfs]_[k]
  [ 9] zfs_read?[zfs]_[k]
  [10] zpl_iter_read?[zfs]_[k]
  [11] new_sync_read_[k]
  [12] vfs_read_[k]
  [13] __x64_sys_pread64_[k]
  [14] do_syscall_64_[k]
  [15] entry_SYSCALL_64_after_hwframe_[k]
  [16] __libc_pread64
  [17] sun.nio.ch.FileDispatcherImpl.pread0
  [18] sun.nio.ch.FileDispatcherImpl.pread
  [19] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [20] sun.nio.ch.IOUtil.read
  [21] sun.nio.ch.IOUtil.read
  [22] sun.nio.ch.FileChannelImpl.readInternal
  [23] sun.nio.ch.FileChannelImpl.read
  [24] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [25] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [26] jdk.nio.zipfs.ZipFileSystem$2.fill
  [27] java.util.zip.InflaterInputStream.read
  [28] java.io.InputStream.readNBytes
  [29] java.io.InputStream.readAllBytes
  [30] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [31] jdk.nio.zipfs.ZipPath.newByteChannel
  [32] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [33] java.nio.file.Files.newByteChannel
  [34] java.nio.file.Files.newByteChannel
  [35] java.nio.file.Files.readAllBytes
  [36] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [37] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25908.apply
  [38] cats.effect.IOFiber.$anonfun$8
  [39] cats.effect.IOFiber$$Lambda$196.0x0000000800dae2e0.apply
  [40] cats.effect.unsafe.WorkerThread.blockOn
  [41] scala.concurrent.package$.blocking
  [42] cats.effect.IOFiber.runLoop
  [43] cats.effect.IOFiber.execR
  [44] cats.effect.IOFiber.run
  [45] cats.effect.unsafe.WorkerThread.run

--- 470442328 ns (0.03%), 47 samples
  [ 0] fsnotify_perm.part.0_[k]
  [ 1] security_file_permission_[k]
  [ 2] rw_verify_area_[k]
  [ 3] vfs_read_[k]
  [ 4] __x64_sys_pread64_[k]
  [ 5] do_syscall_64_[k]
  [ 6] entry_SYSCALL_64_after_hwframe_[k]
  [ 7] __libc_pread64
  [ 8] sun.nio.ch.FileDispatcherImpl.pread0
  [ 9] sun.nio.ch.FileDispatcherImpl.pread
  [10] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [11] sun.nio.ch.IOUtil.read
  [12] sun.nio.ch.IOUtil.read
  [13] sun.nio.ch.FileChannelImpl.readInternal
  [14] sun.nio.ch.FileChannelImpl.read
  [15] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [16] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [17] jdk.nio.zipfs.ZipFileSystem$2.fill
  [18] java.util.zip.InflaterInputStream.read
  [19] java.io.InputStream.readNBytes
  [20] java.io.InputStream.readAllBytes
  [21] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [22] jdk.nio.zipfs.ZipPath.newByteChannel
  [23] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [24] java.nio.file.Files.newByteChannel
  [25] java.nio.file.Files.newByteChannel
  [26] java.nio.file.Files.readAllBytes
  [27] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [28] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25908.apply
  [29] cats.effect.IOFiber.$anonfun$8
  [30] cats.effect.IOFiber$$Lambda$196.0x0000000800dae2e0.apply
  [31] cats.effect.unsafe.WorkerThread.blockOn
  [32] scala.concurrent.package$.blocking
  [33] cats.effect.IOFiber.runLoop
  [34] cats.effect.IOFiber.execR
  [35] cats.effect.IOFiber.run
  [36] cats.effect.unsafe.WorkerThread.run

--- 460895282 ns (0.03%), 46 samples
  [ 0] _raw_spin_unlock_irqrestore_[k]
  [ 1] try_to_wake_up_[k]
  [ 2] wake_up_q_[k]
  [ 3] futex_wake_[k]
  [ 4] do_futex_[k]
  [ 5] __x64_sys_futex_[k]
  [ 6] do_syscall_64_[k]
  [ 7] entry_SYSCALL_64_after_hwframe_[k]
  [ 8] pthread_cond_signal@@GLIBC_2.3.2
  [ 9] jdk.internal.misc.Unsafe.unpark
  [10] java.util.concurrent.locks.LockSupport.unpark
  [11] java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext
  [12] java.util.concurrent.locks.AbstractQueuedSynchronizer.release
  [13] java.util.concurrent.locks.ReentrantLock.unlock
  [14] java.util.concurrent.ArrayBlockingQueue.offer
  [15] cats.effect.IOPlatform.unsafeRunTimed$$anonfun$1
  [16] cats.effect.IOPlatform$$Lambda$144.0x0000000800d9a830.applyVoid
  [17] scala.runtime.function.JProcedure1.apply
  [18] scala.runtime.function.JProcedure1.apply
  [19] cats.effect.IO.unsafeRunAsync$$anonfun$3
  [20] cats.effect.IO$$Lambda$162.0x0000000800d9d000.applyVoid
  [21] scala.runtime.function.JProcedure1.apply
  [22] scala.runtime.function.JProcedure1.apply
  [23] cats.effect.IO.$anonfun$6$$anonfun$3
  [24] cats.effect.IO$$Lambda$213.0x0000000800db4000.applyVoid
  [25] scala.runtime.function.JProcedure1.apply
  [26] scala.runtime.function.JProcedure1.apply
  [27] cats.effect.kernel.Outcome.fold
  [28] cats.effect.kernel.Outcome.fold$
  [29] cats.effect.kernel.Outcome$Succeeded.fold
  [30] cats.effect.IO.$anonfun$6
  [31] cats.effect.IO$$Lambda$167.0x0000000800da23d8.applyVoid
  [32] scala.runtime.function.JProcedure1.apply
  [33] scala.runtime.function.JProcedure1.apply
  [34] cats.effect.CallbackStack.apply
  [35] cats.effect.IOFiber.done
  [36] cats.effect.IOFiber.runTerminusSuccessK
  [37] cats.effect.IOFiber.succeeded
  [38] cats.effect.IOFiber.runLoop
  [39] cats.effect.IOFiber.execR
  [40] cats.effect.IOFiber.run
  [41] cats.effect.unsafe.WorkerThread.run

--- 460253352 ns (0.03%), 46 samples
  [ 0] read_tsc_[k]
  [ 1] gethrtime?[zfs]_[k]
  [ 2] zio_wait?[zfs]_[k]
  [ 3] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 4] dmu_read_uio_dnode?[zfs]_[k]
  [ 5] dmu_read_uio_dbuf?[zfs]_[k]
  [ 6] mappedread?[zfs]_[k]
  [ 7] zfs_read?[zfs]_[k]
  [ 8] zpl_iter_read?[zfs]_[k]
  [ 9] new_sync_read_[k]
  [10] vfs_read_[k]
  [11] __x64_sys_pread64_[k]
  [12] do_syscall_64_[k]
  [13] entry_SYSCALL_64_after_hwframe_[k]
  [14] __libc_pread64
  [15] sun.nio.ch.FileDispatcherImpl.pread0
  [16] sun.nio.ch.FileDispatcherImpl.pread
  [17] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [18] sun.nio.ch.IOUtil.read
  [19] sun.nio.ch.IOUtil.read
  [20] sun.nio.ch.FileChannelImpl.readInternal
  [21] sun.nio.ch.FileChannelImpl.read
  [22] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [23] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [24] jdk.nio.zipfs.ZipFileSystem$2.fill
  [25] java.util.zip.InflaterInputStream.read
  [26] java.io.InputStream.readNBytes
  [27] java.io.InputStream.readAllBytes
  [28] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [29] jdk.nio.zipfs.ZipPath.newByteChannel
  [30] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [31] java.nio.file.Files.newByteChannel
  [32] java.nio.file.Files.newByteChannel
  [33] java.nio.file.Files.readAllBytes
  [34] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [35] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25908.apply
  [36] cats.effect.IOFiber.$anonfun$8
  [37] cats.effect.IOFiber$$Lambda$196.0x0000000800dae2e0.apply
  [38] cats.effect.unsafe.WorkerThread.blockOn
  [39] scala.concurrent.package$.blocking
  [40] cats.effect.IOFiber.runLoop
  [41] cats.effect.IOFiber.execR
  [42] cats.effect.IOFiber.run
  [43] cats.effect.unsafe.WorkerThread.run

--- 460137733 ns (0.03%), 46 samples
  [ 0] __handle_mm_fault_[k]
  [ 1] handle_mm_fault_[k]
  [ 2] do_user_addr_fault_[k]
  [ 3] exc_page_fault_[k]
  [ 4] asm_exc_page_fault_[k]
  [ 5] java.io.InputStream.readNBytes
  [ 6] java.io.InputStream.readAllBytes
  [ 7] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [ 8] jdk.nio.zipfs.ZipPath.newByteChannel
  [ 9] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [10] java.nio.file.Files.newByteChannel
  [11] java.nio.file.Files.newByteChannel
  [12] java.nio.file.Files.readAllBytes
  [13] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [14] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25908.apply
  [15] cats.effect.IOFiber.$anonfun$8
  [16] cats.effect.IOFiber$$Lambda$196.0x0000000800dae2e0.apply
  [17] cats.effect.unsafe.WorkerThread.blockOn
  [18] scala.concurrent.package$.blocking
  [19] cats.effect.IOFiber.runLoop
  [20] cats.effect.IOFiber.execR
  [21] cats.effect.IOFiber.run
  [22] cats.effect.unsafe.WorkerThread.run

--- 460123625 ns (0.03%), 46 samples
  [ 0] jni_GetPrimitiveArrayCritical
  [ 1] java.util.zip.Inflater.inflateBytesBytes
  [ 2] java.util.zip.Inflater.inflate
  [ 3] java.util.zip.InflaterInputStream.read
  [ 4] java.io.InputStream.readNBytes
  [ 5] java.io.InputStream.readAllBytes
  [ 6] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [ 7] jdk.nio.zipfs.ZipPath.newByteChannel
  [ 8] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [ 9] java.nio.file.Files.newByteChannel
  [10] java.nio.file.Files.newByteChannel
  [11] java.nio.file.Files.readAllBytes
  [12] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [13] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25908.apply
  [14] cats.effect.IOFiber.$anonfun$8
  [15] cats.effect.IOFiber$$Lambda$196.0x0000000800dae2e0.apply
  [16] cats.effect.unsafe.WorkerThread.blockOn
  [17] scala.concurrent.package$.blocking
  [18] cats.effect.IOFiber.runLoop
  [19] cats.effect.IOFiber.execR
  [20] cats.effect.IOFiber.run
  [21] cats.effect.unsafe.WorkerThread.run

--- 450650641 ns (0.03%), 45 samples
  [ 0] read_tsc_[k]
  [ 1] gethrtime?[zfs]_[k]
  [ 2] dmu_zfetch_stream_create?[zfs]_[k]
  [ 3] dmu_zfetch_prepare?[zfs]_[k]
  [ 4] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 5] dmu_read_uio_dnode?[zfs]_[k]
  [ 6] dmu_read_uio_dbuf?[zfs]_[k]
  [ 7] mappedread?[zfs]_[k]
  [ 8] zfs_read?[zfs]_[k]
  [ 9] zpl_iter_read?[zfs]_[k]
  [10] new_sync_read_[k]
  [11] vfs_read_[k]
  [12] __x64_sys_pread64_[k]
  [13] do_syscall_64_[k]
  [14] entry_SYSCALL_64_after_hwframe_[k]
  [15] __libc_pread64
  [16] sun.nio.ch.FileDispatcherImpl.pread0
  [17] sun.nio.ch.FileDispatcherImpl.pread
  [18] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [19] sun.nio.ch.IOUtil.read
  [20] sun.nio.ch.IOUtil.read
  [21] sun.nio.ch.FileChannelImpl.readInternal
  [22] sun.nio.ch.FileChannelImpl.read
  [23] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [24] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [25] jdk.nio.zipfs.ZipFileSystem$2.fill
  [26] java.util.zip.InflaterInputStream.read
  [27] java.io.InputStream.readNBytes
  [28] java.io.InputStream.readAllBytes
  [29] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [30] jdk.nio.zipfs.ZipPath.newByteChannel
  [31] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [32] java.nio.file.Files.newByteChannel
  [33] java.nio.file.Files.newByteChannel
  [34] java.nio.file.Files.readAllBytes
  [35] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [36] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25908.apply
  [37] cats.effect.IOFiber.$anonfun$8
  [38] cats.effect.IOFiber$$Lambda$196.0x0000000800dae2e0.apply
  [39] cats.effect.unsafe.WorkerThread.blockOn
  [40] scala.concurrent.package$.blocking
  [41] cats.effect.IOFiber.runLoop
  [42] cats.effect.IOFiber.execR
  [43] cats.effect.IOFiber.run
  [44] cats.effect.unsafe.WorkerThread.run

--- 440684889 ns (0.03%), 44 samples
  [ 0] do_user_addr_fault_[k]
  [ 1] exc_page_fault_[k]
  [ 2] asm_exc_page_fault_[k]
  [ 3] __memcpy_sse2_unaligned_erms
  [ 4] G1ParEvacuateFollowersClosure::do_void()
  [ 5] G1EvacuateRegionsTask::evacuate_live_objects(G1ParScanThreadState*, unsigned int)
  [ 6] G1EvacuateRegionsBaseTask::work(unsigned int)
  [ 7] GangWorker::loop()
  [ 8] GangWorker::run()
  [ 9] Thread::call_run()
  [10] thread_native_entry(Thread*)
  [11] start_thread

--- 440274074 ns (0.03%), 44 samples
  [ 0] do_user_addr_fault_[k]
  [ 1] exc_page_fault_[k]
  [ 2] asm_exc_page_fault_[k]
  [ 3] __memset_avx2_unaligned_erms
  [ 4] MemAllocator::allocate() const
  [ 5] TypeArrayKlass::allocate_common(int, bool, JavaThread*)
  [ 6] JVMCIRuntime::new_array_common(JavaThread*, Klass*, int, bool)
  [ 7] jdk.nio.zipfs.ByteArrayChannel.endRead
  [ 8] jdk.nio.zipfs.ByteArrayChannel.size
  [ 9] java.nio.file.Files.readAllBytes
  [10] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [11] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25908.apply
  [12] cats.effect.IOFiber.$anonfun$8
  [13] cats.effect.IOFiber$$Lambda$196.0x0000000800dae2e0.apply
  [14] cats.effect.unsafe.WorkerThread.blockOn
  [15] scala.concurrent.package$.blocking
  [16] cats.effect.IOFiber.runLoop
  [17] cats.effect.IOFiber.execR
  [18] cats.effect.IOFiber.run
  [19] cats.effect.unsafe.WorkerThread.run

--- 440146129 ns (0.03%), 44 samples
  [ 0] void OopOopIterateDispatch<G1CMOopClosure>::Table::oop_oop_iterate<InstanceMirrorKlass, narrowOop>(G1CMOopClosure*, oopDesc*, Klass*)
  [ 1] void G1CMTask::process_grey_task_entry<true>(G1TaskQueueEntry)
  [ 2] G1CMTask::do_marking_step(double, bool, bool)
  [ 3] G1CMConcurrentMarkingTask::work(unsigned int)
  [ 4] GangWorker::loop()
  [ 5] GangWorker::run()
  [ 6] Thread::call_run()
  [ 7] thread_native_entry(Thread*)
  [ 8] start_thread

--- 430869587 ns (0.03%), 43 samples
  [ 0] percpu_counter_add_batch_[k]
  [ 1] wmsum_add?[zfs]_[k]
  [ 2] arc_buf_access?[zfs]_[k]
  [ 3] dbuf_hold_impl?[zfs]_[k]
  [ 4] dbuf_hold_level?[zfs]_[k]
  [ 5] dbuf_hold?[zfs]_[k]
  [ 6] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 7] dmu_read_uio_dnode?[zfs]_[k]
  [ 8] dmu_read_uio_dbuf?[zfs]_[k]
  [ 9] mappedread?[zfs]_[k]
  [10] zfs_read?[zfs]_[k]
  [11] zpl_iter_read?[zfs]_[k]
  [12] new_sync_read_[k]
  [13] vfs_read_[k]
  [14] __x64_sys_pread64_[k]
  [15] do_syscall_64_[k]
  [16] entry_SYSCALL_64_after_hwframe_[k]
  [17] __libc_pread64
  [18] sun.nio.ch.FileDispatcherImpl.pread0
  [19] sun.nio.ch.FileDispatcherImpl.pread
  [20] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [21] sun.nio.ch.IOUtil.read
  [22] sun.nio.ch.IOUtil.read
  [23] sun.nio.ch.FileChannelImpl.readInternal
  [24] sun.nio.ch.FileChannelImpl.read
  [25] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [26] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [27] jdk.nio.zipfs.ZipFileSystem$2.fill
  [28] java.util.zip.InflaterInputStream.read
  [29] java.io.InputStream.readNBytes
  [30] java.io.InputStream.readAllBytes
  [31] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [32] jdk.nio.zipfs.ZipPath.newByteChannel
  [33] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [34] java.nio.file.Files.newByteChannel
  [35] java.nio.file.Files.newByteChannel
  [36] java.nio.file.Files.readAllBytes
  [37] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [38] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25908.apply
  [39] cats.effect.IOFiber.$anonfun$8
  [40] cats.effect.IOFiber$$Lambda$196.0x0000000800dae2e0.apply
  [41] cats.effect.unsafe.WorkerThread.blockOn
  [42] scala.concurrent.package$.blocking
  [43] cats.effect.IOFiber.runLoop
  [44] cats.effect.IOFiber.execR
  [45] cats.effect.IOFiber.run
  [46] cats.effect.unsafe.WorkerThread.run

--- 430282948 ns (0.03%), 43 samples
  [ 0] CompiledMethod::cleanup_inline_caches_impl(bool, bool)
  [ 1] CompiledMethod::unload_nmethod_caches(bool)
  [ 2] nmethod::do_unloading(bool)
  [ 3] CodeCacheUnloadingTask::work(unsigned int)
  [ 4] G1ParallelCleaningTask::work(unsigned int)
  [ 5] GangWorker::loop()
  [ 6] GangWorker::run()
  [ 7] Thread::call_run()
  [ 8] thread_native_entry(Thread*)
  [ 9] start_thread

--- 420717191 ns (0.03%), 42 samples
  [ 0] dmu_zfetch_stream_create?[zfs]_[k]
  [ 1] dmu_zfetch_prepare?[zfs]_[k]
  [ 2] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 3] dmu_read_uio_dnode?[zfs]_[k]
  [ 4] dmu_read_uio_dbuf?[zfs]_[k]
  [ 5] mappedread?[zfs]_[k]
  [ 6] zfs_read?[zfs]_[k]
  [ 7] zpl_iter_read?[zfs]_[k]
  [ 8] new_sync_read_[k]
  [ 9] vfs_read_[k]
  [10] __x64_sys_pread64_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] __libc_pread64
  [14] sun.nio.ch.FileDispatcherImpl.pread0
  [15] sun.nio.ch.FileDispatcherImpl.pread
  [16] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [17] sun.nio.ch.IOUtil.read
  [18] sun.nio.ch.IOUtil.read
  [19] sun.nio.ch.FileChannelImpl.readInternal
  [20] sun.nio.ch.FileChannelImpl.read
  [21] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [22] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [23] jdk.nio.zipfs.ZipFileSystem$2.fill
  [24] java.util.zip.InflaterInputStream.read
  [25] java.io.InputStream.readNBytes
  [26] java.io.InputStream.readAllBytes
  [27] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [28] jdk.nio.zipfs.ZipPath.newByteChannel
  [29] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [30] java.nio.file.Files.newByteChannel
  [31] java.nio.file.Files.newByteChannel
  [32] java.nio.file.Files.readAllBytes
  [33] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [34] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25908.apply
  [35] cats.effect.IOFiber.$anonfun$8
  [36] cats.effect.IOFiber$$Lambda$196.0x0000000800dae2e0.apply
  [37] cats.effect.unsafe.WorkerThread.blockOn
  [38] scala.concurrent.package$.blocking
  [39] cats.effect.IOFiber.runLoop
  [40] cats.effect.IOFiber.execR
  [41] cats.effect.IOFiber.run
  [42] cats.effect.unsafe.WorkerThread.run

--- 419992194 ns (0.03%), 42 samples
  [ 0] void G1CMTask::process_grey_task_entry<true>(G1TaskQueueEntry)
  [ 1] G1CMTask::do_marking_step(double, bool, bool)
  [ 2] G1CMConcurrentMarkingTask::work(unsigned int)
  [ 3] GangWorker::loop()
  [ 4] GangWorker::run()
  [ 5] Thread::call_run()
  [ 6] thread_native_entry(Thread*)
  [ 7] start_thread

--- 411600848 ns (0.03%), 41 samples
  [ 0] G1ParScanThreadState::steal_and_trim_queue(GenericTaskQueueSet<OverflowTaskQueue<ScannerTask, (MEMFLAGS)5, 131072u>, (MEMFLAGS)5>*)
  [ 1] G1ParEvacuateFollowersClosure::do_void()
  [ 2] G1EvacuateRegionsTask::evacuate_live_objects(G1ParScanThreadState*, unsigned int)
  [ 3] G1EvacuateRegionsBaseTask::work(unsigned int)
  [ 4] GangWorker::loop()
  [ 5] GangWorker::run()
  [ 6] Thread::call_run()
  [ 7] thread_native_entry(Thread*)
  [ 8] start_thread

--- 410671271 ns (0.03%), 41 samples
  [ 0] zrl_add_impl?[zfs]_[k]
  [ 1] dmu_read_uio_dbuf?[zfs]_[k]
  [ 2] mappedread?[zfs]_[k]
  [ 3] zfs_read?[zfs]_[k]
  [ 4] zpl_iter_read?[zfs]_[k]
  [ 5] new_sync_read_[k]
  [ 6] vfs_read_[k]
  [ 7] __x64_sys_pread64_[k]
  [ 8] do_syscall_64_[k]
  [ 9] entry_SYSCALL_64_after_hwframe_[k]
  [10] __libc_pread64
  [11] sun.nio.ch.FileDispatcherImpl.pread0
  [12] sun.nio.ch.FileDispatcherImpl.pread
  [13] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [14] sun.nio.ch.IOUtil.read
  [15] sun.nio.ch.IOUtil.read
  [16] sun.nio.ch.FileChannelImpl.readInternal
  [17] sun.nio.ch.FileChannelImpl.read
  [18] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [19] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [20] jdk.nio.zipfs.ZipFileSystem$2.fill
  [21] java.util.zip.InflaterInputStream.read
  [22] java.io.InputStream.readNBytes
  [23] java.io.InputStream.readAllBytes
  [24] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [25] jdk.nio.zipfs.ZipPath.newByteChannel
  [26] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [27] java.nio.file.Files.newByteChannel
  [28] java.nio.file.Files.newByteChannel
  [29] java.nio.file.Files.readAllBytes
  [30] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [31] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25908.apply
  [32] cats.effect.IOFiber.$anonfun$8
  [33] cats.effect.IOFiber$$Lambda$196.0x0000000800dae2e0.apply
  [34] cats.effect.unsafe.WorkerThread.blockOn
  [35] scala.concurrent.package$.blocking
  [36] cats.effect.IOFiber.runLoop
  [37] cats.effect.IOFiber.execR
  [38] cats.effect.IOFiber.run
  [39] cats.effect.unsafe.WorkerThread.run

--- 410494657 ns (0.03%), 41 samples
  [ 0] dmu_read_uio_dnode?[zfs]_[k]
  [ 1] dmu_read_uio_dbuf?[zfs]_[k]
  [ 2] mappedread?[zfs]_[k]
  [ 3] zfs_read?[zfs]_[k]
  [ 4] zpl_iter_read?[zfs]_[k]
  [ 5] new_sync_read_[k]
  [ 6] vfs_read_[k]
  [ 7] __x64_sys_pread64_[k]
  [ 8] do_syscall_64_[k]
  [ 9] entry_SYSCALL_64_after_hwframe_[k]
  [10] __libc_pread64
  [11] sun.nio.ch.FileDispatcherImpl.pread0
  [12] sun.nio.ch.FileDispatcherImpl.pread
  [13] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [14] sun.nio.ch.IOUtil.read
  [15] sun.nio.ch.IOUtil.read
  [16] sun.nio.ch.FileChannelImpl.readInternal
  [17] sun.nio.ch.FileChannelImpl.read
  [18] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [19] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [20] jdk.nio.zipfs.ZipFileSystem$2.fill
  [21] java.util.zip.InflaterInputStream.read
  [22] java.io.InputStream.readNBytes
  [23] java.io.InputStream.readAllBytes
  [24] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [25] jdk.nio.zipfs.ZipPath.newByteChannel
  [26] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [27] java.nio.file.Files.newByteChannel
  [28] java.nio.file.Files.newByteChannel
  [29] java.nio.file.Files.readAllBytes
  [30] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [31] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25908.apply
  [32] cats.effect.IOFiber.$anonfun$8
  [33] cats.effect.IOFiber$$Lambda$196.0x0000000800dae2e0.apply
  [34] cats.effect.unsafe.WorkerThread.blockOn
  [35] scala.concurrent.package$.blocking
  [36] cats.effect.IOFiber.runLoop
  [37] cats.effect.IOFiber.execR
  [38] cats.effect.IOFiber.run
  [39] cats.effect.unsafe.WorkerThread.run

--- 410328958 ns (0.03%), 41 samples
  [ 0] multilist_remove?[zfs]_[k]
  [ 1] dbuf_hold_impl?[zfs]_[k]
  [ 2] dbuf_hold_level?[zfs]_[k]
  [ 3] dbuf_hold?[zfs]_[k]
  [ 4] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 5] dmu_read_uio_dnode?[zfs]_[k]
  [ 6] dmu_read_uio_dbuf?[zfs]_[k]
  [ 7] mappedread?[zfs]_[k]
  [ 8] zfs_read?[zfs]_[k]
  [ 9] zpl_iter_read?[zfs]_[k]
  [10] new_sync_read_[k]
  [11] vfs_read_[k]
  [12] __x64_sys_pread64_[k]
  [13] do_syscall_64_[k]
  [14] entry_SYSCALL_64_after_hwframe_[k]
  [15] __libc_pread64
  [16] sun.nio.ch.FileDispatcherImpl.pread0
  [17] sun.nio.ch.FileDispatcherImpl.pread
  [18] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [19] sun.nio.ch.IOUtil.read
  [20] sun.nio.ch.IOUtil.read
  [21] sun.nio.ch.FileChannelImpl.readInternal
  [22] sun.nio.ch.FileChannelImpl.read
  [23] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [24] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [25] jdk.nio.zipfs.ZipFileSystem$2.fill
  [26] java.util.zip.InflaterInputStream.read
  [27] java.io.InputStream.readNBytes
  [28] java.io.InputStream.readAllBytes
  [29] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [30] jdk.nio.zipfs.ZipPath.newByteChannel
  [31] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [32] java.nio.file.Files.newByteChannel
  [33] java.nio.file.Files.newByteChannel
  [34] java.nio.file.Files.readAllBytes
  [35] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [36] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25908.apply
  [37] cats.effect.IOFiber.$anonfun$8
  [38] cats.effect.IOFiber$$Lambda$196.0x0000000800dae2e0.apply
  [39] cats.effect.unsafe.WorkerThread.blockOn
  [40] scala.concurrent.package$.blocking
  [41] cats.effect.IOFiber.runLoop
  [42] cats.effect.IOFiber.execR
  [43] cats.effect.IOFiber.run
  [44] cats.effect.unsafe.WorkerThread.run

--- 400219264 ns (0.03%), 40 samples
  [ 0] _raw_spin_lock_[k]
  [ 1] dbuf_hold_impl?[zfs]_[k]
  [ 2] dbuf_hold_level?[zfs]_[k]
  [ 3] dbuf_hold?[zfs]_[k]
  [ 4] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 5] dmu_read_uio_dnode?[zfs]_[k]
  [ 6] dmu_read_uio_dbuf?[zfs]_[k]
  [ 7] mappedread?[zfs]_[k]
  [ 8] zfs_read?[zfs]_[k]
  [ 9] zpl_iter_read?[zfs]_[k]
  [10] new_sync_read_[k]
  [11] vfs_read_[k]
  [12] __x64_sys_pread64_[k]
  [13] do_syscall_64_[k]
  [14] entry_SYSCALL_64_after_hwframe_[k]
  [15] __libc_pread64
  [16] sun.nio.ch.FileDispatcherImpl.pread0
  [17] sun.nio.ch.FileDispatcherImpl.pread
  [18] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [19] sun.nio.ch.IOUtil.read
  [20] sun.nio.ch.IOUtil.read
  [21] sun.nio.ch.FileChannelImpl.readInternal
  [22] sun.nio.ch.FileChannelImpl.read
  [23] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [24] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [25] jdk.nio.zipfs.ZipFileSystem$2.fill
  [26] java.util.zip.InflaterInputStream.read
  [27] java.io.InputStream.readNBytes
  [28] java.io.InputStream.readAllBytes
  [29] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [30] jdk.nio.zipfs.ZipPath.newByteChannel
  [31] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [32] java.nio.file.Files.newByteChannel
  [33] java.nio.file.Files.newByteChannel
  [34] java.nio.file.Files.readAllBytes
  [35] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [36] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25908.apply
  [37] cats.effect.IOFiber.$anonfun$8
  [38] cats.effect.IOFiber$$Lambda$196.0x0000000800dae2e0.apply
  [39] cats.effect.unsafe.WorkerThread.blockOn
  [40] scala.concurrent.package$.blocking
  [41] cats.effect.IOFiber.runLoop
  [42] cats.effect.IOFiber.execR
  [43] cats.effect.IOFiber.run
  [44] cats.effect.unsafe.WorkerThread.run

--- 390567897 ns (0.03%), 39 samples
  [ 0] __filemap_get_folio_[k]
  [ 1] pagecache_get_page_[k]
  [ 2] find_lock_page?[zfs]_[k]
  [ 3] mappedread?[zfs]_[k]
  [ 4] zfs_read?[zfs]_[k]
  [ 5] zpl_iter_read?[zfs]_[k]
  [ 6] new_sync_read_[k]
  [ 7] vfs_read_[k]
  [ 8] __x64_sys_pread64_[k]
  [ 9] do_syscall_64_[k]
  [10] entry_SYSCALL_64_after_hwframe_[k]
  [11] __libc_pread64
  [12] sun.nio.ch.FileDispatcherImpl.pread0
  [13] sun.nio.ch.FileDispatcherImpl.pread
  [14] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [15] sun.nio.ch.IOUtil.read
  [16] sun.nio.ch.IOUtil.read
  [17] sun.nio.ch.FileChannelImpl.readInternal
  [18] sun.nio.ch.FileChannelImpl.read
  [19] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [20] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [21] jdk.nio.zipfs.ZipFileSystem$2.fill
  [22] java.util.zip.InflaterInputStream.read
  [23] java.io.InputStream.readNBytes
  [24] java.io.InputStream.readAllBytes
  [25] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [26] jdk.nio.zipfs.ZipPath.newByteChannel
  [27] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [28] java.nio.file.Files.newByteChannel
  [29] java.nio.file.Files.newByteChannel
  [30] java.nio.file.Files.readAllBytes
  [31] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [32] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25908.apply
  [33] cats.effect.IOFiber.$anonfun$8
  [34] cats.effect.IOFiber$$Lambda$196.0x0000000800dae2e0.apply
  [35] cats.effect.unsafe.WorkerThread.blockOn
  [36] scala.concurrent.package$.blocking
  [37] cats.effect.IOFiber.runLoop
  [38] cats.effect.IOFiber.execR
  [39] cats.effect.IOFiber.run
  [40] cats.effect.unsafe.WorkerThread.run

--- 390387372 ns (0.03%), 39 samples
  [ 0] do_user_addr_fault_[k]
  [ 1] exc_page_fault_[k]
  [ 2] asm_exc_page_fault_[k]
  [ 3] __memcpy_sse2_unaligned_erms
  [ 4] G1ParScanThreadState::steal_and_trim_queue(GenericTaskQueueSet<OverflowTaskQueue<ScannerTask, (MEMFLAGS)5, 131072u>, (MEMFLAGS)5>*)
  [ 5] G1ParEvacuateFollowersClosure::do_void()
  [ 6] G1EvacuateRegionsTask::evacuate_live_objects(G1ParScanThreadState*, unsigned int)
  [ 7] G1EvacuateRegionsBaseTask::work(unsigned int)
  [ 8] GangWorker::loop()
  [ 9] GangWorker::run()
  [10] Thread::call_run()
  [11] thread_native_entry(Thread*)
  [12] start_thread

--- 390228021 ns (0.03%), 39 samples
  [ 0] _raw_spin_lock_[k]
  [ 1] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 2] dmu_read_uio_dnode?[zfs]_[k]
  [ 3] dmu_read_uio_dbuf?[zfs]_[k]
  [ 4] mappedread?[zfs]_[k]
  [ 5] zfs_read?[zfs]_[k]
  [ 6] zpl_iter_read?[zfs]_[k]
  [ 7] new_sync_read_[k]
  [ 8] vfs_read_[k]
  [ 9] __x64_sys_pread64_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] __libc_pread64
  [13] sun.nio.ch.FileDispatcherImpl.pread0
  [14] sun.nio.ch.FileDispatcherImpl.pread
  [15] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [16] sun.nio.ch.IOUtil.read
  [17] sun.nio.ch.IOUtil.read
  [18] sun.nio.ch.FileChannelImpl.readInternal
  [19] sun.nio.ch.FileChannelImpl.read
  [20] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [21] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [22] jdk.nio.zipfs.ZipFileSystem$2.fill
  [23] java.util.zip.InflaterInputStream.read
  [24] java.io.InputStream.readNBytes
  [25] java.io.InputStream.readAllBytes
  [26] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [27] jdk.nio.zipfs.ZipPath.newByteChannel
  [28] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [29] java.nio.file.Files.newByteChannel
  [30] java.nio.file.Files.newByteChannel
  [31] java.nio.file.Files.readAllBytes
  [32] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [33] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25908.apply
  [34] cats.effect.IOFiber.$anonfun$8
  [35] cats.effect.IOFiber$$Lambda$196.0x0000000800dae2e0.apply
  [36] cats.effect.unsafe.WorkerThread.blockOn
  [37] scala.concurrent.package$.blocking
  [38] cats.effect.IOFiber.runLoop
  [39] cats.effect.IOFiber.execR
  [40] cats.effect.IOFiber.run
  [41] cats.effect.unsafe.WorkerThread.run

--- 360826781 ns (0.02%), 36 samples
  [ 0] kfree_[k]
  [ 1] spl_kmem_free_impl?[spl]_[k]
  [ 2] spl_kmem_free?[spl]_[k]
  [ 3] zfs_rangelock_free?[zfs]_[k]
  [ 4] zfs_rangelock_exit?[zfs]_[k]
  [ 5] zfs_read?[zfs]_[k]
  [ 6] zpl_iter_read?[zfs]_[k]
  [ 7] new_sync_read_[k]
  [ 8] vfs_read_[k]
  [ 9] __x64_sys_pread64_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] __libc_pread64
  [13] sun.nio.ch.FileDispatcherImpl.pread0
  [14] sun.nio.ch.FileDispatcherImpl.pread
  [15] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [16] sun.nio.ch.IOUtil.read
  [17] sun.nio.ch.IOUtil.read
  [18] sun.nio.ch.FileChannelImpl.readInternal
  [19] sun.nio.ch.FileChannelImpl.read
  [20] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [21] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [22] jdk.nio.zipfs.ZipFileSystem$2.fill
  [23] java.util.zip.InflaterInputStream.read
  [24] java.io.InputStream.readNBytes
  [25] java.io.InputStream.readAllBytes
  [26] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [27] jdk.nio.zipfs.ZipPath.newByteChannel
  [28] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [29] java.nio.file.Files.newByteChannel
  [30] java.nio.file.Files.newByteChannel
  [31] java.nio.file.Files.readAllBytes
  [32] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [33] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25908.apply
  [34] cats.effect.IOFiber.$anonfun$8
  [35] cats.effect.IOFiber$$Lambda$196.0x0000000800dae2e0.apply
  [36] cats.effect.unsafe.WorkerThread.blockOn
  [37] scala.concurrent.package$.blocking
  [38] cats.effect.IOFiber.runLoop
  [39] cats.effect.IOFiber.execR
  [40] cats.effect.IOFiber.run
  [41] cats.effect.unsafe.WorkerThread.run

--- 360561602 ns (0.02%), 36 samples
  [ 0] dbuf_read_verify_dnode_crypt?[zfs]_[k]
  [ 1] dbuf_read?[zfs]_[k]
  [ 2] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 3] dmu_read_uio_dnode?[zfs]_[k]
  [ 4] dmu_read_uio_dbuf?[zfs]_[k]
  [ 5] mappedread?[zfs]_[k]
  [ 6] zfs_read?[zfs]_[k]
  [ 7] zpl_iter_read?[zfs]_[k]
  [ 8] new_sync_read_[k]
  [ 9] vfs_read_[k]
  [10] __x64_sys_pread64_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] __libc_pread64
  [14] sun.nio.ch.FileDispatcherImpl.pread0
  [15] sun.nio.ch.FileDispatcherImpl.pread
  [16] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [17] sun.nio.ch.IOUtil.read
  [18] sun.nio.ch.IOUtil.read
  [19] sun.nio.ch.FileChannelImpl.readInternal
  [20] sun.nio.ch.FileChannelImpl.read
  [21] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [22] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [23] jdk.nio.zipfs.ZipFileSystem$2.fill
  [24] java.util.zip.InflaterInputStream.read
  [25] java.io.InputStream.readNBytes
  [26] java.io.InputStream.readAllBytes
  [27] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [28] jdk.nio.zipfs.ZipPath.newByteChannel
  [29] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [30] java.nio.file.Files.newByteChannel
  [31] java.nio.file.Files.newByteChannel
  [32] java.nio.file.Files.readAllBytes
  [33] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [34] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25908.apply
  [35] cats.effect.IOFiber.$anonfun$8
  [36] cats.effect.IOFiber$$Lambda$196.0x0000000800dae2e0.apply
  [37] cats.effect.unsafe.WorkerThread.blockOn
  [38] scala.concurrent.package$.blocking
  [39] cats.effect.IOFiber.runLoop
  [40] cats.effect.IOFiber.execR
  [41] cats.effect.IOFiber.run
  [42] cats.effect.unsafe.WorkerThread.run

--- 359204392 ns (0.02%), 36 samples
  [ 0] _raw_spin_unlock_irqrestore_[k]
  [ 1] release_pages_[k]
  [ 2] free_pages_and_swap_cache_[k]
  [ 3] tlb_batch_pages_flush_[k]
  [ 4] tlb_finish_mmu_[k]
  [ 5] unmap_region_[k]
  [ 6] __do_munmap_[k]
  [ 7] mmap_region_[k]
  [ 8] do_mmap_[k]
  [ 9] vm_mmap_pgoff_[k]
  [10] ksys_mmap_pgoff_[k]
  [11] __x64_sys_mmap_[k]
  [12] do_syscall_64_[k]
  [13] entry_SYSCALL_64_after_hwframe_[k]
  [14] __GI___mmap
  [15] G1PageBasedVirtualSpace::uncommit(unsigned long, unsigned long)
  [16] G1RegionsLargerThanCommitSizeMapper::uncommit_regions(unsigned int, unsigned long)
  [17] HeapRegionManager::uncommit_regions(unsigned int, unsigned int)
  [18] HeapRegionManager::uncommit_inactive_regions(unsigned int)
  [19] G1UncommitRegionTask::execute()
  [20] G1ServiceThread::run_task(G1ServiceTask*)
  [21] G1ServiceThread::run_service()
  [22] ConcurrentGCThread::run()
  [23] Thread::call_run()
  [24] thread_native_entry(Thread*)
  [25] start_thread

--- 350508094 ns (0.02%), 35 samples
  [ 0] _raw_spin_lock_[k]
  [ 1] check_heap_object_[k]
  [ 2] __check_object_size.part.0_[k]
  [ 3] __check_object_size_[k]
  [ 4] zfs_uiomove_iter?[zfs]_[k]
  [ 5] zfs_uiomove?[zfs]_[k]
  [ 6] dmu_read_uio_dnode?[zfs]_[k]
  [ 7] dmu_read_uio_dbuf?[zfs]_[k]
  [ 8] mappedread?[zfs]_[k]
  [ 9] zfs_read?[zfs]_[k]
  [10] zpl_iter_read?[zfs]_[k]
  [11] new_sync_read_[k]
  [12] vfs_read_[k]
  [13] __x64_sys_pread64_[k]
  [14] do_syscall_64_[k]
  [15] entry_SYSCALL_64_after_hwframe_[k]
  [16] __libc_pread64
  [17] sun.nio.ch.FileDispatcherImpl.pread0
  [18] sun.nio.ch.FileDispatcherImpl.pread
  [19] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [20] sun.nio.ch.IOUtil.read
  [21] sun.nio.ch.IOUtil.read
  [22] sun.nio.ch.FileChannelImpl.readInternal
  [23] sun.nio.ch.FileChannelImpl.read
  [24] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [25] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [26] jdk.nio.zipfs.ZipFileSystem$2.fill
  [27] java.util.zip.InflaterInputStream.read
  [28] java.io.InputStream.readNBytes
  [29] java.io.InputStream.readAllBytes
  [30] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [31] jdk.nio.zipfs.ZipPath.newByteChannel
  [32] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [33] java.nio.file.Files.newByteChannel
  [34] java.nio.file.Files.newByteChannel
  [35] java.nio.file.Files.readAllBytes
  [36] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [37] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25908.apply
  [38] cats.effect.IOFiber.$anonfun$8
  [39] cats.effect.IOFiber$$Lambda$196.0x0000000800dae2e0.apply
  [40] cats.effect.unsafe.WorkerThread.blockOn
  [41] scala.concurrent.package$.blocking
  [42] cats.effect.IOFiber.runLoop
  [43] cats.effect.IOFiber.execR
  [44] cats.effect.IOFiber.run
  [45] cats.effect.unsafe.WorkerThread.run

--- 350425200 ns (0.02%), 35 samples
  [ 0] _raw_spin_lock_[k]
  [ 1] zio_wait?[zfs]_[k]
  [ 2] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 3] dmu_read_uio_dnode?[zfs]_[k]
  [ 4] dmu_read_uio_dbuf?[zfs]_[k]
  [ 5] mappedread?[zfs]_[k]
  [ 6] zfs_read?[zfs]_[k]
  [ 7] zpl_iter_read?[zfs]_[k]
  [ 8] new_sync_read_[k]
  [ 9] vfs_read_[k]
  [10] __x64_sys_pread64_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] __libc_pread64
  [14] sun.nio.ch.FileDispatcherImpl.pread0
  [15] sun.nio.ch.FileDispatcherImpl.pread
  [16] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [17] sun.nio.ch.IOUtil.read
  [18] sun.nio.ch.IOUtil.read
  [19] sun.nio.ch.FileChannelImpl.readInternal
  [20] sun.nio.ch.FileChannelImpl.read
  [21] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [22] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [23] jdk.nio.zipfs.ZipFileSystem$2.fill
  [24] java.util.zip.InflaterInputStream.read
  [25] java.io.InputStream.readNBytes
  [26] java.io.InputStream.readAllBytes
  [27] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [28] jdk.nio.zipfs.ZipPath.newByteChannel
  [29] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [30] java.nio.file.Files.newByteChannel
  [31] java.nio.file.Files.newByteChannel
  [32] java.nio.file.Files.readAllBytes
  [33] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [34] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25908.apply
  [35] cats.effect.IOFiber.$anonfun$8
  [36] cats.effect.IOFiber$$Lambda$196.0x0000000800dae2e0.apply
  [37] cats.effect.unsafe.WorkerThread.blockOn
  [38] scala.concurrent.package$.blocking
  [39] cats.effect.IOFiber.runLoop
  [40] cats.effect.IOFiber.execR
  [41] cats.effect.IOFiber.run
  [42] cats.effect.unsafe.WorkerThread.run

--- 340451297 ns (0.02%), 34 samples
  [ 0] mappedread?[zfs]_[k]
  [ 1] zfs_read?[zfs]_[k]
  [ 2] zpl_iter_read?[zfs]_[k]
  [ 3] new_sync_read_[k]
  [ 4] vfs_read_[k]
  [ 5] __x64_sys_pread64_[k]
  [ 6] do_syscall_64_[k]
  [ 7] entry_SYSCALL_64_after_hwframe_[k]
  [ 8] __libc_pread64
  [ 9] sun.nio.ch.FileDispatcherImpl.pread0
  [10] sun.nio.ch.FileDispatcherImpl.pread
  [11] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [12] sun.nio.ch.IOUtil.read
  [13] sun.nio.ch.IOUtil.read
  [14] sun.nio.ch.FileChannelImpl.readInternal
  [15] sun.nio.ch.FileChannelImpl.read
  [16] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [17] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [18] jdk.nio.zipfs.ZipFileSystem$2.fill
  [19] java.util.zip.InflaterInputStream.read
  [20] java.io.InputStream.readNBytes
  [21] java.io.InputStream.readAllBytes
  [22] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [23] jdk.nio.zipfs.ZipPath.newByteChannel
  [24] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [25] java.nio.file.Files.newByteChannel
  [26] java.nio.file.Files.newByteChannel
  [27] java.nio.file.Files.readAllBytes
  [28] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [29] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25908.apply
  [30] cats.effect.IOFiber.$anonfun$8
  [31] cats.effect.IOFiber$$Lambda$196.0x0000000800dae2e0.apply
  [32] cats.effect.unsafe.WorkerThread.blockOn
  [33] scala.concurrent.package$.blocking
  [34] cats.effect.IOFiber.runLoop
  [35] cats.effect.IOFiber.execR
  [36] cats.effect.IOFiber.run
  [37] cats.effect.unsafe.WorkerThread.run

--- 330878789 ns (0.02%), 33 samples
  [ 0] apparmor_file_permission_[k]
  [ 1] security_file_permission_[k]
  [ 2] rw_verify_area_[k]
  [ 3] vfs_read_[k]
  [ 4] __x64_sys_pread64_[k]
  [ 5] do_syscall_64_[k]
  [ 6] entry_SYSCALL_64_after_hwframe_[k]
  [ 7] __libc_pread64
  [ 8] sun.nio.ch.FileDispatcherImpl.pread0
  [ 9] sun.nio.ch.FileDispatcherImpl.pread
  [10] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [11] sun.nio.ch.IOUtil.read
  [12] sun.nio.ch.IOUtil.read
  [13] sun.nio.ch.FileChannelImpl.readInternal
  [14] sun.nio.ch.FileChannelImpl.read
  [15] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [16] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [17] jdk.nio.zipfs.ZipFileSystem$2.fill
  [18] java.util.zip.InflaterInputStream.read
  [19] java.io.InputStream.readNBytes
  [20] java.io.InputStream.readAllBytes
  [21] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [22] jdk.nio.zipfs.ZipPath.newByteChannel
  [23] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [24] java.nio.file.Files.newByteChannel
  [25] java.nio.file.Files.newByteChannel
  [26] java.nio.file.Files.readAllBytes
  [27] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [28] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25908.apply
  [29] cats.effect.IOFiber.$anonfun$8
  [30] cats.effect.IOFiber$$Lambda$196.0x0000000800dae2e0.apply
  [31] cats.effect.unsafe.WorkerThread.blockOn
  [32] scala.concurrent.package$.blocking
  [33] cats.effect.IOFiber.runLoop
  [34] cats.effect.IOFiber.execR
  [35] cats.effect.IOFiber.run
  [36] cats.effect.unsafe.WorkerThread.run

--- 330550996 ns (0.02%), 33 samples
  [ 0] zio_wait_for_children?[zfs]_[k]
  [ 1] zio_ready?[zfs]_[k]
  [ 2] zio_wait?[zfs]_[k]
  [ 3] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 4] dmu_read_uio_dnode?[zfs]_[k]
  [ 5] dmu_read_uio_dbuf?[zfs]_[k]
  [ 6] mappedread?[zfs]_[k]
  [ 7] zfs_read?[zfs]_[k]
  [ 8] zpl_iter_read?[zfs]_[k]
  [ 9] new_sync_read_[k]
  [10] vfs_read_[k]
  [11] __x64_sys_pread64_[k]
  [12] do_syscall_64_[k]
  [13] entry_SYSCALL_64_after_hwframe_[k]
  [14] __libc_pread64
  [15] sun.nio.ch.FileDispatcherImpl.pread0
  [16] sun.nio.ch.FileDispatcherImpl.pread
  [17] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [18] sun.nio.ch.IOUtil.read
  [19] sun.nio.ch.IOUtil.read
  [20] sun.nio.ch.FileChannelImpl.readInternal
  [21] sun.nio.ch.FileChannelImpl.read
  [22] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [23] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [24] jdk.nio.zipfs.ZipFileSystem$2.fill
  [25] java.util.zip.InflaterInputStream.read
  [26] java.io.InputStream.readNBytes
  [27] java.io.InputStream.readAllBytes
  [28] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [29] jdk.nio.zipfs.ZipPath.newByteChannel
  [30] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [31] java.nio.file.Files.newByteChannel
  [32] java.nio.file.Files.newByteChannel
  [33] java.nio.file.Files.readAllBytes
  [34] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [35] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25908.apply
  [36] cats.effect.IOFiber.$anonfun$8
  [37] cats.effect.IOFiber$$Lambda$196.0x0000000800dae2e0.apply
  [38] cats.effect.unsafe.WorkerThread.blockOn
  [39] scala.concurrent.package$.blocking
  [40] cats.effect.IOFiber.runLoop
  [41] cats.effect.IOFiber.execR
  [42] cats.effect.IOFiber.run
  [43] cats.effect.unsafe.WorkerThread.run

--- 330404366 ns (0.02%), 33 samples
  [ 0] __alloc_pages_[k]
  [ 1] __folio_alloc_[k]
  [ 2] vma_alloc_folio_[k]
  [ 3] do_anonymous_page_[k]
  [ 4] handle_pte_fault_[k]
  [ 5] __handle_mm_fault_[k]
  [ 6] handle_mm_fault_[k]
  [ 7] do_user_addr_fault_[k]
  [ 8] exc_page_fault_[k]
  [ 9] asm_exc_page_fault_[k]
  [10] java.io.InputStream.readNBytes
  [11] java.io.InputStream.readAllBytes
  [12] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [13] jdk.nio.zipfs.ZipPath.newByteChannel
  [14] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [15] java.nio.file.Files.newByteChannel
  [16] java.nio.file.Files.newByteChannel
  [17] java.nio.file.Files.readAllBytes
  [18] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [19] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25908.apply
  [20] cats.effect.IOFiber.$anonfun$8
  [21] cats.effect.IOFiber$$Lambda$196.0x0000000800dae2e0.apply
  [22] cats.effect.unsafe.WorkerThread.blockOn
  [23] scala.concurrent.package$.blocking
  [24] cats.effect.IOFiber.runLoop
  [25] cats.effect.IOFiber.execR
  [26] cats.effect.IOFiber.run
  [27] cats.effect.unsafe.WorkerThread.run

--- 330267228 ns (0.02%), 33 samples
  [ 0] __memcpy_avx_unaligned
  [ 1] java.util.zip.Inflater.inflateBytesBytes
  [ 2] java.util.zip.Inflater.inflate
  [ 3] java.util.zip.InflaterInputStream.read
  [ 4] java.io.InputStream.readNBytes
  [ 5] java.io.InputStream.readAllBytes
  [ 6] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [ 7] jdk.nio.zipfs.ZipPath.newByteChannel
  [ 8] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [ 9] java.nio.file.Files.newByteChannel
  [10] java.nio.file.Files.newByteChannel
  [11] java.nio.file.Files.readAllBytes
  [12] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [13] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25908.apply
  [14] cats.effect.IOFiber.$anonfun$8
  [15] cats.effect.IOFiber$$Lambda$196.0x0000000800dae2e0.apply
  [16] cats.effect.unsafe.WorkerThread.blockOn
  [17] scala.concurrent.package$.blocking
  [18] cats.effect.IOFiber.runLoop
  [19] cats.effect.IOFiber.execR
  [20] cats.effect.IOFiber.run
  [21] cats.effect.unsafe.WorkerThread.run

--- 330129254 ns (0.02%), 33 samples
  [ 0] do_user_addr_fault_[k]
  [ 1] exc_page_fault_[k]
  [ 2] asm_exc_page_fault_[k]
  [ 3] java.io.InputStream.readNBytes
  [ 4] java.io.InputStream.readAllBytes
  [ 5] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [ 6] jdk.nio.zipfs.ZipPath.newByteChannel
  [ 7] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [ 8] java.nio.file.Files.newByteChannel
  [ 9] java.nio.file.Files.newByteChannel
  [10] java.nio.file.Files.readAllBytes
  [11] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [12] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25908.apply
  [13] cats.effect.IOFiber.$anonfun$8
  [14] cats.effect.IOFiber$$Lambda$196.0x0000000800dae2e0.apply
  [15] cats.effect.unsafe.WorkerThread.blockOn
  [16] scala.concurrent.package$.blocking
  [17] cats.effect.IOFiber.runLoop
  [18] cats.effect.IOFiber.execR
  [19] cats.effect.IOFiber.run
  [20] cats.effect.unsafe.WorkerThread.run

--- 321202839 ns (0.02%), 32 samples
  [ 0] G1Allocator::survivor_attempt_allocation(unsigned long, unsigned long, unsigned long*, unsigned int)
  [ 1] G1PLABAllocator::allocate_direct_or_new_plab(G1HeapRegionAttr, unsigned long, bool*, unsigned int)
  [ 2] G1ParScanThreadState::allocate_copy_slow(G1HeapRegionAttr*, oopDesc*, unsigned long, unsigned int, unsigned int)
  [ 3] G1ParScanThreadState::trim_queue_to_threshold(unsigned int)
  [ 4] G1ParScanThreadState::steal_and_trim_queue(GenericTaskQueueSet<OverflowTaskQueue<ScannerTask, (MEMFLAGS)5, 131072u>, (MEMFLAGS)5>*)
  [ 5] G1ParEvacuateFollowersClosure::do_void()
  [ 6] G1EvacuateRegionsTask::evacuate_live_objects(G1ParScanThreadState*, unsigned int)
  [ 7] G1EvacuateRegionsBaseTask::work(unsigned int)
  [ 8] GangWorker::loop()
  [ 9] GangWorker::run()
  [10] Thread::call_run()
  [11] thread_native_entry(Thread*)
  [12] start_thread

--- 320523153 ns (0.02%), 32 samples
  [ 0] spl_kmem_cache_alloc?[spl]_[k]
  [ 1] zio_create?[zfs]_[k]
  [ 2] zio_null?[zfs]_[k]
  [ 3] zio_root?[zfs]_[k]
  [ 4] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 5] dmu_read_uio_dnode?[zfs]_[k]
  [ 6] dmu_read_uio_dbuf?[zfs]_[k]
  [ 7] mappedread?[zfs]_[k]
  [ 8] zfs_read?[zfs]_[k]
  [ 9] zpl_iter_read?[zfs]_[k]
  [10] new_sync_read_[k]
  [11] vfs_read_[k]
  [12] __x64_sys_pread64_[k]
  [13] do_syscall_64_[k]
  [14] entry_SYSCALL_64_after_hwframe_[k]
  [15] __libc_pread64
  [16] sun.nio.ch.FileDispatcherImpl.pread0
  [17] sun.nio.ch.FileDispatcherImpl.pread
  [18] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [19] sun.nio.ch.IOUtil.read
  [20] sun.nio.ch.IOUtil.read
  [21] sun.nio.ch.FileChannelImpl.readInternal
  [22] sun.nio.ch.FileChannelImpl.read
  [23] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [24] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [25] jdk.nio.zipfs.ZipFileSystem$2.fill
  [26] java.util.zip.InflaterInputStream.read
  [27] java.io.InputStream.readNBytes
  [28] java.io.InputStream.readAllBytes
  [29] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [30] jdk.nio.zipfs.ZipPath.newByteChannel
  [31] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [32] java.nio.file.Files.newByteChannel
  [33] java.nio.file.Files.newByteChannel
  [34] java.nio.file.Files.readAllBytes
  [35] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [36] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25908.apply
  [37] cats.effect.IOFiber.$anonfun$8
  [38] cats.effect.IOFiber$$Lambda$196.0x0000000800dae2e0.apply
  [39] cats.effect.unsafe.WorkerThread.blockOn
  [40] scala.concurrent.package$.blocking
  [41] cats.effect.IOFiber.runLoop
  [42] cats.effect.IOFiber.execR
  [43] cats.effect.IOFiber.run
  [44] cats.effect.unsafe.WorkerThread.run

--- 310507783 ns (0.02%), 31 samples
  [ 0] percpu_counter_add_batch_[k]
  [ 1] wmsum_add?[zfs]_[k]
  [ 2] dbuf_rele_and_unlock?[zfs]_[k]
  [ 3] dbuf_rele?[zfs]_[k]
  [ 4] dmu_buf_rele_array?[zfs]_[k]
  [ 5] dmu_read_uio_dnode?[zfs]_[k]
  [ 6] dmu_read_uio_dbuf?[zfs]_[k]
  [ 7] mappedread?[zfs]_[k]
  [ 8] zfs_read?[zfs]_[k]
  [ 9] zpl_iter_read?[zfs]_[k]
  [10] new_sync_read_[k]
  [11] vfs_read_[k]
  [12] __x64_sys_pread64_[k]
  [13] do_syscall_64_[k]
  [14] entry_SYSCALL_64_after_hwframe_[k]
  [15] __libc_pread64
  [16] sun.nio.ch.FileDispatcherImpl.pread0
  [17] sun.nio.ch.FileDispatcherImpl.pread
  [18] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [19] sun.nio.ch.IOUtil.read
  [20] sun.nio.ch.IOUtil.read
  [21] sun.nio.ch.FileChannelImpl.readInternal
  [22] sun.nio.ch.FileChannelImpl.read
  [23] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [24] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [25] jdk.nio.zipfs.ZipFileSystem$2.fill
  [26] java.util.zip.InflaterInputStream.read
  [27] java.io.InputStream.readNBytes
  [28] java.io.InputStream.readAllBytes
  [29] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [30] jdk.nio.zipfs.ZipPath.newByteChannel
  [31] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [32] java.nio.file.Files.newByteChannel
  [33] java.nio.file.Files.newByteChannel
  [34] java.nio.file.Files.readAllBytes
  [35] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [36] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25908.apply
  [37] cats.effect.IOFiber.$anonfun$8
  [38] cats.effect.IOFiber$$Lambda$196.0x0000000800dae2e0.apply
  [39] cats.effect.unsafe.WorkerThread.blockOn
  [40] scala.concurrent.package$.blocking
  [41] cats.effect.IOFiber.runLoop
  [42] cats.effect.IOFiber.execR
  [43] cats.effect.IOFiber.run
  [44] cats.effect.unsafe.WorkerThread.run

--- 310409443 ns (0.02%), 31 samples
  [ 0] find_vmap_area_[k]
  [ 1] check_heap_object_[k]
  [ 2] __check_object_size.part.0_[k]
  [ 3] __check_object_size_[k]
  [ 4] zfs_uiomove_iter?[zfs]_[k]
  [ 5] zfs_uiomove?[zfs]_[k]
  [ 6] dmu_read_uio_dnode?[zfs]_[k]
  [ 7] dmu_read_uio_dbuf?[zfs]_[k]
  [ 8] mappedread?[zfs]_[k]
  [ 9] zfs_read?[zfs]_[k]
  [10] zpl_iter_read?[zfs]_[k]
  [11] new_sync_read_[k]
  [12] vfs_read_[k]
  [13] __x64_sys_pread64_[k]
  [14] do_syscall_64_[k]
  [15] entry_SYSCALL_64_after_hwframe_[k]
  [16] __libc_pread64
  [17] sun.nio.ch.FileDispatcherImpl.pread0
  [18] sun.nio.ch.FileDispatcherImpl.pread
  [19] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [20] sun.nio.ch.IOUtil.read
  [21] sun.nio.ch.IOUtil.read
  [22] sun.nio.ch.FileChannelImpl.readInternal
  [23] sun.nio.ch.FileChannelImpl.read
  [24] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [25] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [26] jdk.nio.zipfs.ZipFileSystem$2.fill
  [27] java.util.zip.InflaterInputStream.read
  [28] java.io.InputStream.readNBytes
  [29] java.io.InputStream.readAllBytes
  [30] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [31] jdk.nio.zipfs.ZipPath.newByteChannel
  [32] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [33] java.nio.file.Files.newByteChannel
  [34] java.nio.file.Files.newByteChannel
  [35] java.nio.file.Files.readAllBytes
  [36] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [37] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25908.apply
  [38] cats.effect.IOFiber.$anonfun$8
  [39] cats.effect.IOFiber$$Lambda$196.0x0000000800dae2e0.apply
  [40] cats.effect.unsafe.WorkerThread.blockOn
  [41] scala.concurrent.package$.blocking
  [42] cats.effect.IOFiber.runLoop
  [43] cats.effect.IOFiber.execR
  [44] cats.effect.IOFiber.run
  [45] cats.effect.unsafe.WorkerThread.run

--- 310394009 ns (0.02%), 31 samples
  [ 0] rmqueue_pcplist.constprop.0_[k]
  [ 1] rmqueue_[k]
  [ 2] get_page_from_freelist_[k]
  [ 3] __alloc_pages_[k]
  [ 4] __folio_alloc_[k]
  [ 5] vma_alloc_folio_[k]
  [ 6] do_anonymous_page_[k]
  [ 7] handle_pte_fault_[k]
  [ 8] __handle_mm_fault_[k]
  [ 9] handle_mm_fault_[k]
  [10] do_user_addr_fault_[k]
  [11] exc_page_fault_[k]
  [12] asm_exc_page_fault_[k]
  [13] __memset_avx2_unaligned_erms
  [14] MemAllocator::allocate() const
  [15] TypeArrayKlass::allocate_common(int, bool, JavaThread*)
  [16] JVMCIRuntime::new_array_common(JavaThread*, Klass*, int, bool)
  [17] java.io.InputStream.readNBytes
  [18] java.io.InputStream.readAllBytes
  [19] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [20] jdk.nio.zipfs.ZipPath.newByteChannel
  [21] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [22] java.nio.file.Files.newByteChannel
  [23] java.nio.file.Files.newByteChannel
  [24] java.nio.file.Files.readAllBytes
  [25] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [26] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25908.apply
  [27] cats.effect.IOFiber.$anonfun$8
  [28] cats.effect.IOFiber$$Lambda$196.0x0000000800dae2e0.apply
  [29] cats.effect.unsafe.WorkerThread.blockOn
  [30] scala.concurrent.package$.blocking
  [31] cats.effect.IOFiber.runLoop
  [32] cats.effect.IOFiber.execR
  [33] cats.effect.IOFiber.run
  [34] cats.effect.unsafe.WorkerThread.run

--- 310175662 ns (0.02%), 31 samples
  [ 0] java.util.zip.Inflater.inflate
  [ 1] java.util.zip.InflaterInputStream.read
  [ 2] java.io.InputStream.readNBytes
  [ 3] java.io.InputStream.readAllBytes
  [ 4] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [ 5] jdk.nio.zipfs.ZipPath.newByteChannel
  [ 6] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [ 7] java.nio.file.Files.newByteChannel
  [ 8] java.nio.file.Files.newByteChannel
  [ 9] java.nio.file.Files.readAllBytes
  [10] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [11] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25908.apply
  [12] cats.effect.IOFiber.$anonfun$8
  [13] cats.effect.IOFiber$$Lambda$196.0x0000000800dae2e0.apply
  [14] cats.effect.unsafe.WorkerThread.blockOn
  [15] scala.concurrent.package$.blocking
  [16] cats.effect.IOFiber.runLoop
  [17] cats.effect.IOFiber.execR
  [18] cats.effect.IOFiber.run
  [19] cats.effect.unsafe.WorkerThread.run

--- 309860529 ns (0.02%), 31 samples
  [ 0] void G1RebuildRemSetClosure::do_oop_work<narrowOop>(narrowOop*)
  [ 1] G1RebuildRemSetTask::G1RebuildRemSetHeapRegionClosure::do_heap_region(HeapRegion*)
  [ 2] HeapRegionManager::par_iterate(HeapRegionClosure*, HeapRegionClaimer*, unsigned int) const
  [ 3] G1RebuildRemSetTask::work(unsigned int)
  [ 4] GangWorker::loop()
  [ 5] GangWorker::run()
  [ 6] Thread::call_run()
  [ 7] thread_native_entry(Thread*)
  [ 8] start_thread

--- 300543547 ns (0.02%), 30 samples
  [ 0] percpu_counter_add_batch_[k]
  [ 1] wmsum_add?[zfs]_[k]
  [ 2] arc_access?[zfs]_[k]
  [ 3] arc_buf_access?[zfs]_[k]
  [ 4] dbuf_hold_impl?[zfs]_[k]
  [ 5] dbuf_hold_level?[zfs]_[k]
  [ 6] dbuf_hold?[zfs]_[k]
  [ 7] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 8] dmu_read_uio_dnode?[zfs]_[k]
  [ 9] dmu_read_uio_dbuf?[zfs]_[k]
  [10] mappedread?[zfs]_[k]
  [11] zfs_read?[zfs]_[k]
  [12] zpl_iter_read?[zfs]_[k]
  [13] new_sync_read_[k]
  [14] vfs_read_[k]
  [15] __x64_sys_pread64_[k]
  [16] do_syscall_64_[k]
  [17] entry_SYSCALL_64_after_hwframe_[k]
  [18] __libc_pread64
  [19] sun.nio.ch.FileDispatcherImpl.pread0
  [20] sun.nio.ch.FileDispatcherImpl.pread
  [21] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [22] sun.nio.ch.IOUtil.read
  [23] sun.nio.ch.IOUtil.read
  [24] sun.nio.ch.FileChannelImpl.readInternal
  [25] sun.nio.ch.FileChannelImpl.read
  [26] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [27] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [28] jdk.nio.zipfs.ZipFileSystem$2.fill
  [29] java.util.zip.InflaterInputStream.read
  [30] java.io.InputStream.readNBytes
  [31] java.io.InputStream.readAllBytes
  [32] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [33] jdk.nio.zipfs.ZipPath.newByteChannel
  [34] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [35] java.nio.file.Files.newByteChannel
  [36] java.nio.file.Files.newByteChannel
  [37] java.nio.file.Files.readAllBytes
  [38] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [39] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25908.apply
  [40] cats.effect.IOFiber.$anonfun$8
  [41] cats.effect.IOFiber$$Lambda$196.0x0000000800dae2e0.apply
  [42] cats.effect.unsafe.WorkerThread.blockOn
  [43] scala.concurrent.package$.blocking
  [44] cats.effect.IOFiber.runLoop
  [45] cats.effect.IOFiber.execR
  [46] cats.effect.IOFiber.run
  [47] cats.effect.unsafe.WorkerThread.run

--- 300343453 ns (0.02%), 30 samples
  [ 0] mutex_unlock_[k]
  [ 1] dbuf_rele_and_unlock?[zfs]_[k]
  [ 2] dbuf_rele?[zfs]_[k]
  [ 3] dmu_buf_rele_array?[zfs]_[k]
  [ 4] dmu_read_uio_dnode?[zfs]_[k]
  [ 5] dmu_read_uio_dbuf?[zfs]_[k]
  [ 6] mappedread?[zfs]_[k]
  [ 7] zfs_read?[zfs]_[k]
  [ 8] zpl_iter_read?[zfs]_[k]
  [ 9] new_sync_read_[k]
  [10] vfs_read_[k]
  [11] __x64_sys_pread64_[k]
  [12] do_syscall_64_[k]
  [13] entry_SYSCALL_64_after_hwframe_[k]
  [14] __libc_pread64
  [15] sun.nio.ch.FileDispatcherImpl.pread0
  [16] sun.nio.ch.FileDispatcherImpl.pread
  [17] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [18] sun.nio.ch.IOUtil.read
  [19] sun.nio.ch.IOUtil.read
  [20] sun.nio.ch.FileChannelImpl.readInternal
  [21] sun.nio.ch.FileChannelImpl.read
  [22] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [23] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [24] jdk.nio.zipfs.ZipFileSystem$2.fill
  [25] java.util.zip.InflaterInputStream.read
  [26] java.io.InputStream.readNBytes
  [27] java.io.InputStream.readAllBytes
  [28] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [29] jdk.nio.zipfs.ZipPath.newByteChannel
  [30] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [31] java.nio.file.Files.newByteChannel
  [32] java.nio.file.Files.newByteChannel
  [33] java.nio.file.Files.readAllBytes
  [34] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [35] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25908.apply
  [36] cats.effect.IOFiber.$anonfun$8
  [37] cats.effect.IOFiber$$Lambda$196.0x0000000800dae2e0.apply
  [38] cats.effect.unsafe.WorkerThread.blockOn
  [39] scala.concurrent.package$.blocking
  [40] cats.effect.IOFiber.runLoop
  [41] cats.effect.IOFiber.execR
  [42] cats.effect.IOFiber.run
  [43] cats.effect.unsafe.WorkerThread.run

--- 300147581 ns (0.02%), 30 samples
  [ 0] sun.nio.ch.FileDispatcherImpl.pread0
  [ 1] sun.nio.ch.FileDispatcherImpl.pread
  [ 2] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [ 3] sun.nio.ch.IOUtil.read
  [ 4] sun.nio.ch.IOUtil.read
  [ 5] sun.nio.ch.FileChannelImpl.readInternal
  [ 6] sun.nio.ch.FileChannelImpl.read
  [ 7] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [ 8] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [ 9] jdk.nio.zipfs.ZipFileSystem$2.fill
  [10] java.util.zip.InflaterInputStream.read
  [11] java.io.InputStream.readNBytes
  [12] java.io.InputStream.readAllBytes
  [13] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [14] jdk.nio.zipfs.ZipPath.newByteChannel
  [15] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [16] java.nio.file.Files.newByteChannel
  [17] java.nio.file.Files.newByteChannel
  [18] java.nio.file.Files.readAllBytes
  [19] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [20] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25908.apply
  [21] cats.effect.IOFiber.$anonfun$8
  [22] cats.effect.IOFiber$$Lambda$196.0x0000000800dae2e0.apply
  [23] cats.effect.unsafe.WorkerThread.blockOn
  [24] scala.concurrent.package$.blocking
  [25] cats.effect.IOFiber.runLoop
  [26] cats.effect.IOFiber.execR
  [27] cats.effect.IOFiber.run
  [28] cats.effect.unsafe.WorkerThread.run

--- 290475100 ns (0.02%), 29 samples
  [ 0] new_sync_read_[k]
  [ 1] vfs_read_[k]
  [ 2] __x64_sys_pread64_[k]
  [ 3] do_syscall_64_[k]
  [ 4] entry_SYSCALL_64_after_hwframe_[k]
  [ 5] __libc_pread64
  [ 6] sun.nio.ch.FileDispatcherImpl.pread0
  [ 7] sun.nio.ch.FileDispatcherImpl.pread
  [ 8] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [ 9] sun.nio.ch.IOUtil.read
  [10] sun.nio.ch.IOUtil.read
  [11] sun.nio.ch.FileChannelImpl.readInternal
  [12] sun.nio.ch.FileChannelImpl.read
  [13] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [14] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [15] jdk.nio.zipfs.ZipFileSystem$2.fill
  [16] java.util.zip.InflaterInputStream.read
  [17] java.io.InputStream.readNBytes
  [18] java.io.InputStream.readAllBytes
  [19] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [20] jdk.nio.zipfs.ZipPath.newByteChannel
  [21] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [22] java.nio.file.Files.newByteChannel
  [23] java.nio.file.Files.newByteChannel
  [24] java.nio.file.Files.readAllBytes
  [25] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [26] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25908.apply
  [27] cats.effect.IOFiber.$anonfun$8
  [28] cats.effect.IOFiber$$Lambda$196.0x0000000800dae2e0.apply
  [29] cats.effect.unsafe.WorkerThread.blockOn
  [30] scala.concurrent.package$.blocking
  [31] cats.effect.IOFiber.runLoop
  [32] cats.effect.IOFiber.execR
  [33] cats.effect.IOFiber.run
  [34] cats.effect.unsafe.WorkerThread.run

--- 290316193 ns (0.02%), 29 samples
  [ 0] __list_del_entry?[zfs]_[k]
  [ 1] list_del?[zfs]_[k]
  [ 2] list_destroy?[zfs]_[k]
  [ 3] zio_destroy?[zfs]_[k]
  [ 4] zio_wait?[zfs]_[k]
  [ 5] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 6] dmu_read_uio_dnode?[zfs]_[k]
  [ 7] dmu_read_uio_dbuf?[zfs]_[k]
  [ 8] mappedread?[zfs]_[k]
  [ 9] zfs_read?[zfs]_[k]
  [10] zpl_iter_read?[zfs]_[k]
  [11] new_sync_read_[k]
  [12] vfs_read_[k]
  [13] __x64_sys_pread64_[k]
  [14] do_syscall_64_[k]
  [15] entry_SYSCALL_64_after_hwframe_[k]
  [16] __libc_pread64
  [17] sun.nio.ch.FileDispatcherImpl.pread0
  [18] sun.nio.ch.FileDispatcherImpl.pread
  [19] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [20] sun.nio.ch.IOUtil.read
  [21] sun.nio.ch.IOUtil.read
  [22] sun.nio.ch.FileChannelImpl.readInternal
  [23] sun.nio.ch.FileChannelImpl.read
  [24] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [25] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [26] jdk.nio.zipfs.ZipFileSystem$2.fill
  [27] java.util.zip.InflaterInputStream.read
  [28] java.io.InputStream.readNBytes
  [29] java.io.InputStream.readAllBytes
  [30] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [31] jdk.nio.zipfs.ZipPath.newByteChannel
  [32] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [33] java.nio.file.Files.newByteChannel
  [34] java.nio.file.Files.newByteChannel
  [35] java.nio.file.Files.readAllBytes
  [36] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [37] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25908.apply
  [38] cats.effect.IOFiber.$anonfun$8
  [39] cats.effect.IOFiber$$Lambda$196.0x0000000800dae2e0.apply
  [40] cats.effect.unsafe.WorkerThread.blockOn
  [41] scala.concurrent.package$.blocking
  [42] cats.effect.IOFiber.runLoop
  [43] cats.effect.IOFiber.execR
  [44] cats.effect.IOFiber.run
  [45] cats.effect.unsafe.WorkerThread.run

--- 290294344 ns (0.02%), 29 samples
  [ 0] jni_ReleasePrimitiveArrayCritical
  [ 1] java.util.zip.Inflater.inflateBytesBytes
  [ 2] java.util.zip.Inflater.inflate
  [ 3] java.util.zip.InflaterInputStream.read
  [ 4] java.io.InputStream.readNBytes
  [ 5] java.io.InputStream.readAllBytes
  [ 6] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [ 7] jdk.nio.zipfs.ZipPath.newByteChannel
  [ 8] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [ 9] java.nio.file.Files.newByteChannel
  [10] java.nio.file.Files.newByteChannel
  [11] java.nio.file.Files.readAllBytes
  [12] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [13] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25908.apply
  [14] cats.effect.IOFiber.$anonfun$8
  [15] cats.effect.IOFiber$$Lambda$196.0x0000000800dae2e0.apply
  [16] cats.effect.unsafe.WorkerThread.blockOn
  [17] scala.concurrent.package$.blocking
  [18] cats.effect.IOFiber.runLoop
  [19] cats.effect.IOFiber.execR
  [20] cats.effect.IOFiber.run
  [21] cats.effect.unsafe.WorkerThread.run

--- 290227710 ns (0.02%), 29 samples
  [ 0] zio_ready?[zfs]_[k]
  [ 1] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 2] dmu_read_uio_dnode?[zfs]_[k]
  [ 3] dmu_read_uio_dbuf?[zfs]_[k]
  [ 4] mappedread?[zfs]_[k]
  [ 5] zfs_read?[zfs]_[k]
  [ 6] zpl_iter_read?[zfs]_[k]
  [ 7] new_sync_read_[k]
  [ 8] vfs_read_[k]
  [ 9] __x64_sys_pread64_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] __libc_pread64
  [13] sun.nio.ch.FileDispatcherImpl.pread0
  [14] sun.nio.ch.FileDispatcherImpl.pread
  [15] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [16] sun.nio.ch.IOUtil.read
  [17] sun.nio.ch.IOUtil.read
  [18] sun.nio.ch.FileChannelImpl.readInternal
  [19] sun.nio.ch.FileChannelImpl.read
  [20] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [21] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [22] jdk.nio.zipfs.ZipFileSystem$2.fill
  [23] java.util.zip.InflaterInputStream.read
  [24] java.io.InputStream.readNBytes
  [25] java.io.InputStream.readAllBytes
  [26] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [27] jdk.nio.zipfs.ZipPath.newByteChannel
  [28] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [29] java.nio.file.Files.newByteChannel
  [30] java.nio.file.Files.newByteChannel
  [31] java.nio.file.Files.readAllBytes
  [32] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [33] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25908.apply
  [34] cats.effect.IOFiber.$anonfun$8
  [35] cats.effect.IOFiber$$Lambda$196.0x0000000800dae2e0.apply
  [36] cats.effect.unsafe.WorkerThread.blockOn
  [37] scala.concurrent.package$.blocking
  [38] cats.effect.IOFiber.runLoop
  [39] cats.effect.IOFiber.execR
  [40] cats.effect.IOFiber.run
  [41] cats.effect.unsafe.WorkerThread.run

--- 290036594 ns (0.02%), 29 samples
  [ 0] jlong_disjoint_arraycopy
  [ 1] jdk.internal.misc.Unsafe.copyMemory0
  [ 2] jdk.internal.misc.Unsafe.copyMemory
  [ 3] jdk.internal.misc.ScopedMemoryAccess.copyMemoryInternal
  [ 4] jdk.internal.misc.ScopedMemoryAccess.copyMemory
  [ 5] java.nio.ByteBuffer.putBuffer
  [ 6] java.nio.ByteBuffer.put
  [ 7] java.nio.HeapByteBuffer.put
  [ 8] sun.nio.ch.IOUtil.read
  [ 9] sun.nio.ch.IOUtil.read
  [10] sun.nio.ch.FileChannelImpl.readInternal
  [11] sun.nio.ch.FileChannelImpl.read
  [12] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [13] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [14] jdk.nio.zipfs.ZipFileSystem$2.fill
  [15] java.util.zip.InflaterInputStream.read
  [16] java.io.InputStream.readNBytes
  [17] java.io.InputStream.readAllBytes
  [18] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [19] jdk.nio.zipfs.ZipPath.newByteChannel
  [20] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [21] java.nio.file.Files.newByteChannel
  [22] java.nio.file.Files.newByteChannel
  [23] java.nio.file.Files.readAllBytes
  [24] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [25] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25908.apply
  [26] cats.effect.IOFiber.$anonfun$8
  [27] cats.effect.IOFiber$$Lambda$196.0x0000000800dae2e0.apply
  [28] cats.effect.unsafe.WorkerThread.blockOn
  [29] scala.concurrent.package$.blocking
  [30] cats.effect.IOFiber.runLoop
  [31] cats.effect.IOFiber.execR
  [32] cats.effect.IOFiber.run
  [33] cats.effect.unsafe.WorkerThread.run

--- 280649060 ns (0.02%), 28 samples
  [ 0] __list_del?[zfs]_[k]
  [ 1] list_del?[zfs]_[k]
  [ 2] list_remove?[zfs]_[k]
  [ 3] multilist_sublist_remove?[zfs]_[k]
  [ 4] multilist_remove?[zfs]_[k]
  [ 5] dbuf_hold_impl?[zfs]_[k]
  [ 6] dbuf_hold_level?[zfs]_[k]
  [ 7] dbuf_hold?[zfs]_[k]
  [ 8] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 9] dmu_read_uio_dnode?[zfs]_[k]
  [10] dmu_read_uio_dbuf?[zfs]_[k]
  [11] mappedread?[zfs]_[k]
  [12] zfs_read?[zfs]_[k]
  [13] zpl_iter_read?[zfs]_[k]
  [14] new_sync_read_[k]
  [15] vfs_read_[k]
  [16] __x64_sys_pread64_[k]
  [17] do_syscall_64_[k]
  [18] entry_SYSCALL_64_after_hwframe_[k]
  [19] __libc_pread64
  [20] sun.nio.ch.FileDispatcherImpl.pread0
  [21] sun.nio.ch.FileDispatcherImpl.pread
  [22] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [23] sun.nio.ch.IOUtil.read
  [24] sun.nio.ch.IOUtil.read
  [25] sun.nio.ch.FileChannelImpl.readInternal
  [26] sun.nio.ch.FileChannelImpl.read
  [27] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [28] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [29] jdk.nio.zipfs.ZipFileSystem$2.fill
  [30] java.util.zip.InflaterInputStream.read
  [31] java.io.InputStream.readNBytes
  [32] java.io.InputStream.readAllBytes
  [33] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [34] jdk.nio.zipfs.ZipPath.newByteChannel
  [35] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [36] java.nio.file.Files.newByteChannel
  [37] java.nio.file.Files.newByteChannel
  [38] java.nio.file.Files.readAllBytes
  [39] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [40] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25908.apply
  [41] cats.effect.IOFiber.$anonfun$8
  [42] cats.effect.IOFiber$$Lambda$196.0x0000000800dae2e0.apply
  [43] cats.effect.unsafe.WorkerThread.blockOn
  [44] scala.concurrent.package$.blocking
  [45] cats.effect.IOFiber.runLoop
  [46] cats.effect.IOFiber.execR
  [47] cats.effect.IOFiber.run
  [48] cats.effect.unsafe.WorkerThread.run

--- 280331456 ns (0.02%), 28 samples
  [ 0] blk_cgroup_congested_[k]
  [ 1] __cgroup_throttle_swaprate_[k]
  [ 2] do_anonymous_page_[k]
  [ 3] handle_pte_fault_[k]
  [ 4] __handle_mm_fault_[k]
  [ 5] handle_mm_fault_[k]
  [ 6] do_user_addr_fault_[k]
  [ 7] exc_page_fault_[k]
  [ 8] asm_exc_page_fault_[k]
  [ 9] java.io.InputStream.readNBytes
  [10] java.io.InputStream.readAllBytes
  [11] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [12] jdk.nio.zipfs.ZipPath.newByteChannel
  [13] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [14] java.nio.file.Files.newByteChannel
  [15] java.nio.file.Files.newByteChannel
  [16] java.nio.file.Files.readAllBytes
  [17] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [18] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25908.apply
  [19] cats.effect.IOFiber.$anonfun$8
  [20] cats.effect.IOFiber$$Lambda$196.0x0000000800dae2e0.apply
  [21] cats.effect.unsafe.WorkerThread.blockOn
  [22] scala.concurrent.package$.blocking
  [23] cats.effect.IOFiber.runLoop
  [24] cats.effect.IOFiber.execR
  [25] cats.effect.IOFiber.run
  [26] cats.effect.unsafe.WorkerThread.run

--- 280293510 ns (0.02%), 28 samples
  [ 0] count_memcg_events.constprop.0_[k]
  [ 1] handle_mm_fault_[k]
  [ 2] do_user_addr_fault_[k]
  [ 3] exc_page_fault_[k]
  [ 4] asm_exc_page_fault_[k]
  [ 5] java.io.InputStream.readNBytes
  [ 6] java.io.InputStream.readAllBytes
  [ 7] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [ 8] jdk.nio.zipfs.ZipPath.newByteChannel
  [ 9] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [10] java.nio.file.Files.newByteChannel
  [11] java.nio.file.Files.newByteChannel
  [12] java.nio.file.Files.readAllBytes
  [13] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [14] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25908.apply
  [15] cats.effect.IOFiber.$anonfun$8
  [16] cats.effect.IOFiber$$Lambda$196.0x0000000800dae2e0.apply
  [17] cats.effect.unsafe.WorkerThread.blockOn
  [18] scala.concurrent.package$.blocking
  [19] cats.effect.IOFiber.runLoop
  [20] cats.effect.IOFiber.execR
  [21] cats.effect.IOFiber.run
  [22] cats.effect.unsafe.WorkerThread.run

--- 280209578 ns (0.02%), 28 samples
  [ 0] zrl_add_impl?[zfs]_[k]
  [ 1] dbuf_read?[zfs]_[k]
  [ 2] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 3] dmu_read_uio_dnode?[zfs]_[k]
  [ 4] dmu_read_uio_dbuf?[zfs]_[k]
  [ 5] mappedread?[zfs]_[k]
  [ 6] zfs_read?[zfs]_[k]
  [ 7] zpl_iter_read?[zfs]_[k]
  [ 8] new_sync_read_[k]
  [ 9] vfs_read_[k]
  [10] __x64_sys_pread64_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] __libc_pread64
  [14] sun.nio.ch.FileDispatcherImpl.pread0
  [15] sun.nio.ch.FileDispatcherImpl.pread
  [16] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [17] sun.nio.ch.IOUtil.read
  [18] sun.nio.ch.IOUtil.read
  [19] sun.nio.ch.FileChannelImpl.readInternal
  [20] sun.nio.ch.FileChannelImpl.read
  [21] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [22] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [23] jdk.nio.zipfs.ZipFileSystem$2.fill
  [24] java.util.zip.InflaterInputStream.read
  [25] java.io.InputStream.readNBytes
  [26] java.io.InputStream.readAllBytes
  [27] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [28] jdk.nio.zipfs.ZipPath.newByteChannel
  [29] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [30] java.nio.file.Files.newByteChannel
  [31] java.nio.file.Files.newByteChannel
  [32] java.nio.file.Files.readAllBytes
  [33] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [34] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25908.apply
  [35] cats.effect.IOFiber.$anonfun$8
  [36] cats.effect.IOFiber$$Lambda$196.0x0000000800dae2e0.apply
  [37] cats.effect.unsafe.WorkerThread.blockOn
  [38] scala.concurrent.package$.blocking
  [39] cats.effect.IOFiber.runLoop
  [40] cats.effect.IOFiber.execR
  [41] cats.effect.IOFiber.run
  [42] cats.effect.unsafe.WorkerThread.run

--- 279988031 ns (0.02%), 28 samples
  [ 0] G1ScanHRForRegionClosure::scan_heap_roots(HeapRegion*)
  [ 1] G1RemSet::scan_heap_roots(G1ParScanThreadState*, unsigned int, G1GCPhaseTimes::GCParPhases, G1GCPhaseTimes::GCParPhases, bool)
  [ 2] G1EvacuateRegionsTask::scan_roots(G1ParScanThreadState*, unsigned int)
  [ 3] G1EvacuateRegionsBaseTask::work(unsigned int)
  [ 4] GangWorker::loop()
  [ 5] GangWorker::run()
  [ 6] Thread::call_run()
  [ 7] thread_native_entry(Thread*)
  [ 8] start_thread

--- 270381090 ns (0.02%), 27 samples
  [ 0] kmalloc_slab_[k]
  [ 1] __kmalloc_node_[k]
  [ 2] spl_kmem_alloc_impl?[spl]_[k]
  [ 3] spl_kmem_zalloc?[spl]_[k]
  [ 4] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 5] dmu_read_uio_dnode?[zfs]_[k]
  [ 6] dmu_read_uio_dbuf?[zfs]_[k]
  [ 7] mappedread?[zfs]_[k]
  [ 8] zfs_read?[zfs]_[k]
  [ 9] zpl_iter_read?[zfs]_[k]
  [10] new_sync_read_[k]
  [11] vfs_read_[k]
  [12] __x64_sys_pread64_[k]
  [13] do_syscall_64_[k]
  [14] entry_SYSCALL_64_after_hwframe_[k]
  [15] __libc_pread64
  [16] sun.nio.ch.FileDispatcherImpl.pread0
  [17] sun.nio.ch.FileDispatcherImpl.pread
  [18] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [19] sun.nio.ch.IOUtil.read
  [20] sun.nio.ch.IOUtil.read
  [21] sun.nio.ch.FileChannelImpl.readInternal
  [22] sun.nio.ch.FileChannelImpl.read
  [23] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [24] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [25] jdk.nio.zipfs.ZipFileSystem$2.fill
  [26] java.util.zip.InflaterInputStream.read
  [27] java.io.InputStream.readNBytes
  [28] java.io.InputStream.readAllBytes
  [29] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [30] jdk.nio.zipfs.ZipPath.newByteChannel
  [31] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [32] java.nio.file.Files.newByteChannel
  [33] java.nio.file.Files.newByteChannel
  [34] java.nio.file.Files.readAllBytes
  [35] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [36] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25908.apply
  [37] cats.effect.IOFiber.$anonfun$8
  [38] cats.effect.IOFiber$$Lambda$196.0x0000000800dae2e0.apply
  [39] cats.effect.unsafe.WorkerThread.blockOn
  [40] scala.concurrent.package$.blocking
  [41] cats.effect.IOFiber.runLoop
  [42] cats.effect.IOFiber.execR
  [43] cats.effect.IOFiber.run
  [44] cats.effect.unsafe.WorkerThread.run

--- 270314724 ns (0.02%), 27 samples
  [ 0] java.util.zip.InflaterInputStream.ensureOpen
  [ 1] java.util.zip.InflaterInputStream.read
  [ 2] java.io.InputStream.readNBytes
  [ 3] java.io.InputStream.readAllBytes
  [ 4] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [ 5] jdk.nio.zipfs.ZipPath.newByteChannel
  [ 6] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [ 7] java.nio.file.Files.newByteChannel
  [ 8] java.nio.file.Files.newByteChannel
  [ 9] java.nio.file.Files.readAllBytes
  [10] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [11] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25908.apply
  [12] cats.effect.IOFiber.$anonfun$8
  [13] cats.effect.IOFiber$$Lambda$196.0x0000000800dae2e0.apply
  [14] cats.effect.unsafe.WorkerThread.blockOn
  [15] scala.concurrent.package$.blocking
  [16] cats.effect.IOFiber.runLoop
  [17] cats.effect.IOFiber.execR
  [18] cats.effect.IOFiber.run
  [19] cats.effect.unsafe.WorkerThread.run

--- 260635740 ns (0.02%), 26 samples
  [ 0] avl_remove?[zavl]_[k]
  [ 1] zfs_rangelock_exit_reader?[zfs]_[k]
  [ 2] zfs_rangelock_exit?[zfs]_[k]
  [ 3] zfs_read?[zfs]_[k]
  [ 4] zpl_iter_read?[zfs]_[k]
  [ 5] new_sync_read_[k]
  [ 6] vfs_read_[k]
  [ 7] __x64_sys_pread64_[k]
  [ 8] do_syscall_64_[k]
  [ 9] entry_SYSCALL_64_after_hwframe_[k]
  [10] __libc_pread64
  [11] sun.nio.ch.FileDispatcherImpl.pread0
  [12] sun.nio.ch.FileDispatcherImpl.pread
  [13] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [14] sun.nio.ch.IOUtil.read
  [15] sun.nio.ch.IOUtil.read
  [16] sun.nio.ch.FileChannelImpl.readInternal
  [17] sun.nio.ch.FileChannelImpl.read
  [18] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [19] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [20] jdk.nio.zipfs.ZipFileSystem$2.fill
  [21] java.util.zip.InflaterInputStream.read
  [22] java.io.InputStream.readNBytes
  [23] java.io.InputStream.readAllBytes
  [24] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [25] jdk.nio.zipfs.ZipPath.newByteChannel
  [26] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [27] java.nio.file.Files.newByteChannel
  [28] java.nio.file.Files.newByteChannel
  [29] java.nio.file.Files.readAllBytes
  [30] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [31] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25908.apply
  [32] cats.effect.IOFiber.$anonfun$8
  [33] cats.effect.IOFiber$$Lambda$196.0x0000000800dae2e0.apply
  [34] cats.effect.unsafe.WorkerThread.blockOn
  [35] scala.concurrent.package$.blocking
  [36] cats.effect.IOFiber.runLoop
  [37] cats.effect.IOFiber.execR
  [38] cats.effect.IOFiber.run
  [39] cats.effect.unsafe.WorkerThread.run

--- 260399910 ns (0.02%), 26 samples
  [ 0] percpu_counter_add_batch_[k]
  [ 1] wmsum_add?[zfs]_[k]
  [ 2] dbuf_hold_impl?[zfs]_[k]
  [ 3] dbuf_hold_level?[zfs]_[k]
  [ 4] dbuf_hold?[zfs]_[k]
  [ 5] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 6] dmu_read_uio_dnode?[zfs]_[k]
  [ 7] dmu_read_uio_dbuf?[zfs]_[k]
  [ 8] mappedread?[zfs]_[k]
  [ 9] zfs_read?[zfs]_[k]
  [10] zpl_iter_read?[zfs]_[k]
  [11] new_sync_read_[k]
  [12] vfs_read_[k]
  [13] __x64_sys_pread64_[k]
  [14] do_syscall_64_[k]
  [15] entry_SYSCALL_64_after_hwframe_[k]
  [16] __libc_pread64
  [17] sun.nio.ch.FileDispatcherImpl.pread0
  [18] sun.nio.ch.FileDispatcherImpl.pread
  [19] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [20] sun.nio.ch.IOUtil.read
  [21] sun.nio.ch.IOUtil.read
  [22] sun.nio.ch.FileChannelImpl.readInternal
  [23] sun.nio.ch.FileChannelImpl.read
  [24] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [25] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [26] jdk.nio.zipfs.ZipFileSystem$2.fill
  [27] java.util.zip.InflaterInputStream.read
  [28] java.io.InputStream.readNBytes
  [29] java.io.InputStream.readAllBytes
  [30] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [31] jdk.nio.zipfs.ZipPath.newByteChannel
  [32] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [33] java.nio.file.Files.newByteChannel
  [34] java.nio.file.Files.newByteChannel
  [35] java.nio.file.Files.readAllBytes
  [36] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [37] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25908.apply
  [38] cats.effect.IOFiber.$anonfun$8
  [39] cats.effect.IOFiber$$Lambda$196.0x0000000800dae2e0.apply
  [40] cats.effect.unsafe.WorkerThread.blockOn
  [41] scala.concurrent.package$.blocking
  [42] cats.effect.IOFiber.runLoop
  [43] cats.effect.IOFiber.execR
  [44] cats.effect.IOFiber.run
  [45] cats.effect.unsafe.WorkerThread.run

--- 260296689 ns (0.02%), 26 samples
  [ 0] get_mem_cgroup_from_mm_[k]
  [ 1] __mem_cgroup_charge_[k]
  [ 2] do_anonymous_page_[k]
  [ 3] handle_pte_fault_[k]
  [ 4] __handle_mm_fault_[k]
  [ 5] handle_mm_fault_[k]
  [ 6] do_user_addr_fault_[k]
  [ 7] exc_page_fault_[k]
  [ 8] asm_exc_page_fault_[k]
  [ 9] java.io.InputStream.readNBytes
  [10] java.io.InputStream.readAllBytes
  [11] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [12] jdk.nio.zipfs.ZipPath.newByteChannel
  [13] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [14] java.nio.file.Files.newByteChannel
  [15] java.nio.file.Files.newByteChannel
  [16] java.nio.file.Files.readAllBytes
  [17] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [18] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25908.apply
  [19] cats.effect.IOFiber.$anonfun$8
  [20] cats.effect.IOFiber$$Lambda$196.0x0000000800dae2e0.apply
  [21] cats.effect.unsafe.WorkerThread.blockOn
  [22] scala.concurrent.package$.blocking
  [23] cats.effect.IOFiber.runLoop
  [24] cats.effect.IOFiber.execR
  [25] cats.effect.IOFiber.run
  [26] cats.effect.unsafe.WorkerThread.run

--- 260253166 ns (0.02%), 26 samples
  [ 0] _raw_spin_lock_[k]
  [ 1] handle_pte_fault_[k]
  [ 2] __handle_mm_fault_[k]
  [ 3] handle_mm_fault_[k]
  [ 4] do_user_addr_fault_[k]
  [ 5] exc_page_fault_[k]
  [ 6] asm_exc_page_fault_[k]
  [ 7] java.io.InputStream.readNBytes
  [ 8] java.io.InputStream.readAllBytes
  [ 9] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [10] jdk.nio.zipfs.ZipPath.newByteChannel
  [11] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [12] java.nio.file.Files.newByteChannel
  [13] java.nio.file.Files.newByteChannel
  [14] java.nio.file.Files.readAllBytes
  [15] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [16] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25908.apply
  [17] cats.effect.IOFiber.$anonfun$8
  [18] cats.effect.IOFiber$$Lambda$196.0x0000000800dae2e0.apply
  [19] cats.effect.unsafe.WorkerThread.blockOn
  [20] scala.concurrent.package$.blocking
  [21] cats.effect.IOFiber.runLoop
  [22] cats.effect.IOFiber.execR
  [23] cats.effect.IOFiber.run
  [24] cats.effect.unsafe.WorkerThread.run

--- 260227960 ns (0.02%), 26 samples
  [ 0] sun.nio.ch.NativeThreadSet.add
  [ 1] sun.nio.ch.FileChannelImpl.readInternal
  [ 2] sun.nio.ch.FileChannelImpl.read
  [ 3] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [ 4] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [ 5] jdk.nio.zipfs.ZipFileSystem$2.fill
  [ 6] java.util.zip.InflaterInputStream.read
  [ 7] java.io.InputStream.readNBytes
  [ 8] java.io.InputStream.readAllBytes
  [ 9] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [10] jdk.nio.zipfs.ZipPath.newByteChannel
  [11] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [12] java.nio.file.Files.newByteChannel
  [13] java.nio.file.Files.newByteChannel
  [14] java.nio.file.Files.readAllBytes
  [15] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [16] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25908.apply
  [17] cats.effect.IOFiber.$anonfun$8
  [18] cats.effect.IOFiber$$Lambda$196.0x0000000800dae2e0.apply
  [19] cats.effect.unsafe.WorkerThread.blockOn
  [20] scala.concurrent.package$.blocking
  [21] cats.effect.IOFiber.runLoop
  [22] cats.effect.IOFiber.execR
  [23] cats.effect.IOFiber.run
  [24] cats.effect.unsafe.WorkerThread.run

--- 250596740 ns (0.02%), 25 samples
  [ 0] dbuf_cache_multilist_index_func?[zfs]_[k]
  [ 1] dbuf_hold_impl?[zfs]_[k]
  [ 2] dbuf_hold_level?[zfs]_[k]
  [ 3] dbuf_hold?[zfs]_[k]
  [ 4] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 5] dmu_read_uio_dnode?[zfs]_[k]
  [ 6] dmu_read_uio_dbuf?[zfs]_[k]
  [ 7] mappedread?[zfs]_[k]
  [ 8] zfs_read?[zfs]_[k]
  [ 9] zpl_iter_read?[zfs]_[k]
  [10] new_sync_read_[k]
  [11] vfs_read_[k]
  [12] __x64_sys_pread64_[k]
  [13] do_syscall_64_[k]
  [14] entry_SYSCALL_64_after_hwframe_[k]
  [15] __libc_pread64
  [16] sun.nio.ch.FileDispatcherImpl.pread0
  [17] sun.nio.ch.FileDispatcherImpl.pread
  [18] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [19] sun.nio.ch.IOUtil.read
  [20] sun.nio.ch.IOUtil.read
  [21] sun.nio.ch.FileChannelImpl.readInternal
  [22] sun.nio.ch.FileChannelImpl.read
  [23] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [24] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [25] jdk.nio.zipfs.ZipFileSystem$2.fill
  [26] java.util.zip.InflaterInputStream.read
  [27] java.io.InputStream.readNBytes
  [28] java.io.InputStream.readAllBytes
  [29] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [30] jdk.nio.zipfs.ZipPath.newByteChannel
  [31] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [32] java.nio.file.Files.newByteChannel
  [33] java.nio.file.Files.newByteChannel
  [34] java.nio.file.Files.readAllBytes
  [35] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [36] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25908.apply
  [37] cats.effect.IOFiber.$anonfun$8
  [38] cats.effect.IOFiber$$Lambda$196.0x0000000800dae2e0.apply
  [39] cats.effect.unsafe.WorkerThread.blockOn
  [40] scala.concurrent.package$.blocking
  [41] cats.effect.IOFiber.runLoop
  [42] cats.effect.IOFiber.execR
  [43] cats.effect.IOFiber.run
  [44] cats.effect.unsafe.WorkerThread.run

--- 250440815 ns (0.02%), 25 samples
  [ 0] mutex_lock_[k]
  [ 1] rrw_enter_read_impl?[zfs]_[k]
  [ 2] rrw_enter_read?[zfs]_[k]
  [ 3] rrm_enter_read?[zfs]_[k]
  [ 4] zfs_read?[zfs]_[k]
  [ 5] zpl_iter_read?[zfs]_[k]
  [ 6] new_sync_read_[k]
  [ 7] vfs_read_[k]
  [ 8] __x64_sys_pread64_[k]
  [ 9] do_syscall_64_[k]
  [10] entry_SYSCALL_64_after_hwframe_[k]
  [11] __libc_pread64
  [12] sun.nio.ch.FileDispatcherImpl.pread0
  [13] sun.nio.ch.FileDispatcherImpl.pread
  [14] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [15] sun.nio.ch.IOUtil.read
  [16] sun.nio.ch.IOUtil.read
  [17] sun.nio.ch.FileChannelImpl.readInternal
  [18] sun.nio.ch.FileChannelImpl.read
  [19] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [20] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [21] jdk.nio.zipfs.ZipFileSystem$2.fill
  [22] java.util.zip.InflaterInputStream.read
  [23] java.io.InputStream.readNBytes
  [24] java.io.InputStream.readAllBytes
  [25] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [26] jdk.nio.zipfs.ZipPath.newByteChannel
  [27] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [28] java.nio.file.Files.newByteChannel
  [29] java.nio.file.Files.newByteChannel
  [30] java.nio.file.Files.readAllBytes
  [31] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [32] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25908.apply
  [33] cats.effect.IOFiber.$anonfun$8
  [34] cats.effect.IOFiber$$Lambda$196.0x0000000800dae2e0.apply
  [35] cats.effect.unsafe.WorkerThread.blockOn
  [36] scala.concurrent.package$.blocking
  [37] cats.effect.IOFiber.runLoop
  [38] cats.effect.IOFiber.execR
  [39] cats.effect.IOFiber.run
  [40] cats.effect.unsafe.WorkerThread.run

--- 250415603 ns (0.02%), 25 samples
  [ 0] __fsnotify_parent_[k]
  [ 1] fsnotify_perm.part.0_[k]
  [ 2] security_file_permission_[k]
  [ 3] rw_verify_area_[k]
  [ 4] vfs_read_[k]
  [ 5] __x64_sys_pread64_[k]
  [ 6] do_syscall_64_[k]
  [ 7] entry_SYSCALL_64_after_hwframe_[k]
  [ 8] __libc_pread64
  [ 9] sun.nio.ch.FileDispatcherImpl.pread0
  [10] sun.nio.ch.FileDispatcherImpl.pread
  [11] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [12] sun.nio.ch.IOUtil.read
  [13] sun.nio.ch.IOUtil.read
  [14] sun.nio.ch.FileChannelImpl.readInternal
  [15] sun.nio.ch.FileChannelImpl.read
  [16] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [17] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [18] jdk.nio.zipfs.ZipFileSystem$2.fill
  [19] java.util.zip.InflaterInputStream.read
  [20] java.io.InputStream.readNBytes
  [21] java.io.InputStream.readAllBytes
  [22] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [23] jdk.nio.zipfs.ZipPath.newByteChannel
  [24] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [25] java.nio.file.Files.newByteChannel
  [26] java.nio.file.Files.newByteChannel
  [27] java.nio.file.Files.readAllBytes
  [28] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [29] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25908.apply
  [30] cats.effect.IOFiber.$anonfun$8
  [31] cats.effect.IOFiber$$Lambda$196.0x0000000800dae2e0.apply
  [32] cats.effect.unsafe.WorkerThread.blockOn
  [33] scala.concurrent.package$.blocking
  [34] cats.effect.IOFiber.runLoop
  [35] cats.effect.IOFiber.execR
  [36] cats.effect.IOFiber.run
  [37] cats.effect.unsafe.WorkerThread.run

--- 250399328 ns (0.02%), 25 samples
  [ 0] ktime_get_raw_ts64_[k]
  [ 1] gethrtime?[zfs]_[k]
  [ 2] dmu_zfetch_stream_create?[zfs]_[k]
  [ 3] dmu_zfetch_prepare?[zfs]_[k]
  [ 4] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 5] dmu_read_uio_dnode?[zfs]_[k]
  [ 6] dmu_read_uio_dbuf?[zfs]_[k]
  [ 7] mappedread?[zfs]_[k]
  [ 8] zfs_read?[zfs]_[k]
  [ 9] zpl_iter_read?[zfs]_[k]
  [10] new_sync_read_[k]
  [11] vfs_read_[k]
  [12] __x64_sys_pread64_[k]
  [13] do_syscall_64_[k]
  [14] entry_SYSCALL_64_after_hwframe_[k]
  [15] __libc_pread64
  [16] sun.nio.ch.FileDispatcherImpl.pread0
  [17] sun.nio.ch.FileDispatcherImpl.pread
  [18] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [19] sun.nio.ch.IOUtil.read
  [20] sun.nio.ch.IOUtil.read
  [21] sun.nio.ch.FileChannelImpl.readInternal
  [22] sun.nio.ch.FileChannelImpl.read
  [23] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [24] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [25] jdk.nio.zipfs.ZipFileSystem$2.fill
  [26] java.util.zip.InflaterInputStream.read
  [27] java.io.InputStream.readNBytes
  [28] java.io.InputStream.readAllBytes
  [29] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [30] jdk.nio.zipfs.ZipPath.newByteChannel
  [31] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [32] java.nio.file.Files.newByteChannel
  [33] java.nio.file.Files.newByteChannel
  [34] java.nio.file.Files.readAllBytes
  [35] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [36] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25908.apply
  [37] cats.effect.IOFiber.$anonfun$8
  [38] cats.effect.IOFiber$$Lambda$196.0x0000000800dae2e0.apply
  [39] cats.effect.unsafe.WorkerThread.blockOn
  [40] scala.concurrent.package$.blocking
  [41] cats.effect.IOFiber.runLoop
  [42] cats.effect.IOFiber.execR
  [43] cats.effect.IOFiber.run
  [44] cats.effect.unsafe.WorkerThread.run

--- 250349698 ns (0.02%), 25 samples
  [ 0] sa_get_db?[zfs]_[k]
  [ 1] zfs_read?[zfs]_[k]
  [ 2] zpl_iter_read?[zfs]_[k]
  [ 3] new_sync_read_[k]
  [ 4] vfs_read_[k]
  [ 5] __x64_sys_pread64_[k]
  [ 6] do_syscall_64_[k]
  [ 7] entry_SYSCALL_64_after_hwframe_[k]
  [ 8] __libc_pread64
  [ 9] sun.nio.ch.FileDispatcherImpl.pread0
  [10] sun.nio.ch.FileDispatcherImpl.pread
  [11] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [12] sun.nio.ch.IOUtil.read
  [13] sun.nio.ch.IOUtil.read
  [14] sun.nio.ch.FileChannelImpl.readInternal
  [15] sun.nio.ch.FileChannelImpl.read
  [16] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [17] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [18] jdk.nio.zipfs.ZipFileSystem$2.fill
  [19] java.util.zip.InflaterInputStream.read
  [20] java.io.InputStream.readNBytes
  [21] java.io.InputStream.readAllBytes
  [22] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [23] jdk.nio.zipfs.ZipPath.newByteChannel
  [24] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [25] java.nio.file.Files.newByteChannel
  [26] java.nio.file.Files.newByteChannel
  [27] java.nio.file.Files.readAllBytes
  [28] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [29] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25908.apply
  [30] cats.effect.IOFiber.$anonfun$8
  [31] cats.effect.IOFiber$$Lambda$196.0x0000000800dae2e0.apply
  [32] cats.effect.unsafe.WorkerThread.blockOn
  [33] scala.concurrent.package$.blocking
  [34] cats.effect.IOFiber.runLoop
  [35] cats.effect.IOFiber.execR
  [36] cats.effect.IOFiber.run
  [37] cats.effect.unsafe.WorkerThread.run

--- 250271767 ns (0.02%), 25 samples
  [ 0] zpl_iter_read?[zfs]_[k]
  [ 1] new_sync_read_[k]
  [ 2] vfs_read_[k]
  [ 3] __x64_sys_pread64_[k]
  [ 4] do_syscall_64_[k]
  [ 5] entry_SYSCALL_64_after_hwframe_[k]
  [ 6] __libc_pread64
  [ 7] sun.nio.ch.FileDispatcherImpl.pread0
  [ 8] sun.nio.ch.FileDispatcherImpl.pread
  [ 9] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [10] sun.nio.ch.IOUtil.read
  [11] sun.nio.ch.IOUtil.read
  [12] sun.nio.ch.FileChannelImpl.readInternal
  [13] sun.nio.ch.FileChannelImpl.read
  [14] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [15] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [16] jdk.nio.zipfs.ZipFileSystem$2.fill
  [17] java.util.zip.InflaterInputStream.read
  [18] java.io.InputStream.readNBytes
  [19] java.io.InputStream.readAllBytes
  [20] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [21] jdk.nio.zipfs.ZipPath.newByteChannel
  [22] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [23] java.nio.file.Files.newByteChannel
  [24] java.nio.file.Files.newByteChannel
  [25] java.nio.file.Files.readAllBytes
  [26] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [27] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25908.apply
  [28] cats.effect.IOFiber.$anonfun$8
  [29] cats.effect.IOFiber$$Lambda$196.0x0000000800dae2e0.apply
  [30] cats.effect.unsafe.WorkerThread.blockOn
  [31] scala.concurrent.package$.blocking
  [32] cats.effect.IOFiber.runLoop
  [33] cats.effect.IOFiber.execR
  [34] cats.effect.IOFiber.run
  [35] cats.effect.unsafe.WorkerThread.run

--- 250194522 ns (0.02%), 25 samples
  [ 0] zio_execute_stack_check.constprop.0?[zfs]_[k]
  [ 1] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 2] dmu_read_uio_dnode?[zfs]_[k]
  [ 3] dmu_read_uio_dbuf?[zfs]_[k]
  [ 4] mappedread?[zfs]_[k]
  [ 5] zfs_read?[zfs]_[k]
  [ 6] zpl_iter_read?[zfs]_[k]
  [ 7] new_sync_read_[k]
  [ 8] vfs_read_[k]
  [ 9] __x64_sys_pread64_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] __libc_pread64
  [13] sun.nio.ch.FileDispatcherImpl.pread0
  [14] sun.nio.ch.FileDispatcherImpl.pread
  [15] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [16] sun.nio.ch.IOUtil.read
  [17] sun.nio.ch.IOUtil.read
  [18] sun.nio.ch.FileChannelImpl.readInternal
  [19] sun.nio.ch.FileChannelImpl.read
  [20] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [21] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [22] jdk.nio.zipfs.ZipFileSystem$2.fill
  [23] java.util.zip.InflaterInputStream.read
  [24] java.io.InputStream.readNBytes
  [25] java.io.InputStream.readAllBytes
  [26] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [27] jdk.nio.zipfs.ZipPath.newByteChannel
  [28] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [29] java.nio.file.Files.newByteChannel
  [30] java.nio.file.Files.newByteChannel
  [31] java.nio.file.Files.readAllBytes
  [32] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [33] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25908.apply
  [34] cats.effect.IOFiber.$anonfun$8
  [35] cats.effect.IOFiber$$Lambda$196.0x0000000800dae2e0.apply
  [36] cats.effect.unsafe.WorkerThread.blockOn
  [37] scala.concurrent.package$.blocking
  [38] cats.effect.IOFiber.runLoop
  [39] cats.effect.IOFiber.execR
  [40] cats.effect.IOFiber.run
  [41] cats.effect.unsafe.WorkerThread.run

--- 249461617 ns (0.02%), 25 samples
  [ 0] free_swap_cache_[k]
  [ 1] free_pages_and_swap_cache_[k]
  [ 2] tlb_batch_pages_flush_[k]
  [ 3] tlb_flush_mmu_[k]
  [ 4] zap_pte_range_[k]
  [ 5] zap_pmd_range.isra.0_[k]
  [ 6] unmap_page_range_[k]
  [ 7] unmap_single_vma_[k]
  [ 8] unmap_vmas_[k]
  [ 9] unmap_region_[k]
  [10] __do_munmap_[k]
  [11] mmap_region_[k]
  [12] do_mmap_[k]
  [13] vm_mmap_pgoff_[k]
  [14] ksys_mmap_pgoff_[k]
  [15] __x64_sys_mmap_[k]
  [16] do_syscall_64_[k]
  [17] entry_SYSCALL_64_after_hwframe_[k]
  [18] __GI___mmap
  [19] G1PageBasedVirtualSpace::uncommit(unsigned long, unsigned long)
  [20] G1RegionsLargerThanCommitSizeMapper::uncommit_regions(unsigned int, unsigned long)
  [21] HeapRegionManager::uncommit_regions(unsigned int, unsigned int)
  [22] HeapRegionManager::uncommit_inactive_regions(unsigned int)
  [23] G1UncommitRegionTask::execute()
  [24] G1ServiceThread::run_task(G1ServiceTask*)
  [25] G1ServiceThread::run_service()
  [26] ConcurrentGCThread::run()
  [27] Thread::call_run()
  [28] thread_native_entry(Thread*)
  [29] start_thread

--- 240469765 ns (0.02%), 24 samples
  [ 0] arc_access?[zfs]_[k]
  [ 1] arc_buf_access?[zfs]_[k]
  [ 2] dbuf_hold_impl?[zfs]_[k]
  [ 3] dbuf_hold_level?[zfs]_[k]
  [ 4] dbuf_hold?[zfs]_[k]
  [ 5] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 6] dmu_read_uio_dnode?[zfs]_[k]
  [ 7] dmu_read_uio_dbuf?[zfs]_[k]
  [ 8] mappedread?[zfs]_[k]
  [ 9] zfs_read?[zfs]_[k]
  [10] zpl_iter_read?[zfs]_[k]
  [11] new_sync_read_[k]
  [12] vfs_read_[k]
  [13] __x64_sys_pread64_[k]
  [14] do_syscall_64_[k]
  [15] entry_SYSCALL_64_after_hwframe_[k]
  [16] __libc_pread64
  [17] sun.nio.ch.FileDispatcherImpl.pread0
  [18] sun.nio.ch.FileDispatcherImpl.pread
  [19] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [20] sun.nio.ch.IOUtil.read
  [21] sun.nio.ch.IOUtil.read
  [22] sun.nio.ch.FileChannelImpl.readInternal
  [23] sun.nio.ch.FileChannelImpl.read
  [24] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [25] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [26] jdk.nio.zipfs.ZipFileSystem$2.fill
  [27] java.util.zip.InflaterInputStream.read
  [28] java.io.InputStream.readNBytes
  [29] java.io.InputStream.readAllBytes
  [30] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [31] jdk.nio.zipfs.ZipPath.newByteChannel
  [32] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [33] java.nio.file.Files.newByteChannel
  [34] java.nio.file.Files.newByteChannel
  [35] java.nio.file.Files.readAllBytes
  [36] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [37] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25908.apply
  [38] cats.effect.IOFiber.$anonfun$8
  [39] cats.effect.IOFiber$$Lambda$196.0x0000000800dae2e0.apply
  [40] cats.effect.unsafe.WorkerThread.blockOn
  [41] scala.concurrent.package$.blocking
  [42] cats.effect.IOFiber.runLoop
  [43] cats.effect.IOFiber.execR
  [44] cats.effect.IOFiber.run
  [45] cats.effect.unsafe.WorkerThread.run

--- 240463090 ns (0.02%), 24 samples
  [ 0] spa_indirect_vdevs_loaded?[zfs]_[k]
  [ 1] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 2] dmu_read_uio_dnode?[zfs]_[k]
  [ 3] dmu_read_uio_dbuf?[zfs]_[k]
  [ 4] mappedread?[zfs]_[k]
  [ 5] zfs_read?[zfs]_[k]
  [ 6] zpl_iter_read?[zfs]_[k]
  [ 7] new_sync_read_[k]
  [ 8] vfs_read_[k]
  [ 9] __x64_sys_pread64_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] __libc_pread64
  [13] sun.nio.ch.FileDispatcherImpl.pread0
  [14] sun.nio.ch.FileDispatcherImpl.pread
  [15] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [16] sun.nio.ch.IOUtil.read
  [17] sun.nio.ch.IOUtil.read
  [18] sun.nio.ch.FileChannelImpl.readInternal
  [19] sun.nio.ch.FileChannelImpl.read
  [20] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [21] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [22] jdk.nio.zipfs.ZipFileSystem$2.fill
  [23] java.util.zip.InflaterInputStream.read
  [24] java.io.InputStream.readNBytes
  [25] java.io.InputStream.readAllBytes
  [26] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [27] jdk.nio.zipfs.ZipPath.newByteChannel
  [28] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [29] java.nio.file.Files.newByteChannel
  [30] java.nio.file.Files.newByteChannel
  [31] java.nio.file.Files.readAllBytes
  [32] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [33] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25908.apply
  [34] cats.effect.IOFiber.$anonfun$8
  [35] cats.effect.IOFiber$$Lambda$196.0x0000000800dae2e0.apply
  [36] cats.effect.unsafe.WorkerThread.blockOn
  [37] scala.concurrent.package$.blocking
  [38] cats.effect.IOFiber.runLoop
  [39] cats.effect.IOFiber.execR
  [40] cats.effect.IOFiber.run
  [41] cats.effect.unsafe.WorkerThread.run

--- 240284826 ns (0.02%), 24 samples
  [ 0] up_read_[k]
  [ 1] dbuf_hold_impl?[zfs]_[k]
  [ 2] dbuf_hold_level?[zfs]_[k]
  [ 3] dbuf_hold?[zfs]_[k]
  [ 4] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 5] dmu_read_uio_dnode?[zfs]_[k]
  [ 6] dmu_read_uio_dbuf?[zfs]_[k]
  [ 7] mappedread?[zfs]_[k]
  [ 8] zfs_read?[zfs]_[k]
  [ 9] zpl_iter_read?[zfs]_[k]
  [10] new_sync_read_[k]
  [11] vfs_read_[k]
  [12] __x64_sys_pread64_[k]
  [13] do_syscall_64_[k]
  [14] entry_SYSCALL_64_after_hwframe_[k]
  [15] __libc_pread64
  [16] sun.nio.ch.FileDispatcherImpl.pread0
  [17] sun.nio.ch.FileDispatcherImpl.pread
  [18] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [19] sun.nio.ch.IOUtil.read
  [20] sun.nio.ch.IOUtil.read
  [21] sun.nio.ch.FileChannelImpl.readInternal
  [22] sun.nio.ch.FileChannelImpl.read
  [23] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [24] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [25] jdk.nio.zipfs.ZipFileSystem$2.fill
  [26] java.util.zip.InflaterInputStream.read
  [27] java.io.InputStream.readNBytes
  [28] java.io.InputStream.readAllBytes
  [29] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [30] jdk.nio.zipfs.ZipPath.newByteChannel
  [31] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [32] java.nio.file.Files.newByteChannel
  [33] java.nio.file.Files.newByteChannel
  [34] java.nio.file.Files.readAllBytes
  [35] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [36] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25908.apply
  [37] cats.effect.IOFiber.$anonfun$8
  [38] cats.effect.IOFiber$$Lambda$196.0x0000000800dae2e0.apply
  [39] cats.effect.unsafe.WorkerThread.blockOn
  [40] scala.concurrent.package$.blocking
  [41] cats.effect.IOFiber.runLoop
  [42] cats.effect.IOFiber.execR
  [43] cats.effect.IOFiber.run
  [44] cats.effect.unsafe.WorkerThread.run

--- 240192077 ns (0.02%), 24 samples
  [ 0] ktime_get_raw_ts64_[k]
  [ 1] gethrtime?[zfs]_[k]
  [ 2] zio_wait?[zfs]_[k]
  [ 3] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 4] dmu_read_uio_dnode?[zfs]_[k]
  [ 5] dmu_read_uio_dbuf?[zfs]_[k]
  [ 6] mappedread?[zfs]_[k]
  [ 7] zfs_read?[zfs]_[k]
  [ 8] zpl_iter_read?[zfs]_[k]
  [ 9] new_sync_read_[k]
  [10] vfs_read_[k]
  [11] __x64_sys_pread64_[k]
  [12] do_syscall_64_[k]
  [13] entry_SYSCALL_64_after_hwframe_[k]
  [14] __libc_pread64
  [15] sun.nio.ch.FileDispatcherImpl.pread0
  [16] sun.nio.ch.FileDispatcherImpl.pread
  [17] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [18] sun.nio.ch.IOUtil.read
  [19] sun.nio.ch.IOUtil.read
  [20] sun.nio.ch.FileChannelImpl.readInternal
  [21] sun.nio.ch.FileChannelImpl.read
  [22] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [23] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [24] jdk.nio.zipfs.ZipFileSystem$2.fill
  [25] java.util.zip.InflaterInputStream.read
  [26] java.io.InputStream.readNBytes
  [27] java.io.InputStream.readAllBytes
  [28] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [29] jdk.nio.zipfs.ZipPath.newByteChannel
  [30] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [31] java.nio.file.Files.newByteChannel
  [32] java.nio.file.Files.newByteChannel
  [33] java.nio.file.Files.readAllBytes
  [34] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [35] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25908.apply
  [36] cats.effect.IOFiber.$anonfun$8
  [37] cats.effect.IOFiber$$Lambda$196.0x0000000800dae2e0.apply
  [38] cats.effect.unsafe.WorkerThread.blockOn
  [39] scala.concurrent.package$.blocking
  [40] cats.effect.IOFiber.runLoop
  [41] cats.effect.IOFiber.execR
  [42] cats.effect.IOFiber.run
  [43] cats.effect.unsafe.WorkerThread.run

--- 240114873 ns (0.02%), 24 samples
  [ 0] __mod_lruvec_page_state_[k]
  [ 1] page_add_new_anon_rmap_[k]
  [ 2] do_anonymous_page_[k]
  [ 3] handle_pte_fault_[k]
  [ 4] __handle_mm_fault_[k]
  [ 5] handle_mm_fault_[k]
  [ 6] do_user_addr_fault_[k]
  [ 7] exc_page_fault_[k]
  [ 8] asm_exc_page_fault_[k]
  [ 9] java.io.InputStream.readNBytes
  [10] java.io.InputStream.readAllBytes
  [11] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [12] jdk.nio.zipfs.ZipPath.newByteChannel
  [13] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [14] java.nio.file.Files.newByteChannel
  [15] java.nio.file.Files.newByteChannel
  [16] java.nio.file.Files.readAllBytes
  [17] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [18] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25908.apply
  [19] cats.effect.IOFiber.$anonfun$8
  [20] cats.effect.IOFiber$$Lambda$196.0x0000000800dae2e0.apply
  [21] cats.effect.unsafe.WorkerThread.blockOn
  [22] scala.concurrent.package$.blocking
  [23] cats.effect.IOFiber.runLoop
  [24] cats.effect.IOFiber.execR
  [25] cats.effect.IOFiber.run
  [26] cats.effect.unsafe.WorkerThread.run

--- 240107122 ns (0.02%), 24 samples
  [ 0] zrl_add_impl?[zfs]_[k]
  [ 1] dbuf_include_in_metadata_cache?[zfs]_[k]
  [ 2] dbuf_rele_and_unlock?[zfs]_[k]
  [ 3] dbuf_rele?[zfs]_[k]
  [ 4] dmu_buf_rele_array?[zfs]_[k]
  [ 5] dmu_read_uio_dnode?[zfs]_[k]
  [ 6] dmu_read_uio_dbuf?[zfs]_[k]
  [ 7] mappedread?[zfs]_[k]
  [ 8] zfs_read?[zfs]_[k]
  [ 9] zpl_iter_read?[zfs]_[k]
  [10] new_sync_read_[k]
  [11] vfs_read_[k]
  [12] __x64_sys_pread64_[k]
  [13] do_syscall_64_[k]
  [14] entry_SYSCALL_64_after_hwframe_[k]
  [15] __libc_pread64
  [16] sun.nio.ch.FileDispatcherImpl.pread0
  [17] sun.nio.ch.FileDispatcherImpl.pread
  [18] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [19] sun.nio.ch.IOUtil.read
  [20] sun.nio.ch.IOUtil.read
  [21] sun.nio.ch.FileChannelImpl.readInternal
  [22] sun.nio.ch.FileChannelImpl.read
  [23] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [24] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [25] jdk.nio.zipfs.ZipFileSystem$2.fill
  [26] java.util.zip.InflaterInputStream.read
  [27] java.io.InputStream.readNBytes
  [28] java.io.InputStream.readAllBytes
  [29] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [30] jdk.nio.zipfs.ZipPath.newByteChannel
  [31] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [32] java.nio.file.Files.newByteChannel
  [33] java.nio.file.Files.newByteChannel
  [34] java.nio.file.Files.readAllBytes
  [35] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [36] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25908.apply
  [37] cats.effect.IOFiber.$anonfun$8
  [38] cats.effect.IOFiber$$Lambda$196.0x0000000800dae2e0.apply
  [39] cats.effect.unsafe.WorkerThread.blockOn
  [40] scala.concurrent.package$.blocking
  [41] cats.effect.IOFiber.runLoop
  [42] cats.effect.IOFiber.execR
  [43] cats.effect.IOFiber.run
  [44] cats.effect.unsafe.WorkerThread.run

--- 240056716 ns (0.02%), 24 samples
  [ 0] zio_destroy?[zfs]_[k]
  [ 1] zio_wait?[zfs]_[k]
  [ 2] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 3] dmu_read_uio_dnode?[zfs]_[k]
  [ 4] dmu_read_uio_dbuf?[zfs]_[k]
  [ 5] mappedread?[zfs]_[k]
  [ 6] zfs_read?[zfs]_[k]
  [ 7] zpl_iter_read?[zfs]_[k]
  [ 8] new_sync_read_[k]
  [ 9] vfs_read_[k]
  [10] __x64_sys_pread64_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] __libc_pread64
  [14] sun.nio.ch.FileDispatcherImpl.pread0
  [15] sun.nio.ch.FileDispatcherImpl.pread
  [16] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [17] sun.nio.ch.IOUtil.read
  [18] sun.nio.ch.IOUtil.read
  [19] sun.nio.ch.FileChannelImpl.readInternal
  [20] sun.nio.ch.FileChannelImpl.read
  [21] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [22] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [23] jdk.nio.zipfs.ZipFileSystem$2.fill
  [24] java.util.zip.InflaterInputStream.read
  [25] java.io.InputStream.readNBytes
  [26] java.io.InputStream.readAllBytes
  [27] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [28] jdk.nio.zipfs.ZipPath.newByteChannel
  [29] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [30] java.nio.file.Files.newByteChannel
  [31] java.nio.file.Files.newByteChannel
  [32] java.nio.file.Files.readAllBytes
  [33] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [34] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25908.apply
  [35] cats.effect.IOFiber.$anonfun$8
  [36] cats.effect.IOFiber$$Lambda$196.0x0000000800dae2e0.apply
  [37] cats.effect.unsafe.WorkerThread.blockOn
  [38] scala.concurrent.package$.blocking
  [39] cats.effect.IOFiber.runLoop
  [40] cats.effect.IOFiber.execR
  [41] cats.effect.IOFiber.run
  [42] cats.effect.unsafe.WorkerThread.run

--- 240026049 ns (0.02%), 24 samples
  [ 0] SpinPause
  [ 1] G1CMTask::do_marking_step(double, bool, bool)
  [ 2] G1CMConcurrentMarkingTask::work(unsigned int)
  [ 3] GangWorker::loop()
  [ 4] GangWorker::run()
  [ 5] Thread::call_run()
  [ 6] thread_native_entry(Thread*)
  [ 7] start_thread

--- 239979574 ns (0.02%), 24 samples
  [ 0] AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<548964ul, G1BarrierSet>, (AccessInternal::BarrierType)2, 548964ul>::oop_access_barrier(void*)
  [ 1] Java_java_util_zip_Inflater_inflateBytesBytes
  [ 2] java.util.zip.Inflater.inflateBytesBytes
  [ 3] java.util.zip.Inflater.inflate
  [ 4] java.util.zip.InflaterInputStream.read
  [ 5] java.io.InputStream.readNBytes
  [ 6] java.io.InputStream.readAllBytes
  [ 7] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [ 8] jdk.nio.zipfs.ZipPath.newByteChannel
  [ 9] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [10] java.nio.file.Files.newByteChannel
  [11] java.nio.file.Files.newByteChannel
  [12] java.nio.file.Files.readAllBytes
  [13] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [14] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25908.apply
  [15] cats.effect.IOFiber.$anonfun$8
  [16] cats.effect.IOFiber$$Lambda$196.0x0000000800dae2e0.apply
  [17] cats.effect.unsafe.WorkerThread.blockOn
  [18] scala.concurrent.package$.blocking
  [19] cats.effect.IOFiber.runLoop
  [20] cats.effect.IOFiber.execR
  [21] cats.effect.IOFiber.run
  [22] cats.effect.unsafe.WorkerThread.run

--- 230247844 ns (0.02%), 23 samples
  [ 0] java.util.Arrays.copyOf
  [ 1] java.util.Arrays.copyOf
  [ 2] java.util.ArrayList.grow
  [ 3] java.util.ArrayList.grow
  [ 4] java.util.ArrayList.add
  [ 5] java.util.ArrayList.add
  [ 6] java.io.InputStream.readNBytes
  [ 7] java.io.InputStream.readAllBytes
  [ 8] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [ 9] jdk.nio.zipfs.ZipPath.newByteChannel
  [10] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [11] java.nio.file.Files.newByteChannel
  [12] java.nio.file.Files.newByteChannel
  [13] java.nio.file.Files.readAllBytes
  [14] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [15] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25908.apply
  [16] cats.effect.IOFiber.$anonfun$8
  [17] cats.effect.IOFiber$$Lambda$196.0x0000000800dae2e0.apply
  [18] cats.effect.unsafe.WorkerThread.blockOn
  [19] scala.concurrent.package$.blocking
  [20] cats.effect.IOFiber.runLoop
  [21] cats.effect.IOFiber.execR
  [22] cats.effect.IOFiber.run
  [23] cats.effect.unsafe.WorkerThread.run

--- 230219392 ns (0.02%), 23 samples
  [ 0] zio_create?[zfs]_[k]
  [ 1] zio_null?[zfs]_[k]
  [ 2] zio_root?[zfs]_[k]
  [ 3] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 4] dmu_read_uio_dnode?[zfs]_[k]
  [ 5] dmu_read_uio_dbuf?[zfs]_[k]
  [ 6] mappedread?[zfs]_[k]
  [ 7] zfs_read?[zfs]_[k]
  [ 8] zpl_iter_read?[zfs]_[k]
  [ 9] new_sync_read_[k]
  [10] vfs_read_[k]
  [11] __x64_sys_pread64_[k]
  [12] do_syscall_64_[k]
  [13] entry_SYSCALL_64_after_hwframe_[k]
  [14] __libc_pread64
  [15] sun.nio.ch.FileDispatcherImpl.pread0
  [16] sun.nio.ch.FileDispatcherImpl.pread
  [17] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [18] sun.nio.ch.IOUtil.read
  [19] sun.nio.ch.IOUtil.read
  [20] sun.nio.ch.FileChannelImpl.readInternal
  [21] sun.nio.ch.FileChannelImpl.read
  [22] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [23] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [24] jdk.nio.zipfs.ZipFileSystem$2.fill
  [25] java.util.zip.InflaterInputStream.read
  [26] java.io.InputStream.readNBytes
  [27] java.io.InputStream.readAllBytes
  [28] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [29] jdk.nio.zipfs.ZipPath.newByteChannel
  [30] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [31] java.nio.file.Files.newByteChannel
  [32] java.nio.file.Files.newByteChannel
  [33] java.nio.file.Files.readAllBytes
  [34] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [35] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25908.apply
  [36] cats.effect.IOFiber.$anonfun$8
  [37] cats.effect.IOFiber$$Lambda$196.0x0000000800dae2e0.apply
  [38] cats.effect.unsafe.WorkerThread.blockOn
  [39] scala.concurrent.package$.blocking
  [40] cats.effect.IOFiber.runLoop
  [41] cats.effect.IOFiber.execR
  [42] cats.effect.IOFiber.run
  [43] cats.effect.unsafe.WorkerThread.run

--- 230170673 ns (0.02%), 23 samples
  [ 0] apparmor_file_permission_[k]
  [ 1] rw_verify_area_[k]
  [ 2] vfs_read_[k]
  [ 3] __x64_sys_pread64_[k]
  [ 4] do_syscall_64_[k]
  [ 5] entry_SYSCALL_64_after_hwframe_[k]
  [ 6] __libc_pread64
  [ 7] sun.nio.ch.FileDispatcherImpl.pread0
  [ 8] sun.nio.ch.FileDispatcherImpl.pread
  [ 9] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [10] sun.nio.ch.IOUtil.read
  [11] sun.nio.ch.IOUtil.read
  [12] sun.nio.ch.FileChannelImpl.readInternal
  [13] sun.nio.ch.FileChannelImpl.read
  [14] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [15] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [16] jdk.nio.zipfs.ZipFileSystem$2.fill
  [17] java.util.zip.InflaterInputStream.read
  [18] java.io.InputStream.readNBytes
  [19] java.io.InputStream.readAllBytes
  [20] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [21] jdk.nio.zipfs.ZipPath.newByteChannel
  [22] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [23] java.nio.file.Files.newByteChannel
  [24] java.nio.file.Files.newByteChannel
  [25] java.nio.file.Files.readAllBytes
  [26] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [27] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25908.apply
  [28] cats.effect.IOFiber.$anonfun$8
  [29] cats.effect.IOFiber$$Lambda$196.0x0000000800dae2e0.apply
  [30] cats.effect.unsafe.WorkerThread.blockOn
  [31] scala.concurrent.package$.blocking
  [32] cats.effect.IOFiber.runLoop
  [33] cats.effect.IOFiber.execR
  [34] cats.effect.IOFiber.run
  [35] cats.effect.unsafe.WorkerThread.run

--- 230149778 ns (0.02%), 23 samples
  [ 0] mutex_unlock_[k]
  [ 1] zio_done?[zfs]_[k]
  [ 2] zio_wait?[zfs]_[k]
  [ 3] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 4] dmu_read_uio_dnode?[zfs]_[k]
  [ 5] dmu_read_uio_dbuf?[zfs]_[k]
  [ 6] mappedread?[zfs]_[k]
  [ 7] zfs_read?[zfs]_[k]
  [ 8] zpl_iter_read?[zfs]_[k]
  [ 9] new_sync_read_[k]
  [10] vfs_read_[k]
  [11] __x64_sys_pread64_[k]
  [12] do_syscall_64_[k]
  [13] entry_SYSCALL_64_after_hwframe_[k]
  [14] __libc_pread64
  [15] sun.nio.ch.FileDispatcherImpl.pread0
  [16] sun.nio.ch.FileDispatcherImpl.pread
  [17] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [18] sun.nio.ch.IOUtil.read
  [19] sun.nio.ch.IOUtil.read
  [20] sun.nio.ch.FileChannelImpl.readInternal
  [21] sun.nio.ch.FileChannelImpl.read
  [22] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [23] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [24] jdk.nio.zipfs.ZipFileSystem$2.fill
  [25] java.util.zip.InflaterInputStream.read
  [26] java.io.InputStream.readNBytes
  [27] java.io.InputStream.readAllBytes
  [28] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [29] jdk.nio.zipfs.ZipPath.newByteChannel
  [30] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [31] java.nio.file.Files.newByteChannel
  [32] java.nio.file.Files.newByteChannel
  [33] java.nio.file.Files.readAllBytes
  [34] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [35] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25908.apply
  [36] cats.effect.IOFiber.$anonfun$8
  [37] cats.effect.IOFiber$$Lambda$196.0x0000000800dae2e0.apply
  [38] cats.effect.unsafe.WorkerThread.blockOn
  [39] scala.concurrent.package$.blocking
  [40] cats.effect.IOFiber.runLoop
  [41] cats.effect.IOFiber.execR
  [42] cats.effect.IOFiber.run
  [43] cats.effect.unsafe.WorkerThread.run

--- 230021520 ns (0.02%), 23 samples
  [ 0] lockref_get_not_zero_[k]
  [ 1] dget_parent_[k]
  [ 2] __fsnotify_parent_[k]
  [ 3] fsnotify_perm.part.0_[k]
  [ 4] security_file_permission_[k]
  [ 5] rw_verify_area_[k]
  [ 6] vfs_read_[k]
  [ 7] __x64_sys_pread64_[k]
  [ 8] do_syscall_64_[k]
  [ 9] entry_SYSCALL_64_after_hwframe_[k]
  [10] __libc_pread64
  [11] sun.nio.ch.FileDispatcherImpl.pread0
  [12] sun.nio.ch.FileDispatcherImpl.pread
  [13] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [14] sun.nio.ch.IOUtil.read
  [15] sun.nio.ch.IOUtil.read
  [16] sun.nio.ch.FileChannelImpl.readInternal
  [17] sun.nio.ch.FileChannelImpl.read
  [18] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [19] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [20] jdk.nio.zipfs.ZipFileSystem$2.fill
  [21] java.util.zip.InflaterInputStream.read
  [22] java.io.InputStream.readNBytes
  [23] java.io.InputStream.readAllBytes
  [24] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [25] jdk.nio.zipfs.ZipPath.newByteChannel
  [26] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [27] java.nio.file.Files.newByteChannel
  [28] java.nio.file.Files.newByteChannel
  [29] java.nio.file.Files.readAllBytes
  [30] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [31] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25908.apply
  [32] cats.effect.IOFiber.$anonfun$8
  [33] cats.effect.IOFiber$$Lambda$196.0x0000000800dae2e0.apply
  [34] cats.effect.unsafe.WorkerThread.blockOn
  [35] scala.concurrent.package$.blocking
  [36] cats.effect.IOFiber.runLoop
  [37] cats.effect.IOFiber.execR
  [38] cats.effect.IOFiber.run
  [39] cats.effect.unsafe.WorkerThread.run

--- 229988319 ns (0.02%), 23 samples
  [ 0] G1CMTask::drain_local_queue(bool) [clone .part.0] [clone .constprop.1]
  [ 1] G1CMTask::do_marking_step(double, bool, bool)
  [ 2] G1CMConcurrentMarkingTask::work(unsigned int)
  [ 3] GangWorker::loop()
  [ 4] GangWorker::run()
  [ 5] Thread::call_run()
  [ 6] thread_native_entry(Thread*)
  [ 7] start_thread

--- 222731497 ns (0.02%), 22 samples
  [ 0] _raw_spin_unlock_irqrestore_[k]
  [ 1] try_to_wake_up_[k]
  [ 2] wake_up_q_[k]
  [ 3] futex_wake_[k]
  [ 4] do_futex_[k]
  [ 5] __x64_sys_futex_[k]
  [ 6] do_syscall_64_[k]
  [ 7] entry_SYSCALL_64_after_hwframe_[k]
  [ 8] pthread_cond_signal@@GLIBC_2.3.2
  [ 9] jdk.internal.misc.Unsafe.unpark
  [10] java.util.concurrent.locks.LockSupport.unpark
  [11] cats.effect.unsafe.WorkStealingThreadPool.notifyParked
  [12] cats.effect.unsafe.WorkStealingThreadPool.scheduleExternal
  [13] cats.effect.unsafe.WorkStealingThreadPool.execute
  [14] cats.effect.IO.unsafeRunFiber
  [15] cats.effect.IO.unsafeRunAsync
  [16] cats.effect.IOPlatform.unsafeRunTimed
  [17] cats.effect.IOPlatform.unsafeRunSync
  [18] com.scalamandra.ZipBench.nioReadAllBytes
  [19] com.scalamandra.jmh_generated.ZipBench_nioReadAllBytes_jmhTest.nioReadAllBytes_thrpt_jmhStub
  [20] com.scalamandra.jmh_generated.ZipBench_nioReadAllBytes_jmhTest.nioReadAllBytes_Throughput
  [21] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [22] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [23] java.lang.reflect.Method.invoke
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.Executors$RunnableAdapter.call
  [28] java.util.concurrent.FutureTask.run
  [29] java.util.concurrent.ThreadPoolExecutor.runWorker
  [30] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [31] java.lang.Thread.run

--- 221235317 ns (0.02%), 22 samples
  [ 0] _raw_spin_unlock_irqrestore_[k]
  [ 1] try_to_wake_up_[k]
  [ 2] wake_up_q_[k]
  [ 3] futex_wake_[k]
  [ 4] do_futex_[k]
  [ 5] __x64_sys_futex_[k]
  [ 6] do_syscall_64_[k]
  [ 7] entry_SYSCALL_64_after_hwframe_[k]
  [ 8] __lll_lock_wake
  [ 9] G1PLABAllocator::allocate_direct_or_new_plab(G1HeapRegionAttr, unsigned long, bool*, unsigned int)
  [10] G1ParScanThreadState::allocate_copy_slow(G1HeapRegionAttr*, oopDesc*, unsigned long, unsigned int, unsigned int)
  [11] G1ParScanThreadState::trim_queue_to_threshold(unsigned int)
  [12] G1ParScanThreadState::steal_and_trim_queue(GenericTaskQueueSet<OverflowTaskQueue<ScannerTask, (MEMFLAGS)5, 131072u>, (MEMFLAGS)5>*)
  [13] G1ParEvacuateFollowersClosure::do_void()
  [14] G1EvacuateRegionsTask::evacuate_live_objects(G1ParScanThreadState*, unsigned int)
  [15] G1EvacuateRegionsBaseTask::work(unsigned int)
  [16] GangWorker::loop()
  [17] GangWorker::run()
  [18] Thread::call_run()
  [19] thread_native_entry(Thread*)
  [20] start_thread

--- 221010329 ns (0.02%), 22 samples
  [ 0] G1Allocator::survivor_attempt_allocation(unsigned long, unsigned long, unsigned long*, unsigned int)
  [ 1] G1PLABAllocator::allocate_direct_or_new_plab(G1HeapRegionAttr, unsigned long, bool*, unsigned int)
  [ 2] G1ParScanThreadState::allocate_copy_slow(G1HeapRegionAttr*, oopDesc*, unsigned long, unsigned int, unsigned int)
  [ 3] G1ParScanThreadState::trim_queue_to_threshold(unsigned int)
  [ 4] G1ParEvacuateFollowersClosure::do_void()
  [ 5] G1EvacuateRegionsTask::evacuate_live_objects(G1ParScanThreadState*, unsigned int)
  [ 6] G1EvacuateRegionsBaseTask::work(unsigned int)
  [ 7] GangWorker::loop()
  [ 8] GangWorker::run()
  [ 9] Thread::call_run()
  [10] thread_native_entry(Thread*)
  [11] start_thread

--- 220544232 ns (0.02%), 22 samples
  [ 0] percpu_counter_add_batch_[k]
  [ 1] percpu_counter_add?[spl]_[k]
  [ 2] percpu_counter_inc?[spl]_[k]
  [ 3] spl_kmem_cache_alloc?[spl]_[k]
  [ 4] zio_create?[zfs]_[k]
  [ 5] zio_null?[zfs]_[k]
  [ 6] zio_root?[zfs]_[k]
  [ 7] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 8] dmu_read_uio_dnode?[zfs]_[k]
  [ 9] dmu_read_uio_dbuf?[zfs]_[k]
  [10] mappedread?[zfs]_[k]
  [11] zfs_read?[zfs]_[k]
  [12] zpl_iter_read?[zfs]_[k]
  [13] new_sync_read_[k]
  [14] vfs_read_[k]
  [15] __x64_sys_pread64_[k]
  [16] do_syscall_64_[k]
  [17] entry_SYSCALL_64_after_hwframe_[k]
  [18] __libc_pread64
  [19] sun.nio.ch.FileDispatcherImpl.pread0
  [20] sun.nio.ch.FileDispatcherImpl.pread
  [21] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [22] sun.nio.ch.IOUtil.read
  [23] sun.nio.ch.IOUtil.read
  [24] sun.nio.ch.FileChannelImpl.readInternal
  [25] sun.nio.ch.FileChannelImpl.read
  [26] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [27] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [28] jdk.nio.zipfs.ZipFileSystem$2.fill
  [29] java.util.zip.InflaterInputStream.read
  [30] java.io.InputStream.readNBytes
  [31] java.io.InputStream.readAllBytes
  [32] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [33] jdk.nio.zipfs.ZipPath.newByteChannel
  [34] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [35] java.nio.file.Files.newByteChannel
  [36] java.nio.file.Files.newByteChannel
  [37] java.nio.file.Files.readAllBytes
  [38] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [39] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25908.apply
  [40] cats.effect.IOFiber.$anonfun$8
  [41] cats.effect.IOFiber$$Lambda$196.0x0000000800dae2e0.apply
  [42] cats.effect.unsafe.WorkerThread.blockOn
  [43] scala.concurrent.package$.blocking
  [44] cats.effect.IOFiber.runLoop
  [45] cats.effect.IOFiber.execR
  [46] cats.effect.IOFiber.run
  [47] cats.effect.unsafe.WorkerThread.run

--- 220365600 ns (0.02%), 22 samples
  [ 0] handle_mm_fault_[k]
  [ 1] do_user_addr_fault_[k]
  [ 2] exc_page_fault_[k]
  [ 3] asm_exc_page_fault_[k]
  [ 4] java.io.InputStream.readNBytes
  [ 5] java.io.InputStream.readAllBytes
  [ 6] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [ 7] jdk.nio.zipfs.ZipPath.newByteChannel
  [ 8] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [ 9] java.nio.file.Files.newByteChannel
  [10] java.nio.file.Files.newByteChannel
  [11] java.nio.file.Files.readAllBytes
  [12] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [13] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25908.apply
  [14] cats.effect.IOFiber.$anonfun$8
  [15] cats.effect.IOFiber$$Lambda$196.0x0000000800dae2e0.apply
  [16] cats.effect.unsafe.WorkerThread.blockOn
  [17] scala.concurrent.package$.blocking
  [18] cats.effect.IOFiber.runLoop
  [19] cats.effect.IOFiber.execR
  [20] cats.effect.IOFiber.run
  [21] cats.effect.unsafe.WorkerThread.run

--- 220319321 ns (0.02%), 22 samples
  [ 0] xas_start_[k]
  [ 1] xas_load_[k]
  [ 2] __filemap_get_folio_[k]
  [ 3] pagecache_get_page_[k]
  [ 4] find_lock_page?[zfs]_[k]
  [ 5] mappedread?[zfs]_[k]
  [ 6] zfs_read?[zfs]_[k]
  [ 7] zpl_iter_read?[zfs]_[k]
  [ 8] new_sync_read_[k]
  [ 9] vfs_read_[k]
  [10] __x64_sys_pread64_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] __libc_pread64
  [14] sun.nio.ch.FileDispatcherImpl.pread0
  [15] sun.nio.ch.FileDispatcherImpl.pread
  [16] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [17] sun.nio.ch.IOUtil.read
  [18] sun.nio.ch.IOUtil.read
  [19] sun.nio.ch.FileChannelImpl.readInternal
  [20] sun.nio.ch.FileChannelImpl.read
  [21] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [22] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [23] jdk.nio.zipfs.ZipFileSystem$2.fill
  [24] java.util.zip.InflaterInputStream.read
  [25] java.io.InputStream.readNBytes
  [26] java.io.InputStream.readAllBytes
  [27] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [28] jdk.nio.zipfs.ZipPath.newByteChannel
  [29] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [30] java.nio.file.Files.newByteChannel
  [31] java.nio.file.Files.newByteChannel
  [32] java.nio.file.Files.readAllBytes
  [33] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [34] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25908.apply
  [35] cats.effect.IOFiber.$anonfun$8
  [36] cats.effect.IOFiber$$Lambda$196.0x0000000800dae2e0.apply
  [37] cats.effect.unsafe.WorkerThread.blockOn
  [38] scala.concurrent.package$.blocking
  [39] cats.effect.IOFiber.runLoop
  [40] cats.effect.IOFiber.execR
  [41] cats.effect.IOFiber.run
  [42] cats.effect.unsafe.WorkerThread.run

--- 220312378 ns (0.02%), 22 samples
  [ 0] zfs_rangelock_compare?[zfs]_[k]
  [ 1] zfs_rangelock_enter_reader?[zfs]_[k]
  [ 2] zfs_rangelock_enter_impl?[zfs]_[k]
  [ 3] zfs_rangelock_enter?[zfs]_[k]
  [ 4] zfs_read?[zfs]_[k]
  [ 5] zpl_iter_read?[zfs]_[k]
  [ 6] new_sync_read_[k]
  [ 7] vfs_read_[k]
  [ 8] __x64_sys_pread64_[k]
  [ 9] do_syscall_64_[k]
  [10] entry_SYSCALL_64_after_hwframe_[k]
  [11] __libc_pread64
  [12] sun.nio.ch.FileDispatcherImpl.pread0
  [13] sun.nio.ch.FileDispatcherImpl.pread
  [14] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [15] sun.nio.ch.IOUtil.read
  [16] sun.nio.ch.IOUtil.read
  [17] sun.nio.ch.FileChannelImpl.readInternal
  [18] sun.nio.ch.FileChannelImpl.read
  [19] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [20] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [21] jdk.nio.zipfs.ZipFileSystem$2.fill
  [22] java.util.zip.InflaterInputStream.read
  [23] java.io.InputStream.readNBytes
  [24] java.io.InputStream.readAllBytes
  [25] jdk.nio.zipfs.ZipFileSystem.newByteChannel
  [26] jdk.nio.zipfs.ZipPath.newByteChannel
  [27] jdk.nio.zipfs.ZipFileSystemProvider.newByteChannel
  [28] java.nio.file.Files.newByteChannel
  [29] java.nio.file.Files.newByteChannel
  [30] java.nio.file.Files.readAllBytes
  [31] com.scalamandra.ZipLib$$anon$1.nioReadAllBytes$$anonfun$1
  [32] com.scalamandra.ZipLib$$anon$1$$Lambda$63.0x0000000800d25908.apply
  [33] cats.effect.IOFiber.$anonfun$8
  [34] cats.effect.IOFiber$$Lambda$196.0x0000000800dae2e0.apply
  [35] cats.effect.unsafe.WorkerThread.blockOn
  [36] scala.concurrent.package$.blocking
  [37] cats.effect.IOFiber.runLoop
  [38] cats.effect.IOFiber.execR
  [39] cats.effect.IOFiber.run
  [40] cats.effect.unsafe.WorkerThread.run

          ns  percent  samples  top
  ----------  -------  -------  ---
844141720984   58.47%    84425  /usr/lib/x86_64-linux-gnu/libz.so.1.2.11
 98074879725    6.79%     9795  __memset_avx2_unaligned_erms
 88823598197    6.15%     8874  java.lang.System.arraycopy
 53121675633    3.68%     5312  inflate
 43819053536    3.04%     4379  java.util.Arrays.copyOfRange
 30498367578    2.11%     3048  java.io.InputStream.readNBytes
 28703547119    1.99%     2858  __memcpy_sse2_unaligned_erms
 26649013229    1.85%     2663  java.lang.StringCoding.hasNegatives
 14259358153    0.99%     1424  clear_page_rep_[k]
 10733255526    0.74%     1073  __memmove_avx_unaligned_erms
  9352949516    0.65%      934  copy_user_generic_string_[k]
  6485458484    0.45%      648  do_user_addr_fault_[k]
  5201543364    0.36%      519  _raw_spin_unlock_irqrestore_[k]
  3722720567    0.26%      372  mutex_unlock_[k]
  3685634278    0.26%      368  find_vmap_area_[k]
  3634588885    0.25%      363  mutex_lock_[k]
  3430848232    0.24%      343  jlong_disjoint_arraycopy
  3423062553    0.24%      342  _raw_spin_lock_[k]
  3233299930    0.22%      322  G1ParScanThreadState::trim_queue_to_threshold(unsigned int)
  3074970281    0.21%      307  percpu_counter_add_batch_[k]
  2682193115    0.19%      268  zio_create?[zfs]_[k]
  2649430484    0.18%      265  void OopOopIterateDispatch<G1CMOopClosure>::Table::oop_oop_iterate<InstanceKlass, narrowOop>(G1CMOopClosure*, oopDesc*, Klass*)
  2511072412    0.17%      251  java.util.zip.Inflater.inflate
  2303202138    0.16%      230  rmqueue_pcplist.constprop.0_[k]
  2173238992    0.15%      217  memset_[k]
  2031243866    0.14%      203  native_queued_spin_lock_slowpath.part.0_[k]
  1944035697    0.13%      193  free_unref_page_list_[k]
  1700589520    0.12%      170  jni_GetPrimitiveArrayCritical
  1512997381    0.10%      151  __kmalloc_node_[k]
  1503996701    0.10%      150  syscall_enter_from_user_mode_[k]
  1482767124    0.10%      148  kfree_[k]
  1440910363    0.10%      144  dbuf_rele_and_unlock?[zfs]_[k]
  1439638253    0.10%      144  void OopOopIterateDispatch<G1CMOopClosure>::Table::oop_oop_iterate<ObjArrayKlass, narrowOop>(G1CMOopClosure*, oopDesc*, Klass*)
  1390855751    0.10%      139  jni_ReleasePrimitiveArrayCritical
  1381747148    0.10%      138  dmu_buf_hold_array_by_dnode?[zfs]_[k]
  1351672160    0.09%      135  zio_wait?[zfs]_[k]
  1332409224    0.09%      133  HeapRegionManager::par_iterate(HeapRegionClosure*, HeapRegionClaimer*, unsigned int) const
  1312209940    0.09%      131  kmem_cache_free_[k]
  1255941618    0.09%      126  zap_pte_range_[k]
  1231583961    0.09%      123  zrl_add_impl?[zfs]_[k]
  1230129104    0.09%      123  java.util.zip.Inflater.inflateBytesBytes
  1221002194    0.08%      122  __handle_mm_fault_[k]
  1182070350    0.08%      118  kmem_cache_alloc_[k]
  1180222541    0.08%      118  G1RebuildRemSetTask::G1RebuildRemSetHeapRegionClosure::do_heap_region(HeapRegion*)
  1171369722    0.08%      117  down_read_[k]
  1141560564    0.08%      114  __fget_light_[k]
  1121272561    0.08%      112  zio_done?[zfs]_[k]
  1111225496    0.08%      111  charge_memcg_[k]
  1090782720    0.08%      109  up_read_[k]
  1082469621    0.07%      108  dbuf_find?[zfs]_[k]
  1081486259    0.07%      108  dbuf_hold_impl?[zfs]_[k]
  1051035282    0.07%      105  do_anonymous_page_[k]
  1010636765    0.07%      101  __rcu_read_lock_[k]
  1001042831    0.07%      100  read_tsc_[k]
   991280338    0.07%       99  cityhash4?[zcommon]_[k]
   971862368    0.07%       97  zfs_read?[zfs]_[k]
   971360307    0.07%       97  arc_buf_access?[zfs]_[k]
   970544799    0.07%       97  __libc_pread64
   961235840    0.07%       96  zio_ready?[zfs]_[k]
   900279904    0.06%       90  Java_java_util_zip_Inflater_inflateBytesBytes
   891130707    0.06%       89  dbuf_read?[zfs]_[k]
   859679533    0.06%       86  void OopOopIterateDispatch<G1RebuildRemSetClosure>::Table::oop_oop_iterate<InstanceKlass, narrowOop>(G1RebuildRemSetClosure*, oopDesc*, Klass*)
   791475379    0.05%       79  dbuf_cache_multilist_index_func?[zfs]_[k]
   780959865    0.05%       78  dmu_zfetch_prepare?[zfs]_[k]
   770774792    0.05%       77  vfs_read_[k]
   761095373    0.05%       76  __cond_resched_[k]
   760782321    0.05%       76  _raw_spin_unlock_[k]
   740895644    0.05%       74  __list_del_entry?[zfs]_[k]
   739986961    0.05%       74  CollectedHeap::supports_object_pinning() const
   730360969    0.05%       73  cats.effect.unsafe.WorkerThread.run
   692511014    0.05%       69  G1ParCopyClosure<(G1Barrier)1, true>::do_oop(oopDesc**)
   691056863    0.05%       69  handle_mm_fault_[k]
   690745756    0.05%       69  __alloc_pages_[k]
   690221341    0.05%       69  __mod_lruvec_page_state_[k]
   690202057    0.05%       69  __rcu_read_unlock_[k]
   660610047    0.05%       66  blk_cgroup_congested_[k]
   640291894    0.04%       64  list_del?[zfs]_[k]
   630665053    0.04%       63  ktime_get_raw_ts64_[k]
   621140405    0.04%       62  apparmor_file_permission_[k]
   611002218    0.04%       61  dmu_read_uio_dbuf?[zfs]_[k]
   601477704    0.04%       60  kmalloc_slab_[k]
   601211750    0.04%       60  spl_mutex_set_owner?[zfs]_[k]
   600579534    0.04%       60  _copy_to_iter_[k]
   592380085    0.04%       59  G1Allocator::survivor_attempt_allocation(unsigned long, unsigned long, unsigned long*, unsigned int)
   590883936    0.04%       59  get_mem_cgroup_from_mm_[k]
   580816366    0.04%       58  count_memcg_events.constprop.0_[k]
   580651440    0.04%       58  zio_wait_for_children?[zfs]_[k]
   580292270    0.04%       58  spl_mutex_clear_owner?[zfs]_[k]
   570496713    0.04%       57  cityhash_helper.constprop.0?[zcommon]_[k]
   570190355    0.04%       57  checkInflateStatus
   560338255    0.04%       56  zrl_remove?[zfs]_[k]
   550604187    0.04%       55  fsnotify_perm.part.0_[k]
   549879066    0.04%       55  G1CMTask::do_marking_step(double, bool, bool)
   540282591    0.04%       54  sun.nio.ch.FileDispatcherImpl.pread0
   539915149    0.04%       54  void G1CMTask::process_grey_task_entry<true>(G1TaskQueueEntry)
   530202805    0.04%       53  handle_pte_fault_[k]
   520700253    0.04%       52  __x86_return_thunk_[k]
   520661857    0.04%       52  __filemap_get_folio_[k]
   510975789    0.04%       51  dmu_zfetch_stream_create?[zfs]_[k]
   510534888    0.04%       51  dmu_read_uio_dnode?[zfs]_[k]
   500606155    0.03%       50  HeapRegionManager::find_contiguous_in_free_list(unsigned int)
   490640734    0.03%       49  void WeakProcessor::Task::work<G1STWIsAliveClosure, G1KeepAliveClosure>(unsigned int, G1STWIsAliveClosure*, G1KeepAliveClosure*)
   480328902    0.03%       48  multilist_remove?[zfs]_[k]
   470653202    0.03%       47  get_page_from_freelist_[k]
   470294839    0.03%       47  zio_walk_parents?[zfs]_[k]
   470043599    0.03%       47  void OopOopIterateDispatch<G1CMOopClosure>::Table::oop_oop_iterate<InstanceMirrorKlass, narrowOop>(G1CMOopClosure*, oopDesc*, Klass*)
   460785911    0.03%       46  __fsnotify_parent_[k]
   460723412    0.03%       46  mappedread?[zfs]_[k]
   450768986    0.03%       45  dbuf_read_verify_dnode_crypt?[zfs]_[k]
   440905279    0.03%       44  __tls_get_addr
   440802743    0.03%       44  __list_del?[zfs]_[k]
   440679286    0.03%       44  __next_zones_zonelist_[k]
   430680325    0.03%       43  down_read_trylock_[k]
   430429477    0.03%       43  list_head?[zfs]_[k]
   430282948    0.03%       43  CompiledMethod::cleanup_inline_caches_impl(bool, bool)
   430138416    0.03%       43  java.util.zip.Inflater.setInput
   421603934    0.03%       42  G1ParScanThreadState::steal_and_trim_queue(GenericTaskQueueSet<OverflowTaskQueue<ScannerTask, (MEMFLAGS)5, 131072u>, (MEMFLAGS)5>*)
   420504446    0.03%       42  vma_alloc_folio_[k]
   420422472    0.03%       42  zpl_iter_read?[zfs]_[k]
   420388932    0.03%       42  sun.nio.ch.NativeThreadSet.add
   418885274    0.03%       42  free_swap_cache_[k]
   410397939    0.03%       41  __mod_node_page_state_[k]
   400865673    0.03%       40  avl_remove?[zavl]_[k]
   400549073    0.03%       40  __cv_broadcast?[spl]_[k]
   390739396    0.03%       39  spl_kmem_cache_alloc?[spl]_[k]
   390528134    0.03%       39  AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<548964ul, G1BarrierSet>, (AccessInternal::BarrierType)2, 548964ul>::oop_access_barrier(void*)
   370298450    0.03%       37  wmsum_add?[zfs]_[k]
   370234855    0.03%       37  lockref_get_not_zero_[k]
   360252902    0.02%       36  nmethod::oops_do(OopClosure*, bool)
   360064323    0.02%       36  GreyObjectsWalker_walkGreyObjects_eb32754f646620dd6416e9c72990a79fa796f775
   350212056    0.02%       35  pmd_val_[k]
   340452891    0.02%       34  vdev_stat_update?[zfs]_[k]
   340268971    0.02%       34  arc_released?[zfs]_[k]
   340236781    0.02%       34  __memcpy_avx_unaligned
   340080589    0.02%       34  taskq_init_ent?[spl]_[k]
   340074500    0.02%       34  sun.nio.ch.NativeThreadSet.remove
   339870599    0.02%       34  __mod_memcg_lruvec_state_[k]
   330140598    0.02%       33  java.lang.Thread.blockedOn
   320537549    0.02%       32  new_sync_read_[k]
   320426212    0.02%       32  __list_add?[zfs]_[k]
   320315232    0.02%       32  consume_stock_[k]
   320248453    0.02%       32  zfs_rangelock_exit?[zfs]_[k]
   320171027    0.02%       32  zio_destroy?[zfs]_[k]
   320063411    0.02%       32  list_destroy?[zfs]_[k]
   310496512    0.02%       31  zfs_uiomove_iter?[zfs]_[k]
   310376833    0.02%       31  metaslab_trace_init?[zfs]_[k]
   310370219    0.02%       31  dbuf_include_in_metadata_cache?[zfs]_[k]
   310345384    0.02%       31  __mem_cgroup_charge_[k]
   309860529    0.02%       31  void G1RebuildRemSetClosure::do_oop_work<narrowOop>(narrowOop*)
   301103180    0.02%       30  __schedule_[k]
   300566786    0.02%       30  xas_start_[k]
   300542813    0.02%       30  sa_get_db?[zfs]_[k]
   300516727    0.02%       30  is_vmalloc_addr_[k]
   300360535    0.02%       30  spl_kmem_cache_free?[spl]_[k]
   290644419    0.02%       29  pthread_mutex_trylock@@GLIBC_2.34
   290486610    0.02%       29  arc_access?[zfs]_[k]
   290451208    0.02%       29  multilist_link_active?[zfs]_[k]
   290377067    0.02%       29  __x64_sys_pread64_[k]
   290298904    0.02%       29  java.util.zip.InflaterInputStream.ensureOpen
   290229362    0.02%       29  zio_execute_stack_check.constprop.0?[zfs]_[k]
   289996012    0.02%       29  sun.nio.ch.Util$BufferCache.get
   281721783    0.02%       28  futex_wake_[k]
   280509797    0.02%       28  fsnotify_[k]
   280411106    0.02%       28  page_counter_try_charge_[k]
   280340074    0.02%       28  memcg_slab_post_alloc_hook_[k]
   279988031    0.02%       28  G1ScanHRForRegionClosure::scan_heap_roots(HeapRegion*)
   270566969    0.02%       27  spa_indirect_vdevs_loaded?[zfs]_[k]
   270321046    0.02%       27  folio_add_lru_[k]
   270311464    0.02%       27  java.util.Arrays.copyOf
   270264044    0.02%       27  __mutex_lock.constprop.0_[k]
   270247365    0.02%       27  mem_cgroup_from_task_[k]
   260413829    0.02%       26  java.util.ArrayList.add
   260402089    0.02%       26  __check_object_size.part.0_[k]
   260376465    0.02%       26  rrm_exit?[zfs]_[k]
   260237507    0.02%       26  __pthread_self
   260218159    0.02%       26  RW_WRITE_HELD?[zfs]_[k]
   260142322    0.02%       26  __cv_destroy?[spl]_[k]
   260016325    0.02%       26  SpinPause
   259990336    0.02%       26  java.nio.Buffer.position
   250387308    0.02%       25  list_create.constprop.0?[zfs]_[k]
   250374838    0.02%       25  post_alloc_hook_[k]
   250363896    0.02%       25  zfs_rangelock_compare?[zfs]_[k]
   241377666    0.02%       24  [vdso]
   240535953    0.02%       24  G1FromCardCache::clear(unsigned int)
   240283911    0.02%       24  try_charge_memcg_[k]
   240005201    0.02%       24  G1CMTask::drain_local_queue(bool) [clone .part.0] [clone .constprop.1]
   239885435    0.02%       24  TaskTerminator::offer_termination(TerminatorTerminator*)
   238870204    0.02%       24  page_remove_rmap_[k]
   231082706    0.02%       23  __memmove_sse2_unaligned
   230228815    0.02%       23  dmu_objset_spa?[zfs]_[k]
   230057315    0.02%       23  Assembler::locate_operand(unsigned char*, Assembler::WhichOperand)
   230041547    0.02%       23  multilist_insert?[zfs]_[k]
   220402221    0.02%       22  __page_set_anon_rmap_[k]
   220358204    0.02%       22  rmqueue_[k]
   220268865    0.02%       22  memcg_slab_free_hook_[k]
   220247565    0.02%       22  SharedRuntime::on_slowpath_allocation_exit(JavaThread*)
   220221873    0.02%       22  arc_buf_freeze?[zfs]_[k]
   220188798    0.02%       22  list_remove_head?[zfs]_[k]
   219962178    0.02%       22  zio_inherit_child_errors?[zfs]_[k]
   210378653    0.01%       21  arc_is_encrypted?[zfs]_[k]
Async profiler results:
  profile/com.scalamandra.ZipBench.nioReadAllBytes-Throughput-fileName-over64kb.txt/summary-cpu.txt


# JMH version: 1.32
# VM version: JDK 17.0.6, Java HotSpot(TM) 64-Bit Server VM, 17.0.6+9-LTS-jvmci-22.3-b11
# VM invoker: /home/rajven/graal/java17/bin/java
# VM options: -XX:ThreadPriorityPolicy=1 -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCIProduct -XX:JVMCIThreadsPerNativeLibraryRuntime=1 -XX:-UnlockExperimentalVMOptions
# Blackhole mode: full + dont-inline hint
# Warmup: 20 iterations, 10 s each
# Measurement: 20 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.scalamandra.ZipBench.streamFoldChunks
# Parameters: (fileName = under64kb.txt)

# Run progress: 60,00% complete, ETA 00:26:58
# Fork: 1 of 1
# Preparing profilers: AsyncProfiler 
Java HotSpot(TM) 64-Bit Server VM warning: -XX:ThreadPriorityPolicy=1 may require system level permission, e.g., being the root user. If the necessary permission is not possessed, changes to priority will be silently ignored.
# Warmup Iteration   1: 1460,268 ops/s
# Warmup Iteration   2: 1737,982 ops/s
# Warmup Iteration   3: 1891,461 ops/s
# Warmup Iteration   4: 2009,412 ops/s
# Warmup Iteration   5: 2155,122 ops/s
# Warmup Iteration   6: 2114,580 ops/s
# Warmup Iteration   7: 2138,315 ops/s
# Warmup Iteration   8: 2195,146 ops/s
# Warmup Iteration   9: 2110,290 ops/s
# Warmup Iteration  10: 2163,896 ops/s
# Warmup Iteration  11: 2200,641 ops/s
# Warmup Iteration  12: 2148,502 ops/s
# Warmup Iteration  13: 2046,370 ops/s
# Warmup Iteration  14: 2214,042 ops/s
# Warmup Iteration  15: 2257,021 ops/s
# Warmup Iteration  16: 2215,171 ops/s
# Warmup Iteration  17: 2251,876 ops/s
# Warmup Iteration  18: 2269,901 ops/s
# Warmup Iteration  19: 2199,872 ops/s
# Warmup Iteration  20: 2199,286 ops/s
Iteration   1: 2189,886 ops/s
Iteration   2: 2149,454 ops/s
Iteration   3: 2197,182 ops/s
Iteration   4: 2177,727 ops/s
Iteration   5: 2140,885 ops/s
Iteration   6: 2172,540 ops/s
Iteration   7: 2211,499 ops/s
Iteration   8: 2201,887 ops/s
Iteration   9: 2234,575 ops/s
Iteration  10: 2211,657 ops/s
Iteration  11: 2208,066 ops/s
Iteration  12: 2205,209 ops/s
Iteration  13: 2129,694 ops/s
Iteration  14: 2206,743 ops/s
Iteration  15: 2186,007 ops/s
Iteration  16: 2157,690 ops/s
Iteration  17: 2141,561 ops/s
Iteration  18: 2153,922 ops/s
Iteration  19: 2139,928 ops/s
Iteration  20: [WARN] Unknown argument: summary
2132,473 ops/s
                 ·async: (text only)

# Processing profiler results: AsyncProfiler 


Result "com.scalamandra.ZipBench.streamFoldChunks":
  2177,429 ±(99.9%) 27,791 ops/s [Average]
  (min, avg, max) = (2129,694, 2177,429, 2234,575), stdev = 32,004
  CI (99.9%): [2149,638, 2205,221] (assumes normal distribution)

Secondary result "com.scalamandra.ZipBench.streamFoldChunks:·async":
--- Execution profile ---
Total samples       : 72700
GC_active           : 69 (0.09%)
unknown_Java        : 735 (1.01%)

--- 52661741922 ns (7.22%), 5255 samples
  [ 0] /usr/lib/x86_64-linux-gnu/libz.so.1.2.11
  [ 1] java.util.zip.Inflater.inflateBytesBytes
  [ 2] java.util.zip.Inflater.inflate
  [ 3] java.util.zip.InflaterInputStream.read
  [ 4] java.io.InputStream.transferTo
  [ 5] java.nio.file.Files.copy
  [ 6] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [ 7] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [ 8] jdk.nio.zipfs.ZipPath.newFileChannel
  [ 9] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [10] java.nio.channels.FileChannel.open
  [11] java.nio.channels.FileChannel.open
  [12] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [13] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d8b0f0.apply
  [14] cats.effect.IOFiber.$anonfun$8
  [15] cats.effect.IOFiber$$Lambda$703.0x0000000800eb2fc8.apply
  [16] cats.effect.unsafe.WorkerThread.blockOn
  [17] scala.concurrent.package$.blocking
  [18] cats.effect.IOFiber.runLoop
  [19] cats.effect.IOFiber.execR
  [20] cats.effect.IOFiber.run
  [21] cats.effect.unsafe.WorkerThread.run

--- 30301197597 ns (4.16%), 3025 samples
  [ 0] /usr/lib/x86_64-linux-gnu/libz.so.1.2.11
  [ 1] [unknown]
  [ 2] java.util.zip.Inflater.inflateBytesBytes
  [ 3] java.util.zip.Inflater.inflate
  [ 4] java.util.zip.InflaterInputStream.read
  [ 5] java.io.InputStream.transferTo
  [ 6] java.nio.file.Files.copy
  [ 7] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [ 8] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [ 9] jdk.nio.zipfs.ZipPath.newFileChannel
  [10] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [11] java.nio.channels.FileChannel.open
  [12] java.nio.channels.FileChannel.open
  [13] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [14] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d8b0f0.apply
  [15] cats.effect.IOFiber.$anonfun$8
  [16] cats.effect.IOFiber$$Lambda$703.0x0000000800eb2fc8.apply
  [17] cats.effect.unsafe.WorkerThread.blockOn
  [18] scala.concurrent.package$.blocking
  [19] cats.effect.IOFiber.runLoop
  [20] cats.effect.IOFiber.execR
  [21] cats.effect.IOFiber.run
  [22] cats.effect.unsafe.WorkerThread.run

--- 27882574424 ns (3.82%), 2783 samples
  [ 0] /usr/lib/x86_64-linux-gnu/libz.so.1.2.11
  [ 1] java.util.zip.Inflater.inflateBytesBytes
  [ 2] java.util.zip.Inflater.inflate
  [ 3] java.util.zip.InflaterInputStream.read
  [ 4] java.io.InputStream.transferTo
  [ 5] java.nio.file.Files.copy
  [ 6] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [ 7] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [ 8] jdk.nio.zipfs.ZipPath.newFileChannel
  [ 9] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [10] java.nio.channels.FileChannel.open
  [11] java.nio.channels.FileChannel.open
  [12] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [13] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d8b0f0.apply
  [14] cats.effect.IOFiber.$anonfun$8
  [15] cats.effect.IOFiber$$Lambda$703.0x0000000800eb2fc8.apply
  [16] cats.effect.unsafe.WorkerThread.blockOn
  [17] scala.concurrent.package$.blocking
  [18] cats.effect.IOFiber.runLoop
  [19] cats.effect.IOFiber.execR
  [20] cats.effect.IOFiber.run
  [21] cats.effect.unsafe.WorkerThread.run

--- 16285399212 ns (2.23%), 1626 samples
  [ 0] /usr/lib/x86_64-linux-gnu/libz.so.1.2.11
  [ 1] [unknown]
  [ 2] java.util.zip.Inflater.inflateBytesBytes
  [ 3] java.util.zip.Inflater.inflate
  [ 4] java.util.zip.InflaterInputStream.read
  [ 5] java.io.InputStream.transferTo
  [ 6] java.nio.file.Files.copy
  [ 7] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [ 8] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [ 9] jdk.nio.zipfs.ZipPath.newFileChannel
  [10] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [11] java.nio.channels.FileChannel.open
  [12] java.nio.channels.FileChannel.open
  [13] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [14] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d8b0f0.apply
  [15] cats.effect.IOFiber.$anonfun$8
  [16] cats.effect.IOFiber$$Lambda$703.0x0000000800eb2fc8.apply
  [17] cats.effect.unsafe.WorkerThread.blockOn
  [18] scala.concurrent.package$.blocking
  [19] cats.effect.IOFiber.runLoop
  [20] cats.effect.IOFiber.execR
  [21] cats.effect.IOFiber.run
  [22] cats.effect.unsafe.WorkerThread.run

--- 10034161860 ns (1.38%), 1001 samples
  [ 0] rwsem_spin_on_owner_[k]
  [ 1] rwsem_optimistic_spin_[k]
  [ 2] rwsem_down_write_slowpath_[k]
  [ 3] down_write_[k]
  [ 4] do_unlinkat_[k]
  [ 5] __x64_sys_unlink_[k]
  [ 6] do_syscall_64_[k]
  [ 7] entry_SYSCALL_64_after_hwframe_[k]
  [ 8] __GI_unlink
  [ 9] sun.nio.fs.UnixNativeDispatcher.unlink0
  [10] sun.nio.fs.UnixNativeDispatcher.unlink
  [11] sun.nio.fs.UnixFileSystemProvider.implDelete
  [12] sun.nio.fs.AbstractFileSystemProvider.deleteIfExists
  [13] java.nio.file.Files.deleteIfExists
  [14] java.nio.file.Files.copy
  [15] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [16] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [17] jdk.nio.zipfs.ZipPath.newFileChannel
  [18] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [19] java.nio.channels.FileChannel.open
  [20] java.nio.channels.FileChannel.open
  [21] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [22] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d8b0f0.apply
  [23] cats.effect.IOFiber.$anonfun$8
  [24] cats.effect.IOFiber$$Lambda$703.0x0000000800eb2fc8.apply
  [25] cats.effect.unsafe.WorkerThread.blockOn
  [26] scala.concurrent.package$.blocking
  [27] cats.effect.IOFiber.runLoop
  [28] cats.effect.IOFiber.execR
  [29] cats.effect.IOFiber.run
  [30] cats.effect.unsafe.WorkerThread.run

--- 8984266146 ns (1.23%), 896 samples
  [ 0] _raw_spin_unlock_irqrestore_[k]
  [ 1] __wake_up_common_lock_[k]
  [ 2] __wake_up_[k]
  [ 3] fsnotify_insert_event_[k]
  [ 4] inotify_handle_inode_event_[k]
  [ 5] fsnotify_handle_inode_event.isra.0_[k]
  [ 6] send_to_group_[k]
  [ 7] fsnotify_[k]
  [ 8] __fsnotify_parent_[k]
  [ 9] vfs_write_[k]
  [10] ksys_write_[k]
  [11] __x64_sys_write_[k]
  [12] do_syscall_64_[k]
  [13] entry_SYSCALL_64_after_hwframe_[k]
  [14] write
  [15] sun.nio.ch.FileDispatcherImpl.write0
  [16] sun.nio.ch.FileDispatcherImpl.write
  [17] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.IOUtil.write
  [20] sun.nio.ch.FileChannelImpl.write
  [21] java.nio.channels.Channels.writeFullyImpl
  [22] java.nio.channels.Channels.writeFully
  [23] java.nio.channels.Channels$1.write
  [24] java.io.InputStream.transferTo
  [25] java.nio.file.Files.copy
  [26] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [27] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [28] jdk.nio.zipfs.ZipPath.newFileChannel
  [29] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [30] java.nio.channels.FileChannel.open
  [31] java.nio.channels.FileChannel.open
  [32] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [33] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d8b0f0.apply
  [34] cats.effect.IOFiber.$anonfun$8
  [35] cats.effect.IOFiber$$Lambda$703.0x0000000800eb2fc8.apply
  [36] cats.effect.unsafe.WorkerThread.blockOn
  [37] scala.concurrent.package$.blocking
  [38] cats.effect.IOFiber.runLoop
  [39] cats.effect.IOFiber.execR
  [40] cats.effect.IOFiber.run
  [41] cats.effect.unsafe.WorkerThread.run

--- 8638103906 ns (1.18%), 862 samples
  [ 0] rwsem_spin_on_owner_[k]
  [ 1] rwsem_optimistic_spin_[k]
  [ 2] rwsem_down_write_slowpath_[k]
  [ 3] down_write_[k]
  [ 4] open_last_lookups_[k]
  [ 5] path_openat_[k]
  [ 6] do_filp_open_[k]
  [ 7] do_sys_openat2_[k]
  [ 8] __x64_sys_openat_[k]
  [ 9] do_syscall_64_[k]
  [10] entry_SYSCALL_64_after_hwframe_[k]
  [11] __open64
  [12] [unknown]
  [13] sun.nio.fs.UnixNativeDispatcher.open0
  [14] sun.nio.fs.UnixNativeDispatcher.open
  [15] sun.nio.fs.UnixChannelFactory.open
  [16] sun.nio.fs.UnixChannelFactory.newFileChannel
  [17] sun.nio.fs.UnixChannelFactory.newFileChannel
  [18] sun.nio.fs.UnixFileSystemProvider.newByteChannel
  [19] java.nio.file.spi.FileSystemProvider.newOutputStream
  [20] java.nio.file.Files.newOutputStream
  [21] java.nio.file.Files.copy
  [22] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [23] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [24] jdk.nio.zipfs.ZipPath.newFileChannel
  [25] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [26] java.nio.channels.FileChannel.open
  [27] java.nio.channels.FileChannel.open
  [28] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [29] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d8b0f0.apply
  [30] cats.effect.IOFiber.$anonfun$8
  [31] cats.effect.IOFiber$$Lambda$703.0x0000000800eb2fc8.apply
  [32] cats.effect.unsafe.WorkerThread.blockOn
  [33] scala.concurrent.package$.blocking
  [34] cats.effect.IOFiber.runLoop
  [35] cats.effect.IOFiber.execR
  [36] cats.effect.IOFiber.run
  [37] cats.effect.unsafe.WorkerThread.run

--- 7366965426 ns (1.01%), 735 samples
  [ 0] rwsem_spin_on_owner_[k]
  [ 1] rwsem_optimistic_spin_[k]
  [ 2] rwsem_down_write_slowpath_[k]
  [ 3] down_write_[k]
  [ 4] do_unlinkat_[k]
  [ 5] __x64_sys_unlink_[k]
  [ 6] do_syscall_64_[k]
  [ 7] entry_SYSCALL_64_after_hwframe_[k]
  [ 8] __GI_unlink
  [ 9] sun.nio.fs.UnixNativeDispatcher.unlink0
  [10] sun.nio.fs.UnixNativeDispatcher.unlink
  [11] sun.nio.fs.UnixFileSystemProvider.implDelete
  [12] sun.nio.fs.AbstractFileSystemProvider.delete
  [13] java.nio.file.Files.delete
  [14] jdk.nio.zipfs.ZipFileSystem.removeTempPathForEntry
  [15] jdk.nio.zipfs.ZipFileSystem$1.implCloseChannel
  [16] java.nio.channels.spi.AbstractInterruptibleChannel.close
  [17] fs2.io.file.FilesCompanionPlatform.openFileChannel$$anonfun$1$$anonfun$1
  [18] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$openFileChannel$$anonfun$1$$anonfun$adapted$1
  [19] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$719.0x0000000800eb4828.apply
  [20] cats.effect.IOFiber.$anonfun$8
  [21] cats.effect.IOFiber$$Lambda$703.0x0000000800eb2fc8.apply
  [22] cats.effect.unsafe.WorkerThread.blockOn
  [23] scala.concurrent.package$.blocking
  [24] cats.effect.IOFiber.runLoop
  [25] cats.effect.IOFiber.execR
  [26] cats.effect.IOFiber.run
  [27] cats.effect.unsafe.WorkerThread.run

--- 7345970417 ns (1.01%), 733 samples
  [ 0] rwsem_spin_on_owner_[k]
  [ 1] rwsem_optimistic_spin_[k]
  [ 2] rwsem_down_write_slowpath_[k]
  [ 3] down_write_[k]
  [ 4] open_last_lookups_[k]
  [ 5] path_openat_[k]
  [ 6] do_filp_open_[k]
  [ 7] do_sys_openat2_[k]
  [ 8] __x64_sys_openat_[k]
  [ 9] do_syscall_64_[k]
  [10] entry_SYSCALL_64_after_hwframe_[k]
  [11] __open64
  [12] [unknown]
  [13] sun.nio.fs.UnixNativeDispatcher.open0
  [14] sun.nio.fs.UnixNativeDispatcher.open
  [15] sun.nio.fs.UnixChannelFactory.open
  [16] sun.nio.fs.UnixChannelFactory.newFileChannel
  [17] sun.nio.fs.UnixChannelFactory.newFileChannel
  [18] sun.nio.fs.UnixFileSystemProvider.newByteChannel
  [19] java.nio.file.Files.newByteChannel
  [20] java.nio.file.Files.createFile
  [21] java.nio.file.TempFileHelper.create
  [22] java.nio.file.TempFileHelper.createTempFile
  [23] java.nio.file.Files.createTempFile
  [24] jdk.nio.zipfs.ZipFileSystem.createTempFileInSameDirectoryAs
  [25] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [26] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [27] jdk.nio.zipfs.ZipPath.newFileChannel
  [28] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [29] java.nio.channels.FileChannel.open
  [30] java.nio.channels.FileChannel.open
  [31] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [32] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d8b0f0.apply
  [33] cats.effect.IOFiber.$anonfun$8
  [34] cats.effect.IOFiber$$Lambda$703.0x0000000800eb2fc8.apply
  [35] cats.effect.unsafe.WorkerThread.blockOn
  [36] scala.concurrent.package$.blocking
  [37] cats.effect.IOFiber.runLoop
  [38] cats.effect.IOFiber.execR
  [39] cats.effect.IOFiber.run
  [40] cats.effect.unsafe.WorkerThread.run

--- 6679035161 ns (0.92%), 666 samples
  [ 0] memmove_[k]
  [ 1] dnode_set_blksz?[zfs]_[k]
  [ 2] dmu_object_set_blocksize?[zfs]_[k]
  [ 3] zfs_grow_blocksize?[zfs]_[k]
  [ 4] zfs_write?[zfs]_[k]
  [ 5] zpl_iter_write?[zfs]_[k]
  [ 6] new_sync_write_[k]
  [ 7] vfs_write_[k]
  [ 8] ksys_write_[k]
  [ 9] __x64_sys_write_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] write
  [13] sun.nio.ch.FileDispatcherImpl.write0
  [14] sun.nio.ch.FileDispatcherImpl.write
  [15] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [16] sun.nio.ch.IOUtil.write
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.FileChannelImpl.write
  [19] java.nio.channels.Channels.writeFullyImpl
  [20] java.nio.channels.Channels.writeFully
  [21] java.nio.channels.Channels$1.write
  [22] java.io.InputStream.transferTo
  [23] java.nio.file.Files.copy
  [24] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [25] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [26] jdk.nio.zipfs.ZipPath.newFileChannel
  [27] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [28] java.nio.channels.FileChannel.open
  [29] java.nio.channels.FileChannel.open
  [30] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [31] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d8b0f0.apply
  [32] cats.effect.IOFiber.$anonfun$8
  [33] cats.effect.IOFiber$$Lambda$703.0x0000000800eb2fc8.apply
  [34] cats.effect.unsafe.WorkerThread.blockOn
  [35] scala.concurrent.package$.blocking
  [36] cats.effect.IOFiber.runLoop
  [37] cats.effect.IOFiber.execR
  [38] cats.effect.IOFiber.run
  [39] cats.effect.unsafe.WorkerThread.run

--- 5481898346 ns (0.75%), 547 samples
  [ 0] osq_lock_[k]
  [ 1] rwsem_optimistic_spin_[k]
  [ 2] rwsem_down_write_slowpath_[k]
  [ 3] down_write_[k]
  [ 4] do_unlinkat_[k]
  [ 5] __x64_sys_unlink_[k]
  [ 6] do_syscall_64_[k]
  [ 7] entry_SYSCALL_64_after_hwframe_[k]
  [ 8] __GI_unlink
  [ 9] sun.nio.fs.UnixNativeDispatcher.unlink0
  [10] sun.nio.fs.UnixNativeDispatcher.unlink
  [11] sun.nio.fs.UnixFileSystemProvider.implDelete
  [12] sun.nio.fs.AbstractFileSystemProvider.deleteIfExists
  [13] java.nio.file.Files.deleteIfExists
  [14] java.nio.file.Files.copy
  [15] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [16] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [17] jdk.nio.zipfs.ZipPath.newFileChannel
  [18] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [19] java.nio.channels.FileChannel.open
  [20] java.nio.channels.FileChannel.open
  [21] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [22] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d8b0f0.apply
  [23] cats.effect.IOFiber.$anonfun$8
  [24] cats.effect.IOFiber$$Lambda$703.0x0000000800eb2fc8.apply
  [25] cats.effect.unsafe.WorkerThread.blockOn
  [26] scala.concurrent.package$.blocking
  [27] cats.effect.IOFiber.runLoop
  [28] cats.effect.IOFiber.execR
  [29] cats.effect.IOFiber.run
  [30] cats.effect.unsafe.WorkerThread.run

--- 5111297540 ns (0.70%), 510 samples
  [ 0] rwsem_spin_on_owner_[k]
  [ 1] rwsem_optimistic_spin_[k]
  [ 2] rwsem_down_write_slowpath_[k]
  [ 3] down_write_[k]
  [ 4] do_unlinkat_[k]
  [ 5] __x64_sys_unlink_[k]
  [ 6] do_syscall_64_[k]
  [ 7] entry_SYSCALL_64_after_hwframe_[k]
  [ 8] __GI_unlink
  [ 9] sun.nio.fs.UnixNativeDispatcher.unlink0
  [10] sun.nio.fs.UnixNativeDispatcher.unlink
  [11] sun.nio.fs.UnixFileSystemProvider.implDelete
  [12] sun.nio.fs.AbstractFileSystemProvider.deleteIfExists
  [13] java.nio.file.Files.deleteIfExists
  [14] java.nio.file.Files.copy
  [15] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [16] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [17] jdk.nio.zipfs.ZipPath.newFileChannel
  [18] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [19] java.nio.channels.FileChannel.open
  [20] java.nio.channels.FileChannel.open
  [21] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [22] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d8b0f0.apply
  [23] cats.effect.IOFiber.$anonfun$8
  [24] cats.effect.IOFiber$$Lambda$703.0x0000000800eb2fc8.apply
  [25] cats.effect.unsafe.WorkerThread.blockOn
  [26] scala.concurrent.package$.blocking
  [27] cats.effect.IOFiber.runLoop
  [28] cats.effect.IOFiber.execR
  [29] cats.effect.IOFiber.run
  [30] cats.effect.unsafe.WorkerThread.run

--- 5109368224 ns (0.70%), 510 samples
  [ 0] rwsem_spin_on_owner_[k]
  [ 1] rwsem_optimistic_spin_[k]
  [ 2] rwsem_down_write_slowpath_[k]
  [ 3] down_write_[k]
  [ 4] open_last_lookups_[k]
  [ 5] path_openat_[k]
  [ 6] do_filp_open_[k]
  [ 7] do_sys_openat2_[k]
  [ 8] __x64_sys_openat_[k]
  [ 9] do_syscall_64_[k]
  [10] entry_SYSCALL_64_after_hwframe_[k]
  [11] __open64
  [12] [unknown]
  [13] sun.nio.fs.UnixNativeDispatcher.open0
  [14] sun.nio.fs.UnixNativeDispatcher.open
  [15] sun.nio.fs.UnixChannelFactory.open
  [16] sun.nio.fs.UnixChannelFactory.newFileChannel
  [17] sun.nio.fs.UnixChannelFactory.newFileChannel
  [18] sun.nio.fs.UnixFileSystemProvider.newByteChannel
  [19] java.nio.file.Files.newByteChannel
  [20] java.nio.file.Files.createFile
  [21] java.nio.file.TempFileHelper.create
  [22] java.nio.file.TempFileHelper.createTempFile
  [23] java.nio.file.Files.createTempFile
  [24] jdk.nio.zipfs.ZipFileSystem.createTempFileInSameDirectoryAs
  [25] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [26] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [27] jdk.nio.zipfs.ZipPath.newFileChannel
  [28] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [29] java.nio.channels.FileChannel.open
  [30] java.nio.channels.FileChannel.open
  [31] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [32] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d8b0f0.apply
  [33] cats.effect.IOFiber.$anonfun$8
  [34] cats.effect.IOFiber$$Lambda$703.0x0000000800eb2fc8.apply
  [35] cats.effect.unsafe.WorkerThread.blockOn
  [36] scala.concurrent.package$.blocking
  [37] cats.effect.IOFiber.runLoop
  [38] cats.effect.IOFiber.execR
  [39] cats.effect.IOFiber.run
  [40] cats.effect.unsafe.WorkerThread.run

--- 5032550831 ns (0.69%), 502 samples
  [ 0] _raw_spin_unlock_irqrestore_[k]
  [ 1] __wake_up_common_lock_[k]
  [ 2] __wake_up_[k]
  [ 3] fsnotify_insert_event_[k]
  [ 4] inotify_handle_inode_event_[k]
  [ 5] fsnotify_handle_inode_event.isra.0_[k]
  [ 6] send_to_group_[k]
  [ 7] fsnotify_[k]
  [ 8] __fsnotify_parent_[k]
  [ 9] vfs_write_[k]
  [10] ksys_write_[k]
  [11] __x64_sys_write_[k]
  [12] do_syscall_64_[k]
  [13] entry_SYSCALL_64_after_hwframe_[k]
  [14] write
  [15] sun.nio.ch.FileDispatcherImpl.write0
  [16] sun.nio.ch.FileDispatcherImpl.write
  [17] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.IOUtil.write
  [20] sun.nio.ch.FileChannelImpl.write
  [21] java.nio.channels.Channels.writeFullyImpl
  [22] java.nio.channels.Channels.writeFully
  [23] java.nio.channels.Channels$1.write
  [24] java.io.InputStream.transferTo
  [25] java.nio.file.Files.copy
  [26] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [27] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [28] jdk.nio.zipfs.ZipPath.newFileChannel
  [29] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [30] java.nio.channels.FileChannel.open
  [31] java.nio.channels.FileChannel.open
  [32] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [33] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d8b0f0.apply
  [34] cats.effect.IOFiber.$anonfun$8
  [35] cats.effect.IOFiber$$Lambda$703.0x0000000800eb2fc8.apply
  [36] cats.effect.unsafe.WorkerThread.blockOn
  [37] scala.concurrent.package$.blocking
  [38] cats.effect.IOFiber.runLoop
  [39] cats.effect.IOFiber.execR
  [40] cats.effect.IOFiber.run
  [41] cats.effect.unsafe.WorkerThread.run

--- 4980874495 ns (0.68%), 497 samples
  [ 0] inflate
  [ 1] java.util.zip.Inflater.inflateBytesBytes
  [ 2] java.util.zip.Inflater.inflate
  [ 3] java.util.zip.InflaterInputStream.read
  [ 4] java.io.InputStream.transferTo
  [ 5] java.nio.file.Files.copy
  [ 6] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [ 7] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [ 8] jdk.nio.zipfs.ZipPath.newFileChannel
  [ 9] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [10] java.nio.channels.FileChannel.open
  [11] java.nio.channels.FileChannel.open
  [12] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [13] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d8b0f0.apply
  [14] cats.effect.IOFiber.$anonfun$8
  [15] cats.effect.IOFiber$$Lambda$703.0x0000000800eb2fc8.apply
  [16] cats.effect.unsafe.WorkerThread.blockOn
  [17] scala.concurrent.package$.blocking
  [18] cats.effect.IOFiber.runLoop
  [19] cats.effect.IOFiber.execR
  [20] cats.effect.IOFiber.run
  [21] cats.effect.unsafe.WorkerThread.run

--- 4899081651 ns (0.67%), 489 samples
  [ 0] rwsem_spin_on_owner_[k]
  [ 1] rwsem_optimistic_spin_[k]
  [ 2] rwsem_down_write_slowpath_[k]
  [ 3] down_write_[k]
  [ 4] open_last_lookups_[k]
  [ 5] path_openat_[k]
  [ 6] do_filp_open_[k]
  [ 7] do_sys_openat2_[k]
  [ 8] __x64_sys_openat_[k]
  [ 9] do_syscall_64_[k]
  [10] entry_SYSCALL_64_after_hwframe_[k]
  [11] __open64
  [12] [unknown]
  [13] sun.nio.fs.UnixNativeDispatcher.open0
  [14] sun.nio.fs.UnixNativeDispatcher.open
  [15] sun.nio.fs.UnixChannelFactory.open
  [16] sun.nio.fs.UnixChannelFactory.newFileChannel
  [17] sun.nio.fs.UnixChannelFactory.newFileChannel
  [18] sun.nio.fs.UnixFileSystemProvider.newByteChannel
  [19] java.nio.file.spi.FileSystemProvider.newOutputStream
  [20] java.nio.file.Files.newOutputStream
  [21] java.nio.file.Files.copy
  [22] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [23] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [24] jdk.nio.zipfs.ZipPath.newFileChannel
  [25] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [26] java.nio.channels.FileChannel.open
  [27] java.nio.channels.FileChannel.open
  [28] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [29] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d8b0f0.apply
  [30] cats.effect.IOFiber.$anonfun$8
  [31] cats.effect.IOFiber$$Lambda$703.0x0000000800eb2fc8.apply
  [32] cats.effect.unsafe.WorkerThread.blockOn
  [33] scala.concurrent.package$.blocking
  [34] cats.effect.IOFiber.runLoop
  [35] cats.effect.IOFiber.execR
  [36] cats.effect.IOFiber.run
  [37] cats.effect.unsafe.WorkerThread.run

--- 4578755988 ns (0.63%), 457 samples
  [ 0] osq_lock_[k]
  [ 1] rwsem_optimistic_spin_[k]
  [ 2] rwsem_down_write_slowpath_[k]
  [ 3] down_write_[k]
  [ 4] open_last_lookups_[k]
  [ 5] path_openat_[k]
  [ 6] do_filp_open_[k]
  [ 7] do_sys_openat2_[k]
  [ 8] __x64_sys_openat_[k]
  [ 9] do_syscall_64_[k]
  [10] entry_SYSCALL_64_after_hwframe_[k]
  [11] __open64
  [12] [unknown]
  [13] sun.nio.fs.UnixNativeDispatcher.open0
  [14] sun.nio.fs.UnixNativeDispatcher.open
  [15] sun.nio.fs.UnixChannelFactory.open
  [16] sun.nio.fs.UnixChannelFactory.newFileChannel
  [17] sun.nio.fs.UnixChannelFactory.newFileChannel
  [18] sun.nio.fs.UnixFileSystemProvider.newByteChannel
  [19] java.nio.file.spi.FileSystemProvider.newOutputStream
  [20] java.nio.file.Files.newOutputStream
  [21] java.nio.file.Files.copy
  [22] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [23] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [24] jdk.nio.zipfs.ZipPath.newFileChannel
  [25] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [26] java.nio.channels.FileChannel.open
  [27] java.nio.channels.FileChannel.open
  [28] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [29] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d8b0f0.apply
  [30] cats.effect.IOFiber.$anonfun$8
  [31] cats.effect.IOFiber$$Lambda$703.0x0000000800eb2fc8.apply
  [32] cats.effect.unsafe.WorkerThread.blockOn
  [33] scala.concurrent.package$.blocking
  [34] cats.effect.IOFiber.runLoop
  [35] cats.effect.IOFiber.execR
  [36] cats.effect.IOFiber.run
  [37] cats.effect.unsafe.WorkerThread.run

--- 4358733858 ns (0.60%), 435 samples
  [ 0] osq_lock_[k]
  [ 1] rwsem_optimistic_spin_[k]
  [ 2] rwsem_down_write_slowpath_[k]
  [ 3] down_write_[k]
  [ 4] do_unlinkat_[k]
  [ 5] __x64_sys_unlink_[k]
  [ 6] do_syscall_64_[k]
  [ 7] entry_SYSCALL_64_after_hwframe_[k]
  [ 8] __GI_unlink
  [ 9] sun.nio.fs.UnixNativeDispatcher.unlink0
  [10] sun.nio.fs.UnixNativeDispatcher.unlink
  [11] sun.nio.fs.UnixFileSystemProvider.implDelete
  [12] sun.nio.fs.AbstractFileSystemProvider.deleteIfExists
  [13] java.nio.file.Files.deleteIfExists
  [14] java.nio.file.Files.copy
  [15] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [16] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [17] jdk.nio.zipfs.ZipPath.newFileChannel
  [18] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [19] java.nio.channels.FileChannel.open
  [20] java.nio.channels.FileChannel.open
  [21] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [22] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d8b0f0.apply
  [23] cats.effect.IOFiber.$anonfun$8
  [24] cats.effect.IOFiber$$Lambda$703.0x0000000800eb2fc8.apply
  [25] cats.effect.unsafe.WorkerThread.blockOn
  [26] scala.concurrent.package$.blocking
  [27] cats.effect.IOFiber.runLoop
  [28] cats.effect.IOFiber.execR
  [29] cats.effect.IOFiber.run
  [30] cats.effect.unsafe.WorkerThread.run

--- 4078498878 ns (0.56%), 407 samples
  [ 0] rwsem_spin_on_owner_[k]
  [ 1] rwsem_optimistic_spin_[k]
  [ 2] rwsem_down_write_slowpath_[k]
  [ 3] down_write_[k]
  [ 4] do_unlinkat_[k]
  [ 5] __x64_sys_unlink_[k]
  [ 6] do_syscall_64_[k]
  [ 7] entry_SYSCALL_64_after_hwframe_[k]
  [ 8] __GI_unlink
  [ 9] sun.nio.fs.UnixNativeDispatcher.unlink0
  [10] sun.nio.fs.UnixNativeDispatcher.unlink
  [11] sun.nio.fs.UnixFileSystemProvider.implDelete
  [12] sun.nio.fs.AbstractFileSystemProvider.delete
  [13] java.nio.file.Files.delete
  [14] jdk.nio.zipfs.ZipFileSystem.removeTempPathForEntry
  [15] jdk.nio.zipfs.ZipFileSystem$1.implCloseChannel
  [16] java.nio.channels.spi.AbstractInterruptibleChannel.close
  [17] fs2.io.file.FilesCompanionPlatform.openFileChannel$$anonfun$1$$anonfun$1
  [18] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$openFileChannel$$anonfun$1$$anonfun$adapted$1
  [19] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$719.0x0000000800eb4828.apply
  [20] cats.effect.IOFiber.$anonfun$8
  [21] cats.effect.IOFiber$$Lambda$703.0x0000000800eb2fc8.apply
  [22] cats.effect.unsafe.WorkerThread.blockOn
  [23] scala.concurrent.package$.blocking
  [24] cats.effect.IOFiber.runLoop
  [25] cats.effect.IOFiber.execR
  [26] cats.effect.IOFiber.run
  [27] cats.effect.unsafe.WorkerThread.run

--- 3769211028 ns (0.52%), 376 samples
  [ 0] memmove_[k]
  [ 1] dnode_set_blksz?[zfs]_[k]
  [ 2] dmu_object_set_blocksize?[zfs]_[k]
  [ 3] zfs_grow_blocksize?[zfs]_[k]
  [ 4] zfs_write?[zfs]_[k]
  [ 5] zpl_iter_write?[zfs]_[k]
  [ 6] new_sync_write_[k]
  [ 7] vfs_write_[k]
  [ 8] ksys_write_[k]
  [ 9] __x64_sys_write_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] write
  [13] sun.nio.ch.FileDispatcherImpl.write0
  [14] sun.nio.ch.FileDispatcherImpl.write
  [15] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [16] sun.nio.ch.IOUtil.write
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.FileChannelImpl.write
  [19] java.nio.channels.Channels.writeFullyImpl
  [20] java.nio.channels.Channels.writeFully
  [21] java.nio.channels.Channels$1.write
  [22] java.io.InputStream.transferTo
  [23] java.nio.file.Files.copy
  [24] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [25] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [26] jdk.nio.zipfs.ZipPath.newFileChannel
  [27] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [28] java.nio.channels.FileChannel.open
  [29] java.nio.channels.FileChannel.open
  [30] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [31] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d8b0f0.apply
  [32] cats.effect.IOFiber.$anonfun$8
  [33] cats.effect.IOFiber$$Lambda$703.0x0000000800eb2fc8.apply
  [34] cats.effect.unsafe.WorkerThread.blockOn
  [35] scala.concurrent.package$.blocking
  [36] cats.effect.IOFiber.runLoop
  [37] cats.effect.IOFiber.execR
  [38] cats.effect.IOFiber.run
  [39] cats.effect.unsafe.WorkerThread.run

--- 3597222555 ns (0.49%), 359 samples
  [ 0] osq_lock_[k]
  [ 1] rwsem_optimistic_spin_[k]
  [ 2] rwsem_down_write_slowpath_[k]
  [ 3] down_write_[k]
  [ 4] open_last_lookups_[k]
  [ 5] path_openat_[k]
  [ 6] do_filp_open_[k]
  [ 7] do_sys_openat2_[k]
  [ 8] __x64_sys_openat_[k]
  [ 9] do_syscall_64_[k]
  [10] entry_SYSCALL_64_after_hwframe_[k]
  [11] __open64
  [12] [unknown]
  [13] sun.nio.fs.UnixNativeDispatcher.open0
  [14] sun.nio.fs.UnixNativeDispatcher.open
  [15] sun.nio.fs.UnixChannelFactory.open
  [16] sun.nio.fs.UnixChannelFactory.newFileChannel
  [17] sun.nio.fs.UnixChannelFactory.newFileChannel
  [18] sun.nio.fs.UnixFileSystemProvider.newByteChannel
  [19] java.nio.file.Files.newByteChannel
  [20] java.nio.file.Files.createFile
  [21] java.nio.file.TempFileHelper.create
  [22] java.nio.file.TempFileHelper.createTempFile
  [23] java.nio.file.Files.createTempFile
  [24] jdk.nio.zipfs.ZipFileSystem.createTempFileInSameDirectoryAs
  [25] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [26] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [27] jdk.nio.zipfs.ZipPath.newFileChannel
  [28] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [29] java.nio.channels.FileChannel.open
  [30] java.nio.channels.FileChannel.open
  [31] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [32] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d8b0f0.apply
  [33] cats.effect.IOFiber.$anonfun$8
  [34] cats.effect.IOFiber$$Lambda$703.0x0000000800eb2fc8.apply
  [35] cats.effect.unsafe.WorkerThread.blockOn
  [36] scala.concurrent.package$.blocking
  [37] cats.effect.IOFiber.runLoop
  [38] cats.effect.IOFiber.execR
  [39] cats.effect.IOFiber.run
  [40] cats.effect.unsafe.WorkerThread.run

--- 3507488052 ns (0.48%), 350 samples
  [ 0] osq_lock_[k]
  [ 1] rwsem_optimistic_spin_[k]
  [ 2] rwsem_down_write_slowpath_[k]
  [ 3] down_write_[k]
  [ 4] do_unlinkat_[k]
  [ 5] __x64_sys_unlink_[k]
  [ 6] do_syscall_64_[k]
  [ 7] entry_SYSCALL_64_after_hwframe_[k]
  [ 8] __GI_unlink
  [ 9] sun.nio.fs.UnixNativeDispatcher.unlink0
  [10] sun.nio.fs.UnixNativeDispatcher.unlink
  [11] sun.nio.fs.UnixFileSystemProvider.implDelete
  [12] sun.nio.fs.AbstractFileSystemProvider.delete
  [13] java.nio.file.Files.delete
  [14] jdk.nio.zipfs.ZipFileSystem.removeTempPathForEntry
  [15] jdk.nio.zipfs.ZipFileSystem$1.implCloseChannel
  [16] java.nio.channels.spi.AbstractInterruptibleChannel.close
  [17] fs2.io.file.FilesCompanionPlatform.openFileChannel$$anonfun$1$$anonfun$1
  [18] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$openFileChannel$$anonfun$1$$anonfun$adapted$1
  [19] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$719.0x0000000800eb4828.apply
  [20] cats.effect.IOFiber.$anonfun$8
  [21] cats.effect.IOFiber$$Lambda$703.0x0000000800eb2fc8.apply
  [22] cats.effect.unsafe.WorkerThread.blockOn
  [23] scala.concurrent.package$.blocking
  [24] cats.effect.IOFiber.runLoop
  [25] cats.effect.IOFiber.execR
  [26] cats.effect.IOFiber.run
  [27] cats.effect.unsafe.WorkerThread.run

--- 3175049636 ns (0.44%), 317 samples
  [ 0] osq_lock_[k]
  [ 1] rwsem_optimistic_spin_[k]
  [ 2] rwsem_down_write_slowpath_[k]
  [ 3] down_write_[k]
  [ 4] open_last_lookups_[k]
  [ 5] path_openat_[k]
  [ 6] do_filp_open_[k]
  [ 7] do_sys_openat2_[k]
  [ 8] __x64_sys_openat_[k]
  [ 9] do_syscall_64_[k]
  [10] entry_SYSCALL_64_after_hwframe_[k]
  [11] __open64
  [12] [unknown]
  [13] sun.nio.fs.UnixNativeDispatcher.open0
  [14] sun.nio.fs.UnixNativeDispatcher.open
  [15] sun.nio.fs.UnixChannelFactory.open
  [16] sun.nio.fs.UnixChannelFactory.newFileChannel
  [17] sun.nio.fs.UnixChannelFactory.newFileChannel
  [18] sun.nio.fs.UnixFileSystemProvider.newByteChannel
  [19] java.nio.file.spi.FileSystemProvider.newOutputStream
  [20] java.nio.file.Files.newOutputStream
  [21] java.nio.file.Files.copy
  [22] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [23] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [24] jdk.nio.zipfs.ZipPath.newFileChannel
  [25] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [26] java.nio.channels.FileChannel.open
  [27] java.nio.channels.FileChannel.open
  [28] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [29] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d8b0f0.apply
  [30] cats.effect.IOFiber.$anonfun$8
  [31] cats.effect.IOFiber$$Lambda$703.0x0000000800eb2fc8.apply
  [32] cats.effect.unsafe.WorkerThread.blockOn
  [33] scala.concurrent.package$.blocking
  [34] cats.effect.IOFiber.runLoop
  [35] cats.effect.IOFiber.execR
  [36] cats.effect.IOFiber.run
  [37] cats.effect.unsafe.WorkerThread.run

--- 2955081670 ns (0.41%), 295 samples
  [ 0] osq_lock_[k]
  [ 1] rwsem_optimistic_spin_[k]
  [ 2] rwsem_down_write_slowpath_[k]
  [ 3] down_write_[k]
  [ 4] open_last_lookups_[k]
  [ 5] path_openat_[k]
  [ 6] do_filp_open_[k]
  [ 7] do_sys_openat2_[k]
  [ 8] __x64_sys_openat_[k]
  [ 9] do_syscall_64_[k]
  [10] entry_SYSCALL_64_after_hwframe_[k]
  [11] __open64
  [12] [unknown]
  [13] sun.nio.fs.UnixNativeDispatcher.open0
  [14] sun.nio.fs.UnixNativeDispatcher.open
  [15] sun.nio.fs.UnixChannelFactory.open
  [16] sun.nio.fs.UnixChannelFactory.newFileChannel
  [17] sun.nio.fs.UnixChannelFactory.newFileChannel
  [18] sun.nio.fs.UnixFileSystemProvider.newByteChannel
  [19] java.nio.file.Files.newByteChannel
  [20] java.nio.file.Files.createFile
  [21] java.nio.file.TempFileHelper.create
  [22] java.nio.file.TempFileHelper.createTempFile
  [23] java.nio.file.Files.createTempFile
  [24] jdk.nio.zipfs.ZipFileSystem.createTempFileInSameDirectoryAs
  [25] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [26] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [27] jdk.nio.zipfs.ZipPath.newFileChannel
  [28] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [29] java.nio.channels.FileChannel.open
  [30] java.nio.channels.FileChannel.open
  [31] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [32] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d8b0f0.apply
  [33] cats.effect.IOFiber.$anonfun$8
  [34] cats.effect.IOFiber$$Lambda$703.0x0000000800eb2fc8.apply
  [35] cats.effect.unsafe.WorkerThread.blockOn
  [36] scala.concurrent.package$.blocking
  [37] cats.effect.IOFiber.runLoop
  [38] cats.effect.IOFiber.execR
  [39] cats.effect.IOFiber.run
  [40] cats.effect.unsafe.WorkerThread.run

--- 2774955799 ns (0.38%), 277 samples
  [ 0] inflate
  [ 1] java.util.zip.Inflater.inflateBytesBytes
  [ 2] java.util.zip.Inflater.inflate
  [ 3] java.util.zip.InflaterInputStream.read
  [ 4] java.io.InputStream.transferTo
  [ 5] java.nio.file.Files.copy
  [ 6] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [ 7] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [ 8] jdk.nio.zipfs.ZipPath.newFileChannel
  [ 9] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [10] java.nio.channels.FileChannel.open
  [11] java.nio.channels.FileChannel.open
  [12] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [13] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d8b0f0.apply
  [14] cats.effect.IOFiber.$anonfun$8
  [15] cats.effect.IOFiber$$Lambda$703.0x0000000800eb2fc8.apply
  [16] cats.effect.unsafe.WorkerThread.blockOn
  [17] scala.concurrent.package$.blocking
  [18] cats.effect.IOFiber.runLoop
  [19] cats.effect.IOFiber.execR
  [20] cats.effect.IOFiber.run
  [21] cats.effect.unsafe.WorkerThread.run

--- 2454647991 ns (0.34%), 245 samples
  [ 0] __memset_avx2_unaligned_erms
  [ 1] MemAllocator::allocate() const
  [ 2] TypeArrayKlass::allocate_common(int, bool, JavaThread*)
  [ 3] JVMCIRuntime::new_array_common(JavaThread*, Klass*, int, bool)
  [ 4] fs2.io.file.FileHandleCompanionPlatform$$anon$1.read$$anonfun$1
  [ 5] fs2.io.file.FileHandleCompanionPlatform$$anon$1$$Lambda$819.0x0000000800ecf8b0.apply
  [ 6] cats.effect.IOFiber.$anonfun$8
  [ 7] cats.effect.IOFiber$$Lambda$703.0x0000000800eb2fc8.apply
  [ 8] cats.effect.unsafe.WorkerThread.blockOn
  [ 9] scala.concurrent.package$.blocking
  [10] cats.effect.IOFiber.runLoop
  [11] cats.effect.IOFiber.execR
  [12] cats.effect.IOFiber.run
  [13] cats.effect.unsafe.WorkerThread.run

--- 2176119849 ns (0.30%), 217 samples
  [ 0] find_vmap_area_[k]
  [ 1] check_heap_object_[k]
  [ 2] __check_object_size.part.0_[k]
  [ 3] __check_object_size_[k]
  [ 4] zfs_uiomove_iter?[zfs]_[k]
  [ 5] zfs_uiomove?[zfs]_[k]
  [ 6] dmu_write_uio_dnode?[zfs]_[k]
  [ 7] dmu_write_uio_dbuf?[zfs]_[k]
  [ 8] zfs_write?[zfs]_[k]
  [ 9] zpl_iter_write?[zfs]_[k]
  [10] new_sync_write_[k]
  [11] vfs_write_[k]
  [12] ksys_write_[k]
  [13] __x64_sys_write_[k]
  [14] do_syscall_64_[k]
  [15] entry_SYSCALL_64_after_hwframe_[k]
  [16] write
  [17] sun.nio.ch.FileDispatcherImpl.write0
  [18] sun.nio.ch.FileDispatcherImpl.write
  [19] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [20] sun.nio.ch.IOUtil.write
  [21] sun.nio.ch.IOUtil.write
  [22] sun.nio.ch.FileChannelImpl.write
  [23] java.nio.channels.Channels.writeFullyImpl
  [24] java.nio.channels.Channels.writeFully
  [25] java.nio.channels.Channels$1.write
  [26] java.io.InputStream.transferTo
  [27] java.nio.file.Files.copy
  [28] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [29] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [30] jdk.nio.zipfs.ZipPath.newFileChannel
  [31] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [32] java.nio.channels.FileChannel.open
  [33] java.nio.channels.FileChannel.open
  [34] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [35] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d8b0f0.apply
  [36] cats.effect.IOFiber.$anonfun$8
  [37] cats.effect.IOFiber$$Lambda$703.0x0000000800eb2fc8.apply
  [38] cats.effect.unsafe.WorkerThread.blockOn
  [39] scala.concurrent.package$.blocking
  [40] cats.effect.IOFiber.runLoop
  [41] cats.effect.IOFiber.execR
  [42] cats.effect.IOFiber.run
  [43] cats.effect.unsafe.WorkerThread.run

--- 2005341470 ns (0.28%), 200 samples
  [ 0] copy_user_generic_string_[k]
  [ 1] zfs_uiomove_iter?[zfs]_[k]
  [ 2] zfs_uiomove?[zfs]_[k]
  [ 3] dmu_read_uio_dnode?[zfs]_[k]
  [ 4] dmu_read_uio_dbuf?[zfs]_[k]
  [ 5] zfs_read?[zfs]_[k]
  [ 6] zpl_iter_read?[zfs]_[k]
  [ 7] new_sync_read_[k]
  [ 8] vfs_read_[k]
  [ 9] __x64_sys_pread64_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] __libc_pread64
  [13] sun.nio.ch.FileDispatcherImpl.pread0
  [14] sun.nio.ch.FileDispatcherImpl.pread
  [15] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [16] sun.nio.ch.IOUtil.read
  [17] sun.nio.ch.IOUtil.read
  [18] sun.nio.ch.FileChannelImpl.readInternal
  [19] sun.nio.ch.FileChannelImpl.read
  [20] jdk.nio.zipfs.ZipFileSystem$1.read
  [21] fs2.io.file.FileHandleCompanionPlatform$$anon$1.read$$anonfun$1
  [22] fs2.io.file.FileHandleCompanionPlatform$$anon$1$$Lambda$819.0x0000000800ecf8b0.apply
  [23] cats.effect.IOFiber.$anonfun$8
  [24] cats.effect.IOFiber$$Lambda$703.0x0000000800eb2fc8.apply
  [25] cats.effect.unsafe.WorkerThread.blockOn
  [26] scala.concurrent.package$.blocking
  [27] cats.effect.IOFiber.runLoop
  [28] cats.effect.IOFiber.execR
  [29] cats.effect.IOFiber.run
  [30] cats.effect.unsafe.WorkerThread.run

--- 1943490977 ns (0.27%), 194 samples
  [ 0] osq_lock_[k]
  [ 1] rwsem_optimistic_spin_[k]
  [ 2] rwsem_down_write_slowpath_[k]
  [ 3] down_write_[k]
  [ 4] do_unlinkat_[k]
  [ 5] __x64_sys_unlink_[k]
  [ 6] do_syscall_64_[k]
  [ 7] entry_SYSCALL_64_after_hwframe_[k]
  [ 8] __GI_unlink
  [ 9] sun.nio.fs.UnixNativeDispatcher.unlink0
  [10] sun.nio.fs.UnixNativeDispatcher.unlink
  [11] sun.nio.fs.UnixFileSystemProvider.implDelete
  [12] sun.nio.fs.AbstractFileSystemProvider.delete
  [13] java.nio.file.Files.delete
  [14] jdk.nio.zipfs.ZipFileSystem.removeTempPathForEntry
  [15] jdk.nio.zipfs.ZipFileSystem$1.implCloseChannel
  [16] java.nio.channels.spi.AbstractInterruptibleChannel.close
  [17] fs2.io.file.FilesCompanionPlatform.openFileChannel$$anonfun$1$$anonfun$1
  [18] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$openFileChannel$$anonfun$1$$anonfun$adapted$1
  [19] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$719.0x0000000800eb4828.apply
  [20] cats.effect.IOFiber.$anonfun$8
  [21] cats.effect.IOFiber$$Lambda$703.0x0000000800eb2fc8.apply
  [22] cats.effect.unsafe.WorkerThread.blockOn
  [23] scala.concurrent.package$.blocking
  [24] cats.effect.IOFiber.runLoop
  [25] cats.effect.IOFiber.execR
  [26] cats.effect.IOFiber.run
  [27] cats.effect.unsafe.WorkerThread.run

--- 1443791363 ns (0.20%), 144 samples
  [ 0] _raw_spin_unlock_irqrestore_[k]
  [ 1] __wake_up_common_lock_[k]
  [ 2] __wake_up_[k]
  [ 3] fsnotify_insert_event_[k]
  [ 4] inotify_handle_inode_event_[k]
  [ 5] fsnotify_handle_inode_event.isra.0_[k]
  [ 6] send_to_group_[k]
  [ 7] fsnotify_[k]
  [ 8] open_last_lookups_[k]
  [ 9] path_openat_[k]
  [10] do_filp_open_[k]
  [11] do_sys_openat2_[k]
  [12] __x64_sys_openat_[k]
  [13] do_syscall_64_[k]
  [14] entry_SYSCALL_64_after_hwframe_[k]
  [15] __open64
  [16] [unknown]
  [17] sun.nio.fs.UnixNativeDispatcher.open0
  [18] sun.nio.fs.UnixNativeDispatcher.open
  [19] sun.nio.fs.UnixChannelFactory.open
  [20] sun.nio.fs.UnixChannelFactory.newFileChannel
  [21] sun.nio.fs.UnixChannelFactory.newFileChannel
  [22] sun.nio.fs.UnixFileSystemProvider.newByteChannel
  [23] java.nio.file.spi.FileSystemProvider.newOutputStream
  [24] java.nio.file.Files.newOutputStream
  [25] java.nio.file.Files.copy
  [26] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [27] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [28] jdk.nio.zipfs.ZipPath.newFileChannel
  [29] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [30] java.nio.channels.FileChannel.open
  [31] java.nio.channels.FileChannel.open
  [32] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [33] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d8b0f0.apply
  [34] cats.effect.IOFiber.$anonfun$8
  [35] cats.effect.IOFiber$$Lambda$703.0x0000000800eb2fc8.apply
  [36] cats.effect.unsafe.WorkerThread.blockOn
  [37] scala.concurrent.package$.blocking
  [38] cats.effect.IOFiber.runLoop
  [39] cats.effect.IOFiber.execR
  [40] cats.effect.IOFiber.run
  [41] cats.effect.unsafe.WorkerThread.run

--- 1422912454 ns (0.20%), 142 samples
  [ 0] __memset_avx2_unaligned_erms
  [ 1] MemAllocator::allocate() const
  [ 2] TypeArrayKlass::allocate_common(int, bool, JavaThread*)
  [ 3] JVMCIRuntime::new_array_common(JavaThread*, Klass*, int, bool)
  [ 4] java.nio.charset.Charset.forName
  [ 5] com.scalamandra.ZipLib$.com$scalamandra$ZipLib$$anon$1$$_$streamFoldChunks$$anonfun$1
  [ 6] com.scalamandra.ZipLib$$anon$1$$Lambda$269.0x0000000800dd0b58.apply
  [ 7] cats.effect.IOFiber.succeeded
  [ 8] cats.effect.IOFiber.runLoop
  [ 9] cats.effect.IOFiber.execR
  [10] cats.effect.IOFiber.run
  [11] cats.effect.unsafe.WorkerThread.run

--- 1422744168 ns (0.20%), 142 samples
  [ 0] java.lang.System.arraycopy
  [ 1] fs2.Chunk$ArraySlice.copyToArray
  [ 2] fs2.Chunk.toArray
  [ 3] com.scalamandra.ZipLib$.com$scalamandra$ZipLib$$anon$1$$_$streamFoldChunks$$anonfun$1
  [ 4] com.scalamandra.ZipLib$$anon$1$$Lambda$269.0x0000000800dd0b58.apply
  [ 5] cats.effect.IOFiber.succeeded
  [ 6] cats.effect.IOFiber.runLoop
  [ 7] cats.effect.IOFiber.execR
  [ 8] cats.effect.IOFiber.run
  [ 9] cats.effect.unsafe.WorkerThread.run

--- 1416698823 ns (0.19%), 141 samples
  [ 0] _raw_spin_unlock_irqrestore_[k]
  [ 1] __wake_up_common_lock_[k]
  [ 2] __wake_up_[k]
  [ 3] fsnotify_insert_event_[k]
  [ 4] inotify_handle_inode_event_[k]
  [ 5] fsnotify_handle_inode_event.isra.0_[k]
  [ 6] send_to_group_[k]
  [ 7] fsnotify_[k]
  [ 8] vfs_unlink_[k]
  [ 9] do_unlinkat_[k]
  [10] __x64_sys_unlink_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] __GI_unlink
  [14] sun.nio.fs.UnixNativeDispatcher.unlink0
  [15] sun.nio.fs.UnixNativeDispatcher.unlink
  [16] sun.nio.fs.UnixFileSystemProvider.implDelete
  [17] sun.nio.fs.AbstractFileSystemProvider.deleteIfExists
  [18] java.nio.file.Files.deleteIfExists
  [19] java.nio.file.Files.copy
  [20] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [21] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [22] jdk.nio.zipfs.ZipPath.newFileChannel
  [23] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [24] java.nio.channels.FileChannel.open
  [25] java.nio.channels.FileChannel.open
  [26] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [27] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d8b0f0.apply
  [28] cats.effect.IOFiber.$anonfun$8
  [29] cats.effect.IOFiber$$Lambda$703.0x0000000800eb2fc8.apply
  [30] cats.effect.unsafe.WorkerThread.blockOn
  [31] scala.concurrent.package$.blocking
  [32] cats.effect.IOFiber.runLoop
  [33] cats.effect.IOFiber.execR
  [34] cats.effect.IOFiber.run
  [35] cats.effect.unsafe.WorkerThread.run

--- 1403666965 ns (0.19%), 140 samples
  [ 0] fsnotify_[k]
  [ 1] __fsnotify_parent_[k]
  [ 2] vfs_write_[k]
  [ 3] ksys_write_[k]
  [ 4] __x64_sys_write_[k]
  [ 5] do_syscall_64_[k]
  [ 6] entry_SYSCALL_64_after_hwframe_[k]
  [ 7] write
  [ 8] sun.nio.ch.FileDispatcherImpl.write0
  [ 9] sun.nio.ch.FileDispatcherImpl.write
  [10] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [11] sun.nio.ch.IOUtil.write
  [12] sun.nio.ch.IOUtil.write
  [13] sun.nio.ch.FileChannelImpl.write
  [14] java.nio.channels.Channels.writeFullyImpl
  [15] java.nio.channels.Channels.writeFully
  [16] java.nio.channels.Channels$1.write
  [17] java.io.InputStream.transferTo
  [18] java.nio.file.Files.copy
  [19] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [20] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [21] jdk.nio.zipfs.ZipPath.newFileChannel
  [22] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [23] java.nio.channels.FileChannel.open
  [24] java.nio.channels.FileChannel.open
  [25] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [26] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d8b0f0.apply
  [27] cats.effect.IOFiber.$anonfun$8
  [28] cats.effect.IOFiber$$Lambda$703.0x0000000800eb2fc8.apply
  [29] cats.effect.unsafe.WorkerThread.blockOn
  [30] scala.concurrent.package$.blocking
  [31] cats.effect.IOFiber.runLoop
  [32] cats.effect.IOFiber.execR
  [33] cats.effect.IOFiber.run
  [34] cats.effect.unsafe.WorkerThread.run

--- 1402314778 ns (0.19%), 140 samples
  [ 0] __memset_avx2_unaligned_erms
  [ 1] MemAllocator::allocate() const
  [ 2] TypeArrayKlass::allocate_common(int, bool, JavaThread*)
  [ 3] JVMCIRuntime::new_array_common(JavaThread*, Klass*, int, bool)
  [ 4] fs2.io.file.FileHandleCompanionPlatform$$anon$1.read$$anonfun$1
  [ 5] fs2.io.file.FileHandleCompanionPlatform$$anon$1$$Lambda$819.0x0000000800ecf8b0.apply
  [ 6] cats.effect.IOFiber.$anonfun$8
  [ 7] cats.effect.IOFiber$$Lambda$703.0x0000000800eb2fc8.apply
  [ 8] cats.effect.unsafe.WorkerThread.blockOn
  [ 9] scala.concurrent.package$.blocking
  [10] cats.effect.IOFiber.runLoop
  [11] cats.effect.IOFiber.execR
  [12] cats.effect.IOFiber.run
  [13] cats.effect.unsafe.WorkerThread.run

--- 1393709464 ns (0.19%), 139 samples
  [ 0] find_vmap_area_[k]
  [ 1] check_heap_object_[k]
  [ 2] __check_object_size.part.0_[k]
  [ 3] __check_object_size_[k]
  [ 4] zfs_uiomove_iter?[zfs]_[k]
  [ 5] zfs_uiomove?[zfs]_[k]
  [ 6] dmu_write_uio_dnode?[zfs]_[k]
  [ 7] dmu_write_uio_dbuf?[zfs]_[k]
  [ 8] zfs_write?[zfs]_[k]
  [ 9] zpl_iter_write?[zfs]_[k]
  [10] new_sync_write_[k]
  [11] vfs_write_[k]
  [12] ksys_write_[k]
  [13] __x64_sys_write_[k]
  [14] do_syscall_64_[k]
  [15] entry_SYSCALL_64_after_hwframe_[k]
  [16] write
  [17] sun.nio.ch.FileDispatcherImpl.write0
  [18] sun.nio.ch.FileDispatcherImpl.write
  [19] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [20] sun.nio.ch.IOUtil.write
  [21] sun.nio.ch.IOUtil.write
  [22] sun.nio.ch.FileChannelImpl.write
  [23] java.nio.channels.Channels.writeFullyImpl
  [24] java.nio.channels.Channels.writeFully
  [25] java.nio.channels.Channels$1.write
  [26] java.io.InputStream.transferTo
  [27] java.nio.file.Files.copy
  [28] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [29] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [30] jdk.nio.zipfs.ZipPath.newFileChannel
  [31] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [32] java.nio.channels.FileChannel.open
  [33] java.nio.channels.FileChannel.open
  [34] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [35] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d8b0f0.apply
  [36] cats.effect.IOFiber.$anonfun$8
  [37] cats.effect.IOFiber$$Lambda$703.0x0000000800eb2fc8.apply
  [38] cats.effect.unsafe.WorkerThread.blockOn
  [39] scala.concurrent.package$.blocking
  [40] cats.effect.IOFiber.runLoop
  [41] cats.effect.IOFiber.execR
  [42] cats.effect.IOFiber.run
  [43] cats.effect.unsafe.WorkerThread.run

--- 1392808150 ns (0.19%), 139 samples
  [ 0] __memmove_avx_unaligned_erms
  [ 1] java.util.zip.Inflater.inflateBytesBytes
  [ 2] java.util.zip.Inflater.inflate
  [ 3] java.util.zip.InflaterInputStream.read
  [ 4] java.io.InputStream.transferTo
  [ 5] java.nio.file.Files.copy
  [ 6] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [ 7] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [ 8] jdk.nio.zipfs.ZipPath.newFileChannel
  [ 9] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [10] java.nio.channels.FileChannel.open
  [11] java.nio.channels.FileChannel.open
  [12] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [13] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d8b0f0.apply
  [14] cats.effect.IOFiber.$anonfun$8
  [15] cats.effect.IOFiber$$Lambda$703.0x0000000800eb2fc8.apply
  [16] cats.effect.unsafe.WorkerThread.blockOn
  [17] scala.concurrent.package$.blocking
  [18] cats.effect.IOFiber.runLoop
  [19] cats.effect.IOFiber.execR
  [20] cats.effect.IOFiber.run
  [21] cats.effect.unsafe.WorkerThread.run

--- 1383942167 ns (0.19%), 138 samples
  [ 0] copy_user_generic_string_[k]
  [ 1] zfs_uiomove_iter?[zfs]_[k]
  [ 2] zfs_uiomove?[zfs]_[k]
  [ 3] dmu_write_uio_dnode?[zfs]_[k]
  [ 4] dmu_write_uio_dbuf?[zfs]_[k]
  [ 5] zfs_write?[zfs]_[k]
  [ 6] zpl_iter_write?[zfs]_[k]
  [ 7] new_sync_write_[k]
  [ 8] vfs_write_[k]
  [ 9] ksys_write_[k]
  [10] __x64_sys_write_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] write
  [14] sun.nio.ch.FileDispatcherImpl.write0
  [15] sun.nio.ch.FileDispatcherImpl.write
  [16] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.FileChannelImpl.write
  [20] java.nio.channels.Channels.writeFullyImpl
  [21] java.nio.channels.Channels.writeFully
  [22] java.nio.channels.Channels$1.write
  [23] java.io.InputStream.transferTo
  [24] java.nio.file.Files.copy
  [25] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [26] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [27] jdk.nio.zipfs.ZipPath.newFileChannel
  [28] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [29] java.nio.channels.FileChannel.open
  [30] java.nio.channels.FileChannel.open
  [31] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [32] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d8b0f0.apply
  [33] cats.effect.IOFiber.$anonfun$8
  [34] cats.effect.IOFiber$$Lambda$703.0x0000000800eb2fc8.apply
  [35] cats.effect.unsafe.WorkerThread.blockOn
  [36] scala.concurrent.package$.blocking
  [37] cats.effect.IOFiber.runLoop
  [38] cats.effect.IOFiber.execR
  [39] cats.effect.IOFiber.run
  [40] cats.effect.unsafe.WorkerThread.run

--- 1323069029 ns (0.18%), 132 samples
  [ 0] __memset_avx2_unaligned_erms
  [ 1] MemAllocator::allocate() const
  [ 2] TypeArrayKlass::allocate_common(int, bool, JavaThread*)
  [ 3] JVMCIRuntime::new_array_common(JavaThread*, Klass*, int, bool)
  [ 4] jdk.nio.zipfs.ZipFileSystem.getInflater
  [ 5] jdk.nio.zipfs.ZipFileSystem.getInputStream
  [ 6] jdk.nio.zipfs.ZipFileSystem.newInputStream
  [ 7] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [ 8] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [ 9] jdk.nio.zipfs.ZipPath.newFileChannel
  [10] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [11] java.nio.channels.FileChannel.open
  [12] java.nio.channels.FileChannel.open
  [13] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [14] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d8b0f0.apply
  [15] cats.effect.IOFiber.$anonfun$8
  [16] cats.effect.IOFiber$$Lambda$703.0x0000000800eb2fc8.apply
  [17] cats.effect.unsafe.WorkerThread.blockOn
  [18] scala.concurrent.package$.blocking
  [19] cats.effect.IOFiber.runLoop
  [20] cats.effect.IOFiber.execR
  [21] cats.effect.IOFiber.run
  [22] cats.effect.unsafe.WorkerThread.run

--- 1313733209 ns (0.18%), 131 samples
  [ 0] memset_[k]
  [ 1] dnode_set_blksz?[zfs]_[k]
  [ 2] dmu_object_set_blocksize?[zfs]_[k]
  [ 3] zfs_grow_blocksize?[zfs]_[k]
  [ 4] zfs_write?[zfs]_[k]
  [ 5] zpl_iter_write?[zfs]_[k]
  [ 6] new_sync_write_[k]
  [ 7] vfs_write_[k]
  [ 8] ksys_write_[k]
  [ 9] __x64_sys_write_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] write
  [13] sun.nio.ch.FileDispatcherImpl.write0
  [14] sun.nio.ch.FileDispatcherImpl.write
  [15] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [16] sun.nio.ch.IOUtil.write
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.FileChannelImpl.write
  [19] java.nio.channels.Channels.writeFullyImpl
  [20] java.nio.channels.Channels.writeFully
  [21] java.nio.channels.Channels$1.write
  [22] java.io.InputStream.transferTo
  [23] java.nio.file.Files.copy
  [24] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [25] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [26] jdk.nio.zipfs.ZipPath.newFileChannel
  [27] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [28] java.nio.channels.FileChannel.open
  [29] java.nio.channels.FileChannel.open
  [30] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [31] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d8b0f0.apply
  [32] cats.effect.IOFiber.$anonfun$8
  [33] cats.effect.IOFiber$$Lambda$703.0x0000000800eb2fc8.apply
  [34] cats.effect.unsafe.WorkerThread.blockOn
  [35] scala.concurrent.package$.blocking
  [36] cats.effect.IOFiber.runLoop
  [37] cats.effect.IOFiber.execR
  [38] cats.effect.IOFiber.run
  [39] cats.effect.unsafe.WorkerThread.run

--- 1313013495 ns (0.18%), 131 samples
  [ 0] jlong_disjoint_arraycopy
  [ 1] jdk.internal.misc.Unsafe.copyMemory0
  [ 2] jdk.internal.misc.Unsafe.copyMemory
  [ 3] jdk.internal.misc.ScopedMemoryAccess.copyMemoryInternal
  [ 4] jdk.internal.misc.ScopedMemoryAccess.copyMemory
  [ 5] java.nio.ByteBuffer.putBuffer
  [ 6] java.nio.ByteBuffer.put
  [ 7] sun.nio.ch.IOUtil.write
  [ 8] sun.nio.ch.IOUtil.write
  [ 9] sun.nio.ch.FileChannelImpl.write
  [10] java.nio.channels.Channels.writeFullyImpl
  [11] java.nio.channels.Channels.writeFully
  [12] java.nio.channels.Channels$1.write
  [13] java.io.InputStream.transferTo
  [14] java.nio.file.Files.copy
  [15] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [16] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [17] jdk.nio.zipfs.ZipPath.newFileChannel
  [18] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [19] java.nio.channels.FileChannel.open
  [20] java.nio.channels.FileChannel.open
  [21] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [22] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d8b0f0.apply
  [23] cats.effect.IOFiber.$anonfun$8
  [24] cats.effect.IOFiber$$Lambda$703.0x0000000800eb2fc8.apply
  [25] cats.effect.unsafe.WorkerThread.blockOn
  [26] scala.concurrent.package$.blocking
  [27] cats.effect.IOFiber.runLoop
  [28] cats.effect.IOFiber.execR
  [29] cats.effect.IOFiber.run
  [30] cats.effect.unsafe.WorkerThread.run

--- 1273473329 ns (0.17%), 127 samples
  [ 0] _raw_spin_unlock_irqrestore_[k]
  [ 1] __wake_up_common_lock_[k]
  [ 2] __wake_up_[k]
  [ 3] fsnotify_insert_event_[k]
  [ 4] inotify_handle_inode_event_[k]
  [ 5] fsnotify_handle_inode_event.isra.0_[k]
  [ 6] send_to_group_[k]
  [ 7] fsnotify_[k]
  [ 8] open_last_lookups_[k]
  [ 9] path_openat_[k]
  [10] do_filp_open_[k]
  [11] do_sys_openat2_[k]
  [12] __x64_sys_openat_[k]
  [13] do_syscall_64_[k]
  [14] entry_SYSCALL_64_after_hwframe_[k]
  [15] __open64
  [16] [unknown]
  [17] sun.nio.fs.UnixNativeDispatcher.open0
  [18] sun.nio.fs.UnixNativeDispatcher.open
  [19] sun.nio.fs.UnixChannelFactory.open
  [20] sun.nio.fs.UnixChannelFactory.newFileChannel
  [21] sun.nio.fs.UnixChannelFactory.newFileChannel
  [22] sun.nio.fs.UnixFileSystemProvider.newByteChannel
  [23] java.nio.file.Files.newByteChannel
  [24] java.nio.file.Files.createFile
  [25] java.nio.file.TempFileHelper.create
  [26] java.nio.file.TempFileHelper.createTempFile
  [27] java.nio.file.Files.createTempFile
  [28] jdk.nio.zipfs.ZipFileSystem.createTempFileInSameDirectoryAs
  [29] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [30] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [31] jdk.nio.zipfs.ZipPath.newFileChannel
  [32] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [33] java.nio.channels.FileChannel.open
  [34] java.nio.channels.FileChannel.open
  [35] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [36] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d8b0f0.apply
  [37] cats.effect.IOFiber.$anonfun$8
  [38] cats.effect.IOFiber$$Lambda$703.0x0000000800eb2fc8.apply
  [39] cats.effect.unsafe.WorkerThread.blockOn
  [40] scala.concurrent.package$.blocking
  [41] cats.effect.IOFiber.runLoop
  [42] cats.effect.IOFiber.execR
  [43] cats.effect.IOFiber.run
  [44] cats.effect.unsafe.WorkerThread.run

--- 1273384938 ns (0.17%), 127 samples
  [ 0] _raw_spin_unlock_irqrestore_[k]
  [ 1] __wake_up_common_lock_[k]
  [ 2] __wake_up_[k]
  [ 3] fsnotify_insert_event_[k]
  [ 4] inotify_handle_inode_event_[k]
  [ 5] fsnotify_handle_inode_event.isra.0_[k]
  [ 6] send_to_group_[k]
  [ 7] fsnotify_[k]
  [ 8] vfs_unlink_[k]
  [ 9] do_unlinkat_[k]
  [10] __x64_sys_unlink_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] __GI_unlink
  [14] sun.nio.fs.UnixNativeDispatcher.unlink0
  [15] sun.nio.fs.UnixNativeDispatcher.unlink
  [16] sun.nio.fs.UnixFileSystemProvider.implDelete
  [17] sun.nio.fs.AbstractFileSystemProvider.delete
  [18] java.nio.file.Files.delete
  [19] jdk.nio.zipfs.ZipFileSystem.removeTempPathForEntry
  [20] jdk.nio.zipfs.ZipFileSystem$1.implCloseChannel
  [21] java.nio.channels.spi.AbstractInterruptibleChannel.close
  [22] fs2.io.file.FilesCompanionPlatform.openFileChannel$$anonfun$1$$anonfun$1
  [23] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$openFileChannel$$anonfun$1$$anonfun$adapted$1
  [24] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$719.0x0000000800eb4828.apply
  [25] cats.effect.IOFiber.$anonfun$8
  [26] cats.effect.IOFiber$$Lambda$703.0x0000000800eb2fc8.apply
  [27] cats.effect.unsafe.WorkerThread.blockOn
  [28] scala.concurrent.package$.blocking
  [29] cats.effect.IOFiber.runLoop
  [30] cats.effect.IOFiber.execR
  [31] cats.effect.IOFiber.run
  [32] cats.effect.unsafe.WorkerThread.run

--- 1233457828 ns (0.17%), 123 samples
  [ 0] _raw_spin_unlock_irqrestore_[k]
  [ 1] try_to_wake_up_[k]
  [ 2] wake_up_q_[k]
  [ 3] futex_wake_[k]
  [ 4] do_futex_[k]
  [ 5] __x64_sys_futex_[k]
  [ 6] do_syscall_64_[k]
  [ 7] entry_SYSCALL_64_after_hwframe_[k]
  [ 8] pthread_cond_signal@@GLIBC_2.3.2
  [ 9] jdk.internal.misc.Unsafe.unpark
  [10] java.util.concurrent.locks.LockSupport.unpark
  [11] cats.effect.unsafe.WorkStealingThreadPool.notifyParked
  [12] cats.effect.unsafe.WorkerThread.blockOn
  [13] scala.concurrent.package$.blocking
  [14] cats.effect.IOFiber.runLoop
  [15] cats.effect.IOFiber.execR
  [16] cats.effect.IOFiber.run
  [17] cats.effect.unsafe.WorkerThread.run

--- 1232188456 ns (0.17%), 123 samples
  [ 0] java.nio.HeapByteBuffer.<init>
  [ 1] java.nio.ByteBuffer.allocate
  [ 2] fs2.io.file.FileHandleCompanionPlatform$$anon$1.read$$anonfun$1
  [ 3] fs2.io.file.FileHandleCompanionPlatform$$anon$1$$Lambda$819.0x0000000800ecf8b0.apply
  [ 4] cats.effect.IOFiber.$anonfun$8
  [ 5] cats.effect.IOFiber$$Lambda$703.0x0000000800eb2fc8.apply
  [ 6] cats.effect.unsafe.WorkerThread.blockOn
  [ 7] scala.concurrent.package$.blocking
  [ 8] cats.effect.IOFiber.runLoop
  [ 9] cats.effect.IOFiber.execR
  [10] cats.effect.IOFiber.run
  [11] cats.effect.unsafe.WorkerThread.run

--- 1203102673 ns (0.17%), 120 samples
  [ 0] refill_obj_stock_[k]
  [ 1] obj_cgroup_charge_[k]
  [ 2] __kmalloc_[k]
  [ 3] inotify_handle_inode_event_[k]
  [ 4] fsnotify_handle_inode_event.isra.0_[k]
  [ 5] send_to_group_[k]
  [ 6] fsnotify_[k]
  [ 7] __fsnotify_parent_[k]
  [ 8] vfs_write_[k]
  [ 9] ksys_write_[k]
  [10] __x64_sys_write_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] write
  [14] sun.nio.ch.FileDispatcherImpl.write0
  [15] sun.nio.ch.FileDispatcherImpl.write
  [16] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.FileChannelImpl.write
  [20] java.nio.channels.Channels.writeFullyImpl
  [21] java.nio.channels.Channels.writeFully
  [22] java.nio.channels.Channels$1.write
  [23] java.io.InputStream.transferTo
  [24] java.nio.file.Files.copy
  [25] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [26] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [27] jdk.nio.zipfs.ZipPath.newFileChannel
  [28] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [29] java.nio.channels.FileChannel.open
  [30] java.nio.channels.FileChannel.open
  [31] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [32] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d8b0f0.apply
  [33] cats.effect.IOFiber.$anonfun$8
  [34] cats.effect.IOFiber$$Lambda$703.0x0000000800eb2fc8.apply
  [35] cats.effect.unsafe.WorkerThread.blockOn
  [36] scala.concurrent.package$.blocking
  [37] cats.effect.IOFiber.runLoop
  [38] cats.effect.IOFiber.execR
  [39] cats.effect.IOFiber.run
  [40] cats.effect.unsafe.WorkerThread.run

--- 1172808098 ns (0.16%), 117 samples
  [ 0] refill_stock_[k]
  [ 1] try_charge_memcg_[k]
  [ 2] obj_cgroup_charge_[k]
  [ 3] __kmalloc_[k]
  [ 4] inotify_handle_inode_event_[k]
  [ 5] fsnotify_handle_inode_event.isra.0_[k]
  [ 6] send_to_group_[k]
  [ 7] fsnotify_[k]
  [ 8] __fsnotify_parent_[k]
  [ 9] vfs_write_[k]
  [10] ksys_write_[k]
  [11] __x64_sys_write_[k]
  [12] do_syscall_64_[k]
  [13] entry_SYSCALL_64_after_hwframe_[k]
  [14] write
  [15] sun.nio.ch.FileDispatcherImpl.write0
  [16] sun.nio.ch.FileDispatcherImpl.write
  [17] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.IOUtil.write
  [20] sun.nio.ch.FileChannelImpl.write
  [21] java.nio.channels.Channels.writeFullyImpl
  [22] java.nio.channels.Channels.writeFully
  [23] java.nio.channels.Channels$1.write
  [24] java.io.InputStream.transferTo
  [25] java.nio.file.Files.copy
  [26] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [27] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [28] jdk.nio.zipfs.ZipPath.newFileChannel
  [29] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [30] java.nio.channels.FileChannel.open
  [31] java.nio.channels.FileChannel.open
  [32] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [33] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d8b0f0.apply
  [34] cats.effect.IOFiber.$anonfun$8
  [35] cats.effect.IOFiber$$Lambda$703.0x0000000800eb2fc8.apply
  [36] cats.effect.unsafe.WorkerThread.blockOn
  [37] scala.concurrent.package$.blocking
  [38] cats.effect.IOFiber.runLoop
  [39] cats.effect.IOFiber.execR
  [40] cats.effect.IOFiber.run
  [41] cats.effect.unsafe.WorkerThread.run

--- 1172277756 ns (0.16%), 117 samples
  [ 0] __memset_avx2_unaligned_erms
  [ 1] MemAllocator::allocate() const
  [ 2] TypeArrayKlass::allocate_common(int, bool, JavaThread*)
  [ 3] JVMCIRuntime::new_array_common(JavaThread*, Klass*, int, bool)
  [ 4] com.scalamandra.ZipLib$.com$scalamandra$ZipLib$$anon$1$$_$streamFoldChunks$$anonfun$1
  [ 5] com.scalamandra.ZipLib$$anon$1$$Lambda$269.0x0000000800dd0b58.apply
  [ 6] cats.effect.IOFiber.succeeded
  [ 7] cats.effect.IOFiber.runLoop
  [ 8] cats.effect.IOFiber.execR
  [ 9] cats.effect.IOFiber.run
  [10] cats.effect.unsafe.WorkerThread.run

--- 1112153084 ns (0.15%), 111 samples
  [ 0] /usr/lib/x86_64-linux-gnu/libz.so.1.2.11
  [ 1] java.util.zip.Inflater.inflateBytesBytes
  [ 2] java.util.zip.Inflater.inflate
  [ 3] java.util.zip.InflaterInputStream.read
  [ 4] java.io.InputStream.transferTo
  [ 5] java.nio.file.Files.copy
  [ 6] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [ 7] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [ 8] jdk.nio.zipfs.ZipPath.newFileChannel
  [ 9] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [10] java.nio.channels.FileChannel.open
  [11] java.nio.channels.FileChannel.open
  [12] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [13] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d8b0f0.apply
  [14] cats.effect.IOFiber.$anonfun$8
  [15] cats.effect.IOFiber$$Lambda$703.0x0000000800eb2fc8.apply
  [16] cats.effect.unsafe.WorkerThread.blockOn
  [17] scala.concurrent.package$.blocking
  [18] cats.effect.IOFiber.runLoop
  [19] cats.effect.IOFiber.execR
  [20] cats.effect.IOFiber.run
  [21] cats.effect.unsafe.WorkerThread.run

--- 1102428514 ns (0.15%), 110 samples
  [ 0] java.util.Arrays.copyOfRange
  [ 1] java.lang.String.<init>
  [ 2] java.lang.String.<init>
  [ 3] com.scalamandra.ZipLib$.com$scalamandra$ZipLib$$anon$1$$_$streamFoldChunks$$anonfun$1
  [ 4] com.scalamandra.ZipLib$$anon$1$$Lambda$269.0x0000000800dd0b58.apply
  [ 5] cats.effect.IOFiber.succeeded
  [ 6] cats.effect.IOFiber.runLoop
  [ 7] cats.effect.IOFiber.execR
  [ 8] cats.effect.IOFiber.run
  [ 9] cats.effect.unsafe.WorkerThread.run

--- 1072763810 ns (0.15%), 107 samples
  [ 0] copy_user_generic_string_[k]
  [ 1] zfs_uiomove_iter?[zfs]_[k]
  [ 2] zfs_uiomove?[zfs]_[k]
  [ 3] dmu_read_uio_dnode?[zfs]_[k]
  [ 4] dmu_read_uio_dbuf?[zfs]_[k]
  [ 5] zfs_read?[zfs]_[k]
  [ 6] zpl_iter_read?[zfs]_[k]
  [ 7] new_sync_read_[k]
  [ 8] vfs_read_[k]
  [ 9] __x64_sys_pread64_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] __libc_pread64
  [13] sun.nio.ch.FileDispatcherImpl.pread0
  [14] sun.nio.ch.FileDispatcherImpl.pread
  [15] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [16] sun.nio.ch.IOUtil.read
  [17] sun.nio.ch.IOUtil.read
  [18] sun.nio.ch.FileChannelImpl.readInternal
  [19] sun.nio.ch.FileChannelImpl.read
  [20] jdk.nio.zipfs.ZipFileSystem$1.read
  [21] fs2.io.file.FileHandleCompanionPlatform$$anon$1.read$$anonfun$1
  [22] fs2.io.file.FileHandleCompanionPlatform$$anon$1$$Lambda$819.0x0000000800ecf8b0.apply
  [23] cats.effect.IOFiber.$anonfun$8
  [24] cats.effect.IOFiber$$Lambda$703.0x0000000800eb2fc8.apply
  [25] cats.effect.unsafe.WorkerThread.blockOn
  [26] scala.concurrent.package$.blocking
  [27] cats.effect.IOFiber.runLoop
  [28] cats.effect.IOFiber.execR
  [29] cats.effect.IOFiber.run
  [30] cats.effect.unsafe.WorkerThread.run

--- 1052048272 ns (0.14%), 105 samples
  [ 0] jbyte_disjoint_arraycopy
  [ 1] jdk.internal.misc.Unsafe.copyMemory0
  [ 2] jdk.internal.misc.Unsafe.copyMemory
  [ 3] jdk.internal.misc.ScopedMemoryAccess.copyMemoryInternal
  [ 4] jdk.internal.misc.ScopedMemoryAccess.copyMemory
  [ 5] java.nio.ByteBuffer.putBuffer
  [ 6] java.nio.ByteBuffer.put
  [ 7] java.nio.HeapByteBuffer.put
  [ 8] sun.nio.ch.IOUtil.read
  [ 9] sun.nio.ch.IOUtil.read
  [10] sun.nio.ch.FileChannelImpl.readInternal
  [11] sun.nio.ch.FileChannelImpl.read
  [12] jdk.nio.zipfs.ZipFileSystem$1.read
  [13] fs2.io.file.FileHandleCompanionPlatform$$anon$1.read$$anonfun$1
  [14] fs2.io.file.FileHandleCompanionPlatform$$anon$1$$Lambda$819.0x0000000800ecf8b0.apply
  [15] cats.effect.IOFiber.$anonfun$8
  [16] cats.effect.IOFiber$$Lambda$703.0x0000000800eb2fc8.apply
  [17] cats.effect.unsafe.WorkerThread.blockOn
  [18] scala.concurrent.package$.blocking
  [19] cats.effect.IOFiber.runLoop
  [20] cats.effect.IOFiber.execR
  [21] cats.effect.IOFiber.run
  [22] cats.effect.unsafe.WorkerThread.run

--- 1012580027 ns (0.14%), 101 samples
  [ 0] send_to_group_[k]
  [ 1] fsnotify_[k]
  [ 2] __fsnotify_parent_[k]
  [ 3] vfs_write_[k]
  [ 4] ksys_write_[k]
  [ 5] __x64_sys_write_[k]
  [ 6] do_syscall_64_[k]
  [ 7] entry_SYSCALL_64_after_hwframe_[k]
  [ 8] write
  [ 9] sun.nio.ch.FileDispatcherImpl.write0
  [10] sun.nio.ch.FileDispatcherImpl.write
  [11] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [12] sun.nio.ch.IOUtil.write
  [13] sun.nio.ch.IOUtil.write
  [14] sun.nio.ch.FileChannelImpl.write
  [15] java.nio.channels.Channels.writeFullyImpl
  [16] java.nio.channels.Channels.writeFully
  [17] java.nio.channels.Channels$1.write
  [18] java.io.InputStream.transferTo
  [19] java.nio.file.Files.copy
  [20] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [21] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [22] jdk.nio.zipfs.ZipPath.newFileChannel
  [23] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [24] java.nio.channels.FileChannel.open
  [25] java.nio.channels.FileChannel.open
  [26] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [27] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d8b0f0.apply
  [28] cats.effect.IOFiber.$anonfun$8
  [29] cats.effect.IOFiber$$Lambda$703.0x0000000800eb2fc8.apply
  [30] cats.effect.unsafe.WorkerThread.blockOn
  [31] scala.concurrent.package$.blocking
  [32] cats.effect.IOFiber.runLoop
  [33] cats.effect.IOFiber.execR
  [34] cats.effect.IOFiber.run
  [35] cats.effect.unsafe.WorkerThread.run

--- 931537852 ns (0.13%), 93 samples
  [ 0] java.lang.System.arraycopy
  [ 1] fs2.Chunk$ArraySlice.copyToArray
  [ 2] fs2.Chunk.toArray
  [ 3] com.scalamandra.ZipLib$.com$scalamandra$ZipLib$$anon$1$$_$streamFoldChunks$$anonfun$1
  [ 4] com.scalamandra.ZipLib$$anon$1$$Lambda$269.0x0000000800dd0b58.apply
  [ 5] cats.effect.IOFiber.succeeded
  [ 6] cats.effect.IOFiber.runLoop
  [ 7] cats.effect.IOFiber.execR
  [ 8] cats.effect.IOFiber.run
  [ 9] cats.effect.unsafe.WorkerThread.run

--- 922686771 ns (0.13%), 92 samples
  [ 0] copy_user_generic_string_[k]
  [ 1] zfs_uiomove_iter?[zfs]_[k]
  [ 2] zfs_uiomove?[zfs]_[k]
  [ 3] dmu_read_uio_dnode?[zfs]_[k]
  [ 4] dmu_read_uio_dbuf?[zfs]_[k]
  [ 5] mappedread?[zfs]_[k]
  [ 6] zfs_read?[zfs]_[k]
  [ 7] zpl_iter_read?[zfs]_[k]
  [ 8] new_sync_read_[k]
  [ 9] vfs_read_[k]
  [10] __x64_sys_pread64_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] __libc_pread64
  [14] sun.nio.ch.FileDispatcherImpl.pread0
  [15] sun.nio.ch.FileDispatcherImpl.pread
  [16] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [17] sun.nio.ch.IOUtil.read
  [18] sun.nio.ch.IOUtil.read
  [19] sun.nio.ch.FileChannelImpl.readInternal
  [20] sun.nio.ch.FileChannelImpl.read
  [21] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [22] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [23] jdk.nio.zipfs.ZipFileSystem$2.fill
  [24] java.util.zip.InflaterInputStream.read
  [25] java.io.InputStream.transferTo
  [26] java.nio.file.Files.copy
  [27] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [28] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [29] jdk.nio.zipfs.ZipPath.newFileChannel
  [30] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [31] java.nio.channels.FileChannel.open
  [32] java.nio.channels.FileChannel.open
  [33] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [34] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d8b0f0.apply
  [35] cats.effect.IOFiber.$anonfun$8
  [36] cats.effect.IOFiber$$Lambda$703.0x0000000800eb2fc8.apply
  [37] cats.effect.unsafe.WorkerThread.blockOn
  [38] scala.concurrent.package$.blocking
  [39] cats.effect.IOFiber.runLoop
  [40] cats.effect.IOFiber.execR
  [41] cats.effect.IOFiber.run
  [42] cats.effect.unsafe.WorkerThread.run

--- 912125143 ns (0.13%), 91 samples
  [ 0] cats.effect.IOFiber.succeeded
  [ 1] cats.effect.IOFiber.runLoop
  [ 2] cats.effect.IOFiber.execR
  [ 3] cats.effect.IOFiber.run
  [ 4] cats.effect.unsafe.WorkerThread.run

--- 842537809 ns (0.12%), 84 samples
  [ 0] spl_kmem_cache_alloc?[spl]_[k]
  [ 1] zio_data_buf_alloc?[zfs]_[k]
  [ 2] arc_get_data_buf?[zfs]_[k]
  [ 3] arc_buf_alloc_impl?[zfs]_[k]
  [ 4] arc_alloc_buf?[zfs]_[k]
  [ 5] dbuf_new_size?[zfs]_[k]
  [ 6] dnode_set_blksz?[zfs]_[k]
  [ 7] dmu_object_set_blocksize?[zfs]_[k]
  [ 8] zfs_grow_blocksize?[zfs]_[k]
  [ 9] zfs_write?[zfs]_[k]
  [10] zpl_iter_write?[zfs]_[k]
  [11] new_sync_write_[k]
  [12] vfs_write_[k]
  [13] ksys_write_[k]
  [14] __x64_sys_write_[k]
  [15] do_syscall_64_[k]
  [16] entry_SYSCALL_64_after_hwframe_[k]
  [17] write
  [18] sun.nio.ch.FileDispatcherImpl.write0
  [19] sun.nio.ch.FileDispatcherImpl.write
  [20] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [21] sun.nio.ch.IOUtil.write
  [22] sun.nio.ch.IOUtil.write
  [23] sun.nio.ch.FileChannelImpl.write
  [24] java.nio.channels.Channels.writeFullyImpl
  [25] java.nio.channels.Channels.writeFully
  [26] java.nio.channels.Channels$1.write
  [27] java.io.InputStream.transferTo
  [28] java.nio.file.Files.copy
  [29] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [30] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [31] jdk.nio.zipfs.ZipPath.newFileChannel
  [32] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [33] java.nio.channels.FileChannel.open
  [34] java.nio.channels.FileChannel.open
  [35] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [36] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d8b0f0.apply
  [37] cats.effect.IOFiber.$anonfun$8
  [38] cats.effect.IOFiber$$Lambda$703.0x0000000800eb2fc8.apply
  [39] cats.effect.unsafe.WorkerThread.blockOn
  [40] scala.concurrent.package$.blocking
  [41] cats.effect.IOFiber.runLoop
  [42] cats.effect.IOFiber.execR
  [43] cats.effect.IOFiber.run
  [44] cats.effect.unsafe.WorkerThread.run

--- 832337196 ns (0.11%), 83 samples
  [ 0] _raw_spin_unlock_irqrestore_[k]
  [ 1] try_to_wake_up_[k]
  [ 2] wake_up_q_[k]
  [ 3] futex_wake_[k]
  [ 4] do_futex_[k]
  [ 5] __x64_sys_futex_[k]
  [ 6] do_syscall_64_[k]
  [ 7] entry_SYSCALL_64_after_hwframe_[k]
  [ 8] pthread_cond_signal@@GLIBC_2.3.2
  [ 9] jdk.internal.misc.Unsafe.unpark
  [10] java.util.concurrent.locks.LockSupport.unpark
  [11] java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext
  [12] java.util.concurrent.locks.AbstractQueuedSynchronizer.release
  [13] java.util.concurrent.locks.ReentrantLock.unlock
  [14] java.util.concurrent.ArrayBlockingQueue.offer
  [15] cats.effect.IOPlatform.unsafeRunTimed$$anonfun$1
  [16] cats.effect.IOPlatform$$Lambda$358.0x0000000800e05000.applyVoid
  [17] scala.runtime.function.JProcedure1.apply
  [18] scala.runtime.function.JProcedure1.apply
  [19] cats.effect.IO.unsafeRunAsync$$anonfun$3
  [20] cats.effect.IO$$Lambda$371.0x0000000800e09b20.applyVoid
  [21] scala.runtime.function.JProcedure1.apply
  [22] scala.runtime.function.JProcedure1.apply
  [23] cats.effect.IO.$anonfun$6$$anonfun$3
  [24] cats.effect.IO$$Lambda$1202.0x0000000800f40408.applyVoid
  [25] scala.runtime.function.JProcedure1.apply
  [26] scala.runtime.function.JProcedure1.apply
  [27] cats.effect.kernel.Outcome.fold
  [28] cats.effect.kernel.Outcome.fold$
  [29] cats.effect.kernel.Outcome$Succeeded.fold
  [30] cats.effect.IO.$anonfun$6
  [31] cats.effect.IO$$Lambda$379.0x0000000800e0cde0.applyVoid
  [32] scala.runtime.function.JProcedure1.apply
  [33] scala.runtime.function.JProcedure1.apply
  [34] cats.effect.CallbackStack.apply
  [35] cats.effect.IOFiber.done
  [36] cats.effect.IOFiber.runTerminusSuccessK
  [37] cats.effect.IOFiber.succeeded
  [38] cats.effect.IOFiber.runLoop
  [39] cats.effect.IOFiber.execR
  [40] cats.effect.IOFiber.run
  [41] cats.effect.unsafe.WorkerThread.run

--- 821446075 ns (0.11%), 82 samples
  [ 0] java.nio.HeapByteBuffer.<init>
  [ 1] java.nio.ByteBuffer.allocate
  [ 2] fs2.io.file.FileHandleCompanionPlatform$$anon$1.read$$anonfun$1
  [ 3] fs2.io.file.FileHandleCompanionPlatform$$anon$1$$Lambda$819.0x0000000800ecf8b0.apply
  [ 4] cats.effect.IOFiber.$anonfun$8
  [ 5] cats.effect.IOFiber$$Lambda$703.0x0000000800eb2fc8.apply
  [ 6] cats.effect.unsafe.WorkerThread.blockOn
  [ 7] scala.concurrent.package$.blocking
  [ 8] cats.effect.IOFiber.runLoop
  [ 9] cats.effect.IOFiber.execR
  [10] cats.effect.IOFiber.run
  [11] cats.effect.unsafe.WorkerThread.run

--- 811657960 ns (0.11%), 81 samples
  [ 0] _raw_spin_unlock_irqrestore_[k]
  [ 1] __wake_up_common_lock_[k]
  [ 2] __wake_up_[k]
  [ 3] fsnotify_insert_event_[k]
  [ 4] inotify_handle_inode_event_[k]
  [ 5] fsnotify_handle_inode_event.isra.0_[k]
  [ 6] send_to_group_[k]
  [ 7] fsnotify_[k]
  [ 8] open_last_lookups_[k]
  [ 9] path_openat_[k]
  [10] do_filp_open_[k]
  [11] do_sys_openat2_[k]
  [12] __x64_sys_openat_[k]
  [13] do_syscall_64_[k]
  [14] entry_SYSCALL_64_after_hwframe_[k]
  [15] __open64
  [16] [unknown]
  [17] sun.nio.fs.UnixNativeDispatcher.open0
  [18] sun.nio.fs.UnixNativeDispatcher.open
  [19] sun.nio.fs.UnixChannelFactory.open
  [20] sun.nio.fs.UnixChannelFactory.newFileChannel
  [21] sun.nio.fs.UnixChannelFactory.newFileChannel
  [22] sun.nio.fs.UnixFileSystemProvider.newByteChannel
  [23] java.nio.file.Files.newByteChannel
  [24] java.nio.file.Files.createFile
  [25] java.nio.file.TempFileHelper.create
  [26] java.nio.file.TempFileHelper.createTempFile
  [27] java.nio.file.Files.createTempFile
  [28] jdk.nio.zipfs.ZipFileSystem.createTempFileInSameDirectoryAs
  [29] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [30] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [31] jdk.nio.zipfs.ZipPath.newFileChannel
  [32] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [33] java.nio.channels.FileChannel.open
  [34] java.nio.channels.FileChannel.open
  [35] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [36] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d8b0f0.apply
  [37] cats.effect.IOFiber.$anonfun$8
  [38] cats.effect.IOFiber$$Lambda$703.0x0000000800eb2fc8.apply
  [39] cats.effect.unsafe.WorkerThread.blockOn
  [40] scala.concurrent.package$.blocking
  [41] cats.effect.IOFiber.runLoop
  [42] cats.effect.IOFiber.execR
  [43] cats.effect.IOFiber.run
  [44] cats.effect.unsafe.WorkerThread.run

--- 781941226 ns (0.11%), 78 samples
  [ 0] itable stub
  [ 1] cats.effect.IOFiber.succeeded
  [ 2] cats.effect.IOFiber.runLoop
  [ 3] cats.effect.IOFiber.execR
  [ 4] cats.effect.IOFiber.run
  [ 5] cats.effect.unsafe.WorkerThread.run

--- 781391735 ns (0.11%), 78 samples
  [ 0] __memset_avx2_unaligned_erms
  [ 1] MemAllocator::allocate() const
  [ 2] TypeArrayKlass::allocate_common(int, bool, JavaThread*)
  [ 3] JVMCIRuntime::new_array_common(JavaThread*, Klass*, int, bool)
  [ 4] java.nio.charset.Charset.forName
  [ 5] com.scalamandra.ZipLib$.com$scalamandra$ZipLib$$anon$1$$_$streamFoldChunks$$anonfun$1
  [ 6] com.scalamandra.ZipLib$$anon$1$$Lambda$269.0x0000000800dd0b58.apply
  [ 7] cats.effect.IOFiber.succeeded
  [ 8] cats.effect.IOFiber.runLoop
  [ 9] cats.effect.IOFiber.execR
  [10] cats.effect.IOFiber.run
  [11] cats.effect.unsafe.WorkerThread.run

--- 771365192 ns (0.11%), 77 samples
  [ 0] java.util.Arrays.copyOfRange
  [ 1] java.lang.String.<init>
  [ 2] java.lang.String.<init>
  [ 3] com.scalamandra.ZipLib$.com$scalamandra$ZipLib$$anon$1$$_$streamFoldChunks$$anonfun$1
  [ 4] com.scalamandra.ZipLib$$anon$1$$Lambda$269.0x0000000800dd0b58.apply
  [ 5] cats.effect.IOFiber.succeeded
  [ 6] cats.effect.IOFiber.runLoop
  [ 7] cats.effect.IOFiber.execR
  [ 8] cats.effect.IOFiber.run
  [ 9] cats.effect.unsafe.WorkerThread.run

--- 761583739 ns (0.10%), 76 samples
  [ 0] refill_stock_[k]
  [ 1] try_charge_memcg_[k]
  [ 2] obj_cgroup_charge_[k]
  [ 3] __kmalloc_[k]
  [ 4] inotify_handle_inode_event_[k]
  [ 5] fsnotify_handle_inode_event.isra.0_[k]
  [ 6] send_to_group_[k]
  [ 7] fsnotify_[k]
  [ 8] __fsnotify_parent_[k]
  [ 9] vfs_write_[k]
  [10] ksys_write_[k]
  [11] __x64_sys_write_[k]
  [12] do_syscall_64_[k]
  [13] entry_SYSCALL_64_after_hwframe_[k]
  [14] write
  [15] sun.nio.ch.FileDispatcherImpl.write0
  [16] sun.nio.ch.FileDispatcherImpl.write
  [17] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.IOUtil.write
  [20] sun.nio.ch.FileChannelImpl.write
  [21] java.nio.channels.Channels.writeFullyImpl
  [22] java.nio.channels.Channels.writeFully
  [23] java.nio.channels.Channels$1.write
  [24] java.io.InputStream.transferTo
  [25] java.nio.file.Files.copy
  [26] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [27] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [28] jdk.nio.zipfs.ZipPath.newFileChannel
  [29] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [30] java.nio.channels.FileChannel.open
  [31] java.nio.channels.FileChannel.open
  [32] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [33] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d8b0f0.apply
  [34] cats.effect.IOFiber.$anonfun$8
  [35] cats.effect.IOFiber$$Lambda$703.0x0000000800eb2fc8.apply
  [36] cats.effect.unsafe.WorkerThread.blockOn
  [37] scala.concurrent.package$.blocking
  [38] cats.effect.IOFiber.runLoop
  [39] cats.effect.IOFiber.execR
  [40] cats.effect.IOFiber.run
  [41] cats.effect.unsafe.WorkerThread.run

--- 751985750 ns (0.10%), 75 samples
  [ 0] copy_user_generic_string_[k]
  [ 1] zfs_uiomove_iter?[zfs]_[k]
  [ 2] zfs_uiomove?[zfs]_[k]
  [ 3] dmu_write_uio_dnode?[zfs]_[k]
  [ 4] dmu_write_uio_dbuf?[zfs]_[k]
  [ 5] zfs_write?[zfs]_[k]
  [ 6] zpl_iter_write?[zfs]_[k]
  [ 7] new_sync_write_[k]
  [ 8] vfs_write_[k]
  [ 9] ksys_write_[k]
  [10] __x64_sys_write_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] write
  [14] sun.nio.ch.FileDispatcherImpl.write0
  [15] sun.nio.ch.FileDispatcherImpl.write
  [16] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.FileChannelImpl.write
  [20] java.nio.channels.Channels.writeFullyImpl
  [21] java.nio.channels.Channels.writeFully
  [22] java.nio.channels.Channels$1.write
  [23] java.io.InputStream.transferTo
  [24] java.nio.file.Files.copy
  [25] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [26] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [27] jdk.nio.zipfs.ZipPath.newFileChannel
  [28] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [29] java.nio.channels.FileChannel.open
  [30] java.nio.channels.FileChannel.open
  [31] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [32] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d8b0f0.apply
  [33] cats.effect.IOFiber.$anonfun$8
  [34] cats.effect.IOFiber$$Lambda$703.0x0000000800eb2fc8.apply
  [35] cats.effect.unsafe.WorkerThread.blockOn
  [36] scala.concurrent.package$.blocking
  [37] cats.effect.IOFiber.runLoop
  [38] cats.effect.IOFiber.execR
  [39] cats.effect.IOFiber.run
  [40] cats.effect.unsafe.WorkerThread.run

--- 742059638 ns (0.10%), 74 samples
  [ 0] page_counter_try_charge_[k]
  [ 1] try_charge_memcg_[k]
  [ 2] obj_cgroup_charge_[k]
  [ 3] __kmalloc_[k]
  [ 4] inotify_handle_inode_event_[k]
  [ 5] fsnotify_handle_inode_event.isra.0_[k]
  [ 6] send_to_group_[k]
  [ 7] fsnotify_[k]
  [ 8] __fsnotify_parent_[k]
  [ 9] vfs_write_[k]
  [10] ksys_write_[k]
  [11] __x64_sys_write_[k]
  [12] do_syscall_64_[k]
  [13] entry_SYSCALL_64_after_hwframe_[k]
  [14] write
  [15] sun.nio.ch.FileDispatcherImpl.write0
  [16] sun.nio.ch.FileDispatcherImpl.write
  [17] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.IOUtil.write
  [20] sun.nio.ch.FileChannelImpl.write
  [21] java.nio.channels.Channels.writeFullyImpl
  [22] java.nio.channels.Channels.writeFully
  [23] java.nio.channels.Channels$1.write
  [24] java.io.InputStream.transferTo
  [25] java.nio.file.Files.copy
  [26] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [27] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [28] jdk.nio.zipfs.ZipPath.newFileChannel
  [29] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [30] java.nio.channels.FileChannel.open
  [31] java.nio.channels.FileChannel.open
  [32] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [33] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d8b0f0.apply
  [34] cats.effect.IOFiber.$anonfun$8
  [35] cats.effect.IOFiber$$Lambda$703.0x0000000800eb2fc8.apply
  [36] cats.effect.unsafe.WorkerThread.blockOn
  [37] scala.concurrent.package$.blocking
  [38] cats.effect.IOFiber.runLoop
  [39] cats.effect.IOFiber.execR
  [40] cats.effect.IOFiber.run
  [41] cats.effect.unsafe.WorkerThread.run

--- 741137308 ns (0.10%), 74 samples
  [ 0] __memmove_avx_unaligned_erms
  [ 1] java.util.zip.Inflater.inflateBytesBytes
  [ 2] java.util.zip.Inflater.inflate
  [ 3] java.util.zip.InflaterInputStream.read
  [ 4] java.io.InputStream.transferTo
  [ 5] java.nio.file.Files.copy
  [ 6] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [ 7] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [ 8] jdk.nio.zipfs.ZipPath.newFileChannel
  [ 9] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [10] java.nio.channels.FileChannel.open
  [11] java.nio.channels.FileChannel.open
  [12] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [13] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d8b0f0.apply
  [14] cats.effect.IOFiber.$anonfun$8
  [15] cats.effect.IOFiber$$Lambda$703.0x0000000800eb2fc8.apply
  [16] cats.effect.unsafe.WorkerThread.blockOn
  [17] scala.concurrent.package$.blocking
  [18] cats.effect.IOFiber.runLoop
  [19] cats.effect.IOFiber.execR
  [20] cats.effect.IOFiber.run
  [21] cats.effect.unsafe.WorkerThread.run

--- 731712205 ns (0.10%), 73 samples
  [ 0] java.lang.StringCoding.hasNegatives
  [ 1] java.lang.String.<init>
  [ 2] java.lang.String.<init>
  [ 3] com.scalamandra.ZipLib$.com$scalamandra$ZipLib$$anon$1$$_$streamFoldChunks$$anonfun$1
  [ 4] com.scalamandra.ZipLib$$anon$1$$Lambda$269.0x0000000800dd0b58.apply
  [ 5] cats.effect.IOFiber.succeeded
  [ 6] cats.effect.IOFiber.runLoop
  [ 7] cats.effect.IOFiber.execR
  [ 8] cats.effect.IOFiber.run
  [ 9] cats.effect.unsafe.WorkerThread.run

--- 721456884 ns (0.10%), 72 samples
  [ 0] __memset_avx2_unaligned_erms
  [ 1] MemAllocator::allocate() const
  [ 2] TypeArrayKlass::allocate_common(int, bool, JavaThread*)
  [ 3] JVMCIRuntime::new_array_common(JavaThread*, Klass*, int, bool)
  [ 4] com.scalamandra.ZipLib$.com$scalamandra$ZipLib$$anon$1$$_$streamFoldChunks$$anonfun$1
  [ 5] com.scalamandra.ZipLib$$anon$1$$Lambda$269.0x0000000800dd0b58.apply
  [ 6] cats.effect.IOFiber.succeeded
  [ 7] cats.effect.IOFiber.runLoop
  [ 8] cats.effect.IOFiber.execR
  [ 9] cats.effect.IOFiber.run
  [10] cats.effect.unsafe.WorkerThread.run

--- 711460600 ns (0.10%), 71 samples
  [ 0] fsnotify_[k]
  [ 1] __fsnotify_parent_[k]
  [ 2] vfs_write_[k]
  [ 3] ksys_write_[k]
  [ 4] __x64_sys_write_[k]
  [ 5] do_syscall_64_[k]
  [ 6] entry_SYSCALL_64_after_hwframe_[k]
  [ 7] write
  [ 8] sun.nio.ch.FileDispatcherImpl.write0
  [ 9] sun.nio.ch.FileDispatcherImpl.write
  [10] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [11] sun.nio.ch.IOUtil.write
  [12] sun.nio.ch.IOUtil.write
  [13] sun.nio.ch.FileChannelImpl.write
  [14] java.nio.channels.Channels.writeFullyImpl
  [15] java.nio.channels.Channels.writeFully
  [16] java.nio.channels.Channels$1.write
  [17] java.io.InputStream.transferTo
  [18] java.nio.file.Files.copy
  [19] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [20] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [21] jdk.nio.zipfs.ZipPath.newFileChannel
  [22] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [23] java.nio.channels.FileChannel.open
  [24] java.nio.channels.FileChannel.open
  [25] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [26] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d8b0f0.apply
  [27] cats.effect.IOFiber.$anonfun$8
  [28] cats.effect.IOFiber$$Lambda$703.0x0000000800eb2fc8.apply
  [29] cats.effect.unsafe.WorkerThread.blockOn
  [30] scala.concurrent.package$.blocking
  [31] cats.effect.IOFiber.runLoop
  [32] cats.effect.IOFiber.execR
  [33] cats.effect.IOFiber.run
  [34] cats.effect.unsafe.WorkerThread.run

--- 711383408 ns (0.10%), 71 samples
  [ 0] /usr/lib/x86_64-linux-gnu/libz.so.1.2.11
  [ 1] [unknown]
  [ 2] java.util.zip.Inflater.inflateBytesBytes
  [ 3] java.util.zip.Inflater.inflate
  [ 4] java.util.zip.InflaterInputStream.read
  [ 5] java.io.InputStream.transferTo
  [ 6] java.nio.file.Files.copy
  [ 7] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [ 8] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [ 9] jdk.nio.zipfs.ZipPath.newFileChannel
  [10] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [11] java.nio.channels.FileChannel.open
  [12] java.nio.channels.FileChannel.open
  [13] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [14] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d8b0f0.apply
  [15] cats.effect.IOFiber.$anonfun$8
  [16] cats.effect.IOFiber$$Lambda$703.0x0000000800eb2fc8.apply
  [17] cats.effect.unsafe.WorkerThread.blockOn
  [18] scala.concurrent.package$.blocking
  [19] cats.effect.IOFiber.runLoop
  [20] cats.effect.IOFiber.execR
  [21] cats.effect.IOFiber.run
  [22] cats.effect.unsafe.WorkerThread.run

--- 701720224 ns (0.10%), 70 samples
  [ 0] zfs_write?[zfs]_[k]
  [ 1] zpl_iter_write?[zfs]_[k]
  [ 2] new_sync_write_[k]
  [ 3] vfs_write_[k]
  [ 4] ksys_write_[k]
  [ 5] __x64_sys_write_[k]
  [ 6] do_syscall_64_[k]
  [ 7] entry_SYSCALL_64_after_hwframe_[k]
  [ 8] write
  [ 9] sun.nio.ch.FileDispatcherImpl.write0
  [10] sun.nio.ch.FileDispatcherImpl.write
  [11] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [12] sun.nio.ch.IOUtil.write
  [13] sun.nio.ch.IOUtil.write
  [14] sun.nio.ch.FileChannelImpl.write
  [15] java.nio.channels.Channels.writeFullyImpl
  [16] java.nio.channels.Channels.writeFully
  [17] java.nio.channels.Channels$1.write
  [18] java.io.InputStream.transferTo
  [19] java.nio.file.Files.copy
  [20] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [21] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [22] jdk.nio.zipfs.ZipPath.newFileChannel
  [23] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [24] java.nio.channels.FileChannel.open
  [25] java.nio.channels.FileChannel.open
  [26] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [27] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d8b0f0.apply
  [28] cats.effect.IOFiber.$anonfun$8
  [29] cats.effect.IOFiber$$Lambda$703.0x0000000800eb2fc8.apply
  [30] cats.effect.unsafe.WorkerThread.blockOn
  [31] scala.concurrent.package$.blocking
  [32] cats.effect.IOFiber.runLoop
  [33] cats.effect.IOFiber.execR
  [34] cats.effect.IOFiber.run
  [35] cats.effect.unsafe.WorkerThread.run

--- 701684526 ns (0.10%), 70 samples
  [ 0] cats.effect.tracing.RingBuffer.push
  [ 1] cats.effect.IOFiber.pushTracingEvent
  [ 2] cats.effect.IOFiber.runLoop
  [ 3] cats.effect.IOFiber.execR
  [ 4] cats.effect.IOFiber.run
  [ 5] cats.effect.unsafe.WorkerThread.run

--- 691667186 ns (0.09%), 69 samples
  [ 0] refill_obj_stock_[k]
  [ 1] obj_cgroup_charge_[k]
  [ 2] __kmalloc_[k]
  [ 3] inotify_handle_inode_event_[k]
  [ 4] fsnotify_handle_inode_event.isra.0_[k]
  [ 5] send_to_group_[k]
  [ 6] fsnotify_[k]
  [ 7] __fsnotify_parent_[k]
  [ 8] vfs_write_[k]
  [ 9] ksys_write_[k]
  [10] __x64_sys_write_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] write
  [14] sun.nio.ch.FileDispatcherImpl.write0
  [15] sun.nio.ch.FileDispatcherImpl.write
  [16] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.FileChannelImpl.write
  [20] java.nio.channels.Channels.writeFullyImpl
  [21] java.nio.channels.Channels.writeFully
  [22] java.nio.channels.Channels$1.write
  [23] java.io.InputStream.transferTo
  [24] java.nio.file.Files.copy
  [25] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [26] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [27] jdk.nio.zipfs.ZipPath.newFileChannel
  [28] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [29] java.nio.channels.FileChannel.open
  [30] java.nio.channels.FileChannel.open
  [31] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [32] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d8b0f0.apply
  [33] cats.effect.IOFiber.$anonfun$8
  [34] cats.effect.IOFiber$$Lambda$703.0x0000000800eb2fc8.apply
  [35] cats.effect.unsafe.WorkerThread.blockOn
  [36] scala.concurrent.package$.blocking
  [37] cats.effect.IOFiber.runLoop
  [38] cats.effect.IOFiber.execR
  [39] cats.effect.IOFiber.run
  [40] cats.effect.unsafe.WorkerThread.run

--- 691499535 ns (0.09%), 69 samples
  [ 0] _raw_spin_unlock_irqrestore_[k]
  [ 1] __wake_up_common_lock_[k]
  [ 2] __wake_up_[k]
  [ 3] fsnotify_insert_event_[k]
  [ 4] inotify_handle_inode_event_[k]
  [ 5] fsnotify_handle_inode_event.isra.0_[k]
  [ 6] send_to_group_[k]
  [ 7] fsnotify_[k]
  [ 8] open_last_lookups_[k]
  [ 9] path_openat_[k]
  [10] do_filp_open_[k]
  [11] do_sys_openat2_[k]
  [12] __x64_sys_openat_[k]
  [13] do_syscall_64_[k]
  [14] entry_SYSCALL_64_after_hwframe_[k]
  [15] __open64
  [16] [unknown]
  [17] sun.nio.fs.UnixNativeDispatcher.open0
  [18] sun.nio.fs.UnixNativeDispatcher.open
  [19] sun.nio.fs.UnixChannelFactory.open
  [20] sun.nio.fs.UnixChannelFactory.newFileChannel
  [21] sun.nio.fs.UnixChannelFactory.newFileChannel
  [22] sun.nio.fs.UnixFileSystemProvider.newByteChannel
  [23] java.nio.file.spi.FileSystemProvider.newOutputStream
  [24] java.nio.file.Files.newOutputStream
  [25] java.nio.file.Files.copy
  [26] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [27] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [28] jdk.nio.zipfs.ZipPath.newFileChannel
  [29] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [30] java.nio.channels.FileChannel.open
  [31] java.nio.channels.FileChannel.open
  [32] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [33] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d8b0f0.apply
  [34] cats.effect.IOFiber.$anonfun$8
  [35] cats.effect.IOFiber$$Lambda$703.0x0000000800eb2fc8.apply
  [36] cats.effect.unsafe.WorkerThread.blockOn
  [37] scala.concurrent.package$.blocking
  [38] cats.effect.IOFiber.runLoop
  [39] cats.effect.IOFiber.execR
  [40] cats.effect.IOFiber.run
  [41] cats.effect.unsafe.WorkerThread.run

--- 691190639 ns (0.09%), 69 samples
  [ 0] __memset_avx2_unaligned_erms
  [ 1] MemAllocator::allocate() const
  [ 2] TypeArrayKlass::allocate_common(int, bool, JavaThread*)
  [ 3] JVMCIRuntime::new_array_common(JavaThread*, Klass*, int, bool)
  [ 4] jdk.nio.zipfs.ZipFileSystem.getInflater
  [ 5] jdk.nio.zipfs.ZipFileSystem.getInputStream
  [ 6] jdk.nio.zipfs.ZipFileSystem.newInputStream
  [ 7] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [ 8] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [ 9] jdk.nio.zipfs.ZipPath.newFileChannel
  [10] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [11] java.nio.channels.FileChannel.open
  [12] java.nio.channels.FileChannel.open
  [13] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [14] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d8b0f0.apply
  [15] cats.effect.IOFiber.$anonfun$8
  [16] cats.effect.IOFiber$$Lambda$703.0x0000000800eb2fc8.apply
  [17] cats.effect.unsafe.WorkerThread.blockOn
  [18] scala.concurrent.package$.blocking
  [19] cats.effect.IOFiber.runLoop
  [20] cats.effect.IOFiber.execR
  [21] cats.effect.IOFiber.run
  [22] cats.effect.unsafe.WorkerThread.run

--- 681701442 ns (0.09%), 68 samples
  [ 0] memset_[k]
  [ 1] dnode_set_blksz?[zfs]_[k]
  [ 2] dmu_object_set_blocksize?[zfs]_[k]
  [ 3] zfs_grow_blocksize?[zfs]_[k]
  [ 4] zfs_write?[zfs]_[k]
  [ 5] zpl_iter_write?[zfs]_[k]
  [ 6] new_sync_write_[k]
  [ 7] vfs_write_[k]
  [ 8] ksys_write_[k]
  [ 9] __x64_sys_write_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] write
  [13] sun.nio.ch.FileDispatcherImpl.write0
  [14] sun.nio.ch.FileDispatcherImpl.write
  [15] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [16] sun.nio.ch.IOUtil.write
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.FileChannelImpl.write
  [19] java.nio.channels.Channels.writeFullyImpl
  [20] java.nio.channels.Channels.writeFully
  [21] java.nio.channels.Channels$1.write
  [22] java.io.InputStream.transferTo
  [23] java.nio.file.Files.copy
  [24] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [25] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [26] jdk.nio.zipfs.ZipPath.newFileChannel
  [27] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [28] java.nio.channels.FileChannel.open
  [29] java.nio.channels.FileChannel.open
  [30] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [31] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d8b0f0.apply
  [32] cats.effect.IOFiber.$anonfun$8
  [33] cats.effect.IOFiber$$Lambda$703.0x0000000800eb2fc8.apply
  [34] cats.effect.unsafe.WorkerThread.blockOn
  [35] scala.concurrent.package$.blocking
  [36] cats.effect.IOFiber.runLoop
  [37] cats.effect.IOFiber.execR
  [38] cats.effect.IOFiber.run
  [39] cats.effect.unsafe.WorkerThread.run

--- 631615848 ns (0.09%), 63 samples
  [ 0] itable stub
  [ 1] cats.effect.IOFiber.runLoop
  [ 2] cats.effect.IOFiber.execR
  [ 3] cats.effect.IOFiber.run
  [ 4] cats.effect.unsafe.WorkerThread.run

--- 612249967 ns (0.08%), 61 samples
  [ 0] java.util.concurrent.ConcurrentLinkedQueue.poll
  [ 1] cats.effect.unsafe.ScalQueue.poll
  [ 2] cats.effect.unsafe.WorkerThread.run

--- 611616062 ns (0.08%), 61 samples
  [ 0] _raw_spin_unlock_irqrestore_[k]
  [ 1] __wake_up_common_lock_[k]
  [ 2] __wake_up_[k]
  [ 3] fsnotify_insert_event_[k]
  [ 4] inotify_handle_inode_event_[k]
  [ 5] fsnotify_handle_inode_event.isra.0_[k]
  [ 6] send_to_group_[k]
  [ 7] fsnotify_[k]
  [ 8] vfs_unlink_[k]
  [ 9] do_unlinkat_[k]
  [10] __x64_sys_unlink_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] __GI_unlink
  [14] sun.nio.fs.UnixNativeDispatcher.unlink0
  [15] sun.nio.fs.UnixNativeDispatcher.unlink
  [16] sun.nio.fs.UnixFileSystemProvider.implDelete
  [17] sun.nio.fs.AbstractFileSystemProvider.deleteIfExists
  [18] java.nio.file.Files.deleteIfExists
  [19] java.nio.file.Files.copy
  [20] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [21] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [22] jdk.nio.zipfs.ZipPath.newFileChannel
  [23] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [24] java.nio.channels.FileChannel.open
  [25] java.nio.channels.FileChannel.open
  [26] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [27] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d8b0f0.apply
  [28] cats.effect.IOFiber.$anonfun$8
  [29] cats.effect.IOFiber$$Lambda$703.0x0000000800eb2fc8.apply
  [30] cats.effect.unsafe.WorkerThread.blockOn
  [31] scala.concurrent.package$.blocking
  [32] cats.effect.IOFiber.runLoop
  [33] cats.effect.IOFiber.execR
  [34] cats.effect.IOFiber.run
  [35] cats.effect.unsafe.WorkerThread.run

--- 601788861 ns (0.08%), 60 samples
  [ 0] vfs_write_[k]
  [ 1] ksys_write_[k]
  [ 2] __x64_sys_write_[k]
  [ 3] do_syscall_64_[k]
  [ 4] entry_SYSCALL_64_after_hwframe_[k]
  [ 5] write
  [ 6] sun.nio.ch.FileDispatcherImpl.write0
  [ 7] sun.nio.ch.FileDispatcherImpl.write
  [ 8] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [ 9] sun.nio.ch.IOUtil.write
  [10] sun.nio.ch.IOUtil.write
  [11] sun.nio.ch.FileChannelImpl.write
  [12] java.nio.channels.Channels.writeFullyImpl
  [13] java.nio.channels.Channels.writeFully
  [14] java.nio.channels.Channels$1.write
  [15] java.io.InputStream.transferTo
  [16] java.nio.file.Files.copy
  [17] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [18] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [19] jdk.nio.zipfs.ZipPath.newFileChannel
  [20] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [21] java.nio.channels.FileChannel.open
  [22] java.nio.channels.FileChannel.open
  [23] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [24] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d8b0f0.apply
  [25] cats.effect.IOFiber.$anonfun$8
  [26] cats.effect.IOFiber$$Lambda$703.0x0000000800eb2fc8.apply
  [27] cats.effect.unsafe.WorkerThread.blockOn
  [28] scala.concurrent.package$.blocking
  [29] cats.effect.IOFiber.runLoop
  [30] cats.effect.IOFiber.execR
  [31] cats.effect.IOFiber.run
  [32] cats.effect.unsafe.WorkerThread.run

--- 601589777 ns (0.08%), 60 samples
  [ 0] _raw_spin_unlock_irqrestore_[k]
  [ 1] __wake_up_common_lock_[k]
  [ 2] __wake_up_[k]
  [ 3] fsnotify_insert_event_[k]
  [ 4] inotify_handle_inode_event_[k]
  [ 5] fsnotify_handle_inode_event.isra.0_[k]
  [ 6] send_to_group_[k]
  [ 7] fsnotify_[k]
  [ 8] vfs_unlink_[k]
  [ 9] do_unlinkat_[k]
  [10] __x64_sys_unlink_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] __GI_unlink
  [14] sun.nio.fs.UnixNativeDispatcher.unlink0
  [15] sun.nio.fs.UnixNativeDispatcher.unlink
  [16] sun.nio.fs.UnixFileSystemProvider.implDelete
  [17] sun.nio.fs.AbstractFileSystemProvider.delete
  [18] java.nio.file.Files.delete
  [19] jdk.nio.zipfs.ZipFileSystem.removeTempPathForEntry
  [20] jdk.nio.zipfs.ZipFileSystem$1.implCloseChannel
  [21] java.nio.channels.spi.AbstractInterruptibleChannel.close
  [22] fs2.io.file.FilesCompanionPlatform.openFileChannel$$anonfun$1$$anonfun$1
  [23] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$openFileChannel$$anonfun$1$$anonfun$adapted$1
  [24] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$719.0x0000000800eb4828.apply
  [25] cats.effect.IOFiber.$anonfun$8
  [26] cats.effect.IOFiber$$Lambda$703.0x0000000800eb2fc8.apply
  [27] cats.effect.unsafe.WorkerThread.blockOn
  [28] scala.concurrent.package$.blocking
  [29] cats.effect.IOFiber.runLoop
  [30] cats.effect.IOFiber.execR
  [31] cats.effect.IOFiber.run
  [32] cats.effect.unsafe.WorkerThread.run

--- 601060085 ns (0.08%), 60 samples
  [ 0] jbyte_disjoint_arraycopy
  [ 1] jdk.internal.misc.Unsafe.copyMemory0
  [ 2] jdk.internal.misc.Unsafe.copyMemory
  [ 3] jdk.internal.misc.ScopedMemoryAccess.copyMemoryInternal
  [ 4] jdk.internal.misc.ScopedMemoryAccess.copyMemory
  [ 5] java.nio.ByteBuffer.putBuffer
  [ 6] java.nio.ByteBuffer.put
  [ 7] java.nio.HeapByteBuffer.put
  [ 8] sun.nio.ch.IOUtil.read
  [ 9] sun.nio.ch.IOUtil.read
  [10] sun.nio.ch.FileChannelImpl.readInternal
  [11] sun.nio.ch.FileChannelImpl.read
  [12] jdk.nio.zipfs.ZipFileSystem$1.read
  [13] fs2.io.file.FileHandleCompanionPlatform$$anon$1.read$$anonfun$1
  [14] fs2.io.file.FileHandleCompanionPlatform$$anon$1$$Lambda$819.0x0000000800ecf8b0.apply
  [15] cats.effect.IOFiber.$anonfun$8
  [16] cats.effect.IOFiber$$Lambda$703.0x0000000800eb2fc8.apply
  [17] cats.effect.unsafe.WorkerThread.blockOn
  [18] scala.concurrent.package$.blocking
  [19] cats.effect.IOFiber.runLoop
  [20] cats.effect.IOFiber.execR
  [21] cats.effect.IOFiber.run
  [22] cats.effect.unsafe.WorkerThread.run

--- 591162517 ns (0.08%), 59 samples
  [ 0] jlong_disjoint_arraycopy
  [ 1] jdk.internal.misc.Unsafe.copyMemory0
  [ 2] jdk.internal.misc.Unsafe.copyMemory
  [ 3] jdk.internal.misc.ScopedMemoryAccess.copyMemoryInternal
  [ 4] jdk.internal.misc.ScopedMemoryAccess.copyMemory
  [ 5] java.nio.ByteBuffer.putBuffer
  [ 6] java.nio.ByteBuffer.put
  [ 7] sun.nio.ch.IOUtil.write
  [ 8] sun.nio.ch.IOUtil.write
  [ 9] sun.nio.ch.FileChannelImpl.write
  [10] java.nio.channels.Channels.writeFullyImpl
  [11] java.nio.channels.Channels.writeFully
  [12] java.nio.channels.Channels$1.write
  [13] java.io.InputStream.transferTo
  [14] java.nio.file.Files.copy
  [15] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [16] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [17] jdk.nio.zipfs.ZipPath.newFileChannel
  [18] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [19] java.nio.channels.FileChannel.open
  [20] java.nio.channels.FileChannel.open
  [21] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [22] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d8b0f0.apply
  [23] cats.effect.IOFiber.$anonfun$8
  [24] cats.effect.IOFiber$$Lambda$703.0x0000000800eb2fc8.apply
  [25] cats.effect.unsafe.WorkerThread.blockOn
  [26] scala.concurrent.package$.blocking
  [27] cats.effect.IOFiber.runLoop
  [28] cats.effect.IOFiber.execR
  [29] cats.effect.IOFiber.run
  [30] cats.effect.unsafe.WorkerThread.run

--- 581802622 ns (0.08%), 58 samples
  [ 0] cats.effect.IOFiber.runLoop
  [ 1] cats.effect.IOFiber.execR
  [ 2] cats.effect.IOFiber.run
  [ 3] cats.effect.unsafe.WorkerThread.run

--- 581335867 ns (0.08%), 58 samples
  [ 0] send_to_group_[k]
  [ 1] fsnotify_[k]
  [ 2] __fsnotify_parent_[k]
  [ 3] vfs_write_[k]
  [ 4] ksys_write_[k]
  [ 5] __x64_sys_write_[k]
  [ 6] do_syscall_64_[k]
  [ 7] entry_SYSCALL_64_after_hwframe_[k]
  [ 8] write
  [ 9] sun.nio.ch.FileDispatcherImpl.write0
  [10] sun.nio.ch.FileDispatcherImpl.write
  [11] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [12] sun.nio.ch.IOUtil.write
  [13] sun.nio.ch.IOUtil.write
  [14] sun.nio.ch.FileChannelImpl.write
  [15] java.nio.channels.Channels.writeFullyImpl
  [16] java.nio.channels.Channels.writeFully
  [17] java.nio.channels.Channels$1.write
  [18] java.io.InputStream.transferTo
  [19] java.nio.file.Files.copy
  [20] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [21] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [22] jdk.nio.zipfs.ZipPath.newFileChannel
  [23] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [24] java.nio.channels.FileChannel.open
  [25] java.nio.channels.FileChannel.open
  [26] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [27] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d8b0f0.apply
  [28] cats.effect.IOFiber.$anonfun$8
  [29] cats.effect.IOFiber$$Lambda$703.0x0000000800eb2fc8.apply
  [30] cats.effect.unsafe.WorkerThread.blockOn
  [31] scala.concurrent.package$.blocking
  [32] cats.effect.IOFiber.runLoop
  [33] cats.effect.IOFiber.execR
  [34] cats.effect.IOFiber.run
  [35] cats.effect.unsafe.WorkerThread.run

--- 561752949 ns (0.08%), 56 samples
  [ 0] java.util.concurrent.ConcurrentLinkedQueue.poll
  [ 1] cats.effect.unsafe.ScalQueue.poll
  [ 2] cats.effect.unsafe.WorkerThread.run

--- 561066157 ns (0.08%), 56 samples
  [ 0] cats.effect.IOFiber.succeeded
  [ 1] cats.effect.IOFiber.runLoop
  [ 2] cats.effect.IOFiber.execR
  [ 3] cats.effect.IOFiber.run
  [ 4] cats.effect.unsafe.WorkerThread.run

--- 551476679 ns (0.08%), 55 samples
  [ 0] try_charge_memcg_[k]
  [ 1] obj_cgroup_charge_[k]
  [ 2] __kmalloc_[k]
  [ 3] inotify_handle_inode_event_[k]
  [ 4] fsnotify_handle_inode_event.isra.0_[k]
  [ 5] send_to_group_[k]
  [ 6] fsnotify_[k]
  [ 7] __fsnotify_parent_[k]
  [ 8] vfs_write_[k]
  [ 9] ksys_write_[k]
  [10] __x64_sys_write_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] write
  [14] sun.nio.ch.FileDispatcherImpl.write0
  [15] sun.nio.ch.FileDispatcherImpl.write
  [16] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.FileChannelImpl.write
  [20] java.nio.channels.Channels.writeFullyImpl
  [21] java.nio.channels.Channels.writeFully
  [22] java.nio.channels.Channels$1.write
  [23] java.io.InputStream.transferTo
  [24] java.nio.file.Files.copy
  [25] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [26] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [27] jdk.nio.zipfs.ZipPath.newFileChannel
  [28] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [29] java.nio.channels.FileChannel.open
  [30] java.nio.channels.FileChannel.open
  [31] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [32] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d8b0f0.apply
  [33] cats.effect.IOFiber.$anonfun$8
  [34] cats.effect.IOFiber$$Lambda$703.0x0000000800eb2fc8.apply
  [35] cats.effect.unsafe.WorkerThread.blockOn
  [36] scala.concurrent.package$.blocking
  [37] cats.effect.IOFiber.runLoop
  [38] cats.effect.IOFiber.execR
  [39] cats.effect.IOFiber.run
  [40] cats.effect.unsafe.WorkerThread.run

--- 531454411 ns (0.07%), 53 samples
  [ 0] java.lang.invoke.MethodHandle.invokeBasic
  [ 1] [unknown_Java]

--- 521358852 ns (0.07%), 52 samples
  [ 0] __kmalloc_[k]
  [ 1] inotify_handle_inode_event_[k]
  [ 2] fsnotify_handle_inode_event.isra.0_[k]
  [ 3] send_to_group_[k]
  [ 4] fsnotify_[k]
  [ 5] __fsnotify_parent_[k]
  [ 6] vfs_write_[k]
  [ 7] ksys_write_[k]
  [ 8] __x64_sys_write_[k]
  [ 9] do_syscall_64_[k]
  [10] entry_SYSCALL_64_after_hwframe_[k]
  [11] write
  [12] sun.nio.ch.FileDispatcherImpl.write0
  [13] sun.nio.ch.FileDispatcherImpl.write
  [14] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [15] sun.nio.ch.IOUtil.write
  [16] sun.nio.ch.IOUtil.write
  [17] sun.nio.ch.FileChannelImpl.write
  [18] java.nio.channels.Channels.writeFullyImpl
  [19] java.nio.channels.Channels.writeFully
  [20] java.nio.channels.Channels$1.write
  [21] java.io.InputStream.transferTo
  [22] java.nio.file.Files.copy
  [23] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [24] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [25] jdk.nio.zipfs.ZipPath.newFileChannel
  [26] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [27] java.nio.channels.FileChannel.open
  [28] java.nio.channels.FileChannel.open
  [29] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [30] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d8b0f0.apply
  [31] cats.effect.IOFiber.$anonfun$8
  [32] cats.effect.IOFiber$$Lambda$703.0x0000000800eb2fc8.apply
  [33] cats.effect.unsafe.WorkerThread.blockOn
  [34] scala.concurrent.package$.blocking
  [35] cats.effect.IOFiber.runLoop
  [36] cats.effect.IOFiber.execR
  [37] cats.effect.IOFiber.run
  [38] cats.effect.unsafe.WorkerThread.run

--- 511009755 ns (0.07%), 51 samples
  [ 0] write
  [ 1] sun.nio.ch.FileDispatcherImpl.write0
  [ 2] sun.nio.ch.FileDispatcherImpl.write
  [ 3] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [ 4] sun.nio.ch.IOUtil.write
  [ 5] sun.nio.ch.IOUtil.write
  [ 6] sun.nio.ch.FileChannelImpl.write
  [ 7] java.nio.channels.Channels.writeFullyImpl
  [ 8] java.nio.channels.Channels.writeFully
  [ 9] java.nio.channels.Channels$1.write
  [10] java.io.InputStream.transferTo
  [11] java.nio.file.Files.copy
  [12] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [13] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [14] jdk.nio.zipfs.ZipPath.newFileChannel
  [15] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [16] java.nio.channels.FileChannel.open
  [17] java.nio.channels.FileChannel.open
  [18] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [19] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d8b0f0.apply
  [20] cats.effect.IOFiber.$anonfun$8
  [21] cats.effect.IOFiber$$Lambda$703.0x0000000800eb2fc8.apply
  [22] cats.effect.unsafe.WorkerThread.blockOn
  [23] scala.concurrent.package$.blocking
  [24] cats.effect.IOFiber.runLoop
  [25] cats.effect.IOFiber.execR
  [26] cats.effect.IOFiber.run
  [27] cats.effect.unsafe.WorkerThread.run

--- 490949483 ns (0.07%), 49 samples
  [ 0] jbyte_disjoint_arraycopy
  [ 1] jdk.internal.misc.Unsafe.copyMemory0
  [ 2] jdk.internal.misc.Unsafe.copyMemory
  [ 3] jdk.internal.misc.ScopedMemoryAccess.copyMemoryInternal
  [ 4] jdk.internal.misc.ScopedMemoryAccess.copyMemory
  [ 5] java.nio.ByteBuffer.putBuffer
  [ 6] java.nio.ByteBuffer.put
  [ 7] java.nio.HeapByteBuffer.put
  [ 8] sun.nio.ch.IOUtil.read
  [ 9] sun.nio.ch.IOUtil.read
  [10] sun.nio.ch.FileChannelImpl.readInternal
  [11] sun.nio.ch.FileChannelImpl.read
  [12] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [13] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [14] jdk.nio.zipfs.ZipFileSystem$2.fill
  [15] java.util.zip.InflaterInputStream.read
  [16] java.io.InputStream.transferTo
  [17] java.nio.file.Files.copy
  [18] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [19] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [20] jdk.nio.zipfs.ZipPath.newFileChannel
  [21] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [22] java.nio.channels.FileChannel.open
  [23] java.nio.channels.FileChannel.open
  [24] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [25] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d8b0f0.apply
  [26] cats.effect.IOFiber.$anonfun$8
  [27] cats.effect.IOFiber$$Lambda$703.0x0000000800eb2fc8.apply
  [28] cats.effect.unsafe.WorkerThread.blockOn
  [29] scala.concurrent.package$.blocking
  [30] cats.effect.IOFiber.runLoop
  [31] cats.effect.IOFiber.execR
  [32] cats.effect.IOFiber.run
  [33] cats.effect.unsafe.WorkerThread.run

--- 481167921 ns (0.07%), 48 samples
  [ 0] java.util.zip.InflaterInputStream.<init>
  [ 1] jdk.nio.zipfs.ZipFileSystem$2.<init>
  [ 2] jdk.nio.zipfs.ZipFileSystem.getInputStream
  [ 3] jdk.nio.zipfs.ZipFileSystem.newInputStream
  [ 4] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [ 5] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [ 6] jdk.nio.zipfs.ZipPath.newFileChannel
  [ 7] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [ 8] java.nio.channels.FileChannel.open
  [ 9] java.nio.channels.FileChannel.open
  [10] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [11] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d8b0f0.apply
  [12] cats.effect.IOFiber.$anonfun$8
  [13] cats.effect.IOFiber$$Lambda$703.0x0000000800eb2fc8.apply
  [14] cats.effect.unsafe.WorkerThread.blockOn
  [15] scala.concurrent.package$.blocking
  [16] cats.effect.IOFiber.runLoop
  [17] cats.effect.IOFiber.execR
  [18] cats.effect.IOFiber.run
  [19] cats.effect.unsafe.WorkerThread.run

--- 461374680 ns (0.06%), 46 samples
  [ 0] _raw_spin_unlock_irqrestore_[k]
  [ 1] try_to_wake_up_[k]
  [ 2] wake_up_q_[k]
  [ 3] futex_wake_[k]
  [ 4] do_futex_[k]
  [ 5] __x64_sys_futex_[k]
  [ 6] do_syscall_64_[k]
  [ 7] entry_SYSCALL_64_after_hwframe_[k]
  [ 8] pthread_cond_signal@@GLIBC_2.3.2
  [ 9] jdk.internal.misc.Unsafe.unpark
  [10] java.util.concurrent.locks.LockSupport.unpark
  [11] java.util.concurrent.LinkedTransferQueue$Node.tryMatch
  [12] java.util.concurrent.LinkedTransferQueue.xfer
  [13] java.util.concurrent.LinkedTransferQueue.transfer
  [14] cats.effect.unsafe.WorkerThread.blockOn
  [15] scala.concurrent.package$.blocking
  [16] cats.effect.IOFiber.runLoop
  [17] cats.effect.IOFiber.execR
  [18] cats.effect.IOFiber.run
  [19] cats.effect.unsafe.WorkerThread.run

--- 451368733 ns (0.06%), 45 samples
  [ 0] dsl_dir_tempreserve_impl.constprop.0?[zfs]_[k]
  [ 1] dsl_dir_tempreserve_space?[zfs]_[k]
  [ 2] dmu_tx_try_assign?[zfs]_[k]
  [ 3] dmu_tx_assign?[zfs]_[k]
  [ 4] zfs_write?[zfs]_[k]
  [ 5] zpl_iter_write?[zfs]_[k]
  [ 6] new_sync_write_[k]
  [ 7] vfs_write_[k]
  [ 8] ksys_write_[k]
  [ 9] __x64_sys_write_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] write
  [13] sun.nio.ch.FileDispatcherImpl.write0
  [14] sun.nio.ch.FileDispatcherImpl.write
  [15] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [16] sun.nio.ch.IOUtil.write
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.FileChannelImpl.write
  [19] java.nio.channels.Channels.writeFullyImpl
  [20] java.nio.channels.Channels.writeFully
  [21] java.nio.channels.Channels$1.write
  [22] java.io.InputStream.transferTo
  [23] java.nio.file.Files.copy
  [24] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [25] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [26] jdk.nio.zipfs.ZipPath.newFileChannel
  [27] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [28] java.nio.channels.FileChannel.open
  [29] java.nio.channels.FileChannel.open
  [30] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [31] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d8b0f0.apply
  [32] cats.effect.IOFiber.$anonfun$8
  [33] cats.effect.IOFiber$$Lambda$703.0x0000000800eb2fc8.apply
  [34] cats.effect.unsafe.WorkerThread.blockOn
  [35] scala.concurrent.package$.blocking
  [36] cats.effect.IOFiber.runLoop
  [37] cats.effect.IOFiber.execR
  [38] cats.effect.IOFiber.run
  [39] cats.effect.unsafe.WorkerThread.run

--- 451301828 ns (0.06%), 45 samples
  [ 0] zil_aitx_compare?[zfs]_[k]
  [ 1] zil_itx_assign?[zfs]_[k]
  [ 2] zfs_log_write?[zfs]_[k]
  [ 3] zfs_write?[zfs]_[k]
  [ 4] zpl_iter_write?[zfs]_[k]
  [ 5] new_sync_write_[k]
  [ 6] vfs_write_[k]
  [ 7] ksys_write_[k]
  [ 8] __x64_sys_write_[k]
  [ 9] do_syscall_64_[k]
  [10] entry_SYSCALL_64_after_hwframe_[k]
  [11] write
  [12] sun.nio.ch.FileDispatcherImpl.write0
  [13] sun.nio.ch.FileDispatcherImpl.write
  [14] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [15] sun.nio.ch.IOUtil.write
  [16] sun.nio.ch.IOUtil.write
  [17] sun.nio.ch.FileChannelImpl.write
  [18] java.nio.channels.Channels.writeFullyImpl
  [19] java.nio.channels.Channels.writeFully
  [20] java.nio.channels.Channels$1.write
  [21] java.io.InputStream.transferTo
  [22] java.nio.file.Files.copy
  [23] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [24] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [25] jdk.nio.zipfs.ZipPath.newFileChannel
  [26] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [27] java.nio.channels.FileChannel.open
  [28] java.nio.channels.FileChannel.open
  [29] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [30] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d8b0f0.apply
  [31] cats.effect.IOFiber.$anonfun$8
  [32] cats.effect.IOFiber$$Lambda$703.0x0000000800eb2fc8.apply
  [33] cats.effect.unsafe.WorkerThread.blockOn
  [34] scala.concurrent.package$.blocking
  [35] cats.effect.IOFiber.runLoop
  [36] cats.effect.IOFiber.execR
  [37] cats.effect.IOFiber.run
  [38] cats.effect.unsafe.WorkerThread.run

--- 451263864 ns (0.06%), 45 samples
  [ 0] memset_[k]
  [ 1] spl_kmem_cache_alloc?[spl]_[k]
  [ 2] zio_data_buf_alloc?[zfs]_[k]
  [ 3] arc_get_data_buf?[zfs]_[k]
  [ 4] arc_buf_alloc_impl?[zfs]_[k]
  [ 5] arc_alloc_buf?[zfs]_[k]
  [ 6] dbuf_new_size?[zfs]_[k]
  [ 7] dnode_set_blksz?[zfs]_[k]
  [ 8] dmu_object_set_blocksize?[zfs]_[k]
  [ 9] zfs_grow_blocksize?[zfs]_[k]
  [10] zfs_write?[zfs]_[k]
  [11] zpl_iter_write?[zfs]_[k]
  [12] new_sync_write_[k]
  [13] vfs_write_[k]
  [14] ksys_write_[k]
  [15] __x64_sys_write_[k]
  [16] do_syscall_64_[k]
  [17] entry_SYSCALL_64_after_hwframe_[k]
  [18] write
  [19] sun.nio.ch.FileDispatcherImpl.write0
  [20] sun.nio.ch.FileDispatcherImpl.write
  [21] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [22] sun.nio.ch.IOUtil.write
  [23] sun.nio.ch.IOUtil.write
  [24] sun.nio.ch.FileChannelImpl.write
  [25] java.nio.channels.Channels.writeFullyImpl
  [26] java.nio.channels.Channels.writeFully
  [27] java.nio.channels.Channels$1.write
  [28] java.io.InputStream.transferTo
  [29] java.nio.file.Files.copy
  [30] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [31] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [32] jdk.nio.zipfs.ZipPath.newFileChannel
  [33] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [34] java.nio.channels.FileChannel.open
  [35] java.nio.channels.FileChannel.open
  [36] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [37] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d8b0f0.apply
  [38] cats.effect.IOFiber.$anonfun$8
  [39] cats.effect.IOFiber$$Lambda$703.0x0000000800eb2fc8.apply
  [40] cats.effect.unsafe.WorkerThread.blockOn
  [41] scala.concurrent.package$.blocking
  [42] cats.effect.IOFiber.runLoop
  [43] cats.effect.IOFiber.execR
  [44] cats.effect.IOFiber.run
  [45] cats.effect.unsafe.WorkerThread.run

--- 449275310 ns (0.06%), 44 samples
  [ 0] _raw_spin_unlock_irqrestore_[k]
  [ 1] try_to_wake_up_[k]
  [ 2] wake_up_q_[k]
  [ 3] futex_wake_[k]
  [ 4] do_futex_[k]
  [ 5] __x64_sys_futex_[k]
  [ 6] do_syscall_64_[k]
  [ 7] entry_SYSCALL_64_after_hwframe_[k]
  [ 8] pthread_cond_signal@@GLIBC_2.3.2
  [ 9] jdk.internal.misc.Unsafe.unpark
  [10] java.util.concurrent.locks.LockSupport.unpark
  [11] cats.effect.unsafe.WorkStealingThreadPool.notifyParked
  [12] cats.effect.unsafe.WorkStealingThreadPool.scheduleExternal
  [13] cats.effect.unsafe.WorkStealingThreadPool.execute
  [14] cats.effect.IO.unsafeRunFiber
  [15] cats.effect.IO.unsafeRunAsync
  [16] cats.effect.IOPlatform.unsafeRunTimed
  [17] cats.effect.IOPlatform.unsafeRunSync
  [18] com.scalamandra.ZipBench.streamFoldChunks
  [19] com.scalamandra.jmh_generated.ZipBench_streamFoldChunks_jmhTest.streamFoldChunks_thrpt_jmhStub
  [20] com.scalamandra.jmh_generated.ZipBench_streamFoldChunks_jmhTest.streamFoldChunks_Throughput
  [21] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [22] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [23] java.lang.reflect.Method.invoke
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.Executors$RunnableAdapter.call
  [28] java.util.concurrent.FutureTask.run
  [29] java.util.concurrent.ThreadPoolExecutor.runWorker
  [30] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [31] java.lang.Thread.run

--- 441177144 ns (0.06%), 44 samples
  [ 0] memcg_slab_post_alloc_hook_[k]
  [ 1] __kmalloc_[k]
  [ 2] inotify_handle_inode_event_[k]
  [ 3] fsnotify_handle_inode_event.isra.0_[k]
  [ 4] send_to_group_[k]
  [ 5] fsnotify_[k]
  [ 6] __fsnotify_parent_[k]
  [ 7] vfs_write_[k]
  [ 8] ksys_write_[k]
  [ 9] __x64_sys_write_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] write
  [13] sun.nio.ch.FileDispatcherImpl.write0
  [14] sun.nio.ch.FileDispatcherImpl.write
  [15] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [16] sun.nio.ch.IOUtil.write
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.FileChannelImpl.write
  [19] java.nio.channels.Channels.writeFullyImpl
  [20] java.nio.channels.Channels.writeFully
  [21] java.nio.channels.Channels$1.write
  [22] java.io.InputStream.transferTo
  [23] java.nio.file.Files.copy
  [24] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [25] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [26] jdk.nio.zipfs.ZipPath.newFileChannel
  [27] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [28] java.nio.channels.FileChannel.open
  [29] java.nio.channels.FileChannel.open
  [30] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [31] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d8b0f0.apply
  [32] cats.effect.IOFiber.$anonfun$8
  [33] cats.effect.IOFiber$$Lambda$703.0x0000000800eb2fc8.apply
  [34] cats.effect.unsafe.WorkerThread.blockOn
  [35] scala.concurrent.package$.blocking
  [36] cats.effect.IOFiber.runLoop
  [37] cats.effect.IOFiber.execR
  [38] cats.effect.IOFiber.run
  [39] cats.effect.unsafe.WorkerThread.run

--- 441076870 ns (0.06%), 44 samples
  [ 0] _raw_spin_unlock_irqrestore_[k]
  [ 1] try_to_wake_up_[k]
  [ 2] wake_up_q_[k]
  [ 3] futex_wake_[k]
  [ 4] do_futex_[k]
  [ 5] __x64_sys_futex_[k]
  [ 6] do_syscall_64_[k]
  [ 7] entry_SYSCALL_64_after_hwframe_[k]
  [ 8] pthread_cond_signal@@GLIBC_2.3.2
  [ 9] jdk.internal.misc.Unsafe.unpark
  [10] java.util.concurrent.locks.LockSupport.unpark
  [11] java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext
  [12] java.util.concurrent.locks.AbstractQueuedSynchronizer.release
  [13] java.util.concurrent.locks.ReentrantLock.unlock
  [14] java.util.concurrent.ArrayBlockingQueue.offer
  [15] cats.effect.IOPlatform.unsafeRunTimed$$anonfun$1
  [16] cats.effect.IOPlatform$$Lambda$358.0x0000000800e05000.applyVoid
  [17] scala.runtime.function.JProcedure1.apply
  [18] scala.runtime.function.JProcedure1.apply
  [19] cats.effect.IO.unsafeRunAsync$$anonfun$3
  [20] cats.effect.IO$$Lambda$371.0x0000000800e09b20.applyVoid
  [21] scala.runtime.function.JProcedure1.apply
  [22] scala.runtime.function.JProcedure1.apply
  [23] cats.effect.IO.$anonfun$6$$anonfun$3
  [24] cats.effect.IO$$Lambda$1202.0x0000000800f40408.applyVoid
  [25] scala.runtime.function.JProcedure1.apply
  [26] scala.runtime.function.JProcedure1.apply
  [27] cats.effect.kernel.Outcome.fold
  [28] cats.effect.kernel.Outcome.fold$
  [29] cats.effect.kernel.Outcome$Succeeded.fold
  [30] cats.effect.IO.$anonfun$6
  [31] cats.effect.IO$$Lambda$379.0x0000000800e0cde0.applyVoid
  [32] scala.runtime.function.JProcedure1.apply
  [33] scala.runtime.function.JProcedure1.apply
  [34] cats.effect.CallbackStack.apply
  [35] cats.effect.IOFiber.done
  [36] cats.effect.IOFiber.runTerminusSuccessK
  [37] cats.effect.IOFiber.succeeded
  [38] cats.effect.IOFiber.runLoop
  [39] cats.effect.IOFiber.execR
  [40] cats.effect.IOFiber.run
  [41] cats.effect.unsafe.WorkerThread.run

--- 430876124 ns (0.06%), 43 samples
  [ 0] scala.reflect.ManifestFactory$ByteManifest.newArray
  [ 1] scala.reflect.ManifestFactory$ByteManifest.newArray
  [ 2] scala.runtime.Arrays$.newGenericArray
  [ 3] fs2.Chunk.toArray
  [ 4] com.scalamandra.ZipLib$.com$scalamandra$ZipLib$$anon$1$$_$streamFoldChunks$$anonfun$1
  [ 5] com.scalamandra.ZipLib$$anon$1$$Lambda$269.0x0000000800dd0b58.apply
  [ 6] cats.effect.IOFiber.succeeded
  [ 7] cats.effect.IOFiber.runLoop
  [ 8] cats.effect.IOFiber.execR
  [ 9] cats.effect.IOFiber.run
  [10] cats.effect.unsafe.WorkerThread.run

--- 421514201 ns (0.06%), 42 samples
  [ 0] itable stub
  [ 1] cats.effect.IOFiber.runLoop
  [ 2] cats.effect.IOFiber.execR
  [ 3] cats.effect.IOFiber.run
  [ 4] cats.effect.unsafe.WorkerThread.run

--- 421097881 ns (0.06%), 42 samples
  [ 0] copy_user_generic_string_[k]
  [ 1] zfs_uiomove_iter?[zfs]_[k]
  [ 2] zfs_uiomove?[zfs]_[k]
  [ 3] dmu_read_uio_dnode?[zfs]_[k]
  [ 4] dmu_read_uio_dbuf?[zfs]_[k]
  [ 5] mappedread?[zfs]_[k]
  [ 6] zfs_read?[zfs]_[k]
  [ 7] zpl_iter_read?[zfs]_[k]
  [ 8] new_sync_read_[k]
  [ 9] vfs_read_[k]
  [10] __x64_sys_pread64_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] __libc_pread64
  [14] sun.nio.ch.FileDispatcherImpl.pread0
  [15] sun.nio.ch.FileDispatcherImpl.pread
  [16] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [17] sun.nio.ch.IOUtil.read
  [18] sun.nio.ch.IOUtil.read
  [19] sun.nio.ch.FileChannelImpl.readInternal
  [20] sun.nio.ch.FileChannelImpl.read
  [21] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [22] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [23] jdk.nio.zipfs.ZipFileSystem$2.fill
  [24] java.util.zip.InflaterInputStream.read
  [25] java.io.InputStream.transferTo
  [26] java.nio.file.Files.copy
  [27] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [28] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [29] jdk.nio.zipfs.ZipPath.newFileChannel
  [30] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [31] java.nio.channels.FileChannel.open
  [32] java.nio.channels.FileChannel.open
  [33] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [34] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d8b0f0.apply
  [35] cats.effect.IOFiber.$anonfun$8
  [36] cats.effect.IOFiber$$Lambda$703.0x0000000800eb2fc8.apply
  [37] cats.effect.unsafe.WorkerThread.blockOn
  [38] scala.concurrent.package$.blocking
  [39] cats.effect.IOFiber.runLoop
  [40] cats.effect.IOFiber.execR
  [41] cats.effect.IOFiber.run
  [42] cats.effect.unsafe.WorkerThread.run

--- 411263123 ns (0.06%), 41 samples
  [ 0] kfree_[k]
  [ 1] spl_kmem_free_impl?[spl]_[k]
  [ 2] spl_kmem_free?[spl]_[k]
  [ 3] dsl_dir_tempreserve_clear?[zfs]_[k]
  [ 4] dmu_tx_commit?[zfs]_[k]
  [ 5] zfs_write?[zfs]_[k]
  [ 6] zpl_iter_write?[zfs]_[k]
  [ 7] new_sync_write_[k]
  [ 8] vfs_write_[k]
  [ 9] ksys_write_[k]
  [10] __x64_sys_write_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] write
  [14] sun.nio.ch.FileDispatcherImpl.write0
  [15] sun.nio.ch.FileDispatcherImpl.write
  [16] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.FileChannelImpl.write
  [20] java.nio.channels.Channels.writeFullyImpl
  [21] java.nio.channels.Channels.writeFully
  [22] java.nio.channels.Channels$1.write
  [23] java.io.InputStream.transferTo
  [24] java.nio.file.Files.copy
  [25] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [26] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [27] jdk.nio.zipfs.ZipPath.newFileChannel
  [28] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [29] java.nio.channels.FileChannel.open
  [30] java.nio.channels.FileChannel.open
  [31] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [32] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d8b0f0.apply
  [33] cats.effect.IOFiber.$anonfun$8
  [34] cats.effect.IOFiber$$Lambda$703.0x0000000800eb2fc8.apply
  [35] cats.effect.unsafe.WorkerThread.blockOn
  [36] scala.concurrent.package$.blocking
  [37] cats.effect.IOFiber.runLoop
  [38] cats.effect.IOFiber.execR
  [39] cats.effect.IOFiber.run
  [40] cats.effect.unsafe.WorkerThread.run

--- 411037104 ns (0.06%), 41 samples
  [ 0] inotify_handle_inode_event_[k]
  [ 1] fsnotify_handle_inode_event.isra.0_[k]
  [ 2] send_to_group_[k]
  [ 3] fsnotify_[k]
  [ 4] __fsnotify_parent_[k]
  [ 5] vfs_write_[k]
  [ 6] ksys_write_[k]
  [ 7] __x64_sys_write_[k]
  [ 8] do_syscall_64_[k]
  [ 9] entry_SYSCALL_64_after_hwframe_[k]
  [10] write
  [11] sun.nio.ch.FileDispatcherImpl.write0
  [12] sun.nio.ch.FileDispatcherImpl.write
  [13] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [14] sun.nio.ch.IOUtil.write
  [15] sun.nio.ch.IOUtil.write
  [16] sun.nio.ch.FileChannelImpl.write
  [17] java.nio.channels.Channels.writeFullyImpl
  [18] java.nio.channels.Channels.writeFully
  [19] java.nio.channels.Channels$1.write
  [20] java.io.InputStream.transferTo
  [21] java.nio.file.Files.copy
  [22] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [23] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [24] jdk.nio.zipfs.ZipPath.newFileChannel
  [25] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [26] java.nio.channels.FileChannel.open
  [27] java.nio.channels.FileChannel.open
  [28] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [29] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d8b0f0.apply
  [30] cats.effect.IOFiber.$anonfun$8
  [31] cats.effect.IOFiber$$Lambda$703.0x0000000800eb2fc8.apply
  [32] cats.effect.unsafe.WorkerThread.blockOn
  [33] scala.concurrent.package$.blocking
  [34] cats.effect.IOFiber.runLoop
  [35] cats.effect.IOFiber.execR
  [36] cats.effect.IOFiber.run
  [37] cats.effect.unsafe.WorkerThread.run

--- 411022160 ns (0.06%), 41 samples
  [ 0] strcpy_[k]
  [ 1] fsnotify_handle_inode_event.isra.0_[k]
  [ 2] send_to_group_[k]
  [ 3] fsnotify_[k]
  [ 4] __fsnotify_parent_[k]
  [ 5] vfs_write_[k]
  [ 6] ksys_write_[k]
  [ 7] __x64_sys_write_[k]
  [ 8] do_syscall_64_[k]
  [ 9] entry_SYSCALL_64_after_hwframe_[k]
  [10] write
  [11] sun.nio.ch.FileDispatcherImpl.write0
  [12] sun.nio.ch.FileDispatcherImpl.write
  [13] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [14] sun.nio.ch.IOUtil.write
  [15] sun.nio.ch.IOUtil.write
  [16] sun.nio.ch.FileChannelImpl.write
  [17] java.nio.channels.Channels.writeFullyImpl
  [18] java.nio.channels.Channels.writeFully
  [19] java.nio.channels.Channels$1.write
  [20] java.io.InputStream.transferTo
  [21] java.nio.file.Files.copy
  [22] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [23] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [24] jdk.nio.zipfs.ZipPath.newFileChannel
  [25] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [26] java.nio.channels.FileChannel.open
  [27] java.nio.channels.FileChannel.open
  [28] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [29] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d8b0f0.apply
  [30] cats.effect.IOFiber.$anonfun$8
  [31] cats.effect.IOFiber$$Lambda$703.0x0000000800eb2fc8.apply
  [32] cats.effect.unsafe.WorkerThread.blockOn
  [33] scala.concurrent.package$.blocking
  [34] cats.effect.IOFiber.runLoop
  [35] cats.effect.IOFiber.execR
  [36] cats.effect.IOFiber.run
  [37] cats.effect.unsafe.WorkerThread.run

--- 401128595 ns (0.06%), 40 samples
  [ 0] __get_obj_cgroup_from_memcg_[k]
  [ 1] get_obj_cgroup_from_current_[k]
  [ 2] __kmalloc_[k]
  [ 3] inotify_handle_inode_event_[k]
  [ 4] fsnotify_handle_inode_event.isra.0_[k]
  [ 5] send_to_group_[k]
  [ 6] fsnotify_[k]
  [ 7] __fsnotify_parent_[k]
  [ 8] vfs_write_[k]
  [ 9] ksys_write_[k]
  [10] __x64_sys_write_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] write
  [14] sun.nio.ch.FileDispatcherImpl.write0
  [15] sun.nio.ch.FileDispatcherImpl.write
  [16] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.FileChannelImpl.write
  [20] java.nio.channels.Channels.writeFullyImpl
  [21] java.nio.channels.Channels.writeFully
  [22] java.nio.channels.Channels$1.write
  [23] java.io.InputStream.transferTo
  [24] java.nio.file.Files.copy
  [25] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [26] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [27] jdk.nio.zipfs.ZipPath.newFileChannel
  [28] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [29] java.nio.channels.FileChannel.open
  [30] java.nio.channels.FileChannel.open
  [31] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [32] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d8b0f0.apply
  [33] cats.effect.IOFiber.$anonfun$8
  [34] cats.effect.IOFiber$$Lambda$703.0x0000000800eb2fc8.apply
  [35] cats.effect.unsafe.WorkerThread.blockOn
  [36] scala.concurrent.package$.blocking
  [37] cats.effect.IOFiber.runLoop
  [38] cats.effect.IOFiber.execR
  [39] cats.effect.IOFiber.run
  [40] cats.effect.unsafe.WorkerThread.run

--- 401040733 ns (0.06%), 40 samples
  [ 0] page_counter_try_charge_[k]
  [ 1] try_charge_memcg_[k]
  [ 2] obj_cgroup_charge_[k]
  [ 3] __kmalloc_[k]
  [ 4] inotify_handle_inode_event_[k]
  [ 5] fsnotify_handle_inode_event.isra.0_[k]
  [ 6] send_to_group_[k]
  [ 7] fsnotify_[k]
  [ 8] __fsnotify_parent_[k]
  [ 9] vfs_write_[k]
  [10] ksys_write_[k]
  [11] __x64_sys_write_[k]
  [12] do_syscall_64_[k]
  [13] entry_SYSCALL_64_after_hwframe_[k]
  [14] write
  [15] sun.nio.ch.FileDispatcherImpl.write0
  [16] sun.nio.ch.FileDispatcherImpl.write
  [17] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.IOUtil.write
  [20] sun.nio.ch.FileChannelImpl.write
  [21] java.nio.channels.Channels.writeFullyImpl
  [22] java.nio.channels.Channels.writeFully
  [23] java.nio.channels.Channels$1.write
  [24] java.io.InputStream.transferTo
  [25] java.nio.file.Files.copy
  [26] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [27] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [28] jdk.nio.zipfs.ZipPath.newFileChannel
  [29] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [30] java.nio.channels.FileChannel.open
  [31] java.nio.channels.FileChannel.open
  [32] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [33] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d8b0f0.apply
  [34] cats.effect.IOFiber.$anonfun$8
  [35] cats.effect.IOFiber$$Lambda$703.0x0000000800eb2fc8.apply
  [36] cats.effect.unsafe.WorkerThread.blockOn
  [37] scala.concurrent.package$.blocking
  [38] cats.effect.IOFiber.runLoop
  [39] cats.effect.IOFiber.execR
  [40] cats.effect.IOFiber.run
  [41] cats.effect.unsafe.WorkerThread.run

--- 371094424 ns (0.05%), 37 samples
  [ 0] _raw_spin_unlock_irqrestore_[k]
  [ 1] try_to_wake_up_[k]
  [ 2] wake_up_q_[k]
  [ 3] rwsem_wake.isra.0_[k]
  [ 4] up_write_[k]
  [ 5] open_last_lookups_[k]
  [ 6] path_openat_[k]
  [ 7] do_filp_open_[k]
  [ 8] do_sys_openat2_[k]
  [ 9] __x64_sys_openat_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] __open64
  [13] [unknown]
  [14] sun.nio.fs.UnixNativeDispatcher.open0
  [15] sun.nio.fs.UnixNativeDispatcher.open
  [16] sun.nio.fs.UnixChannelFactory.open
  [17] sun.nio.fs.UnixChannelFactory.newFileChannel
  [18] sun.nio.fs.UnixChannelFactory.newFileChannel
  [19] sun.nio.fs.UnixFileSystemProvider.newByteChannel
  [20] java.nio.file.Files.newByteChannel
  [21] java.nio.file.Files.createFile
  [22] java.nio.file.TempFileHelper.create
  [23] java.nio.file.TempFileHelper.createTempFile
  [24] java.nio.file.Files.createTempFile
  [25] jdk.nio.zipfs.ZipFileSystem.createTempFileInSameDirectoryAs
  [26] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [27] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [28] jdk.nio.zipfs.ZipPath.newFileChannel
  [29] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [30] java.nio.channels.FileChannel.open
  [31] java.nio.channels.FileChannel.open
  [32] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [33] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d8b0f0.apply
  [34] cats.effect.IOFiber.$anonfun$8
  [35] cats.effect.IOFiber$$Lambda$703.0x0000000800eb2fc8.apply
  [36] cats.effect.unsafe.WorkerThread.blockOn
  [37] scala.concurrent.package$.blocking
  [38] cats.effect.IOFiber.runLoop
  [39] cats.effect.IOFiber.execR
  [40] cats.effect.IOFiber.run
  [41] cats.effect.unsafe.WorkerThread.run

--- 361066267 ns (0.05%), 36 samples
  [ 0] find_vmap_area_[k]
  [ 1] check_heap_object_[k]
  [ 2] __check_object_size.part.0_[k]
  [ 3] __check_object_size_[k]
  [ 4] zfs_uiomove_iter?[zfs]_[k]
  [ 5] zfs_uiomove?[zfs]_[k]
  [ 6] dmu_read_uio_dnode?[zfs]_[k]
  [ 7] dmu_read_uio_dbuf?[zfs]_[k]
  [ 8] mappedread?[zfs]_[k]
  [ 9] zfs_read?[zfs]_[k]
  [10] zpl_iter_read?[zfs]_[k]
  [11] new_sync_read_[k]
  [12] vfs_read_[k]
  [13] __x64_sys_pread64_[k]
  [14] do_syscall_64_[k]
  [15] entry_SYSCALL_64_after_hwframe_[k]
  [16] __libc_pread64
  [17] sun.nio.ch.FileDispatcherImpl.pread0
  [18] sun.nio.ch.FileDispatcherImpl.pread
  [19] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [20] sun.nio.ch.IOUtil.read
  [21] sun.nio.ch.IOUtil.read
  [22] sun.nio.ch.FileChannelImpl.readInternal
  [23] sun.nio.ch.FileChannelImpl.read
  [24] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [25] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [26] jdk.nio.zipfs.ZipFileSystem$Entry.readLocEXTT
  [27] jdk.nio.zipfs.ZipFileSystem$Entry.readExtra
  [28] jdk.nio.zipfs.ZipFileSystem$Entry.readCEN
  [29] jdk.nio.zipfs.ZipFileSystem$Entry.<init>
  [30] jdk.nio.zipfs.ZipFileSystem.getEntry
  [31] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [32] jdk.nio.zipfs.ZipPath.newFileChannel
  [33] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [34] java.nio.channels.FileChannel.open
  [35] java.nio.channels.FileChannel.open
  [36] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [37] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d8b0f0.apply
  [38] cats.effect.IOFiber.$anonfun$8
  [39] cats.effect.IOFiber$$Lambda$703.0x0000000800eb2fc8.apply
  [40] cats.effect.unsafe.WorkerThread.blockOn
  [41] scala.concurrent.package$.blocking
  [42] cats.effect.IOFiber.runLoop
  [43] cats.effect.IOFiber.execR
  [44] cats.effect.IOFiber.run
  [45] cats.effect.unsafe.WorkerThread.run

--- 360908424 ns (0.05%), 36 samples
  [ 0] zfs_write?[zfs]_[k]
  [ 1] zpl_iter_write?[zfs]_[k]
  [ 2] new_sync_write_[k]
  [ 3] vfs_write_[k]
  [ 4] ksys_write_[k]
  [ 5] __x64_sys_write_[k]
  [ 6] do_syscall_64_[k]
  [ 7] entry_SYSCALL_64_after_hwframe_[k]
  [ 8] write
  [ 9] sun.nio.ch.FileDispatcherImpl.write0
  [10] sun.nio.ch.FileDispatcherImpl.write
  [11] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [12] sun.nio.ch.IOUtil.write
  [13] sun.nio.ch.IOUtil.write
  [14] sun.nio.ch.FileChannelImpl.write
  [15] java.nio.channels.Channels.writeFullyImpl
  [16] java.nio.channels.Channels.writeFully
  [17] java.nio.channels.Channels$1.write
  [18] java.io.InputStream.transferTo
  [19] java.nio.file.Files.copy
  [20] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [21] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [22] jdk.nio.zipfs.ZipPath.newFileChannel
  [23] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [24] java.nio.channels.FileChannel.open
  [25] java.nio.channels.FileChannel.open
  [26] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [27] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d8b0f0.apply
  [28] cats.effect.IOFiber.$anonfun$8
  [29] cats.effect.IOFiber$$Lambda$703.0x0000000800eb2fc8.apply
  [30] cats.effect.unsafe.WorkerThread.blockOn
  [31] scala.concurrent.package$.blocking
  [32] cats.effect.IOFiber.runLoop
  [33] cats.effect.IOFiber.execR
  [34] cats.effect.IOFiber.run
  [35] cats.effect.unsafe.WorkerThread.run

--- 350992919 ns (0.05%), 35 samples
  [ 0] sa_attr_op?[zfs]_[k]
  [ 1] sa_bulk_update_impl?[zfs]_[k]
  [ 2] sa_bulk_update?[zfs]_[k]
  [ 3] zfs_write?[zfs]_[k]
  [ 4] zpl_iter_write?[zfs]_[k]
  [ 5] new_sync_write_[k]
  [ 6] vfs_write_[k]
  [ 7] ksys_write_[k]
  [ 8] __x64_sys_write_[k]
  [ 9] do_syscall_64_[k]
  [10] entry_SYSCALL_64_after_hwframe_[k]
  [11] write
  [12] sun.nio.ch.FileDispatcherImpl.write0
  [13] sun.nio.ch.FileDispatcherImpl.write
  [14] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [15] sun.nio.ch.IOUtil.write
  [16] sun.nio.ch.IOUtil.write
  [17] sun.nio.ch.FileChannelImpl.write
  [18] java.nio.channels.Channels.writeFullyImpl
  [19] java.nio.channels.Channels.writeFully
  [20] java.nio.channels.Channels$1.write
  [21] java.io.InputStream.transferTo
  [22] java.nio.file.Files.copy
  [23] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [24] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [25] jdk.nio.zipfs.ZipPath.newFileChannel
  [26] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [27] java.nio.channels.FileChannel.open
  [28] java.nio.channels.FileChannel.open
  [29] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [30] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d8b0f0.apply
  [31] cats.effect.IOFiber.$anonfun$8
  [32] cats.effect.IOFiber$$Lambda$703.0x0000000800eb2fc8.apply
  [33] cats.effect.unsafe.WorkerThread.blockOn
  [34] scala.concurrent.package$.blocking
  [35] cats.effect.IOFiber.runLoop
  [36] cats.effect.IOFiber.execR
  [37] cats.effect.IOFiber.run
  [38] cats.effect.unsafe.WorkerThread.run

--- 350584725 ns (0.05%), 35 samples
  [ 0] scala.reflect.ManifestFactory$ByteManifest.newArray
  [ 1] scala.reflect.ManifestFactory$ByteManifest.newArray
  [ 2] scala.runtime.Arrays$.newGenericArray
  [ 3] fs2.Chunk.toArray
  [ 4] com.scalamandra.ZipLib$.com$scalamandra$ZipLib$$anon$1$$_$streamFoldChunks$$anonfun$1
  [ 5] com.scalamandra.ZipLib$$anon$1$$Lambda$269.0x0000000800dd0b58.apply
  [ 6] cats.effect.IOFiber.succeeded
  [ 7] cats.effect.IOFiber.runLoop
  [ 8] cats.effect.IOFiber.execR
  [ 9] cats.effect.IOFiber.run
  [10] cats.effect.unsafe.WorkerThread.run

--- 341036440 ns (0.05%), 34 samples
  [ 0] zio_create?[zfs]_[k]
  [ 1] zio_null?[zfs]_[k]
  [ 2] zio_root?[zfs]_[k]
  [ 3] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 4] dmu_read_uio_dnode?[zfs]_[k]
  [ 5] dmu_read_uio_dbuf?[zfs]_[k]
  [ 6] mappedread?[zfs]_[k]
  [ 7] zfs_read?[zfs]_[k]
  [ 8] zpl_iter_read?[zfs]_[k]
  [ 9] new_sync_read_[k]
  [10] vfs_read_[k]
  [11] __x64_sys_pread64_[k]
  [12] do_syscall_64_[k]
  [13] entry_SYSCALL_64_after_hwframe_[k]
  [14] __libc_pread64
  [15] sun.nio.ch.FileDispatcherImpl.pread0
  [16] sun.nio.ch.FileDispatcherImpl.pread
  [17] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [18] sun.nio.ch.IOUtil.read
  [19] sun.nio.ch.IOUtil.read
  [20] sun.nio.ch.FileChannelImpl.readInternal
  [21] sun.nio.ch.FileChannelImpl.read
  [22] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [23] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [24] jdk.nio.zipfs.ZipFileSystem$2.fill
  [25] java.util.zip.InflaterInputStream.read
  [26] java.io.InputStream.transferTo
  [27] java.nio.file.Files.copy
  [28] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [29] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [30] jdk.nio.zipfs.ZipPath.newFileChannel
  [31] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [32] java.nio.channels.FileChannel.open
  [33] java.nio.channels.FileChannel.open
  [34] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [35] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d8b0f0.apply
  [36] cats.effect.IOFiber.$anonfun$8
  [37] cats.effect.IOFiber$$Lambda$703.0x0000000800eb2fc8.apply
  [38] cats.effect.unsafe.WorkerThread.blockOn
  [39] scala.concurrent.package$.blocking
  [40] cats.effect.IOFiber.runLoop
  [41] cats.effect.IOFiber.execR
  [42] cats.effect.IOFiber.run
  [43] cats.effect.unsafe.WorkerThread.run

--- 330917064 ns (0.05%), 33 samples
  [ 0] itable stub
  [ 1] cats.effect.IOFiber.runLoop
  [ 2] cats.effect.IOFiber.execR
  [ 3] cats.effect.IOFiber.run
  [ 4] cats.effect.unsafe.WorkerThread.run

--- 330882702 ns (0.05%), 33 samples
  [ 0] _raw_spin_unlock_irqrestore_[k]
  [ 1] hrtimer_start_range_ns_[k]
  [ 2] hrtimer_sleeper_start_expires_[k]
  [ 3] futex_wait_queue_[k]
  [ 4] futex_wait_[k]
  [ 5] do_futex_[k]
  [ 6] __x64_sys_futex_[k]
  [ 7] do_syscall_64_[k]
  [ 8] entry_SYSCALL_64_after_hwframe_[k]
  [ 9] __futex_abstimed_wait_cancelable64
  [10] [unknown]
  [11] jdk.internal.misc.Unsafe.park
  [12] java.util.concurrent.locks.LockSupport.parkNanos
  [13] java.util.concurrent.LinkedTransferQueue.awaitMatch
  [14] java.util.concurrent.LinkedTransferQueue.xfer
  [15] java.util.concurrent.LinkedTransferQueue.poll
  [16] cats.effect.unsafe.WorkerThread.run

--- 330878988 ns (0.05%), 33 samples
  [ 0] _raw_spin_unlock_irqrestore_[k]
  [ 1] try_to_wake_up_[k]
  [ 2] wake_up_q_[k]
  [ 3] futex_wake_[k]
  [ 4] do_futex_[k]
  [ 5] __x64_sys_futex_[k]
  [ 6] do_syscall_64_[k]
  [ 7] entry_SYSCALL_64_after_hwframe_[k]
  [ 8] pthread_cond_signal@@GLIBC_2.3.2
  [ 9] jdk.internal.misc.Unsafe.unpark
  [10] java.util.concurrent.locks.LockSupport.unpark
  [11] java.util.concurrent.LinkedTransferQueue$Node.tryMatch
  [12] java.util.concurrent.LinkedTransferQueue.xfer
  [13] java.util.concurrent.LinkedTransferQueue.transfer
  [14] cats.effect.unsafe.WorkerThread.blockOn
  [15] scala.concurrent.package$.blocking
  [16] cats.effect.IOFiber.runLoop
  [17] cats.effect.IOFiber.execR
  [18] cats.effect.IOFiber.run
  [19] cats.effect.unsafe.WorkerThread.run

--- 330837792 ns (0.05%), 33 samples
  [ 0] try_charge_memcg_[k]
  [ 1] obj_cgroup_charge_[k]
  [ 2] __kmalloc_[k]
  [ 3] inotify_handle_inode_event_[k]
  [ 4] fsnotify_handle_inode_event.isra.0_[k]
  [ 5] send_to_group_[k]
  [ 6] fsnotify_[k]
  [ 7] __fsnotify_parent_[k]
  [ 8] vfs_write_[k]
  [ 9] ksys_write_[k]
  [10] __x64_sys_write_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] write
  [14] sun.nio.ch.FileDispatcherImpl.write0
  [15] sun.nio.ch.FileDispatcherImpl.write
  [16] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.FileChannelImpl.write
  [20] java.nio.channels.Channels.writeFullyImpl
  [21] java.nio.channels.Channels.writeFully
  [22] java.nio.channels.Channels$1.write
  [23] java.io.InputStream.transferTo
  [24] java.nio.file.Files.copy
  [25] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [26] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [27] jdk.nio.zipfs.ZipPath.newFileChannel
  [28] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [29] java.nio.channels.FileChannel.open
  [30] java.nio.channels.FileChannel.open
  [31] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [32] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d8b0f0.apply
  [33] cats.effect.IOFiber.$anonfun$8
  [34] cats.effect.IOFiber$$Lambda$703.0x0000000800eb2fc8.apply
  [35] cats.effect.unsafe.WorkerThread.blockOn
  [36] scala.concurrent.package$.blocking
  [37] cats.effect.IOFiber.runLoop
  [38] cats.effect.IOFiber.execR
  [39] cats.effect.IOFiber.run
  [40] cats.effect.unsafe.WorkerThread.run

--- 330797924 ns (0.05%), 33 samples
  [ 0] spl_kmem_cache_alloc?[spl]_[k]
  [ 1] zio_data_buf_alloc?[zfs]_[k]
  [ 2] arc_get_data_buf?[zfs]_[k]
  [ 3] arc_buf_alloc_impl?[zfs]_[k]
  [ 4] arc_alloc_buf?[zfs]_[k]
  [ 5] dbuf_new_size?[zfs]_[k]
  [ 6] dnode_set_blksz?[zfs]_[k]
  [ 7] dmu_object_set_blocksize?[zfs]_[k]
  [ 8] zfs_grow_blocksize?[zfs]_[k]
  [ 9] zfs_write?[zfs]_[k]
  [10] zpl_iter_write?[zfs]_[k]
  [11] new_sync_write_[k]
  [12] vfs_write_[k]
  [13] ksys_write_[k]
  [14] __x64_sys_write_[k]
  [15] do_syscall_64_[k]
  [16] entry_SYSCALL_64_after_hwframe_[k]
  [17] write
  [18] sun.nio.ch.FileDispatcherImpl.write0
  [19] sun.nio.ch.FileDispatcherImpl.write
  [20] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [21] sun.nio.ch.IOUtil.write
  [22] sun.nio.ch.IOUtil.write
  [23] sun.nio.ch.FileChannelImpl.write
  [24] java.nio.channels.Channels.writeFullyImpl
  [25] java.nio.channels.Channels.writeFully
  [26] java.nio.channels.Channels$1.write
  [27] java.io.InputStream.transferTo
  [28] java.nio.file.Files.copy
  [29] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [30] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [31] jdk.nio.zipfs.ZipPath.newFileChannel
  [32] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [33] java.nio.channels.FileChannel.open
  [34] java.nio.channels.FileChannel.open
  [35] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [36] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d8b0f0.apply
  [37] cats.effect.IOFiber.$anonfun$8
  [38] cats.effect.IOFiber$$Lambda$703.0x0000000800eb2fc8.apply
  [39] cats.effect.unsafe.WorkerThread.blockOn
  [40] scala.concurrent.package$.blocking
  [41] cats.effect.IOFiber.runLoop
  [42] cats.effect.IOFiber.execR
  [43] cats.effect.IOFiber.run
  [44] cats.effect.unsafe.WorkerThread.run

--- 330750114 ns (0.05%), 33 samples
  [ 0] syscall_enter_from_user_mode_[k]
  [ 1] do_syscall_64_[k]
  [ 2] entry_SYSCALL_64_after_hwframe_[k]
  [ 3] write
  [ 4] sun.nio.ch.FileDispatcherImpl.write0
  [ 5] sun.nio.ch.FileDispatcherImpl.write
  [ 6] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [ 7] sun.nio.ch.IOUtil.write
  [ 8] sun.nio.ch.IOUtil.write
  [ 9] sun.nio.ch.FileChannelImpl.write
  [10] java.nio.channels.Channels.writeFullyImpl
  [11] java.nio.channels.Channels.writeFully
  [12] java.nio.channels.Channels$1.write
  [13] java.io.InputStream.transferTo
  [14] java.nio.file.Files.copy
  [15] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [16] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [17] jdk.nio.zipfs.ZipPath.newFileChannel
  [18] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [19] java.nio.channels.FileChannel.open
  [20] java.nio.channels.FileChannel.open
  [21] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [22] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d8b0f0.apply
  [23] cats.effect.IOFiber.$anonfun$8
  [24] cats.effect.IOFiber$$Lambda$703.0x0000000800eb2fc8.apply
  [25] cats.effect.unsafe.WorkerThread.blockOn
  [26] scala.concurrent.package$.blocking
  [27] cats.effect.IOFiber.runLoop
  [28] cats.effect.IOFiber.execR
  [29] cats.effect.IOFiber.run
  [30] cats.effect.unsafe.WorkerThread.run

--- 320986774 ns (0.04%), 32 samples
  [ 0] memset_[k]
  [ 1] spl_kmem_cache_alloc?[spl]_[k]
  [ 2] zio_data_buf_alloc?[zfs]_[k]
  [ 3] zil_itx_create?[zfs]_[k]
  [ 4] zfs_log_write?[zfs]_[k]
  [ 5] zfs_write?[zfs]_[k]
  [ 6] zpl_iter_write?[zfs]_[k]
  [ 7] new_sync_write_[k]
  [ 8] vfs_write_[k]
  [ 9] ksys_write_[k]
  [10] __x64_sys_write_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] write
  [14] sun.nio.ch.FileDispatcherImpl.write0
  [15] sun.nio.ch.FileDispatcherImpl.write
  [16] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.FileChannelImpl.write
  [20] java.nio.channels.Channels.writeFullyImpl
  [21] java.nio.channels.Channels.writeFully
  [22] java.nio.channels.Channels$1.write
  [23] java.io.InputStream.transferTo
  [24] java.nio.file.Files.copy
  [25] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [26] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [27] jdk.nio.zipfs.ZipPath.newFileChannel
  [28] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [29] java.nio.channels.FileChannel.open
  [30] java.nio.channels.FileChannel.open
  [31] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [32] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d8b0f0.apply
  [33] cats.effect.IOFiber.$anonfun$8
  [34] cats.effect.IOFiber$$Lambda$703.0x0000000800eb2fc8.apply
  [35] cats.effect.unsafe.WorkerThread.blockOn
  [36] scala.concurrent.package$.blocking
  [37] cats.effect.IOFiber.runLoop
  [38] cats.effect.IOFiber.execR
  [39] cats.effect.IOFiber.run
  [40] cats.effect.unsafe.WorkerThread.run

--- 320847228 ns (0.04%), 32 samples
  [ 0] _raw_spin_unlock_irqrestore_[k]
  [ 1] __wake_up_common_lock_[k]
  [ 2] __wake_up_[k]
  [ 3] fsnotify_insert_event_[k]
  [ 4] inotify_handle_inode_event_[k]
  [ 5] fsnotify_handle_inode_event.isra.0_[k]
  [ 6] send_to_group_[k]
  [ 7] fsnotify_[k]
  [ 8] __fsnotify_parent_[k]
  [ 9] __fput_[k]
  [10] ____fput_[k]
  [11] task_work_run_[k]
  [12] exit_to_user_mode_loop_[k]
  [13] exit_to_user_mode_prepare_[k]
  [14] syscall_exit_to_user_mode_[k]
  [15] do_syscall_64_[k]
  [16] entry_SYSCALL_64_after_hwframe_[k]
  [17] __close
  [18] java.io.FileDescriptor.close0
  [19] java.io.FileDescriptor.close
  [20] java.io.FileDescriptor$1.close
  [21] sun.nio.ch.FileChannelImpl$Closer.run
  [22] jdk.internal.ref.CleanerImpl$PhantomCleanableRef.performCleanup
  [23] jdk.internal.ref.PhantomCleanable.clean
  [24] sun.nio.ch.FileChannelImpl.implCloseChannel
  [25] java.nio.channels.spi.AbstractInterruptibleChannel.close
  [26] java.nio.file.Files.createFile
  [27] java.nio.file.TempFileHelper.create
  [28] java.nio.file.TempFileHelper.createTempFile
  [29] java.nio.file.Files.createTempFile
  [30] jdk.nio.zipfs.ZipFileSystem.createTempFileInSameDirectoryAs
  [31] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [32] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [33] jdk.nio.zipfs.ZipPath.newFileChannel
  [34] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [35] java.nio.channels.FileChannel.open
  [36] java.nio.channels.FileChannel.open
  [37] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [38] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d8b0f0.apply
  [39] cats.effect.IOFiber.$anonfun$8
  [40] cats.effect.IOFiber$$Lambda$703.0x0000000800eb2fc8.apply
  [41] cats.effect.unsafe.WorkerThread.blockOn
  [42] scala.concurrent.package$.blocking
  [43] cats.effect.IOFiber.runLoop
  [44] cats.effect.IOFiber.execR
  [45] cats.effect.IOFiber.run
  [46] cats.effect.unsafe.WorkerThread.run

--- 320818026 ns (0.04%), 32 samples
  [ 0] fsnotify_[k]
  [ 1] open_last_lookups_[k]
  [ 2] path_openat_[k]
  [ 3] do_filp_open_[k]
  [ 4] do_sys_openat2_[k]
  [ 5] __x64_sys_openat_[k]
  [ 6] do_syscall_64_[k]
  [ 7] entry_SYSCALL_64_after_hwframe_[k]
  [ 8] __open64
  [ 9] [unknown]
  [10] sun.nio.fs.UnixNativeDispatcher.open0
  [11] sun.nio.fs.UnixNativeDispatcher.open
  [12] sun.nio.fs.UnixChannelFactory.open
  [13] sun.nio.fs.UnixChannelFactory.newFileChannel
  [14] sun.nio.fs.UnixChannelFactory.newFileChannel
  [15] sun.nio.fs.UnixFileSystemProvider.newByteChannel
  [16] java.nio.file.Files.newByteChannel
  [17] java.nio.file.Files.createFile
  [18] java.nio.file.TempFileHelper.create
  [19] java.nio.file.TempFileHelper.createTempFile
  [20] java.nio.file.Files.createTempFile
  [21] jdk.nio.zipfs.ZipFileSystem.createTempFileInSameDirectoryAs
  [22] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [23] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [24] jdk.nio.zipfs.ZipPath.newFileChannel
  [25] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [26] java.nio.channels.FileChannel.open
  [27] java.nio.channels.FileChannel.open
  [28] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [29] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d8b0f0.apply
  [30] cats.effect.IOFiber.$anonfun$8
  [31] cats.effect.IOFiber$$Lambda$703.0x0000000800eb2fc8.apply
  [32] cats.effect.unsafe.WorkerThread.blockOn
  [33] scala.concurrent.package$.blocking
  [34] cats.effect.IOFiber.runLoop
  [35] cats.effect.IOFiber.execR
  [36] cats.effect.IOFiber.run
  [37] cats.effect.unsafe.WorkerThread.run

--- 320665813 ns (0.04%), 32 samples
  [ 0] cats.effect.tracing.RingBuffer.push
  [ 1] cats.effect.IOFiber.pushTracingEvent
  [ 2] cats.effect.IOFiber.runLoop
  [ 3] cats.effect.IOFiber.execR
  [ 4] cats.effect.IOFiber.run
  [ 5] cats.effect.unsafe.WorkerThread.run

--- 310825246 ns (0.04%), 31 samples
  [ 0] kmem_cache_alloc_[k]
  [ 1] spl_kmem_cache_alloc?[spl]_[k]
  [ 2] zio_data_buf_alloc?[zfs]_[k]
  [ 3] zil_itx_create?[zfs]_[k]
  [ 4] zfs_log_write?[zfs]_[k]
  [ 5] zfs_write?[zfs]_[k]
  [ 6] zpl_iter_write?[zfs]_[k]
  [ 7] new_sync_write_[k]
  [ 8] vfs_write_[k]
  [ 9] ksys_write_[k]
  [10] __x64_sys_write_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] write
  [14] sun.nio.ch.FileDispatcherImpl.write0
  [15] sun.nio.ch.FileDispatcherImpl.write
  [16] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.FileChannelImpl.write
  [20] java.nio.channels.Channels.writeFullyImpl
  [21] java.nio.channels.Channels.writeFully
  [22] java.nio.channels.Channels$1.write
  [23] java.io.InputStream.transferTo
  [24] java.nio.file.Files.copy
  [25] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [26] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [27] jdk.nio.zipfs.ZipPath.newFileChannel
  [28] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [29] java.nio.channels.FileChannel.open
  [30] java.nio.channels.FileChannel.open
  [31] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [32] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d8b0f0.apply
  [33] cats.effect.IOFiber.$anonfun$8
  [34] cats.effect.IOFiber$$Lambda$703.0x0000000800eb2fc8.apply
  [35] cats.effect.unsafe.WorkerThread.blockOn
  [36] scala.concurrent.package$.blocking
  [37] cats.effect.IOFiber.runLoop
  [38] cats.effect.IOFiber.execR
  [39] cats.effect.IOFiber.run
  [40] cats.effect.unsafe.WorkerThread.run

--- 310571858 ns (0.04%), 31 samples
  [ 0] jni_GetPrimitiveArrayCritical
  [ 1] Java_java_util_zip_Inflater_inflateBytesBytes
  [ 2] java.util.zip.Inflater.inflateBytesBytes
  [ 3] java.util.zip.Inflater.inflate
  [ 4] java.util.zip.InflaterInputStream.read
  [ 5] java.io.InputStream.transferTo
  [ 6] java.nio.file.Files.copy
  [ 7] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [ 8] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [ 9] jdk.nio.zipfs.ZipPath.newFileChannel
  [10] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [11] java.nio.channels.FileChannel.open
  [12] java.nio.channels.FileChannel.open
  [13] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [14] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d8b0f0.apply
  [15] cats.effect.IOFiber.$anonfun$8
  [16] cats.effect.IOFiber$$Lambda$703.0x0000000800eb2fc8.apply
  [17] cats.effect.unsafe.WorkerThread.blockOn
  [18] scala.concurrent.package$.blocking
  [19] cats.effect.IOFiber.runLoop
  [20] cats.effect.IOFiber.execR
  [21] cats.effect.IOFiber.run
  [22] cats.effect.unsafe.WorkerThread.run

--- 300790373 ns (0.04%), 30 samples
  [ 0] _raw_spin_unlock_irqrestore_[k]
  [ 1] __wake_up_common_lock_[k]
  [ 2] __wake_up_[k]
  [ 3] fsnotify_insert_event_[k]
  [ 4] inotify_handle_inode_event_[k]
  [ 5] fsnotify_handle_inode_event.isra.0_[k]
  [ 6] send_to_group_[k]
  [ 7] fsnotify_[k]
  [ 8] __fsnotify_parent_[k]
  [ 9] vfs_write_[k]
  [10] ksys_write_[k]
  [11] __x64_sys_write_[k]
  [12] do_syscall_64_[k]
  [13] entry_SYSCALL_64_after_hwframe_[k]
  [14] write
  [15] sun.nio.ch.FileDispatcherImpl.write0
  [16] sun.nio.ch.FileDispatcherImpl.write
  [17] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.IOUtil.write
  [20] sun.nio.ch.FileChannelImpl.write
  [21] java.nio.channels.Channels.writeFullyImpl
  [22] java.nio.channels.Channels.writeFully
  [23] java.nio.channels.Channels$1.write
  [24] java.io.InputStream.transferTo
  [25] java.nio.file.Files.copy
  [26] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [27] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [28] jdk.nio.zipfs.ZipPath.newFileChannel
  [29] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [30] java.nio.channels.FileChannel.open
  [31] java.nio.channels.FileChannel.open
  [32] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [33] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d8b0f0.apply
  [34] cats.effect.IOFiber.$anonfun$8
  [35] cats.effect.IOFiber$$Lambda$703.0x0000000800eb2fc8.apply
  [36] cats.effect.unsafe.WorkerThread.blockOn
  [37] scala.concurrent.package$.blocking
  [38] cats.effect.IOFiber.runLoop
  [39] cats.effect.IOFiber.execR
  [40] cats.effect.IOFiber.run
  [41] cats.effect.unsafe.WorkerThread.run

--- 290775876 ns (0.04%), 29 samples
  [ 0] _raw_spin_unlock_irqrestore_[k]
  [ 1] try_to_wake_up_[k]
  [ 2] wake_up_q_[k]
  [ 3] futex_wake_[k]
  [ 4] do_futex_[k]
  [ 5] __x64_sys_futex_[k]
  [ 6] do_syscall_64_[k]
  [ 7] entry_SYSCALL_64_after_hwframe_[k]
  [ 8] pthread_cond_signal@@GLIBC_2.3.2
  [ 9] jdk.internal.misc.Unsafe.unpark
  [10] java.util.concurrent.locks.LockSupport.unpark
  [11] cats.effect.unsafe.WorkStealingThreadPool.notifyParked
  [12] cats.effect.unsafe.WorkerThread.blockOn
  [13] scala.concurrent.package$.blocking
  [14] cats.effect.IOFiber.runLoop
  [15] cats.effect.IOFiber.execR
  [16] cats.effect.IOFiber.run
  [17] cats.effect.unsafe.WorkerThread.run

--- 290774748 ns (0.04%), 29 samples
  [ 0] refill_stock_[k]
  [ 1] obj_cgroup_uncharge_pages_[k]
  [ 2] refill_obj_stock_[k]
  [ 3] obj_cgroup_charge_[k]
  [ 4] __kmalloc_[k]
  [ 5] inotify_handle_inode_event_[k]
  [ 6] fsnotify_handle_inode_event.isra.0_[k]
  [ 7] send_to_group_[k]
  [ 8] fsnotify_[k]
  [ 9] __fsnotify_parent_[k]
  [10] vfs_write_[k]
  [11] ksys_write_[k]
  [12] __x64_sys_write_[k]
  [13] do_syscall_64_[k]
  [14] entry_SYSCALL_64_after_hwframe_[k]
  [15] write
  [16] sun.nio.ch.FileDispatcherImpl.write0
  [17] sun.nio.ch.FileDispatcherImpl.write
  [18] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [19] sun.nio.ch.IOUtil.write
  [20] sun.nio.ch.IOUtil.write
  [21] sun.nio.ch.FileChannelImpl.write
  [22] java.nio.channels.Channels.writeFullyImpl
  [23] java.nio.channels.Channels.writeFully
  [24] java.nio.channels.Channels$1.write
  [25] java.io.InputStream.transferTo
  [26] java.nio.file.Files.copy
  [27] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [28] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [29] jdk.nio.zipfs.ZipPath.newFileChannel
  [30] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [31] java.nio.channels.FileChannel.open
  [32] java.nio.channels.FileChannel.open
  [33] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [34] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d8b0f0.apply
  [35] cats.effect.IOFiber.$anonfun$8
  [36] cats.effect.IOFiber$$Lambda$703.0x0000000800eb2fc8.apply
  [37] cats.effect.unsafe.WorkerThread.blockOn
  [38] scala.concurrent.package$.blocking
  [39] cats.effect.IOFiber.runLoop
  [40] cats.effect.IOFiber.execR
  [41] cats.effect.IOFiber.run
  [42] cats.effect.unsafe.WorkerThread.run

--- 290746625 ns (0.04%), 29 samples
  [ 0] cats.effect.IOFiber.runLoop
  [ 1] cats.effect.IOFiber.execR
  [ 2] cats.effect.IOFiber.run
  [ 3] cats.effect.unsafe.WorkerThread.run

--- 290535890 ns (0.04%), 29 samples
  [ 0] sun.nio.ch.FileDispatcherImpl.write0
  [ 1] sun.nio.ch.FileDispatcherImpl.write
  [ 2] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [ 3] sun.nio.ch.IOUtil.write
  [ 4] sun.nio.ch.IOUtil.write
  [ 5] sun.nio.ch.FileChannelImpl.write
  [ 6] java.nio.channels.Channels.writeFullyImpl
  [ 7] java.nio.channels.Channels.writeFully
  [ 8] java.nio.channels.Channels$1.write
  [ 9] java.io.InputStream.transferTo
  [10] java.nio.file.Files.copy
  [11] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [12] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [13] jdk.nio.zipfs.ZipPath.newFileChannel
  [14] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [15] java.nio.channels.FileChannel.open
  [16] java.nio.channels.FileChannel.open
  [17] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [18] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d8b0f0.apply
  [19] cats.effect.IOFiber.$anonfun$8
  [20] cats.effect.IOFiber$$Lambda$703.0x0000000800eb2fc8.apply
  [21] cats.effect.unsafe.WorkerThread.blockOn
  [22] scala.concurrent.package$.blocking
  [23] cats.effect.IOFiber.runLoop
  [24] cats.effect.IOFiber.execR
  [25] cats.effect.IOFiber.run
  [26] cats.effect.unsafe.WorkerThread.run

--- 280978162 ns (0.04%), 28 samples
  [ 0] __vfprintf_internal
  [ 1] [unknown]
  [ 2] java.lang.Thread.setNativeName
  [ 3] java.lang.Thread.setName
  [ 4] cats.effect.unsafe.WorkerThread.init
  [ 5] cats.effect.unsafe.WorkerThread.run

--- 280698066 ns (0.04%), 28 samples
  [ 0] java.util.concurrent.ConcurrentLinkedQueue.poll
  [ 1] cats.effect.unsafe.ScalQueue.poll
  [ 2] cats.effect.unsafe.WorkerThread.run

--- 280525285 ns (0.04%), 28 samples
  [ 0] itable stub
  [ 1] cats.effect.IOFiber.succeeded
  [ 2] cats.effect.IOFiber.runLoop
  [ 3] cats.effect.IOFiber.execR
  [ 4] cats.effect.IOFiber.run
  [ 5] cats.effect.unsafe.WorkerThread.run

--- 280449830 ns (0.04%), 28 samples
  [ 0] jbyte_disjoint_arraycopy
  [ 1] jdk.internal.misc.Unsafe.copyMemory0
  [ 2] jdk.internal.misc.Unsafe.copyMemory
  [ 3] jdk.internal.misc.ScopedMemoryAccess.copyMemoryInternal
  [ 4] jdk.internal.misc.ScopedMemoryAccess.copyMemory
  [ 5] java.nio.ByteBuffer.putBuffer
  [ 6] java.nio.ByteBuffer.put
  [ 7] java.nio.HeapByteBuffer.put
  [ 8] sun.nio.ch.IOUtil.read
  [ 9] sun.nio.ch.IOUtil.read
  [10] sun.nio.ch.FileChannelImpl.readInternal
  [11] sun.nio.ch.FileChannelImpl.read
  [12] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [13] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [14] jdk.nio.zipfs.ZipFileSystem$2.fill
  [15] java.util.zip.InflaterInputStream.read
  [16] java.io.InputStream.transferTo
  [17] java.nio.file.Files.copy
  [18] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [19] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [20] jdk.nio.zipfs.ZipPath.newFileChannel
  [21] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [22] java.nio.channels.FileChannel.open
  [23] java.nio.channels.FileChannel.open
  [24] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [25] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d8b0f0.apply
  [26] cats.effect.IOFiber.$anonfun$8
  [27] cats.effect.IOFiber$$Lambda$703.0x0000000800eb2fc8.apply
  [28] cats.effect.unsafe.WorkerThread.blockOn
  [29] scala.concurrent.package$.blocking
  [30] cats.effect.IOFiber.runLoop
  [31] cats.effect.IOFiber.execR
  [32] cats.effect.IOFiber.run
  [33] cats.effect.unsafe.WorkerThread.run

--- 270615553 ns (0.04%), 27 samples
  [ 0] mod_memcg_state_[k]
  [ 1] memcg_account_kmem_[k]
  [ 2] obj_cgroup_charge_[k]
  [ 3] __kmalloc_[k]
  [ 4] inotify_handle_inode_event_[k]
  [ 5] fsnotify_handle_inode_event.isra.0_[k]
  [ 6] send_to_group_[k]
  [ 7] fsnotify_[k]
  [ 8] __fsnotify_parent_[k]
  [ 9] vfs_write_[k]
  [10] ksys_write_[k]
  [11] __x64_sys_write_[k]
  [12] do_syscall_64_[k]
  [13] entry_SYSCALL_64_after_hwframe_[k]
  [14] write
  [15] sun.nio.ch.FileDispatcherImpl.write0
  [16] sun.nio.ch.FileDispatcherImpl.write
  [17] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.IOUtil.write
  [20] sun.nio.ch.FileChannelImpl.write
  [21] java.nio.channels.Channels.writeFullyImpl
  [22] java.nio.channels.Channels.writeFully
  [23] java.nio.channels.Channels$1.write
  [24] java.io.InputStream.transferTo
  [25] java.nio.file.Files.copy
  [26] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [27] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [28] jdk.nio.zipfs.ZipPath.newFileChannel
  [29] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [30] java.nio.channels.FileChannel.open
  [31] java.nio.channels.FileChannel.open
  [32] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [33] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d8b0f0.apply
  [34] cats.effect.IOFiber.$anonfun$8
  [35] cats.effect.IOFiber$$Lambda$703.0x0000000800eb2fc8.apply
  [36] cats.effect.unsafe.WorkerThread.blockOn
  [37] scala.concurrent.package$.blocking
  [38] cats.effect.IOFiber.runLoop
  [39] cats.effect.IOFiber.execR
  [40] cats.effect.IOFiber.run
  [41] cats.effect.unsafe.WorkerThread.run

--- 270586298 ns (0.04%), 27 samples
  [ 0] write
  [ 1] sun.nio.ch.FileDispatcherImpl.write0
  [ 2] sun.nio.ch.FileDispatcherImpl.write
  [ 3] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [ 4] sun.nio.ch.IOUtil.write
  [ 5] sun.nio.ch.IOUtil.write
  [ 6] sun.nio.ch.FileChannelImpl.write
  [ 7] java.nio.channels.Channels.writeFullyImpl
  [ 8] java.nio.channels.Channels.writeFully
  [ 9] java.nio.channels.Channels$1.write
  [10] java.io.InputStream.transferTo
  [11] java.nio.file.Files.copy
  [12] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [13] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [14] jdk.nio.zipfs.ZipPath.newFileChannel
  [15] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [16] java.nio.channels.FileChannel.open
  [17] java.nio.channels.FileChannel.open
  [18] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [19] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d8b0f0.apply
  [20] cats.effect.IOFiber.$anonfun$8
  [21] cats.effect.IOFiber$$Lambda$703.0x0000000800eb2fc8.apply
  [22] cats.effect.unsafe.WorkerThread.blockOn
  [23] scala.concurrent.package$.blocking
  [24] cats.effect.IOFiber.runLoop
  [25] cats.effect.IOFiber.execR
  [26] cats.effect.IOFiber.run
  [27] cats.effect.unsafe.WorkerThread.run

--- 270575182 ns (0.04%), 27 samples
  [ 0] vfs_write_[k]
  [ 1] ksys_write_[k]
  [ 2] __x64_sys_write_[k]
  [ 3] do_syscall_64_[k]
  [ 4] entry_SYSCALL_64_after_hwframe_[k]
  [ 5] write
  [ 6] sun.nio.ch.FileDispatcherImpl.write0
  [ 7] sun.nio.ch.FileDispatcherImpl.write
  [ 8] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [ 9] sun.nio.ch.IOUtil.write
  [10] sun.nio.ch.IOUtil.write
  [11] sun.nio.ch.FileChannelImpl.write
  [12] java.nio.channels.Channels.writeFullyImpl
  [13] java.nio.channels.Channels.writeFully
  [14] java.nio.channels.Channels$1.write
  [15] java.io.InputStream.transferTo
  [16] java.nio.file.Files.copy
  [17] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [18] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [19] jdk.nio.zipfs.ZipPath.newFileChannel
  [20] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [21] java.nio.channels.FileChannel.open
  [22] java.nio.channels.FileChannel.open
  [23] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [24] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d8b0f0.apply
  [25] cats.effect.IOFiber.$anonfun$8
  [26] cats.effect.IOFiber$$Lambda$703.0x0000000800eb2fc8.apply
  [27] cats.effect.unsafe.WorkerThread.blockOn
  [28] scala.concurrent.package$.blocking
  [29] cats.effect.IOFiber.runLoop
  [30] cats.effect.IOFiber.execR
  [31] cats.effect.IOFiber.run
  [32] cats.effect.unsafe.WorkerThread.run

--- 260645721 ns (0.04%), 26 samples
  [ 0] __fsnotify_parent_[k]
  [ 1] vfs_write_[k]
  [ 2] ksys_write_[k]
  [ 3] __x64_sys_write_[k]
  [ 4] do_syscall_64_[k]
  [ 5] entry_SYSCALL_64_after_hwframe_[k]
  [ 6] write
  [ 7] sun.nio.ch.FileDispatcherImpl.write0
  [ 8] sun.nio.ch.FileDispatcherImpl.write
  [ 9] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [10] sun.nio.ch.IOUtil.write
  [11] sun.nio.ch.IOUtil.write
  [12] sun.nio.ch.FileChannelImpl.write
  [13] java.nio.channels.Channels.writeFullyImpl
  [14] java.nio.channels.Channels.writeFully
  [15] java.nio.channels.Channels$1.write
  [16] java.io.InputStream.transferTo
  [17] java.nio.file.Files.copy
  [18] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [19] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [20] jdk.nio.zipfs.ZipPath.newFileChannel
  [21] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [22] java.nio.channels.FileChannel.open
  [23] java.nio.channels.FileChannel.open
  [24] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [25] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d8b0f0.apply
  [26] cats.effect.IOFiber.$anonfun$8
  [27] cats.effect.IOFiber$$Lambda$703.0x0000000800eb2fc8.apply
  [28] cats.effect.unsafe.WorkerThread.blockOn
  [29] scala.concurrent.package$.blocking
  [30] cats.effect.IOFiber.runLoop
  [31] cats.effect.IOFiber.execR
  [32] cats.effect.IOFiber.run
  [33] cats.effect.unsafe.WorkerThread.run

--- 260533339 ns (0.04%), 26 samples
  [ 0] memcg_slab_post_alloc_hook_[k]
  [ 1] __kmalloc_[k]
  [ 2] inotify_handle_inode_event_[k]
  [ 3] fsnotify_handle_inode_event.isra.0_[k]
  [ 4] send_to_group_[k]
  [ 5] fsnotify_[k]
  [ 6] __fsnotify_parent_[k]
  [ 7] vfs_write_[k]
  [ 8] ksys_write_[k]
  [ 9] __x64_sys_write_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] write
  [13] sun.nio.ch.FileDispatcherImpl.write0
  [14] sun.nio.ch.FileDispatcherImpl.write
  [15] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [16] sun.nio.ch.IOUtil.write
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.FileChannelImpl.write
  [19] java.nio.channels.Channels.writeFullyImpl
  [20] java.nio.channels.Channels.writeFully
  [21] java.nio.channels.Channels$1.write
  [22] java.io.InputStream.transferTo
  [23] java.nio.file.Files.copy
  [24] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [25] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [26] jdk.nio.zipfs.ZipPath.newFileChannel
  [27] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [28] java.nio.channels.FileChannel.open
  [29] java.nio.channels.FileChannel.open
  [30] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [31] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d8b0f0.apply
  [32] cats.effect.IOFiber.$anonfun$8
  [33] cats.effect.IOFiber$$Lambda$703.0x0000000800eb2fc8.apply
  [34] cats.effect.unsafe.WorkerThread.blockOn
  [35] scala.concurrent.package$.blocking
  [36] cats.effect.IOFiber.runLoop
  [37] cats.effect.IOFiber.execR
  [38] cats.effect.IOFiber.run
  [39] cats.effect.unsafe.WorkerThread.run

--- 260508735 ns (0.04%), 26 samples
  [ 0] __get_obj_cgroup_from_memcg_[k]
  [ 1] get_obj_cgroup_from_current_[k]
  [ 2] __kmalloc_[k]
  [ 3] inotify_handle_inode_event_[k]
  [ 4] fsnotify_handle_inode_event.isra.0_[k]
  [ 5] send_to_group_[k]
  [ 6] fsnotify_[k]
  [ 7] __fsnotify_parent_[k]
  [ 8] vfs_write_[k]
  [ 9] ksys_write_[k]
  [10] __x64_sys_write_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] write
  [14] sun.nio.ch.FileDispatcherImpl.write0
  [15] sun.nio.ch.FileDispatcherImpl.write
  [16] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.FileChannelImpl.write
  [20] java.nio.channels.Channels.writeFullyImpl
  [21] java.nio.channels.Channels.writeFully
  [22] java.nio.channels.Channels$1.write
  [23] java.io.InputStream.transferTo
  [24] java.nio.file.Files.copy
  [25] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [26] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [27] jdk.nio.zipfs.ZipPath.newFileChannel
  [28] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [29] java.nio.channels.FileChannel.open
  [30] java.nio.channels.FileChannel.open
  [31] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [32] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d8b0f0.apply
  [33] cats.effect.IOFiber.$anonfun$8
  [34] cats.effect.IOFiber$$Lambda$703.0x0000000800eb2fc8.apply
  [35] cats.effect.unsafe.WorkerThread.blockOn
  [36] scala.concurrent.package$.blocking
  [37] cats.effect.IOFiber.runLoop
  [38] cats.effect.IOFiber.execR
  [39] cats.effect.IOFiber.run
  [40] cats.effect.unsafe.WorkerThread.run

--- 260477890 ns (0.04%), 26 samples
  [ 0] java.lang.StringCoding.hasNegatives
  [ 1] java.lang.String.<init>
  [ 2] java.lang.String.<init>
  [ 3] com.scalamandra.ZipLib$.com$scalamandra$ZipLib$$anon$1$$_$streamFoldChunks$$anonfun$1
  [ 4] com.scalamandra.ZipLib$$anon$1$$Lambda$269.0x0000000800dd0b58.apply
  [ 5] cats.effect.IOFiber.succeeded
  [ 6] cats.effect.IOFiber.runLoop
  [ 7] cats.effect.IOFiber.execR
  [ 8] cats.effect.IOFiber.run
  [ 9] cats.effect.unsafe.WorkerThread.run

--- 251028728 ns (0.03%), 25 samples
  [ 0] Unsafe_Park
  [ 1] jdk.internal.misc.Unsafe.park
  [ 2] java.util.concurrent.locks.LockSupport.park
  [ 3] cats.effect.unsafe.WorkerThread.parkLoop$1
  [ 4] cats.effect.unsafe.WorkerThread.run

--- 250784073 ns (0.03%), 25 samples
  [ 0] memset_[k]
  [ 1] spl_kmem_cache_alloc?[spl]_[k]
  [ 2] zio_data_buf_alloc?[zfs]_[k]
  [ 3] arc_get_data_buf?[zfs]_[k]
  [ 4] arc_buf_alloc_impl?[zfs]_[k]
  [ 5] arc_alloc_buf?[zfs]_[k]
  [ 6] dbuf_alloc_arcbuf?[zfs]_[k]
  [ 7] dbuf_noread?[zfs]_[k]
  [ 8] dmu_buf_will_fill?[zfs]_[k]
  [ 9] dmu_write_uio_dnode?[zfs]_[k]
  [10] dmu_write_uio_dbuf?[zfs]_[k]
  [11] zfs_write?[zfs]_[k]
  [12] zpl_iter_write?[zfs]_[k]
  [13] new_sync_write_[k]
  [14] vfs_write_[k]
  [15] ksys_write_[k]
  [16] __x64_sys_write_[k]
  [17] do_syscall_64_[k]
  [18] entry_SYSCALL_64_after_hwframe_[k]
  [19] write
  [20] sun.nio.ch.FileDispatcherImpl.write0
  [21] sun.nio.ch.FileDispatcherImpl.write
  [22] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [23] sun.nio.ch.IOUtil.write
  [24] sun.nio.ch.IOUtil.write
  [25] sun.nio.ch.FileChannelImpl.write
  [26] java.nio.channels.Channels.writeFullyImpl
  [27] java.nio.channels.Channels.writeFully
  [28] java.nio.channels.Channels$1.write
  [29] java.io.InputStream.transferTo
  [30] java.nio.file.Files.copy
  [31] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [32] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [33] jdk.nio.zipfs.ZipPath.newFileChannel
  [34] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [35] java.nio.channels.FileChannel.open
  [36] java.nio.channels.FileChannel.open
  [37] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [38] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d8b0f0.apply
  [39] cats.effect.IOFiber.$anonfun$8
  [40] cats.effect.IOFiber$$Lambda$703.0x0000000800eb2fc8.apply
  [41] cats.effect.unsafe.WorkerThread.blockOn
  [42] scala.concurrent.package$.blocking
  [43] cats.effect.IOFiber.runLoop
  [44] cats.effect.IOFiber.execR
  [45] cats.effect.IOFiber.run
  [46] cats.effect.unsafe.WorkerThread.run

--- 250672177 ns (0.03%), 25 samples
  [ 0] memset_[k]
  [ 1] spl_kmem_cache_alloc?[spl]_[k]
  [ 2] zio_data_buf_alloc?[zfs]_[k]
  [ 3] arc_get_data_buf?[zfs]_[k]
  [ 4] arc_buf_alloc_impl?[zfs]_[k]
  [ 5] arc_alloc_buf?[zfs]_[k]
  [ 6] dbuf_new_size?[zfs]_[k]
  [ 7] dnode_set_blksz?[zfs]_[k]
  [ 8] dmu_object_set_blocksize?[zfs]_[k]
  [ 9] zfs_grow_blocksize?[zfs]_[k]
  [10] zfs_write?[zfs]_[k]
  [11] zpl_iter_write?[zfs]_[k]
  [12] new_sync_write_[k]
  [13] vfs_write_[k]
  [14] ksys_write_[k]
  [15] __x64_sys_write_[k]
  [16] do_syscall_64_[k]
  [17] entry_SYSCALL_64_after_hwframe_[k]
  [18] write
  [19] sun.nio.ch.FileDispatcherImpl.write0
  [20] sun.nio.ch.FileDispatcherImpl.write
  [21] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [22] sun.nio.ch.IOUtil.write
  [23] sun.nio.ch.IOUtil.write
  [24] sun.nio.ch.FileChannelImpl.write
  [25] java.nio.channels.Channels.writeFullyImpl
  [26] java.nio.channels.Channels.writeFully
  [27] java.nio.channels.Channels$1.write
  [28] java.io.InputStream.transferTo
  [29] java.nio.file.Files.copy
  [30] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [31] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [32] jdk.nio.zipfs.ZipPath.newFileChannel
  [33] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [34] java.nio.channels.FileChannel.open
  [35] java.nio.channels.FileChannel.open
  [36] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [37] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d8b0f0.apply
  [38] cats.effect.IOFiber.$anonfun$8
  [39] cats.effect.IOFiber$$Lambda$703.0x0000000800eb2fc8.apply
  [40] cats.effect.unsafe.WorkerThread.blockOn
  [41] scala.concurrent.package$.blocking
  [42] cats.effect.IOFiber.runLoop
  [43] cats.effect.IOFiber.execR
  [44] cats.effect.IOFiber.run
  [45] cats.effect.unsafe.WorkerThread.run

--- 250655502 ns (0.03%), 25 samples
  [ 0] itable stub
  [ 1] cats.effect.IOFiber.next$2
  [ 2] cats.effect.IOFiber.runLoop
  [ 3] cats.effect.IOFiber.execR
  [ 4] cats.effect.IOFiber.run
  [ 5] cats.effect.unsafe.WorkerThread.run

--- 250571012 ns (0.03%), 25 samples
  [ 0] sa_attr_op?[zfs]_[k]
  [ 1] sa_bulk_update_impl?[zfs]_[k]
  [ 2] sa_bulk_update?[zfs]_[k]
  [ 3] zfs_write?[zfs]_[k]
  [ 4] zpl_iter_write?[zfs]_[k]
  [ 5] new_sync_write_[k]
  [ 6] vfs_write_[k]
  [ 7] ksys_write_[k]
  [ 8] __x64_sys_write_[k]
  [ 9] do_syscall_64_[k]
  [10] entry_SYSCALL_64_after_hwframe_[k]
  [11] write
  [12] sun.nio.ch.FileDispatcherImpl.write0
  [13] sun.nio.ch.FileDispatcherImpl.write
  [14] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [15] sun.nio.ch.IOUtil.write
  [16] sun.nio.ch.IOUtil.write
  [17] sun.nio.ch.FileChannelImpl.write
  [18] java.nio.channels.Channels.writeFullyImpl
  [19] java.nio.channels.Channels.writeFully
  [20] java.nio.channels.Channels$1.write
  [21] java.io.InputStream.transferTo
  [22] java.nio.file.Files.copy
  [23] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [24] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [25] jdk.nio.zipfs.ZipPath.newFileChannel
  [26] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [27] java.nio.channels.FileChannel.open
  [28] java.nio.channels.FileChannel.open
  [29] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [30] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d8b0f0.apply
  [31] cats.effect.IOFiber.$anonfun$8
  [32] cats.effect.IOFiber$$Lambda$703.0x0000000800eb2fc8.apply
  [33] cats.effect.unsafe.WorkerThread.blockOn
  [34] scala.concurrent.package$.blocking
  [35] cats.effect.IOFiber.runLoop
  [36] cats.effect.IOFiber.execR
  [37] cats.effect.IOFiber.run
  [38] cats.effect.unsafe.WorkerThread.run

--- 250515763 ns (0.03%), 25 samples
  [ 0] itable stub
  [ 1] cats.effect.IOFiber.runLoop
  [ 2] cats.effect.IOFiber.execR
  [ 3] cats.effect.IOFiber.run
  [ 4] cats.effect.unsafe.WorkerThread.run

--- 250504145 ns (0.03%), 25 samples
  [ 0] native_queued_spin_lock_slowpath.part.0_[k]
  [ 1] native_queued_spin_lock_slowpath_[k]
  [ 2] _raw_spin_lock_[k]
  [ 3] fsnotify_insert_event_[k]
  [ 4] inotify_handle_inode_event_[k]
  [ 5] fsnotify_handle_inode_event.isra.0_[k]
  [ 6] send_to_group_[k]
  [ 7] fsnotify_[k]
  [ 8] __fsnotify_parent_[k]
  [ 9] vfs_write_[k]
  [10] ksys_write_[k]
  [11] __x64_sys_write_[k]
  [12] do_syscall_64_[k]
  [13] entry_SYSCALL_64_after_hwframe_[k]
  [14] write
  [15] sun.nio.ch.FileDispatcherImpl.write0
  [16] sun.nio.ch.FileDispatcherImpl.write
  [17] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.IOUtil.write
  [20] sun.nio.ch.FileChannelImpl.write
  [21] java.nio.channels.Channels.writeFullyImpl
  [22] java.nio.channels.Channels.writeFully
  [23] java.nio.channels.Channels$1.write
  [24] java.io.InputStream.transferTo
  [25] java.nio.file.Files.copy
  [26] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [27] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [28] jdk.nio.zipfs.ZipPath.newFileChannel
  [29] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [30] java.nio.channels.FileChannel.open
  [31] java.nio.channels.FileChannel.open
  [32] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [33] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d8b0f0.apply
  [34] cats.effect.IOFiber.$anonfun$8
  [35] cats.effect.IOFiber$$Lambda$703.0x0000000800eb2fc8.apply
  [36] cats.effect.unsafe.WorkerThread.blockOn
  [37] scala.concurrent.package$.blocking
  [38] cats.effect.IOFiber.runLoop
  [39] cats.effect.IOFiber.execR
  [40] cats.effect.IOFiber.run
  [41] cats.effect.unsafe.WorkerThread.run

--- 250466430 ns (0.03%), 25 samples
  [ 0] CollectedHeap::supports_object_pinning() const
  [ 1] Java_java_util_zip_Inflater_inflateBytesBytes
  [ 2] java.util.zip.Inflater.inflateBytesBytes
  [ 3] java.util.zip.Inflater.inflate
  [ 4] java.util.zip.InflaterInputStream.read
  [ 5] java.io.InputStream.transferTo
  [ 6] java.nio.file.Files.copy
  [ 7] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [ 8] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [ 9] jdk.nio.zipfs.ZipPath.newFileChannel
  [10] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [11] java.nio.channels.FileChannel.open
  [12] java.nio.channels.FileChannel.open
  [13] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [14] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d8b0f0.apply
  [15] cats.effect.IOFiber.$anonfun$8
  [16] cats.effect.IOFiber$$Lambda$703.0x0000000800eb2fc8.apply
  [17] cats.effect.unsafe.WorkerThread.blockOn
  [18] scala.concurrent.package$.blocking
  [19] cats.effect.IOFiber.runLoop
  [20] cats.effect.IOFiber.execR
  [21] cats.effect.IOFiber.run
  [22] cats.effect.unsafe.WorkerThread.run

--- 240739073 ns (0.03%), 24 samples
  [ 0] _raw_spin_unlock_irqrestore_[k]
  [ 1] __wake_up_common_lock_[k]
  [ 2] __wake_up_[k]
  [ 3] fsnotify_insert_event_[k]
  [ 4] inotify_handle_inode_event_[k]
  [ 5] fsnotify_handle_inode_event.isra.0_[k]
  [ 6] send_to_group_[k]
  [ 7] fsnotify_[k]
  [ 8] __fsnotify_parent_[k]
  [ 9] __fput_[k]
  [10] ____fput_[k]
  [11] task_work_run_[k]
  [12] exit_to_user_mode_loop_[k]
  [13] exit_to_user_mode_prepare_[k]
  [14] syscall_exit_to_user_mode_[k]
  [15] do_syscall_64_[k]
  [16] entry_SYSCALL_64_after_hwframe_[k]
  [17] __close
  [18] java.io.FileDescriptor.close0
  [19] java.io.FileDescriptor.close
  [20] java.io.FileDescriptor$1.close
  [21] sun.nio.ch.FileChannelImpl$Closer.run
  [22] jdk.internal.ref.CleanerImpl$PhantomCleanableRef.performCleanup
  [23] jdk.internal.ref.PhantomCleanable.clean
  [24] sun.nio.ch.FileChannelImpl.implCloseChannel
  [25] java.nio.channels.spi.AbstractInterruptibleChannel.close
  [26] java.nio.channels.Channels$1.close
  [27] java.nio.file.Files.copy
  [28] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [29] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [30] jdk.nio.zipfs.ZipPath.newFileChannel
  [31] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [32] java.nio.channels.FileChannel.open
  [33] java.nio.channels.FileChannel.open
  [34] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [35] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d8b0f0.apply
  [36] cats.effect.IOFiber.$anonfun$8
  [37] cats.effect.IOFiber$$Lambda$703.0x0000000800eb2fc8.apply
  [38] cats.effect.unsafe.WorkerThread.blockOn
  [39] scala.concurrent.package$.blocking
  [40] cats.effect.IOFiber.runLoop
  [41] cats.effect.IOFiber.execR
  [42] cats.effect.IOFiber.run
  [43] cats.effect.unsafe.WorkerThread.run

--- 240720457 ns (0.03%), 24 samples
  [ 0] zfs_log_write?[zfs]_[k]
  [ 1] zfs_write?[zfs]_[k]
  [ 2] zpl_iter_write?[zfs]_[k]
  [ 3] new_sync_write_[k]
  [ 4] vfs_write_[k]
  [ 5] ksys_write_[k]
  [ 6] __x64_sys_write_[k]
  [ 7] do_syscall_64_[k]
  [ 8] entry_SYSCALL_64_after_hwframe_[k]
  [ 9] write
  [10] sun.nio.ch.FileDispatcherImpl.write0
  [11] sun.nio.ch.FileDispatcherImpl.write
  [12] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [13] sun.nio.ch.IOUtil.write
  [14] sun.nio.ch.IOUtil.write
  [15] sun.nio.ch.FileChannelImpl.write
  [16] java.nio.channels.Channels.writeFullyImpl
  [17] java.nio.channels.Channels.writeFully
  [18] java.nio.channels.Channels$1.write
  [19] java.io.InputStream.transferTo
  [20] java.nio.file.Files.copy
  [21] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [22] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [23] jdk.nio.zipfs.ZipPath.newFileChannel
  [24] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [25] java.nio.channels.FileChannel.open
  [26] java.nio.channels.FileChannel.open
  [27] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [28] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d8b0f0.apply
  [29] cats.effect.IOFiber.$anonfun$8
  [30] cats.effect.IOFiber$$Lambda$703.0x0000000800eb2fc8.apply
  [31] cats.effect.unsafe.WorkerThread.blockOn
  [32] scala.concurrent.package$.blocking
  [33] cats.effect.IOFiber.runLoop
  [34] cats.effect.IOFiber.execR
  [35] cats.effect.IOFiber.run
  [36] cats.effect.unsafe.WorkerThread.run

--- 240716349 ns (0.03%), 24 samples
  [ 0] inotify_merge_[k]
  [ 1] inotify_handle_inode_event_[k]
  [ 2] fsnotify_handle_inode_event.isra.0_[k]
  [ 3] send_to_group_[k]
  [ 4] fsnotify_[k]
  [ 5] __fsnotify_parent_[k]
  [ 6] vfs_write_[k]
  [ 7] ksys_write_[k]
  [ 8] __x64_sys_write_[k]
  [ 9] do_syscall_64_[k]
  [10] entry_SYSCALL_64_after_hwframe_[k]
  [11] write
  [12] sun.nio.ch.FileDispatcherImpl.write0
  [13] sun.nio.ch.FileDispatcherImpl.write
  [14] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [15] sun.nio.ch.IOUtil.write
  [16] sun.nio.ch.IOUtil.write
  [17] sun.nio.ch.FileChannelImpl.write
  [18] java.nio.channels.Channels.writeFullyImpl
  [19] java.nio.channels.Channels.writeFully
  [20] java.nio.channels.Channels$1.write
  [21] java.io.InputStream.transferTo
  [22] java.nio.file.Files.copy
  [23] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [24] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [25] jdk.nio.zipfs.ZipPath.newFileChannel
  [26] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [27] java.nio.channels.FileChannel.open
  [28] java.nio.channels.FileChannel.open
  [29] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [30] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d8b0f0.apply
  [31] cats.effect.IOFiber.$anonfun$8
  [32] cats.effect.IOFiber$$Lambda$703.0x0000000800eb2fc8.apply
  [33] cats.effect.unsafe.WorkerThread.blockOn
  [34] scala.concurrent.package$.blocking
  [35] cats.effect.IOFiber.runLoop
  [36] cats.effect.IOFiber.execR
  [37] cats.effect.IOFiber.run
  [38] cats.effect.unsafe.WorkerThread.run

--- 240634275 ns (0.03%), 24 samples
  [ 0] kmem_cache_free_[k]
  [ 1] spl_kmem_cache_free?[spl]_[k]
  [ 2] zio_data_buf_free?[zfs]_[k]
  [ 3] zil_itx_destroy?[zfs]_[k]
  [ 4] zil_remove_async?[zfs]_[k]
  [ 5] zfs_log_remove?[zfs]_[k]
  [ 6] zfs_remove?[zfs]_[k]
  [ 7] zpl_unlink?[zfs]_[k]
  [ 8] vfs_unlink_[k]
  [ 9] do_unlinkat_[k]
  [10] __x64_sys_unlink_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] __GI_unlink
  [14] sun.nio.fs.UnixNativeDispatcher.unlink0
  [15] sun.nio.fs.UnixNativeDispatcher.unlink
  [16] sun.nio.fs.UnixFileSystemProvider.implDelete
  [17] sun.nio.fs.AbstractFileSystemProvider.delete
  [18] java.nio.file.Files.delete
  [19] jdk.nio.zipfs.ZipFileSystem.removeTempPathForEntry
  [20] jdk.nio.zipfs.ZipFileSystem$1.implCloseChannel
  [21] java.nio.channels.spi.AbstractInterruptibleChannel.close
  [22] fs2.io.file.FilesCompanionPlatform.openFileChannel$$anonfun$1$$anonfun$1
  [23] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$openFileChannel$$anonfun$1$$anonfun$adapted$1
  [24] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$719.0x0000000800eb4828.apply
  [25] cats.effect.IOFiber.$anonfun$8
  [26] cats.effect.IOFiber$$Lambda$703.0x0000000800eb2fc8.apply
  [27] cats.effect.unsafe.WorkerThread.blockOn
  [28] scala.concurrent.package$.blocking
  [29] cats.effect.IOFiber.runLoop
  [30] cats.effect.IOFiber.execR
  [31] cats.effect.IOFiber.run
  [32] cats.effect.unsafe.WorkerThread.run

--- 240625882 ns (0.03%), 24 samples
  [ 0] dsl_dir_phys?[zfs]_[k]
  [ 1] dsl_dir_tempreserve_space?[zfs]_[k]
  [ 2] dmu_tx_try_assign?[zfs]_[k]
  [ 3] dmu_tx_assign?[zfs]_[k]
  [ 4] zfs_write?[zfs]_[k]
  [ 5] zpl_iter_write?[zfs]_[k]
  [ 6] new_sync_write_[k]
  [ 7] vfs_write_[k]
  [ 8] ksys_write_[k]
  [ 9] __x64_sys_write_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] write
  [13] sun.nio.ch.FileDispatcherImpl.write0
  [14] sun.nio.ch.FileDispatcherImpl.write
  [15] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [16] sun.nio.ch.IOUtil.write
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.FileChannelImpl.write
  [19] java.nio.channels.Channels.writeFullyImpl
  [20] java.nio.channels.Channels.writeFully
  [21] java.nio.channels.Channels$1.write
  [22] java.io.InputStream.transferTo
  [23] java.nio.file.Files.copy
  [24] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [25] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [26] jdk.nio.zipfs.ZipPath.newFileChannel
  [27] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [28] java.nio.channels.FileChannel.open
  [29] java.nio.channels.FileChannel.open
  [30] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [31] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d8b0f0.apply
  [32] cats.effect.IOFiber.$anonfun$8
  [33] cats.effect.IOFiber$$Lambda$703.0x0000000800eb2fc8.apply
  [34] cats.effect.unsafe.WorkerThread.blockOn
  [35] scala.concurrent.package$.blocking
  [36] cats.effect.IOFiber.runLoop
  [37] cats.effect.IOFiber.execR
  [38] cats.effect.IOFiber.run
  [39] cats.effect.unsafe.WorkerThread.run

--- 240590483 ns (0.03%), 24 samples
  [ 0] obj_cgroup_charge_[k]
  [ 1] __kmalloc_[k]
  [ 2] inotify_handle_inode_event_[k]
  [ 3] fsnotify_handle_inode_event.isra.0_[k]
  [ 4] send_to_group_[k]
  [ 5] fsnotify_[k]
  [ 6] __fsnotify_parent_[k]
  [ 7] vfs_write_[k]
  [ 8] ksys_write_[k]
  [ 9] __x64_sys_write_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] write
  [13] sun.nio.ch.FileDispatcherImpl.write0
  [14] sun.nio.ch.FileDispatcherImpl.write
  [15] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [16] sun.nio.ch.IOUtil.write
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.FileChannelImpl.write
  [19] java.nio.channels.Channels.writeFullyImpl
  [20] java.nio.channels.Channels.writeFully
  [21] java.nio.channels.Channels$1.write
  [22] java.io.InputStream.transferTo
  [23] java.nio.file.Files.copy
  [24] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [25] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [26] jdk.nio.zipfs.ZipPath.newFileChannel
  [27] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [28] java.nio.channels.FileChannel.open
  [29] java.nio.channels.FileChannel.open
  [30] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [31] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d8b0f0.apply
  [32] cats.effect.IOFiber.$anonfun$8
  [33] cats.effect.IOFiber$$Lambda$703.0x0000000800eb2fc8.apply
  [34] cats.effect.unsafe.WorkerThread.blockOn
  [35] scala.concurrent.package$.blocking
  [36] cats.effect.IOFiber.runLoop
  [37] cats.effect.IOFiber.execR
  [38] cats.effect.IOFiber.run
  [39] cats.effect.unsafe.WorkerThread.run

--- 230821281 ns (0.03%), 23 samples
  [ 0] cats.effect.IO$$$Lambda$264.0x0000000800dcaf80.apply
  [ 1] [unknown_Java]

--- 230643168 ns (0.03%), 23 samples
  [ 0] dnode_hold_impl?[zfs]_[k]
  [ 1] dnode_hold?[zfs]_[k]
  [ 2] dmu_object_set_blocksize?[zfs]_[k]
  [ 3] zfs_grow_blocksize?[zfs]_[k]
  [ 4] zfs_write?[zfs]_[k]
  [ 5] zpl_iter_write?[zfs]_[k]
  [ 6] new_sync_write_[k]
  [ 7] vfs_write_[k]
  [ 8] ksys_write_[k]
  [ 9] __x64_sys_write_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] write
  [13] sun.nio.ch.FileDispatcherImpl.write0
  [14] sun.nio.ch.FileDispatcherImpl.write
  [15] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [16] sun.nio.ch.IOUtil.write
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.FileChannelImpl.write
  [19] java.nio.channels.Channels.writeFullyImpl
  [20] java.nio.channels.Channels.writeFully
  [21] java.nio.channels.Channels$1.write
  [22] java.io.InputStream.transferTo
  [23] java.nio.file.Files.copy
  [24] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [25] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [26] jdk.nio.zipfs.ZipPath.newFileChannel
  [27] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [28] java.nio.channels.FileChannel.open
  [29] java.nio.channels.FileChannel.open
  [30] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [31] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d8b0f0.apply
  [32] cats.effect.IOFiber.$anonfun$8
  [33] cats.effect.IOFiber$$Lambda$703.0x0000000800eb2fc8.apply
  [34] cats.effect.unsafe.WorkerThread.blockOn
  [35] scala.concurrent.package$.blocking
  [36] cats.effect.IOFiber.runLoop
  [37] cats.effect.IOFiber.execR
  [38] cats.effect.IOFiber.run
  [39] cats.effect.unsafe.WorkerThread.run

--- 230491036 ns (0.03%), 23 samples
  [ 0] itable stub
  [ 1] cats.Monad.map$$anonfun$1
  [ 2] cats.Monad$$Lambda$420.0x0000000800e1e928.apply
  [ 3] cats.effect.IOFiber.succeeded
  [ 4] cats.effect.IOFiber.runLoop
  [ 5] cats.effect.IOFiber.execR
  [ 6] cats.effect.IOFiber.run
  [ 7] cats.effect.unsafe.WorkerThread.run

--- 230446493 ns (0.03%), 23 samples
  [ 0] itable stub
  [ 1] cats.effect.IOFiber.runLoop
  [ 2] cats.effect.IOFiber.execR
  [ 3] cats.effect.IOFiber.run
  [ 4] cats.effect.unsafe.WorkerThread.run

--- 220948873 ns (0.03%), 22 samples
  [ 0] futex_q_lock_[k]
  [ 1] futex_wait_setup_[k]
  [ 2] futex_wait_[k]
  [ 3] do_futex_[k]
  [ 4] __x64_sys_futex_[k]
  [ 5] do_syscall_64_[k]
  [ 6] entry_SYSCALL_64_after_hwframe_[k]
  [ 7] __futex_abstimed_wait_cancelable64
  [ 8] [unknown]
  [ 9] jdk.internal.misc.Unsafe.park
  [10] java.util.concurrent.locks.LockSupport.park
  [11] cats.effect.unsafe.WorkerThread.parkLoop$1
  [12] cats.effect.unsafe.WorkerThread.run

--- 220664589 ns (0.03%), 22 samples
  [ 0] memset_[k]
  [ 1] spl_kmem_cache_alloc?[spl]_[k]
  [ 2] zio_data_buf_alloc?[zfs]_[k]
  [ 3] zil_itx_create?[zfs]_[k]
  [ 4] zfs_log_write?[zfs]_[k]
  [ 5] zfs_write?[zfs]_[k]
  [ 6] zpl_iter_write?[zfs]_[k]
  [ 7] new_sync_write_[k]
  [ 8] vfs_write_[k]
  [ 9] ksys_write_[k]
  [10] __x64_sys_write_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] write
  [14] sun.nio.ch.FileDispatcherImpl.write0
  [15] sun.nio.ch.FileDispatcherImpl.write
  [16] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.FileChannelImpl.write
  [20] java.nio.channels.Channels.writeFullyImpl
  [21] java.nio.channels.Channels.writeFully
  [22] java.nio.channels.Channels$1.write
  [23] java.io.InputStream.transferTo
  [24] java.nio.file.Files.copy
  [25] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [26] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [27] jdk.nio.zipfs.ZipPath.newFileChannel
  [28] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [29] java.nio.channels.FileChannel.open
  [30] java.nio.channels.FileChannel.open
  [31] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [32] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d8b0f0.apply
  [33] cats.effect.IOFiber.$anonfun$8
  [34] cats.effect.IOFiber$$Lambda$703.0x0000000800eb2fc8.apply
  [35] cats.effect.unsafe.WorkerThread.blockOn
  [36] scala.concurrent.package$.blocking
  [37] cats.effect.IOFiber.runLoop
  [38] cats.effect.IOFiber.execR
  [39] cats.effect.IOFiber.run
  [40] cats.effect.unsafe.WorkerThread.run

--- 220645454 ns (0.03%), 22 samples
  [ 0] find_vmap_area_[k]
  [ 1] check_heap_object_[k]
  [ 2] __check_object_size.part.0_[k]
  [ 3] __check_object_size_[k]
  [ 4] zfs_uiomove_iter?[zfs]_[k]
  [ 5] zfs_uiomove?[zfs]_[k]
  [ 6] dmu_read_uio_dnode?[zfs]_[k]
  [ 7] dmu_read_uio_dbuf?[zfs]_[k]
  [ 8] mappedread?[zfs]_[k]
  [ 9] zfs_read?[zfs]_[k]
  [10] zpl_iter_read?[zfs]_[k]
  [11] new_sync_read_[k]
  [12] vfs_read_[k]
  [13] __x64_sys_pread64_[k]
  [14] do_syscall_64_[k]
  [15] entry_SYSCALL_64_after_hwframe_[k]
  [16] __libc_pread64
  [17] sun.nio.ch.FileDispatcherImpl.pread0
  [18] sun.nio.ch.FileDispatcherImpl.pread
  [19] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [20] sun.nio.ch.IOUtil.read
  [21] sun.nio.ch.IOUtil.read
  [22] sun.nio.ch.FileChannelImpl.readInternal
  [23] sun.nio.ch.FileChannelImpl.read
  [24] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [25] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [26] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.initDataPos
  [27] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [28] jdk.nio.zipfs.ZipFileSystem$2.fill
  [29] java.util.zip.InflaterInputStream.read
  [30] java.io.InputStream.transferTo
  [31] java.nio.file.Files.copy
  [32] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [33] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [34] jdk.nio.zipfs.ZipPath.newFileChannel
  [35] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [36] java.nio.channels.FileChannel.open
  [37] java.nio.channels.FileChannel.open
  [38] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [39] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d8b0f0.apply
  [40] cats.effect.IOFiber.$anonfun$8
  [41] cats.effect.IOFiber$$Lambda$703.0x0000000800eb2fc8.apply
  [42] cats.effect.unsafe.WorkerThread.blockOn
  [43] scala.concurrent.package$.blocking
  [44] cats.effect.IOFiber.runLoop
  [45] cats.effect.IOFiber.execR
  [46] cats.effect.IOFiber.run
  [47] cats.effect.unsafe.WorkerThread.run

--- 220644338 ns (0.03%), 22 samples
  [ 0] zil_aitx_compare?[zfs]_[k]
  [ 1] zil_remove_async?[zfs]_[k]
  [ 2] zfs_log_remove?[zfs]_[k]
  [ 3] zfs_remove?[zfs]_[k]
  [ 4] zpl_unlink?[zfs]_[k]
  [ 5] vfs_unlink_[k]
  [ 6] do_unlinkat_[k]
  [ 7] __x64_sys_unlink_[k]
  [ 8] do_syscall_64_[k]
  [ 9] entry_SYSCALL_64_after_hwframe_[k]
  [10] __GI_unlink
  [11] sun.nio.fs.UnixNativeDispatcher.unlink0
  [12] sun.nio.fs.UnixNativeDispatcher.unlink
  [13] sun.nio.fs.UnixFileSystemProvider.implDelete
  [14] sun.nio.fs.AbstractFileSystemProvider.deleteIfExists
  [15] java.nio.file.Files.deleteIfExists
  [16] java.nio.file.Files.copy
  [17] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [18] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [19] jdk.nio.zipfs.ZipPath.newFileChannel
  [20] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [21] java.nio.channels.FileChannel.open
  [22] java.nio.channels.FileChannel.open
  [23] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [24] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d8b0f0.apply
  [25] cats.effect.IOFiber.$anonfun$8
  [26] cats.effect.IOFiber$$Lambda$703.0x0000000800eb2fc8.apply
  [27] cats.effect.unsafe.WorkerThread.blockOn
  [28] scala.concurrent.package$.blocking
  [29] cats.effect.IOFiber.runLoop
  [30] cats.effect.IOFiber.execR
  [31] cats.effect.IOFiber.run
  [32] cats.effect.unsafe.WorkerThread.run

--- 220533309 ns (0.03%), 22 samples
  [ 0] kfree_[k]
  [ 1] spl_kmem_free_impl?[spl]_[k]
  [ 2] spl_kmem_free?[spl]_[k]
  [ 3] dmu_tx_destroy?[zfs]_[k]
  [ 4] dmu_tx_commit?[zfs]_[k]
  [ 5] zfs_write?[zfs]_[k]
  [ 6] zpl_iter_write?[zfs]_[k]
  [ 7] new_sync_write_[k]
  [ 8] vfs_write_[k]
  [ 9] ksys_write_[k]
  [10] __x64_sys_write_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] write
  [14] sun.nio.ch.FileDispatcherImpl.write0
  [15] sun.nio.ch.FileDispatcherImpl.write
  [16] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.FileChannelImpl.write
  [20] java.nio.channels.Channels.writeFullyImpl
  [21] java.nio.channels.Channels.writeFully
  [22] java.nio.channels.Channels$1.write
  [23] java.io.InputStream.transferTo
  [24] java.nio.file.Files.copy
  [25] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [26] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [27] jdk.nio.zipfs.ZipPath.newFileChannel
  [28] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [29] java.nio.channels.FileChannel.open
  [30] java.nio.channels.FileChannel.open
  [31] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [32] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d8b0f0.apply
  [33] cats.effect.IOFiber.$anonfun$8
  [34] cats.effect.IOFiber$$Lambda$703.0x0000000800eb2fc8.apply
  [35] cats.effect.unsafe.WorkerThread.blockOn
  [36] scala.concurrent.package$.blocking
  [37] cats.effect.IOFiber.runLoop
  [38] cats.effect.IOFiber.execR
  [39] cats.effect.IOFiber.run
  [40] cats.effect.unsafe.WorkerThread.run

--- 220526091 ns (0.03%), 22 samples
  [ 0] cats.effect.IOFiber.runLoop
  [ 1] cats.effect.IOFiber.execR
  [ 2] cats.effect.IOFiber.run
  [ 3] cats.effect.unsafe.WorkerThread.run

--- 220473737 ns (0.03%), 22 samples
  [ 0] syscall_enter_from_user_mode_[k]
  [ 1] do_syscall_64_[k]
  [ 2] entry_SYSCALL_64_after_hwframe_[k]
  [ 3] write
  [ 4] sun.nio.ch.FileDispatcherImpl.write0
  [ 5] sun.nio.ch.FileDispatcherImpl.write
  [ 6] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [ 7] sun.nio.ch.IOUtil.write
  [ 8] sun.nio.ch.IOUtil.write
  [ 9] sun.nio.ch.FileChannelImpl.write
  [10] java.nio.channels.Channels.writeFullyImpl
  [11] java.nio.channels.Channels.writeFully
  [12] java.nio.channels.Channels$1.write
  [13] java.io.InputStream.transferTo
  [14] java.nio.file.Files.copy
  [15] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [16] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [17] jdk.nio.zipfs.ZipPath.newFileChannel
  [18] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [19] java.nio.channels.FileChannel.open
  [20] java.nio.channels.FileChannel.open
  [21] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [22] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d8b0f0.apply
  [23] cats.effect.IOFiber.$anonfun$8
  [24] cats.effect.IOFiber$$Lambda$703.0x0000000800eb2fc8.apply
  [25] cats.effect.unsafe.WorkerThread.blockOn
  [26] scala.concurrent.package$.blocking
  [27] cats.effect.IOFiber.runLoop
  [28] cats.effect.IOFiber.execR
  [29] cats.effect.IOFiber.run
  [30] cats.effect.unsafe.WorkerThread.run

--- 214361561 ns (0.03%), 21 samples
  [ 0] _raw_spin_unlock_irqrestore_[k]
  [ 1] hrtimer_start_range_ns_[k]
  [ 2] hrtimer_sleeper_start_expires_[k]
  [ 3] futex_wait_queue_[k]
  [ 4] futex_wait_[k]
  [ 5] do_futex_[k]
  [ 6] __x64_sys_futex_[k]
  [ 7] do_syscall_64_[k]
  [ 8] entry_SYSCALL_64_after_hwframe_[k]
  [ 9] __futex_abstimed_wait_cancelable64
  [10] [unknown]
  [11] jdk.internal.misc.Unsafe.park
  [12] java.util.concurrent.locks.LockSupport.parkNanos
  [13] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos
  [14] java.util.concurrent.ArrayBlockingQueue.poll
  [15] cats.effect.IOPlatform.$anonfun$1
  [16] cats.effect.IOPlatform$$Lambda$399.0x0000000800e16c30.apply
  [17] scala.concurrent.BlockContext$DefaultBlockContext$.blockOn
  [18] scala.concurrent.package$.blocking
  [19] cats.effect.IOPlatform.unsafeRunTimed
  [20] cats.effect.IOPlatform.unsafeRunSync
  [21] com.scalamandra.ZipBench.streamFoldChunks
  [22] com.scalamandra.jmh_generated.ZipBench_streamFoldChunks_jmhTest.streamFoldChunks_thrpt_jmhStub
  [23] com.scalamandra.jmh_generated.ZipBench_streamFoldChunks_jmhTest.streamFoldChunks_Throughput
  [24] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [25] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [26] java.lang.reflect.Method.invoke
  [27] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [28] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [29] java.util.concurrent.FutureTask.run
  [30] java.util.concurrent.Executors$RunnableAdapter.call
  [31] java.util.concurrent.FutureTask.run
  [32] java.util.concurrent.ThreadPoolExecutor.runWorker
  [33] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [34] java.lang.Thread.run

--- 210654270 ns (0.03%), 21 samples
  [ 0] dmu_tx_try_assign?[zfs]_[k]
  [ 1] dmu_tx_assign?[zfs]_[k]
  [ 2] zfs_write?[zfs]_[k]
  [ 3] zpl_iter_write?[zfs]_[k]
  [ 4] new_sync_write_[k]
  [ 5] vfs_write_[k]
  [ 6] ksys_write_[k]
  [ 7] __x64_sys_write_[k]
  [ 8] do_syscall_64_[k]
  [ 9] entry_SYSCALL_64_after_hwframe_[k]
  [10] write
  [11] sun.nio.ch.FileDispatcherImpl.write0
  [12] sun.nio.ch.FileDispatcherImpl.write
  [13] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [14] sun.nio.ch.IOUtil.write
  [15] sun.nio.ch.IOUtil.write
  [16] sun.nio.ch.FileChannelImpl.write
  [17] java.nio.channels.Channels.writeFullyImpl
  [18] java.nio.channels.Channels.writeFully
  [19] java.nio.channels.Channels$1.write
  [20] java.io.InputStream.transferTo
  [21] java.nio.file.Files.copy
  [22] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [23] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [24] jdk.nio.zipfs.ZipPath.newFileChannel
  [25] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [26] java.nio.channels.FileChannel.open
  [27] java.nio.channels.FileChannel.open
  [28] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [29] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d8b0f0.apply
  [30] cats.effect.IOFiber.$anonfun$8
  [31] cats.effect.IOFiber$$Lambda$703.0x0000000800eb2fc8.apply
  [32] cats.effect.unsafe.WorkerThread.blockOn
  [33] scala.concurrent.package$.blocking
  [34] cats.effect.IOFiber.runLoop
  [35] cats.effect.IOFiber.execR
  [36] cats.effect.IOFiber.run
  [37] cats.effect.unsafe.WorkerThread.run

--- 210616873 ns (0.03%), 21 samples
  [ 0] zil_aitx_compare?[zfs]_[k]
  [ 1] zil_itx_assign?[zfs]_[k]
  [ 2] zfs_log_write?[zfs]_[k]
  [ 3] zfs_write?[zfs]_[k]
  [ 4] zpl_iter_write?[zfs]_[k]
  [ 5] new_sync_write_[k]
  [ 6] vfs_write_[k]
  [ 7] ksys_write_[k]
  [ 8] __x64_sys_write_[k]
  [ 9] do_syscall_64_[k]
  [10] entry_SYSCALL_64_after_hwframe_[k]
  [11] write
  [12] sun.nio.ch.FileDispatcherImpl.write0
  [13] sun.nio.ch.FileDispatcherImpl.write
  [14] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [15] sun.nio.ch.IOUtil.write
  [16] sun.nio.ch.IOUtil.write
  [17] sun.nio.ch.FileChannelImpl.write
  [18] java.nio.channels.Channels.writeFullyImpl
  [19] java.nio.channels.Channels.writeFully
  [20] java.nio.channels.Channels$1.write
  [21] java.io.InputStream.transferTo
  [22] java.nio.file.Files.copy
  [23] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [24] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [25] jdk.nio.zipfs.ZipPath.newFileChannel
  [26] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [27] java.nio.channels.FileChannel.open
  [28] java.nio.channels.FileChannel.open
  [29] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [30] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d8b0f0.apply
  [31] cats.effect.IOFiber.$anonfun$8
  [32] cats.effect.IOFiber$$Lambda$703.0x0000000800eb2fc8.apply
  [33] cats.effect.unsafe.WorkerThread.blockOn
  [34] scala.concurrent.package$.blocking
  [35] cats.effect.IOFiber.runLoop
  [36] cats.effect.IOFiber.execR
  [37] cats.effect.IOFiber.run
  [38] cats.effect.unsafe.WorkerThread.run

--- 210609827 ns (0.03%), 21 samples
  [ 0] __kmalloc_node_[k]
  [ 1] spl_kmem_alloc_impl?[spl]_[k]
  [ 2] spl_kmem_zalloc?[spl]_[k]
  [ 3] dsl_dir_tempreserve_impl.constprop.0?[zfs]_[k]
  [ 4] dsl_dir_tempreserve_space?[zfs]_[k]
  [ 5] dmu_tx_try_assign?[zfs]_[k]
  [ 6] dmu_tx_assign?[zfs]_[k]
  [ 7] zfs_write?[zfs]_[k]
  [ 8] zpl_iter_write?[zfs]_[k]
  [ 9] new_sync_write_[k]
  [10] vfs_write_[k]
  [11] ksys_write_[k]
  [12] __x64_sys_write_[k]
  [13] do_syscall_64_[k]
  [14] entry_SYSCALL_64_after_hwframe_[k]
  [15] write
  [16] sun.nio.ch.FileDispatcherImpl.write0
  [17] sun.nio.ch.FileDispatcherImpl.write
  [18] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [19] sun.nio.ch.IOUtil.write
  [20] sun.nio.ch.IOUtil.write
  [21] sun.nio.ch.FileChannelImpl.write
  [22] java.nio.channels.Channels.writeFullyImpl
  [23] java.nio.channels.Channels.writeFully
  [24] java.nio.channels.Channels$1.write
  [25] java.io.InputStream.transferTo
  [26] java.nio.file.Files.copy
  [27] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [28] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [29] jdk.nio.zipfs.ZipPath.newFileChannel
  [30] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [31] java.nio.channels.FileChannel.open
  [32] java.nio.channels.FileChannel.open
  [33] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [34] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d8b0f0.apply
  [35] cats.effect.IOFiber.$anonfun$8
  [36] cats.effect.IOFiber$$Lambda$703.0x0000000800eb2fc8.apply
  [37] cats.effect.unsafe.WorkerThread.blockOn
  [38] scala.concurrent.package$.blocking
  [39] cats.effect.IOFiber.runLoop
  [40] cats.effect.IOFiber.execR
  [41] cats.effect.IOFiber.run
  [42] cats.effect.unsafe.WorkerThread.run

--- 210592359 ns (0.03%), 21 samples
  [ 0] __fget_light_[k]
  [ 1] __fdget_pos_[k]
  [ 2] ksys_write_[k]
  [ 3] __x64_sys_write_[k]
  [ 4] do_syscall_64_[k]
  [ 5] entry_SYSCALL_64_after_hwframe_[k]
  [ 6] write
  [ 7] sun.nio.ch.FileDispatcherImpl.write0
  [ 8] sun.nio.ch.FileDispatcherImpl.write
  [ 9] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [10] sun.nio.ch.IOUtil.write
  [11] sun.nio.ch.IOUtil.write
  [12] sun.nio.ch.FileChannelImpl.write
  [13] java.nio.channels.Channels.writeFullyImpl
  [14] java.nio.channels.Channels.writeFully
  [15] java.nio.channels.Channels$1.write
  [16] java.io.InputStream.transferTo
  [17] java.nio.file.Files.copy
  [18] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [19] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [20] jdk.nio.zipfs.ZipPath.newFileChannel
  [21] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [22] java.nio.channels.FileChannel.open
  [23] java.nio.channels.FileChannel.open
  [24] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [25] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d8b0f0.apply
  [26] cats.effect.IOFiber.$anonfun$8
  [27] cats.effect.IOFiber$$Lambda$703.0x0000000800eb2fc8.apply
  [28] cats.effect.unsafe.WorkerThread.blockOn
  [29] scala.concurrent.package$.blocking
  [30] cats.effect.IOFiber.runLoop
  [31] cats.effect.IOFiber.execR
  [32] cats.effect.IOFiber.run
  [33] cats.effect.unsafe.WorkerThread.run

--- 210544871 ns (0.03%), 21 samples
  [ 0] _raw_spin_unlock_irqrestore_[k]
  [ 1] try_to_wake_up_[k]
  [ 2] wake_up_q_[k]
  [ 3] rwsem_wake.isra.0_[k]
  [ 4] up_write_[k]
  [ 5] open_last_lookups_[k]
  [ 6] path_openat_[k]
  [ 7] do_filp_open_[k]
  [ 8] do_sys_openat2_[k]
  [ 9] __x64_sys_openat_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] __open64
  [13] [unknown]
  [14] sun.nio.fs.UnixNativeDispatcher.open0
  [15] sun.nio.fs.UnixNativeDispatcher.open
  [16] sun.nio.fs.UnixChannelFactory.open
  [17] sun.nio.fs.UnixChannelFactory.newFileChannel
  [18] sun.nio.fs.UnixChannelFactory.newFileChannel
  [19] sun.nio.fs.UnixFileSystemProvider.newByteChannel
  [20] java.nio.file.Files.newByteChannel
  [21] java.nio.file.Files.createFile
  [22] java.nio.file.TempFileHelper.create
  [23] java.nio.file.TempFileHelper.createTempFile
  [24] java.nio.file.Files.createTempFile
  [25] jdk.nio.zipfs.ZipFileSystem.createTempFileInSameDirectoryAs
  [26] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [27] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [28] jdk.nio.zipfs.ZipPath.newFileChannel
  [29] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [30] java.nio.channels.FileChannel.open
  [31] java.nio.channels.FileChannel.open
  [32] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [33] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d8b0f0.apply
  [34] cats.effect.IOFiber.$anonfun$8
  [35] cats.effect.IOFiber$$Lambda$703.0x0000000800eb2fc8.apply
  [36] cats.effect.unsafe.WorkerThread.blockOn
  [37] scala.concurrent.package$.blocking
  [38] cats.effect.IOFiber.runLoop
  [39] cats.effect.IOFiber.execR
  [40] cats.effect.IOFiber.run
  [41] cats.effect.unsafe.WorkerThread.run

--- 210516605 ns (0.03%), 21 samples
  [ 0] do_sched_yield_[k]
  [ 1] __x64_sys_sched_yield_[k]
  [ 2] do_syscall_64_[k]
  [ 3] entry_SYSCALL_64_after_hwframe_[k]
  [ 4] __GI___sched_yield
  [ 5] java.lang.Thread.yield
  [ 6] java.util.concurrent.LinkedTransferQueue.awaitMatch
  [ 7] java.util.concurrent.LinkedTransferQueue.xfer
  [ 8] java.util.concurrent.LinkedTransferQueue.poll
  [ 9] cats.effect.unsafe.WorkerThread.run

--- 210497607 ns (0.03%), 21 samples
  [ 0] dnode_set_blksz?[zfs]_[k]
  [ 1] dmu_object_set_blocksize?[zfs]_[k]
  [ 2] zfs_grow_blocksize?[zfs]_[k]
  [ 3] zfs_write?[zfs]_[k]
  [ 4] zpl_iter_write?[zfs]_[k]
  [ 5] new_sync_write_[k]
  [ 6] vfs_write_[k]
  [ 7] ksys_write_[k]
  [ 8] __x64_sys_write_[k]
  [ 9] do_syscall_64_[k]
  [10] entry_SYSCALL_64_after_hwframe_[k]
  [11] write
  [12] sun.nio.ch.FileDispatcherImpl.write0
  [13] sun.nio.ch.FileDispatcherImpl.write
  [14] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [15] sun.nio.ch.IOUtil.write
  [16] sun.nio.ch.IOUtil.write
  [17] sun.nio.ch.FileChannelImpl.write
  [18] java.nio.channels.Channels.writeFullyImpl
  [19] java.nio.channels.Channels.writeFully
  [20] java.nio.channels.Channels$1.write
  [21] java.io.InputStream.transferTo
  [22] java.nio.file.Files.copy
  [23] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [24] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [25] jdk.nio.zipfs.ZipPath.newFileChannel
  [26] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [27] java.nio.channels.FileChannel.open
  [28] java.nio.channels.FileChannel.open
  [29] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [30] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d8b0f0.apply
  [31] cats.effect.IOFiber.$anonfun$8
  [32] cats.effect.IOFiber$$Lambda$703.0x0000000800eb2fc8.apply
  [33] cats.effect.unsafe.WorkerThread.blockOn
  [34] scala.concurrent.package$.blocking
  [35] cats.effect.IOFiber.runLoop
  [36] cats.effect.IOFiber.execR
  [37] cats.effect.IOFiber.run
  [38] cats.effect.unsafe.WorkerThread.run

--- 210460947 ns (0.03%), 21 samples
  [ 0] ___slab_alloc_[k]
  [ 1] __kmalloc_[k]
  [ 2] inotify_handle_inode_event_[k]
  [ 3] fsnotify_handle_inode_event.isra.0_[k]
  [ 4] send_to_group_[k]
  [ 5] fsnotify_[k]
  [ 6] __fsnotify_parent_[k]
  [ 7] vfs_write_[k]
  [ 8] ksys_write_[k]
  [ 9] __x64_sys_write_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] write
  [13] sun.nio.ch.FileDispatcherImpl.write0
  [14] sun.nio.ch.FileDispatcherImpl.write
  [15] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [16] sun.nio.ch.IOUtil.write
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.FileChannelImpl.write
  [19] java.nio.channels.Channels.writeFullyImpl
  [20] java.nio.channels.Channels.writeFully
  [21] java.nio.channels.Channels$1.write
  [22] java.io.InputStream.transferTo
  [23] java.nio.file.Files.copy
  [24] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [25] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [26] jdk.nio.zipfs.ZipPath.newFileChannel
  [27] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [28] java.nio.channels.FileChannel.open
  [29] java.nio.channels.FileChannel.open
  [30] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [31] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d8b0f0.apply
  [32] cats.effect.IOFiber.$anonfun$8
  [33] cats.effect.IOFiber$$Lambda$703.0x0000000800eb2fc8.apply
  [34] cats.effect.unsafe.WorkerThread.blockOn
  [35] scala.concurrent.package$.blocking
  [36] cats.effect.IOFiber.runLoop
  [37] cats.effect.IOFiber.execR
  [38] cats.effect.IOFiber.run
  [39] cats.effect.unsafe.WorkerThread.run

--- 210357010 ns (0.03%), 21 samples
  [ 0] java.util.zip.InflaterInputStream.<init>
  [ 1] jdk.nio.zipfs.ZipFileSystem$2.<init>
  [ 2] jdk.nio.zipfs.ZipFileSystem.getInputStream
  [ 3] jdk.nio.zipfs.ZipFileSystem.newInputStream
  [ 4] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [ 5] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [ 6] jdk.nio.zipfs.ZipPath.newFileChannel
  [ 7] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [ 8] java.nio.channels.FileChannel.open
  [ 9] java.nio.channels.FileChannel.open
  [10] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [11] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d8b0f0.apply
  [12] cats.effect.IOFiber.$anonfun$8
  [13] cats.effect.IOFiber$$Lambda$703.0x0000000800eb2fc8.apply
  [14] cats.effect.unsafe.WorkerThread.blockOn
  [15] scala.concurrent.package$.blocking
  [16] cats.effect.IOFiber.runLoop
  [17] cats.effect.IOFiber.execR
  [18] cats.effect.IOFiber.run
  [19] cats.effect.unsafe.WorkerThread.run

--- 210345582 ns (0.03%), 21 samples
  [ 0] native_queued_spin_lock_slowpath.part.0_[k]
  [ 1] native_queued_spin_lock_slowpath_[k]
  [ 2] _raw_spin_lock_[k]
  [ 3] fsnotify_insert_event_[k]
  [ 4] inotify_handle_inode_event_[k]
  [ 5] fsnotify_handle_inode_event.isra.0_[k]
  [ 6] send_to_group_[k]
  [ 7] fsnotify_[k]
  [ 8] __fsnotify_parent_[k]
  [ 9] vfs_write_[k]
  [10] ksys_write_[k]
  [11] __x64_sys_write_[k]
  [12] do_syscall_64_[k]
  [13] entry_SYSCALL_64_after_hwframe_[k]
  [14] write
  [15] sun.nio.ch.FileDispatcherImpl.write0
  [16] sun.nio.ch.FileDispatcherImpl.write
  [17] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.IOUtil.write
  [20] sun.nio.ch.FileChannelImpl.write
  [21] java.nio.channels.Channels.writeFullyImpl
  [22] java.nio.channels.Channels.writeFully
  [23] java.nio.channels.Channels$1.write
  [24] java.io.InputStream.transferTo
  [25] java.nio.file.Files.copy
  [26] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [27] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [28] jdk.nio.zipfs.ZipPath.newFileChannel
  [29] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [30] java.nio.channels.FileChannel.open
  [31] java.nio.channels.FileChannel.open
  [32] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [33] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d8b0f0.apply
  [34] cats.effect.IOFiber.$anonfun$8
  [35] cats.effect.IOFiber$$Lambda$703.0x0000000800eb2fc8.apply
  [36] cats.effect.unsafe.WorkerThread.blockOn
  [37] scala.concurrent.package$.blocking
  [38] cats.effect.IOFiber.runLoop
  [39] cats.effect.IOFiber.execR
  [40] cats.effect.IOFiber.run
  [41] cats.effect.unsafe.WorkerThread.run

--- 200858553 ns (0.03%), 20 samples
  [ 0] fs2.internal.Scope$$$Lambda$216.0x0000000800db83d0.apply
  [ 1] [unknown_Java]

--- 200591723 ns (0.03%), 20 samples
  [ 0] fsnotify_insert_event_[k]
  [ 1] inotify_handle_inode_event_[k]
  [ 2] fsnotify_handle_inode_event.isra.0_[k]
  [ 3] send_to_group_[k]
  [ 4] fsnotify_[k]
  [ 5] __fsnotify_parent_[k]
  [ 6] vfs_write_[k]
  [ 7] ksys_write_[k]
  [ 8] __x64_sys_write_[k]
  [ 9] do_syscall_64_[k]
  [10] entry_SYSCALL_64_after_hwframe_[k]
  [11] write
  [12] sun.nio.ch.FileDispatcherImpl.write0
  [13] sun.nio.ch.FileDispatcherImpl.write
  [14] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [15] sun.nio.ch.IOUtil.write
  [16] sun.nio.ch.IOUtil.write
  [17] sun.nio.ch.FileChannelImpl.write
  [18] java.nio.channels.Channels.writeFullyImpl
  [19] java.nio.channels.Channels.writeFully
  [20] java.nio.channels.Channels$1.write
  [21] java.io.InputStream.transferTo
  [22] java.nio.file.Files.copy
  [23] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [24] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [25] jdk.nio.zipfs.ZipPath.newFileChannel
  [26] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [27] java.nio.channels.FileChannel.open
  [28] java.nio.channels.FileChannel.open
  [29] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [30] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d8b0f0.apply
  [31] cats.effect.IOFiber.$anonfun$8
  [32] cats.effect.IOFiber$$Lambda$703.0x0000000800eb2fc8.apply
  [33] cats.effect.unsafe.WorkerThread.blockOn
  [34] scala.concurrent.package$.blocking
  [35] cats.effect.IOFiber.runLoop
  [36] cats.effect.IOFiber.execR
  [37] cats.effect.IOFiber.run
  [38] cats.effect.unsafe.WorkerThread.run

--- 200581258 ns (0.03%), 20 samples
  [ 0] find_vmap_area_[k]
  [ 1] check_heap_object_[k]
  [ 2] __check_object_size.part.0_[k]
  [ 3] __check_object_size_[k]
  [ 4] zfs_uiomove_iter?[zfs]_[k]
  [ 5] zfs_uiomove?[zfs]_[k]
  [ 6] dmu_read_uio_dnode?[zfs]_[k]
  [ 7] dmu_read_uio_dbuf?[zfs]_[k]
  [ 8] mappedread?[zfs]_[k]
  [ 9] zfs_read?[zfs]_[k]
  [10] zpl_iter_read?[zfs]_[k]
  [11] new_sync_read_[k]
  [12] vfs_read_[k]
  [13] __x64_sys_pread64_[k]
  [14] do_syscall_64_[k]
  [15] entry_SYSCALL_64_after_hwframe_[k]
  [16] __libc_pread64
  [17] sun.nio.ch.FileDispatcherImpl.pread0
  [18] sun.nio.ch.FileDispatcherImpl.pread
  [19] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [20] sun.nio.ch.IOUtil.read
  [21] sun.nio.ch.IOUtil.read
  [22] sun.nio.ch.FileChannelImpl.readInternal
  [23] sun.nio.ch.FileChannelImpl.read
  [24] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [25] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [26] jdk.nio.zipfs.ZipFileSystem$Entry.readLocEXTT
  [27] jdk.nio.zipfs.ZipFileSystem$Entry.readExtra
  [28] jdk.nio.zipfs.ZipFileSystem$Entry.readCEN
  [29] jdk.nio.zipfs.ZipFileSystem$Entry.<init>
  [30] jdk.nio.zipfs.ZipFileSystem.getEntry
  [31] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [32] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [33] jdk.nio.zipfs.ZipPath.newFileChannel
  [34] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [35] java.nio.channels.FileChannel.open
  [36] java.nio.channels.FileChannel.open
  [37] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [38] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d8b0f0.apply
  [39] cats.effect.IOFiber.$anonfun$8
  [40] cats.effect.IOFiber$$Lambda$703.0x0000000800eb2fc8.apply
  [41] cats.effect.unsafe.WorkerThread.blockOn
  [42] scala.concurrent.package$.blocking
  [43] cats.effect.IOFiber.runLoop
  [44] cats.effect.IOFiber.execR
  [45] cats.effect.IOFiber.run
  [46] cats.effect.unsafe.WorkerThread.run

--- 200565560 ns (0.03%), 20 samples
  [ 0] kmem_cache_alloc_[k]
  [ 1] spl_kmem_cache_alloc?[spl]_[k]
  [ 2] arc_buf_alloc_impl?[zfs]_[k]
  [ 3] arc_alloc_buf?[zfs]_[k]
  [ 4] dbuf_new_size?[zfs]_[k]
  [ 5] dnode_set_blksz?[zfs]_[k]
  [ 6] dmu_object_set_blocksize?[zfs]_[k]
  [ 7] zfs_grow_blocksize?[zfs]_[k]
  [ 8] zfs_write?[zfs]_[k]
  [ 9] zpl_iter_write?[zfs]_[k]
  [10] new_sync_write_[k]
  [11] vfs_write_[k]
  [12] ksys_write_[k]
  [13] __x64_sys_write_[k]
  [14] do_syscall_64_[k]
  [15] entry_SYSCALL_64_after_hwframe_[k]
  [16] write
  [17] sun.nio.ch.FileDispatcherImpl.write0
  [18] sun.nio.ch.FileDispatcherImpl.write
  [19] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [20] sun.nio.ch.IOUtil.write
  [21] sun.nio.ch.IOUtil.write
  [22] sun.nio.ch.FileChannelImpl.write
  [23] java.nio.channels.Channels.writeFullyImpl
  [24] java.nio.channels.Channels.writeFully
  [25] java.nio.channels.Channels$1.write
  [26] java.io.InputStream.transferTo
  [27] java.nio.file.Files.copy
  [28] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [29] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [30] jdk.nio.zipfs.ZipPath.newFileChannel
  [31] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [32] java.nio.channels.FileChannel.open
  [33] java.nio.channels.FileChannel.open
  [34] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [35] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d8b0f0.apply
  [36] cats.effect.IOFiber.$anonfun$8
  [37] cats.effect.IOFiber$$Lambda$703.0x0000000800eb2fc8.apply
  [38] cats.effect.unsafe.WorkerThread.blockOn
  [39] scala.concurrent.package$.blocking
  [40] cats.effect.IOFiber.runLoop
  [41] cats.effect.IOFiber.execR
  [42] cats.effect.IOFiber.run
  [43] cats.effect.unsafe.WorkerThread.run

--- 200546530 ns (0.03%), 20 samples
  [ 0] get_obj_cgroup_from_current_[k]
  [ 1] __kmalloc_[k]
  [ 2] inotify_handle_inode_event_[k]
  [ 3] fsnotify_handle_inode_event.isra.0_[k]
  [ 4] send_to_group_[k]
  [ 5] fsnotify_[k]
  [ 6] __fsnotify_parent_[k]
  [ 7] vfs_write_[k]
  [ 8] ksys_write_[k]
  [ 9] __x64_sys_write_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] write
  [13] sun.nio.ch.FileDispatcherImpl.write0
  [14] sun.nio.ch.FileDispatcherImpl.write
  [15] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [16] sun.nio.ch.IOUtil.write
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.FileChannelImpl.write
  [19] java.nio.channels.Channels.writeFullyImpl
  [20] java.nio.channels.Channels.writeFully
  [21] java.nio.channels.Channels$1.write
  [22] java.io.InputStream.transferTo
  [23] java.nio.file.Files.copy
  [24] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [25] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [26] jdk.nio.zipfs.ZipPath.newFileChannel
  [27] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [28] java.nio.channels.FileChannel.open
  [29] java.nio.channels.FileChannel.open
  [30] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [31] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d8b0f0.apply
  [32] cats.effect.IOFiber.$anonfun$8
  [33] cats.effect.IOFiber$$Lambda$703.0x0000000800eb2fc8.apply
  [34] cats.effect.unsafe.WorkerThread.blockOn
  [35] scala.concurrent.package$.blocking
  [36] cats.effect.IOFiber.runLoop
  [37] cats.effect.IOFiber.execR
  [38] cats.effect.IOFiber.run
  [39] cats.effect.unsafe.WorkerThread.run

--- 200482097 ns (0.03%), 20 samples
  [ 0] mutex_unlock_[k]
  [ 1] zfs_write?[zfs]_[k]
  [ 2] zpl_iter_write?[zfs]_[k]
  [ 3] new_sync_write_[k]
  [ 4] vfs_write_[k]
  [ 5] ksys_write_[k]
  [ 6] __x64_sys_write_[k]
  [ 7] do_syscall_64_[k]
  [ 8] entry_SYSCALL_64_after_hwframe_[k]
  [ 9] write
  [10] sun.nio.ch.FileDispatcherImpl.write0
  [11] sun.nio.ch.FileDispatcherImpl.write
  [12] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [13] sun.nio.ch.IOUtil.write
  [14] sun.nio.ch.IOUtil.write
  [15] sun.nio.ch.FileChannelImpl.write
  [16] java.nio.channels.Channels.writeFullyImpl
  [17] java.nio.channels.Channels.writeFully
  [18] java.nio.channels.Channels$1.write
  [19] java.io.InputStream.transferTo
  [20] java.nio.file.Files.copy
  [21] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [22] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [23] jdk.nio.zipfs.ZipPath.newFileChannel
  [24] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [25] java.nio.channels.FileChannel.open
  [26] java.nio.channels.FileChannel.open
  [27] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [28] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d8b0f0.apply
  [29] cats.effect.IOFiber.$anonfun$8
  [30] cats.effect.IOFiber$$Lambda$703.0x0000000800eb2fc8.apply
  [31] cats.effect.unsafe.WorkerThread.blockOn
  [32] scala.concurrent.package$.blocking
  [33] cats.effect.IOFiber.runLoop
  [34] cats.effect.IOFiber.execR
  [35] cats.effect.IOFiber.run
  [36] cats.effect.unsafe.WorkerThread.run

--- 200477294 ns (0.03%), 20 samples
  [ 0] __schedule_[k]
  [ 1] schedule_[k]
  [ 2] do_sched_yield_[k]
  [ 3] __x64_sys_sched_yield_[k]
  [ 4] do_syscall_64_[k]
  [ 5] entry_SYSCALL_64_after_hwframe_[k]
  [ 6] __GI___sched_yield
  [ 7] java.lang.Thread.yield
  [ 8] java.util.concurrent.LinkedTransferQueue.awaitMatch
  [ 9] java.util.concurrent.LinkedTransferQueue.xfer
  [10] java.util.concurrent.LinkedTransferQueue.poll
  [11] cats.effect.unsafe.WorkerThread.run

--- 200473597 ns (0.03%), 20 samples
  [ 0] refill_obj_stock_[k]
  [ 1] obj_cgroup_charge_[k]
  [ 2] __kmalloc_[k]
  [ 3] inotify_handle_inode_event_[k]
  [ 4] fsnotify_handle_inode_event.isra.0_[k]
  [ 5] send_to_group_[k]
  [ 6] fsnotify_[k]
  [ 7] open_last_lookups_[k]
  [ 8] path_openat_[k]
  [ 9] do_filp_open_[k]
  [10] do_sys_openat2_[k]
  [11] __x64_sys_openat_[k]
  [12] do_syscall_64_[k]
  [13] entry_SYSCALL_64_after_hwframe_[k]
  [14] __open64
  [15] [unknown]
  [16] sun.nio.fs.UnixNativeDispatcher.open0
  [17] sun.nio.fs.UnixNativeDispatcher.open
  [18] sun.nio.fs.UnixChannelFactory.open
  [19] sun.nio.fs.UnixChannelFactory.newFileChannel
  [20] sun.nio.fs.UnixChannelFactory.newFileChannel
  [21] sun.nio.fs.UnixFileSystemProvider.newByteChannel
  [22] java.nio.file.Files.newByteChannel
  [23] java.nio.file.Files.createFile
  [24] java.nio.file.TempFileHelper.create
  [25] java.nio.file.TempFileHelper.createTempFile
  [26] java.nio.file.Files.createTempFile
  [27] jdk.nio.zipfs.ZipFileSystem.createTempFileInSameDirectoryAs
  [28] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [29] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [30] jdk.nio.zipfs.ZipPath.newFileChannel
  [31] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [32] java.nio.channels.FileChannel.open
  [33] java.nio.channels.FileChannel.open
  [34] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [35] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d8b0f0.apply
  [36] cats.effect.IOFiber.$anonfun$8
  [37] cats.effect.IOFiber$$Lambda$703.0x0000000800eb2fc8.apply
  [38] cats.effect.unsafe.WorkerThread.blockOn
  [39] scala.concurrent.package$.blocking
  [40] cats.effect.IOFiber.runLoop
  [41] cats.effect.IOFiber.execR
  [42] cats.effect.IOFiber.run
  [43] cats.effect.unsafe.WorkerThread.run

--- 200472268 ns (0.03%), 20 samples
  [ 0] kfree_[k]
  [ 1] spl_kmem_free_impl?[spl]_[k]
  [ 2] spl_kmem_free?[spl]_[k]
  [ 3] dsl_dir_tempreserve_clear?[zfs]_[k]
  [ 4] dmu_tx_commit?[zfs]_[k]
  [ 5] zfs_write?[zfs]_[k]
  [ 6] zpl_iter_write?[zfs]_[k]
  [ 7] new_sync_write_[k]
  [ 8] vfs_write_[k]
  [ 9] ksys_write_[k]
  [10] __x64_sys_write_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] write
  [14] sun.nio.ch.FileDispatcherImpl.write0
  [15] sun.nio.ch.FileDispatcherImpl.write
  [16] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.FileChannelImpl.write
  [20] java.nio.channels.Channels.writeFullyImpl
  [21] java.nio.channels.Channels.writeFully
  [22] java.nio.channels.Channels$1.write
  [23] java.io.InputStream.transferTo
  [24] java.nio.file.Files.copy
  [25] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [26] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [27] jdk.nio.zipfs.ZipPath.newFileChannel
  [28] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [29] java.nio.channels.FileChannel.open
  [30] java.nio.channels.FileChannel.open
  [31] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [32] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d8b0f0.apply
  [33] cats.effect.IOFiber.$anonfun$8
  [34] cats.effect.IOFiber$$Lambda$703.0x0000000800eb2fc8.apply
  [35] cats.effect.unsafe.WorkerThread.blockOn
  [36] scala.concurrent.package$.blocking
  [37] cats.effect.IOFiber.runLoop
  [38] cats.effect.IOFiber.execR
  [39] cats.effect.IOFiber.run
  [40] cats.effect.unsafe.WorkerThread.run

--- 200455893 ns (0.03%), 20 samples
  [ 0] rwsem_spin_on_owner_[k]
  [ 1] rwsem_optimistic_spin_[k]
  [ 2] rwsem_down_write_slowpath_[k]
  [ 3] down_write_[k]
  [ 4] do_unlinkat_[k]
  [ 5] __x64_sys_unlink_[k]
  [ 6] do_syscall_64_[k]
  [ 7] entry_SYSCALL_64_after_hwframe_[k]
  [ 8] __GI_unlink
  [ 9] sun.nio.fs.UnixNativeDispatcher.unlink0
  [10] sun.nio.fs.UnixNativeDispatcher.unlink
  [11] sun.nio.fs.UnixFileSystemProvider.implDelete
  [12] sun.nio.fs.AbstractFileSystemProvider.delete
  [13] java.nio.file.Files.delete
  [14] jdk.nio.zipfs.ZipFileSystem.removeTempPathForEntry
  [15] jdk.nio.zipfs.ZipFileSystem$1.implCloseChannel
  [16] java.nio.channels.spi.AbstractInterruptibleChannel.close
  [17] fs2.io.file.FilesCompanionPlatform.openFileChannel$$anonfun$1$$anonfun$1
  [18] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$openFileChannel$$anonfun$1$$anonfun$adapted$1
  [19] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$719.0x0000000800eb4828.apply
  [20] cats.effect.IOFiber.$anonfun$8
  [21] cats.effect.IOFiber$$Lambda$703.0x0000000800eb2fc8.apply
  [22] cats.effect.unsafe.WorkerThread.blockOn
  [23] scala.concurrent.package$.blocking
  [24] cats.effect.IOFiber.runLoop
  [25] cats.effect.IOFiber.execR
  [26] cats.effect.IOFiber.run
  [27] cats.effect.unsafe.WorkerThread.run

--- 194019903 ns (0.03%), 19 samples
  [ 0] MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&) const
  [ 1] MemAllocator::allocate() const
  [ 2] InstanceKlass::allocate_instance(JavaThread*)
  [ 3] JVMCIRuntime::new_instance_common(JavaThread*, Klass*, bool)
  [ 4] java.lang.ClassValue.match
  [ 5] java.lang.ClassValue.get
  [ 6] cats.effect.tracing.TracingPlatform.calculateTracingEvent
  [ 7] cats.effect.IO.map
  [ 8] cats.effect.IO$$anon$2.map
  [ 9] cats.effect.IO$$anon$2.map
  [10] cats.Functor$Ops.map
  [11] cats.Functor$Ops.map$
  [12] cats.Functor$ToFunctorOps$$anon$4.map
  [13] cats.effect.kernel.Resource$.apply
  [14] cats.effect.kernel.Resource$.make
  [15] fs2.io.file.FilesCompanionPlatform$AsyncFiles.openFileChannel
  [16] fs2.io.file.FilesCompanionPlatform$AsyncFiles.open
  [17] fs2.io.file.Files$UnsealedFiles.readCursor
  [18] fs2.io.file.Files$UnsealedFiles.readAll
  [19] fs2.io.file.Files.readAll
  [20] fs2.io.file.Files.readAll$
  [21] fs2.io.file.Files$UnsealedFiles.readAll
  [22] com.scalamandra.ZipLib$$anon$1.streamFoldChunks
  [23] com.scalamandra.ZipBench.streamFoldChunks
  [24] com.scalamandra.jmh_generated.ZipBench_streamFoldChunks_jmhTest.streamFoldChunks_thrpt_jmhStub
  [25] com.scalamandra.jmh_generated.ZipBench_streamFoldChunks_jmhTest.streamFoldChunks_Throughput
  [26] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [27] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [28] java.lang.reflect.Method.invoke
  [29] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [30] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [31] java.util.concurrent.FutureTask.run
  [32] java.util.concurrent.Executors$RunnableAdapter.call
  [33] java.util.concurrent.FutureTask.run
  [34] java.util.concurrent.ThreadPoolExecutor.runWorker
  [35] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [36] java.lang.Thread.run

--- 190761372 ns (0.03%), 19 samples
  [ 0] syscall_enter_from_user_mode_[k]
  [ 1] do_syscall_64_[k]
  [ 2] entry_SYSCALL_64_after_hwframe_[k]
  [ 3] __futex_abstimed_wait_cancelable64
  [ 4] [unknown]
  [ 5] jdk.internal.misc.Unsafe.park
  [ 6] java.util.concurrent.locks.LockSupport.park
  [ 7] cats.effect.unsafe.WorkerThread.parkLoop$1
  [ 8] cats.effect.unsafe.WorkerThread.run

--- 190560256 ns (0.03%), 19 samples
  [ 0] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 1] dmu_write_uio_dnode?[zfs]_[k]
  [ 2] dmu_write_uio_dbuf?[zfs]_[k]
  [ 3] zfs_write?[zfs]_[k]
  [ 4] zpl_iter_write?[zfs]_[k]
  [ 5] new_sync_write_[k]
  [ 6] vfs_write_[k]
  [ 7] ksys_write_[k]
  [ 8] __x64_sys_write_[k]
  [ 9] do_syscall_64_[k]
  [10] entry_SYSCALL_64_after_hwframe_[k]
  [11] write
  [12] sun.nio.ch.FileDispatcherImpl.write0
  [13] sun.nio.ch.FileDispatcherImpl.write
  [14] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [15] sun.nio.ch.IOUtil.write
  [16] sun.nio.ch.IOUtil.write
  [17] sun.nio.ch.FileChannelImpl.write
  [18] java.nio.channels.Channels.writeFullyImpl
  [19] java.nio.channels.Channels.writeFully
  [20] java.nio.channels.Channels$1.write
  [21] java.io.InputStream.transferTo
  [22] java.nio.file.Files.copy
  [23] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [24] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [25] jdk.nio.zipfs.ZipPath.newFileChannel
  [26] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [27] java.nio.channels.FileChannel.open
  [28] java.nio.channels.FileChannel.open
  [29] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [30] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d8b0f0.apply
  [31] cats.effect.IOFiber.$anonfun$8
  [32] cats.effect.IOFiber$$Lambda$703.0x0000000800eb2fc8.apply
  [33] cats.effect.unsafe.WorkerThread.blockOn
  [34] scala.concurrent.package$.blocking
  [35] cats.effect.IOFiber.runLoop
  [36] cats.effect.IOFiber.execR
  [37] cats.effect.IOFiber.run
  [38] cats.effect.unsafe.WorkerThread.run

--- 190529331 ns (0.03%), 19 samples
  [ 0] find_vmap_area_[k]
  [ 1] check_heap_object_[k]
  [ 2] __check_object_size.part.0_[k]
  [ 3] __check_object_size_[k]
  [ 4] zfs_uiomove_iter?[zfs]_[k]
  [ 5] zfs_uiomove?[zfs]_[k]
  [ 6] dmu_read_uio_dnode?[zfs]_[k]
  [ 7] dmu_read_uio_dbuf?[zfs]_[k]
  [ 8] mappedread?[zfs]_[k]
  [ 9] zfs_read?[zfs]_[k]
  [10] zpl_iter_read?[zfs]_[k]
  [11] new_sync_read_[k]
  [12] vfs_read_[k]
  [13] __x64_sys_pread64_[k]
  [14] do_syscall_64_[k]
  [15] entry_SYSCALL_64_after_hwframe_[k]
  [16] __libc_pread64
  [17] sun.nio.ch.FileDispatcherImpl.pread0
  [18] sun.nio.ch.FileDispatcherImpl.pread
  [19] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [20] sun.nio.ch.IOUtil.read
  [21] sun.nio.ch.IOUtil.read
  [22] sun.nio.ch.FileChannelImpl.readInternal
  [23] sun.nio.ch.FileChannelImpl.read
  [24] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [25] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [26] jdk.nio.zipfs.ZipFileSystem$Entry.readLocEXTT
  [27] jdk.nio.zipfs.ZipFileSystem$Entry.readExtra
  [28] jdk.nio.zipfs.ZipFileSystem$Entry.readCEN
  [29] jdk.nio.zipfs.ZipFileSystem$Entry.<init>
  [30] jdk.nio.zipfs.ZipFileSystem.getEntry
  [31] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [32] jdk.nio.zipfs.ZipPath.newFileChannel
  [33] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [34] java.nio.channels.FileChannel.open
  [35] java.nio.channels.FileChannel.open
  [36] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [37] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d8b0f0.apply
  [38] cats.effect.IOFiber.$anonfun$8
  [39] cats.effect.IOFiber$$Lambda$703.0x0000000800eb2fc8.apply
  [40] cats.effect.unsafe.WorkerThread.blockOn
  [41] scala.concurrent.package$.blocking
  [42] cats.effect.IOFiber.runLoop
  [43] cats.effect.IOFiber.execR
  [44] cats.effect.IOFiber.run
  [45] cats.effect.unsafe.WorkerThread.run

--- 190476054 ns (0.03%), 19 samples
  [ 0] refill_stock_[k]
  [ 1] try_charge_memcg_[k]
  [ 2] obj_cgroup_charge_[k]
  [ 3] __kmalloc_[k]
  [ 4] inotify_handle_inode_event_[k]
  [ 5] fsnotify_handle_inode_event.isra.0_[k]
  [ 6] send_to_group_[k]
  [ 7] fsnotify_[k]
  [ 8] vfs_unlink_[k]
  [ 9] do_unlinkat_[k]
  [10] __x64_sys_unlink_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] __GI_unlink
  [14] sun.nio.fs.UnixNativeDispatcher.unlink0
  [15] sun.nio.fs.UnixNativeDispatcher.unlink
  [16] sun.nio.fs.UnixFileSystemProvider.implDelete
  [17] sun.nio.fs.AbstractFileSystemProvider.delete
  [18] java.nio.file.Files.delete
  [19] jdk.nio.zipfs.ZipFileSystem.removeTempPathForEntry
  [20] jdk.nio.zipfs.ZipFileSystem$1.implCloseChannel
  [21] java.nio.channels.spi.AbstractInterruptibleChannel.close
  [22] fs2.io.file.FilesCompanionPlatform.openFileChannel$$anonfun$1$$anonfun$1
  [23] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$openFileChannel$$anonfun$1$$anonfun$adapted$1
  [24] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$719.0x0000000800eb4828.apply
  [25] cats.effect.IOFiber.$anonfun$8
  [26] cats.effect.IOFiber$$Lambda$703.0x0000000800eb2fc8.apply
  [27] cats.effect.unsafe.WorkerThread.blockOn
  [28] scala.concurrent.package$.blocking
  [29] cats.effect.IOFiber.runLoop
  [30] cats.effect.IOFiber.execR
  [31] cats.effect.IOFiber.run
  [32] cats.effect.unsafe.WorkerThread.run

--- 190407546 ns (0.03%), 19 samples
  [ 0] obj_cgroup_charge_[k]
  [ 1] __kmalloc_[k]
  [ 2] inotify_handle_inode_event_[k]
  [ 3] fsnotify_handle_inode_event.isra.0_[k]
  [ 4] send_to_group_[k]
  [ 5] fsnotify_[k]
  [ 6] __fsnotify_parent_[k]
  [ 7] vfs_write_[k]
  [ 8] ksys_write_[k]
  [ 9] __x64_sys_write_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] write
  [13] sun.nio.ch.FileDispatcherImpl.write0
  [14] sun.nio.ch.FileDispatcherImpl.write
  [15] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [16] sun.nio.ch.IOUtil.write
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.FileChannelImpl.write
  [19] java.nio.channels.Channels.writeFullyImpl
  [20] java.nio.channels.Channels.writeFully
  [21] java.nio.channels.Channels$1.write
  [22] java.io.InputStream.transferTo
  [23] java.nio.file.Files.copy
  [24] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [25] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [26] jdk.nio.zipfs.ZipPath.newFileChannel
  [27] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [28] java.nio.channels.FileChannel.open
  [29] java.nio.channels.FileChannel.open
  [30] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [31] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d8b0f0.apply
  [32] cats.effect.IOFiber.$anonfun$8
  [33] cats.effect.IOFiber$$Lambda$703.0x0000000800eb2fc8.apply
  [34] cats.effect.unsafe.WorkerThread.blockOn
  [35] scala.concurrent.package$.blocking
  [36] cats.effect.IOFiber.runLoop
  [37] cats.effect.IOFiber.execR
  [38] cats.effect.IOFiber.run
  [39] cats.effect.unsafe.WorkerThread.run

--- 190405906 ns (0.03%), 19 samples
  [ 0] __fget_light_[k]
  [ 1] __fdget_pos_[k]
  [ 2] ksys_write_[k]
  [ 3] __x64_sys_write_[k]
  [ 4] do_syscall_64_[k]
  [ 5] entry_SYSCALL_64_after_hwframe_[k]
  [ 6] write
  [ 7] sun.nio.ch.FileDispatcherImpl.write0
  [ 8] sun.nio.ch.FileDispatcherImpl.write
  [ 9] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [10] sun.nio.ch.IOUtil.write
  [11] sun.nio.ch.IOUtil.write
  [12] sun.nio.ch.FileChannelImpl.write
  [13] java.nio.channels.Channels.writeFullyImpl
  [14] java.nio.channels.Channels.writeFully
  [15] java.nio.channels.Channels$1.write
  [16] java.io.InputStream.transferTo
  [17] java.nio.file.Files.copy
  [18] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [19] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [20] jdk.nio.zipfs.ZipPath.newFileChannel
  [21] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [22] java.nio.channels.FileChannel.open
  [23] java.nio.channels.FileChannel.open
  [24] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [25] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d8b0f0.apply
  [26] cats.effect.IOFiber.$anonfun$8
  [27] cats.effect.IOFiber$$Lambda$703.0x0000000800eb2fc8.apply
  [28] cats.effect.unsafe.WorkerThread.blockOn
  [29] scala.concurrent.package$.blocking
  [30] cats.effect.IOFiber.runLoop
  [31] cats.effect.IOFiber.execR
  [32] cats.effect.IOFiber.run
  [33] cats.effect.unsafe.WorkerThread.run

--- 190392802 ns (0.03%), 19 samples
  [ 0] rwsem_spin_on_owner_[k]
  [ 1] rwsem_optimistic_spin_[k]
  [ 2] rwsem_down_write_slowpath_[k]
  [ 3] down_write_[k]
  [ 4] do_unlinkat_[k]
  [ 5] __x64_sys_unlink_[k]
  [ 6] do_syscall_64_[k]
  [ 7] entry_SYSCALL_64_after_hwframe_[k]
  [ 8] __GI_unlink
  [ 9] sun.nio.fs.UnixNativeDispatcher.unlink0
  [10] sun.nio.fs.UnixNativeDispatcher.unlink
  [11] sun.nio.fs.UnixFileSystemProvider.implDelete
  [12] sun.nio.fs.AbstractFileSystemProvider.deleteIfExists
  [13] java.nio.file.Files.deleteIfExists
  [14] java.nio.file.Files.copy
  [15] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [16] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [17] jdk.nio.zipfs.ZipPath.newFileChannel
  [18] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [19] java.nio.channels.FileChannel.open
  [20] java.nio.channels.FileChannel.open
  [21] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [22] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d8b0f0.apply
  [23] cats.effect.IOFiber.$anonfun$8
  [24] cats.effect.IOFiber$$Lambda$703.0x0000000800eb2fc8.apply
  [25] cats.effect.unsafe.WorkerThread.blockOn
  [26] scala.concurrent.package$.blocking
  [27] cats.effect.IOFiber.runLoop
  [28] cats.effect.IOFiber.execR
  [29] cats.effect.IOFiber.run
  [30] cats.effect.unsafe.WorkerThread.run

--- 190376284 ns (0.03%), 19 samples
  [ 0] strcpy_[k]
  [ 1] fsnotify_handle_inode_event.isra.0_[k]
  [ 2] send_to_group_[k]
  [ 3] fsnotify_[k]
  [ 4] __fsnotify_parent_[k]
  [ 5] vfs_write_[k]
  [ 6] ksys_write_[k]
  [ 7] __x64_sys_write_[k]
  [ 8] do_syscall_64_[k]
  [ 9] entry_SYSCALL_64_after_hwframe_[k]
  [10] write
  [11] sun.nio.ch.FileDispatcherImpl.write0
  [12] sun.nio.ch.FileDispatcherImpl.write
  [13] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [14] sun.nio.ch.IOUtil.write
  [15] sun.nio.ch.IOUtil.write
  [16] sun.nio.ch.FileChannelImpl.write
  [17] java.nio.channels.Channels.writeFullyImpl
  [18] java.nio.channels.Channels.writeFully
  [19] java.nio.channels.Channels$1.write
  [20] java.io.InputStream.transferTo
  [21] java.nio.file.Files.copy
  [22] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [23] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [24] jdk.nio.zipfs.ZipPath.newFileChannel
  [25] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [26] java.nio.channels.FileChannel.open
  [27] java.nio.channels.FileChannel.open
  [28] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [29] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d8b0f0.apply
  [30] cats.effect.IOFiber.$anonfun$8
  [31] cats.effect.IOFiber$$Lambda$703.0x0000000800eb2fc8.apply
  [32] cats.effect.unsafe.WorkerThread.blockOn
  [33] scala.concurrent.package$.blocking
  [34] cats.effect.IOFiber.runLoop
  [35] cats.effect.IOFiber.execR
  [36] cats.effect.IOFiber.run
  [37] cats.effect.unsafe.WorkerThread.run

--- 190363111 ns (0.03%), 19 samples
  [ 0] jbyte_disjoint_arraycopy
  [ 1] jdk.internal.misc.Unsafe.copyMemory0
  [ 2] jdk.internal.misc.Unsafe.copyMemory
  [ 3] jdk.internal.misc.ScopedMemoryAccess.copyMemoryInternal
  [ 4] jdk.internal.misc.ScopedMemoryAccess.copyMemory
  [ 5] java.nio.ByteBuffer.putBuffer
  [ 6] java.nio.ByteBuffer.put
  [ 7] sun.nio.ch.IOUtil.write
  [ 8] sun.nio.ch.IOUtil.write
  [ 9] sun.nio.ch.FileChannelImpl.write
  [10] java.nio.channels.Channels.writeFullyImpl
  [11] java.nio.channels.Channels.writeFully
  [12] java.nio.channels.Channels$1.write
  [13] java.io.InputStream.transferTo
  [14] java.nio.file.Files.copy
  [15] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [16] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [17] jdk.nio.zipfs.ZipPath.newFileChannel
  [18] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [19] java.nio.channels.FileChannel.open
  [20] java.nio.channels.FileChannel.open
  [21] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [22] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$60.0x0000000800d8b0f0.apply
  [23] cats.effect.IOFiber.$anonfun$8
  [24] cats.effect.IOFiber$$Lambda$703.0x0000000800eb2fc8.apply
  [25] cats.effect.unsafe.WorkerThread.blockOn
  [26] scala.concurrent.package$.blocking
  [27] cats.effect.IOFiber.runLoop
  [28] cats.effect.IOFiber.execR
  [29] cats.effect.IOFiber.run
  [30] cats.effect.unsafe.WorkerThread.run

--- 190354032 ns (0.03%), 19 samples
  [ 0] itable stub
  [ 1] cats.Monad.map$$anonfun$1
  [ 2] cats.Monad$$Lambda$420.0x0000000800e1e928.apply
  [ 3] cats.effect.IOFiber.succeeded
  [ 4] cats.effect.IOFiber.runLoop
  [ 5] cats.effect.IOFiber.execR
  [ 6] cats.effect.IOFiber.run
  [ 7] cats.effect.unsafe.WorkerThread.run

          ns  percent  samples  top
  ----------  -------  -------  ---
128954449647   17.69%    12871  /usr/lib/x86_64-linux-gnu/libz.so.1.2.11
 54106499793    7.42%     5399  rwsem_spin_on_owner_[k]
 30566473103    4.19%     3047  _raw_spin_unlock_irqrestore_[k]
 30078848967    4.13%     3002  osq_lock_[k]
 12624359028    1.73%     1259  mutex_lock_[k]
 11100021484    1.52%     1107  memset_[k]
 10819260807    1.48%     1079  memmove_[k]
 10330419917    1.42%     1031  __memset_avx2_unaligned_erms
  9615362665    1.32%      959  _raw_spin_lock_[k]
  8803168046    1.21%      878  mutex_unlock_[k]
  8206786003    1.13%      819  inflate
  6969323864    0.96%      695  copy_user_generic_string_[k]
  6709496637    0.92%      669  __kmalloc_node_[k]
  5585675949    0.77%      557  kfree_[k]
  5405104244    0.74%      539  find_vmap_area_[k]
  5222434895    0.72%      521  itable stub
  5114365618    0.70%      510  kmem_cache_alloc_[k]
  4793640182    0.66%      478  percpu_counter_add_batch_[k]
  4240580017    0.58%      423  fsnotify_[k]
  4199974962    0.58%      419  refill_stock_[k]
  3780415312    0.52%      377  cats.effect.IOFiber.runLoop
  3298283798    0.45%      329  refill_obj_stock_[k]
  3288971512    0.45%      328  kmem_cache_free_[k]
  3248825654    0.45%      324  down_read_[k]
  2997915216    0.41%      299  memcg_slab_post_alloc_hook_[k]
  2918065277    0.40%      291  zrl_add_impl?[zfs]_[k]
  2908119346    0.40%      290  dbuf_find?[zfs]_[k]
  2867820094    0.39%      286  _raw_spin_unlock_[k]
  2835886844    0.39%      283  cats.effect.IOFiber.succeeded
  2815297575    0.39%      281  jbyte_disjoint_arraycopy
  2776586347    0.38%      277  send_to_group_[k]
  2724886390    0.37%      272  java.lang.System.arraycopy
  2326682160    0.32%      232  syscall_enter_from_user_mode_[k]
  2286389016    0.31%      228  spl_kmem_cache_alloc?[spl]_[k]
  2275787538    0.31%      227  sa_attr_op?[zfs]_[k]
  2252502660    0.31%      224  java.lang.ClassValue$ClassValueMap.loadFromCache
  2184061746    0.30%      217  cats.effect.tracing.TracingPlatform.calculateTracingEvent
  2175775545    0.30%      217  dbuf_read?[zfs]_[k]
  2153987747    0.30%      215  __memmove_avx_unaligned_erms
  2115508665    0.29%      211  __cond_resched_[k]
  2073664558    0.28%      207  java.nio.HeapByteBuffer.<init>
  2065165257    0.28%      206  page_counter_try_charge_[k]
  2044209323    0.28%      204  java.util.Arrays.copyOfRange
  2005339705    0.28%      200  up_read_[k]
  1974332023    0.27%      197  jlong_disjoint_arraycopy
  1916322116    0.26%      191  java.util.concurrent.ConcurrentLinkedQueue.poll
  1895484791    0.26%      189  arc_buf_access?[zfs]_[k]
  1855755595    0.25%      185  dbuf_hold_impl?[zfs]_[k]
  1855092033    0.25%      185  spl_mutex_clear_owner?[zfs]_[k]
  1844585910    0.25%      184  try_charge_memcg_[k]
  1804389763    0.25%      180  cats.effect.tracing.RingBuffer.push
  1802595236    0.25%      179  java.lang.ClassValue.getCacheCarefully
  1754774245    0.24%      175  u8_textprep_str?[zunicode]_[k]
  1704922636    0.23%      170  dnode_hold_impl?[zfs]_[k]
  1623823792    0.22%      162  __get_obj_cgroup_from_memcg_[k]
  1614269232    0.22%      161  dsl_dir_tempreserve_impl.constprop.0?[zfs]_[k]
  1603885945    0.22%      160  __rcu_read_lock_[k]
  1564286994    0.21%      156  kmalloc_slab_[k]
  1554446964    0.21%      155  spl_mutex_set_owner?[zfs]_[k]
  1504366760    0.21%      150  zap_hash?[zfs]_[k]
  1443915469    0.20%      144  cityhash4?[zcommon]_[k]
  1384089719    0.19%      138  dbuf_rele_and_unlock?[zfs]_[k]
  1363707380    0.19%      136  strlen_[k]
  1353422590    0.19%      135  __kmalloc_[k]
  1353194584    0.19%      135  ___slab_alloc_[k]
  1307572847    0.18%      130  java.lang.ClassValue$ClassValueMap.getCache
  1303112347    0.18%      130  inotify_handle_inode_event_[k]
  1263070877    0.17%      126  mod_memcg_state_[k]
  1253648984    0.17%      125  RW_WRITE_HELD?[zfs]_[k]
  1213413973    0.17%      121  list_head?[zfs]_[k]
  1213154910    0.17%      121  __x86_return_thunk_[k]
  1203454849    0.17%      120  zio_create?[zfs]_[k]
  1192717224    0.16%      119  fs2.Pull$.fs2$Pull$$$_$viewL$1
  1183186564    0.16%      118  zrl_remove?[zfs]_[k]
  1173272268    0.16%      117  zil_aitx_compare?[zfs]_[k]
  1172916211    0.16%      117  zfs_write?[zfs]_[k]
  1154331692    0.16%      115  java.lang.ref.Reference.get
  1153215817    0.16%      115  memcg_slab_free_hook_[k]
  1113067591    0.15%      111  dsl_dir_phys?[zfs]_[k]
  1062820665    0.15%      106  arch_atomic64_sub_return.constprop.0?[zfs]_[k]
  1052748647    0.14%      105  __rcu_read_unlock_[k]
  1052335665    0.14%      105  java.lang.StringCoding.hasNegatives
  1033117559    0.14%      103  cats.effect.unsafe.WorkerThread.run
  1012680635    0.14%      101  dmu_buf_hold_array_by_dnode?[zfs]_[k]
   992542460    0.14%       99  __list_add?[zfs]_[k]
   989981529    0.14%       98  jdk.internal.misc.Unsafe.allocateInstance
   972530413    0.13%       97  spl_kmem_cache_free?[spl]_[k]
   954422856    0.13%       95  __schedule_[k]
   942682986    0.13%       94  should_failslab_[k]
   942198229    0.13%       94  strcpy_[k]
   932426858    0.13%       93  __list_del_entry?[zfs]_[k]
   922351951    0.13%       92  __fget_light_[k]
   922187734    0.13%       92  __fsnotify_parent_[k]
   912549249    0.13%       91  dmu_tx_try_assign?[zfs]_[k]
   912051158    0.13%       91  __d_lookup_[k]
   892417858    0.12%       89  vfs_write_[k]
   862471340    0.12%       86  avl_find?[zavl]_[k]
   862342997    0.12%       86  rw_owner?[zfs]_[k]
   841875831    0.12%       84  obj_cgroup_charge_[k]
   832132413    0.11%       83  __cv_broadcast?[spl]_[k]
   832096019    0.11%       83  list_del?[zfs]_[k]
   831686179    0.11%       83  jni_GetPrimitiveArrayCritical
   831622391    0.11%       83  native_queued_spin_lock_slowpath.part.0_[k]
   811957872    0.11%       81  apparmor_file_permission_[k]
   802183699    0.11%       80  dbuf_find_dirty_lte?[zfs]_[k]
   802079603    0.11%       80  dbuf_read_verify_dnode_crypt?[zfs]_[k]
   781817116    0.11%       78  zpl_revalidate?[zfs]_[k]
   781596053    0.11%       78  write
   781460849    0.11%       78  scala.reflect.ManifestFactory$ByteManifest.newArray
   762086108    0.10%       76  spl_kmem_alloc_impl?[spl]_[k]
   752098859    0.10%       75  zap_leaf_lookup?[zfs]_[k]
   751990501    0.10%       75  wmsum_add?[zfs]_[k]
   751504395    0.10%       75  __libc_pread64
   742046447    0.10%       74  kmem_flags_convert?[spl]_[k]
   731736094    0.10%       73  get_obj_cgroup_from_current_[k]
   722171254    0.10%       72  is_vmalloc_addr_[k]
   712082470    0.10%       71  zap_leaf_array_read?[zfs]_[k]
   701785030    0.10%       70  arch_atomic64_read?[zfs]_[k]
   701546670    0.10%       70  java.util.zip.InflaterInputStream.<init>
   692009076    0.09%       69  aggsum_add?[zfs]_[k]
   691964600    0.09%       69  zio_wait?[zfs]_[k]
   691839244    0.09%       69  __dmu_object_info_from_dnode?[zfs]_[k]
   691786070    0.09%       69  link_path_walk.part.0.constprop.0_[k]
   682018194    0.09%       68  dsl_dir_tempreserve_clear?[zfs]_[k]
   681681466    0.09%       68  fsnotify_insert_event_[k]
   671699794    0.09%       67  dmu_tx_hold_dnode_impl?[zfs]_[k]
   661884909    0.09%       66  zio_done?[zfs]_[k]
   661699016    0.09%       66  list_empty?[zfs]_[k]
   661684595    0.09%       66  zfs_acl_next_ace?[zfs]_[k]
   661418874    0.09%       66  fs2.Pull$.fs2$Pull$$$_$go$1
   651730231    0.09%       65  zap_lockdir_impl?[zfs]_[k]
   651631362    0.09%       65  list_insert_tail?[zfs]_[k]
   645043448    0.09%       64  java.lang.ClassValue.match
   644561322    0.09%       64  MemAllocator::allocate() const
   641575244    0.09%       64  __x86_indirect_thunk_rax_[k]
   621785015    0.09%       62  dmu_object_size_from_db?[zfs]_[k]
   613369919    0.08%       61  java.lang.ThreadLocal$ThreadLocalMap.getEntry
   611599940    0.08%       61  inotify_merge_[k]
   594644485    0.08%       59  __tls_get_addr
   591658329    0.08%       59  strncpy_from_user_[k]
   591154704    0.08%       59  sun.nio.ch.FileDispatcherImpl.write0
   581547196    0.08%       58  u8_validate?[zunicode]_[k]
   571639137    0.08%       57  read_tsc_[k]
   571629789    0.08%       57  zfs_read?[zfs]_[k]
   561459079    0.08%       56  do_syscall_64_[k]
   551498816    0.08%       55  ktime_get_raw_ts64_[k]
   551296574    0.08%       55  lockref_put_return_[k]
   551279359    0.08%       55  zfs_mknode?[zfs]_[k]
   541516120    0.07%       54  list_is_empty?[zfs]_[k]
   541497912    0.07%       54  rrm_exit?[zfs]_[k]
   541434597    0.07%       54  zfs_log_write?[zfs]_[k]
   541337148    0.07%       54  spl_kmem_free?[spl]_[k]
   531559216    0.07%       53  __vfprintf_internal
   531454411    0.07%       53  java.lang.invoke.MethodHandle.invokeBasic
   531136842    0.07%       53  cats.effect.ArrayStack.pop
   521985954    0.07%       52  futex_wake_[k]
   521342637    0.07%       52  lockref_get_not_zero_[k]
   520797515    0.07%       52  rwsem_optimistic_spin_[k]
   511328887    0.07%       51  list_create.constprop.0?[zfs]_[k]
   511326762    0.07%       51  dmu_tx_commit?[zfs]_[k]
   511183105    0.07%       51  propagate_protected_usage_[k]
   501401152    0.07%       50  arc_tempreserve_space?[zfs]_[k]
   501366209    0.07%       50  zio_data_buf_alloc?[zfs]_[k]
   501349860    0.07%       50  dmu_tx_hold_sa?[zfs]_[k]
   501081286    0.07%       50  cats.effect.ByteStack$.pop
   483432920    0.07%       48  Unsafe_Park
   481217355    0.07%       48  dmu_objset_userquota_get_ids?[zfs]_[k]
   481111004    0.07%       48  sun.nio.ch.FileDispatcherImpl.pread0
   471351351    0.06%       47  cats.effect.unsafe.WorkStealingThreadPool.stealFromOtherWorkerThread
   471265663    0.06%       47  INIT_LIST_HEAD?[zfs]_[k]
   471251523    0.06%       47  zio_ready?[zfs]_[k]
   471235681    0.06%       47  cats.effect.ArrayStack.push
   471194940    0.06%       47  zfs_dirent_lock?[zfs]_[k]
   471128183    0.06%       47  mod_objcg_state_[k]
   462041485    0.06%       46  pthread_cond_signal@@GLIBC_2.3.2
   461280131    0.06%       46  multilist_link_active?[zfs]_[k]
   461273625    0.06%       46  txg_list_add?[zfs]_[k]
   461257658    0.06%       46  dput_[k]
   460999957    0.06%       46  __open64
   451198018    0.06%       45  check_heap_object_[k]
   451158869    0.06%       45  zfs_remove?[zfs]_[k]
   441282629    0.06%       44  cityhash_helper.constprop.0?[zcommon]_[k]
   441213878    0.06%       44  metaslab_class_get_dspace?[zfs]_[k]
   441205042    0.06%       44  dbuf_whichblock?[zfs]_[k]
   441112945    0.06%       44  fsnotify_handle_inode_event.isra.0_[k]
   440961983    0.06%       44  jdk.internal.ref.PhantomCleanable.insert
   431290852    0.06%       43  mze_compare?[zfs]_[k]
   431277943    0.06%       43  dbuf_hold_level?[zfs]_[k]
   431249242    0.06%       43  list_add_tail?[zfs]_[k]
   431187061    0.06%       43  __list_del?[zfs]_[k]
   431114355    0.06%       43  avl_remove?[zavl]_[k]
   430966031    0.06%       43  inode_permission_[k]
   430961826    0.06%       43  jni_ReleasePrimitiveArrayCritical
   421769671    0.06%       42  JVMCIRuntime::new_array_common(JavaThread*, Klass*, int, bool)
   421176412    0.06%       42  spl_fstrans_check?[spl]_[k]
   421174243    0.06%       42  zil_itx_assign?[zfs]_[k]
   421126708    0.06%       42  dnode_rele?[zfs]_[k]
   421044200    0.06%       42  list_remove?[zfs]_[k]
   420930127    0.06%       42  __pthread_self
   420885148    0.06%       42  java.util.zip.Inflater.inflate
Async profiler results:
  profile/com.scalamandra.ZipBench.streamFoldChunks-Throughput-fileName-under64kb.txt/summary-cpu.txt


# JMH version: 1.32
# VM version: JDK 17.0.6, Java HotSpot(TM) 64-Bit Server VM, 17.0.6+9-LTS-jvmci-22.3-b11
# VM invoker: /home/rajven/graal/java17/bin/java
# VM options: -XX:ThreadPriorityPolicy=1 -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCIProduct -XX:JVMCIThreadsPerNativeLibraryRuntime=1 -XX:-UnlockExperimentalVMOptions
# Blackhole mode: full + dont-inline hint
# Warmup: 20 iterations, 10 s each
# Measurement: 20 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.scalamandra.ZipBench.streamFoldChunks
# Parameters: (fileName = over64kb.txt)

# Run progress: 70,00% complete, ETA 00:20:12
# Fork: 1 of 1
# Preparing profilers: AsyncProfiler 
Java HotSpot(TM) 64-Bit Server VM warning: -XX:ThreadPriorityPolicy=1 may require system level permission, e.g., being the root user. If the necessary permission is not possessed, changes to priority will be silently ignored.
# Warmup Iteration   1: 64,238 ops/s
# Warmup Iteration   2: 73,476 ops/s
# Warmup Iteration   3: 73,813 ops/s
# Warmup Iteration   4: 73,721 ops/s
# Warmup Iteration   5: 76,529 ops/s
# Warmup Iteration   6: 75,881 ops/s
# Warmup Iteration   7: 77,841 ops/s
# Warmup Iteration   8: 78,071 ops/s
# Warmup Iteration   9: 77,671 ops/s
# Warmup Iteration  10: 77,774 ops/s
# Warmup Iteration  11: 77,684 ops/s
# Warmup Iteration  12: 78,521 ops/s
# Warmup Iteration  13: 79,075 ops/s
# Warmup Iteration  14: 76,197 ops/s
# Warmup Iteration  15: 76,789 ops/s
# Warmup Iteration  16: 74,935 ops/s
# Warmup Iteration  17: 81,101 ops/s
# Warmup Iteration  18: 77,673 ops/s
# Warmup Iteration  19: 77,743 ops/s
# Warmup Iteration  20: 77,739 ops/s
Iteration   1: 77,946 ops/s
Iteration   2: 78,425 ops/s
Iteration   3: 76,398 ops/s
Iteration   4: 74,648 ops/s
Iteration   5: 76,478 ops/s
Iteration   6: 78,562 ops/s
Iteration   7: 77,750 ops/s
Iteration   8: 77,373 ops/s
Iteration   9: 78,760 ops/s
Iteration  10: 76,965 ops/s
Iteration  11: 79,054 ops/s
Iteration  12: 78,167 ops/s
Iteration  13: 76,427 ops/s
Iteration  14: 77,191 ops/s
Iteration  15: 77,782 ops/s
Iteration  16: 74,608 ops/s
Iteration  17: 78,102 ops/s
Iteration  18: 77,651 ops/s
Iteration  19: 77,180 ops/s
Iteration  20: [WARN] Unknown argument: summary
77,518 ops/s
                 ·async: (text only)

# Processing profiler results: AsyncProfiler 


Result "com.scalamandra.ZipBench.streamFoldChunks":
  77,349 ±(99.9%) 1,037 ops/s [Average]
  (min, avg, max) = (74,608, 77,349, 79,054), stdev = 1,195
  CI (99.9%): [76,312, 78,387] (assumes normal distribution)

Secondary result "com.scalamandra.ZipBench.streamFoldChunks:·async":
--- Execution profile ---
Total samples       : 101852
GC_active           : 25 (0.02%)
unknown_Java        : 128 (0.13%)
not_walkable_Java   : 1 (0.00%)

--- 155771393915 ns (15.25%), 15538 samples
  [ 0] /usr/lib/x86_64-linux-gnu/libz.so.1.2.11
  [ 1] [unknown]
  [ 2] java.util.zip.Inflater.inflateBytesBytes
  [ 3] java.util.zip.Inflater.inflate
  [ 4] java.util.zip.InflaterInputStream.read
  [ 5] java.io.InputStream.transferTo
  [ 6] java.nio.file.Files.copy
  [ 7] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [ 8] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [ 9] jdk.nio.zipfs.ZipPath.newFileChannel
  [10] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [11] java.nio.channels.FileChannel.open
  [12] java.nio.channels.FileChannel.open
  [13] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [14] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$66.0x0000000800d8bdf0.apply
  [15] cats.effect.IOFiber.$anonfun$8
  [16] cats.effect.IOFiber$$Lambda$629.0x0000000800e9d258.apply
  [17] cats.effect.unsafe.WorkerThread.blockOn
  [18] scala.concurrent.package$.blocking
  [19] cats.effect.IOFiber.runLoop
  [20] cats.effect.IOFiber.execR
  [21] cats.effect.IOFiber.run
  [22] cats.effect.unsafe.WorkerThread.run

--- 122383546032 ns (11.98%), 12204 samples
  [ 0] /usr/lib/x86_64-linux-gnu/libz.so.1.2.11
  [ 1] java.util.zip.Inflater.inflateBytesBytes
  [ 2] java.util.zip.Inflater.inflate
  [ 3] java.util.zip.InflaterInputStream.read
  [ 4] java.io.InputStream.transferTo
  [ 5] java.nio.file.Files.copy
  [ 6] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [ 7] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [ 8] jdk.nio.zipfs.ZipPath.newFileChannel
  [ 9] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [10] java.nio.channels.FileChannel.open
  [11] java.nio.channels.FileChannel.open
  [12] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [13] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$66.0x0000000800d8bdf0.apply
  [14] cats.effect.IOFiber.$anonfun$8
  [15] cats.effect.IOFiber$$Lambda$629.0x0000000800e9d258.apply
  [16] cats.effect.unsafe.WorkerThread.blockOn
  [17] scala.concurrent.package$.blocking
  [18] cats.effect.IOFiber.runLoop
  [19] cats.effect.IOFiber.execR
  [20] cats.effect.IOFiber.run
  [21] cats.effect.unsafe.WorkerThread.run

--- 56121372262 ns (5.49%), 5599 samples
  [ 0] /usr/lib/x86_64-linux-gnu/libz.so.1.2.11
  [ 1] [unknown]
  [ 2] java.util.zip.Inflater.inflateBytesBytes
  [ 3] java.util.zip.Inflater.inflate
  [ 4] java.util.zip.InflaterInputStream.read
  [ 5] java.io.InputStream.transferTo
  [ 6] java.nio.file.Files.copy
  [ 7] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [ 8] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [ 9] jdk.nio.zipfs.ZipPath.newFileChannel
  [10] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [11] java.nio.channels.FileChannel.open
  [12] java.nio.channels.FileChannel.open
  [13] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [14] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$66.0x0000000800d8bdf0.apply
  [15] cats.effect.IOFiber.$anonfun$8
  [16] cats.effect.IOFiber$$Lambda$629.0x0000000800e9d258.apply
  [17] cats.effect.unsafe.WorkerThread.blockOn
  [18] scala.concurrent.package$.blocking
  [19] cats.effect.IOFiber.runLoop
  [20] cats.effect.IOFiber.execR
  [21] cats.effect.IOFiber.run
  [22] cats.effect.unsafe.WorkerThread.run

--- 45263550783 ns (4.43%), 4514 samples
  [ 0] /usr/lib/x86_64-linux-gnu/libz.so.1.2.11
  [ 1] java.util.zip.Inflater.inflateBytesBytes
  [ 2] java.util.zip.Inflater.inflate
  [ 3] java.util.zip.InflaterInputStream.read
  [ 4] java.io.InputStream.transferTo
  [ 5] java.nio.file.Files.copy
  [ 6] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [ 7] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [ 8] jdk.nio.zipfs.ZipPath.newFileChannel
  [ 9] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [10] java.nio.channels.FileChannel.open
  [11] java.nio.channels.FileChannel.open
  [12] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [13] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$66.0x0000000800d8bdf0.apply
  [14] cats.effect.IOFiber.$anonfun$8
  [15] cats.effect.IOFiber$$Lambda$629.0x0000000800e9d258.apply
  [16] cats.effect.unsafe.WorkerThread.blockOn
  [17] scala.concurrent.package$.blocking
  [18] cats.effect.IOFiber.runLoop
  [19] cats.effect.IOFiber.execR
  [20] cats.effect.IOFiber.run
  [21] cats.effect.unsafe.WorkerThread.run

--- 33119463616 ns (3.24%), 3302 samples
  [ 0] _raw_spin_unlock_irqrestore_[k]
  [ 1] __wake_up_common_lock_[k]
  [ 2] __wake_up_[k]
  [ 3] fsnotify_insert_event_[k]
  [ 4] inotify_handle_inode_event_[k]
  [ 5] fsnotify_handle_inode_event.isra.0_[k]
  [ 6] send_to_group_[k]
  [ 7] fsnotify_[k]
  [ 8] __fsnotify_parent_[k]
  [ 9] vfs_write_[k]
  [10] ksys_write_[k]
  [11] __x64_sys_write_[k]
  [12] do_syscall_64_[k]
  [13] entry_SYSCALL_64_after_hwframe_[k]
  [14] write
  [15] sun.nio.ch.FileDispatcherImpl.write0
  [16] sun.nio.ch.FileDispatcherImpl.write
  [17] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.IOUtil.write
  [20] sun.nio.ch.FileChannelImpl.write
  [21] java.nio.channels.Channels.writeFullyImpl
  [22] java.nio.channels.Channels.writeFully
  [23] java.nio.channels.Channels$1.write
  [24] java.io.InputStream.transferTo
  [25] java.nio.file.Files.copy
  [26] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [27] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [28] jdk.nio.zipfs.ZipPath.newFileChannel
  [29] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [30] java.nio.channels.FileChannel.open
  [31] java.nio.channels.FileChannel.open
  [32] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [33] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$66.0x0000000800d8bdf0.apply
  [34] cats.effect.IOFiber.$anonfun$8
  [35] cats.effect.IOFiber$$Lambda$629.0x0000000800e9d258.apply
  [36] cats.effect.unsafe.WorkerThread.blockOn
  [37] scala.concurrent.package$.blocking
  [38] cats.effect.IOFiber.runLoop
  [39] cats.effect.IOFiber.execR
  [40] cats.effect.IOFiber.run
  [41] cats.effect.unsafe.WorkerThread.run

--- 16111787736 ns (1.58%), 1607 samples
  [ 0] inflate
  [ 1] java.util.zip.Inflater.inflateBytesBytes
  [ 2] java.util.zip.Inflater.inflate
  [ 3] java.util.zip.InflaterInputStream.read
  [ 4] java.io.InputStream.transferTo
  [ 5] java.nio.file.Files.copy
  [ 6] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [ 7] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [ 8] jdk.nio.zipfs.ZipPath.newFileChannel
  [ 9] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [10] java.nio.channels.FileChannel.open
  [11] java.nio.channels.FileChannel.open
  [12] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [13] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$66.0x0000000800d8bdf0.apply
  [14] cats.effect.IOFiber.$anonfun$8
  [15] cats.effect.IOFiber$$Lambda$629.0x0000000800e9d258.apply
  [16] cats.effect.unsafe.WorkerThread.blockOn
  [17] scala.concurrent.package$.blocking
  [18] cats.effect.IOFiber.runLoop
  [19] cats.effect.IOFiber.execR
  [20] cats.effect.IOFiber.run
  [21] cats.effect.unsafe.WorkerThread.run

--- 13030690966 ns (1.28%), 1299 samples
  [ 0] _raw_spin_unlock_irqrestore_[k]
  [ 1] __wake_up_common_lock_[k]
  [ 2] __wake_up_[k]
  [ 3] fsnotify_insert_event_[k]
  [ 4] inotify_handle_inode_event_[k]
  [ 5] fsnotify_handle_inode_event.isra.0_[k]
  [ 6] send_to_group_[k]
  [ 7] fsnotify_[k]
  [ 8] __fsnotify_parent_[k]
  [ 9] vfs_write_[k]
  [10] ksys_write_[k]
  [11] __x64_sys_write_[k]
  [12] do_syscall_64_[k]
  [13] entry_SYSCALL_64_after_hwframe_[k]
  [14] write
  [15] sun.nio.ch.FileDispatcherImpl.write0
  [16] sun.nio.ch.FileDispatcherImpl.write
  [17] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.IOUtil.write
  [20] sun.nio.ch.FileChannelImpl.write
  [21] java.nio.channels.Channels.writeFullyImpl
  [22] java.nio.channels.Channels.writeFully
  [23] java.nio.channels.Channels$1.write
  [24] java.io.InputStream.transferTo
  [25] java.nio.file.Files.copy
  [26] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [27] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [28] jdk.nio.zipfs.ZipPath.newFileChannel
  [29] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [30] java.nio.channels.FileChannel.open
  [31] java.nio.channels.FileChannel.open
  [32] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [33] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$66.0x0000000800d8bdf0.apply
  [34] cats.effect.IOFiber.$anonfun$8
  [35] cats.effect.IOFiber$$Lambda$629.0x0000000800e9d258.apply
  [36] cats.effect.unsafe.WorkerThread.blockOn
  [37] scala.concurrent.package$.blocking
  [38] cats.effect.IOFiber.runLoop
  [39] cats.effect.IOFiber.execR
  [40] cats.effect.IOFiber.run
  [41] cats.effect.unsafe.WorkerThread.run

--- 11645221041 ns (1.14%), 1162 samples
  [ 0] java.util.Arrays.copyOfRange
  [ 1] java.lang.String.<init>
  [ 2] java.lang.String.<init>
  [ 3] com.scalamandra.ZipLib$.com$scalamandra$ZipLib$$anon$1$$_$streamFoldChunks$$anonfun$1
  [ 4] com.scalamandra.ZipLib$$anon$1$$Lambda$254.0x0000000800dcbaf0.apply
  [ 5] cats.effect.IOFiber.succeeded
  [ 6] cats.effect.IOFiber.runLoop
  [ 7] cats.effect.IOFiber.autoCedeR
  [ 8] cats.effect.IOFiber.run
  [ 9] cats.effect.unsafe.WorkerThread.run

--- 11623839396 ns (1.14%), 1159 samples
  [ 0] java.lang.System.arraycopy
  [ 1] fs2.Chunk$ArraySlice.copyToArray
  [ 2] fs2.Chunk$Queue.go$4
  [ 3] fs2.Chunk$Queue.copyToArray
  [ 4] fs2.Chunk.toArray
  [ 5] com.scalamandra.ZipLib$.com$scalamandra$ZipLib$$anon$1$$_$streamFoldChunks$$anonfun$1
  [ 6] com.scalamandra.ZipLib$$anon$1$$Lambda$254.0x0000000800dcbaf0.apply
  [ 7] cats.effect.IOFiber.succeeded
  [ 8] cats.effect.IOFiber.runLoop
  [ 9] cats.effect.IOFiber.autoCedeR
  [10] cats.effect.IOFiber.run
  [11] cats.effect.unsafe.WorkerThread.run

--- 11102557492 ns (1.09%), 1105 samples
  [ 0] __memcpy_sse2_unaligned_erms
  [ 1] G1ParScanThreadState::steal_and_trim_queue(GenericTaskQueueSet<OverflowTaskQueue<ScannerTask, (MEMFLAGS)5, 131072u>, (MEMFLAGS)5>*)
  [ 2] G1ParEvacuateFollowersClosure::do_void()
  [ 3] G1EvacuateRegionsTask::evacuate_live_objects(G1ParScanThreadState*, unsigned int)
  [ 4] G1EvacuateRegionsBaseTask::work(unsigned int)
  [ 5] GangWorker::loop()
  [ 6] GangWorker::run()
  [ 7] Thread::call_run()
  [ 8] thread_native_entry(Thread*)
  [ 9] start_thread

--- 7967304002 ns (0.78%), 794 samples
  [ 0] __memset_avx2_unaligned_erms
  [ 1] MemAllocator::allocate() const
  [ 2] TypeArrayKlass::allocate_common(int, bool, JavaThread*)
  [ 3] JVMCIRuntime::new_array_common(JavaThread*, Klass*, int, bool)
  [ 4] com.scalamandra.ZipLib$.com$scalamandra$ZipLib$$anon$1$$_$streamFoldChunks$$anonfun$1
  [ 5] com.scalamandra.ZipLib$$anon$1$$Lambda$254.0x0000000800dcbaf0.apply
  [ 6] cats.effect.IOFiber.succeeded
  [ 7] cats.effect.IOFiber.runLoop
  [ 8] cats.effect.IOFiber.autoCedeR
  [ 9] cats.effect.IOFiber.run
  [10] cats.effect.unsafe.WorkerThread.run

--- 7399718420 ns (0.72%), 738 samples
  [ 0] __memset_avx2_unaligned_erms
  [ 1] MemAllocator::allocate() const
  [ 2] TypeArrayKlass::allocate_common(int, bool, JavaThread*)
  [ 3] JVMCIRuntime::new_array_common(JavaThread*, Klass*, int, bool)
  [ 4] java.nio.charset.Charset.forName
  [ 5] com.scalamandra.ZipLib$.com$scalamandra$ZipLib$$anon$1$$_$streamFoldChunks$$anonfun$1
  [ 6] com.scalamandra.ZipLib$$anon$1$$Lambda$254.0x0000000800dcbaf0.apply
  [ 7] cats.effect.IOFiber.succeeded
  [ 8] cats.effect.IOFiber.runLoop
  [ 9] cats.effect.IOFiber.autoCedeR
  [10] cats.effect.IOFiber.run
  [11] cats.effect.unsafe.WorkerThread.run

--- 6725784148 ns (0.66%), 671 samples
  [ 0] java.lang.StringCoding.hasNegatives
  [ 1] java.lang.String.<init>
  [ 2] java.lang.String.<init>
  [ 3] com.scalamandra.ZipLib$.com$scalamandra$ZipLib$$anon$1$$_$streamFoldChunks$$anonfun$1
  [ 4] com.scalamandra.ZipLib$$anon$1$$Lambda$254.0x0000000800dcbaf0.apply
  [ 5] cats.effect.IOFiber.succeeded
  [ 6] cats.effect.IOFiber.runLoop
  [ 7] cats.effect.IOFiber.autoCedeR
  [ 8] cats.effect.IOFiber.run
  [ 9] cats.effect.unsafe.WorkerThread.run

--- 6595777906 ns (0.65%), 657 samples
  [ 0] memset_[k]
  [ 1] dbuf_read_impl.constprop.0?[zfs]_[k]
  [ 2] dbuf_read?[zfs]_[k]
  [ 3] dmu_tx_check_ioerr?[zfs]_[k]
  [ 4] dmu_tx_count_write?[zfs]_[k]
  [ 5] dmu_tx_hold_write_by_dnode?[zfs]_[k]
  [ 6] zfs_write?[zfs]_[k]
  [ 7] zpl_iter_write?[zfs]_[k]
  [ 8] new_sync_write_[k]
  [ 9] vfs_write_[k]
  [10] ksys_write_[k]
  [11] __x64_sys_write_[k]
  [12] do_syscall_64_[k]
  [13] entry_SYSCALL_64_after_hwframe_[k]
  [14] write
  [15] sun.nio.ch.FileDispatcherImpl.write0
  [16] sun.nio.ch.FileDispatcherImpl.write
  [17] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.IOUtil.write
  [20] sun.nio.ch.FileChannelImpl.write
  [21] java.nio.channels.Channels.writeFullyImpl
  [22] java.nio.channels.Channels.writeFully
  [23] java.nio.channels.Channels$1.write
  [24] java.io.InputStream.transferTo
  [25] java.nio.file.Files.copy
  [26] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [27] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [28] jdk.nio.zipfs.ZipPath.newFileChannel
  [29] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [30] java.nio.channels.FileChannel.open
  [31] java.nio.channels.FileChannel.open
  [32] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [33] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$66.0x0000000800d8bdf0.apply
  [34] cats.effect.IOFiber.$anonfun$8
  [35] cats.effect.IOFiber$$Lambda$629.0x0000000800e9d258.apply
  [36] cats.effect.unsafe.WorkerThread.blockOn
  [37] scala.concurrent.package$.blocking
  [38] cats.effect.IOFiber.runLoop
  [39] cats.effect.IOFiber.execR
  [40] cats.effect.IOFiber.run
  [41] cats.effect.unsafe.WorkerThread.run

--- 6542561700 ns (0.64%), 652 samples
  [ 0] copy_user_generic_string_[k]
  [ 1] zfs_uiomove_iter?[zfs]_[k]
  [ 2] zfs_uiomove?[zfs]_[k]
  [ 3] dmu_write_uio_dnode?[zfs]_[k]
  [ 4] dmu_write_uio_dbuf?[zfs]_[k]
  [ 5] zfs_write?[zfs]_[k]
  [ 6] zpl_iter_write?[zfs]_[k]
  [ 7] new_sync_write_[k]
  [ 8] vfs_write_[k]
  [ 9] ksys_write_[k]
  [10] __x64_sys_write_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] write
  [14] sun.nio.ch.FileDispatcherImpl.write0
  [15] sun.nio.ch.FileDispatcherImpl.write
  [16] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.FileChannelImpl.write
  [20] java.nio.channels.Channels.writeFullyImpl
  [21] java.nio.channels.Channels.writeFully
  [22] java.nio.channels.Channels$1.write
  [23] java.io.InputStream.transferTo
  [24] java.nio.file.Files.copy
  [25] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [26] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [27] jdk.nio.zipfs.ZipPath.newFileChannel
  [28] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [29] java.nio.channels.FileChannel.open
  [30] java.nio.channels.FileChannel.open
  [31] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [32] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$66.0x0000000800d8bdf0.apply
  [33] cats.effect.IOFiber.$anonfun$8
  [34] cats.effect.IOFiber$$Lambda$629.0x0000000800e9d258.apply
  [35] cats.effect.unsafe.WorkerThread.blockOn
  [36] scala.concurrent.package$.blocking
  [37] cats.effect.IOFiber.runLoop
  [38] cats.effect.IOFiber.execR
  [39] cats.effect.IOFiber.run
  [40] cats.effect.unsafe.WorkerThread.run

--- 6234001071 ns (0.61%), 621 samples
  [ 0] copy_user_generic_string_[k]
  [ 1] zfs_uiomove_iter?[zfs]_[k]
  [ 2] zfs_uiomove?[zfs]_[k]
  [ 3] dmu_read_uio_dnode?[zfs]_[k]
  [ 4] dmu_read_uio_dbuf?[zfs]_[k]
  [ 5] zfs_read?[zfs]_[k]
  [ 6] zpl_iter_read?[zfs]_[k]
  [ 7] new_sync_read_[k]
  [ 8] vfs_read_[k]
  [ 9] __x64_sys_pread64_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] __libc_pread64
  [13] sun.nio.ch.FileDispatcherImpl.pread0
  [14] sun.nio.ch.FileDispatcherImpl.pread
  [15] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [16] sun.nio.ch.IOUtil.read
  [17] sun.nio.ch.IOUtil.read
  [18] sun.nio.ch.FileChannelImpl.readInternal
  [19] sun.nio.ch.FileChannelImpl.read
  [20] jdk.nio.zipfs.ZipFileSystem$1.read
  [21] fs2.io.file.FileHandleCompanionPlatform$$anon$1.read$$anonfun$1
  [22] fs2.io.file.FileHandleCompanionPlatform$$anon$1$$Lambda$670.0x0000000800ea9ac8.apply
  [23] cats.effect.IOFiber.$anonfun$8
  [24] cats.effect.IOFiber$$Lambda$629.0x0000000800e9d258.apply
  [25] cats.effect.unsafe.WorkerThread.blockOn
  [26] scala.concurrent.package$.blocking
  [27] cats.effect.IOFiber.runLoop
  [28] cats.effect.IOFiber.autoCedeR
  [29] cats.effect.IOFiber.run
  [30] cats.effect.unsafe.WorkerThread.run

--- 5524288150 ns (0.54%), 551 samples
  [ 0] inflate
  [ 1] java.util.zip.Inflater.inflateBytesBytes
  [ 2] java.util.zip.Inflater.inflate
  [ 3] java.util.zip.InflaterInputStream.read
  [ 4] java.io.InputStream.transferTo
  [ 5] java.nio.file.Files.copy
  [ 6] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [ 7] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [ 8] jdk.nio.zipfs.ZipPath.newFileChannel
  [ 9] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [10] java.nio.channels.FileChannel.open
  [11] java.nio.channels.FileChannel.open
  [12] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [13] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$66.0x0000000800d8bdf0.apply
  [14] cats.effect.IOFiber.$anonfun$8
  [15] cats.effect.IOFiber$$Lambda$629.0x0000000800e9d258.apply
  [16] cats.effect.unsafe.WorkerThread.blockOn
  [17] scala.concurrent.package$.blocking
  [18] cats.effect.IOFiber.runLoop
  [19] cats.effect.IOFiber.execR
  [20] cats.effect.IOFiber.run
  [21] cats.effect.unsafe.WorkerThread.run

--- 5144266711 ns (0.50%), 513 samples
  [ 0] java.lang.System.arraycopy
  [ 1] fs2.Chunk$ArraySlice.copyToArray
  [ 2] fs2.Chunk$Queue.go$4
  [ 3] fs2.Chunk$Queue.copyToArray
  [ 4] fs2.Chunk.toArray
  [ 5] com.scalamandra.ZipLib$.com$scalamandra$ZipLib$$anon$1$$_$streamFoldChunks$$anonfun$1
  [ 6] com.scalamandra.ZipLib$$anon$1$$Lambda$254.0x0000000800dcbaf0.apply
  [ 7] cats.effect.IOFiber.succeeded
  [ 8] cats.effect.IOFiber.runLoop
  [ 9] cats.effect.IOFiber.autoCedeR
  [10] cats.effect.IOFiber.run
  [11] cats.effect.unsafe.WorkerThread.run

--- 4800984474 ns (0.47%), 479 samples
  [ 0] java.util.Arrays.copyOfRange
  [ 1] java.lang.String.<init>
  [ 2] java.lang.String.<init>
  [ 3] com.scalamandra.ZipLib$.com$scalamandra$ZipLib$$anon$1$$_$streamFoldChunks$$anonfun$1
  [ 4] com.scalamandra.ZipLib$$anon$1$$Lambda$254.0x0000000800dcbaf0.apply
  [ 5] cats.effect.IOFiber.succeeded
  [ 6] cats.effect.IOFiber.runLoop
  [ 7] cats.effect.IOFiber.autoCedeR
  [ 8] cats.effect.IOFiber.run
  [ 9] cats.effect.unsafe.WorkerThread.run

--- 4392406182 ns (0.43%), 438 samples
  [ 0] /usr/lib/x86_64-linux-gnu/libz.so.1.2.11
  [ 1] [unknown]
  [ 2] java.util.zip.Inflater.inflateBytesBytes
  [ 3] java.util.zip.Inflater.inflate
  [ 4] java.util.zip.InflaterInputStream.read
  [ 5] java.io.InputStream.transferTo
  [ 6] java.nio.file.Files.copy
  [ 7] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [ 8] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [ 9] jdk.nio.zipfs.ZipPath.newFileChannel
  [10] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [11] java.nio.channels.FileChannel.open
  [12] java.nio.channels.FileChannel.open
  [13] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [14] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$66.0x0000000800d8bdf0.apply
  [15] cats.effect.IOFiber.$anonfun$8
  [16] cats.effect.IOFiber$$Lambda$629.0x0000000800e9d258.apply
  [17] cats.effect.unsafe.WorkerThread.blockOn
  [18] scala.concurrent.package$.blocking
  [19] cats.effect.IOFiber.runLoop
  [20] cats.effect.IOFiber.execR
  [21] cats.effect.IOFiber.run
  [22] cats.effect.unsafe.WorkerThread.run

--- 4203482062 ns (0.41%), 419 samples
  [ 0] refill_stock_[k]
  [ 1] try_charge_memcg_[k]
  [ 2] obj_cgroup_charge_[k]
  [ 3] __kmalloc_[k]
  [ 4] inotify_handle_inode_event_[k]
  [ 5] fsnotify_handle_inode_event.isra.0_[k]
  [ 6] send_to_group_[k]
  [ 7] fsnotify_[k]
  [ 8] __fsnotify_parent_[k]
  [ 9] vfs_write_[k]
  [10] ksys_write_[k]
  [11] __x64_sys_write_[k]
  [12] do_syscall_64_[k]
  [13] entry_SYSCALL_64_after_hwframe_[k]
  [14] write
  [15] sun.nio.ch.FileDispatcherImpl.write0
  [16] sun.nio.ch.FileDispatcherImpl.write
  [17] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.IOUtil.write
  [20] sun.nio.ch.FileChannelImpl.write
  [21] java.nio.channels.Channels.writeFullyImpl
  [22] java.nio.channels.Channels.writeFully
  [23] java.nio.channels.Channels$1.write
  [24] java.io.InputStream.transferTo
  [25] java.nio.file.Files.copy
  [26] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [27] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [28] jdk.nio.zipfs.ZipPath.newFileChannel
  [29] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [30] java.nio.channels.FileChannel.open
  [31] java.nio.channels.FileChannel.open
  [32] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [33] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$66.0x0000000800d8bdf0.apply
  [34] cats.effect.IOFiber.$anonfun$8
  [35] cats.effect.IOFiber$$Lambda$629.0x0000000800e9d258.apply
  [36] cats.effect.unsafe.WorkerThread.blockOn
  [37] scala.concurrent.package$.blocking
  [38] cats.effect.IOFiber.runLoop
  [39] cats.effect.IOFiber.execR
  [40] cats.effect.IOFiber.run
  [41] cats.effect.unsafe.WorkerThread.run

--- 4163430167 ns (0.41%), 415 samples
  [ 0] __memset_avx2_unaligned_erms
  [ 1] MemAllocator::allocate() const
  [ 2] TypeArrayKlass::allocate_common(int, bool, JavaThread*)
  [ 3] JVMCIRuntime::new_array_common(JavaThread*, Klass*, int, bool)
  [ 4] com.scalamandra.ZipLib$.com$scalamandra$ZipLib$$anon$1$$_$streamFoldChunks$$anonfun$1
  [ 5] com.scalamandra.ZipLib$$anon$1$$Lambda$254.0x0000000800dcbaf0.apply
  [ 6] cats.effect.IOFiber.succeeded
  [ 7] cats.effect.IOFiber.runLoop
  [ 8] cats.effect.IOFiber.autoCedeR
  [ 9] cats.effect.IOFiber.run
  [10] cats.effect.unsafe.WorkerThread.run

--- 3845610092 ns (0.38%), 383 samples
  [ 0] fsnotify_[k]
  [ 1] __fsnotify_parent_[k]
  [ 2] vfs_write_[k]
  [ 3] ksys_write_[k]
  [ 4] __x64_sys_write_[k]
  [ 5] do_syscall_64_[k]
  [ 6] entry_SYSCALL_64_after_hwframe_[k]
  [ 7] write
  [ 8] sun.nio.ch.FileDispatcherImpl.write0
  [ 9] sun.nio.ch.FileDispatcherImpl.write
  [10] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [11] sun.nio.ch.IOUtil.write
  [12] sun.nio.ch.IOUtil.write
  [13] sun.nio.ch.FileChannelImpl.write
  [14] java.nio.channels.Channels.writeFullyImpl
  [15] java.nio.channels.Channels.writeFully
  [16] java.nio.channels.Channels$1.write
  [17] java.io.InputStream.transferTo
  [18] java.nio.file.Files.copy
  [19] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [20] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [21] jdk.nio.zipfs.ZipPath.newFileChannel
  [22] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [23] java.nio.channels.FileChannel.open
  [24] java.nio.channels.FileChannel.open
  [25] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [26] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$66.0x0000000800d8bdf0.apply
  [27] cats.effect.IOFiber.$anonfun$8
  [28] cats.effect.IOFiber$$Lambda$629.0x0000000800e9d258.apply
  [29] cats.effect.unsafe.WorkerThread.blockOn
  [30] scala.concurrent.package$.blocking
  [31] cats.effect.IOFiber.runLoop
  [32] cats.effect.IOFiber.execR
  [33] cats.effect.IOFiber.run
  [34] cats.effect.unsafe.WorkerThread.run

--- 3783868898 ns (0.37%), 377 samples
  [ 0] __memmove_avx_unaligned_erms
  [ 1] java.util.zip.Inflater.inflateBytesBytes
  [ 2] java.util.zip.Inflater.inflate
  [ 3] java.util.zip.InflaterInputStream.read
  [ 4] java.io.InputStream.transferTo
  [ 5] java.nio.file.Files.copy
  [ 6] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [ 7] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [ 8] jdk.nio.zipfs.ZipPath.newFileChannel
  [ 9] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [10] java.nio.channels.FileChannel.open
  [11] java.nio.channels.FileChannel.open
  [12] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [13] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$66.0x0000000800d8bdf0.apply
  [14] cats.effect.IOFiber.$anonfun$8
  [15] cats.effect.IOFiber$$Lambda$629.0x0000000800e9d258.apply
  [16] cats.effect.unsafe.WorkerThread.blockOn
  [17] scala.concurrent.package$.blocking
  [18] cats.effect.IOFiber.runLoop
  [19] cats.effect.IOFiber.execR
  [20] cats.effect.IOFiber.run
  [21] cats.effect.unsafe.WorkerThread.run

--- 3732243292 ns (0.37%), 372 samples
  [ 0] jlong_disjoint_arraycopy
  [ 1] jdk.internal.misc.Unsafe.copyMemory0
  [ 2] jdk.internal.misc.Unsafe.copyMemory
  [ 3] jdk.internal.misc.ScopedMemoryAccess.copyMemoryInternal
  [ 4] jdk.internal.misc.ScopedMemoryAccess.copyMemory
  [ 5] java.nio.ByteBuffer.putBuffer
  [ 6] java.nio.ByteBuffer.put
  [ 7] sun.nio.ch.IOUtil.write
  [ 8] sun.nio.ch.IOUtil.write
  [ 9] sun.nio.ch.FileChannelImpl.write
  [10] java.nio.channels.Channels.writeFullyImpl
  [11] java.nio.channels.Channels.writeFully
  [12] java.nio.channels.Channels$1.write
  [13] java.io.InputStream.transferTo
  [14] java.nio.file.Files.copy
  [15] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [16] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [17] jdk.nio.zipfs.ZipPath.newFileChannel
  [18] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [19] java.nio.channels.FileChannel.open
  [20] java.nio.channels.FileChannel.open
  [21] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [22] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$66.0x0000000800d8bdf0.apply
  [23] cats.effect.IOFiber.$anonfun$8
  [24] cats.effect.IOFiber$$Lambda$629.0x0000000800e9d258.apply
  [25] cats.effect.unsafe.WorkerThread.blockOn
  [26] scala.concurrent.package$.blocking
  [27] cats.effect.IOFiber.runLoop
  [28] cats.effect.IOFiber.execR
  [29] cats.effect.IOFiber.run
  [30] cats.effect.unsafe.WorkerThread.run

--- 3601406344 ns (0.35%), 359 samples
  [ 0] refill_obj_stock_[k]
  [ 1] obj_cgroup_charge_[k]
  [ 2] __kmalloc_[k]
  [ 3] inotify_handle_inode_event_[k]
  [ 4] fsnotify_handle_inode_event.isra.0_[k]
  [ 5] send_to_group_[k]
  [ 6] fsnotify_[k]
  [ 7] __fsnotify_parent_[k]
  [ 8] vfs_write_[k]
  [ 9] ksys_write_[k]
  [10] __x64_sys_write_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] write
  [14] sun.nio.ch.FileDispatcherImpl.write0
  [15] sun.nio.ch.FileDispatcherImpl.write
  [16] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.FileChannelImpl.write
  [20] java.nio.channels.Channels.writeFullyImpl
  [21] java.nio.channels.Channels.writeFully
  [22] java.nio.channels.Channels$1.write
  [23] java.io.InputStream.transferTo
  [24] java.nio.file.Files.copy
  [25] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [26] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [27] jdk.nio.zipfs.ZipPath.newFileChannel
  [28] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [29] java.nio.channels.FileChannel.open
  [30] java.nio.channels.FileChannel.open
  [31] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [32] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$66.0x0000000800d8bdf0.apply
  [33] cats.effect.IOFiber.$anonfun$8
  [34] cats.effect.IOFiber$$Lambda$629.0x0000000800e9d258.apply
  [35] cats.effect.unsafe.WorkerThread.blockOn
  [36] scala.concurrent.package$.blocking
  [37] cats.effect.IOFiber.runLoop
  [38] cats.effect.IOFiber.execR
  [39] cats.effect.IOFiber.run
  [40] cats.effect.unsafe.WorkerThread.run

--- 3339435737 ns (0.33%), 333 samples
  [ 0] __memset_avx2_unaligned_erms
  [ 1] MemAllocator::allocate() const
  [ 2] TypeArrayKlass::allocate_common(int, bool, JavaThread*)
  [ 3] JVMCIRuntime::new_array_common(JavaThread*, Klass*, int, bool)
  [ 4] java.nio.charset.Charset.forName
  [ 5] com.scalamandra.ZipLib$.com$scalamandra$ZipLib$$anon$1$$_$streamFoldChunks$$anonfun$1
  [ 6] com.scalamandra.ZipLib$$anon$1$$Lambda$254.0x0000000800dcbaf0.apply
  [ 7] cats.effect.IOFiber.succeeded
  [ 8] cats.effect.IOFiber.runLoop
  [ 9] cats.effect.IOFiber.autoCedeR
  [10] cats.effect.IOFiber.run
  [11] cats.effect.unsafe.WorkerThread.run

--- 3333028352 ns (0.33%), 331 samples
  [ 0] send_to_group_[k]
  [ 1] fsnotify_[k]
  [ 2] __fsnotify_parent_[k]
  [ 3] vfs_write_[k]
  [ 4] ksys_write_[k]
  [ 5] __x64_sys_write_[k]
  [ 6] do_syscall_64_[k]
  [ 7] entry_SYSCALL_64_after_hwframe_[k]
  [ 8] write
  [ 9] sun.nio.ch.FileDispatcherImpl.write0
  [10] sun.nio.ch.FileDispatcherImpl.write
  [11] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [12] sun.nio.ch.IOUtil.write
  [13] sun.nio.ch.IOUtil.write
  [14] sun.nio.ch.FileChannelImpl.write
  [15] java.nio.channels.Channels.writeFullyImpl
  [16] java.nio.channels.Channels.writeFully
  [17] java.nio.channels.Channels$1.write
  [18] java.io.InputStream.transferTo
  [19] java.nio.file.Files.copy
  [20] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [21] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [22] jdk.nio.zipfs.ZipPath.newFileChannel
  [23] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [24] java.nio.channels.FileChannel.open
  [25] java.nio.channels.FileChannel.open
  [26] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [27] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$66.0x0000000800d8bdf0.apply
  [28] cats.effect.IOFiber.$anonfun$8
  [29] cats.effect.IOFiber$$Lambda$629.0x0000000800e9d258.apply
  [30] cats.effect.unsafe.WorkerThread.blockOn
  [31] scala.concurrent.package$.blocking
  [32] cats.effect.IOFiber.runLoop
  [33] cats.effect.IOFiber.execR
  [34] cats.effect.IOFiber.run
  [35] cats.effect.unsafe.WorkerThread.run

--- 3187393637 ns (0.31%), 318 samples
  [ 0] /usr/lib/x86_64-linux-gnu/libz.so.1.2.11
  [ 1] java.util.zip.Inflater.inflateBytesBytes
  [ 2] java.util.zip.Inflater.inflate
  [ 3] java.util.zip.InflaterInputStream.read
  [ 4] java.io.InputStream.transferTo
  [ 5] java.nio.file.Files.copy
  [ 6] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [ 7] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [ 8] jdk.nio.zipfs.ZipPath.newFileChannel
  [ 9] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [10] java.nio.channels.FileChannel.open
  [11] java.nio.channels.FileChannel.open
  [12] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [13] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$66.0x0000000800d8bdf0.apply
  [14] cats.effect.IOFiber.$anonfun$8
  [15] cats.effect.IOFiber$$Lambda$629.0x0000000800e9d258.apply
  [16] cats.effect.unsafe.WorkerThread.blockOn
  [17] scala.concurrent.package$.blocking
  [18] cats.effect.IOFiber.runLoop
  [19] cats.effect.IOFiber.execR
  [20] cats.effect.IOFiber.run
  [21] cats.effect.unsafe.WorkerThread.run

--- 3112077008 ns (0.30%), 310 samples
  [ 0] memset_[k]
  [ 1] dbuf_read_impl.constprop.0?[zfs]_[k]
  [ 2] dbuf_read?[zfs]_[k]
  [ 3] dmu_buf_will_dirty_impl?[zfs]_[k]
  [ 4] dmu_buf_will_dirty?[zfs]_[k]
  [ 5] dmu_write_uio_dnode?[zfs]_[k]
  [ 6] dmu_write_uio_dbuf?[zfs]_[k]
  [ 7] zfs_write?[zfs]_[k]
  [ 8] zpl_iter_write?[zfs]_[k]
  [ 9] new_sync_write_[k]
  [10] vfs_write_[k]
  [11] ksys_write_[k]
  [12] __x64_sys_write_[k]
  [13] do_syscall_64_[k]
  [14] entry_SYSCALL_64_after_hwframe_[k]
  [15] write
  [16] sun.nio.ch.FileDispatcherImpl.write0
  [17] sun.nio.ch.FileDispatcherImpl.write
  [18] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [19] sun.nio.ch.IOUtil.write
  [20] sun.nio.ch.IOUtil.write
  [21] sun.nio.ch.FileChannelImpl.write
  [22] java.nio.channels.Channels.writeFullyImpl
  [23] java.nio.channels.Channels.writeFully
  [24] java.nio.channels.Channels$1.write
  [25] java.io.InputStream.transferTo
  [26] java.nio.file.Files.copy
  [27] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [28] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [29] jdk.nio.zipfs.ZipPath.newFileChannel
  [30] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [31] java.nio.channels.FileChannel.open
  [32] java.nio.channels.FileChannel.open
  [33] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [34] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$66.0x0000000800d8bdf0.apply
  [35] cats.effect.IOFiber.$anonfun$8
  [36] cats.effect.IOFiber$$Lambda$629.0x0000000800e9d258.apply
  [37] cats.effect.unsafe.WorkerThread.blockOn
  [38] scala.concurrent.package$.blocking
  [39] cats.effect.IOFiber.runLoop
  [40] cats.effect.IOFiber.execR
  [41] cats.effect.IOFiber.run
  [42] cats.effect.unsafe.WorkerThread.run

--- 2976562970 ns (0.29%), 297 samples
  [ 0] java.lang.StringCoding.hasNegatives
  [ 1] java.lang.String.<init>
  [ 2] java.lang.String.<init>
  [ 3] com.scalamandra.ZipLib$.com$scalamandra$ZipLib$$anon$1$$_$streamFoldChunks$$anonfun$1
  [ 4] com.scalamandra.ZipLib$$anon$1$$Lambda$254.0x0000000800dcbaf0.apply
  [ 5] cats.effect.IOFiber.succeeded
  [ 6] cats.effect.IOFiber.runLoop
  [ 7] cats.effect.IOFiber.autoCedeR
  [ 8] cats.effect.IOFiber.run
  [ 9] cats.effect.unsafe.WorkerThread.run

--- 2959267682 ns (0.29%), 295 samples
  [ 0] copy_user_generic_string_[k]
  [ 1] zfs_uiomove_iter?[zfs]_[k]
  [ 2] zfs_uiomove?[zfs]_[k]
  [ 3] dmu_read_uio_dnode?[zfs]_[k]
  [ 4] dmu_read_uio_dbuf?[zfs]_[k]
  [ 5] mappedread?[zfs]_[k]
  [ 6] zfs_read?[zfs]_[k]
  [ 7] zpl_iter_read?[zfs]_[k]
  [ 8] new_sync_read_[k]
  [ 9] vfs_read_[k]
  [10] __x64_sys_pread64_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] __libc_pread64
  [14] sun.nio.ch.FileDispatcherImpl.pread0
  [15] sun.nio.ch.FileDispatcherImpl.pread
  [16] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [17] sun.nio.ch.IOUtil.read
  [18] sun.nio.ch.IOUtil.read
  [19] sun.nio.ch.FileChannelImpl.readInternal
  [20] sun.nio.ch.FileChannelImpl.read
  [21] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [22] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [23] jdk.nio.zipfs.ZipFileSystem$2.fill
  [24] java.util.zip.InflaterInputStream.read
  [25] java.io.InputStream.transferTo
  [26] java.nio.file.Files.copy
  [27] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [28] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [29] jdk.nio.zipfs.ZipPath.newFileChannel
  [30] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [31] java.nio.channels.FileChannel.open
  [32] java.nio.channels.FileChannel.open
  [33] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [34] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$66.0x0000000800d8bdf0.apply
  [35] cats.effect.IOFiber.$anonfun$8
  [36] cats.effect.IOFiber$$Lambda$629.0x0000000800e9d258.apply
  [37] cats.effect.unsafe.WorkerThread.blockOn
  [38] scala.concurrent.package$.blocking
  [39] cats.effect.IOFiber.runLoop
  [40] cats.effect.IOFiber.execR
  [41] cats.effect.IOFiber.run
  [42] cats.effect.unsafe.WorkerThread.run

--- 2952991123 ns (0.29%), 294 samples
  [ 0] find_vmap_area_[k]
  [ 1] check_heap_object_[k]
  [ 2] __check_object_size.part.0_[k]
  [ 3] __check_object_size_[k]
  [ 4] zfs_uiomove_iter?[zfs]_[k]
  [ 5] zfs_uiomove?[zfs]_[k]
  [ 6] dmu_write_uio_dnode?[zfs]_[k]
  [ 7] dmu_write_uio_dbuf?[zfs]_[k]
  [ 8] zfs_write?[zfs]_[k]
  [ 9] zpl_iter_write?[zfs]_[k]
  [10] new_sync_write_[k]
  [11] vfs_write_[k]
  [12] ksys_write_[k]
  [13] __x64_sys_write_[k]
  [14] do_syscall_64_[k]
  [15] entry_SYSCALL_64_after_hwframe_[k]
  [16] write
  [17] sun.nio.ch.FileDispatcherImpl.write0
  [18] sun.nio.ch.FileDispatcherImpl.write
  [19] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [20] sun.nio.ch.IOUtil.write
  [21] sun.nio.ch.IOUtil.write
  [22] sun.nio.ch.FileChannelImpl.write
  [23] java.nio.channels.Channels.writeFullyImpl
  [24] java.nio.channels.Channels.writeFully
  [25] java.nio.channels.Channels$1.write
  [26] java.io.InputStream.transferTo
  [27] java.nio.file.Files.copy
  [28] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [29] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [30] jdk.nio.zipfs.ZipPath.newFileChannel
  [31] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [32] java.nio.channels.FileChannel.open
  [33] java.nio.channels.FileChannel.open
  [34] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [35] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$66.0x0000000800d8bdf0.apply
  [36] cats.effect.IOFiber.$anonfun$8
  [37] cats.effect.IOFiber$$Lambda$629.0x0000000800e9d258.apply
  [38] cats.effect.unsafe.WorkerThread.blockOn
  [39] scala.concurrent.package$.blocking
  [40] cats.effect.IOFiber.runLoop
  [41] cats.effect.IOFiber.execR
  [42] cats.effect.IOFiber.run
  [43] cats.effect.unsafe.WorkerThread.run

--- 2868807655 ns (0.28%), 286 samples
  [ 0] __memset_avx2_unaligned_erms
  [ 1] MemAllocator::allocate() const
  [ 2] TypeArrayKlass::allocate_common(int, bool, JavaThread*)
  [ 3] JVMCIRuntime::new_array_common(JavaThread*, Klass*, int, bool)
  [ 4] cats.effect.unsafe.WorkerThread.blockOn
  [ 5] scala.concurrent.package$.blocking
  [ 6] cats.effect.IOFiber.runLoop
  [ 7] cats.effect.IOFiber.autoCedeR
  [ 8] cats.effect.IOFiber.run
  [ 9] cats.effect.unsafe.WorkerThread.run

--- 2827670805 ns (0.28%), 282 samples
  [ 0] page_counter_try_charge_[k]
  [ 1] try_charge_memcg_[k]
  [ 2] obj_cgroup_charge_[k]
  [ 3] __kmalloc_[k]
  [ 4] inotify_handle_inode_event_[k]
  [ 5] fsnotify_handle_inode_event.isra.0_[k]
  [ 6] send_to_group_[k]
  [ 7] fsnotify_[k]
  [ 8] __fsnotify_parent_[k]
  [ 9] vfs_write_[k]
  [10] ksys_write_[k]
  [11] __x64_sys_write_[k]
  [12] do_syscall_64_[k]
  [13] entry_SYSCALL_64_after_hwframe_[k]
  [14] write
  [15] sun.nio.ch.FileDispatcherImpl.write0
  [16] sun.nio.ch.FileDispatcherImpl.write
  [17] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.IOUtil.write
  [20] sun.nio.ch.FileChannelImpl.write
  [21] java.nio.channels.Channels.writeFullyImpl
  [22] java.nio.channels.Channels.writeFully
  [23] java.nio.channels.Channels$1.write
  [24] java.io.InputStream.transferTo
  [25] java.nio.file.Files.copy
  [26] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [27] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [28] jdk.nio.zipfs.ZipPath.newFileChannel
  [29] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [30] java.nio.channels.FileChannel.open
  [31] java.nio.channels.FileChannel.open
  [32] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [33] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$66.0x0000000800d8bdf0.apply
  [34] cats.effect.IOFiber.$anonfun$8
  [35] cats.effect.IOFiber$$Lambda$629.0x0000000800e9d258.apply
  [36] cats.effect.unsafe.WorkerThread.blockOn
  [37] scala.concurrent.package$.blocking
  [38] cats.effect.IOFiber.runLoop
  [39] cats.effect.IOFiber.execR
  [40] cats.effect.IOFiber.run
  [41] cats.effect.unsafe.WorkerThread.run

--- 2631948748 ns (0.26%), 262 samples
  [ 0] copy_user_generic_string_[k]
  [ 1] zfs_uiomove_iter?[zfs]_[k]
  [ 2] zfs_uiomove?[zfs]_[k]
  [ 3] dmu_read_uio_dnode?[zfs]_[k]
  [ 4] dmu_read_uio_dbuf?[zfs]_[k]
  [ 5] zfs_read?[zfs]_[k]
  [ 6] zpl_iter_read?[zfs]_[k]
  [ 7] new_sync_read_[k]
  [ 8] vfs_read_[k]
  [ 9] __x64_sys_pread64_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] __libc_pread64
  [13] sun.nio.ch.FileDispatcherImpl.pread0
  [14] sun.nio.ch.FileDispatcherImpl.pread
  [15] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [16] sun.nio.ch.IOUtil.read
  [17] sun.nio.ch.IOUtil.read
  [18] sun.nio.ch.FileChannelImpl.readInternal
  [19] sun.nio.ch.FileChannelImpl.read
  [20] jdk.nio.zipfs.ZipFileSystem$1.read
  [21] fs2.io.file.FileHandleCompanionPlatform$$anon$1.read$$anonfun$1
  [22] fs2.io.file.FileHandleCompanionPlatform$$anon$1$$Lambda$670.0x0000000800ea9ac8.apply
  [23] cats.effect.IOFiber.$anonfun$8
  [24] cats.effect.IOFiber$$Lambda$629.0x0000000800e9d258.apply
  [25] cats.effect.unsafe.WorkerThread.blockOn
  [26] scala.concurrent.package$.blocking
  [27] cats.effect.IOFiber.runLoop
  [28] cats.effect.IOFiber.execR
  [29] cats.effect.IOFiber.run
  [30] cats.effect.unsafe.WorkerThread.run

--- 2479982958 ns (0.24%), 247 samples
  [ 0] copy_user_generic_string_[k]
  [ 1] zfs_uiomove_iter?[zfs]_[k]
  [ 2] zfs_uiomove?[zfs]_[k]
  [ 3] dmu_write_uio_dnode?[zfs]_[k]
  [ 4] dmu_write_uio_dbuf?[zfs]_[k]
  [ 5] zfs_write?[zfs]_[k]
  [ 6] zpl_iter_write?[zfs]_[k]
  [ 7] new_sync_write_[k]
  [ 8] vfs_write_[k]
  [ 9] ksys_write_[k]
  [10] __x64_sys_write_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] write
  [14] sun.nio.ch.FileDispatcherImpl.write0
  [15] sun.nio.ch.FileDispatcherImpl.write
  [16] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.FileChannelImpl.write
  [20] java.nio.channels.Channels.writeFullyImpl
  [21] java.nio.channels.Channels.writeFully
  [22] java.nio.channels.Channels$1.write
  [23] java.io.InputStream.transferTo
  [24] java.nio.file.Files.copy
  [25] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [26] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [27] jdk.nio.zipfs.ZipPath.newFileChannel
  [28] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [29] java.nio.channels.FileChannel.open
  [30] java.nio.channels.FileChannel.open
  [31] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [32] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$66.0x0000000800d8bdf0.apply
  [33] cats.effect.IOFiber.$anonfun$8
  [34] cats.effect.IOFiber$$Lambda$629.0x0000000800e9d258.apply
  [35] cats.effect.unsafe.WorkerThread.blockOn
  [36] scala.concurrent.package$.blocking
  [37] cats.effect.IOFiber.runLoop
  [38] cats.effect.IOFiber.execR
  [39] cats.effect.IOFiber.run
  [40] cats.effect.unsafe.WorkerThread.run

--- 2399433255 ns (0.23%), 239 samples
  [ 0] memset_[k]
  [ 1] dbuf_read_impl.constprop.0?[zfs]_[k]
  [ 2] dbuf_read?[zfs]_[k]
  [ 3] dmu_tx_check_ioerr?[zfs]_[k]
  [ 4] dmu_tx_count_write?[zfs]_[k]
  [ 5] dmu_tx_hold_write_by_dnode?[zfs]_[k]
  [ 6] zfs_write?[zfs]_[k]
  [ 7] zpl_iter_write?[zfs]_[k]
  [ 8] new_sync_write_[k]
  [ 9] vfs_write_[k]
  [10] ksys_write_[k]
  [11] __x64_sys_write_[k]
  [12] do_syscall_64_[k]
  [13] entry_SYSCALL_64_after_hwframe_[k]
  [14] write
  [15] sun.nio.ch.FileDispatcherImpl.write0
  [16] sun.nio.ch.FileDispatcherImpl.write
  [17] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.IOUtil.write
  [20] sun.nio.ch.FileChannelImpl.write
  [21] java.nio.channels.Channels.writeFullyImpl
  [22] java.nio.channels.Channels.writeFully
  [23] java.nio.channels.Channels$1.write
  [24] java.io.InputStream.transferTo
  [25] java.nio.file.Files.copy
  [26] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [27] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [28] jdk.nio.zipfs.ZipPath.newFileChannel
  [29] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [30] java.nio.channels.FileChannel.open
  [31] java.nio.channels.FileChannel.open
  [32] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [33] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$66.0x0000000800d8bdf0.apply
  [34] cats.effect.IOFiber.$anonfun$8
  [35] cats.effect.IOFiber$$Lambda$629.0x0000000800e9d258.apply
  [36] cats.effect.unsafe.WorkerThread.blockOn
  [37] scala.concurrent.package$.blocking
  [38] cats.effect.IOFiber.runLoop
  [39] cats.effect.IOFiber.execR
  [40] cats.effect.IOFiber.run
  [41] cats.effect.unsafe.WorkerThread.run

--- 2196143734 ns (0.21%), 219 samples
  [ 0] native_queued_spin_lock_slowpath.part.0_[k]
  [ 1] native_queued_spin_lock_slowpath_[k]
  [ 2] _raw_spin_lock_[k]
  [ 3] fsnotify_insert_event_[k]
  [ 4] inotify_handle_inode_event_[k]
  [ 5] fsnotify_handle_inode_event.isra.0_[k]
  [ 6] send_to_group_[k]
  [ 7] fsnotify_[k]
  [ 8] __fsnotify_parent_[k]
  [ 9] vfs_write_[k]
  [10] ksys_write_[k]
  [11] __x64_sys_write_[k]
  [12] do_syscall_64_[k]
  [13] entry_SYSCALL_64_after_hwframe_[k]
  [14] write
  [15] sun.nio.ch.FileDispatcherImpl.write0
  [16] sun.nio.ch.FileDispatcherImpl.write
  [17] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.IOUtil.write
  [20] sun.nio.ch.FileChannelImpl.write
  [21] java.nio.channels.Channels.writeFullyImpl
  [22] java.nio.channels.Channels.writeFully
  [23] java.nio.channels.Channels$1.write
  [24] java.io.InputStream.transferTo
  [25] java.nio.file.Files.copy
  [26] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [27] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [28] jdk.nio.zipfs.ZipPath.newFileChannel
  [29] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [30] java.nio.channels.FileChannel.open
  [31] java.nio.channels.FileChannel.open
  [32] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [33] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$66.0x0000000800d8bdf0.apply
  [34] cats.effect.IOFiber.$anonfun$8
  [35] cats.effect.IOFiber$$Lambda$629.0x0000000800e9d258.apply
  [36] cats.effect.unsafe.WorkerThread.blockOn
  [37] scala.concurrent.package$.blocking
  [38] cats.effect.IOFiber.runLoop
  [39] cats.effect.IOFiber.execR
  [40] cats.effect.IOFiber.run
  [41] cats.effect.unsafe.WorkerThread.run

--- 2184269628 ns (0.21%), 218 samples
  [ 0] void OopOopIterateDispatch<G1CMOopClosure>::Table::oop_oop_iterate<InstanceKlass, narrowOop>(G1CMOopClosure*, oopDesc*, Klass*)
  [ 1] void G1CMTask::process_grey_task_entry<true>(G1TaskQueueEntry)
  [ 2] G1CMTask::do_marking_step(double, bool, bool)
  [ 3] G1CMConcurrentMarkingTask::work(unsigned int)
  [ 4] GangWorker::loop()
  [ 5] GangWorker::run()
  [ 6] Thread::call_run()
  [ 7] thread_native_entry(Thread*)
  [ 8] start_thread

--- 2090512143 ns (0.20%), 208 samples
  [ 0] zfs_write?[zfs]_[k]
  [ 1] zpl_iter_write?[zfs]_[k]
  [ 2] new_sync_write_[k]
  [ 3] vfs_write_[k]
  [ 4] ksys_write_[k]
  [ 5] __x64_sys_write_[k]
  [ 6] do_syscall_64_[k]
  [ 7] entry_SYSCALL_64_after_hwframe_[k]
  [ 8] write
  [ 9] sun.nio.ch.FileDispatcherImpl.write0
  [10] sun.nio.ch.FileDispatcherImpl.write
  [11] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [12] sun.nio.ch.IOUtil.write
  [13] sun.nio.ch.IOUtil.write
  [14] sun.nio.ch.FileChannelImpl.write
  [15] java.nio.channels.Channels.writeFullyImpl
  [16] java.nio.channels.Channels.writeFully
  [17] java.nio.channels.Channels$1.write
  [18] java.io.InputStream.transferTo
  [19] java.nio.file.Files.copy
  [20] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [21] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [22] jdk.nio.zipfs.ZipPath.newFileChannel
  [23] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [24] java.nio.channels.FileChannel.open
  [25] java.nio.channels.FileChannel.open
  [26] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [27] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$66.0x0000000800d8bdf0.apply
  [28] cats.effect.IOFiber.$anonfun$8
  [29] cats.effect.IOFiber$$Lambda$629.0x0000000800e9d258.apply
  [30] cats.effect.unsafe.WorkerThread.blockOn
  [31] scala.concurrent.package$.blocking
  [32] cats.effect.IOFiber.runLoop
  [33] cats.effect.IOFiber.execR
  [34] cats.effect.IOFiber.run
  [35] cats.effect.unsafe.WorkerThread.run

--- 2075324845 ns (0.20%), 207 samples
  [ 0] jlong_disjoint_arraycopy
  [ 1] jdk.internal.misc.Unsafe.copyMemory0
  [ 2] jdk.internal.misc.Unsafe.copyMemory
  [ 3] jdk.internal.misc.ScopedMemoryAccess.copyMemoryInternal
  [ 4] jdk.internal.misc.ScopedMemoryAccess.copyMemory
  [ 5] java.nio.ByteBuffer.putBuffer
  [ 6] java.nio.ByteBuffer.put
  [ 7] java.nio.HeapByteBuffer.put
  [ 8] sun.nio.ch.IOUtil.read
  [ 9] sun.nio.ch.IOUtil.read
  [10] sun.nio.ch.FileChannelImpl.readInternal
  [11] sun.nio.ch.FileChannelImpl.read
  [12] jdk.nio.zipfs.ZipFileSystem$1.read
  [13] fs2.io.file.FileHandleCompanionPlatform$$anon$1.read$$anonfun$1
  [14] fs2.io.file.FileHandleCompanionPlatform$$anon$1$$Lambda$670.0x0000000800ea9ac8.apply
  [15] cats.effect.IOFiber.$anonfun$8
  [16] cats.effect.IOFiber$$Lambda$629.0x0000000800e9d258.apply
  [17] cats.effect.unsafe.WorkerThread.blockOn
  [18] scala.concurrent.package$.blocking
  [19] cats.effect.IOFiber.runLoop
  [20] cats.effect.IOFiber.autoCedeR
  [21] cats.effect.IOFiber.run
  [22] cats.effect.unsafe.WorkerThread.run

--- 1966015632 ns (0.19%), 196 samples
  [ 0] try_charge_memcg_[k]
  [ 1] obj_cgroup_charge_[k]
  [ 2] __kmalloc_[k]
  [ 3] inotify_handle_inode_event_[k]
  [ 4] fsnotify_handle_inode_event.isra.0_[k]
  [ 5] send_to_group_[k]
  [ 6] fsnotify_[k]
  [ 7] __fsnotify_parent_[k]
  [ 8] vfs_write_[k]
  [ 9] ksys_write_[k]
  [10] __x64_sys_write_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] write
  [14] sun.nio.ch.FileDispatcherImpl.write0
  [15] sun.nio.ch.FileDispatcherImpl.write
  [16] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.FileChannelImpl.write
  [20] java.nio.channels.Channels.writeFullyImpl
  [21] java.nio.channels.Channels.writeFully
  [22] java.nio.channels.Channels$1.write
  [23] java.io.InputStream.transferTo
  [24] java.nio.file.Files.copy
  [25] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [26] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [27] jdk.nio.zipfs.ZipPath.newFileChannel
  [28] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [29] java.nio.channels.FileChannel.open
  [30] java.nio.channels.FileChannel.open
  [31] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [32] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$66.0x0000000800d8bdf0.apply
  [33] cats.effect.IOFiber.$anonfun$8
  [34] cats.effect.IOFiber$$Lambda$629.0x0000000800e9d258.apply
  [35] cats.effect.unsafe.WorkerThread.blockOn
  [36] scala.concurrent.package$.blocking
  [37] cats.effect.IOFiber.runLoop
  [38] cats.effect.IOFiber.execR
  [39] cats.effect.IOFiber.run
  [40] cats.effect.unsafe.WorkerThread.run

--- 1946220773 ns (0.19%), 194 samples
  [ 0] copy_user_generic_string_[k]
  [ 1] zfs_uiomove_iter?[zfs]_[k]
  [ 2] zfs_uiomove?[zfs]_[k]
  [ 3] dmu_read_uio_dnode?[zfs]_[k]
  [ 4] dmu_read_uio_dbuf?[zfs]_[k]
  [ 5] zfs_read?[zfs]_[k]
  [ 6] zpl_iter_read?[zfs]_[k]
  [ 7] new_sync_read_[k]
  [ 8] vfs_read_[k]
  [ 9] __x64_sys_pread64_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] __libc_pread64
  [13] sun.nio.ch.FileDispatcherImpl.pread0
  [14] sun.nio.ch.FileDispatcherImpl.pread
  [15] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [16] sun.nio.ch.IOUtil.read
  [17] sun.nio.ch.IOUtil.read
  [18] sun.nio.ch.FileChannelImpl.readInternal
  [19] sun.nio.ch.FileChannelImpl.read
  [20] jdk.nio.zipfs.ZipFileSystem$1.read
  [21] fs2.io.file.FileHandleCompanionPlatform$$anon$1.read$$anonfun$1
  [22] fs2.io.file.FileHandleCompanionPlatform$$anon$1$$Lambda$670.0x0000000800ea9ac8.apply
  [23] cats.effect.IOFiber.$anonfun$8
  [24] cats.effect.IOFiber$$Lambda$629.0x0000000800e9d258.apply
  [25] cats.effect.unsafe.WorkerThread.blockOn
  [26] scala.concurrent.package$.blocking
  [27] cats.effect.IOFiber.runLoop
  [28] cats.effect.IOFiber.autoCedeR
  [29] cats.effect.IOFiber.run
  [30] cats.effect.unsafe.WorkerThread.run

--- 1774737993 ns (0.17%), 177 samples
  [ 0] java.nio.HeapByteBuffer.<init>
  [ 1] java.nio.ByteBuffer.allocate
  [ 2] fs2.io.file.FileHandleCompanionPlatform$$anon$1.read$$anonfun$1
  [ 3] fs2.io.file.FileHandleCompanionPlatform$$anon$1$$Lambda$670.0x0000000800ea9ac8.apply
  [ 4] cats.effect.IOFiber.$anonfun$8
  [ 5] cats.effect.IOFiber$$Lambda$629.0x0000000800e9d258.apply
  [ 6] cats.effect.unsafe.WorkerThread.blockOn
  [ 7] scala.concurrent.package$.blocking
  [ 8] cats.effect.IOFiber.runLoop
  [ 9] cats.effect.IOFiber.autoCedeR
  [10] cats.effect.IOFiber.run
  [11] cats.effect.unsafe.WorkerThread.run

--- 1748385626 ns (0.17%), 174 samples
  [ 0] __memcpy_sse2_unaligned_erms
  [ 1] G1ParEvacuateFollowersClosure::do_void()
  [ 2] G1EvacuateRegionsTask::evacuate_live_objects(G1ParScanThreadState*, unsigned int)
  [ 3] G1EvacuateRegionsBaseTask::work(unsigned int)
  [ 4] GangWorker::loop()
  [ 5] GangWorker::run()
  [ 6] Thread::call_run()
  [ 7] thread_native_entry(Thread*)
  [ 8] start_thread

--- 1733642762 ns (0.17%), 173 samples
  [ 0] G1RebuildRemSetTask::G1RebuildRemSetHeapRegionClosure::do_heap_region(HeapRegion*)
  [ 1] HeapRegionManager::par_iterate(HeapRegionClosure*, HeapRegionClaimer*, unsigned int) const
  [ 2] G1RebuildRemSetTask::work(unsigned int)
  [ 3] GangWorker::loop()
  [ 4] GangWorker::run()
  [ 5] Thread::call_run()
  [ 6] thread_native_entry(Thread*)
  [ 7] start_thread

--- 1716410126 ns (0.17%), 171 samples
  [ 0] inotify_handle_inode_event_[k]
  [ 1] fsnotify_handle_inode_event.isra.0_[k]
  [ 2] send_to_group_[k]
  [ 3] fsnotify_[k]
  [ 4] __fsnotify_parent_[k]
  [ 5] vfs_write_[k]
  [ 6] ksys_write_[k]
  [ 7] __x64_sys_write_[k]
  [ 8] do_syscall_64_[k]
  [ 9] entry_SYSCALL_64_after_hwframe_[k]
  [10] write
  [11] sun.nio.ch.FileDispatcherImpl.write0
  [12] sun.nio.ch.FileDispatcherImpl.write
  [13] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [14] sun.nio.ch.IOUtil.write
  [15] sun.nio.ch.IOUtil.write
  [16] sun.nio.ch.FileChannelImpl.write
  [17] java.nio.channels.Channels.writeFullyImpl
  [18] java.nio.channels.Channels.writeFully
  [19] java.nio.channels.Channels$1.write
  [20] java.io.InputStream.transferTo
  [21] java.nio.file.Files.copy
  [22] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [23] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [24] jdk.nio.zipfs.ZipPath.newFileChannel
  [25] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [26] java.nio.channels.FileChannel.open
  [27] java.nio.channels.FileChannel.open
  [28] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [29] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$66.0x0000000800d8bdf0.apply
  [30] cats.effect.IOFiber.$anonfun$8
  [31] cats.effect.IOFiber$$Lambda$629.0x0000000800e9d258.apply
  [32] cats.effect.unsafe.WorkerThread.blockOn
  [33] scala.concurrent.package$.blocking
  [34] cats.effect.IOFiber.runLoop
  [35] cats.effect.IOFiber.execR
  [36] cats.effect.IOFiber.run
  [37] cats.effect.unsafe.WorkerThread.run

--- 1605244264 ns (0.16%), 160 samples
  [ 0] memmove_[k]
  [ 1] dnode_set_blksz?[zfs]_[k]
  [ 2] dmu_object_set_blocksize?[zfs]_[k]
  [ 3] zfs_grow_blocksize?[zfs]_[k]
  [ 4] zfs_write?[zfs]_[k]
  [ 5] zpl_iter_write?[zfs]_[k]
  [ 6] new_sync_write_[k]
  [ 7] vfs_write_[k]
  [ 8] ksys_write_[k]
  [ 9] __x64_sys_write_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] write
  [13] sun.nio.ch.FileDispatcherImpl.write0
  [14] sun.nio.ch.FileDispatcherImpl.write
  [15] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [16] sun.nio.ch.IOUtil.write
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.FileChannelImpl.write
  [19] java.nio.channels.Channels.writeFullyImpl
  [20] java.nio.channels.Channels.writeFully
  [21] java.nio.channels.Channels$1.write
  [22] java.io.InputStream.transferTo
  [23] java.nio.file.Files.copy
  [24] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [25] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [26] jdk.nio.zipfs.ZipPath.newFileChannel
  [27] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [28] java.nio.channels.FileChannel.open
  [29] java.nio.channels.FileChannel.open
  [30] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [31] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$66.0x0000000800d8bdf0.apply
  [32] cats.effect.IOFiber.$anonfun$8
  [33] cats.effect.IOFiber$$Lambda$629.0x0000000800e9d258.apply
  [34] cats.effect.unsafe.WorkerThread.blockOn
  [35] scala.concurrent.package$.blocking
  [36] cats.effect.IOFiber.runLoop
  [37] cats.effect.IOFiber.execR
  [38] cats.effect.IOFiber.run
  [39] cats.effect.unsafe.WorkerThread.run

--- 1536747751 ns (0.15%), 153 samples
  [ 0] memcg_slab_post_alloc_hook_[k]
  [ 1] __kmalloc_[k]
  [ 2] inotify_handle_inode_event_[k]
  [ 3] fsnotify_handle_inode_event.isra.0_[k]
  [ 4] send_to_group_[k]
  [ 5] fsnotify_[k]
  [ 6] __fsnotify_parent_[k]
  [ 7] vfs_write_[k]
  [ 8] ksys_write_[k]
  [ 9] __x64_sys_write_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] write
  [13] sun.nio.ch.FileDispatcherImpl.write0
  [14] sun.nio.ch.FileDispatcherImpl.write
  [15] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [16] sun.nio.ch.IOUtil.write
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.FileChannelImpl.write
  [19] java.nio.channels.Channels.writeFullyImpl
  [20] java.nio.channels.Channels.writeFully
  [21] java.nio.channels.Channels$1.write
  [22] java.io.InputStream.transferTo
  [23] java.nio.file.Files.copy
  [24] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [25] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [26] jdk.nio.zipfs.ZipPath.newFileChannel
  [27] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [28] java.nio.channels.FileChannel.open
  [29] java.nio.channels.FileChannel.open
  [30] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [31] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$66.0x0000000800d8bdf0.apply
  [32] cats.effect.IOFiber.$anonfun$8
  [33] cats.effect.IOFiber$$Lambda$629.0x0000000800e9d258.apply
  [34] cats.effect.unsafe.WorkerThread.blockOn
  [35] scala.concurrent.package$.blocking
  [36] cats.effect.IOFiber.runLoop
  [37] cats.effect.IOFiber.execR
  [38] cats.effect.IOFiber.run
  [39] cats.effect.unsafe.WorkerThread.run

--- 1456239751 ns (0.14%), 145 samples
  [ 0] find_vmap_area_[k]
  [ 1] check_heap_object_[k]
  [ 2] __check_object_size.part.0_[k]
  [ 3] __check_object_size_[k]
  [ 4] zfs_uiomove_iter?[zfs]_[k]
  [ 5] zfs_uiomove?[zfs]_[k]
  [ 6] dmu_read_uio_dnode?[zfs]_[k]
  [ 7] dmu_read_uio_dbuf?[zfs]_[k]
  [ 8] mappedread?[zfs]_[k]
  [ 9] zfs_read?[zfs]_[k]
  [10] zpl_iter_read?[zfs]_[k]
  [11] new_sync_read_[k]
  [12] vfs_read_[k]
  [13] __x64_sys_pread64_[k]
  [14] do_syscall_64_[k]
  [15] entry_SYSCALL_64_after_hwframe_[k]
  [16] __libc_pread64
  [17] sun.nio.ch.FileDispatcherImpl.pread0
  [18] sun.nio.ch.FileDispatcherImpl.pread
  [19] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [20] sun.nio.ch.IOUtil.read
  [21] sun.nio.ch.IOUtil.read
  [22] sun.nio.ch.FileChannelImpl.readInternal
  [23] sun.nio.ch.FileChannelImpl.read
  [24] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [25] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [26] jdk.nio.zipfs.ZipFileSystem$2.fill
  [27] java.util.zip.InflaterInputStream.read
  [28] java.io.InputStream.transferTo
  [29] java.nio.file.Files.copy
  [30] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [31] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [32] jdk.nio.zipfs.ZipPath.newFileChannel
  [33] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [34] java.nio.channels.FileChannel.open
  [35] java.nio.channels.FileChannel.open
  [36] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [37] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$66.0x0000000800d8bdf0.apply
  [38] cats.effect.IOFiber.$anonfun$8
  [39] cats.effect.IOFiber$$Lambda$629.0x0000000800e9d258.apply
  [40] cats.effect.unsafe.WorkerThread.blockOn
  [41] scala.concurrent.package$.blocking
  [42] cats.effect.IOFiber.runLoop
  [43] cats.effect.IOFiber.execR
  [44] cats.effect.IOFiber.run
  [45] cats.effect.unsafe.WorkerThread.run

--- 1434337498 ns (0.14%), 143 samples
  [ 0] fsnotify_[k]
  [ 1] __fsnotify_parent_[k]
  [ 2] vfs_write_[k]
  [ 3] ksys_write_[k]
  [ 4] __x64_sys_write_[k]
  [ 5] do_syscall_64_[k]
  [ 6] entry_SYSCALL_64_after_hwframe_[k]
  [ 7] write
  [ 8] sun.nio.ch.FileDispatcherImpl.write0
  [ 9] sun.nio.ch.FileDispatcherImpl.write
  [10] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [11] sun.nio.ch.IOUtil.write
  [12] sun.nio.ch.IOUtil.write
  [13] sun.nio.ch.FileChannelImpl.write
  [14] java.nio.channels.Channels.writeFullyImpl
  [15] java.nio.channels.Channels.writeFully
  [16] java.nio.channels.Channels$1.write
  [17] java.io.InputStream.transferTo
  [18] java.nio.file.Files.copy
  [19] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [20] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [21] jdk.nio.zipfs.ZipPath.newFileChannel
  [22] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [23] java.nio.channels.FileChannel.open
  [24] java.nio.channels.FileChannel.open
  [25] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [26] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$66.0x0000000800d8bdf0.apply
  [27] cats.effect.IOFiber.$anonfun$8
  [28] cats.effect.IOFiber$$Lambda$629.0x0000000800e9d258.apply
  [29] cats.effect.unsafe.WorkerThread.blockOn
  [30] scala.concurrent.package$.blocking
  [31] cats.effect.IOFiber.runLoop
  [32] cats.effect.IOFiber.execR
  [33] cats.effect.IOFiber.run
  [34] cats.effect.unsafe.WorkerThread.run

--- 1423744708 ns (0.14%), 142 samples
  [ 0] refill_stock_[k]
  [ 1] try_charge_memcg_[k]
  [ 2] obj_cgroup_charge_[k]
  [ 3] __kmalloc_[k]
  [ 4] inotify_handle_inode_event_[k]
  [ 5] fsnotify_handle_inode_event.isra.0_[k]
  [ 6] send_to_group_[k]
  [ 7] fsnotify_[k]
  [ 8] __fsnotify_parent_[k]
  [ 9] vfs_write_[k]
  [10] ksys_write_[k]
  [11] __x64_sys_write_[k]
  [12] do_syscall_64_[k]
  [13] entry_SYSCALL_64_after_hwframe_[k]
  [14] write
  [15] sun.nio.ch.FileDispatcherImpl.write0
  [16] sun.nio.ch.FileDispatcherImpl.write
  [17] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.IOUtil.write
  [20] sun.nio.ch.FileChannelImpl.write
  [21] java.nio.channels.Channels.writeFullyImpl
  [22] java.nio.channels.Channels.writeFully
  [23] java.nio.channels.Channels$1.write
  [24] java.io.InputStream.transferTo
  [25] java.nio.file.Files.copy
  [26] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [27] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [28] jdk.nio.zipfs.ZipPath.newFileChannel
  [29] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [30] java.nio.channels.FileChannel.open
  [31] java.nio.channels.FileChannel.open
  [32] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [33] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$66.0x0000000800d8bdf0.apply
  [34] cats.effect.IOFiber.$anonfun$8
  [35] cats.effect.IOFiber$$Lambda$629.0x0000000800e9d258.apply
  [36] cats.effect.unsafe.WorkerThread.blockOn
  [37] scala.concurrent.package$.blocking
  [38] cats.effect.IOFiber.runLoop
  [39] cats.effect.IOFiber.execR
  [40] cats.effect.IOFiber.run
  [41] cats.effect.unsafe.WorkerThread.run

--- 1394803794 ns (0.14%), 139 samples
  [ 0] dsl_dir_tempreserve_impl.constprop.0?[zfs]_[k]
  [ 1] dsl_dir_tempreserve_space?[zfs]_[k]
  [ 2] dmu_tx_try_assign?[zfs]_[k]
  [ 3] dmu_tx_assign?[zfs]_[k]
  [ 4] zfs_write?[zfs]_[k]
  [ 5] zpl_iter_write?[zfs]_[k]
  [ 6] new_sync_write_[k]
  [ 7] vfs_write_[k]
  [ 8] ksys_write_[k]
  [ 9] __x64_sys_write_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] write
  [13] sun.nio.ch.FileDispatcherImpl.write0
  [14] sun.nio.ch.FileDispatcherImpl.write
  [15] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [16] sun.nio.ch.IOUtil.write
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.FileChannelImpl.write
  [19] java.nio.channels.Channels.writeFullyImpl
  [20] java.nio.channels.Channels.writeFully
  [21] java.nio.channels.Channels$1.write
  [22] java.io.InputStream.transferTo
  [23] java.nio.file.Files.copy
  [24] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [25] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [26] jdk.nio.zipfs.ZipPath.newFileChannel
  [27] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [28] java.nio.channels.FileChannel.open
  [29] java.nio.channels.FileChannel.open
  [30] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [31] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$66.0x0000000800d8bdf0.apply
  [32] cats.effect.IOFiber.$anonfun$8
  [33] cats.effect.IOFiber$$Lambda$629.0x0000000800e9d258.apply
  [34] cats.effect.unsafe.WorkerThread.blockOn
  [35] scala.concurrent.package$.blocking
  [36] cats.effect.IOFiber.runLoop
  [37] cats.effect.IOFiber.execR
  [38] cats.effect.IOFiber.run
  [39] cats.effect.unsafe.WorkerThread.run

--- 1394184118 ns (0.14%), 139 samples
  [ 0] strcpy_[k]
  [ 1] fsnotify_handle_inode_event.isra.0_[k]
  [ 2] send_to_group_[k]
  [ 3] fsnotify_[k]
  [ 4] __fsnotify_parent_[k]
  [ 5] vfs_write_[k]
  [ 6] ksys_write_[k]
  [ 7] __x64_sys_write_[k]
  [ 8] do_syscall_64_[k]
  [ 9] entry_SYSCALL_64_after_hwframe_[k]
  [10] write
  [11] sun.nio.ch.FileDispatcherImpl.write0
  [12] sun.nio.ch.FileDispatcherImpl.write
  [13] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [14] sun.nio.ch.IOUtil.write
  [15] sun.nio.ch.IOUtil.write
  [16] sun.nio.ch.FileChannelImpl.write
  [17] java.nio.channels.Channels.writeFullyImpl
  [18] java.nio.channels.Channels.writeFully
  [19] java.nio.channels.Channels$1.write
  [20] java.io.InputStream.transferTo
  [21] java.nio.file.Files.copy
  [22] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [23] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [24] jdk.nio.zipfs.ZipPath.newFileChannel
  [25] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [26] java.nio.channels.FileChannel.open
  [27] java.nio.channels.FileChannel.open
  [28] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [29] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$66.0x0000000800d8bdf0.apply
  [30] cats.effect.IOFiber.$anonfun$8
  [31] cats.effect.IOFiber$$Lambda$629.0x0000000800e9d258.apply
  [32] cats.effect.unsafe.WorkerThread.blockOn
  [33] scala.concurrent.package$.blocking
  [34] cats.effect.IOFiber.runLoop
  [35] cats.effect.IOFiber.execR
  [36] cats.effect.IOFiber.run
  [37] cats.effect.unsafe.WorkerThread.run

--- 1383553488 ns (0.14%), 138 samples
  [ 0] void OopOopIterateDispatch<G1CMOopClosure>::Table::oop_oop_iterate<ObjArrayKlass, narrowOop>(G1CMOopClosure*, oopDesc*, Klass*)
  [ 1] void G1CMTask::process_grey_task_entry<true>(G1TaskQueueEntry)
  [ 2] G1CMTask::do_marking_step(double, bool, bool)
  [ 3] G1CMConcurrentMarkingTask::work(unsigned int)
  [ 4] GangWorker::loop()
  [ 5] GangWorker::run()
  [ 6] Thread::call_run()
  [ 7] thread_native_entry(Thread*)
  [ 8] start_thread

--- 1365258698 ns (0.13%), 136 samples
  [ 0] __kmalloc_[k]
  [ 1] inotify_handle_inode_event_[k]
  [ 2] fsnotify_handle_inode_event.isra.0_[k]
  [ 3] send_to_group_[k]
  [ 4] fsnotify_[k]
  [ 5] __fsnotify_parent_[k]
  [ 6] vfs_write_[k]
  [ 7] ksys_write_[k]
  [ 8] __x64_sys_write_[k]
  [ 9] do_syscall_64_[k]
  [10] entry_SYSCALL_64_after_hwframe_[k]
  [11] write
  [12] sun.nio.ch.FileDispatcherImpl.write0
  [13] sun.nio.ch.FileDispatcherImpl.write
  [14] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [15] sun.nio.ch.IOUtil.write
  [16] sun.nio.ch.IOUtil.write
  [17] sun.nio.ch.FileChannelImpl.write
  [18] java.nio.channels.Channels.writeFullyImpl
  [19] java.nio.channels.Channels.writeFully
  [20] java.nio.channels.Channels$1.write
  [21] java.io.InputStream.transferTo
  [22] java.nio.file.Files.copy
  [23] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [24] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [25] jdk.nio.zipfs.ZipPath.newFileChannel
  [26] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [27] java.nio.channels.FileChannel.open
  [28] java.nio.channels.FileChannel.open
  [29] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [30] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$66.0x0000000800d8bdf0.apply
  [31] cats.effect.IOFiber.$anonfun$8
  [32] cats.effect.IOFiber$$Lambda$629.0x0000000800e9d258.apply
  [33] cats.effect.unsafe.WorkerThread.blockOn
  [34] scala.concurrent.package$.blocking
  [35] cats.effect.IOFiber.runLoop
  [36] cats.effect.IOFiber.execR
  [37] cats.effect.IOFiber.run
  [38] cats.effect.unsafe.WorkerThread.run

--- 1333493746 ns (0.13%), 133 samples
  [ 0] jlong_disjoint_arraycopy
  [ 1] jdk.internal.misc.Unsafe.copyMemory0
  [ 2] jdk.internal.misc.Unsafe.copyMemory
  [ 3] jdk.internal.misc.ScopedMemoryAccess.copyMemoryInternal
  [ 4] jdk.internal.misc.ScopedMemoryAccess.copyMemory
  [ 5] java.nio.ByteBuffer.putBuffer
  [ 6] java.nio.ByteBuffer.put
  [ 7] java.nio.HeapByteBuffer.put
  [ 8] sun.nio.ch.IOUtil.read
  [ 9] sun.nio.ch.IOUtil.read
  [10] sun.nio.ch.FileChannelImpl.readInternal
  [11] sun.nio.ch.FileChannelImpl.read
  [12] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [13] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [14] jdk.nio.zipfs.ZipFileSystem$2.fill
  [15] java.util.zip.InflaterInputStream.read
  [16] java.io.InputStream.transferTo
  [17] java.nio.file.Files.copy
  [18] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [19] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [20] jdk.nio.zipfs.ZipPath.newFileChannel
  [21] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [22] java.nio.channels.FileChannel.open
  [23] java.nio.channels.FileChannel.open
  [24] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [25] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$66.0x0000000800d8bdf0.apply
  [26] cats.effect.IOFiber.$anonfun$8
  [27] cats.effect.IOFiber$$Lambda$629.0x0000000800e9d258.apply
  [28] cats.effect.unsafe.WorkerThread.blockOn
  [29] scala.concurrent.package$.blocking
  [30] cats.effect.IOFiber.runLoop
  [31] cats.effect.IOFiber.execR
  [32] cats.effect.IOFiber.run
  [33] cats.effect.unsafe.WorkerThread.run

--- 1325054151 ns (0.13%), 132 samples
  [ 0] jlong_disjoint_arraycopy
  [ 1] jdk.internal.misc.Unsafe.copyMemory0
  [ 2] jdk.internal.misc.Unsafe.copyMemory
  [ 3] jdk.internal.misc.ScopedMemoryAccess.copyMemoryInternal
  [ 4] jdk.internal.misc.ScopedMemoryAccess.copyMemory
  [ 5] java.nio.ByteBuffer.putBuffer
  [ 6] java.nio.ByteBuffer.put
  [ 7] sun.nio.ch.IOUtil.write
  [ 8] sun.nio.ch.IOUtil.write
  [ 9] sun.nio.ch.FileChannelImpl.write
  [10] java.nio.channels.Channels.writeFullyImpl
  [11] java.nio.channels.Channels.writeFully
  [12] java.nio.channels.Channels$1.write
  [13] java.io.InputStream.transferTo
  [14] java.nio.file.Files.copy
  [15] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [16] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [17] jdk.nio.zipfs.ZipPath.newFileChannel
  [18] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [19] java.nio.channels.FileChannel.open
  [20] java.nio.channels.FileChannel.open
  [21] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [22] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$66.0x0000000800d8bdf0.apply
  [23] cats.effect.IOFiber.$anonfun$8
  [24] cats.effect.IOFiber$$Lambda$629.0x0000000800e9d258.apply
  [25] cats.effect.unsafe.WorkerThread.blockOn
  [26] scala.concurrent.package$.blocking
  [27] cats.effect.IOFiber.runLoop
  [28] cats.effect.IOFiber.execR
  [29] cats.effect.IOFiber.run
  [30] cats.effect.unsafe.WorkerThread.run

--- 1303649836 ns (0.13%), 130 samples
  [ 0] void OopOopIterateDispatch<G1RebuildRemSetClosure>::Table::oop_oop_iterate<InstanceKlass, narrowOop>(G1RebuildRemSetClosure*, oopDesc*, Klass*)
  [ 1] G1RebuildRemSetTask::G1RebuildRemSetHeapRegionClosure::do_heap_region(HeapRegion*)
  [ 2] HeapRegionManager::par_iterate(HeapRegionClosure*, HeapRegionClaimer*, unsigned int) const
  [ 3] G1RebuildRemSetTask::work(unsigned int)
  [ 4] GangWorker::loop()
  [ 5] GangWorker::run()
  [ 6] Thread::call_run()
  [ 7] thread_native_entry(Thread*)
  [ 8] start_thread

--- 1294334631 ns (0.13%), 129 samples
  [ 0] kmem_cache_free_[k]
  [ 1] spl_kmem_cache_free?[spl]_[k]
  [ 2] zio_data_buf_free?[zfs]_[k]
  [ 3] zil_itx_destroy?[zfs]_[k]
  [ 4] zil_remove_async?[zfs]_[k]
  [ 5] zfs_log_remove?[zfs]_[k]
  [ 6] zfs_remove?[zfs]_[k]
  [ 7] zpl_unlink?[zfs]_[k]
  [ 8] vfs_unlink_[k]
  [ 9] do_unlinkat_[k]
  [10] __x64_sys_unlink_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] __GI_unlink
  [14] sun.nio.fs.UnixNativeDispatcher.unlink0
  [15] sun.nio.fs.UnixNativeDispatcher.unlink
  [16] sun.nio.fs.UnixFileSystemProvider.implDelete
  [17] sun.nio.fs.AbstractFileSystemProvider.delete
  [18] java.nio.file.Files.delete
  [19] jdk.nio.zipfs.ZipFileSystem.removeTempPathForEntry
  [20] jdk.nio.zipfs.ZipFileSystem$1.implCloseChannel
  [21] java.nio.channels.spi.AbstractInterruptibleChannel.close
  [22] fs2.io.file.FilesCompanionPlatform.openFileChannel$$anonfun$1$$anonfun$1
  [23] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$openFileChannel$$anonfun$1$$anonfun$adapted$1
  [24] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$644.0x0000000800e9f140.apply
  [25] cats.effect.IOFiber.$anonfun$8
  [26] cats.effect.IOFiber$$Lambda$629.0x0000000800e9d258.apply
  [27] cats.effect.unsafe.WorkerThread.blockOn
  [28] scala.concurrent.package$.blocking
  [29] cats.effect.IOFiber.runLoop
  [30] cats.effect.IOFiber.autoCedeR
  [31] cats.effect.IOFiber.run
  [32] cats.effect.unsafe.WorkerThread.run

--- 1294286236 ns (0.13%), 129 samples
  [ 0] write
  [ 1] sun.nio.ch.FileDispatcherImpl.write0
  [ 2] sun.nio.ch.FileDispatcherImpl.write
  [ 3] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [ 4] sun.nio.ch.IOUtil.write
  [ 5] sun.nio.ch.IOUtil.write
  [ 6] sun.nio.ch.FileChannelImpl.write
  [ 7] java.nio.channels.Channels.writeFullyImpl
  [ 8] java.nio.channels.Channels.writeFully
  [ 9] java.nio.channels.Channels$1.write
  [10] java.io.InputStream.transferTo
  [11] java.nio.file.Files.copy
  [12] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [13] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [14] jdk.nio.zipfs.ZipPath.newFileChannel
  [15] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [16] java.nio.channels.FileChannel.open
  [17] java.nio.channels.FileChannel.open
  [18] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [19] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$66.0x0000000800d8bdf0.apply
  [20] cats.effect.IOFiber.$anonfun$8
  [21] cats.effect.IOFiber$$Lambda$629.0x0000000800e9d258.apply
  [22] cats.effect.unsafe.WorkerThread.blockOn
  [23] scala.concurrent.package$.blocking
  [24] cats.effect.IOFiber.runLoop
  [25] cats.effect.IOFiber.execR
  [26] cats.effect.IOFiber.run
  [27] cats.effect.unsafe.WorkerThread.run

--- 1292698093 ns (0.13%), 129 samples
  [ 0] __memmove_avx_unaligned_erms
  [ 1] java.util.zip.Inflater.inflateBytesBytes
  [ 2] java.util.zip.Inflater.inflate
  [ 3] java.util.zip.InflaterInputStream.read
  [ 4] java.io.InputStream.transferTo
  [ 5] java.nio.file.Files.copy
  [ 6] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [ 7] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [ 8] jdk.nio.zipfs.ZipPath.newFileChannel
  [ 9] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [10] java.nio.channels.FileChannel.open
  [11] java.nio.channels.FileChannel.open
  [12] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [13] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$66.0x0000000800d8bdf0.apply
  [14] cats.effect.IOFiber.$anonfun$8
  [15] cats.effect.IOFiber$$Lambda$629.0x0000000800e9d258.apply
  [16] cats.effect.unsafe.WorkerThread.blockOn
  [17] scala.concurrent.package$.blocking
  [18] cats.effect.IOFiber.runLoop
  [19] cats.effect.IOFiber.execR
  [20] cats.effect.IOFiber.run
  [21] cats.effect.unsafe.WorkerThread.run

--- 1284902390 ns (0.13%), 128 samples
  [ 0] sa_attr_op?[zfs]_[k]
  [ 1] sa_bulk_update_impl?[zfs]_[k]
  [ 2] sa_bulk_update?[zfs]_[k]
  [ 3] zfs_write?[zfs]_[k]
  [ 4] zpl_iter_write?[zfs]_[k]
  [ 5] new_sync_write_[k]
  [ 6] vfs_write_[k]
  [ 7] ksys_write_[k]
  [ 8] __x64_sys_write_[k]
  [ 9] do_syscall_64_[k]
  [10] entry_SYSCALL_64_after_hwframe_[k]
  [11] write
  [12] sun.nio.ch.FileDispatcherImpl.write0
  [13] sun.nio.ch.FileDispatcherImpl.write
  [14] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [15] sun.nio.ch.IOUtil.write
  [16] sun.nio.ch.IOUtil.write
  [17] sun.nio.ch.FileChannelImpl.write
  [18] java.nio.channels.Channels.writeFullyImpl
  [19] java.nio.channels.Channels.writeFully
  [20] java.nio.channels.Channels$1.write
  [21] java.io.InputStream.transferTo
  [22] java.nio.file.Files.copy
  [23] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [24] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [25] jdk.nio.zipfs.ZipPath.newFileChannel
  [26] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [27] java.nio.channels.FileChannel.open
  [28] java.nio.channels.FileChannel.open
  [29] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [30] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$66.0x0000000800d8bdf0.apply
  [31] cats.effect.IOFiber.$anonfun$8
  [32] cats.effect.IOFiber$$Lambda$629.0x0000000800e9d258.apply
  [33] cats.effect.unsafe.WorkerThread.blockOn
  [34] scala.concurrent.package$.blocking
  [35] cats.effect.IOFiber.runLoop
  [36] cats.effect.IOFiber.execR
  [37] cats.effect.IOFiber.run
  [38] cats.effect.unsafe.WorkerThread.run

--- 1284436190 ns (0.13%), 128 samples
  [ 0] zio_create?[zfs]_[k]
  [ 1] zio_null?[zfs]_[k]
  [ 2] zio_root?[zfs]_[k]
  [ 3] dmu_tx_count_write?[zfs]_[k]
  [ 4] dmu_tx_hold_write_by_dnode?[zfs]_[k]
  [ 5] zfs_write?[zfs]_[k]
  [ 6] zpl_iter_write?[zfs]_[k]
  [ 7] new_sync_write_[k]
  [ 8] vfs_write_[k]
  [ 9] ksys_write_[k]
  [10] __x64_sys_write_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] write
  [14] sun.nio.ch.FileDispatcherImpl.write0
  [15] sun.nio.ch.FileDispatcherImpl.write
  [16] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.FileChannelImpl.write
  [20] java.nio.channels.Channels.writeFullyImpl
  [21] java.nio.channels.Channels.writeFully
  [22] java.nio.channels.Channels$1.write
  [23] java.io.InputStream.transferTo
  [24] java.nio.file.Files.copy
  [25] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [26] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [27] jdk.nio.zipfs.ZipPath.newFileChannel
  [28] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [29] java.nio.channels.FileChannel.open
  [30] java.nio.channels.FileChannel.open
  [31] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [32] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$66.0x0000000800d8bdf0.apply
  [33] cats.effect.IOFiber.$anonfun$8
  [34] cats.effect.IOFiber$$Lambda$629.0x0000000800e9d258.apply
  [35] cats.effect.unsafe.WorkerThread.blockOn
  [36] scala.concurrent.package$.blocking
  [37] cats.effect.IOFiber.runLoop
  [38] cats.effect.IOFiber.execR
  [39] cats.effect.IOFiber.run
  [40] cats.effect.unsafe.WorkerThread.run

--- 1264175161 ns (0.12%), 126 samples
  [ 0] memset_[k]
  [ 1] spl_kmem_cache_alloc?[spl]_[k]
  [ 2] zio_data_buf_alloc?[zfs]_[k]
  [ 3] zil_itx_create?[zfs]_[k]
  [ 4] zfs_log_write?[zfs]_[k]
  [ 5] zfs_write?[zfs]_[k]
  [ 6] zpl_iter_write?[zfs]_[k]
  [ 7] new_sync_write_[k]
  [ 8] vfs_write_[k]
  [ 9] ksys_write_[k]
  [10] __x64_sys_write_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] write
  [14] sun.nio.ch.FileDispatcherImpl.write0
  [15] sun.nio.ch.FileDispatcherImpl.write
  [16] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.FileChannelImpl.write
  [20] java.nio.channels.Channels.writeFullyImpl
  [21] java.nio.channels.Channels.writeFully
  [22] java.nio.channels.Channels$1.write
  [23] java.io.InputStream.transferTo
  [24] java.nio.file.Files.copy
  [25] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [26] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [27] jdk.nio.zipfs.ZipPath.newFileChannel
  [28] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [29] java.nio.channels.FileChannel.open
  [30] java.nio.channels.FileChannel.open
  [31] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [32] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$66.0x0000000800d8bdf0.apply
  [33] cats.effect.IOFiber.$anonfun$8
  [34] cats.effect.IOFiber$$Lambda$629.0x0000000800e9d258.apply
  [35] cats.effect.unsafe.WorkerThread.blockOn
  [36] scala.concurrent.package$.blocking
  [37] cats.effect.IOFiber.runLoop
  [38] cats.effect.IOFiber.execR
  [39] cats.effect.IOFiber.run
  [40] cats.effect.unsafe.WorkerThread.run

--- 1254901936 ns (0.12%), 125 samples
  [ 0] zil_aitx_compare?[zfs]_[k]
  [ 1] zil_itx_assign?[zfs]_[k]
  [ 2] zfs_log_write?[zfs]_[k]
  [ 3] zfs_write?[zfs]_[k]
  [ 4] zpl_iter_write?[zfs]_[k]
  [ 5] new_sync_write_[k]
  [ 6] vfs_write_[k]
  [ 7] ksys_write_[k]
  [ 8] __x64_sys_write_[k]
  [ 9] do_syscall_64_[k]
  [10] entry_SYSCALL_64_after_hwframe_[k]
  [11] write
  [12] sun.nio.ch.FileDispatcherImpl.write0
  [13] sun.nio.ch.FileDispatcherImpl.write
  [14] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [15] sun.nio.ch.IOUtil.write
  [16] sun.nio.ch.IOUtil.write
  [17] sun.nio.ch.FileChannelImpl.write
  [18] java.nio.channels.Channels.writeFullyImpl
  [19] java.nio.channels.Channels.writeFully
  [20] java.nio.channels.Channels$1.write
  [21] java.io.InputStream.transferTo
  [22] java.nio.file.Files.copy
  [23] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [24] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [25] jdk.nio.zipfs.ZipPath.newFileChannel
  [26] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [27] java.nio.channels.FileChannel.open
  [28] java.nio.channels.FileChannel.open
  [29] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [30] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$66.0x0000000800d8bdf0.apply
  [31] cats.effect.IOFiber.$anonfun$8
  [32] cats.effect.IOFiber$$Lambda$629.0x0000000800e9d258.apply
  [33] cats.effect.unsafe.WorkerThread.blockOn
  [34] scala.concurrent.package$.blocking
  [35] cats.effect.IOFiber.runLoop
  [36] cats.effect.IOFiber.execR
  [37] cats.effect.IOFiber.run
  [38] cats.effect.unsafe.WorkerThread.run

--- 1243696849 ns (0.12%), 124 samples
  [ 0] vfs_write_[k]
  [ 1] ksys_write_[k]
  [ 2] __x64_sys_write_[k]
  [ 3] do_syscall_64_[k]
  [ 4] entry_SYSCALL_64_after_hwframe_[k]
  [ 5] write
  [ 6] sun.nio.ch.FileDispatcherImpl.write0
  [ 7] sun.nio.ch.FileDispatcherImpl.write
  [ 8] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [ 9] sun.nio.ch.IOUtil.write
  [10] sun.nio.ch.IOUtil.write
  [11] sun.nio.ch.FileChannelImpl.write
  [12] java.nio.channels.Channels.writeFullyImpl
  [13] java.nio.channels.Channels.writeFully
  [14] java.nio.channels.Channels$1.write
  [15] java.io.InputStream.transferTo
  [16] java.nio.file.Files.copy
  [17] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [18] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [19] jdk.nio.zipfs.ZipPath.newFileChannel
  [20] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [21] java.nio.channels.FileChannel.open
  [22] java.nio.channels.FileChannel.open
  [23] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [24] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$66.0x0000000800d8bdf0.apply
  [25] cats.effect.IOFiber.$anonfun$8
  [26] cats.effect.IOFiber$$Lambda$629.0x0000000800e9d258.apply
  [27] cats.effect.unsafe.WorkerThread.blockOn
  [28] scala.concurrent.package$.blocking
  [29] cats.effect.IOFiber.runLoop
  [30] cats.effect.IOFiber.execR
  [31] cats.effect.IOFiber.run
  [32] cats.effect.unsafe.WorkerThread.run

--- 1213404941 ns (0.12%), 121 samples
  [ 0] __get_obj_cgroup_from_memcg_[k]
  [ 1] get_obj_cgroup_from_current_[k]
  [ 2] __kmalloc_[k]
  [ 3] inotify_handle_inode_event_[k]
  [ 4] fsnotify_handle_inode_event.isra.0_[k]
  [ 5] send_to_group_[k]
  [ 6] fsnotify_[k]
  [ 7] __fsnotify_parent_[k]
  [ 8] vfs_write_[k]
  [ 9] ksys_write_[k]
  [10] __x64_sys_write_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] write
  [14] sun.nio.ch.FileDispatcherImpl.write0
  [15] sun.nio.ch.FileDispatcherImpl.write
  [16] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.FileChannelImpl.write
  [20] java.nio.channels.Channels.writeFullyImpl
  [21] java.nio.channels.Channels.writeFully
  [22] java.nio.channels.Channels$1.write
  [23] java.io.InputStream.transferTo
  [24] java.nio.file.Files.copy
  [25] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [26] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [27] jdk.nio.zipfs.ZipPath.newFileChannel
  [28] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [29] java.nio.channels.FileChannel.open
  [30] java.nio.channels.FileChannel.open
  [31] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [32] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$66.0x0000000800d8bdf0.apply
  [33] cats.effect.IOFiber.$anonfun$8
  [34] cats.effect.IOFiber$$Lambda$629.0x0000000800e9d258.apply
  [35] cats.effect.unsafe.WorkerThread.blockOn
  [36] scala.concurrent.package$.blocking
  [37] cats.effect.IOFiber.runLoop
  [38] cats.effect.IOFiber.execR
  [39] cats.effect.IOFiber.run
  [40] cats.effect.unsafe.WorkerThread.run

--- 1210547480 ns (0.12%), 121 samples
  [ 0] CompiledMethod::cleanup_inline_caches_impl(bool, bool)
  [ 1] CompiledMethod::unload_nmethod_caches(bool)
  [ 2] nmethod::do_unloading(bool)
  [ 3] CodeCacheUnloadingTask::work(unsigned int)
  [ 4] G1ParallelCleaningTask::work(unsigned int)
  [ 5] GangWorker::loop()
  [ 6] GangWorker::run()
  [ 7] Thread::call_run()
  [ 8] thread_native_entry(Thread*)
  [ 9] start_thread

--- 1194275806 ns (0.12%), 119 samples
  [ 0] memset_[k]
  [ 1] dbuf_read_impl.constprop.0?[zfs]_[k]
  [ 2] dbuf_read?[zfs]_[k]
  [ 3] dmu_buf_will_dirty_impl?[zfs]_[k]
  [ 4] dmu_buf_will_dirty?[zfs]_[k]
  [ 5] dmu_write_uio_dnode?[zfs]_[k]
  [ 6] dmu_write_uio_dbuf?[zfs]_[k]
  [ 7] zfs_write?[zfs]_[k]
  [ 8] zpl_iter_write?[zfs]_[k]
  [ 9] new_sync_write_[k]
  [10] vfs_write_[k]
  [11] ksys_write_[k]
  [12] __x64_sys_write_[k]
  [13] do_syscall_64_[k]
  [14] entry_SYSCALL_64_after_hwframe_[k]
  [15] write
  [16] sun.nio.ch.FileDispatcherImpl.write0
  [17] sun.nio.ch.FileDispatcherImpl.write
  [18] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [19] sun.nio.ch.IOUtil.write
  [20] sun.nio.ch.IOUtil.write
  [21] sun.nio.ch.FileChannelImpl.write
  [22] java.nio.channels.Channels.writeFullyImpl
  [23] java.nio.channels.Channels.writeFully
  [24] java.nio.channels.Channels$1.write
  [25] java.io.InputStream.transferTo
  [26] java.nio.file.Files.copy
  [27] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [28] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [29] jdk.nio.zipfs.ZipPath.newFileChannel
  [30] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [31] java.nio.channels.FileChannel.open
  [32] java.nio.channels.FileChannel.open
  [33] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [34] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$66.0x0000000800d8bdf0.apply
  [35] cats.effect.IOFiber.$anonfun$8
  [36] cats.effect.IOFiber$$Lambda$629.0x0000000800e9d258.apply
  [37] cats.effect.unsafe.WorkerThread.blockOn
  [38] scala.concurrent.package$.blocking
  [39] cats.effect.IOFiber.runLoop
  [40] cats.effect.IOFiber.execR
  [41] cats.effect.IOFiber.run
  [42] cats.effect.unsafe.WorkerThread.run

--- 1183698012 ns (0.12%), 118 samples
  [ 0] refill_obj_stock_[k]
  [ 1] obj_cgroup_charge_[k]
  [ 2] __kmalloc_[k]
  [ 3] inotify_handle_inode_event_[k]
  [ 4] fsnotify_handle_inode_event.isra.0_[k]
  [ 5] send_to_group_[k]
  [ 6] fsnotify_[k]
  [ 7] __fsnotify_parent_[k]
  [ 8] vfs_write_[k]
  [ 9] ksys_write_[k]
  [10] __x64_sys_write_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] write
  [14] sun.nio.ch.FileDispatcherImpl.write0
  [15] sun.nio.ch.FileDispatcherImpl.write
  [16] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.FileChannelImpl.write
  [20] java.nio.channels.Channels.writeFullyImpl
  [21] java.nio.channels.Channels.writeFully
  [22] java.nio.channels.Channels$1.write
  [23] java.io.InputStream.transferTo
  [24] java.nio.file.Files.copy
  [25] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [26] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [27] jdk.nio.zipfs.ZipPath.newFileChannel
  [28] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [29] java.nio.channels.FileChannel.open
  [30] java.nio.channels.FileChannel.open
  [31] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [32] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$66.0x0000000800d8bdf0.apply
  [33] cats.effect.IOFiber.$anonfun$8
  [34] cats.effect.IOFiber$$Lambda$629.0x0000000800e9d258.apply
  [35] cats.effect.unsafe.WorkerThread.blockOn
  [36] scala.concurrent.package$.blocking
  [37] cats.effect.IOFiber.runLoop
  [38] cats.effect.IOFiber.execR
  [39] cats.effect.IOFiber.run
  [40] cats.effect.unsafe.WorkerThread.run

--- 1181971278 ns (0.12%), 118 samples
  [ 0] clear_page_rep_[k]
  [ 1] get_page_from_freelist_[k]
  [ 2] __alloc_pages_[k]
  [ 3] __folio_alloc_[k]
  [ 4] vma_alloc_folio_[k]
  [ 5] do_anonymous_page_[k]
  [ 6] handle_pte_fault_[k]
  [ 7] __handle_mm_fault_[k]
  [ 8] handle_mm_fault_[k]
  [ 9] do_user_addr_fault_[k]
  [10] exc_page_fault_[k]
  [11] asm_exc_page_fault_[k]
  [12] __memcpy_sse2_unaligned_erms
  [13] G1ParScanThreadState::steal_and_trim_queue(GenericTaskQueueSet<OverflowTaskQueue<ScannerTask, (MEMFLAGS)5, 131072u>, (MEMFLAGS)5>*)
  [14] G1ParEvacuateFollowersClosure::do_void()
  [15] G1EvacuateRegionsTask::evacuate_live_objects(G1ParScanThreadState*, unsigned int)
  [16] G1EvacuateRegionsBaseTask::work(unsigned int)
  [17] GangWorker::loop()
  [18] GangWorker::run()
  [19] Thread::call_run()
  [20] thread_native_entry(Thread*)
  [21] start_thread

--- 1143817076 ns (0.11%), 114 samples
  [ 0] copy_user_generic_string_[k]
  [ 1] zfs_uiomove_iter?[zfs]_[k]
  [ 2] zfs_uiomove?[zfs]_[k]
  [ 3] dmu_read_uio_dnode?[zfs]_[k]
  [ 4] dmu_read_uio_dbuf?[zfs]_[k]
  [ 5] mappedread?[zfs]_[k]
  [ 6] zfs_read?[zfs]_[k]
  [ 7] zpl_iter_read?[zfs]_[k]
  [ 8] new_sync_read_[k]
  [ 9] vfs_read_[k]
  [10] __x64_sys_pread64_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] __libc_pread64
  [14] sun.nio.ch.FileDispatcherImpl.pread0
  [15] sun.nio.ch.FileDispatcherImpl.pread
  [16] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [17] sun.nio.ch.IOUtil.read
  [18] sun.nio.ch.IOUtil.read
  [19] sun.nio.ch.FileChannelImpl.readInternal
  [20] sun.nio.ch.FileChannelImpl.read
  [21] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [22] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [23] jdk.nio.zipfs.ZipFileSystem$2.fill
  [24] java.util.zip.InflaterInputStream.read
  [25] java.io.InputStream.transferTo
  [26] java.nio.file.Files.copy
  [27] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [28] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [29] jdk.nio.zipfs.ZipPath.newFileChannel
  [30] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [31] java.nio.channels.FileChannel.open
  [32] java.nio.channels.FileChannel.open
  [33] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [34] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$66.0x0000000800d8bdf0.apply
  [35] cats.effect.IOFiber.$anonfun$8
  [36] cats.effect.IOFiber$$Lambda$629.0x0000000800e9d258.apply
  [37] cats.effect.unsafe.WorkerThread.blockOn
  [38] scala.concurrent.package$.blocking
  [39] cats.effect.IOFiber.runLoop
  [40] cats.effect.IOFiber.execR
  [41] cats.effect.IOFiber.run
  [42] cats.effect.unsafe.WorkerThread.run

--- 1104850887 ns (0.11%), 110 samples
  [ 0] kfree_[k]
  [ 1] spl_kmem_free_impl?[spl]_[k]
  [ 2] spl_kmem_free?[spl]_[k]
  [ 3] dsl_dir_tempreserve_clear?[zfs]_[k]
  [ 4] dmu_tx_commit?[zfs]_[k]
  [ 5] zfs_write?[zfs]_[k]
  [ 6] zpl_iter_write?[zfs]_[k]
  [ 7] new_sync_write_[k]
  [ 8] vfs_write_[k]
  [ 9] ksys_write_[k]
  [10] __x64_sys_write_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] write
  [14] sun.nio.ch.FileDispatcherImpl.write0
  [15] sun.nio.ch.FileDispatcherImpl.write
  [16] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.FileChannelImpl.write
  [20] java.nio.channels.Channels.writeFullyImpl
  [21] java.nio.channels.Channels.writeFully
  [22] java.nio.channels.Channels$1.write
  [23] java.io.InputStream.transferTo
  [24] java.nio.file.Files.copy
  [25] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [26] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [27] jdk.nio.zipfs.ZipPath.newFileChannel
  [28] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [29] java.nio.channels.FileChannel.open
  [30] java.nio.channels.FileChannel.open
  [31] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [32] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$66.0x0000000800d8bdf0.apply
  [33] cats.effect.IOFiber.$anonfun$8
  [34] cats.effect.IOFiber$$Lambda$629.0x0000000800e9d258.apply
  [35] cats.effect.unsafe.WorkerThread.blockOn
  [36] scala.concurrent.package$.blocking
  [37] cats.effect.IOFiber.runLoop
  [38] cats.effect.IOFiber.execR
  [39] cats.effect.IOFiber.run
  [40] cats.effect.unsafe.WorkerThread.run

--- 1104387407 ns (0.11%), 110 samples
  [ 0] __memset_avx2_unaligned_erms
  [ 1] MarkBitMap::do_clear(MemRegion, bool)
  [ 2] G1ClearBitMapTask::G1ClearBitmapHRClosure::do_heap_region(HeapRegion*)
  [ 3] HeapRegionManager::par_iterate(HeapRegionClosure*, HeapRegionClaimer*, unsigned int) const
  [ 4] G1ClearBitMapTask::work(unsigned int)
  [ 5] GangWorker::loop()
  [ 6] GangWorker::run()
  [ 7] Thread::call_run()
  [ 8] thread_native_entry(Thread*)
  [ 9] start_thread

--- 1093330822 ns (0.11%), 109 samples
  [ 0] dmu_tx_try_assign?[zfs]_[k]
  [ 1] dmu_tx_assign?[zfs]_[k]
  [ 2] zfs_write?[zfs]_[k]
  [ 3] zpl_iter_write?[zfs]_[k]
  [ 4] new_sync_write_[k]
  [ 5] vfs_write_[k]
  [ 6] ksys_write_[k]
  [ 7] __x64_sys_write_[k]
  [ 8] do_syscall_64_[k]
  [ 9] entry_SYSCALL_64_after_hwframe_[k]
  [10] write
  [11] sun.nio.ch.FileDispatcherImpl.write0
  [12] sun.nio.ch.FileDispatcherImpl.write
  [13] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [14] sun.nio.ch.IOUtil.write
  [15] sun.nio.ch.IOUtil.write
  [16] sun.nio.ch.FileChannelImpl.write
  [17] java.nio.channels.Channels.writeFullyImpl
  [18] java.nio.channels.Channels.writeFully
  [19] java.nio.channels.Channels$1.write
  [20] java.io.InputStream.transferTo
  [21] java.nio.file.Files.copy
  [22] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [23] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [24] jdk.nio.zipfs.ZipPath.newFileChannel
  [25] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [26] java.nio.channels.FileChannel.open
  [27] java.nio.channels.FileChannel.open
  [28] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [29] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$66.0x0000000800d8bdf0.apply
  [30] cats.effect.IOFiber.$anonfun$8
  [31] cats.effect.IOFiber$$Lambda$629.0x0000000800e9d258.apply
  [32] cats.effect.unsafe.WorkerThread.blockOn
  [33] scala.concurrent.package$.blocking
  [34] cats.effect.IOFiber.runLoop
  [35] cats.effect.IOFiber.execR
  [36] cats.effect.IOFiber.run
  [37] cats.effect.unsafe.WorkerThread.run

--- 1084291367 ns (0.11%), 108 samples
  [ 0] send_to_group_[k]
  [ 1] fsnotify_[k]
  [ 2] __fsnotify_parent_[k]
  [ 3] vfs_write_[k]
  [ 4] ksys_write_[k]
  [ 5] __x64_sys_write_[k]
  [ 6] do_syscall_64_[k]
  [ 7] entry_SYSCALL_64_after_hwframe_[k]
  [ 8] write
  [ 9] sun.nio.ch.FileDispatcherImpl.write0
  [10] sun.nio.ch.FileDispatcherImpl.write
  [11] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [12] sun.nio.ch.IOUtil.write
  [13] sun.nio.ch.IOUtil.write
  [14] sun.nio.ch.FileChannelImpl.write
  [15] java.nio.channels.Channels.writeFullyImpl
  [16] java.nio.channels.Channels.writeFully
  [17] java.nio.channels.Channels$1.write
  [18] java.io.InputStream.transferTo
  [19] java.nio.file.Files.copy
  [20] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [21] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [22] jdk.nio.zipfs.ZipPath.newFileChannel
  [23] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [24] java.nio.channels.FileChannel.open
  [25] java.nio.channels.FileChannel.open
  [26] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [27] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$66.0x0000000800d8bdf0.apply
  [28] cats.effect.IOFiber.$anonfun$8
  [29] cats.effect.IOFiber$$Lambda$629.0x0000000800e9d258.apply
  [30] cats.effect.unsafe.WorkerThread.blockOn
  [31] scala.concurrent.package$.blocking
  [32] cats.effect.IOFiber.runLoop
  [33] cats.effect.IOFiber.execR
  [34] cats.effect.IOFiber.run
  [35] cats.effect.unsafe.WorkerThread.run

--- 1082954450 ns (0.11%), 108 samples
  [ 0] void OopOopIterateDispatch<G1CMOopClosure>::Table::oop_oop_iterate<InstanceKlass, narrowOop>(G1CMOopClosure*, oopDesc*, Klass*)
  [ 1] void G1CMTask::process_grey_task_entry<true>(G1TaskQueueEntry)
  [ 2] G1CMTask::drain_local_queue(bool) [clone .part.0] [clone .constprop.1]
  [ 3] G1CMTask::do_marking_step(double, bool, bool)
  [ 4] G1CMConcurrentMarkingTask::work(unsigned int)
  [ 5] GangWorker::loop()
  [ 6] GangWorker::run()
  [ 7] Thread::call_run()
  [ 8] thread_native_entry(Thread*)
  [ 9] start_thread

--- 1034853577 ns (0.10%), 103 samples
  [ 0] copy_user_generic_string_[k]
  [ 1] zfs_uiomove_iter?[zfs]_[k]
  [ 2] zfs_uiomove?[zfs]_[k]
  [ 3] dmu_read_uio_dnode?[zfs]_[k]
  [ 4] dmu_read_uio_dbuf?[zfs]_[k]
  [ 5] zfs_read?[zfs]_[k]
  [ 6] zpl_iter_read?[zfs]_[k]
  [ 7] new_sync_read_[k]
  [ 8] vfs_read_[k]
  [ 9] __x64_sys_pread64_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] __libc_pread64
  [13] sun.nio.ch.FileDispatcherImpl.pread0
  [14] sun.nio.ch.FileDispatcherImpl.pread
  [15] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [16] sun.nio.ch.IOUtil.read
  [17] sun.nio.ch.IOUtil.read
  [18] sun.nio.ch.FileChannelImpl.readInternal
  [19] sun.nio.ch.FileChannelImpl.read
  [20] jdk.nio.zipfs.ZipFileSystem$1.read
  [21] fs2.io.file.FileHandleCompanionPlatform$$anon$1.read$$anonfun$1
  [22] fs2.io.file.FileHandleCompanionPlatform$$anon$1$$Lambda$670.0x0000000800ea9ac8.apply
  [23] cats.effect.IOFiber.$anonfun$8
  [24] cats.effect.IOFiber$$Lambda$629.0x0000000800e9d258.apply
  [25] cats.effect.unsafe.WorkerThread.blockOn
  [26] scala.concurrent.package$.blocking
  [27] cats.effect.IOFiber.runLoop
  [28] cats.effect.IOFiber.execR
  [29] cats.effect.IOFiber.run
  [30] cats.effect.unsafe.WorkerThread.run

--- 1034004023 ns (0.10%), 103 samples
  [ 0] __memset_avx2_unaligned_erms
  [ 1] MemAllocator::allocate() const
  [ 2] TypeArrayKlass::allocate_common(int, bool, JavaThread*)
  [ 3] JVMCIRuntime::new_array_common(JavaThread*, Klass*, int, bool)
  [ 4] cats.effect.unsafe.WorkerThread.blockOn
  [ 5] scala.concurrent.package$.blocking
  [ 6] cats.effect.IOFiber.runLoop
  [ 7] cats.effect.IOFiber.execR
  [ 8] cats.effect.IOFiber.run
  [ 9] cats.effect.unsafe.WorkerThread.run

--- 1032631339 ns (0.10%), 103 samples
  [ 0] refill_stock_[k]
  [ 1] obj_cgroup_uncharge_pages_[k]
  [ 2] refill_obj_stock_[k]
  [ 3] obj_cgroup_charge_[k]
  [ 4] __kmalloc_[k]
  [ 5] inotify_handle_inode_event_[k]
  [ 6] fsnotify_handle_inode_event.isra.0_[k]
  [ 7] send_to_group_[k]
  [ 8] fsnotify_[k]
  [ 9] __fsnotify_parent_[k]
  [10] vfs_write_[k]
  [11] ksys_write_[k]
  [12] __x64_sys_write_[k]
  [13] do_syscall_64_[k]
  [14] entry_SYSCALL_64_after_hwframe_[k]
  [15] write
  [16] sun.nio.ch.FileDispatcherImpl.write0
  [17] sun.nio.ch.FileDispatcherImpl.write
  [18] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [19] sun.nio.ch.IOUtil.write
  [20] sun.nio.ch.IOUtil.write
  [21] sun.nio.ch.FileChannelImpl.write
  [22] java.nio.channels.Channels.writeFullyImpl
  [23] java.nio.channels.Channels.writeFully
  [24] java.nio.channels.Channels$1.write
  [25] java.io.InputStream.transferTo
  [26] java.nio.file.Files.copy
  [27] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [28] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [29] jdk.nio.zipfs.ZipPath.newFileChannel
  [30] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [31] java.nio.channels.FileChannel.open
  [32] java.nio.channels.FileChannel.open
  [33] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [34] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$66.0x0000000800d8bdf0.apply
  [35] cats.effect.IOFiber.$anonfun$8
  [36] cats.effect.IOFiber$$Lambda$629.0x0000000800e9d258.apply
  [37] cats.effect.unsafe.WorkerThread.blockOn
  [38] scala.concurrent.package$.blocking
  [39] cats.effect.IOFiber.runLoop
  [40] cats.effect.IOFiber.execR
  [41] cats.effect.IOFiber.run
  [42] cats.effect.unsafe.WorkerThread.run

--- 1023348407 ns (0.10%), 102 samples
  [ 0] find_vmap_area_[k]
  [ 1] check_heap_object_[k]
  [ 2] __check_object_size.part.0_[k]
  [ 3] __check_object_size_[k]
  [ 4] zfs_uiomove_iter?[zfs]_[k]
  [ 5] zfs_uiomove?[zfs]_[k]
  [ 6] dmu_write_uio_dnode?[zfs]_[k]
  [ 7] dmu_write_uio_dbuf?[zfs]_[k]
  [ 8] zfs_write?[zfs]_[k]
  [ 9] zpl_iter_write?[zfs]_[k]
  [10] new_sync_write_[k]
  [11] vfs_write_[k]
  [12] ksys_write_[k]
  [13] __x64_sys_write_[k]
  [14] do_syscall_64_[k]
  [15] entry_SYSCALL_64_after_hwframe_[k]
  [16] write
  [17] sun.nio.ch.FileDispatcherImpl.write0
  [18] sun.nio.ch.FileDispatcherImpl.write
  [19] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [20] sun.nio.ch.IOUtil.write
  [21] sun.nio.ch.IOUtil.write
  [22] sun.nio.ch.FileChannelImpl.write
  [23] java.nio.channels.Channels.writeFullyImpl
  [24] java.nio.channels.Channels.writeFully
  [25] java.nio.channels.Channels$1.write
  [26] java.io.InputStream.transferTo
  [27] java.nio.file.Files.copy
  [28] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [29] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [30] jdk.nio.zipfs.ZipPath.newFileChannel
  [31] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [32] java.nio.channels.FileChannel.open
  [33] java.nio.channels.FileChannel.open
  [34] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [35] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$66.0x0000000800d8bdf0.apply
  [36] cats.effect.IOFiber.$anonfun$8
  [37] cats.effect.IOFiber$$Lambda$629.0x0000000800e9d258.apply
  [38] cats.effect.unsafe.WorkerThread.blockOn
  [39] scala.concurrent.package$.blocking
  [40] cats.effect.IOFiber.runLoop
  [41] cats.effect.IOFiber.execR
  [42] cats.effect.IOFiber.run
  [43] cats.effect.unsafe.WorkerThread.run

--- 983188990 ns (0.10%), 98 samples
  [ 0] syscall_enter_from_user_mode_[k]
  [ 1] do_syscall_64_[k]
  [ 2] entry_SYSCALL_64_after_hwframe_[k]
  [ 3] write
  [ 4] sun.nio.ch.FileDispatcherImpl.write0
  [ 5] sun.nio.ch.FileDispatcherImpl.write
  [ 6] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [ 7] sun.nio.ch.IOUtil.write
  [ 8] sun.nio.ch.IOUtil.write
  [ 9] sun.nio.ch.FileChannelImpl.write
  [10] java.nio.channels.Channels.writeFullyImpl
  [11] java.nio.channels.Channels.writeFully
  [12] java.nio.channels.Channels$1.write
  [13] java.io.InputStream.transferTo
  [14] java.nio.file.Files.copy
  [15] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [16] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [17] jdk.nio.zipfs.ZipPath.newFileChannel
  [18] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [19] java.nio.channels.FileChannel.open
  [20] java.nio.channels.FileChannel.open
  [21] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [22] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$66.0x0000000800d8bdf0.apply
  [23] cats.effect.IOFiber.$anonfun$8
  [24] cats.effect.IOFiber$$Lambda$629.0x0000000800e9d258.apply
  [25] cats.effect.unsafe.WorkerThread.blockOn
  [26] scala.concurrent.package$.blocking
  [27] cats.effect.IOFiber.runLoop
  [28] cats.effect.IOFiber.execR
  [29] cats.effect.IOFiber.run
  [30] cats.effect.unsafe.WorkerThread.run

--- 972720154 ns (0.10%), 97 samples
  [ 0] mod_memcg_state_[k]
  [ 1] memcg_account_kmem_[k]
  [ 2] obj_cgroup_charge_[k]
  [ 3] __kmalloc_[k]
  [ 4] inotify_handle_inode_event_[k]
  [ 5] fsnotify_handle_inode_event.isra.0_[k]
  [ 6] send_to_group_[k]
  [ 7] fsnotify_[k]
  [ 8] __fsnotify_parent_[k]
  [ 9] vfs_write_[k]
  [10] ksys_write_[k]
  [11] __x64_sys_write_[k]
  [12] do_syscall_64_[k]
  [13] entry_SYSCALL_64_after_hwframe_[k]
  [14] write
  [15] sun.nio.ch.FileDispatcherImpl.write0
  [16] sun.nio.ch.FileDispatcherImpl.write
  [17] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.IOUtil.write
  [20] sun.nio.ch.FileChannelImpl.write
  [21] java.nio.channels.Channels.writeFullyImpl
  [22] java.nio.channels.Channels.writeFully
  [23] java.nio.channels.Channels$1.write
  [24] java.io.InputStream.transferTo
  [25] java.nio.file.Files.copy
  [26] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [27] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [28] jdk.nio.zipfs.ZipPath.newFileChannel
  [29] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [30] java.nio.channels.FileChannel.open
  [31] java.nio.channels.FileChannel.open
  [32] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [33] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$66.0x0000000800d8bdf0.apply
  [34] cats.effect.IOFiber.$anonfun$8
  [35] cats.effect.IOFiber$$Lambda$629.0x0000000800e9d258.apply
  [36] cats.effect.unsafe.WorkerThread.blockOn
  [37] scala.concurrent.package$.blocking
  [38] cats.effect.IOFiber.runLoop
  [39] cats.effect.IOFiber.execR
  [40] cats.effect.IOFiber.run
  [41] cats.effect.unsafe.WorkerThread.run

--- 971981008 ns (0.10%), 97 samples
  [ 0] void OopOopIterateDispatch<G1CMOopClosure>::Table::oop_oop_iterate<InstanceMirrorKlass, narrowOop>(G1CMOopClosure*, oopDesc*, Klass*)
  [ 1] void G1CMTask::process_grey_task_entry<true>(G1TaskQueueEntry)
  [ 2] G1CMTask::do_marking_step(double, bool, bool)
  [ 3] G1CMConcurrentMarkingTask::work(unsigned int)
  [ 4] GangWorker::loop()
  [ 5] GangWorker::run()
  [ 6] Thread::call_run()
  [ 7] thread_native_entry(Thread*)
  [ 8] start_thread

--- 913141065 ns (0.09%), 91 samples
  [ 0] clear_page_rep_[k]
  [ 1] get_page_from_freelist_[k]
  [ 2] __alloc_pages_[k]
  [ 3] __folio_alloc_[k]
  [ 4] vma_alloc_folio_[k]
  [ 5] do_anonymous_page_[k]
  [ 6] handle_pte_fault_[k]
  [ 7] __handle_mm_fault_[k]
  [ 8] handle_mm_fault_[k]
  [ 9] do_user_addr_fault_[k]
  [10] exc_page_fault_[k]
  [11] asm_exc_page_fault_[k]
  [12] __memset_avx2_unaligned_erms
  [13] MemAllocator::allocate() const
  [14] TypeArrayKlass::allocate_common(int, bool, JavaThread*)
  [15] JVMCIRuntime::new_array_common(JavaThread*, Klass*, int, bool)
  [16] cats.effect.unsafe.WorkerThread.blockOn
  [17] scala.concurrent.package$.blocking
  [18] cats.effect.IOFiber.runLoop
  [19] cats.effect.IOFiber.autoCedeR
  [20] cats.effect.IOFiber.run
  [21] cats.effect.unsafe.WorkerThread.run

--- 912295354 ns (0.09%), 91 samples
  [ 0] page_counter_try_charge_[k]
  [ 1] try_charge_memcg_[k]
  [ 2] obj_cgroup_charge_[k]
  [ 3] __kmalloc_[k]
  [ 4] inotify_handle_inode_event_[k]
  [ 5] fsnotify_handle_inode_event.isra.0_[k]
  [ 6] send_to_group_[k]
  [ 7] fsnotify_[k]
  [ 8] __fsnotify_parent_[k]
  [ 9] vfs_write_[k]
  [10] ksys_write_[k]
  [11] __x64_sys_write_[k]
  [12] do_syscall_64_[k]
  [13] entry_SYSCALL_64_after_hwframe_[k]
  [14] write
  [15] sun.nio.ch.FileDispatcherImpl.write0
  [16] sun.nio.ch.FileDispatcherImpl.write
  [17] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.IOUtil.write
  [20] sun.nio.ch.FileChannelImpl.write
  [21] java.nio.channels.Channels.writeFullyImpl
  [22] java.nio.channels.Channels.writeFully
  [23] java.nio.channels.Channels$1.write
  [24] java.io.InputStream.transferTo
  [25] java.nio.file.Files.copy
  [26] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [27] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [28] jdk.nio.zipfs.ZipPath.newFileChannel
  [29] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [30] java.nio.channels.FileChannel.open
  [31] java.nio.channels.FileChannel.open
  [32] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [33] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$66.0x0000000800d8bdf0.apply
  [34] cats.effect.IOFiber.$anonfun$8
  [35] cats.effect.IOFiber$$Lambda$629.0x0000000800e9d258.apply
  [36] cats.effect.unsafe.WorkerThread.blockOn
  [37] scala.concurrent.package$.blocking
  [38] cats.effect.IOFiber.runLoop
  [39] cats.effect.IOFiber.execR
  [40] cats.effect.IOFiber.run
  [41] cats.effect.unsafe.WorkerThread.run

--- 902354275 ns (0.09%), 90 samples
  [ 0] jni_GetPrimitiveArrayCritical
  [ 1] Java_java_util_zip_Inflater_inflateBytesBytes
  [ 2] java.util.zip.Inflater.inflateBytesBytes
  [ 3] java.util.zip.Inflater.inflate
  [ 4] java.util.zip.InflaterInputStream.read
  [ 5] java.io.InputStream.transferTo
  [ 6] java.nio.file.Files.copy
  [ 7] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [ 8] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [ 9] jdk.nio.zipfs.ZipPath.newFileChannel
  [10] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [11] java.nio.channels.FileChannel.open
  [12] java.nio.channels.FileChannel.open
  [13] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [14] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$66.0x0000000800d8bdf0.apply
  [15] cats.effect.IOFiber.$anonfun$8
  [16] cats.effect.IOFiber$$Lambda$629.0x0000000800e9d258.apply
  [17] cats.effect.unsafe.WorkerThread.blockOn
  [18] scala.concurrent.package$.blocking
  [19] cats.effect.IOFiber.runLoop
  [20] cats.effect.IOFiber.execR
  [21] cats.effect.IOFiber.run
  [22] cats.effect.unsafe.WorkerThread.run

--- 901886788 ns (0.09%), 90 samples
  [ 0] jlong_disjoint_arraycopy
  [ 1] jdk.internal.misc.Unsafe.copyMemory0
  [ 2] jdk.internal.misc.Unsafe.copyMemory
  [ 3] jdk.internal.misc.ScopedMemoryAccess.copyMemoryInternal
  [ 4] jdk.internal.misc.ScopedMemoryAccess.copyMemory
  [ 5] java.nio.ByteBuffer.putBuffer
  [ 6] java.nio.ByteBuffer.put
  [ 7] java.nio.HeapByteBuffer.put
  [ 8] sun.nio.ch.IOUtil.read
  [ 9] sun.nio.ch.IOUtil.read
  [10] sun.nio.ch.FileChannelImpl.readInternal
  [11] sun.nio.ch.FileChannelImpl.read
  [12] jdk.nio.zipfs.ZipFileSystem$1.read
  [13] fs2.io.file.FileHandleCompanionPlatform$$anon$1.read$$anonfun$1
  [14] fs2.io.file.FileHandleCompanionPlatform$$anon$1$$Lambda$670.0x0000000800ea9ac8.apply
  [15] cats.effect.IOFiber.$anonfun$8
  [16] cats.effect.IOFiber$$Lambda$629.0x0000000800e9d258.apply
  [17] cats.effect.unsafe.WorkerThread.blockOn
  [18] scala.concurrent.package$.blocking
  [19] cats.effect.IOFiber.runLoop
  [20] cats.effect.IOFiber.execR
  [21] cats.effect.IOFiber.run
  [22] cats.effect.unsafe.WorkerThread.run

--- 863105433 ns (0.08%), 86 samples
  [ 0] obj_cgroup_charge_[k]
  [ 1] __kmalloc_[k]
  [ 2] inotify_handle_inode_event_[k]
  [ 3] fsnotify_handle_inode_event.isra.0_[k]
  [ 4] send_to_group_[k]
  [ 5] fsnotify_[k]
  [ 6] __fsnotify_parent_[k]
  [ 7] vfs_write_[k]
  [ 8] ksys_write_[k]
  [ 9] __x64_sys_write_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] write
  [13] sun.nio.ch.FileDispatcherImpl.write0
  [14] sun.nio.ch.FileDispatcherImpl.write
  [15] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [16] sun.nio.ch.IOUtil.write
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.FileChannelImpl.write
  [19] java.nio.channels.Channels.writeFullyImpl
  [20] java.nio.channels.Channels.writeFully
  [21] java.nio.channels.Channels$1.write
  [22] java.io.InputStream.transferTo
  [23] java.nio.file.Files.copy
  [24] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [25] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [26] jdk.nio.zipfs.ZipPath.newFileChannel
  [27] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [28] java.nio.channels.FileChannel.open
  [29] java.nio.channels.FileChannel.open
  [30] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [31] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$66.0x0000000800d8bdf0.apply
  [32] cats.effect.IOFiber.$anonfun$8
  [33] cats.effect.IOFiber$$Lambda$629.0x0000000800e9d258.apply
  [34] cats.effect.unsafe.WorkerThread.blockOn
  [35] scala.concurrent.package$.blocking
  [36] cats.effect.IOFiber.runLoop
  [37] cats.effect.IOFiber.execR
  [38] cats.effect.IOFiber.run
  [39] cats.effect.unsafe.WorkerThread.run

--- 862883894 ns (0.08%), 86 samples
  [ 0] inotify_merge_[k]
  [ 1] inotify_handle_inode_event_[k]
  [ 2] fsnotify_handle_inode_event.isra.0_[k]
  [ 3] send_to_group_[k]
  [ 4] fsnotify_[k]
  [ 5] __fsnotify_parent_[k]
  [ 6] vfs_write_[k]
  [ 7] ksys_write_[k]
  [ 8] __x64_sys_write_[k]
  [ 9] do_syscall_64_[k]
  [10] entry_SYSCALL_64_after_hwframe_[k]
  [11] write
  [12] sun.nio.ch.FileDispatcherImpl.write0
  [13] sun.nio.ch.FileDispatcherImpl.write
  [14] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [15] sun.nio.ch.IOUtil.write
  [16] sun.nio.ch.IOUtil.write
  [17] sun.nio.ch.FileChannelImpl.write
  [18] java.nio.channels.Channels.writeFullyImpl
  [19] java.nio.channels.Channels.writeFully
  [20] java.nio.channels.Channels$1.write
  [21] java.io.InputStream.transferTo
  [22] java.nio.file.Files.copy
  [23] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [24] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [25] jdk.nio.zipfs.ZipPath.newFileChannel
  [26] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [27] java.nio.channels.FileChannel.open
  [28] java.nio.channels.FileChannel.open
  [29] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [30] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$66.0x0000000800d8bdf0.apply
  [31] cats.effect.IOFiber.$anonfun$8
  [32] cats.effect.IOFiber$$Lambda$629.0x0000000800e9d258.apply
  [33] cats.effect.unsafe.WorkerThread.blockOn
  [34] scala.concurrent.package$.blocking
  [35] cats.effect.IOFiber.runLoop
  [36] cats.effect.IOFiber.execR
  [37] cats.effect.IOFiber.run
  [38] cats.effect.unsafe.WorkerThread.run

--- 862842353 ns (0.08%), 86 samples
  [ 0] zio_create?[zfs]_[k]
  [ 1] zio_null?[zfs]_[k]
  [ 2] zio_root?[zfs]_[k]
  [ 3] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 4] dmu_read_uio_dnode?[zfs]_[k]
  [ 5] dmu_read_uio_dbuf?[zfs]_[k]
  [ 6] mappedread?[zfs]_[k]
  [ 7] zfs_read?[zfs]_[k]
  [ 8] zpl_iter_read?[zfs]_[k]
  [ 9] new_sync_read_[k]
  [10] vfs_read_[k]
  [11] __x64_sys_pread64_[k]
  [12] do_syscall_64_[k]
  [13] entry_SYSCALL_64_after_hwframe_[k]
  [14] __libc_pread64
  [15] sun.nio.ch.FileDispatcherImpl.pread0
  [16] sun.nio.ch.FileDispatcherImpl.pread
  [17] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [18] sun.nio.ch.IOUtil.read
  [19] sun.nio.ch.IOUtil.read
  [20] sun.nio.ch.FileChannelImpl.readInternal
  [21] sun.nio.ch.FileChannelImpl.read
  [22] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [23] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [24] jdk.nio.zipfs.ZipFileSystem$2.fill
  [25] java.util.zip.InflaterInputStream.read
  [26] java.io.InputStream.transferTo
  [27] java.nio.file.Files.copy
  [28] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [29] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [30] jdk.nio.zipfs.ZipPath.newFileChannel
  [31] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [32] java.nio.channels.FileChannel.open
  [33] java.nio.channels.FileChannel.open
  [34] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [35] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$66.0x0000000800d8bdf0.apply
  [36] cats.effect.IOFiber.$anonfun$8
  [37] cats.effect.IOFiber$$Lambda$629.0x0000000800e9d258.apply
  [38] cats.effect.unsafe.WorkerThread.blockOn
  [39] scala.concurrent.package$.blocking
  [40] cats.effect.IOFiber.runLoop
  [41] cats.effect.IOFiber.execR
  [42] cats.effect.IOFiber.run
  [43] cats.effect.unsafe.WorkerThread.run

--- 843285402 ns (0.08%), 84 samples
  [ 0] fsnotify_insert_event_[k]
  [ 1] inotify_handle_inode_event_[k]
  [ 2] fsnotify_handle_inode_event.isra.0_[k]
  [ 3] send_to_group_[k]
  [ 4] fsnotify_[k]
  [ 5] __fsnotify_parent_[k]
  [ 6] vfs_write_[k]
  [ 7] ksys_write_[k]
  [ 8] __x64_sys_write_[k]
  [ 9] do_syscall_64_[k]
  [10] entry_SYSCALL_64_after_hwframe_[k]
  [11] write
  [12] sun.nio.ch.FileDispatcherImpl.write0
  [13] sun.nio.ch.FileDispatcherImpl.write
  [14] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [15] sun.nio.ch.IOUtil.write
  [16] sun.nio.ch.IOUtil.write
  [17] sun.nio.ch.FileChannelImpl.write
  [18] java.nio.channels.Channels.writeFullyImpl
  [19] java.nio.channels.Channels.writeFully
  [20] java.nio.channels.Channels$1.write
  [21] java.io.InputStream.transferTo
  [22] java.nio.file.Files.copy
  [23] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [24] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [25] jdk.nio.zipfs.ZipPath.newFileChannel
  [26] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [27] java.nio.channels.FileChannel.open
  [28] java.nio.channels.FileChannel.open
  [29] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [30] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$66.0x0000000800d8bdf0.apply
  [31] cats.effect.IOFiber.$anonfun$8
  [32] cats.effect.IOFiber$$Lambda$629.0x0000000800e9d258.apply
  [33] cats.effect.unsafe.WorkerThread.blockOn
  [34] scala.concurrent.package$.blocking
  [35] cats.effect.IOFiber.runLoop
  [36] cats.effect.IOFiber.execR
  [37] cats.effect.IOFiber.run
  [38] cats.effect.unsafe.WorkerThread.run

--- 842320472 ns (0.08%), 84 samples
  [ 0] __memset_avx2_unaligned_erms
  [ 1] MemAllocator::allocate() const
  [ 2] TypeArrayKlass::allocate_common(int, bool, JavaThread*)
  [ 3] JVMCIRuntime::new_array_common(JavaThread*, Klass*, int, bool)
  [ 4] cats.effect.unsafe.WorkerThread.blockOn
  [ 5] scala.concurrent.package$.blocking
  [ 6] cats.effect.IOFiber.runLoop
  [ 7] cats.effect.IOFiber.autoCedeR
  [ 8] cats.effect.IOFiber.run
  [ 9] cats.effect.unsafe.WorkerThread.run

--- 822393229 ns (0.08%), 82 samples
  [ 0] memset_[k]
  [ 1] spl_kmem_cache_alloc?[spl]_[k]
  [ 2] zio_create?[zfs]_[k]
  [ 3] zio_null?[zfs]_[k]
  [ 4] zio_root?[zfs]_[k]
  [ 5] dmu_tx_count_write?[zfs]_[k]
  [ 6] dmu_tx_hold_write_by_dnode?[zfs]_[k]
  [ 7] zfs_write?[zfs]_[k]
  [ 8] zpl_iter_write?[zfs]_[k]
  [ 9] new_sync_write_[k]
  [10] vfs_write_[k]
  [11] ksys_write_[k]
  [12] __x64_sys_write_[k]
  [13] do_syscall_64_[k]
  [14] entry_SYSCALL_64_after_hwframe_[k]
  [15] write
  [16] sun.nio.ch.FileDispatcherImpl.write0
  [17] sun.nio.ch.FileDispatcherImpl.write
  [18] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [19] sun.nio.ch.IOUtil.write
  [20] sun.nio.ch.IOUtil.write
  [21] sun.nio.ch.FileChannelImpl.write
  [22] java.nio.channels.Channels.writeFullyImpl
  [23] java.nio.channels.Channels.writeFully
  [24] java.nio.channels.Channels$1.write
  [25] java.io.InputStream.transferTo
  [26] java.nio.file.Files.copy
  [27] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [28] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [29] jdk.nio.zipfs.ZipPath.newFileChannel
  [30] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [31] java.nio.channels.FileChannel.open
  [32] java.nio.channels.FileChannel.open
  [33] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [34] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$66.0x0000000800d8bdf0.apply
  [35] cats.effect.IOFiber.$anonfun$8
  [36] cats.effect.IOFiber$$Lambda$629.0x0000000800e9d258.apply
  [37] cats.effect.unsafe.WorkerThread.blockOn
  [38] scala.concurrent.package$.blocking
  [39] cats.effect.IOFiber.runLoop
  [40] cats.effect.IOFiber.execR
  [41] cats.effect.IOFiber.run
  [42] cats.effect.unsafe.WorkerThread.run

--- 801424577 ns (0.08%), 80 samples
  [ 0] G1CMTask::do_marking_step(double, bool, bool)
  [ 1] G1CMConcurrentMarkingTask::work(unsigned int)
  [ 2] GangWorker::loop()
  [ 3] GangWorker::run()
  [ 4] Thread::call_run()
  [ 5] thread_native_entry(Thread*)
  [ 6] start_thread

--- 774445380 ns (0.08%), 77 samples
  [ 0] kfree_[k]
  [ 1] spl_kmem_free_impl?[spl]_[k]
  [ 2] spl_kmem_free?[spl]_[k]
  [ 3] dmu_tx_destroy?[zfs]_[k]
  [ 4] dmu_tx_commit?[zfs]_[k]
  [ 5] zfs_write?[zfs]_[k]
  [ 6] zpl_iter_write?[zfs]_[k]
  [ 7] new_sync_write_[k]
  [ 8] vfs_write_[k]
  [ 9] ksys_write_[k]
  [10] __x64_sys_write_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] write
  [14] sun.nio.ch.FileDispatcherImpl.write0
  [15] sun.nio.ch.FileDispatcherImpl.write
  [16] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.FileChannelImpl.write
  [20] java.nio.channels.Channels.writeFullyImpl
  [21] java.nio.channels.Channels.writeFully
  [22] java.nio.channels.Channels$1.write
  [23] java.io.InputStream.transferTo
  [24] java.nio.file.Files.copy
  [25] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [26] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [27] jdk.nio.zipfs.ZipPath.newFileChannel
  [28] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [29] java.nio.channels.FileChannel.open
  [30] java.nio.channels.FileChannel.open
  [31] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [32] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$66.0x0000000800d8bdf0.apply
  [33] cats.effect.IOFiber.$anonfun$8
  [34] cats.effect.IOFiber$$Lambda$629.0x0000000800e9d258.apply
  [35] cats.effect.unsafe.WorkerThread.blockOn
  [36] scala.concurrent.package$.blocking
  [37] cats.effect.IOFiber.runLoop
  [38] cats.effect.IOFiber.execR
  [39] cats.effect.IOFiber.run
  [40] cats.effect.unsafe.WorkerThread.run

--- 762518164 ns (0.07%), 76 samples
  [ 0] zio_wait?[zfs]_[k]
  [ 1] dmu_tx_count_write?[zfs]_[k]
  [ 2] dmu_tx_hold_write_by_dnode?[zfs]_[k]
  [ 3] zfs_write?[zfs]_[k]
  [ 4] zpl_iter_write?[zfs]_[k]
  [ 5] new_sync_write_[k]
  [ 6] vfs_write_[k]
  [ 7] ksys_write_[k]
  [ 8] __x64_sys_write_[k]
  [ 9] do_syscall_64_[k]
  [10] entry_SYSCALL_64_after_hwframe_[k]
  [11] write
  [12] sun.nio.ch.FileDispatcherImpl.write0
  [13] sun.nio.ch.FileDispatcherImpl.write
  [14] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [15] sun.nio.ch.IOUtil.write
  [16] sun.nio.ch.IOUtil.write
  [17] sun.nio.ch.FileChannelImpl.write
  [18] java.nio.channels.Channels.writeFullyImpl
  [19] java.nio.channels.Channels.writeFully
  [20] java.nio.channels.Channels$1.write
  [21] java.io.InputStream.transferTo
  [22] java.nio.file.Files.copy
  [23] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [24] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [25] jdk.nio.zipfs.ZipPath.newFileChannel
  [26] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [27] java.nio.channels.FileChannel.open
  [28] java.nio.channels.FileChannel.open
  [29] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [30] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$66.0x0000000800d8bdf0.apply
  [31] cats.effect.IOFiber.$anonfun$8
  [32] cats.effect.IOFiber$$Lambda$629.0x0000000800e9d258.apply
  [33] cats.effect.unsafe.WorkerThread.blockOn
  [34] scala.concurrent.package$.blocking
  [35] cats.effect.IOFiber.runLoop
  [36] cats.effect.IOFiber.execR
  [37] cats.effect.IOFiber.run
  [38] cats.effect.unsafe.WorkerThread.run

--- 761957470 ns (0.07%), 76 samples
  [ 0] _raw_spin_unlock_irqrestore_[k]
  [ 1] __wake_up_common_lock_[k]
  [ 2] __wake_up_[k]
  [ 3] fsnotify_insert_event_[k]
  [ 4] inotify_handle_inode_event_[k]
  [ 5] fsnotify_handle_inode_event.isra.0_[k]
  [ 6] send_to_group_[k]
  [ 7] fsnotify_[k]
  [ 8] __fsnotify_parent_[k]
  [ 9] vfs_write_[k]
  [10] ksys_write_[k]
  [11] __x64_sys_write_[k]
  [12] do_syscall_64_[k]
  [13] entry_SYSCALL_64_after_hwframe_[k]
  [14] write
  [15] sun.nio.ch.FileDispatcherImpl.write0
  [16] sun.nio.ch.FileDispatcherImpl.write
  [17] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.IOUtil.write
  [20] sun.nio.ch.FileChannelImpl.write
  [21] java.nio.channels.Channels.writeFullyImpl
  [22] java.nio.channels.Channels.writeFully
  [23] java.nio.channels.Channels$1.write
  [24] java.io.InputStream.transferTo
  [25] java.nio.file.Files.copy
  [26] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [27] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [28] jdk.nio.zipfs.ZipPath.newFileChannel
  [29] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [30] java.nio.channels.FileChannel.open
  [31] java.nio.channels.FileChannel.open
  [32] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [33] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$66.0x0000000800d8bdf0.apply
  [34] cats.effect.IOFiber.$anonfun$8
  [35] cats.effect.IOFiber$$Lambda$629.0x0000000800e9d258.apply
  [36] cats.effect.unsafe.WorkerThread.blockOn
  [37] scala.concurrent.package$.blocking
  [38] cats.effect.IOFiber.runLoop
  [39] cats.effect.IOFiber.execR
  [40] cats.effect.IOFiber.run
  [41] cats.effect.unsafe.WorkerThread.run

--- 752906276 ns (0.07%), 75 samples
  [ 0] zfs_log_write?[zfs]_[k]
  [ 1] zfs_write?[zfs]_[k]
  [ 2] zpl_iter_write?[zfs]_[k]
  [ 3] new_sync_write_[k]
  [ 4] vfs_write_[k]
  [ 5] ksys_write_[k]
  [ 6] __x64_sys_write_[k]
  [ 7] do_syscall_64_[k]
  [ 8] entry_SYSCALL_64_after_hwframe_[k]
  [ 9] write
  [10] sun.nio.ch.FileDispatcherImpl.write0
  [11] sun.nio.ch.FileDispatcherImpl.write
  [12] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [13] sun.nio.ch.IOUtil.write
  [14] sun.nio.ch.IOUtil.write
  [15] sun.nio.ch.FileChannelImpl.write
  [16] java.nio.channels.Channels.writeFullyImpl
  [17] java.nio.channels.Channels.writeFully
  [18] java.nio.channels.Channels$1.write
  [19] java.io.InputStream.transferTo
  [20] java.nio.file.Files.copy
  [21] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [22] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [23] jdk.nio.zipfs.ZipPath.newFileChannel
  [24] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [25] java.nio.channels.FileChannel.open
  [26] java.nio.channels.FileChannel.open
  [27] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [28] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$66.0x0000000800d8bdf0.apply
  [29] cats.effect.IOFiber.$anonfun$8
  [30] cats.effect.IOFiber$$Lambda$629.0x0000000800e9d258.apply
  [31] cats.effect.unsafe.WorkerThread.blockOn
  [32] scala.concurrent.package$.blocking
  [33] cats.effect.IOFiber.runLoop
  [34] cats.effect.IOFiber.execR
  [35] cats.effect.IOFiber.run
  [36] cats.effect.unsafe.WorkerThread.run

--- 752522040 ns (0.07%), 75 samples
  [ 0] zfs_write?[zfs]_[k]
  [ 1] zpl_iter_write?[zfs]_[k]
  [ 2] new_sync_write_[k]
  [ 3] vfs_write_[k]
  [ 4] ksys_write_[k]
  [ 5] __x64_sys_write_[k]
  [ 6] do_syscall_64_[k]
  [ 7] entry_SYSCALL_64_after_hwframe_[k]
  [ 8] write
  [ 9] sun.nio.ch.FileDispatcherImpl.write0
  [10] sun.nio.ch.FileDispatcherImpl.write
  [11] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [12] sun.nio.ch.IOUtil.write
  [13] sun.nio.ch.IOUtil.write
  [14] sun.nio.ch.FileChannelImpl.write
  [15] java.nio.channels.Channels.writeFullyImpl
  [16] java.nio.channels.Channels.writeFully
  [17] java.nio.channels.Channels$1.write
  [18] java.io.InputStream.transferTo
  [19] java.nio.file.Files.copy
  [20] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [21] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [22] jdk.nio.zipfs.ZipPath.newFileChannel
  [23] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [24] java.nio.channels.FileChannel.open
  [25] java.nio.channels.FileChannel.open
  [26] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [27] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$66.0x0000000800d8bdf0.apply
  [28] cats.effect.IOFiber.$anonfun$8
  [29] cats.effect.IOFiber$$Lambda$629.0x0000000800e9d258.apply
  [30] cats.effect.unsafe.WorkerThread.blockOn
  [31] scala.concurrent.package$.blocking
  [32] cats.effect.IOFiber.runLoop
  [33] cats.effect.IOFiber.execR
  [34] cats.effect.IOFiber.run
  [35] cats.effect.unsafe.WorkerThread.run

--- 743023890 ns (0.07%), 74 samples
  [ 0] G1ParScanThreadState::trim_queue_to_threshold(unsigned int)
  [ 1] G1ParScanThreadState::steal_and_trim_queue(GenericTaskQueueSet<OverflowTaskQueue<ScannerTask, (MEMFLAGS)5, 131072u>, (MEMFLAGS)5>*)
  [ 2] G1ParEvacuateFollowersClosure::do_void()
  [ 3] G1EvacuateRegionsTask::evacuate_live_objects(G1ParScanThreadState*, unsigned int)
  [ 4] G1EvacuateRegionsBaseTask::work(unsigned int)
  [ 5] GangWorker::loop()
  [ 6] GangWorker::run()
  [ 7] Thread::call_run()
  [ 8] thread_native_entry(Thread*)
  [ 9] start_thread

--- 734811004 ns (0.07%), 73 samples
  [ 0] free_unref_page_list_[k]
  [ 1] release_pages_[k]
  [ 2] free_pages_and_swap_cache_[k]
  [ 3] tlb_batch_pages_flush_[k]
  [ 4] tlb_flush_mmu_[k]
  [ 5] zap_pte_range_[k]
  [ 6] zap_pmd_range.isra.0_[k]
  [ 7] unmap_page_range_[k]
  [ 8] unmap_single_vma_[k]
  [ 9] unmap_vmas_[k]
  [10] unmap_region_[k]
  [11] __do_munmap_[k]
  [12] mmap_region_[k]
  [13] do_mmap_[k]
  [14] vm_mmap_pgoff_[k]
  [15] ksys_mmap_pgoff_[k]
  [16] __x64_sys_mmap_[k]
  [17] do_syscall_64_[k]
  [18] entry_SYSCALL_64_after_hwframe_[k]
  [19] __GI___mmap
  [20] G1PageBasedVirtualSpace::uncommit(unsigned long, unsigned long)
  [21] G1RegionsLargerThanCommitSizeMapper::uncommit_regions(unsigned int, unsigned long)
  [22] HeapRegionManager::uncommit_regions(unsigned int, unsigned int)
  [23] HeapRegionManager::uncommit_inactive_regions(unsigned int)
  [24] G1UncommitRegionTask::execute()
  [25] G1ServiceThread::run_task(G1ServiceTask*)
  [26] G1ServiceThread::run_service()
  [27] ConcurrentGCThread::run()
  [28] Thread::call_run()
  [29] thread_native_entry(Thread*)
  [30] start_thread

--- 732439455 ns (0.07%), 73 samples
  [ 0] dsl_dir_phys?[zfs]_[k]
  [ 1] dsl_dir_tempreserve_space?[zfs]_[k]
  [ 2] dmu_tx_try_assign?[zfs]_[k]
  [ 3] dmu_tx_assign?[zfs]_[k]
  [ 4] zfs_write?[zfs]_[k]
  [ 5] zpl_iter_write?[zfs]_[k]
  [ 6] new_sync_write_[k]
  [ 7] vfs_write_[k]
  [ 8] ksys_write_[k]
  [ 9] __x64_sys_write_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] write
  [13] sun.nio.ch.FileDispatcherImpl.write0
  [14] sun.nio.ch.FileDispatcherImpl.write
  [15] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [16] sun.nio.ch.IOUtil.write
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.FileChannelImpl.write
  [19] java.nio.channels.Channels.writeFullyImpl
  [20] java.nio.channels.Channels.writeFully
  [21] java.nio.channels.Channels$1.write
  [22] java.io.InputStream.transferTo
  [23] java.nio.file.Files.copy
  [24] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [25] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [26] jdk.nio.zipfs.ZipPath.newFileChannel
  [27] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [28] java.nio.channels.FileChannel.open
  [29] java.nio.channels.FileChannel.open
  [30] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [31] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$66.0x0000000800d8bdf0.apply
  [32] cats.effect.IOFiber.$anonfun$8
  [33] cats.effect.IOFiber$$Lambda$629.0x0000000800e9d258.apply
  [34] cats.effect.unsafe.WorkerThread.blockOn
  [35] scala.concurrent.package$.blocking
  [36] cats.effect.IOFiber.runLoop
  [37] cats.effect.IOFiber.execR
  [38] cats.effect.IOFiber.run
  [39] cats.effect.unsafe.WorkerThread.run

--- 731539892 ns (0.07%), 73 samples
  [ 0] jlong_disjoint_arraycopy
  [ 1] jdk.internal.misc.Unsafe.copyMemory0
  [ 2] jdk.internal.misc.Unsafe.copyMemory
  [ 3] jdk.internal.misc.ScopedMemoryAccess.copyMemoryInternal
  [ 4] jdk.internal.misc.ScopedMemoryAccess.copyMemory
  [ 5] java.nio.ByteBuffer.putBuffer
  [ 6] java.nio.ByteBuffer.put
  [ 7] java.nio.HeapByteBuffer.put
  [ 8] sun.nio.ch.IOUtil.read
  [ 9] sun.nio.ch.IOUtil.read
  [10] sun.nio.ch.FileChannelImpl.readInternal
  [11] sun.nio.ch.FileChannelImpl.read
  [12] jdk.nio.zipfs.ZipFileSystem$1.read
  [13] fs2.io.file.FileHandleCompanionPlatform$$anon$1.read$$anonfun$1
  [14] fs2.io.file.FileHandleCompanionPlatform$$anon$1$$Lambda$670.0x0000000800ea9ac8.apply
  [15] cats.effect.IOFiber.$anonfun$8
  [16] cats.effect.IOFiber$$Lambda$629.0x0000000800e9d258.apply
  [17] cats.effect.unsafe.WorkerThread.blockOn
  [18] scala.concurrent.package$.blocking
  [19] cats.effect.IOFiber.runLoop
  [20] cats.effect.IOFiber.autoCedeR
  [21] cats.effect.IOFiber.run
  [22] cats.effect.unsafe.WorkerThread.run

--- 719694725 ns (0.07%), 72 samples
  [ 0] zap_pte_range_[k]
  [ 1] zap_pmd_range.isra.0_[k]
  [ 2] unmap_page_range_[k]
  [ 3] unmap_single_vma_[k]
  [ 4] unmap_vmas_[k]
  [ 5] unmap_region_[k]
  [ 6] __do_munmap_[k]
  [ 7] mmap_region_[k]
  [ 8] do_mmap_[k]
  [ 9] vm_mmap_pgoff_[k]
  [10] ksys_mmap_pgoff_[k]
  [11] __x64_sys_mmap_[k]
  [12] do_syscall_64_[k]
  [13] entry_SYSCALL_64_after_hwframe_[k]
  [14] __GI___mmap
  [15] G1PageBasedVirtualSpace::uncommit(unsigned long, unsigned long)
  [16] G1RegionsLargerThanCommitSizeMapper::uncommit_regions(unsigned int, unsigned long)
  [17] HeapRegionManager::uncommit_regions(unsigned int, unsigned int)
  [18] HeapRegionManager::uncommit_inactive_regions(unsigned int)
  [19] G1UncommitRegionTask::execute()
  [20] G1ServiceThread::run_task(G1ServiceTask*)
  [21] G1ServiceThread::run_service()
  [22] ConcurrentGCThread::run()
  [23] Thread::call_run()
  [24] thread_native_entry(Thread*)
  [25] start_thread

--- 701805616 ns (0.07%), 70 samples
  [ 0] sun.nio.ch.FileDispatcherImpl.write0
  [ 1] sun.nio.ch.FileDispatcherImpl.write
  [ 2] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [ 3] sun.nio.ch.IOUtil.write
  [ 4] sun.nio.ch.IOUtil.write
  [ 5] sun.nio.ch.FileChannelImpl.write
  [ 6] java.nio.channels.Channels.writeFullyImpl
  [ 7] java.nio.channels.Channels.writeFully
  [ 8] java.nio.channels.Channels$1.write
  [ 9] java.io.InputStream.transferTo
  [10] java.nio.file.Files.copy
  [11] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [12] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [13] jdk.nio.zipfs.ZipPath.newFileChannel
  [14] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [15] java.nio.channels.FileChannel.open
  [16] java.nio.channels.FileChannel.open
  [17] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [18] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$66.0x0000000800d8bdf0.apply
  [19] cats.effect.IOFiber.$anonfun$8
  [20] cats.effect.IOFiber$$Lambda$629.0x0000000800e9d258.apply
  [21] cats.effect.unsafe.WorkerThread.blockOn
  [22] scala.concurrent.package$.blocking
  [23] cats.effect.IOFiber.runLoop
  [24] cats.effect.IOFiber.execR
  [25] cats.effect.IOFiber.run
  [26] cats.effect.unsafe.WorkerThread.run

--- 692877833 ns (0.07%), 69 samples
  [ 0] kmem_cache_alloc_[k]
  [ 1] spl_kmem_cache_alloc?[spl]_[k]
  [ 2] zio_data_buf_alloc?[zfs]_[k]
  [ 3] zil_itx_create?[zfs]_[k]
  [ 4] zfs_log_write?[zfs]_[k]
  [ 5] zfs_write?[zfs]_[k]
  [ 6] zpl_iter_write?[zfs]_[k]
  [ 7] new_sync_write_[k]
  [ 8] vfs_write_[k]
  [ 9] ksys_write_[k]
  [10] __x64_sys_write_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] write
  [14] sun.nio.ch.FileDispatcherImpl.write0
  [15] sun.nio.ch.FileDispatcherImpl.write
  [16] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.FileChannelImpl.write
  [20] java.nio.channels.Channels.writeFullyImpl
  [21] java.nio.channels.Channels.writeFully
  [22] java.nio.channels.Channels$1.write
  [23] java.io.InputStream.transferTo
  [24] java.nio.file.Files.copy
  [25] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [26] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [27] jdk.nio.zipfs.ZipPath.newFileChannel
  [28] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [29] java.nio.channels.FileChannel.open
  [30] java.nio.channels.FileChannel.open
  [31] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [32] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$66.0x0000000800d8bdf0.apply
  [33] cats.effect.IOFiber.$anonfun$8
  [34] cats.effect.IOFiber$$Lambda$629.0x0000000800e9d258.apply
  [35] cats.effect.unsafe.WorkerThread.blockOn
  [36] scala.concurrent.package$.blocking
  [37] cats.effect.IOFiber.runLoop
  [38] cats.effect.IOFiber.execR
  [39] cats.effect.IOFiber.run
  [40] cats.effect.unsafe.WorkerThread.run

--- 681899720 ns (0.07%), 68 samples
  [ 0] clear_page_rep_[k]
  [ 1] get_page_from_freelist_[k]
  [ 2] __alloc_pages_[k]
  [ 3] __folio_alloc_[k]
  [ 4] vma_alloc_folio_[k]
  [ 5] do_anonymous_page_[k]
  [ 6] handle_pte_fault_[k]
  [ 7] __handle_mm_fault_[k]
  [ 8] handle_mm_fault_[k]
  [ 9] do_user_addr_fault_[k]
  [10] exc_page_fault_[k]
  [11] asm_exc_page_fault_[k]
  [12] __memset_avx2_unaligned_erms
  [13] MemAllocator::allocate() const
  [14] TypeArrayKlass::allocate_common(int, bool, JavaThread*)
  [15] JVMCIRuntime::new_array_common(JavaThread*, Klass*, int, bool)
  [16] com.scalamandra.ZipLib$.com$scalamandra$ZipLib$$anon$1$$_$streamFoldChunks$$anonfun$1
  [17] com.scalamandra.ZipLib$$anon$1$$Lambda$254.0x0000000800dcbaf0.apply
  [18] cats.effect.IOFiber.succeeded
  [19] cats.effect.IOFiber.runLoop
  [20] cats.effect.IOFiber.autoCedeR
  [21] cats.effect.IOFiber.run
  [22] cats.effect.unsafe.WorkerThread.run

--- 673027244 ns (0.07%), 67 samples
  [ 0] __kmalloc_node_[k]
  [ 1] spl_kmem_alloc_impl?[spl]_[k]
  [ 2] spl_kmem_alloc?[spl]_[k]
  [ 3] zfs_rangelock_enter_impl?[zfs]_[k]
  [ 4] zfs_rangelock_enter?[zfs]_[k]
  [ 5] zfs_write?[zfs]_[k]
  [ 6] zpl_iter_write?[zfs]_[k]
  [ 7] new_sync_write_[k]
  [ 8] vfs_write_[k]
  [ 9] ksys_write_[k]
  [10] __x64_sys_write_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] write
  [14] sun.nio.ch.FileDispatcherImpl.write0
  [15] sun.nio.ch.FileDispatcherImpl.write
  [16] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.FileChannelImpl.write
  [20] java.nio.channels.Channels.writeFullyImpl
  [21] java.nio.channels.Channels.writeFully
  [22] java.nio.channels.Channels$1.write
  [23] java.io.InputStream.transferTo
  [24] java.nio.file.Files.copy
  [25] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [26] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [27] jdk.nio.zipfs.ZipPath.newFileChannel
  [28] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [29] java.nio.channels.FileChannel.open
  [30] java.nio.channels.FileChannel.open
  [31] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [32] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$66.0x0000000800d8bdf0.apply
  [33] cats.effect.IOFiber.$anonfun$8
  [34] cats.effect.IOFiber$$Lambda$629.0x0000000800e9d258.apply
  [35] cats.effect.unsafe.WorkerThread.blockOn
  [36] scala.concurrent.package$.blocking
  [37] cats.effect.IOFiber.runLoop
  [38] cats.effect.IOFiber.execR
  [39] cats.effect.IOFiber.run
  [40] cats.effect.unsafe.WorkerThread.run

--- 672726932 ns (0.07%), 67 samples
  [ 0] __kmalloc_node_[k]
  [ 1] spl_kmem_alloc_impl?[spl]_[k]
  [ 2] spl_kmem_zalloc?[spl]_[k]
  [ 3] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 4] dmu_write_uio_dnode?[zfs]_[k]
  [ 5] dmu_write_uio_dbuf?[zfs]_[k]
  [ 6] zfs_write?[zfs]_[k]
  [ 7] zpl_iter_write?[zfs]_[k]
  [ 8] new_sync_write_[k]
  [ 9] vfs_write_[k]
  [10] ksys_write_[k]
  [11] __x64_sys_write_[k]
  [12] do_syscall_64_[k]
  [13] entry_SYSCALL_64_after_hwframe_[k]
  [14] write
  [15] sun.nio.ch.FileDispatcherImpl.write0
  [16] sun.nio.ch.FileDispatcherImpl.write
  [17] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.IOUtil.write
  [20] sun.nio.ch.FileChannelImpl.write
  [21] java.nio.channels.Channels.writeFullyImpl
  [22] java.nio.channels.Channels.writeFully
  [23] java.nio.channels.Channels$1.write
  [24] java.io.InputStream.transferTo
  [25] java.nio.file.Files.copy
  [26] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [27] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [28] jdk.nio.zipfs.ZipPath.newFileChannel
  [29] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [30] java.nio.channels.FileChannel.open
  [31] java.nio.channels.FileChannel.open
  [32] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [33] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$66.0x0000000800d8bdf0.apply
  [34] cats.effect.IOFiber.$anonfun$8
  [35] cats.effect.IOFiber$$Lambda$629.0x0000000800e9d258.apply
  [36] cats.effect.unsafe.WorkerThread.blockOn
  [37] scala.concurrent.package$.blocking
  [38] cats.effect.IOFiber.runLoop
  [39] cats.effect.IOFiber.execR
  [40] cats.effect.IOFiber.run
  [41] cats.effect.unsafe.WorkerThread.run

--- 671731116 ns (0.07%), 67 samples
  [ 0] native_queued_spin_lock_slowpath.part.0_[k]
  [ 1] native_queued_spin_lock_slowpath_[k]
  [ 2] _raw_spin_lock_[k]
  [ 3] fsnotify_insert_event_[k]
  [ 4] inotify_handle_inode_event_[k]
  [ 5] fsnotify_handle_inode_event.isra.0_[k]
  [ 6] send_to_group_[k]
  [ 7] fsnotify_[k]
  [ 8] __fsnotify_parent_[k]
  [ 9] vfs_write_[k]
  [10] ksys_write_[k]
  [11] __x64_sys_write_[k]
  [12] do_syscall_64_[k]
  [13] entry_SYSCALL_64_after_hwframe_[k]
  [14] write
  [15] sun.nio.ch.FileDispatcherImpl.write0
  [16] sun.nio.ch.FileDispatcherImpl.write
  [17] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.IOUtil.write
  [20] sun.nio.ch.FileChannelImpl.write
  [21] java.nio.channels.Channels.writeFullyImpl
  [22] java.nio.channels.Channels.writeFully
  [23] java.nio.channels.Channels$1.write
  [24] java.io.InputStream.transferTo
  [25] java.nio.file.Files.copy
  [26] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [27] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [28] jdk.nio.zipfs.ZipPath.newFileChannel
  [29] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [30] java.nio.channels.FileChannel.open
  [31] java.nio.channels.FileChannel.open
  [32] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [33] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$66.0x0000000800d8bdf0.apply
  [34] cats.effect.IOFiber.$anonfun$8
  [35] cats.effect.IOFiber$$Lambda$629.0x0000000800e9d258.apply
  [36] cats.effect.unsafe.WorkerThread.blockOn
  [37] scala.concurrent.package$.blocking
  [38] cats.effect.IOFiber.runLoop
  [39] cats.effect.IOFiber.execR
  [40] cats.effect.IOFiber.run
  [41] cats.effect.unsafe.WorkerThread.run

--- 662705296 ns (0.06%), 66 samples
  [ 0] try_charge_memcg_[k]
  [ 1] obj_cgroup_charge_[k]
  [ 2] __kmalloc_[k]
  [ 3] inotify_handle_inode_event_[k]
  [ 4] fsnotify_handle_inode_event.isra.0_[k]
  [ 5] send_to_group_[k]
  [ 6] fsnotify_[k]
  [ 7] __fsnotify_parent_[k]
  [ 8] vfs_write_[k]
  [ 9] ksys_write_[k]
  [10] __x64_sys_write_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] write
  [14] sun.nio.ch.FileDispatcherImpl.write0
  [15] sun.nio.ch.FileDispatcherImpl.write
  [16] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.FileChannelImpl.write
  [20] java.nio.channels.Channels.writeFullyImpl
  [21] java.nio.channels.Channels.writeFully
  [22] java.nio.channels.Channels$1.write
  [23] java.io.InputStream.transferTo
  [24] java.nio.file.Files.copy
  [25] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [26] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [27] jdk.nio.zipfs.ZipPath.newFileChannel
  [28] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [29] java.nio.channels.FileChannel.open
  [30] java.nio.channels.FileChannel.open
  [31] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [32] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$66.0x0000000800d8bdf0.apply
  [33] cats.effect.IOFiber.$anonfun$8
  [34] cats.effect.IOFiber$$Lambda$629.0x0000000800e9d258.apply
  [35] cats.effect.unsafe.WorkerThread.blockOn
  [36] scala.concurrent.package$.blocking
  [37] cats.effect.IOFiber.runLoop
  [38] cats.effect.IOFiber.execR
  [39] cats.effect.IOFiber.run
  [40] cats.effect.unsafe.WorkerThread.run

--- 661838813 ns (0.06%), 66 samples
  [ 0] inotify_handle_inode_event_[k]
  [ 1] fsnotify_handle_inode_event.isra.0_[k]
  [ 2] send_to_group_[k]
  [ 3] fsnotify_[k]
  [ 4] __fsnotify_parent_[k]
  [ 5] vfs_write_[k]
  [ 6] ksys_write_[k]
  [ 7] __x64_sys_write_[k]
  [ 8] do_syscall_64_[k]
  [ 9] entry_SYSCALL_64_after_hwframe_[k]
  [10] write
  [11] sun.nio.ch.FileDispatcherImpl.write0
  [12] sun.nio.ch.FileDispatcherImpl.write
  [13] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [14] sun.nio.ch.IOUtil.write
  [15] sun.nio.ch.IOUtil.write
  [16] sun.nio.ch.FileChannelImpl.write
  [17] java.nio.channels.Channels.writeFullyImpl
  [18] java.nio.channels.Channels.writeFully
  [19] java.nio.channels.Channels$1.write
  [20] java.io.InputStream.transferTo
  [21] java.nio.file.Files.copy
  [22] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [23] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [24] jdk.nio.zipfs.ZipPath.newFileChannel
  [25] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [26] java.nio.channels.FileChannel.open
  [27] java.nio.channels.FileChannel.open
  [28] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [29] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$66.0x0000000800d8bdf0.apply
  [30] cats.effect.IOFiber.$anonfun$8
  [31] cats.effect.IOFiber$$Lambda$629.0x0000000800e9d258.apply
  [32] cats.effect.unsafe.WorkerThread.blockOn
  [33] scala.concurrent.package$.blocking
  [34] cats.effect.IOFiber.runLoop
  [35] cats.effect.IOFiber.execR
  [36] cats.effect.IOFiber.run
  [37] cats.effect.unsafe.WorkerThread.run

--- 641683627 ns (0.06%), 64 samples
  [ 0] java.nio.HeapByteBuffer.<init>
  [ 1] java.nio.ByteBuffer.allocate
  [ 2] fs2.io.file.FileHandleCompanionPlatform$$anon$1.read$$anonfun$1
  [ 3] fs2.io.file.FileHandleCompanionPlatform$$anon$1$$Lambda$670.0x0000000800ea9ac8.apply
  [ 4] cats.effect.IOFiber.$anonfun$8
  [ 5] cats.effect.IOFiber$$Lambda$629.0x0000000800e9d258.apply
  [ 6] cats.effect.unsafe.WorkerThread.blockOn
  [ 7] scala.concurrent.package$.blocking
  [ 8] cats.effect.IOFiber.runLoop
  [ 9] cats.effect.IOFiber.autoCedeR
  [10] cats.effect.IOFiber.run
  [11] cats.effect.unsafe.WorkerThread.run

--- 633501602 ns (0.06%), 63 samples
  [ 0] kmem_cache_free_[k]
  [ 1] spl_kmem_cache_free?[spl]_[k]
  [ 2] zio_destroy?[zfs]_[k]
  [ 3] zio_wait?[zfs]_[k]
  [ 4] dmu_tx_count_write?[zfs]_[k]
  [ 5] dmu_tx_hold_write_by_dnode?[zfs]_[k]
  [ 6] zfs_write?[zfs]_[k]
  [ 7] zpl_iter_write?[zfs]_[k]
  [ 8] new_sync_write_[k]
  [ 9] vfs_write_[k]
  [10] ksys_write_[k]
  [11] __x64_sys_write_[k]
  [12] do_syscall_64_[k]
  [13] entry_SYSCALL_64_after_hwframe_[k]
  [14] write
  [15] sun.nio.ch.FileDispatcherImpl.write0
  [16] sun.nio.ch.FileDispatcherImpl.write
  [17] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.IOUtil.write
  [20] sun.nio.ch.FileChannelImpl.write
  [21] java.nio.channels.Channels.writeFullyImpl
  [22] java.nio.channels.Channels.writeFully
  [23] java.nio.channels.Channels$1.write
  [24] java.io.InputStream.transferTo
  [25] java.nio.file.Files.copy
  [26] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [27] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [28] jdk.nio.zipfs.ZipPath.newFileChannel
  [29] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [30] java.nio.channels.FileChannel.open
  [31] java.nio.channels.FileChannel.open
  [32] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [33] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$66.0x0000000800d8bdf0.apply
  [34] cats.effect.IOFiber.$anonfun$8
  [35] cats.effect.IOFiber$$Lambda$629.0x0000000800e9d258.apply
  [36] cats.effect.unsafe.WorkerThread.blockOn
  [37] scala.concurrent.package$.blocking
  [38] cats.effect.IOFiber.runLoop
  [39] cats.effect.IOFiber.execR
  [40] cats.effect.IOFiber.run
  [41] cats.effect.unsafe.WorkerThread.run

--- 632591305 ns (0.06%), 63 samples
  [ 0] __kmalloc_node_[k]
  [ 1] spl_kmem_alloc_impl?[spl]_[k]
  [ 2] spl_kmem_zalloc?[spl]_[k]
  [ 3] dsl_dir_tempreserve_impl.constprop.0?[zfs]_[k]
  [ 4] dsl_dir_tempreserve_space?[zfs]_[k]
  [ 5] dmu_tx_try_assign?[zfs]_[k]
  [ 6] dmu_tx_assign?[zfs]_[k]
  [ 7] zfs_write?[zfs]_[k]
  [ 8] zpl_iter_write?[zfs]_[k]
  [ 9] new_sync_write_[k]
  [10] vfs_write_[k]
  [11] ksys_write_[k]
  [12] __x64_sys_write_[k]
  [13] do_syscall_64_[k]
  [14] entry_SYSCALL_64_after_hwframe_[k]
  [15] write
  [16] sun.nio.ch.FileDispatcherImpl.write0
  [17] sun.nio.ch.FileDispatcherImpl.write
  [18] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [19] sun.nio.ch.IOUtil.write
  [20] sun.nio.ch.IOUtil.write
  [21] sun.nio.ch.FileChannelImpl.write
  [22] java.nio.channels.Channels.writeFullyImpl
  [23] java.nio.channels.Channels.writeFully
  [24] java.nio.channels.Channels$1.write
  [25] java.io.InputStream.transferTo
  [26] java.nio.file.Files.copy
  [27] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [28] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [29] jdk.nio.zipfs.ZipPath.newFileChannel
  [30] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [31] java.nio.channels.FileChannel.open
  [32] java.nio.channels.FileChannel.open
  [33] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [34] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$66.0x0000000800d8bdf0.apply
  [35] cats.effect.IOFiber.$anonfun$8
  [36] cats.effect.IOFiber$$Lambda$629.0x0000000800e9d258.apply
  [37] cats.effect.unsafe.WorkerThread.blockOn
  [38] scala.concurrent.package$.blocking
  [39] cats.effect.IOFiber.runLoop
  [40] cats.effect.IOFiber.execR
  [41] cats.effect.IOFiber.run
  [42] cats.effect.unsafe.WorkerThread.run

--- 632152021 ns (0.06%), 63 samples
  [ 0] __fsnotify_parent_[k]
  [ 1] vfs_write_[k]
  [ 2] ksys_write_[k]
  [ 3] __x64_sys_write_[k]
  [ 4] do_syscall_64_[k]
  [ 5] entry_SYSCALL_64_after_hwframe_[k]
  [ 6] write
  [ 7] sun.nio.ch.FileDispatcherImpl.write0
  [ 8] sun.nio.ch.FileDispatcherImpl.write
  [ 9] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [10] sun.nio.ch.IOUtil.write
  [11] sun.nio.ch.IOUtil.write
  [12] sun.nio.ch.FileChannelImpl.write
  [13] java.nio.channels.Channels.writeFullyImpl
  [14] java.nio.channels.Channels.writeFully
  [15] java.nio.channels.Channels$1.write
  [16] java.io.InputStream.transferTo
  [17] java.nio.file.Files.copy
  [18] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [19] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [20] jdk.nio.zipfs.ZipPath.newFileChannel
  [21] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [22] java.nio.channels.FileChannel.open
  [23] java.nio.channels.FileChannel.open
  [24] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [25] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$66.0x0000000800d8bdf0.apply
  [26] cats.effect.IOFiber.$anonfun$8
  [27] cats.effect.IOFiber$$Lambda$629.0x0000000800e9d258.apply
  [28] cats.effect.unsafe.WorkerThread.blockOn
  [29] scala.concurrent.package$.blocking
  [30] cats.effect.IOFiber.runLoop
  [31] cats.effect.IOFiber.execR
  [32] cats.effect.IOFiber.run
  [33] cats.effect.unsafe.WorkerThread.run

--- 632127992 ns (0.06%), 63 samples
  [ 0] __fget_light_[k]
  [ 1] __fdget_pos_[k]
  [ 2] ksys_write_[k]
  [ 3] __x64_sys_write_[k]
  [ 4] do_syscall_64_[k]
  [ 5] entry_SYSCALL_64_after_hwframe_[k]
  [ 6] write
  [ 7] sun.nio.ch.FileDispatcherImpl.write0
  [ 8] sun.nio.ch.FileDispatcherImpl.write
  [ 9] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [10] sun.nio.ch.IOUtil.write
  [11] sun.nio.ch.IOUtil.write
  [12] sun.nio.ch.FileChannelImpl.write
  [13] java.nio.channels.Channels.writeFullyImpl
  [14] java.nio.channels.Channels.writeFully
  [15] java.nio.channels.Channels$1.write
  [16] java.io.InputStream.transferTo
  [17] java.nio.file.Files.copy
  [18] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [19] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [20] jdk.nio.zipfs.ZipPath.newFileChannel
  [21] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [22] java.nio.channels.FileChannel.open
  [23] java.nio.channels.FileChannel.open
  [24] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [25] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$66.0x0000000800d8bdf0.apply
  [26] cats.effect.IOFiber.$anonfun$8
  [27] cats.effect.IOFiber$$Lambda$629.0x0000000800e9d258.apply
  [28] cats.effect.unsafe.WorkerThread.blockOn
  [29] scala.concurrent.package$.blocking
  [30] cats.effect.IOFiber.runLoop
  [31] cats.effect.IOFiber.execR
  [32] cats.effect.IOFiber.run
  [33] cats.effect.unsafe.WorkerThread.run

--- 631282230 ns (0.06%), 63 samples
  [ 0] void G1RebuildRemSetClosure::do_oop_work<narrowOop>(narrowOop*)
  [ 1] G1RebuildRemSetTask::G1RebuildRemSetHeapRegionClosure::do_heap_region(HeapRegion*)
  [ 2] HeapRegionManager::par_iterate(HeapRegionClosure*, HeapRegionClaimer*, unsigned int) const
  [ 3] G1RebuildRemSetTask::work(unsigned int)
  [ 4] GangWorker::loop()
  [ 5] GangWorker::run()
  [ 6] Thread::call_run()
  [ 7] thread_native_entry(Thread*)
  [ 8] start_thread

--- 622314269 ns (0.06%), 62 samples
  [ 0] __rcu_read_lock_[k]
  [ 1] __kmalloc_[k]
  [ 2] inotify_handle_inode_event_[k]
  [ 3] fsnotify_handle_inode_event.isra.0_[k]
  [ 4] send_to_group_[k]
  [ 5] fsnotify_[k]
  [ 6] __fsnotify_parent_[k]
  [ 7] vfs_write_[k]
  [ 8] ksys_write_[k]
  [ 9] __x64_sys_write_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] write
  [13] sun.nio.ch.FileDispatcherImpl.write0
  [14] sun.nio.ch.FileDispatcherImpl.write
  [15] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [16] sun.nio.ch.IOUtil.write
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.FileChannelImpl.write
  [19] java.nio.channels.Channels.writeFullyImpl
  [20] java.nio.channels.Channels.writeFully
  [21] java.nio.channels.Channels$1.write
  [22] java.io.InputStream.transferTo
  [23] java.nio.file.Files.copy
  [24] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [25] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [26] jdk.nio.zipfs.ZipPath.newFileChannel
  [27] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [28] java.nio.channels.FileChannel.open
  [29] java.nio.channels.FileChannel.open
  [30] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [31] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$66.0x0000000800d8bdf0.apply
  [32] cats.effect.IOFiber.$anonfun$8
  [33] cats.effect.IOFiber$$Lambda$629.0x0000000800e9d258.apply
  [34] cats.effect.unsafe.WorkerThread.blockOn
  [35] scala.concurrent.package$.blocking
  [36] cats.effect.IOFiber.runLoop
  [37] cats.effect.IOFiber.execR
  [38] cats.effect.IOFiber.run
  [39] cats.effect.unsafe.WorkerThread.run

--- 620094321 ns (0.06%), 62 samples
  [ 0] nmethod::oops_do(OopClosure*, bool)
  [ 1] ClosureIsUnloadingBehaviour::is_unloading(CompiledMethod*) const
  [ 2] nmethod::do_unloading(bool)
  [ 3] CodeCacheUnloadingTask::work(unsigned int)
  [ 4] G1ParallelCleaningTask::work(unsigned int)
  [ 5] GangWorker::loop()
  [ 6] GangWorker::run()
  [ 7] Thread::call_run()
  [ 8] thread_native_entry(Thread*)
  [ 9] start_thread

--- 611383216 ns (0.06%), 61 samples
  [ 0] __get_obj_cgroup_from_memcg_[k]
  [ 1] get_obj_cgroup_from_current_[k]
  [ 2] __kmalloc_[k]
  [ 3] inotify_handle_inode_event_[k]
  [ 4] fsnotify_handle_inode_event.isra.0_[k]
  [ 5] send_to_group_[k]
  [ 6] fsnotify_[k]
  [ 7] __fsnotify_parent_[k]
  [ 8] vfs_write_[k]
  [ 9] ksys_write_[k]
  [10] __x64_sys_write_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] write
  [14] sun.nio.ch.FileDispatcherImpl.write0
  [15] sun.nio.ch.FileDispatcherImpl.write
  [16] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.FileChannelImpl.write
  [20] java.nio.channels.Channels.writeFullyImpl
  [21] java.nio.channels.Channels.writeFully
  [22] java.nio.channels.Channels$1.write
  [23] java.io.InputStream.transferTo
  [24] java.nio.file.Files.copy
  [25] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [26] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [27] jdk.nio.zipfs.ZipPath.newFileChannel
  [28] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [29] java.nio.channels.FileChannel.open
  [30] java.nio.channels.FileChannel.open
  [31] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [32] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$66.0x0000000800d8bdf0.apply
  [33] cats.effect.IOFiber.$anonfun$8
  [34] cats.effect.IOFiber$$Lambda$629.0x0000000800e9d258.apply
  [35] cats.effect.unsafe.WorkerThread.blockOn
  [36] scala.concurrent.package$.blocking
  [37] cats.effect.IOFiber.runLoop
  [38] cats.effect.IOFiber.execR
  [39] cats.effect.IOFiber.run
  [40] cats.effect.unsafe.WorkerThread.run

--- 610948009 ns (0.06%), 61 samples
  [ 0] void G1CMTask::process_grey_task_entry<true>(G1TaskQueueEntry)
  [ 1] G1CMTask::do_marking_step(double, bool, bool)
  [ 2] G1CMConcurrentMarkingTask::work(unsigned int)
  [ 3] GangWorker::loop()
  [ 4] GangWorker::run()
  [ 5] Thread::call_run()
  [ 6] thread_native_entry(Thread*)
  [ 7] start_thread

--- 602424152 ns (0.06%), 60 samples
  [ 0] zio_create?[zfs]_[k]
  [ 1] zio_null?[zfs]_[k]
  [ 2] zio_root?[zfs]_[k]
  [ 3] dmu_tx_count_write?[zfs]_[k]
  [ 4] dmu_tx_hold_write_by_dnode?[zfs]_[k]
  [ 5] zfs_write?[zfs]_[k]
  [ 6] zpl_iter_write?[zfs]_[k]
  [ 7] new_sync_write_[k]
  [ 8] vfs_write_[k]
  [ 9] ksys_write_[k]
  [10] __x64_sys_write_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] write
  [14] sun.nio.ch.FileDispatcherImpl.write0
  [15] sun.nio.ch.FileDispatcherImpl.write
  [16] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.FileChannelImpl.write
  [20] java.nio.channels.Channels.writeFullyImpl
  [21] java.nio.channels.Channels.writeFully
  [22] java.nio.channels.Channels$1.write
  [23] java.io.InputStream.transferTo
  [24] java.nio.file.Files.copy
  [25] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [26] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [27] jdk.nio.zipfs.ZipPath.newFileChannel
  [28] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [29] java.nio.channels.FileChannel.open
  [30] java.nio.channels.FileChannel.open
  [31] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [32] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$66.0x0000000800d8bdf0.apply
  [33] cats.effect.IOFiber.$anonfun$8
  [34] cats.effect.IOFiber$$Lambda$629.0x0000000800e9d258.apply
  [35] cats.effect.unsafe.WorkerThread.blockOn
  [36] scala.concurrent.package$.blocking
  [37] cats.effect.IOFiber.runLoop
  [38] cats.effect.IOFiber.execR
  [39] cats.effect.IOFiber.run
  [40] cats.effect.unsafe.WorkerThread.run

--- 591763218 ns (0.06%), 59 samples
  [ 0] memset_[k]
  [ 1] spl_kmem_cache_alloc?[spl]_[k]
  [ 2] zio_create?[zfs]_[k]
  [ 3] zio_null?[zfs]_[k]
  [ 4] zio_root?[zfs]_[k]
  [ 5] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 6] dmu_read_uio_dnode?[zfs]_[k]
  [ 7] dmu_read_uio_dbuf?[zfs]_[k]
  [ 8] mappedread?[zfs]_[k]
  [ 9] zfs_read?[zfs]_[k]
  [10] zpl_iter_read?[zfs]_[k]
  [11] new_sync_read_[k]
  [12] vfs_read_[k]
  [13] __x64_sys_pread64_[k]
  [14] do_syscall_64_[k]
  [15] entry_SYSCALL_64_after_hwframe_[k]
  [16] __libc_pread64
  [17] sun.nio.ch.FileDispatcherImpl.pread0
  [18] sun.nio.ch.FileDispatcherImpl.pread
  [19] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [20] sun.nio.ch.IOUtil.read
  [21] sun.nio.ch.IOUtil.read
  [22] sun.nio.ch.FileChannelImpl.readInternal
  [23] sun.nio.ch.FileChannelImpl.read
  [24] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [25] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [26] jdk.nio.zipfs.ZipFileSystem$2.fill
  [27] java.util.zip.InflaterInputStream.read
  [28] java.io.InputStream.transferTo
  [29] java.nio.file.Files.copy
  [30] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [31] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [32] jdk.nio.zipfs.ZipPath.newFileChannel
  [33] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [34] java.nio.channels.FileChannel.open
  [35] java.nio.channels.FileChannel.open
  [36] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [37] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$66.0x0000000800d8bdf0.apply
  [38] cats.effect.IOFiber.$anonfun$8
  [39] cats.effect.IOFiber$$Lambda$629.0x0000000800e9d258.apply
  [40] cats.effect.unsafe.WorkerThread.blockOn
  [41] scala.concurrent.package$.blocking
  [42] cats.effect.IOFiber.runLoop
  [43] cats.effect.IOFiber.execR
  [44] cats.effect.IOFiber.run
  [45] cats.effect.unsafe.WorkerThread.run

--- 572444624 ns (0.06%), 57 samples
  [ 0] mutex_lock_[k]
  [ 1] dsl_dir_tempreserve_clear?[zfs]_[k]
  [ 2] dmu_tx_commit?[zfs]_[k]
  [ 3] zfs_write?[zfs]_[k]
  [ 4] zpl_iter_write?[zfs]_[k]
  [ 5] new_sync_write_[k]
  [ 6] vfs_write_[k]
  [ 7] ksys_write_[k]
  [ 8] __x64_sys_write_[k]
  [ 9] do_syscall_64_[k]
  [10] entry_SYSCALL_64_after_hwframe_[k]
  [11] write
  [12] sun.nio.ch.FileDispatcherImpl.write0
  [13] sun.nio.ch.FileDispatcherImpl.write
  [14] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [15] sun.nio.ch.IOUtil.write
  [16] sun.nio.ch.IOUtil.write
  [17] sun.nio.ch.FileChannelImpl.write
  [18] java.nio.channels.Channels.writeFullyImpl
  [19] java.nio.channels.Channels.writeFully
  [20] java.nio.channels.Channels$1.write
  [21] java.io.InputStream.transferTo
  [22] java.nio.file.Files.copy
  [23] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [24] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [25] jdk.nio.zipfs.ZipPath.newFileChannel
  [26] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [27] java.nio.channels.FileChannel.open
  [28] java.nio.channels.FileChannel.open
  [29] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [30] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$66.0x0000000800d8bdf0.apply
  [31] cats.effect.IOFiber.$anonfun$8
  [32] cats.effect.IOFiber$$Lambda$629.0x0000000800e9d258.apply
  [33] cats.effect.unsafe.WorkerThread.blockOn
  [34] scala.concurrent.package$.blocking
  [35] cats.effect.IOFiber.runLoop
  [36] cats.effect.IOFiber.execR
  [37] cats.effect.IOFiber.run
  [38] cats.effect.unsafe.WorkerThread.run

--- 572242146 ns (0.06%), 57 samples
  [ 0] zio_wait?[zfs]_[k]
  [ 1] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 2] dmu_read_uio_dnode?[zfs]_[k]
  [ 3] dmu_read_uio_dbuf?[zfs]_[k]
  [ 4] mappedread?[zfs]_[k]
  [ 5] zfs_read?[zfs]_[k]
  [ 6] zpl_iter_read?[zfs]_[k]
  [ 7] new_sync_read_[k]
  [ 8] vfs_read_[k]
  [ 9] __x64_sys_pread64_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] __libc_pread64
  [13] sun.nio.ch.FileDispatcherImpl.pread0
  [14] sun.nio.ch.FileDispatcherImpl.pread
  [15] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [16] sun.nio.ch.IOUtil.read
  [17] sun.nio.ch.IOUtil.read
  [18] sun.nio.ch.FileChannelImpl.readInternal
  [19] sun.nio.ch.FileChannelImpl.read
  [20] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [21] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [22] jdk.nio.zipfs.ZipFileSystem$2.fill
  [23] java.util.zip.InflaterInputStream.read
  [24] java.io.InputStream.transferTo
  [25] java.nio.file.Files.copy
  [26] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [27] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [28] jdk.nio.zipfs.ZipPath.newFileChannel
  [29] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [30] java.nio.channels.FileChannel.open
  [31] java.nio.channels.FileChannel.open
  [32] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [33] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$66.0x0000000800d8bdf0.apply
  [34] cats.effect.IOFiber.$anonfun$8
  [35] cats.effect.IOFiber$$Lambda$629.0x0000000800e9d258.apply
  [36] cats.effect.unsafe.WorkerThread.blockOn
  [37] scala.concurrent.package$.blocking
  [38] cats.effect.IOFiber.runLoop
  [39] cats.effect.IOFiber.execR
  [40] cats.effect.IOFiber.run
  [41] cats.effect.unsafe.WorkerThread.run

--- 572210253 ns (0.06%), 57 samples
  [ 0] zio_done?[zfs]_[k]
  [ 1] zio_wait?[zfs]_[k]
  [ 2] dmu_tx_count_write?[zfs]_[k]
  [ 3] dmu_tx_hold_write_by_dnode?[zfs]_[k]
  [ 4] zfs_write?[zfs]_[k]
  [ 5] zpl_iter_write?[zfs]_[k]
  [ 6] new_sync_write_[k]
  [ 7] vfs_write_[k]
  [ 8] ksys_write_[k]
  [ 9] __x64_sys_write_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] write
  [13] sun.nio.ch.FileDispatcherImpl.write0
  [14] sun.nio.ch.FileDispatcherImpl.write
  [15] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [16] sun.nio.ch.IOUtil.write
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.FileChannelImpl.write
  [19] java.nio.channels.Channels.writeFullyImpl
  [20] java.nio.channels.Channels.writeFully
  [21] java.nio.channels.Channels$1.write
  [22] java.io.InputStream.transferTo
  [23] java.nio.file.Files.copy
  [24] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [25] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [26] jdk.nio.zipfs.ZipPath.newFileChannel
  [27] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [28] java.nio.channels.FileChannel.open
  [29] java.nio.channels.FileChannel.open
  [30] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [31] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$66.0x0000000800d8bdf0.apply
  [32] cats.effect.IOFiber.$anonfun$8
  [33] cats.effect.IOFiber$$Lambda$629.0x0000000800e9d258.apply
  [34] cats.effect.unsafe.WorkerThread.blockOn
  [35] scala.concurrent.package$.blocking
  [36] cats.effect.IOFiber.runLoop
  [37] cats.effect.IOFiber.execR
  [38] cats.effect.IOFiber.run
  [39] cats.effect.unsafe.WorkerThread.run

--- 571860150 ns (0.06%), 57 samples
  [ 0] memmove_[k]
  [ 1] dnode_set_blksz?[zfs]_[k]
  [ 2] dmu_object_set_blocksize?[zfs]_[k]
  [ 3] zfs_grow_blocksize?[zfs]_[k]
  [ 4] zfs_write?[zfs]_[k]
  [ 5] zpl_iter_write?[zfs]_[k]
  [ 6] new_sync_write_[k]
  [ 7] vfs_write_[k]
  [ 8] ksys_write_[k]
  [ 9] __x64_sys_write_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] write
  [13] sun.nio.ch.FileDispatcherImpl.write0
  [14] sun.nio.ch.FileDispatcherImpl.write
  [15] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [16] sun.nio.ch.IOUtil.write
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.FileChannelImpl.write
  [19] java.nio.channels.Channels.writeFullyImpl
  [20] java.nio.channels.Channels.writeFully
  [21] java.nio.channels.Channels$1.write
  [22] java.io.InputStream.transferTo
  [23] java.nio.file.Files.copy
  [24] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [25] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [26] jdk.nio.zipfs.ZipPath.newFileChannel
  [27] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [28] java.nio.channels.FileChannel.open
  [29] java.nio.channels.FileChannel.open
  [30] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [31] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$66.0x0000000800d8bdf0.apply
  [32] cats.effect.IOFiber.$anonfun$8
  [33] cats.effect.IOFiber$$Lambda$629.0x0000000800e9d258.apply
  [34] cats.effect.unsafe.WorkerThread.blockOn
  [35] scala.concurrent.package$.blocking
  [36] cats.effect.IOFiber.runLoop
  [37] cats.effect.IOFiber.execR
  [38] cats.effect.IOFiber.run
  [39] cats.effect.unsafe.WorkerThread.run

--- 571544167 ns (0.06%), 57 samples
  [ 0] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 1] dmu_write_uio_dnode?[zfs]_[k]
  [ 2] dmu_write_uio_dbuf?[zfs]_[k]
  [ 3] zfs_write?[zfs]_[k]
  [ 4] zpl_iter_write?[zfs]_[k]
  [ 5] new_sync_write_[k]
  [ 6] vfs_write_[k]
  [ 7] ksys_write_[k]
  [ 8] __x64_sys_write_[k]
  [ 9] do_syscall_64_[k]
  [10] entry_SYSCALL_64_after_hwframe_[k]
  [11] write
  [12] sun.nio.ch.FileDispatcherImpl.write0
  [13] sun.nio.ch.FileDispatcherImpl.write
  [14] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [15] sun.nio.ch.IOUtil.write
  [16] sun.nio.ch.IOUtil.write
  [17] sun.nio.ch.FileChannelImpl.write
  [18] java.nio.channels.Channels.writeFullyImpl
  [19] java.nio.channels.Channels.writeFully
  [20] java.nio.channels.Channels$1.write
  [21] java.io.InputStream.transferTo
  [22] java.nio.file.Files.copy
  [23] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [24] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [25] jdk.nio.zipfs.ZipPath.newFileChannel
  [26] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [27] java.nio.channels.FileChannel.open
  [28] java.nio.channels.FileChannel.open
  [29] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [30] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$66.0x0000000800d8bdf0.apply
  [31] cats.effect.IOFiber.$anonfun$8
  [32] cats.effect.IOFiber$$Lambda$629.0x0000000800e9d258.apply
  [33] cats.effect.unsafe.WorkerThread.blockOn
  [34] scala.concurrent.package$.blocking
  [35] cats.effect.IOFiber.runLoop
  [36] cats.effect.IOFiber.execR
  [37] cats.effect.IOFiber.run
  [38] cats.effect.unsafe.WorkerThread.run

--- 571508989 ns (0.06%), 57 samples
  [ 0] void OopOopIterateDispatch<G1CMOopClosure>::Table::oop_oop_iterate<ObjArrayKlass, narrowOop>(G1CMOopClosure*, oopDesc*, Klass*)
  [ 1] void G1CMTask::process_grey_task_entry<true>(G1TaskQueueEntry)
  [ 2] G1CMTask::drain_local_queue(bool) [clone .part.0] [clone .constprop.1]
  [ 3] G1CMTask::do_marking_step(double, bool, bool)
  [ 4] G1CMConcurrentMarkingTask::work(unsigned int)
  [ 5] GangWorker::loop()
  [ 6] GangWorker::run()
  [ 7] Thread::call_run()
  [ 8] thread_native_entry(Thread*)
  [ 9] start_thread

--- 571462158 ns (0.06%), 57 samples
  [ 0] jbyte_disjoint_arraycopy
  [ 1] jdk.internal.misc.Unsafe.copyMemory0
  [ 2] jdk.internal.misc.Unsafe.copyMemory
  [ 3] jdk.internal.misc.ScopedMemoryAccess.copyMemoryInternal
  [ 4] jdk.internal.misc.ScopedMemoryAccess.copyMemory
  [ 5] java.nio.ByteBuffer.putBuffer
  [ 6] java.nio.ByteBuffer.put
  [ 7] sun.nio.ch.IOUtil.write
  [ 8] sun.nio.ch.IOUtil.write
  [ 9] sun.nio.ch.FileChannelImpl.write
  [10] java.nio.channels.Channels.writeFullyImpl
  [11] java.nio.channels.Channels.writeFully
  [12] java.nio.channels.Channels$1.write
  [13] java.io.InputStream.transferTo
  [14] java.nio.file.Files.copy
  [15] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [16] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [17] jdk.nio.zipfs.ZipPath.newFileChannel
  [18] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [19] java.nio.channels.FileChannel.open
  [20] java.nio.channels.FileChannel.open
  [21] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [22] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$66.0x0000000800d8bdf0.apply
  [23] cats.effect.IOFiber.$anonfun$8
  [24] cats.effect.IOFiber$$Lambda$629.0x0000000800e9d258.apply
  [25] cats.effect.unsafe.WorkerThread.blockOn
  [26] scala.concurrent.package$.blocking
  [27] cats.effect.IOFiber.runLoop
  [28] cats.effect.IOFiber.execR
  [29] cats.effect.IOFiber.run
  [30] cats.effect.unsafe.WorkerThread.run

--- 571204129 ns (0.06%), 57 samples
  [ 0] dsl_dir_tempreserve_impl.constprop.0?[zfs]_[k]
  [ 1] dsl_dir_tempreserve_space?[zfs]_[k]
  [ 2] dmu_tx_try_assign?[zfs]_[k]
  [ 3] dmu_tx_assign?[zfs]_[k]
  [ 4] zfs_write?[zfs]_[k]
  [ 5] zpl_iter_write?[zfs]_[k]
  [ 6] new_sync_write_[k]
  [ 7] vfs_write_[k]
  [ 8] ksys_write_[k]
  [ 9] __x64_sys_write_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] write
  [13] sun.nio.ch.FileDispatcherImpl.write0
  [14] sun.nio.ch.FileDispatcherImpl.write
  [15] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [16] sun.nio.ch.IOUtil.write
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.FileChannelImpl.write
  [19] java.nio.channels.Channels.writeFullyImpl
  [20] java.nio.channels.Channels.writeFully
  [21] java.nio.channels.Channels$1.write
  [22] java.io.InputStream.transferTo
  [23] java.nio.file.Files.copy
  [24] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [25] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [26] jdk.nio.zipfs.ZipPath.newFileChannel
  [27] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [28] java.nio.channels.FileChannel.open
  [29] java.nio.channels.FileChannel.open
  [30] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [31] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$66.0x0000000800d8bdf0.apply
  [32] cats.effect.IOFiber.$anonfun$8
  [33] cats.effect.IOFiber$$Lambda$629.0x0000000800e9d258.apply
  [34] cats.effect.unsafe.WorkerThread.blockOn
  [35] scala.concurrent.package$.blocking
  [36] cats.effect.IOFiber.runLoop
  [37] cats.effect.IOFiber.execR
  [38] cats.effect.IOFiber.run
  [39] cats.effect.unsafe.WorkerThread.run

--- 561296993 ns (0.05%), 56 samples
  [ 0] vfs_write_[k]
  [ 1] ksys_write_[k]
  [ 2] __x64_sys_write_[k]
  [ 3] do_syscall_64_[k]
  [ 4] entry_SYSCALL_64_after_hwframe_[k]
  [ 5] write
  [ 6] sun.nio.ch.FileDispatcherImpl.write0
  [ 7] sun.nio.ch.FileDispatcherImpl.write
  [ 8] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [ 9] sun.nio.ch.IOUtil.write
  [10] sun.nio.ch.IOUtil.write
  [11] sun.nio.ch.FileChannelImpl.write
  [12] java.nio.channels.Channels.writeFullyImpl
  [13] java.nio.channels.Channels.writeFully
  [14] java.nio.channels.Channels$1.write
  [15] java.io.InputStream.transferTo
  [16] java.nio.file.Files.copy
  [17] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [18] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [19] jdk.nio.zipfs.ZipPath.newFileChannel
  [20] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [21] java.nio.channels.FileChannel.open
  [22] java.nio.channels.FileChannel.open
  [23] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [24] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$66.0x0000000800d8bdf0.apply
  [25] cats.effect.IOFiber.$anonfun$8
  [26] cats.effect.IOFiber$$Lambda$629.0x0000000800e9d258.apply
  [27] cats.effect.unsafe.WorkerThread.blockOn
  [28] scala.concurrent.package$.blocking
  [29] cats.effect.IOFiber.runLoop
  [30] cats.effect.IOFiber.execR
  [31] cats.effect.IOFiber.run
  [32] cats.effect.unsafe.WorkerThread.run

--- 553000407 ns (0.05%), 55 samples
  [ 0] dmu_tx_hold_sa?[zfs]_[k]
  [ 1] zfs_write?[zfs]_[k]
  [ 2] zpl_iter_write?[zfs]_[k]
  [ 3] new_sync_write_[k]
  [ 4] vfs_write_[k]
  [ 5] ksys_write_[k]
  [ 6] __x64_sys_write_[k]
  [ 7] do_syscall_64_[k]
  [ 8] entry_SYSCALL_64_after_hwframe_[k]
  [ 9] write
  [10] sun.nio.ch.FileDispatcherImpl.write0
  [11] sun.nio.ch.FileDispatcherImpl.write
  [12] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [13] sun.nio.ch.IOUtil.write
  [14] sun.nio.ch.IOUtil.write
  [15] sun.nio.ch.FileChannelImpl.write
  [16] java.nio.channels.Channels.writeFullyImpl
  [17] java.nio.channels.Channels.writeFully
  [18] java.nio.channels.Channels$1.write
  [19] java.io.InputStream.transferTo
  [20] java.nio.file.Files.copy
  [21] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [22] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [23] jdk.nio.zipfs.ZipPath.newFileChannel
  [24] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [25] java.nio.channels.FileChannel.open
  [26] java.nio.channels.FileChannel.open
  [27] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [28] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$66.0x0000000800d8bdf0.apply
  [29] cats.effect.IOFiber.$anonfun$8
  [30] cats.effect.IOFiber$$Lambda$629.0x0000000800e9d258.apply
  [31] cats.effect.unsafe.WorkerThread.blockOn
  [32] scala.concurrent.package$.blocking
  [33] cats.effect.IOFiber.runLoop
  [34] cats.effect.IOFiber.execR
  [35] cats.effect.IOFiber.run
  [36] cats.effect.unsafe.WorkerThread.run

--- 532715138 ns (0.05%), 53 samples
  [ 0] kfree_[k]
  [ 1] spl_kmem_free_impl?[spl]_[k]
  [ 2] spl_kmem_free?[spl]_[k]
  [ 3] dmu_buf_rele_array?[zfs]_[k]
  [ 4] dmu_write_uio_dnode?[zfs]_[k]
  [ 5] dmu_write_uio_dbuf?[zfs]_[k]
  [ 6] zfs_write?[zfs]_[k]
  [ 7] zpl_iter_write?[zfs]_[k]
  [ 8] new_sync_write_[k]
  [ 9] vfs_write_[k]
  [10] ksys_write_[k]
  [11] __x64_sys_write_[k]
  [12] do_syscall_64_[k]
  [13] entry_SYSCALL_64_after_hwframe_[k]
  [14] write
  [15] sun.nio.ch.FileDispatcherImpl.write0
  [16] sun.nio.ch.FileDispatcherImpl.write
  [17] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.IOUtil.write
  [20] sun.nio.ch.FileChannelImpl.write
  [21] java.nio.channels.Channels.writeFullyImpl
  [22] java.nio.channels.Channels.writeFully
  [23] java.nio.channels.Channels$1.write
  [24] java.io.InputStream.transferTo
  [25] java.nio.file.Files.copy
  [26] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [27] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [28] jdk.nio.zipfs.ZipPath.newFileChannel
  [29] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [30] java.nio.channels.FileChannel.open
  [31] java.nio.channels.FileChannel.open
  [32] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [33] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$66.0x0000000800d8bdf0.apply
  [34] cats.effect.IOFiber.$anonfun$8
  [35] cats.effect.IOFiber$$Lambda$629.0x0000000800e9d258.apply
  [36] cats.effect.unsafe.WorkerThread.blockOn
  [37] scala.concurrent.package$.blocking
  [38] cats.effect.IOFiber.runLoop
  [39] cats.effect.IOFiber.execR
  [40] cats.effect.IOFiber.run
  [41] cats.effect.unsafe.WorkerThread.run

--- 531516940 ns (0.05%), 53 samples
  [ 0] get_obj_cgroup_from_current_[k]
  [ 1] __kmalloc_[k]
  [ 2] inotify_handle_inode_event_[k]
  [ 3] fsnotify_handle_inode_event.isra.0_[k]
  [ 4] send_to_group_[k]
  [ 5] fsnotify_[k]
  [ 6] __fsnotify_parent_[k]
  [ 7] vfs_write_[k]
  [ 8] ksys_write_[k]
  [ 9] __x64_sys_write_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] write
  [13] sun.nio.ch.FileDispatcherImpl.write0
  [14] sun.nio.ch.FileDispatcherImpl.write
  [15] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [16] sun.nio.ch.IOUtil.write
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.FileChannelImpl.write
  [19] java.nio.channels.Channels.writeFullyImpl
  [20] java.nio.channels.Channels.writeFully
  [21] java.nio.channels.Channels$1.write
  [22] java.io.InputStream.transferTo
  [23] java.nio.file.Files.copy
  [24] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [25] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [26] jdk.nio.zipfs.ZipPath.newFileChannel
  [27] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [28] java.nio.channels.FileChannel.open
  [29] java.nio.channels.FileChannel.open
  [30] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [31] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$66.0x0000000800d8bdf0.apply
  [32] cats.effect.IOFiber.$anonfun$8
  [33] cats.effect.IOFiber$$Lambda$629.0x0000000800e9d258.apply
  [34] cats.effect.unsafe.WorkerThread.blockOn
  [35] scala.concurrent.package$.blocking
  [36] cats.effect.IOFiber.runLoop
  [37] cats.effect.IOFiber.execR
  [38] cats.effect.IOFiber.run
  [39] cats.effect.unsafe.WorkerThread.run

--- 531263687 ns (0.05%), 53 samples
  [ 0] clear_page_rep_[k]
  [ 1] get_page_from_freelist_[k]
  [ 2] __alloc_pages_[k]
  [ 3] __folio_alloc_[k]
  [ 4] vma_alloc_folio_[k]
  [ 5] do_anonymous_page_[k]
  [ 6] handle_pte_fault_[k]
  [ 7] __handle_mm_fault_[k]
  [ 8] handle_mm_fault_[k]
  [ 9] do_user_addr_fault_[k]
  [10] exc_page_fault_[k]
  [11] asm_exc_page_fault_[k]
  [12] java.nio.HeapByteBuffer.<init>
  [13] java.nio.ByteBuffer.allocate
  [14] fs2.io.file.FileHandleCompanionPlatform$$anon$1.read$$anonfun$1
  [15] fs2.io.file.FileHandleCompanionPlatform$$anon$1$$Lambda$670.0x0000000800ea9ac8.apply
  [16] cats.effect.IOFiber.$anonfun$8
  [17] cats.effect.IOFiber$$Lambda$629.0x0000000800e9d258.apply
  [18] cats.effect.unsafe.WorkerThread.blockOn
  [19] scala.concurrent.package$.blocking
  [20] cats.effect.IOFiber.runLoop
  [21] cats.effect.IOFiber.autoCedeR
  [22] cats.effect.IOFiber.run
  [23] cats.effect.unsafe.WorkerThread.run

--- 531105455 ns (0.05%), 53 samples
  [ 0] __kmalloc_[k]
  [ 1] inotify_handle_inode_event_[k]
  [ 2] fsnotify_handle_inode_event.isra.0_[k]
  [ 3] send_to_group_[k]
  [ 4] fsnotify_[k]
  [ 5] __fsnotify_parent_[k]
  [ 6] vfs_write_[k]
  [ 7] ksys_write_[k]
  [ 8] __x64_sys_write_[k]
  [ 9] do_syscall_64_[k]
  [10] entry_SYSCALL_64_after_hwframe_[k]
  [11] write
  [12] sun.nio.ch.FileDispatcherImpl.write0
  [13] sun.nio.ch.FileDispatcherImpl.write
  [14] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [15] sun.nio.ch.IOUtil.write
  [16] sun.nio.ch.IOUtil.write
  [17] sun.nio.ch.FileChannelImpl.write
  [18] java.nio.channels.Channels.writeFullyImpl
  [19] java.nio.channels.Channels.writeFully
  [20] java.nio.channels.Channels$1.write
  [21] java.io.InputStream.transferTo
  [22] java.nio.file.Files.copy
  [23] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [24] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [25] jdk.nio.zipfs.ZipPath.newFileChannel
  [26] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [27] java.nio.channels.FileChannel.open
  [28] java.nio.channels.FileChannel.open
  [29] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [30] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$66.0x0000000800d8bdf0.apply
  [31] cats.effect.IOFiber.$anonfun$8
  [32] cats.effect.IOFiber$$Lambda$629.0x0000000800e9d258.apply
  [33] cats.effect.unsafe.WorkerThread.blockOn
  [34] scala.concurrent.package$.blocking
  [35] cats.effect.IOFiber.runLoop
  [36] cats.effect.IOFiber.execR
  [37] cats.effect.IOFiber.run
  [38] cats.effect.unsafe.WorkerThread.run

--- 522503969 ns (0.05%), 52 samples
  [ 0] _raw_spin_unlock_irqrestore_[k]
  [ 1] try_to_wake_up_[k]
  [ 2] wake_up_q_[k]
  [ 3] futex_wake_[k]
  [ 4] do_futex_[k]
  [ 5] __x64_sys_futex_[k]
  [ 6] do_syscall_64_[k]
  [ 7] entry_SYSCALL_64_after_hwframe_[k]
  [ 8] pthread_cond_signal@@GLIBC_2.3.2
  [ 9] jdk.internal.misc.Unsafe.unpark
  [10] java.util.concurrent.locks.LockSupport.unpark
  [11] cats.effect.unsafe.WorkStealingThreadPool.notifyParked
  [12] cats.effect.unsafe.WorkerThread.blockOn
  [13] scala.concurrent.package$.blocking
  [14] cats.effect.IOFiber.runLoop
  [15] cats.effect.IOFiber.autoCedeR
  [16] cats.effect.IOFiber.run
  [17] cats.effect.unsafe.WorkerThread.run

--- 522295436 ns (0.05%), 52 samples
  [ 0] _raw_spin_lock_[k]
  [ 1] inotify_handle_inode_event_[k]
  [ 2] fsnotify_handle_inode_event.isra.0_[k]
  [ 3] send_to_group_[k]
  [ 4] fsnotify_[k]
  [ 5] __fsnotify_parent_[k]
  [ 6] vfs_write_[k]
  [ 7] ksys_write_[k]
  [ 8] __x64_sys_write_[k]
  [ 9] do_syscall_64_[k]
  [10] entry_SYSCALL_64_after_hwframe_[k]
  [11] write
  [12] sun.nio.ch.FileDispatcherImpl.write0
  [13] sun.nio.ch.FileDispatcherImpl.write
  [14] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [15] sun.nio.ch.IOUtil.write
  [16] sun.nio.ch.IOUtil.write
  [17] sun.nio.ch.FileChannelImpl.write
  [18] java.nio.channels.Channels.writeFullyImpl
  [19] java.nio.channels.Channels.writeFully
  [20] java.nio.channels.Channels$1.write
  [21] java.io.InputStream.transferTo
  [22] java.nio.file.Files.copy
  [23] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [24] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [25] jdk.nio.zipfs.ZipPath.newFileChannel
  [26] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [27] java.nio.channels.FileChannel.open
  [28] java.nio.channels.FileChannel.open
  [29] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [30] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$66.0x0000000800d8bdf0.apply
  [31] cats.effect.IOFiber.$anonfun$8
  [32] cats.effect.IOFiber$$Lambda$629.0x0000000800e9d258.apply
  [33] cats.effect.unsafe.WorkerThread.blockOn
  [34] scala.concurrent.package$.blocking
  [35] cats.effect.IOFiber.runLoop
  [36] cats.effect.IOFiber.execR
  [37] cats.effect.IOFiber.run
  [38] cats.effect.unsafe.WorkerThread.run

--- 522194982 ns (0.05%), 52 samples
  [ 0] kmem_cache_alloc_[k]
  [ 1] spl_kmem_cache_alloc?[spl]_[k]
  [ 2] zio_create?[zfs]_[k]
  [ 3] zio_null?[zfs]_[k]
  [ 4] zio_root?[zfs]_[k]
  [ 5] dmu_tx_count_write?[zfs]_[k]
  [ 6] dmu_tx_hold_write_by_dnode?[zfs]_[k]
  [ 7] zfs_write?[zfs]_[k]
  [ 8] zpl_iter_write?[zfs]_[k]
  [ 9] new_sync_write_[k]
  [10] vfs_write_[k]
  [11] ksys_write_[k]
  [12] __x64_sys_write_[k]
  [13] do_syscall_64_[k]
  [14] entry_SYSCALL_64_after_hwframe_[k]
  [15] write
  [16] sun.nio.ch.FileDispatcherImpl.write0
  [17] sun.nio.ch.FileDispatcherImpl.write
  [18] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [19] sun.nio.ch.IOUtil.write
  [20] sun.nio.ch.IOUtil.write
  [21] sun.nio.ch.FileChannelImpl.write
  [22] java.nio.channels.Channels.writeFullyImpl
  [23] java.nio.channels.Channels.writeFully
  [24] java.nio.channels.Channels$1.write
  [25] java.io.InputStream.transferTo
  [26] java.nio.file.Files.copy
  [27] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [28] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [29] jdk.nio.zipfs.ZipPath.newFileChannel
  [30] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [31] java.nio.channels.FileChannel.open
  [32] java.nio.channels.FileChannel.open
  [33] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [34] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$66.0x0000000800d8bdf0.apply
  [35] cats.effect.IOFiber.$anonfun$8
  [36] cats.effect.IOFiber$$Lambda$629.0x0000000800e9d258.apply
  [37] cats.effect.unsafe.WorkerThread.blockOn
  [38] scala.concurrent.package$.blocking
  [39] cats.effect.IOFiber.runLoop
  [40] cats.effect.IOFiber.execR
  [41] cats.effect.IOFiber.run
  [42] cats.effect.unsafe.WorkerThread.run

--- 521972151 ns (0.05%), 52 samples
  [ 0] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 1] dmu_read_uio_dnode?[zfs]_[k]
  [ 2] dmu_read_uio_dbuf?[zfs]_[k]
  [ 3] mappedread?[zfs]_[k]
  [ 4] zfs_read?[zfs]_[k]
  [ 5] zpl_iter_read?[zfs]_[k]
  [ 6] new_sync_read_[k]
  [ 7] vfs_read_[k]
  [ 8] __x64_sys_pread64_[k]
  [ 9] do_syscall_64_[k]
  [10] entry_SYSCALL_64_after_hwframe_[k]
  [11] __libc_pread64
  [12] sun.nio.ch.FileDispatcherImpl.pread0
  [13] sun.nio.ch.FileDispatcherImpl.pread
  [14] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [15] sun.nio.ch.IOUtil.read
  [16] sun.nio.ch.IOUtil.read
  [17] sun.nio.ch.FileChannelImpl.readInternal
  [18] sun.nio.ch.FileChannelImpl.read
  [19] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [20] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [21] jdk.nio.zipfs.ZipFileSystem$2.fill
  [22] java.util.zip.InflaterInputStream.read
  [23] java.io.InputStream.transferTo
  [24] java.nio.file.Files.copy
  [25] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [26] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [27] jdk.nio.zipfs.ZipPath.newFileChannel
  [28] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [29] java.nio.channels.FileChannel.open
  [30] java.nio.channels.FileChannel.open
  [31] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [32] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$66.0x0000000800d8bdf0.apply
  [33] cats.effect.IOFiber.$anonfun$8
  [34] cats.effect.IOFiber$$Lambda$629.0x0000000800e9d258.apply
  [35] cats.effect.unsafe.WorkerThread.blockOn
  [36] scala.concurrent.package$.blocking
  [37] cats.effect.IOFiber.runLoop
  [38] cats.effect.IOFiber.execR
  [39] cats.effect.IOFiber.run
  [40] cats.effect.unsafe.WorkerThread.run

--- 521489867 ns (0.05%), 52 samples
  [ 0] __kmalloc_node_[k]
  [ 1] spl_kmem_alloc_impl?[spl]_[k]
  [ 2] spl_kmem_alloc?[spl]_[k]
  [ 3] dsl_dir_tempreserve_space?[zfs]_[k]
  [ 4] dmu_tx_try_assign?[zfs]_[k]
  [ 5] dmu_tx_assign?[zfs]_[k]
  [ 6] zfs_write?[zfs]_[k]
  [ 7] zpl_iter_write?[zfs]_[k]
  [ 8] new_sync_write_[k]
  [ 9] vfs_write_[k]
  [10] ksys_write_[k]
  [11] __x64_sys_write_[k]
  [12] do_syscall_64_[k]
  [13] entry_SYSCALL_64_after_hwframe_[k]
  [14] write
  [15] sun.nio.ch.FileDispatcherImpl.write0
  [16] sun.nio.ch.FileDispatcherImpl.write
  [17] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.IOUtil.write
  [20] sun.nio.ch.FileChannelImpl.write
  [21] java.nio.channels.Channels.writeFullyImpl
  [22] java.nio.channels.Channels.writeFully
  [23] java.nio.channels.Channels$1.write
  [24] java.io.InputStream.transferTo
  [25] java.nio.file.Files.copy
  [26] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [27] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [28] jdk.nio.zipfs.ZipPath.newFileChannel
  [29] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [30] java.nio.channels.FileChannel.open
  [31] java.nio.channels.FileChannel.open
  [32] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [33] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$66.0x0000000800d8bdf0.apply
  [34] cats.effect.IOFiber.$anonfun$8
  [35] cats.effect.IOFiber$$Lambda$629.0x0000000800e9d258.apply
  [36] cats.effect.unsafe.WorkerThread.blockOn
  [37] scala.concurrent.package$.blocking
  [38] cats.effect.IOFiber.runLoop
  [39] cats.effect.IOFiber.execR
  [40] cats.effect.IOFiber.run
  [41] cats.effect.unsafe.WorkerThread.run

--- 506535134 ns (0.05%), 50 samples
  [ 0] __schedule_[k]
  [ 1] schedule_[k]
  [ 2] exit_to_user_mode_loop_[k]
  [ 3] exit_to_user_mode_prepare_[k]
  [ 4] irqentry_exit_to_user_mode_[k]
  [ 5] irqentry_exit_[k]
  [ 6] sysvec_reschedule_ipi_[k]
  [ 7] asm_sysvec_reschedule_ipi_[k]
  [ 8] /usr/lib/x86_64-linux-gnu/libz.so.1.2.11
  [ 9] [unknown]
  [10] java.util.zip.Inflater.inflateBytesBytes
  [11] java.util.zip.Inflater.inflate
  [12] java.util.zip.InflaterInputStream.read
  [13] java.io.InputStream.transferTo
  [14] java.nio.file.Files.copy
  [15] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [16] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [17] jdk.nio.zipfs.ZipPath.newFileChannel
  [18] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [19] java.nio.channels.FileChannel.open
  [20] java.nio.channels.FileChannel.open
  [21] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [22] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$66.0x0000000800d8bdf0.apply
  [23] cats.effect.IOFiber.$anonfun$8
  [24] cats.effect.IOFiber$$Lambda$629.0x0000000800e9d258.apply
  [25] cats.effect.unsafe.WorkerThread.blockOn
  [26] scala.concurrent.package$.blocking
  [27] cats.effect.IOFiber.runLoop
  [28] cats.effect.IOFiber.execR
  [29] cats.effect.IOFiber.run
  [30] cats.effect.unsafe.WorkerThread.run

--- 502279307 ns (0.05%), 50 samples
  [ 0] find_vmap_area_[k]
  [ 1] check_heap_object_[k]
  [ 2] __check_object_size.part.0_[k]
  [ 3] __check_object_size_[k]
  [ 4] zfs_uiomove_iter?[zfs]_[k]
  [ 5] zfs_uiomove?[zfs]_[k]
  [ 6] dmu_read_uio_dnode?[zfs]_[k]
  [ 7] dmu_read_uio_dbuf?[zfs]_[k]
  [ 8] mappedread?[zfs]_[k]
  [ 9] zfs_read?[zfs]_[k]
  [10] zpl_iter_read?[zfs]_[k]
  [11] new_sync_read_[k]
  [12] vfs_read_[k]
  [13] __x64_sys_pread64_[k]
  [14] do_syscall_64_[k]
  [15] entry_SYSCALL_64_after_hwframe_[k]
  [16] __libc_pread64
  [17] sun.nio.ch.FileDispatcherImpl.pread0
  [18] sun.nio.ch.FileDispatcherImpl.pread
  [19] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [20] sun.nio.ch.IOUtil.read
  [21] sun.nio.ch.IOUtil.read
  [22] sun.nio.ch.FileChannelImpl.readInternal
  [23] sun.nio.ch.FileChannelImpl.read
  [24] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [25] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [26] jdk.nio.zipfs.ZipFileSystem$2.fill
  [27] java.util.zip.InflaterInputStream.read
  [28] java.io.InputStream.transferTo
  [29] java.nio.file.Files.copy
  [30] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [31] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [32] jdk.nio.zipfs.ZipPath.newFileChannel
  [33] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [34] java.nio.channels.FileChannel.open
  [35] java.nio.channels.FileChannel.open
  [36] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [37] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$66.0x0000000800d8bdf0.apply
  [38] cats.effect.IOFiber.$anonfun$8
  [39] cats.effect.IOFiber$$Lambda$629.0x0000000800e9d258.apply
  [40] cats.effect.unsafe.WorkerThread.blockOn
  [41] scala.concurrent.package$.blocking
  [42] cats.effect.IOFiber.runLoop
  [43] cats.effect.IOFiber.execR
  [44] cats.effect.IOFiber.run
  [45] cats.effect.unsafe.WorkerThread.run

--- 501688694 ns (0.05%), 50 samples
  [ 0] java.util.zip.Inflater.inflateBytesBytes
  [ 1] java.util.zip.Inflater.inflate
  [ 2] java.util.zip.InflaterInputStream.read
  [ 3] java.io.InputStream.transferTo
  [ 4] java.nio.file.Files.copy
  [ 5] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [ 6] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [ 7] jdk.nio.zipfs.ZipPath.newFileChannel
  [ 8] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [ 9] java.nio.channels.FileChannel.open
  [10] java.nio.channels.FileChannel.open
  [11] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [12] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$66.0x0000000800d8bdf0.apply
  [13] cats.effect.IOFiber.$anonfun$8
  [14] cats.effect.IOFiber$$Lambda$629.0x0000000800e9d258.apply
  [15] cats.effect.unsafe.WorkerThread.blockOn
  [16] scala.concurrent.package$.blocking
  [17] cats.effect.IOFiber.runLoop
  [18] cats.effect.IOFiber.execR
  [19] cats.effect.IOFiber.run
  [20] cats.effect.unsafe.WorkerThread.run

--- 501381820 ns (0.05%), 50 samples
  [ 0] clear_page_rep_[k]
  [ 1] get_page_from_freelist_[k]
  [ 2] __alloc_pages_[k]
  [ 3] __folio_alloc_[k]
  [ 4] vma_alloc_folio_[k]
  [ 5] do_anonymous_page_[k]
  [ 6] handle_pte_fault_[k]
  [ 7] __handle_mm_fault_[k]
  [ 8] handle_mm_fault_[k]
  [ 9] do_user_addr_fault_[k]
  [10] exc_page_fault_[k]
  [11] asm_exc_page_fault_[k]
  [12] __memset_avx2_unaligned_erms
  [13] MemAllocator::allocate() const
  [14] TypeArrayKlass::allocate_common(int, bool, JavaThread*)
  [15] JVMCIRuntime::new_array_common(JavaThread*, Klass*, int, bool)
  [16] java.nio.charset.Charset.forName
  [17] com.scalamandra.ZipLib$.com$scalamandra$ZipLib$$anon$1$$_$streamFoldChunks$$anonfun$1
  [18] com.scalamandra.ZipLib$$anon$1$$Lambda$254.0x0000000800dcbaf0.apply
  [19] cats.effect.IOFiber.succeeded
  [20] cats.effect.IOFiber.runLoop
  [21] cats.effect.IOFiber.autoCedeR
  [22] cats.effect.IOFiber.run
  [23] cats.effect.unsafe.WorkerThread.run

--- 491589935 ns (0.05%), 49 samples
  [ 0] strcpy_[k]
  [ 1] fsnotify_handle_inode_event.isra.0_[k]
  [ 2] send_to_group_[k]
  [ 3] fsnotify_[k]
  [ 4] __fsnotify_parent_[k]
  [ 5] vfs_write_[k]
  [ 6] ksys_write_[k]
  [ 7] __x64_sys_write_[k]
  [ 8] do_syscall_64_[k]
  [ 9] entry_SYSCALL_64_after_hwframe_[k]
  [10] write
  [11] sun.nio.ch.FileDispatcherImpl.write0
  [12] sun.nio.ch.FileDispatcherImpl.write
  [13] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [14] sun.nio.ch.IOUtil.write
  [15] sun.nio.ch.IOUtil.write
  [16] sun.nio.ch.FileChannelImpl.write
  [17] java.nio.channels.Channels.writeFullyImpl
  [18] java.nio.channels.Channels.writeFully
  [19] java.nio.channels.Channels$1.write
  [20] java.io.InputStream.transferTo
  [21] java.nio.file.Files.copy
  [22] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [23] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [24] jdk.nio.zipfs.ZipPath.newFileChannel
  [25] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [26] java.nio.channels.FileChannel.open
  [27] java.nio.channels.FileChannel.open
  [28] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [29] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$66.0x0000000800d8bdf0.apply
  [30] cats.effect.IOFiber.$anonfun$8
  [31] cats.effect.IOFiber$$Lambda$629.0x0000000800e9d258.apply
  [32] cats.effect.unsafe.WorkerThread.blockOn
  [33] scala.concurrent.package$.blocking
  [34] cats.effect.IOFiber.runLoop
  [35] cats.effect.IOFiber.execR
  [36] cats.effect.IOFiber.run
  [37] cats.effect.unsafe.WorkerThread.run

--- 490165147 ns (0.05%), 49 samples
  [ 0] void WeakProcessor::Task::work<G1STWIsAliveClosure, G1KeepAliveClosure>(unsigned int, G1STWIsAliveClosure*, G1KeepAliveClosure*)
  [ 1] GangWorker::loop()
  [ 2] GangWorker::run()
  [ 3] Thread::call_run()
  [ 4] thread_native_entry(Thread*)
  [ 5] start_thread

--- 482426111 ns (0.05%), 48 samples
  [ 0] arc_buf_access?[zfs]_[k]
  [ 1] dbuf_hold_impl?[zfs]_[k]
  [ 2] dbuf_hold_level?[zfs]_[k]
  [ 3] dbuf_hold?[zfs]_[k]
  [ 4] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 5] dmu_read_uio_dnode?[zfs]_[k]
  [ 6] dmu_read_uio_dbuf?[zfs]_[k]
  [ 7] mappedread?[zfs]_[k]
  [ 8] zfs_read?[zfs]_[k]
  [ 9] zpl_iter_read?[zfs]_[k]
  [10] new_sync_read_[k]
  [11] vfs_read_[k]
  [12] __x64_sys_pread64_[k]
  [13] do_syscall_64_[k]
  [14] entry_SYSCALL_64_after_hwframe_[k]
  [15] __libc_pread64
  [16] sun.nio.ch.FileDispatcherImpl.pread0
  [17] sun.nio.ch.FileDispatcherImpl.pread
  [18] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [19] sun.nio.ch.IOUtil.read
  [20] sun.nio.ch.IOUtil.read
  [21] sun.nio.ch.FileChannelImpl.readInternal
  [22] sun.nio.ch.FileChannelImpl.read
  [23] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [24] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [25] jdk.nio.zipfs.ZipFileSystem$2.fill
  [26] java.util.zip.InflaterInputStream.read
  [27] java.io.InputStream.transferTo
  [28] java.nio.file.Files.copy
  [29] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [30] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [31] jdk.nio.zipfs.ZipPath.newFileChannel
  [32] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [33] java.nio.channels.FileChannel.open
  [34] java.nio.channels.FileChannel.open
  [35] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [36] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$66.0x0000000800d8bdf0.apply
  [37] cats.effect.IOFiber.$anonfun$8
  [38] cats.effect.IOFiber$$Lambda$629.0x0000000800e9d258.apply
  [39] cats.effect.unsafe.WorkerThread.blockOn
  [40] scala.concurrent.package$.blocking
  [41] cats.effect.IOFiber.runLoop
  [42] cats.effect.IOFiber.execR
  [43] cats.effect.IOFiber.run
  [44] cats.effect.unsafe.WorkerThread.run

--- 481534995 ns (0.05%), 48 samples
  [ 0] dmu_tx_count_write?[zfs]_[k]
  [ 1] dmu_tx_hold_write_by_dnode?[zfs]_[k]
  [ 2] zfs_write?[zfs]_[k]
  [ 3] zpl_iter_write?[zfs]_[k]
  [ 4] new_sync_write_[k]
  [ 5] vfs_write_[k]
  [ 6] ksys_write_[k]
  [ 7] __x64_sys_write_[k]
  [ 8] do_syscall_64_[k]
  [ 9] entry_SYSCALL_64_after_hwframe_[k]
  [10] write
  [11] sun.nio.ch.FileDispatcherImpl.write0
  [12] sun.nio.ch.FileDispatcherImpl.write
  [13] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [14] sun.nio.ch.IOUtil.write
  [15] sun.nio.ch.IOUtil.write
  [16] sun.nio.ch.FileChannelImpl.write
  [17] java.nio.channels.Channels.writeFullyImpl
  [18] java.nio.channels.Channels.writeFully
  [19] java.nio.channels.Channels$1.write
  [20] java.io.InputStream.transferTo
  [21] java.nio.file.Files.copy
  [22] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [23] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [24] jdk.nio.zipfs.ZipPath.newFileChannel
  [25] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [26] java.nio.channels.FileChannel.open
  [27] java.nio.channels.FileChannel.open
  [28] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [29] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$66.0x0000000800d8bdf0.apply
  [30] cats.effect.IOFiber.$anonfun$8
  [31] cats.effect.IOFiber$$Lambda$629.0x0000000800e9d258.apply
  [32] cats.effect.unsafe.WorkerThread.blockOn
  [33] scala.concurrent.package$.blocking
  [34] cats.effect.IOFiber.runLoop
  [35] cats.effect.IOFiber.execR
  [36] cats.effect.IOFiber.run
  [37] cats.effect.unsafe.WorkerThread.run

--- 481475293 ns (0.05%), 48 samples
  [ 0] zpl_iter_write?[zfs]_[k]
  [ 1] new_sync_write_[k]
  [ 2] vfs_write_[k]
  [ 3] ksys_write_[k]
  [ 4] __x64_sys_write_[k]
  [ 5] do_syscall_64_[k]
  [ 6] entry_SYSCALL_64_after_hwframe_[k]
  [ 7] write
  [ 8] sun.nio.ch.FileDispatcherImpl.write0
  [ 9] sun.nio.ch.FileDispatcherImpl.write
  [10] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [11] sun.nio.ch.IOUtil.write
  [12] sun.nio.ch.IOUtil.write
  [13] sun.nio.ch.FileChannelImpl.write
  [14] java.nio.channels.Channels.writeFullyImpl
  [15] java.nio.channels.Channels.writeFully
  [16] java.nio.channels.Channels$1.write
  [17] java.io.InputStream.transferTo
  [18] java.nio.file.Files.copy
  [19] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [20] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [21] jdk.nio.zipfs.ZipPath.newFileChannel
  [22] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [23] java.nio.channels.FileChannel.open
  [24] java.nio.channels.FileChannel.open
  [25] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [26] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$66.0x0000000800d8bdf0.apply
  [27] cats.effect.IOFiber.$anonfun$8
  [28] cats.effect.IOFiber$$Lambda$629.0x0000000800e9d258.apply
  [29] cats.effect.unsafe.WorkerThread.blockOn
  [30] scala.concurrent.package$.blocking
  [31] cats.effect.IOFiber.runLoop
  [32] cats.effect.IOFiber.execR
  [33] cats.effect.IOFiber.run
  [34] cats.effect.unsafe.WorkerThread.run

--- 481269469 ns (0.05%), 48 samples
  [ 0] sa_attr_op?[zfs]_[k]
  [ 1] sa_bulk_update_impl?[zfs]_[k]
  [ 2] sa_bulk_update?[zfs]_[k]
  [ 3] zfs_write?[zfs]_[k]
  [ 4] zpl_iter_write?[zfs]_[k]
  [ 5] new_sync_write_[k]
  [ 6] vfs_write_[k]
  [ 7] ksys_write_[k]
  [ 8] __x64_sys_write_[k]
  [ 9] do_syscall_64_[k]
  [10] entry_SYSCALL_64_after_hwframe_[k]
  [11] write
  [12] sun.nio.ch.FileDispatcherImpl.write0
  [13] sun.nio.ch.FileDispatcherImpl.write
  [14] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [15] sun.nio.ch.IOUtil.write
  [16] sun.nio.ch.IOUtil.write
  [17] sun.nio.ch.FileChannelImpl.write
  [18] java.nio.channels.Channels.writeFullyImpl
  [19] java.nio.channels.Channels.writeFully
  [20] java.nio.channels.Channels$1.write
  [21] java.io.InputStream.transferTo
  [22] java.nio.file.Files.copy
  [23] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [24] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [25] jdk.nio.zipfs.ZipPath.newFileChannel
  [26] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [27] java.nio.channels.FileChannel.open
  [28] java.nio.channels.FileChannel.open
  [29] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [30] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$66.0x0000000800d8bdf0.apply
  [31] cats.effect.IOFiber.$anonfun$8
  [32] cats.effect.IOFiber$$Lambda$629.0x0000000800e9d258.apply
  [33] cats.effect.unsafe.WorkerThread.blockOn
  [34] scala.concurrent.package$.blocking
  [35] cats.effect.IOFiber.runLoop
  [36] cats.effect.IOFiber.execR
  [37] cats.effect.IOFiber.run
  [38] cats.effect.unsafe.WorkerThread.run

--- 481244290 ns (0.05%), 48 samples
  [ 0] do_user_addr_fault_[k]
  [ 1] exc_page_fault_[k]
  [ 2] asm_exc_page_fault_[k]
  [ 3] __memset_avx2_unaligned_erms
  [ 4] MemAllocator::allocate() const
  [ 5] TypeArrayKlass::allocate_common(int, bool, JavaThread*)
  [ 6] JVMCIRuntime::new_array_common(JavaThread*, Klass*, int, bool)
  [ 7] cats.effect.unsafe.WorkerThread.blockOn
  [ 8] scala.concurrent.package$.blocking
  [ 9] cats.effect.IOFiber.runLoop
  [10] cats.effect.IOFiber.autoCedeR
  [11] cats.effect.IOFiber.run
  [12] cats.effect.unsafe.WorkerThread.run

--- 481221592 ns (0.05%), 48 samples
  [ 0] mod_memcg_state_[k]
  [ 1] memcg_account_kmem_[k]
  [ 2] obj_cgroup_charge_[k]
  [ 3] __kmalloc_[k]
  [ 4] inotify_handle_inode_event_[k]
  [ 5] fsnotify_handle_inode_event.isra.0_[k]
  [ 6] send_to_group_[k]
  [ 7] fsnotify_[k]
  [ 8] __fsnotify_parent_[k]
  [ 9] vfs_write_[k]
  [10] ksys_write_[k]
  [11] __x64_sys_write_[k]
  [12] do_syscall_64_[k]
  [13] entry_SYSCALL_64_after_hwframe_[k]
  [14] write
  [15] sun.nio.ch.FileDispatcherImpl.write0
  [16] sun.nio.ch.FileDispatcherImpl.write
  [17] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.IOUtil.write
  [20] sun.nio.ch.FileChannelImpl.write
  [21] java.nio.channels.Channels.writeFullyImpl
  [22] java.nio.channels.Channels.writeFully
  [23] java.nio.channels.Channels$1.write
  [24] java.io.InputStream.transferTo
  [25] java.nio.file.Files.copy
  [26] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [27] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [28] jdk.nio.zipfs.ZipPath.newFileChannel
  [29] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [30] java.nio.channels.FileChannel.open
  [31] java.nio.channels.FileChannel.open
  [32] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [33] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$66.0x0000000800d8bdf0.apply
  [34] cats.effect.IOFiber.$anonfun$8
  [35] cats.effect.IOFiber$$Lambda$629.0x0000000800e9d258.apply
  [36] cats.effect.unsafe.WorkerThread.blockOn
  [37] scala.concurrent.package$.blocking
  [38] cats.effect.IOFiber.runLoop
  [39] cats.effect.IOFiber.execR
  [40] cats.effect.IOFiber.run
  [41] cats.effect.unsafe.WorkerThread.run

--- 472216202 ns (0.05%), 47 samples
  [ 0] __kmalloc_node_[k]
  [ 1] spl_kmem_alloc_impl?[spl]_[k]
  [ 2] spl_kmem_zalloc?[spl]_[k]
  [ 3] dmu_tx_hold_dnode_impl?[zfs]_[k]
  [ 4] dmu_tx_hold_bonus_by_dnode?[zfs]_[k]
  [ 5] dmu_tx_hold_sa?[zfs]_[k]
  [ 6] zfs_write?[zfs]_[k]
  [ 7] zpl_iter_write?[zfs]_[k]
  [ 8] new_sync_write_[k]
  [ 9] vfs_write_[k]
  [10] ksys_write_[k]
  [11] __x64_sys_write_[k]
  [12] do_syscall_64_[k]
  [13] entry_SYSCALL_64_after_hwframe_[k]
  [14] write
  [15] sun.nio.ch.FileDispatcherImpl.write0
  [16] sun.nio.ch.FileDispatcherImpl.write
  [17] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.IOUtil.write
  [20] sun.nio.ch.FileChannelImpl.write
  [21] java.nio.channels.Channels.writeFullyImpl
  [22] java.nio.channels.Channels.writeFully
  [23] java.nio.channels.Channels$1.write
  [24] java.io.InputStream.transferTo
  [25] java.nio.file.Files.copy
  [26] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [27] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [28] jdk.nio.zipfs.ZipPath.newFileChannel
  [29] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [30] java.nio.channels.FileChannel.open
  [31] java.nio.channels.FileChannel.open
  [32] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [33] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$66.0x0000000800d8bdf0.apply
  [34] cats.effect.IOFiber.$anonfun$8
  [35] cats.effect.IOFiber$$Lambda$629.0x0000000800e9d258.apply
  [36] cats.effect.unsafe.WorkerThread.blockOn
  [37] scala.concurrent.package$.blocking
  [38] cats.effect.IOFiber.runLoop
  [39] cats.effect.IOFiber.execR
  [40] cats.effect.IOFiber.run
  [41] cats.effect.unsafe.WorkerThread.run

--- 471987144 ns (0.05%), 47 samples
  [ 0] fault_in_readable_[k]
  [ 1] fault_in_iov_iter_readable_[k]
  [ 2] zfs_uio_prefaultpages?[zfs]_[k]
  [ 3] zfs_write?[zfs]_[k]
  [ 4] zpl_iter_write?[zfs]_[k]
  [ 5] new_sync_write_[k]
  [ 6] vfs_write_[k]
  [ 7] ksys_write_[k]
  [ 8] __x64_sys_write_[k]
  [ 9] do_syscall_64_[k]
  [10] entry_SYSCALL_64_after_hwframe_[k]
  [11] write
  [12] sun.nio.ch.FileDispatcherImpl.write0
  [13] sun.nio.ch.FileDispatcherImpl.write
  [14] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [15] sun.nio.ch.IOUtil.write
  [16] sun.nio.ch.IOUtil.write
  [17] sun.nio.ch.FileChannelImpl.write
  [18] java.nio.channels.Channels.writeFullyImpl
  [19] java.nio.channels.Channels.writeFully
  [20] java.nio.channels.Channels$1.write
  [21] java.io.InputStream.transferTo
  [22] java.nio.file.Files.copy
  [23] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [24] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [25] jdk.nio.zipfs.ZipPath.newFileChannel
  [26] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [27] java.nio.channels.FileChannel.open
  [28] java.nio.channels.FileChannel.open
  [29] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [30] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$66.0x0000000800d8bdf0.apply
  [31] cats.effect.IOFiber.$anonfun$8
  [32] cats.effect.IOFiber$$Lambda$629.0x0000000800e9d258.apply
  [33] cats.effect.unsafe.WorkerThread.blockOn
  [34] scala.concurrent.package$.blocking
  [35] cats.effect.IOFiber.runLoop
  [36] cats.effect.IOFiber.execR
  [37] cats.effect.IOFiber.run
  [38] cats.effect.unsafe.WorkerThread.run

--- 471380802 ns (0.05%), 47 samples
  [ 0] dsl_dir_tempreserve_clear?[zfs]_[k]
  [ 1] dmu_tx_commit?[zfs]_[k]
  [ 2] zfs_write?[zfs]_[k]
  [ 3] zpl_iter_write?[zfs]_[k]
  [ 4] new_sync_write_[k]
  [ 5] vfs_write_[k]
  [ 6] ksys_write_[k]
  [ 7] __x64_sys_write_[k]
  [ 8] do_syscall_64_[k]
  [ 9] entry_SYSCALL_64_after_hwframe_[k]
  [10] write
  [11] sun.nio.ch.FileDispatcherImpl.write0
  [12] sun.nio.ch.FileDispatcherImpl.write
  [13] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [14] sun.nio.ch.IOUtil.write
  [15] sun.nio.ch.IOUtil.write
  [16] sun.nio.ch.FileChannelImpl.write
  [17] java.nio.channels.Channels.writeFullyImpl
  [18] java.nio.channels.Channels.writeFully
  [19] java.nio.channels.Channels$1.write
  [20] java.io.InputStream.transferTo
  [21] java.nio.file.Files.copy
  [22] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [23] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [24] jdk.nio.zipfs.ZipPath.newFileChannel
  [25] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [26] java.nio.channels.FileChannel.open
  [27] java.nio.channels.FileChannel.open
  [28] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [29] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$66.0x0000000800d8bdf0.apply
  [30] cats.effect.IOFiber.$anonfun$8
  [31] cats.effect.IOFiber$$Lambda$629.0x0000000800e9d258.apply
  [32] cats.effect.unsafe.WorkerThread.blockOn
  [33] scala.concurrent.package$.blocking
  [34] cats.effect.IOFiber.runLoop
  [35] cats.effect.IOFiber.execR
  [36] cats.effect.IOFiber.run
  [37] cats.effect.unsafe.WorkerThread.run

--- 471088401 ns (0.05%), 47 samples
  [ 0] memcg_slab_post_alloc_hook_[k]
  [ 1] __kmalloc_[k]
  [ 2] inotify_handle_inode_event_[k]
  [ 3] fsnotify_handle_inode_event.isra.0_[k]
  [ 4] send_to_group_[k]
  [ 5] fsnotify_[k]
  [ 6] __fsnotify_parent_[k]
  [ 7] vfs_write_[k]
  [ 8] ksys_write_[k]
  [ 9] __x64_sys_write_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] write
  [13] sun.nio.ch.FileDispatcherImpl.write0
  [14] sun.nio.ch.FileDispatcherImpl.write
  [15] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [16] sun.nio.ch.IOUtil.write
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.FileChannelImpl.write
  [19] java.nio.channels.Channels.writeFullyImpl
  [20] java.nio.channels.Channels.writeFully
  [21] java.nio.channels.Channels$1.write
  [22] java.io.InputStream.transferTo
  [23] java.nio.file.Files.copy
  [24] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [25] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [26] jdk.nio.zipfs.ZipPath.newFileChannel
  [27] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [28] java.nio.channels.FileChannel.open
  [29] java.nio.channels.FileChannel.open
  [30] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [31] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$66.0x0000000800d8bdf0.apply
  [32] cats.effect.IOFiber.$anonfun$8
  [33] cats.effect.IOFiber$$Lambda$629.0x0000000800e9d258.apply
  [34] cats.effect.unsafe.WorkerThread.blockOn
  [35] scala.concurrent.package$.blocking
  [36] cats.effect.IOFiber.runLoop
  [37] cats.effect.IOFiber.execR
  [38] cats.effect.IOFiber.run
  [39] cats.effect.unsafe.WorkerThread.run

--- 462525421 ns (0.05%), 46 samples
  [ 0] zil_aitx_compare?[zfs]_[k]
  [ 1] zil_itx_assign?[zfs]_[k]
  [ 2] zfs_log_write?[zfs]_[k]
  [ 3] zfs_write?[zfs]_[k]
  [ 4] zpl_iter_write?[zfs]_[k]
  [ 5] new_sync_write_[k]
  [ 6] vfs_write_[k]
  [ 7] ksys_write_[k]
  [ 8] __x64_sys_write_[k]
  [ 9] do_syscall_64_[k]
  [10] entry_SYSCALL_64_after_hwframe_[k]
  [11] write
  [12] sun.nio.ch.FileDispatcherImpl.write0
  [13] sun.nio.ch.FileDispatcherImpl.write
  [14] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [15] sun.nio.ch.IOUtil.write
  [16] sun.nio.ch.IOUtil.write
  [17] sun.nio.ch.FileChannelImpl.write
  [18] java.nio.channels.Channels.writeFullyImpl
  [19] java.nio.channels.Channels.writeFully
  [20] java.nio.channels.Channels$1.write
  [21] java.io.InputStream.transferTo
  [22] java.nio.file.Files.copy
  [23] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [24] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [25] jdk.nio.zipfs.ZipPath.newFileChannel
  [26] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [27] java.nio.channels.FileChannel.open
  [28] java.nio.channels.FileChannel.open
  [29] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [30] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$66.0x0000000800d8bdf0.apply
  [31] cats.effect.IOFiber.$anonfun$8
  [32] cats.effect.IOFiber$$Lambda$629.0x0000000800e9d258.apply
  [33] cats.effect.unsafe.WorkerThread.blockOn
  [34] scala.concurrent.package$.blocking
  [35] cats.effect.IOFiber.runLoop
  [36] cats.effect.IOFiber.execR
  [37] cats.effect.IOFiber.run
  [38] cats.effect.unsafe.WorkerThread.run

--- 461557700 ns (0.05%), 46 samples
  [ 0] java.nio.HeapByteBuffer.<init>
  [ 1] java.nio.ByteBuffer.allocate
  [ 2] fs2.io.file.FileHandleCompanionPlatform$$anon$1.read$$anonfun$1
  [ 3] fs2.io.file.FileHandleCompanionPlatform$$anon$1$$Lambda$670.0x0000000800ea9ac8.apply
  [ 4] cats.effect.IOFiber.$anonfun$8
  [ 5] cats.effect.IOFiber$$Lambda$629.0x0000000800e9d258.apply
  [ 6] cats.effect.unsafe.WorkerThread.blockOn
  [ 7] scala.concurrent.package$.blocking
  [ 8] cats.effect.IOFiber.runLoop
  [ 9] cats.effect.IOFiber.execR
  [10] cats.effect.IOFiber.run
  [11] cats.effect.unsafe.WorkerThread.run

--- 461443268 ns (0.05%), 46 samples
  [ 0] write
  [ 1] sun.nio.ch.FileDispatcherImpl.write0
  [ 2] sun.nio.ch.FileDispatcherImpl.write
  [ 3] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [ 4] sun.nio.ch.IOUtil.write
  [ 5] sun.nio.ch.IOUtil.write
  [ 6] sun.nio.ch.FileChannelImpl.write
  [ 7] java.nio.channels.Channels.writeFullyImpl
  [ 8] java.nio.channels.Channels.writeFully
  [ 9] java.nio.channels.Channels$1.write
  [10] java.io.InputStream.transferTo
  [11] java.nio.file.Files.copy
  [12] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [13] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [14] jdk.nio.zipfs.ZipPath.newFileChannel
  [15] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [16] java.nio.channels.FileChannel.open
  [17] java.nio.channels.FileChannel.open
  [18] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [19] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$66.0x0000000800d8bdf0.apply
  [20] cats.effect.IOFiber.$anonfun$8
  [21] cats.effect.IOFiber$$Lambda$629.0x0000000800e9d258.apply
  [22] cats.effect.unsafe.WorkerThread.blockOn
  [23] scala.concurrent.package$.blocking
  [24] cats.effect.IOFiber.runLoop
  [25] cats.effect.IOFiber.execR
  [26] cats.effect.IOFiber.run
  [27] cats.effect.unsafe.WorkerThread.run

--- 461367010 ns (0.05%), 46 samples
  [ 0] __rcu_read_unlock_[k]
  [ 1] __kmalloc_[k]
  [ 2] inotify_handle_inode_event_[k]
  [ 3] fsnotify_handle_inode_event.isra.0_[k]
  [ 4] send_to_group_[k]
  [ 5] fsnotify_[k]
  [ 6] __fsnotify_parent_[k]
  [ 7] vfs_write_[k]
  [ 8] ksys_write_[k]
  [ 9] __x64_sys_write_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] write
  [13] sun.nio.ch.FileDispatcherImpl.write0
  [14] sun.nio.ch.FileDispatcherImpl.write
  [15] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [16] sun.nio.ch.IOUtil.write
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.FileChannelImpl.write
  [19] java.nio.channels.Channels.writeFullyImpl
  [20] java.nio.channels.Channels.writeFully
  [21] java.nio.channels.Channels$1.write
  [22] java.io.InputStream.transferTo
  [23] java.nio.file.Files.copy
  [24] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [25] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [26] jdk.nio.zipfs.ZipPath.newFileChannel
  [27] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [28] java.nio.channels.FileChannel.open
  [29] java.nio.channels.FileChannel.open
  [30] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [31] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$66.0x0000000800d8bdf0.apply
  [32] cats.effect.IOFiber.$anonfun$8
  [33] cats.effect.IOFiber$$Lambda$629.0x0000000800e9d258.apply
  [34] cats.effect.unsafe.WorkerThread.blockOn
  [35] scala.concurrent.package$.blocking
  [36] cats.effect.IOFiber.runLoop
  [37] cats.effect.IOFiber.execR
  [38] cats.effect.IOFiber.run
  [39] cats.effect.unsafe.WorkerThread.run

--- 461290547 ns (0.05%), 46 samples
  [ 0] memset_[k]
  [ 1] inotify_handle_inode_event_[k]
  [ 2] fsnotify_handle_inode_event.isra.0_[k]
  [ 3] send_to_group_[k]
  [ 4] fsnotify_[k]
  [ 5] __fsnotify_parent_[k]
  [ 6] vfs_write_[k]
  [ 7] ksys_write_[k]
  [ 8] __x64_sys_write_[k]
  [ 9] do_syscall_64_[k]
  [10] entry_SYSCALL_64_after_hwframe_[k]
  [11] write
  [12] sun.nio.ch.FileDispatcherImpl.write0
  [13] sun.nio.ch.FileDispatcherImpl.write
  [14] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [15] sun.nio.ch.IOUtil.write
  [16] sun.nio.ch.IOUtil.write
  [17] sun.nio.ch.FileChannelImpl.write
  [18] java.nio.channels.Channels.writeFullyImpl
  [19] java.nio.channels.Channels.writeFully
  [20] java.nio.channels.Channels$1.write
  [21] java.io.InputStream.transferTo
  [22] java.nio.file.Files.copy
  [23] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [24] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [25] jdk.nio.zipfs.ZipPath.newFileChannel
  [26] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [27] java.nio.channels.FileChannel.open
  [28] java.nio.channels.FileChannel.open
  [29] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [30] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$66.0x0000000800d8bdf0.apply
  [31] cats.effect.IOFiber.$anonfun$8
  [32] cats.effect.IOFiber$$Lambda$629.0x0000000800e9d258.apply
  [33] cats.effect.unsafe.WorkerThread.blockOn
  [34] scala.concurrent.package$.blocking
  [35] cats.effect.IOFiber.runLoop
  [36] cats.effect.IOFiber.execR
  [37] cats.effect.IOFiber.run
  [38] cats.effect.unsafe.WorkerThread.run

--- 460661673 ns (0.05%), 46 samples
  [ 0] HeapRegionManager::par_iterate(HeapRegionClosure*, HeapRegionClaimer*, unsigned int) const
  [ 1] G1PrepareEvacuationTask::work(unsigned int)
  [ 2] GangWorker::loop()
  [ 3] GangWorker::run()
  [ 4] Thread::call_run()
  [ 5] thread_native_entry(Thread*)
  [ 6] start_thread

--- 452416762 ns (0.04%), 45 samples
  [ 0] free_unref_page_list_[k]
  [ 1] release_pages_[k]
  [ 2] free_pages_and_swap_cache_[k]
  [ 3] tlb_batch_pages_flush_[k]
  [ 4] tlb_finish_mmu_[k]
  [ 5] unmap_region_[k]
  [ 6] __do_munmap_[k]
  [ 7] mmap_region_[k]
  [ 8] do_mmap_[k]
  [ 9] vm_mmap_pgoff_[k]
  [10] ksys_mmap_pgoff_[k]
  [11] __x64_sys_mmap_[k]
  [12] do_syscall_64_[k]
  [13] entry_SYSCALL_64_after_hwframe_[k]
  [14] __GI___mmap
  [15] G1PageBasedVirtualSpace::uncommit(unsigned long, unsigned long)
  [16] G1RegionsLargerThanCommitSizeMapper::uncommit_regions(unsigned int, unsigned long)
  [17] HeapRegionManager::uncommit_regions(unsigned int, unsigned int)
  [18] HeapRegionManager::uncommit_inactive_regions(unsigned int)
  [19] G1UncommitRegionTask::execute()
  [20] G1ServiceThread::run_task(G1ServiceTask*)
  [21] G1ServiceThread::run_service()
  [22] ConcurrentGCThread::run()
  [23] Thread::call_run()
  [24] thread_native_entry(Thread*)
  [25] start_thread

--- 451822697 ns (0.04%), 45 samples
  [ 0] ___slab_alloc_[k]
  [ 1] __kmalloc_[k]
  [ 2] inotify_handle_inode_event_[k]
  [ 3] fsnotify_handle_inode_event.isra.0_[k]
  [ 4] send_to_group_[k]
  [ 5] fsnotify_[k]
  [ 6] __fsnotify_parent_[k]
  [ 7] vfs_write_[k]
  [ 8] ksys_write_[k]
  [ 9] __x64_sys_write_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] write
  [13] sun.nio.ch.FileDispatcherImpl.write0
  [14] sun.nio.ch.FileDispatcherImpl.write
  [15] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [16] sun.nio.ch.IOUtil.write
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.FileChannelImpl.write
  [19] java.nio.channels.Channels.writeFullyImpl
  [20] java.nio.channels.Channels.writeFully
  [21] java.nio.channels.Channels$1.write
  [22] java.io.InputStream.transferTo
  [23] java.nio.file.Files.copy
  [24] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [25] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [26] jdk.nio.zipfs.ZipPath.newFileChannel
  [27] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [28] java.nio.channels.FileChannel.open
  [29] java.nio.channels.FileChannel.open
  [30] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [31] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$66.0x0000000800d8bdf0.apply
  [32] cats.effect.IOFiber.$anonfun$8
  [33] cats.effect.IOFiber$$Lambda$629.0x0000000800e9d258.apply
  [34] cats.effect.unsafe.WorkerThread.blockOn
  [35] scala.concurrent.package$.blocking
  [36] cats.effect.IOFiber.runLoop
  [37] cats.effect.IOFiber.execR
  [38] cats.effect.IOFiber.run
  [39] cats.effect.unsafe.WorkerThread.run

--- 451354964 ns (0.04%), 45 samples
  [ 0] jni_ReleasePrimitiveArrayCritical
  [ 1] Java_java_util_zip_Inflater_inflateBytesBytes
  [ 2] java.util.zip.Inflater.inflateBytesBytes
  [ 3] java.util.zip.Inflater.inflate
  [ 4] java.util.zip.InflaterInputStream.read
  [ 5] java.io.InputStream.transferTo
  [ 6] java.nio.file.Files.copy
  [ 7] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [ 8] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [ 9] jdk.nio.zipfs.ZipPath.newFileChannel
  [10] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [11] java.nio.channels.FileChannel.open
  [12] java.nio.channels.FileChannel.open
  [13] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [14] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$66.0x0000000800d8bdf0.apply
  [15] cats.effect.IOFiber.$anonfun$8
  [16] cats.effect.IOFiber$$Lambda$629.0x0000000800e9d258.apply
  [17] cats.effect.unsafe.WorkerThread.blockOn
  [18] scala.concurrent.package$.blocking
  [19] cats.effect.IOFiber.runLoop
  [20] cats.effect.IOFiber.execR
  [21] cats.effect.IOFiber.run
  [22] cats.effect.unsafe.WorkerThread.run

--- 450986778 ns (0.04%), 45 samples
  [ 0] avl_find?[zavl]_[k]
  [ 1] zil_itx_assign?[zfs]_[k]
  [ 2] zfs_log_write?[zfs]_[k]
  [ 3] zfs_write?[zfs]_[k]
  [ 4] zpl_iter_write?[zfs]_[k]
  [ 5] new_sync_write_[k]
  [ 6] vfs_write_[k]
  [ 7] ksys_write_[k]
  [ 8] __x64_sys_write_[k]
  [ 9] do_syscall_64_[k]
  [10] entry_SYSCALL_64_after_hwframe_[k]
  [11] write
  [12] sun.nio.ch.FileDispatcherImpl.write0
  [13] sun.nio.ch.FileDispatcherImpl.write
  [14] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [15] sun.nio.ch.IOUtil.write
  [16] sun.nio.ch.IOUtil.write
  [17] sun.nio.ch.FileChannelImpl.write
  [18] java.nio.channels.Channels.writeFullyImpl
  [19] java.nio.channels.Channels.writeFully
  [20] java.nio.channels.Channels$1.write
  [21] java.io.InputStream.transferTo
  [22] java.nio.file.Files.copy
  [23] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [24] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [25] jdk.nio.zipfs.ZipPath.newFileChannel
  [26] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [27] java.nio.channels.FileChannel.open
  [28] java.nio.channels.FileChannel.open
  [29] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [30] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$66.0x0000000800d8bdf0.apply
  [31] cats.effect.IOFiber.$anonfun$8
  [32] cats.effect.IOFiber$$Lambda$629.0x0000000800e9d258.apply
  [33] cats.effect.unsafe.WorkerThread.blockOn
  [34] scala.concurrent.package$.blocking
  [35] cats.effect.IOFiber.runLoop
  [36] cats.effect.IOFiber.execR
  [37] cats.effect.IOFiber.run
  [38] cats.effect.unsafe.WorkerThread.run

--- 442160057 ns (0.04%), 44 samples
  [ 0] _raw_spin_unlock_irqrestore_[k]
  [ 1] try_to_wake_up_[k]
  [ 2] wake_up_q_[k]
  [ 3] futex_wake_[k]
  [ 4] do_futex_[k]
  [ 5] __x64_sys_futex_[k]
  [ 6] do_syscall_64_[k]
  [ 7] entry_SYSCALL_64_after_hwframe_[k]
  [ 8] pthread_cond_signal@@GLIBC_2.3.2
  [ 9] jdk.internal.misc.Unsafe.unpark
  [10] java.util.concurrent.locks.LockSupport.unpark
  [11] cats.effect.unsafe.WorkStealingThreadPool.notifyParked
  [12] cats.effect.unsafe.WorkerThread.blockOn
  [13] scala.concurrent.package$.blocking
  [14] cats.effect.IOFiber.runLoop
  [15] cats.effect.IOFiber.execR
  [16] cats.effect.IOFiber.run
  [17] cats.effect.unsafe.WorkerThread.run

--- 442018096 ns (0.04%), 44 samples
  [ 0] dmu_tx_commit?[zfs]_[k]
  [ 1] zfs_write?[zfs]_[k]
  [ 2] zpl_iter_write?[zfs]_[k]
  [ 3] new_sync_write_[k]
  [ 4] vfs_write_[k]
  [ 5] ksys_write_[k]
  [ 6] __x64_sys_write_[k]
  [ 7] do_syscall_64_[k]
  [ 8] entry_SYSCALL_64_after_hwframe_[k]
  [ 9] write
  [10] sun.nio.ch.FileDispatcherImpl.write0
  [11] sun.nio.ch.FileDispatcherImpl.write
  [12] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [13] sun.nio.ch.IOUtil.write
  [14] sun.nio.ch.IOUtil.write
  [15] sun.nio.ch.FileChannelImpl.write
  [16] java.nio.channels.Channels.writeFullyImpl
  [17] java.nio.channels.Channels.writeFully
  [18] java.nio.channels.Channels$1.write
  [19] java.io.InputStream.transferTo
  [20] java.nio.file.Files.copy
  [21] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [22] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [23] jdk.nio.zipfs.ZipPath.newFileChannel
  [24] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [25] java.nio.channels.FileChannel.open
  [26] java.nio.channels.FileChannel.open
  [27] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [28] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$66.0x0000000800d8bdf0.apply
  [29] cats.effect.IOFiber.$anonfun$8
  [30] cats.effect.IOFiber$$Lambda$629.0x0000000800e9d258.apply
  [31] cats.effect.unsafe.WorkerThread.blockOn
  [32] scala.concurrent.package$.blocking
  [33] cats.effect.IOFiber.runLoop
  [34] cats.effect.IOFiber.execR
  [35] cats.effect.IOFiber.run
  [36] cats.effect.unsafe.WorkerThread.run

--- 441230420 ns (0.04%), 44 samples
  [ 0] kmem_cache_free_[k]
  [ 1] spl_kmem_cache_free?[spl]_[k]
  [ 2] zio_data_buf_free?[zfs]_[k]
  [ 3] zil_itx_destroy?[zfs]_[k]
  [ 4] zil_remove_async?[zfs]_[k]
  [ 5] zfs_log_remove?[zfs]_[k]
  [ 6] zfs_remove?[zfs]_[k]
  [ 7] zpl_unlink?[zfs]_[k]
  [ 8] vfs_unlink_[k]
  [ 9] do_unlinkat_[k]
  [10] __x64_sys_unlink_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] __GI_unlink
  [14] sun.nio.fs.UnixNativeDispatcher.unlink0
  [15] sun.nio.fs.UnixNativeDispatcher.unlink
  [16] sun.nio.fs.UnixFileSystemProvider.implDelete
  [17] sun.nio.fs.AbstractFileSystemProvider.delete
  [18] java.nio.file.Files.delete
  [19] jdk.nio.zipfs.ZipFileSystem.removeTempPathForEntry
  [20] jdk.nio.zipfs.ZipFileSystem$1.implCloseChannel
  [21] java.nio.channels.spi.AbstractInterruptibleChannel.close
  [22] fs2.io.file.FilesCompanionPlatform.openFileChannel$$anonfun$1$$anonfun$1
  [23] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$openFileChannel$$anonfun$1$$anonfun$adapted$1
  [24] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$644.0x0000000800e9f140.apply
  [25] cats.effect.IOFiber.$anonfun$8
  [26] cats.effect.IOFiber$$Lambda$629.0x0000000800e9d258.apply
  [27] cats.effect.unsafe.WorkerThread.blockOn
  [28] scala.concurrent.package$.blocking
  [29] cats.effect.IOFiber.runLoop
  [30] cats.effect.IOFiber.autoCedeR
  [31] cats.effect.IOFiber.run
  [32] cats.effect.unsafe.WorkerThread.run

--- 440982785 ns (0.04%), 44 samples
  [ 0] jlong_disjoint_arraycopy
  [ 1] jdk.internal.misc.Unsafe.copyMemory0
  [ 2] jdk.internal.misc.Unsafe.copyMemory
  [ 3] jdk.internal.misc.ScopedMemoryAccess.copyMemoryInternal
  [ 4] jdk.internal.misc.ScopedMemoryAccess.copyMemory
  [ 5] java.nio.ByteBuffer.putBuffer
  [ 6] java.nio.ByteBuffer.put
  [ 7] java.nio.HeapByteBuffer.put
  [ 8] sun.nio.ch.IOUtil.read
  [ 9] sun.nio.ch.IOUtil.read
  [10] sun.nio.ch.FileChannelImpl.readInternal
  [11] sun.nio.ch.FileChannelImpl.read
  [12] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [13] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [14] jdk.nio.zipfs.ZipFileSystem$2.fill
  [15] java.util.zip.InflaterInputStream.read
  [16] java.io.InputStream.transferTo
  [17] java.nio.file.Files.copy
  [18] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [19] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [20] jdk.nio.zipfs.ZipPath.newFileChannel
  [21] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [22] java.nio.channels.FileChannel.open
  [23] java.nio.channels.FileChannel.open
  [24] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [25] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$66.0x0000000800d8bdf0.apply
  [26] cats.effect.IOFiber.$anonfun$8
  [27] cats.effect.IOFiber$$Lambda$629.0x0000000800e9d258.apply
  [28] cats.effect.unsafe.WorkerThread.blockOn
  [29] scala.concurrent.package$.blocking
  [30] cats.effect.IOFiber.runLoop
  [31] cats.effect.IOFiber.execR
  [32] cats.effect.IOFiber.run
  [33] cats.effect.unsafe.WorkerThread.run

--- 431873852 ns (0.04%), 43 samples
  [ 0] apparmor_file_permission_[k]
  [ 1] security_file_permission_[k]
  [ 2] rw_verify_area_[k]
  [ 3] vfs_write_[k]
  [ 4] ksys_write_[k]
  [ 5] __x64_sys_write_[k]
  [ 6] do_syscall_64_[k]
  [ 7] entry_SYSCALL_64_after_hwframe_[k]
  [ 8] write
  [ 9] sun.nio.ch.FileDispatcherImpl.write0
  [10] sun.nio.ch.FileDispatcherImpl.write
  [11] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [12] sun.nio.ch.IOUtil.write
  [13] sun.nio.ch.IOUtil.write
  [14] sun.nio.ch.FileChannelImpl.write
  [15] java.nio.channels.Channels.writeFullyImpl
  [16] java.nio.channels.Channels.writeFully
  [17] java.nio.channels.Channels$1.write
  [18] java.io.InputStream.transferTo
  [19] java.nio.file.Files.copy
  [20] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [21] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [22] jdk.nio.zipfs.ZipPath.newFileChannel
  [23] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [24] java.nio.channels.FileChannel.open
  [25] java.nio.channels.FileChannel.open
  [26] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [27] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$66.0x0000000800d8bdf0.apply
  [28] cats.effect.IOFiber.$anonfun$8
  [29] cats.effect.IOFiber$$Lambda$629.0x0000000800e9d258.apply
  [30] cats.effect.unsafe.WorkerThread.blockOn
  [31] scala.concurrent.package$.blocking
  [32] cats.effect.IOFiber.runLoop
  [33] cats.effect.IOFiber.execR
  [34] cats.effect.IOFiber.run
  [35] cats.effect.unsafe.WorkerThread.run

--- 431822065 ns (0.04%), 43 samples
  [ 0] dmu_zfetch_prepare?[zfs]_[k]
  [ 1] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 2] dmu_write_uio_dnode?[zfs]_[k]
  [ 3] dmu_write_uio_dbuf?[zfs]_[k]
  [ 4] zfs_write?[zfs]_[k]
  [ 5] zpl_iter_write?[zfs]_[k]
  [ 6] new_sync_write_[k]
  [ 7] vfs_write_[k]
  [ 8] ksys_write_[k]
  [ 9] __x64_sys_write_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] write
  [13] sun.nio.ch.FileDispatcherImpl.write0
  [14] sun.nio.ch.FileDispatcherImpl.write
  [15] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [16] sun.nio.ch.IOUtil.write
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.FileChannelImpl.write
  [19] java.nio.channels.Channels.writeFullyImpl
  [20] java.nio.channels.Channels.writeFully
  [21] java.nio.channels.Channels$1.write
  [22] java.io.InputStream.transferTo
  [23] java.nio.file.Files.copy
  [24] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [25] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [26] jdk.nio.zipfs.ZipPath.newFileChannel
  [27] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [28] java.nio.channels.FileChannel.open
  [29] java.nio.channels.FileChannel.open
  [30] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [31] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$66.0x0000000800d8bdf0.apply
  [32] cats.effect.IOFiber.$anonfun$8
  [33] cats.effect.IOFiber$$Lambda$629.0x0000000800e9d258.apply
  [34] cats.effect.unsafe.WorkerThread.blockOn
  [35] scala.concurrent.package$.blocking
  [36] cats.effect.IOFiber.runLoop
  [37] cats.effect.IOFiber.execR
  [38] cats.effect.IOFiber.run
  [39] cats.effect.unsafe.WorkerThread.run

--- 431784820 ns (0.04%), 43 samples
  [ 0] memset_[k]
  [ 1] spl_kmem_cache_alloc?[spl]_[k]
  [ 2] zio_data_buf_alloc?[zfs]_[k]
  [ 3] zil_itx_create?[zfs]_[k]
  [ 4] zfs_log_write?[zfs]_[k]
  [ 5] zfs_write?[zfs]_[k]
  [ 6] zpl_iter_write?[zfs]_[k]
  [ 7] new_sync_write_[k]
  [ 8] vfs_write_[k]
  [ 9] ksys_write_[k]
  [10] __x64_sys_write_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] write
  [14] sun.nio.ch.FileDispatcherImpl.write0
  [15] sun.nio.ch.FileDispatcherImpl.write
  [16] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.FileChannelImpl.write
  [20] java.nio.channels.Channels.writeFullyImpl
  [21] java.nio.channels.Channels.writeFully
  [22] java.nio.channels.Channels$1.write
  [23] java.io.InputStream.transferTo
  [24] java.nio.file.Files.copy
  [25] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [26] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [27] jdk.nio.zipfs.ZipPath.newFileChannel
  [28] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [29] java.nio.channels.FileChannel.open
  [30] java.nio.channels.FileChannel.open
  [31] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [32] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$66.0x0000000800d8bdf0.apply
  [33] cats.effect.IOFiber.$anonfun$8
  [34] cats.effect.IOFiber$$Lambda$629.0x0000000800e9d258.apply
  [35] cats.effect.unsafe.WorkerThread.blockOn
  [36] scala.concurrent.package$.blocking
  [37] cats.effect.IOFiber.runLoop
  [38] cats.effect.IOFiber.execR
  [39] cats.effect.IOFiber.run
  [40] cats.effect.unsafe.WorkerThread.run

--- 431577744 ns (0.04%), 43 samples
  [ 0] kfree_[k]
  [ 1] spl_kmem_free_impl?[spl]_[k]
  [ 2] spl_kmem_free?[spl]_[k]
  [ 3] dsl_dir_tempreserve_clear?[zfs]_[k]
  [ 4] dmu_tx_commit?[zfs]_[k]
  [ 5] zfs_write?[zfs]_[k]
  [ 6] zpl_iter_write?[zfs]_[k]
  [ 7] new_sync_write_[k]
  [ 8] vfs_write_[k]
  [ 9] ksys_write_[k]
  [10] __x64_sys_write_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] write
  [14] sun.nio.ch.FileDispatcherImpl.write0
  [15] sun.nio.ch.FileDispatcherImpl.write
  [16] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.FileChannelImpl.write
  [20] java.nio.channels.Channels.writeFullyImpl
  [21] java.nio.channels.Channels.writeFully
  [22] java.nio.channels.Channels$1.write
  [23] java.io.InputStream.transferTo
  [24] java.nio.file.Files.copy
  [25] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [26] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [27] jdk.nio.zipfs.ZipPath.newFileChannel
  [28] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [29] java.nio.channels.FileChannel.open
  [30] java.nio.channels.FileChannel.open
  [31] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [32] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$66.0x0000000800d8bdf0.apply
  [33] cats.effect.IOFiber.$anonfun$8
  [34] cats.effect.IOFiber$$Lambda$629.0x0000000800e9d258.apply
  [35] cats.effect.unsafe.WorkerThread.blockOn
  [36] scala.concurrent.package$.blocking
  [37] cats.effect.IOFiber.runLoop
  [38] cats.effect.IOFiber.execR
  [39] cats.effect.IOFiber.run
  [40] cats.effect.unsafe.WorkerThread.run

--- 430364539 ns (0.04%), 43 samples
  [ 0] do_user_addr_fault_[k]
  [ 1] exc_page_fault_[k]
  [ 2] asm_exc_page_fault_[k]
  [ 3] __memcpy_sse2_unaligned_erms
  [ 4] G1ParScanThreadState::steal_and_trim_queue(GenericTaskQueueSet<OverflowTaskQueue<ScannerTask, (MEMFLAGS)5, 131072u>, (MEMFLAGS)5>*)
  [ 5] G1ParEvacuateFollowersClosure::do_void()
  [ 6] G1EvacuateRegionsTask::evacuate_live_objects(G1ParScanThreadState*, unsigned int)
  [ 7] G1EvacuateRegionsBaseTask::work(unsigned int)
  [ 8] GangWorker::loop()
  [ 9] GangWorker::run()
  [10] Thread::call_run()
  [11] thread_native_entry(Thread*)
  [12] start_thread

--- 421577141 ns (0.04%), 42 samples
  [ 0] clear_page_rep_[k]
  [ 1] get_page_from_freelist_[k]
  [ 2] __alloc_pages_[k]
  [ 3] __folio_alloc_[k]
  [ 4] vma_alloc_folio_[k]
  [ 5] do_anonymous_page_[k]
  [ 6] handle_pte_fault_[k]
  [ 7] __handle_mm_fault_[k]
  [ 8] handle_mm_fault_[k]
  [ 9] do_user_addr_fault_[k]
  [10] exc_page_fault_[k]
  [11] asm_exc_page_fault_[k]
  [12] __memset_avx2_unaligned_erms
  [13] MemAllocator::allocate() const
  [14] TypeArrayKlass::allocate_common(int, bool, JavaThread*)
  [15] JVMCIRuntime::new_array_common(JavaThread*, Klass*, int, bool)
  [16] cats.effect.unsafe.WorkerThread.blockOn
  [17] scala.concurrent.package$.blocking
  [18] cats.effect.IOFiber.runLoop
  [19] cats.effect.IOFiber.execR
  [20] cats.effect.IOFiber.run
  [21] cats.effect.unsafe.WorkerThread.run

--- 421011027 ns (0.04%), 42 samples
  [ 0] mod_objcg_state_[k]
  [ 1] memcg_slab_post_alloc_hook_[k]
  [ 2] __kmalloc_[k]
  [ 3] inotify_handle_inode_event_[k]
  [ 4] fsnotify_handle_inode_event.isra.0_[k]
  [ 5] send_to_group_[k]
  [ 6] fsnotify_[k]
  [ 7] __fsnotify_parent_[k]
  [ 8] vfs_write_[k]
  [ 9] ksys_write_[k]
  [10] __x64_sys_write_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] write
  [14] sun.nio.ch.FileDispatcherImpl.write0
  [15] sun.nio.ch.FileDispatcherImpl.write
  [16] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.FileChannelImpl.write
  [20] java.nio.channels.Channels.writeFullyImpl
  [21] java.nio.channels.Channels.writeFully
  [22] java.nio.channels.Channels$1.write
  [23] java.io.InputStream.transferTo
  [24] java.nio.file.Files.copy
  [25] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [26] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [27] jdk.nio.zipfs.ZipPath.newFileChannel
  [28] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [29] java.nio.channels.FileChannel.open
  [30] java.nio.channels.FileChannel.open
  [31] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [32] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$66.0x0000000800d8bdf0.apply
  [33] cats.effect.IOFiber.$anonfun$8
  [34] cats.effect.IOFiber$$Lambda$629.0x0000000800e9d258.apply
  [35] cats.effect.unsafe.WorkerThread.blockOn
  [36] scala.concurrent.package$.blocking
  [37] cats.effect.IOFiber.runLoop
  [38] cats.effect.IOFiber.execR
  [39] cats.effect.IOFiber.run
  [40] cats.effect.unsafe.WorkerThread.run

--- 420863106 ns (0.04%), 42 samples
  [ 0] zfs_rangelock_exit?[zfs]_[k]
  [ 1] zfs_write?[zfs]_[k]
  [ 2] zpl_iter_write?[zfs]_[k]
  [ 3] new_sync_write_[k]
  [ 4] vfs_write_[k]
  [ 5] ksys_write_[k]
  [ 6] __x64_sys_write_[k]
  [ 7] do_syscall_64_[k]
  [ 8] entry_SYSCALL_64_after_hwframe_[k]
  [ 9] write
  [10] sun.nio.ch.FileDispatcherImpl.write0
  [11] sun.nio.ch.FileDispatcherImpl.write
  [12] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [13] sun.nio.ch.IOUtil.write
  [14] sun.nio.ch.IOUtil.write
  [15] sun.nio.ch.FileChannelImpl.write
  [16] java.nio.channels.Channels.writeFullyImpl
  [17] java.nio.channels.Channels.writeFully
  [18] java.nio.channels.Channels$1.write
  [19] java.io.InputStream.transferTo
  [20] java.nio.file.Files.copy
  [21] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [22] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [23] jdk.nio.zipfs.ZipPath.newFileChannel
  [24] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [25] java.nio.channels.FileChannel.open
  [26] java.nio.channels.FileChannel.open
  [27] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [28] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$66.0x0000000800d8bdf0.apply
  [29] cats.effect.IOFiber.$anonfun$8
  [30] cats.effect.IOFiber$$Lambda$629.0x0000000800e9d258.apply
  [31] cats.effect.unsafe.WorkerThread.blockOn
  [32] scala.concurrent.package$.blocking
  [33] cats.effect.IOFiber.runLoop
  [34] cats.effect.IOFiber.execR
  [35] cats.effect.IOFiber.run
  [36] cats.effect.unsafe.WorkerThread.run

--- 412168867 ns (0.04%), 41 samples
  [ 0] mutex_lock_[k]
  [ 1] dsl_dir_tempreserve_impl.constprop.0?[zfs]_[k]
  [ 2] dsl_dir_tempreserve_space?[zfs]_[k]
  [ 3] dmu_tx_try_assign?[zfs]_[k]
  [ 4] dmu_tx_assign?[zfs]_[k]
  [ 5] zfs_write?[zfs]_[k]
  [ 6] zpl_iter_write?[zfs]_[k]
  [ 7] new_sync_write_[k]
  [ 8] vfs_write_[k]
  [ 9] ksys_write_[k]
  [10] __x64_sys_write_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] write
  [14] sun.nio.ch.FileDispatcherImpl.write0
  [15] sun.nio.ch.FileDispatcherImpl.write
  [16] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.FileChannelImpl.write
  [20] java.nio.channels.Channels.writeFullyImpl
  [21] java.nio.channels.Channels.writeFully
  [22] java.nio.channels.Channels$1.write
  [23] java.io.InputStream.transferTo
  [24] java.nio.file.Files.copy
  [25] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [26] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [27] jdk.nio.zipfs.ZipPath.newFileChannel
  [28] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [29] java.nio.channels.FileChannel.open
  [30] java.nio.channels.FileChannel.open
  [31] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [32] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$66.0x0000000800d8bdf0.apply
  [33] cats.effect.IOFiber.$anonfun$8
  [34] cats.effect.IOFiber$$Lambda$629.0x0000000800e9d258.apply
  [35] cats.effect.unsafe.WorkerThread.blockOn
  [36] scala.concurrent.package$.blocking
  [37] cats.effect.IOFiber.runLoop
  [38] cats.effect.IOFiber.execR
  [39] cats.effect.IOFiber.run
  [40] cats.effect.unsafe.WorkerThread.run

--- 411532796 ns (0.04%), 41 samples
  [ 0] dbuf_read?[zfs]_[k]
  [ 1] dmu_tx_check_ioerr?[zfs]_[k]
  [ 2] dmu_tx_count_write?[zfs]_[k]
  [ 3] dmu_tx_hold_write_by_dnode?[zfs]_[k]
  [ 4] zfs_write?[zfs]_[k]
  [ 5] zpl_iter_write?[zfs]_[k]
  [ 6] new_sync_write_[k]
  [ 7] vfs_write_[k]
  [ 8] ksys_write_[k]
  [ 9] __x64_sys_write_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] write
  [13] sun.nio.ch.FileDispatcherImpl.write0
  [14] sun.nio.ch.FileDispatcherImpl.write
  [15] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [16] sun.nio.ch.IOUtil.write
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.FileChannelImpl.write
  [19] java.nio.channels.Channels.writeFullyImpl
  [20] java.nio.channels.Channels.writeFully
  [21] java.nio.channels.Channels$1.write
  [22] java.io.InputStream.transferTo
  [23] java.nio.file.Files.copy
  [24] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [25] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [26] jdk.nio.zipfs.ZipPath.newFileChannel
  [27] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [28] java.nio.channels.FileChannel.open
  [29] java.nio.channels.FileChannel.open
  [30] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [31] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$66.0x0000000800d8bdf0.apply
  [32] cats.effect.IOFiber.$anonfun$8
  [33] cats.effect.IOFiber$$Lambda$629.0x0000000800e9d258.apply
  [34] cats.effect.unsafe.WorkerThread.blockOn
  [35] scala.concurrent.package$.blocking
  [36] cats.effect.IOFiber.runLoop
  [37] cats.effect.IOFiber.execR
  [38] cats.effect.IOFiber.run
  [39] cats.effect.unsafe.WorkerThread.run

--- 401598050 ns (0.04%), 40 samples
  [ 0] dmu_zfetch_prepare?[zfs]_[k]
  [ 1] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 2] dmu_read_uio_dnode?[zfs]_[k]
  [ 3] dmu_read_uio_dbuf?[zfs]_[k]
  [ 4] mappedread?[zfs]_[k]
  [ 5] zfs_read?[zfs]_[k]
  [ 6] zpl_iter_read?[zfs]_[k]
  [ 7] new_sync_read_[k]
  [ 8] vfs_read_[k]
  [ 9] __x64_sys_pread64_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] __libc_pread64
  [13] sun.nio.ch.FileDispatcherImpl.pread0
  [14] sun.nio.ch.FileDispatcherImpl.pread
  [15] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [16] sun.nio.ch.IOUtil.read
  [17] sun.nio.ch.IOUtil.read
  [18] sun.nio.ch.FileChannelImpl.readInternal
  [19] sun.nio.ch.FileChannelImpl.read
  [20] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [21] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [22] jdk.nio.zipfs.ZipFileSystem$2.fill
  [23] java.util.zip.InflaterInputStream.read
  [24] java.io.InputStream.transferTo
  [25] java.nio.file.Files.copy
  [26] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [27] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [28] jdk.nio.zipfs.ZipPath.newFileChannel
  [29] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [30] java.nio.channels.FileChannel.open
  [31] java.nio.channels.FileChannel.open
  [32] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [33] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$66.0x0000000800d8bdf0.apply
  [34] cats.effect.IOFiber.$anonfun$8
  [35] cats.effect.IOFiber$$Lambda$629.0x0000000800e9d258.apply
  [36] cats.effect.unsafe.WorkerThread.blockOn
  [37] scala.concurrent.package$.blocking
  [38] cats.effect.IOFiber.runLoop
  [39] cats.effect.IOFiber.execR
  [40] cats.effect.IOFiber.run
  [41] cats.effect.unsafe.WorkerThread.run

--- 401588362 ns (0.04%), 40 samples
  [ 0] percpu_counter_add_batch_[k]
  [ 1] wmsum_add?[zfs]_[k]
  [ 2] dbuf_read?[zfs]_[k]
  [ 3] dmu_tx_check_ioerr?[zfs]_[k]
  [ 4] dmu_tx_count_write?[zfs]_[k]
  [ 5] dmu_tx_hold_write_by_dnode?[zfs]_[k]
  [ 6] zfs_write?[zfs]_[k]
  [ 7] zpl_iter_write?[zfs]_[k]
  [ 8] new_sync_write_[k]
  [ 9] vfs_write_[k]
  [10] ksys_write_[k]
  [11] __x64_sys_write_[k]
  [12] do_syscall_64_[k]
  [13] entry_SYSCALL_64_after_hwframe_[k]
  [14] write
  [15] sun.nio.ch.FileDispatcherImpl.write0
  [16] sun.nio.ch.FileDispatcherImpl.write
  [17] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.IOUtil.write
  [20] sun.nio.ch.FileChannelImpl.write
  [21] java.nio.channels.Channels.writeFullyImpl
  [22] java.nio.channels.Channels.writeFully
  [23] java.nio.channels.Channels$1.write
  [24] java.io.InputStream.transferTo
  [25] java.nio.file.Files.copy
  [26] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [27] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [28] jdk.nio.zipfs.ZipPath.newFileChannel
  [29] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [30] java.nio.channels.FileChannel.open
  [31] java.nio.channels.FileChannel.open
  [32] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [33] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$66.0x0000000800d8bdf0.apply
  [34] cats.effect.IOFiber.$anonfun$8
  [35] cats.effect.IOFiber$$Lambda$629.0x0000000800e9d258.apply
  [36] cats.effect.unsafe.WorkerThread.blockOn
  [37] scala.concurrent.package$.blocking
  [38] cats.effect.IOFiber.runLoop
  [39] cats.effect.IOFiber.execR
  [40] cats.effect.IOFiber.run
  [41] cats.effect.unsafe.WorkerThread.run

--- 401472378 ns (0.04%), 40 samples
  [ 0] spl_kmem_cache_alloc?[spl]_[k]
  [ 1] zio_data_buf_alloc?[zfs]_[k]
  [ 2] arc_get_data_buf?[zfs]_[k]
  [ 3] arc_buf_alloc_impl?[zfs]_[k]
  [ 4] arc_alloc_buf?[zfs]_[k]
  [ 5] dbuf_alloc_arcbuf?[zfs]_[k]
  [ 6] dbuf_read_hole?[zfs]_[k]
  [ 7] dbuf_read_impl.constprop.0?[zfs]_[k]
  [ 8] dbuf_read?[zfs]_[k]
  [ 9] dmu_tx_check_ioerr?[zfs]_[k]
  [10] dmu_tx_count_write?[zfs]_[k]
  [11] dmu_tx_hold_write_by_dnode?[zfs]_[k]
  [12] zfs_write?[zfs]_[k]
  [13] zpl_iter_write?[zfs]_[k]
  [14] new_sync_write_[k]
  [15] vfs_write_[k]
  [16] ksys_write_[k]
  [17] __x64_sys_write_[k]
  [18] do_syscall_64_[k]
  [19] entry_SYSCALL_64_after_hwframe_[k]
  [20] write
  [21] sun.nio.ch.FileDispatcherImpl.write0
  [22] sun.nio.ch.FileDispatcherImpl.write
  [23] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [24] sun.nio.ch.IOUtil.write
  [25] sun.nio.ch.IOUtil.write
  [26] sun.nio.ch.FileChannelImpl.write
  [27] java.nio.channels.Channels.writeFullyImpl
  [28] java.nio.channels.Channels.writeFully
  [29] java.nio.channels.Channels$1.write
  [30] java.io.InputStream.transferTo
  [31] java.nio.file.Files.copy
  [32] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [33] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [34] jdk.nio.zipfs.ZipPath.newFileChannel
  [35] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [36] java.nio.channels.FileChannel.open
  [37] java.nio.channels.FileChannel.open
  [38] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [39] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$66.0x0000000800d8bdf0.apply
  [40] cats.effect.IOFiber.$anonfun$8
  [41] cats.effect.IOFiber$$Lambda$629.0x0000000800e9d258.apply
  [42] cats.effect.unsafe.WorkerThread.blockOn
  [43] scala.concurrent.package$.blocking
  [44] cats.effect.IOFiber.runLoop
  [45] cats.effect.IOFiber.execR
  [46] cats.effect.IOFiber.run
  [47] cats.effect.unsafe.WorkerThread.run

--- 401439574 ns (0.04%), 40 samples
  [ 0] memset_[k]
  [ 1] spl_kmem_alloc_impl?[spl]_[k]
  [ 2] spl_kmem_zalloc?[spl]_[k]
  [ 3] dsl_dir_tempreserve_impl.constprop.0?[zfs]_[k]
  [ 4] dsl_dir_tempreserve_space?[zfs]_[k]
  [ 5] dmu_tx_try_assign?[zfs]_[k]
  [ 6] dmu_tx_assign?[zfs]_[k]
  [ 7] zfs_write?[zfs]_[k]
  [ 8] zpl_iter_write?[zfs]_[k]
  [ 9] new_sync_write_[k]
  [10] vfs_write_[k]
  [11] ksys_write_[k]
  [12] __x64_sys_write_[k]
  [13] do_syscall_64_[k]
  [14] entry_SYSCALL_64_after_hwframe_[k]
  [15] write
  [16] sun.nio.ch.FileDispatcherImpl.write0
  [17] sun.nio.ch.FileDispatcherImpl.write
  [18] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [19] sun.nio.ch.IOUtil.write
  [20] sun.nio.ch.IOUtil.write
  [21] sun.nio.ch.FileChannelImpl.write
  [22] java.nio.channels.Channels.writeFullyImpl
  [23] java.nio.channels.Channels.writeFully
  [24] java.nio.channels.Channels$1.write
  [25] java.io.InputStream.transferTo
  [26] java.nio.file.Files.copy
  [27] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [28] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [29] jdk.nio.zipfs.ZipPath.newFileChannel
  [30] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [31] java.nio.channels.FileChannel.open
  [32] java.nio.channels.FileChannel.open
  [33] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [34] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$66.0x0000000800d8bdf0.apply
  [35] cats.effect.IOFiber.$anonfun$8
  [36] cats.effect.IOFiber$$Lambda$629.0x0000000800e9d258.apply
  [37] cats.effect.unsafe.WorkerThread.blockOn
  [38] scala.concurrent.package$.blocking
  [39] cats.effect.IOFiber.runLoop
  [40] cats.effect.IOFiber.execR
  [41] cats.effect.IOFiber.run
  [42] cats.effect.unsafe.WorkerThread.run

--- 401408016 ns (0.04%), 40 samples
  [ 0] kfree_[k]
  [ 1] spl_kmem_free_impl?[spl]_[k]
  [ 2] spl_kmem_free?[spl]_[k]
  [ 3] dmu_tx_destroy?[zfs]_[k]
  [ 4] dmu_tx_commit?[zfs]_[k]
  [ 5] zfs_write?[zfs]_[k]
  [ 6] zpl_iter_write?[zfs]_[k]
  [ 7] new_sync_write_[k]
  [ 8] vfs_write_[k]
  [ 9] ksys_write_[k]
  [10] __x64_sys_write_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] write
  [14] sun.nio.ch.FileDispatcherImpl.write0
  [15] sun.nio.ch.FileDispatcherImpl.write
  [16] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.FileChannelImpl.write
  [20] java.nio.channels.Channels.writeFullyImpl
  [21] java.nio.channels.Channels.writeFully
  [22] java.nio.channels.Channels$1.write
  [23] java.io.InputStream.transferTo
  [24] java.nio.file.Files.copy
  [25] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [26] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [27] jdk.nio.zipfs.ZipPath.newFileChannel
  [28] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [29] java.nio.channels.FileChannel.open
  [30] java.nio.channels.FileChannel.open
  [31] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [32] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$66.0x0000000800d8bdf0.apply
  [33] cats.effect.IOFiber.$anonfun$8
  [34] cats.effect.IOFiber$$Lambda$629.0x0000000800e9d258.apply
  [35] cats.effect.unsafe.WorkerThread.blockOn
  [36] scala.concurrent.package$.blocking
  [37] cats.effect.IOFiber.runLoop
  [38] cats.effect.IOFiber.execR
  [39] cats.effect.IOFiber.run
  [40] cats.effect.unsafe.WorkerThread.run

--- 401165433 ns (0.04%), 40 samples
  [ 0] kfree_[k]
  [ 1] spl_kmem_free_impl?[spl]_[k]
  [ 2] spl_kmem_free?[spl]_[k]
  [ 3] zfs_rangelock_free?[zfs]_[k]
  [ 4] zfs_rangelock_exit?[zfs]_[k]
  [ 5] zfs_write?[zfs]_[k]
  [ 6] zpl_iter_write?[zfs]_[k]
  [ 7] new_sync_write_[k]
  [ 8] vfs_write_[k]
  [ 9] ksys_write_[k]
  [10] __x64_sys_write_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] write
  [14] sun.nio.ch.FileDispatcherImpl.write0
  [15] sun.nio.ch.FileDispatcherImpl.write
  [16] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.FileChannelImpl.write
  [20] java.nio.channels.Channels.writeFullyImpl
  [21] java.nio.channels.Channels.writeFully
  [22] java.nio.channels.Channels$1.write
  [23] java.io.InputStream.transferTo
  [24] java.nio.file.Files.copy
  [25] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [26] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [27] jdk.nio.zipfs.ZipPath.newFileChannel
  [28] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [29] java.nio.channels.FileChannel.open
  [30] java.nio.channels.FileChannel.open
  [31] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [32] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$66.0x0000000800d8bdf0.apply
  [33] cats.effect.IOFiber.$anonfun$8
  [34] cats.effect.IOFiber$$Lambda$629.0x0000000800e9d258.apply
  [35] cats.effect.unsafe.WorkerThread.blockOn
  [36] scala.concurrent.package$.blocking
  [37] cats.effect.IOFiber.runLoop
  [38] cats.effect.IOFiber.execR
  [39] cats.effect.IOFiber.run
  [40] cats.effect.unsafe.WorkerThread.run

--- 400992110 ns (0.04%), 40 samples
  [ 0] __libc_pread64
  [ 1] sun.nio.ch.FileDispatcherImpl.pread0
  [ 2] sun.nio.ch.FileDispatcherImpl.pread
  [ 3] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [ 4] sun.nio.ch.IOUtil.read
  [ 5] sun.nio.ch.IOUtil.read
  [ 6] sun.nio.ch.FileChannelImpl.readInternal
  [ 7] sun.nio.ch.FileChannelImpl.read
  [ 8] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [ 9] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [10] jdk.nio.zipfs.ZipFileSystem$2.fill
  [11] java.util.zip.InflaterInputStream.read
  [12] java.io.InputStream.transferTo
  [13] java.nio.file.Files.copy
  [14] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [15] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [16] jdk.nio.zipfs.ZipPath.newFileChannel
  [17] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [18] java.nio.channels.FileChannel.open
  [19] java.nio.channels.FileChannel.open
  [20] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [21] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$66.0x0000000800d8bdf0.apply
  [22] cats.effect.IOFiber.$anonfun$8
  [23] cats.effect.IOFiber$$Lambda$629.0x0000000800e9d258.apply
  [24] cats.effect.unsafe.WorkerThread.blockOn
  [25] scala.concurrent.package$.blocking
  [26] cats.effect.IOFiber.runLoop
  [27] cats.effect.IOFiber.execR
  [28] cats.effect.IOFiber.run
  [29] cats.effect.unsafe.WorkerThread.run

--- 400549518 ns (0.04%), 40 samples
  [ 0] G1CMTask::drain_local_queue(bool) [clone .part.0] [clone .constprop.1]
  [ 1] G1CMTask::do_marking_step(double, bool, bool)
  [ 2] G1CMConcurrentMarkingTask::work(unsigned int)
  [ 3] GangWorker::loop()
  [ 4] GangWorker::run()
  [ 5] Thread::call_run()
  [ 6] thread_native_entry(Thread*)
  [ 7] start_thread

--- 392302125 ns (0.04%), 39 samples
  [ 0] java.util.concurrent.ConcurrentLinkedQueue.poll
  [ 1] cats.effect.unsafe.ScalQueue.poll
  [ 2] cats.effect.unsafe.WorkerThread.run

--- 391788122 ns (0.04%), 39 samples
  [ 0] fsnotify_insert_event_[k]
  [ 1] inotify_handle_inode_event_[k]
  [ 2] fsnotify_handle_inode_event.isra.0_[k]
  [ 3] send_to_group_[k]
  [ 4] fsnotify_[k]
  [ 5] __fsnotify_parent_[k]
  [ 6] vfs_write_[k]
  [ 7] ksys_write_[k]
  [ 8] __x64_sys_write_[k]
  [ 9] do_syscall_64_[k]
  [10] entry_SYSCALL_64_after_hwframe_[k]
  [11] write
  [12] sun.nio.ch.FileDispatcherImpl.write0
  [13] sun.nio.ch.FileDispatcherImpl.write
  [14] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [15] sun.nio.ch.IOUtil.write
  [16] sun.nio.ch.IOUtil.write
  [17] sun.nio.ch.FileChannelImpl.write
  [18] java.nio.channels.Channels.writeFullyImpl
  [19] java.nio.channels.Channels.writeFully
  [20] java.nio.channels.Channels$1.write
  [21] java.io.InputStream.transferTo
  [22] java.nio.file.Files.copy
  [23] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [24] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [25] jdk.nio.zipfs.ZipPath.newFileChannel
  [26] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [27] java.nio.channels.FileChannel.open
  [28] java.nio.channels.FileChannel.open
  [29] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [30] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$66.0x0000000800d8bdf0.apply
  [31] cats.effect.IOFiber.$anonfun$8
  [32] cats.effect.IOFiber$$Lambda$629.0x0000000800e9d258.apply
  [33] cats.effect.unsafe.WorkerThread.blockOn
  [34] scala.concurrent.package$.blocking
  [35] cats.effect.IOFiber.runLoop
  [36] cats.effect.IOFiber.execR
  [37] cats.effect.IOFiber.run
  [38] cats.effect.unsafe.WorkerThread.run

--- 391580741 ns (0.04%), 39 samples
  [ 0] __pthread_self
  [ 1] sun.nio.ch.NativeThread.current
  [ 2] sun.nio.ch.NativeThreadSet.add
  [ 3] sun.nio.ch.FileChannelImpl.write
  [ 4] java.nio.channels.Channels.writeFullyImpl
  [ 5] java.nio.channels.Channels.writeFully
  [ 6] java.nio.channels.Channels$1.write
  [ 7] java.io.InputStream.transferTo
  [ 8] java.nio.file.Files.copy
  [ 9] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [10] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [11] jdk.nio.zipfs.ZipPath.newFileChannel
  [12] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [13] java.nio.channels.FileChannel.open
  [14] java.nio.channels.FileChannel.open
  [15] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [16] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$66.0x0000000800d8bdf0.apply
  [17] cats.effect.IOFiber.$anonfun$8
  [18] cats.effect.IOFiber$$Lambda$629.0x0000000800e9d258.apply
  [19] cats.effect.unsafe.WorkerThread.blockOn
  [20] scala.concurrent.package$.blocking
  [21] cats.effect.IOFiber.runLoop
  [22] cats.effect.IOFiber.execR
  [23] cats.effect.IOFiber.run
  [24] cats.effect.unsafe.WorkerThread.run

--- 391480950 ns (0.04%), 39 samples
  [ 0] dbuf_rele_and_unlock?[zfs]_[k]
  [ 1] dbuf_rele?[zfs]_[k]
  [ 2] dmu_buf_rele_array?[zfs]_[k]
  [ 3] dmu_read_uio_dnode?[zfs]_[k]
  [ 4] dmu_read_uio_dbuf?[zfs]_[k]
  [ 5] mappedread?[zfs]_[k]
  [ 6] zfs_read?[zfs]_[k]
  [ 7] zpl_iter_read?[zfs]_[k]
  [ 8] new_sync_read_[k]
  [ 9] vfs_read_[k]
  [10] __x64_sys_pread64_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] __libc_pread64
  [14] sun.nio.ch.FileDispatcherImpl.pread0
  [15] sun.nio.ch.FileDispatcherImpl.pread
  [16] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [17] sun.nio.ch.IOUtil.read
  [18] sun.nio.ch.IOUtil.read
  [19] sun.nio.ch.FileChannelImpl.readInternal
  [20] sun.nio.ch.FileChannelImpl.read
  [21] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [22] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [23] jdk.nio.zipfs.ZipFileSystem$2.fill
  [24] java.util.zip.InflaterInputStream.read
  [25] java.io.InputStream.transferTo
  [26] java.nio.file.Files.copy
  [27] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [28] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [29] jdk.nio.zipfs.ZipPath.newFileChannel
  [30] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [31] java.nio.channels.FileChannel.open
  [32] java.nio.channels.FileChannel.open
  [33] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [34] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$66.0x0000000800d8bdf0.apply
  [35] cats.effect.IOFiber.$anonfun$8
  [36] cats.effect.IOFiber$$Lambda$629.0x0000000800e9d258.apply
  [37] cats.effect.unsafe.WorkerThread.blockOn
  [38] scala.concurrent.package$.blocking
  [39] cats.effect.IOFiber.runLoop
  [40] cats.effect.IOFiber.execR
  [41] cats.effect.IOFiber.run
  [42] cats.effect.unsafe.WorkerThread.run

--- 391093751 ns (0.04%), 39 samples
  [ 0] CollectedHeap::supports_object_pinning() const
  [ 1] Java_java_util_zip_Inflater_inflateBytesBytes
  [ 2] java.util.zip.Inflater.inflateBytesBytes
  [ 3] java.util.zip.Inflater.inflate
  [ 4] java.util.zip.InflaterInputStream.read
  [ 5] java.io.InputStream.transferTo
  [ 6] java.nio.file.Files.copy
  [ 7] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [ 8] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [ 9] jdk.nio.zipfs.ZipPath.newFileChannel
  [10] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [11] java.nio.channels.FileChannel.open
  [12] java.nio.channels.FileChannel.open
  [13] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [14] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$66.0x0000000800d8bdf0.apply
  [15] cats.effect.IOFiber.$anonfun$8
  [16] cats.effect.IOFiber$$Lambda$629.0x0000000800e9d258.apply
  [17] cats.effect.unsafe.WorkerThread.blockOn
  [18] scala.concurrent.package$.blocking
  [19] cats.effect.IOFiber.runLoop
  [20] cats.effect.IOFiber.execR
  [21] cats.effect.IOFiber.run
  [22] cats.effect.unsafe.WorkerThread.run

--- 381742643 ns (0.04%), 38 samples
  [ 0] dbuf_find?[zfs]_[k]
  [ 1] dbuf_hold_impl?[zfs]_[k]
  [ 2] dbuf_hold_level?[zfs]_[k]
  [ 3] dmu_tx_check_ioerr?[zfs]_[k]
  [ 4] dmu_tx_count_write?[zfs]_[k]
  [ 5] dmu_tx_hold_write_by_dnode?[zfs]_[k]
  [ 6] zfs_write?[zfs]_[k]
  [ 7] zpl_iter_write?[zfs]_[k]
  [ 8] new_sync_write_[k]
  [ 9] vfs_write_[k]
  [10] ksys_write_[k]
  [11] __x64_sys_write_[k]
  [12] do_syscall_64_[k]
  [13] entry_SYSCALL_64_after_hwframe_[k]
  [14] write
  [15] sun.nio.ch.FileDispatcherImpl.write0
  [16] sun.nio.ch.FileDispatcherImpl.write
  [17] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.IOUtil.write
  [20] sun.nio.ch.FileChannelImpl.write
  [21] java.nio.channels.Channels.writeFullyImpl
  [22] java.nio.channels.Channels.writeFully
  [23] java.nio.channels.Channels$1.write
  [24] java.io.InputStream.transferTo
  [25] java.nio.file.Files.copy
  [26] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [27] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [28] jdk.nio.zipfs.ZipPath.newFileChannel
  [29] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [30] java.nio.channels.FileChannel.open
  [31] java.nio.channels.FileChannel.open
  [32] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [33] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$66.0x0000000800d8bdf0.apply
  [34] cats.effect.IOFiber.$anonfun$8
  [35] cats.effect.IOFiber$$Lambda$629.0x0000000800e9d258.apply
  [36] cats.effect.unsafe.WorkerThread.blockOn
  [37] scala.concurrent.package$.blocking
  [38] cats.effect.IOFiber.runLoop
  [39] cats.effect.IOFiber.execR
  [40] cats.effect.IOFiber.run
  [41] cats.effect.unsafe.WorkerThread.run

          ns  percent  samples  top
  ----------  -------  -------  ---
387149647982   37.89%    38614  /usr/lib/x86_64-linux-gnu/libz.so.1.2.11
 52334714513    5.12%     5217  _raw_spin_unlock_irqrestore_[k]
 29832221291    2.92%     2974  __memset_avx2_unaligned_erms
 25685362953    2.51%     2559  copy_user_generic_string_[k]
 22368651609    2.19%     2231  inflate
 21280049135    2.08%     2120  memset_[k]
 16838297190    1.65%     1679  java.lang.System.arraycopy
 16476242788    1.61%     1644  java.util.Arrays.copyOfRange
 12980984645    1.27%     1292  __memcpy_sse2_unaligned_erms
 11321470580    1.11%     1128  mutex_lock_[k]
 10991123868    1.08%     1096  jlong_disjoint_arraycopy
  9712362103    0.95%      969  java.lang.StringCoding.hasNegatives
  8958262826    0.88%      893  _raw_spin_lock_[k]
  8317243616    0.81%      829  mutex_unlock_[k]
  7482498936    0.73%      746  refill_stock_[k]
  7079115972    0.69%      705  find_vmap_area_[k]
  7070188400    0.69%      705  clear_page_rep_[k]
  6515859221    0.64%      649  __kmalloc_node_[k]
  5751134479    0.56%      573  fsnotify_[k]
  5492819509    0.54%      547  kfree_[k]
  5196567598    0.51%      518  __memmove_avx_unaligned_erms
  5005690381    0.49%      499  refill_obj_stock_[k]
  4889506736    0.48%      486  send_to_group_[k]
  4266417229    0.42%      424  percpu_counter_add_batch_[k]
  4180423626    0.41%      417  native_queued_spin_lock_slowpath.part.0_[k]
  4070938969    0.40%      406  page_counter_try_charge_[k]
  4035718914    0.40%      402  kmem_cache_free_[k]
  3627626206    0.36%      362  void OopOopIterateDispatch<G1CMOopClosure>::Table::oop_oop_iterate<InstanceKlass, narrowOop>(G1CMOopClosure*, oopDesc*, Klass*)
  3582193330    0.35%      357  memcg_slab_post_alloc_hook_[k]
  3549850418    0.35%      354  java.nio.HeapByteBuffer.<init>
  3462331620    0.34%      345  zio_create?[zfs]_[k]
  3389044666    0.33%      338  do_user_addr_fault_[k]
  3102717152    0.30%      309  kmem_cache_alloc_[k]
  3020550479    0.30%      301  try_charge_memcg_[k]
  2963561811    0.29%      295  zfs_write?[zfs]_[k]
  2899933535    0.28%      289  inotify_handle_inode_event_[k]
  2617274121    0.26%      261  __rcu_read_lock_[k]
  2478451821    0.24%      247  _raw_spin_unlock_[k]
  2376262148    0.23%      237  __get_obj_cgroup_from_memcg_[k]
  2347919848    0.23%      234  memmove_[k]
  2298599259    0.22%      229  sa_attr_op?[zfs]_[k]
  2217983386    0.22%      221  zio_wait?[zfs]_[k]
  2196760053    0.22%      219  syscall_enter_from_user_mode_[k]
  2152744763    0.21%      213  __schedule_[k]
  2126022798    0.21%      212  mod_memcg_state_[k]
  2106726543    0.21%      210  dsl_dir_tempreserve_impl.constprop.0?[zfs]_[k]
  2057861593    0.20%      205  dbuf_find?[zfs]_[k]
  2035156799    0.20%      203  void OopOopIterateDispatch<G1CMOopClosure>::Table::oop_oop_iterate<ObjArrayKlass, narrowOop>(G1CMOopClosure*, oopDesc*, Klass*)
  2006709169    0.20%      200  __kmalloc_[k]
  1976432222    0.19%      197  zrl_add_impl?[zfs]_[k]
  1967346664    0.19%      196  __rcu_read_unlock_[k]
  1936931972    0.19%      193  kmalloc_slab_[k]
  1926800013    0.19%      192  __list_del_entry?[zfs]_[k]
  1925814445    0.19%      192  strcpy_[k]
  1905691871    0.19%      190  dmu_buf_hold_array_by_dnode?[zfs]_[k]
  1845228253    0.18%      184  vfs_write_[k]
  1835855914    0.18%      183  __cond_resched_[k]
  1796056566    0.18%      179  write
  1787612104    0.17%      178  zil_aitx_compare?[zfs]_[k]
  1733642762    0.17%      173  G1RebuildRemSetTask::G1RebuildRemSetHeapRegionClosure::do_heap_region(HeapRegion*)
  1726145456    0.17%      172  down_read_[k]
  1715720091    0.17%      171  spl_mutex_set_owner?[zfs]_[k]
  1685226131    0.16%      168  jni_GetPrimitiveArrayCritical
  1655902978    0.16%      165  list_head?[zfs]_[k]
  1625738493    0.16%      162  spl_kmem_cache_alloc?[spl]_[k]
  1595557664    0.16%      159  rmqueue_pcplist.constprop.0_[k]
  1586350531    0.16%      158  dbuf_hold_impl?[zfs]_[k]
  1584766550    0.16%      158  dmu_tx_try_assign?[zfs]_[k]
  1526680680    0.15%      152  arc_buf_access?[zfs]_[k]
  1525090740    0.15%      152  zio_done?[zfs]_[k]
  1506422372    0.15%      150  spl_mutex_clear_owner?[zfs]_[k]
  1485783339    0.15%      148  dbuf_rele_and_unlock?[zfs]_[k]
  1463778235    0.14%      146  void OopOopIterateDispatch<G1RebuildRemSetClosure>::Table::oop_oop_iterate<InstanceKlass, narrowOop>(G1RebuildRemSetClosure*, oopDesc*, Klass*)
  1445774170    0.14%      144  fsnotify_insert_event_[k]
  1444868000    0.14%      144  __fget_light_[k]
  1435353585    0.14%      143  ___slab_alloc_[k]
  1424390417    0.14%      142  sun.nio.ch.FileDispatcherImpl.write0
  1415552969    0.14%      141  dbuf_read?[zfs]_[k]
  1395343525    0.14%      139  read_tsc_[k]
  1355750002    0.13%      135  dmu_zfetch_prepare?[zfs]_[k]
  1344873781    0.13%      134  apparmor_file_permission_[k]
  1335240300    0.13%      133  zfs_log_write?[zfs]_[k]
  1314719456    0.13%      131  obj_cgroup_charge_[k]
  1274288472    0.12%      127  up_read_[k]
  1257798068    0.12%      125  free_unref_page_list_[k]
  1254074130    0.12%      125  should_failslab_[k]
  1244034573    0.12%      124  zrl_remove?[zfs]_[k]
  1213676224    0.12%      121  inotify_merge_[k]
  1210547480    0.12%      121  CompiledMethod::cleanup_inline_caches_impl(bool, bool)
  1204149557    0.12%      120  memcg_slab_free_hook_[k]
  1163909578    0.11%      116  avl_find?[zavl]_[k]
  1163730835    0.11%      116  list_del?[zfs]_[k]
  1144445264    0.11%      114  __cv_broadcast?[spl]_[k]
  1133708682    0.11%      113  __fsnotify_parent_[k]
  1123460169    0.11%      112  dsl_dir_phys?[zfs]_[k]
  1093638771    0.11%      109  cityhash4?[zcommon]_[k]
  1093457583    0.11%      109  __list_add?[zfs]_[k]
  1083872576    0.11%      108  ktime_get_raw_ts64_[k]
  1063472073    0.10%      106  zio_ready?[zfs]_[k]
  1063217683    0.10%      106  __x86_return_thunk_[k]
  1043340507    0.10%      104  cats.effect.IOFiber.runLoop
  1042665886    0.10%      104  jni_ReleasePrimitiveArrayCritical
  1042190317    0.10%      104  void OopOopIterateDispatch<G1CMOopClosure>::Table::oop_oop_iterate<InstanceMirrorKlass, narrowOop>(G1CMOopClosure*, oopDesc*, Klass*)
  1033771002    0.10%      103  G1ParScanThreadState::trim_queue_to_threshold(unsigned int)
  1014602471    0.10%      101  zio_wait_for_children?[zfs]_[k]
   984266790    0.10%       98  dbuf_find_dirty_lte?[zfs]_[k]
   964805329    0.09%       96  dbuf_read_verify_dnode_crypt?[zfs]_[k]
   962972181    0.09%       96  zfs_rangelock_exit?[zfs]_[k]
   960224733    0.09%       96  nmethod::oops_do(OopClosure*, bool)
   942145484    0.09%       94  jbyte_disjoint_arraycopy
   933604222    0.09%       93  spl_kmem_cache_free?[spl]_[k]
   933061591    0.09%       93  RW_WRITE_HELD?[zfs]_[k]
   932400065    0.09%       93  get_obj_cgroup_from_current_[k]
   923710125    0.09%       92  arch_atomic64_sub_return.constprop.0?[zfs]_[k]
   923582176    0.09%       92  java.util.zip.Inflater.inflateBytesBytes
   913619941    0.09%       91  is_vmalloc_addr_[k]
   892987378    0.09%       89  lockref_get_not_zero_[k]
   892590323    0.09%       89  __handle_mm_fault_[k]
   883367627    0.09%       88  fault_in_readable_[k]
   883060412    0.09%       88  java.util.zip.Inflater.inflate
   872925545    0.09%       87  itable stub
   863709963    0.08%       86  spl_kmem_alloc_impl?[spl]_[k]
   862971876    0.08%       86  arch_atomic64_read?[zfs]_[k]
   843729157    0.08%       84  kmem_flags_convert?[spl]_[k]
   843666937    0.08%       84  list_empty?[zfs]_[k]
   842429700    0.08%       84  zpl_iter_write?[zfs]_[k]
   832815190    0.08%       83  vdev_stat_update?[zfs]_[k]
   824521092    0.08%       82  dmu_tx_hold_sa?[zfs]_[k]
   813633747    0.08%       81  dmu_tx_commit?[zfs]_[k]
   802661585    0.08%       80  list_create.constprop.0?[zfs]_[k]
   801424577    0.08%       80  G1CMTask::do_marking_step(double, bool, bool)
   783367543    0.08%       78  __list_del?[zfs]_[k]
   782587269    0.08%       78  dmu_tx_count_write?[zfs]_[k]
   781232869    0.08%       78  void G1CMTask::process_grey_task_entry<true>(G1TaskQueueEntry)
   774863436    0.08%       77  java.util.concurrent.ConcurrentLinkedQueue.poll
   773479623    0.08%       77  list_is_empty?[zfs]_[k]
   772400772    0.08%       77  dsl_dir_tempreserve_clear?[zfs]_[k]
   762191548    0.07%       76  __libc_pread64
   752624027    0.07%       75  java.nio.Buffer.position
   743024666    0.07%       74  propagate_protected_usage_[k]
   731971907    0.07%       73  mod_objcg_state_[k]
   722531503    0.07%       72  arc_tempreserve_space?[zfs]_[k]
   719694725    0.07%       72  zap_pte_range_[k]
   702494726    0.07%       70  sa_get_db?[zfs]_[k]
   702340460    0.07%       70  dsl_dir_tempreserve_space?[zfs]_[k]
   693564513    0.07%       69  INIT_LIST_HEAD?[zfs]_[k]
   692770141    0.07%       69  Java_java_util_zip_Inflater_inflateBytesBytes
   690458745    0.07%       69  HeapRegionManager::par_iterate(HeapRegionClosure*, HeapRegionClaimer*, unsigned int) const
   682041242    0.07%       68  __pthread_self
   652098032    0.06%       65  dmu_object_size_from_db?[zfs]_[k]
   643181455    0.06%       64  __wake_up_common_lock_[k]
   641465280    0.06%       64  charge_memcg_[k]
   641426621    0.06%       64  consume_obj_stock_[k]
   641347183    0.06%       64  void G1RebuildRemSetClosure::do_oop_work<narrowOop>(narrowOop*)
   631966251    0.06%       63  cats.effect.tracing.RingBuffer.push
   621833505    0.06%       62  list_destroy?[zfs]_[k]
   613323581    0.06%       61  __srcu_read_lock_[k]
   612638641    0.06%       61  zfs_uiomove_iter?[zfs]_[k]
   612249640    0.06%       61  list_remove_head?[zfs]_[k]
   611838335    0.06%       61  avl_remove?[zavl]_[k]
   602495863    0.06%       60  __memcpy_avx_unaligned
   592049609    0.06%       59  zio_walk_parents?[zfs]_[k]
   591354046    0.06%       59  sun.nio.ch.NativeThread.current
   582013625    0.06%       58  dmu_write_uio_dnode?[zfs]_[k]
   581840973    0.06%       58  sun.nio.ch.NativeThreadSet.add
   581381702    0.06%       58  do_anonymous_page_[k]
   573080283    0.06%       57  spl_kmem_free?[spl]_[k]
   572833909    0.06%       57  dmu_write_uio_dbuf?[zfs]_[k]
   572449278    0.06%       57  spl_fstrans_check?[spl]_[k]
   572385092    0.06%       57  arc_is_encrypted?[zfs]_[k]
   571603656    0.06%       57  AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<548964ul, G1BarrierSet>, (AccessInternal::BarrierType)2, 548964ul>::oop_access_barrier(void*)
   562605414    0.06%       56  txg_list_add?[zfs]_[k]
   562117950    0.06%       56  multilist_link_active?[zfs]_[k]
   561944923    0.06%       56  fsnotify_handle_inode_event.isra.0_[k]
   561552960    0.05%       56  CollectedHeap::supports_object_pinning() const
   551925390    0.05%       55  sun.nio.ch.Util$BufferCache.offerFirst
   551319866    0.05%       55  dbuf_redirty?[zfs]_[k]
   551274383    0.05%       55  mutex_spin_on_owner_[k]
   541747109    0.05%       54  cats.effect.IOFiber.succeeded
   531359824    0.05%       53  _copy_from_iter_[k]
   522158819    0.05%       52  zil_itx_assign?[zfs]_[k]
   522085179    0.05%       52  cats.effect.unsafe.WorkerThread.run
   522073894    0.05%       52  wmsum_add?[zfs]_[k]
   521879373    0.05%       52  void OopOopIterateBackwardsDispatch<G1ScanEvacuatedObjClosure>::Table::oop_oop_iterate_backwards<InstanceKlass, narrowOop>(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*)
   511967918    0.05%       51  list_insert_tail?[zfs]_[k]
   491902662    0.05%       49  _copy_to_iter_[k]
   491802326    0.05%       49  __filemap_get_folio_[k]
   491626460    0.05%       49  dbuf_hold_level?[zfs]_[k]
   491614629    0.05%       49  sa_handle_object?[zfs]_[k]
   490165147    0.05%       49  void WeakProcessor::Task::work<G1STWIsAliveClosure, G1KeepAliveClosure>(unsigned int, G1STWIsAliveClosure*, G1KeepAliveClosure*)
   482015896    0.05%       48  metaslab_class_get_dspace?[zfs]_[k]
   481818396    0.05%       48  zfs_rangelock_cb?[zfs]_[k]
   481780518    0.05%       48  dbuf_compare?[zfs]_[k]
   481669898    0.05%       48  zfs_read?[zfs]_[k]
   481355940    0.05%       48  consume_stock_[k]
   471402759    0.05%       47  rwsem_spin_on_owner_[k]
   471370196    0.05%       47  spl_kmem_free_impl?[spl]_[k]
   471267763    0.05%       47  dmu_buf_rele_array?[zfs]_[k]
   471245491    0.05%       47  blk_cgroup_congested_[k]
   461775517    0.05%       46  zfs_tstamp_update_setup?[zfs]_[k]
Async profiler results:
  profile/com.scalamandra.ZipBench.streamFoldChunks-Throughput-fileName-over64kb.txt/summary-cpu.txt


# JMH version: 1.32
# VM version: JDK 17.0.6, Java HotSpot(TM) 64-Bit Server VM, 17.0.6+9-LTS-jvmci-22.3-b11
# VM invoker: /home/rajven/graal/java17/bin/java
# VM options: -XX:ThreadPriorityPolicy=1 -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCIProduct -XX:JVMCIThreadsPerNativeLibraryRuntime=1 -XX:-UnlockExperimentalVMOptions
# Blackhole mode: full + dont-inline hint
# Warmup: 20 iterations, 10 s each
# Measurement: 20 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.scalamandra.ZipBench.streamFoldStrings
# Parameters: (fileName = under64kb.txt)

# Run progress: 80,00% complete, ETA 00:13:29
# Fork: 1 of 1
# Preparing profilers: AsyncProfiler 
Java HotSpot(TM) 64-Bit Server VM warning: -XX:ThreadPriorityPolicy=1 may require system level permission, e.g., being the root user. If the necessary permission is not possessed, changes to priority will be silently ignored.
# Warmup Iteration   1: 1336,044 ops/s
# Warmup Iteration   2: 1648,313 ops/s
# Warmup Iteration   3: 1848,121 ops/s
# Warmup Iteration   4: 2132,108 ops/s
# Warmup Iteration   5: 2087,204 ops/s
# Warmup Iteration   6: 2095,620 ops/s
# Warmup Iteration   7: 2084,141 ops/s
# Warmup Iteration   8: 1993,799 ops/s
# Warmup Iteration   9: 2144,534 ops/s
# Warmup Iteration  10: 2056,948 ops/s
# Warmup Iteration  11: 2119,094 ops/s
# Warmup Iteration  12: 2149,753 ops/s
# Warmup Iteration  13: 2035,940 ops/s
# Warmup Iteration  14: 2133,843 ops/s
# Warmup Iteration  15: 2173,628 ops/s
# Warmup Iteration  16: 2160,323 ops/s
# Warmup Iteration  17: 2156,289 ops/s
# Warmup Iteration  18: 2077,737 ops/s
# Warmup Iteration  19: 2125,957 ops/s
# Warmup Iteration  20: 2177,543 ops/s
Iteration   1: 2114,868 ops/s
Iteration   2: 2136,512 ops/s
Iteration   3: 2083,207 ops/s
Iteration   4: 2115,352 ops/s
Iteration   5: 2120,917 ops/s
Iteration   6: 2103,291 ops/s
Iteration   7: 2109,843 ops/s
Iteration   8: 2127,776 ops/s
Iteration   9: 2154,397 ops/s
Iteration  10: 2062,637 ops/s
Iteration  11: 2108,483 ops/s
Iteration  12: 2183,508 ops/s
Iteration  13: 2132,566 ops/s
Iteration  14: 2162,117 ops/s
Iteration  15: 2153,499 ops/s
Iteration  16: 2139,763 ops/s
Iteration  17: 2140,540 ops/s
Iteration  18: 2216,381 ops/s
Iteration  19: 2169,306 ops/s
Iteration  20: [WARN] Unknown argument: summary
2176,779 ops/s
                 ·async: (text only)

# Processing profiler results: AsyncProfiler 


Result "com.scalamandra.ZipBench.streamFoldStrings":
  2135,587 ±(99.9%) 31,315 ops/s [Average]
  (min, avg, max) = (2062,637, 2135,587, 2216,381), stdev = 36,062
  CI (99.9%): [2104,272, 2166,902] (assumes normal distribution)

Secondary result "com.scalamandra.ZipBench.streamFoldStrings:·async":
--- Execution profile ---
Total samples       : 73231
GC_active           : 48 (0.07%)
unknown_Java        : 719 (0.98%)

--- 50334160905 ns (6.86%), 5023 samples
  [ 0] /usr/lib/x86_64-linux-gnu/libz.so.1.2.11
  [ 1] java.util.zip.Inflater.inflateBytesBytes
  [ 2] java.util.zip.Inflater.inflate
  [ 3] java.util.zip.InflaterInputStream.read
  [ 4] java.io.InputStream.transferTo
  [ 5] java.nio.file.Files.copy
  [ 6] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [ 7] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [ 8] jdk.nio.zipfs.ZipPath.newFileChannel
  [ 9] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [10] java.nio.channels.FileChannel.open
  [11] java.nio.channels.FileChannel.open
  [12] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [13] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$63.0x0000000800d35a20.apply
  [14] cats.effect.IOFiber.$anonfun$8
  [15] cats.effect.IOFiber$$Lambda$758.0x0000000800ec4c40.apply
  [16] cats.effect.unsafe.WorkerThread.blockOn
  [17] scala.concurrent.package$.blocking
  [18] cats.effect.IOFiber.runLoop
  [19] cats.effect.IOFiber.execR
  [20] cats.effect.IOFiber.run
  [21] cats.effect.unsafe.WorkerThread.run

--- 29119642322 ns (3.97%), 2907 samples
  [ 0] /usr/lib/x86_64-linux-gnu/libz.so.1.2.11
  [ 1] [unknown]
  [ 2] java.util.zip.Inflater.inflateBytesBytes
  [ 3] java.util.zip.Inflater.inflate
  [ 4] java.util.zip.InflaterInputStream.read
  [ 5] java.io.InputStream.transferTo
  [ 6] java.nio.file.Files.copy
  [ 7] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [ 8] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [ 9] jdk.nio.zipfs.ZipPath.newFileChannel
  [10] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [11] java.nio.channels.FileChannel.open
  [12] java.nio.channels.FileChannel.open
  [13] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [14] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$63.0x0000000800d35a20.apply
  [15] cats.effect.IOFiber.$anonfun$8
  [16] cats.effect.IOFiber$$Lambda$758.0x0000000800ec4c40.apply
  [17] cats.effect.unsafe.WorkerThread.blockOn
  [18] scala.concurrent.package$.blocking
  [19] cats.effect.IOFiber.runLoop
  [20] cats.effect.IOFiber.execR
  [21] cats.effect.IOFiber.run
  [22] cats.effect.unsafe.WorkerThread.run

--- 27989497268 ns (3.81%), 2794 samples
  [ 0] /usr/lib/x86_64-linux-gnu/libz.so.1.2.11
  [ 1] java.util.zip.Inflater.inflateBytesBytes
  [ 2] java.util.zip.Inflater.inflate
  [ 3] java.util.zip.InflaterInputStream.read
  [ 4] java.io.InputStream.transferTo
  [ 5] java.nio.file.Files.copy
  [ 6] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [ 7] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [ 8] jdk.nio.zipfs.ZipPath.newFileChannel
  [ 9] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [10] java.nio.channels.FileChannel.open
  [11] java.nio.channels.FileChannel.open
  [12] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [13] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$63.0x0000000800d35a20.apply
  [14] cats.effect.IOFiber.$anonfun$8
  [15] cats.effect.IOFiber$$Lambda$758.0x0000000800ec4c40.apply
  [16] cats.effect.unsafe.WorkerThread.blockOn
  [17] scala.concurrent.package$.blocking
  [18] cats.effect.IOFiber.runLoop
  [19] cats.effect.IOFiber.execR
  [20] cats.effect.IOFiber.run
  [21] cats.effect.unsafe.WorkerThread.run

--- 15802820252 ns (2.15%), 1578 samples
  [ 0] /usr/lib/x86_64-linux-gnu/libz.so.1.2.11
  [ 1] [unknown]
  [ 2] java.util.zip.Inflater.inflateBytesBytes
  [ 3] java.util.zip.Inflater.inflate
  [ 4] java.util.zip.InflaterInputStream.read
  [ 5] java.io.InputStream.transferTo
  [ 6] java.nio.file.Files.copy
  [ 7] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [ 8] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [ 9] jdk.nio.zipfs.ZipPath.newFileChannel
  [10] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [11] java.nio.channels.FileChannel.open
  [12] java.nio.channels.FileChannel.open
  [13] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [14] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$63.0x0000000800d35a20.apply
  [15] cats.effect.IOFiber.$anonfun$8
  [16] cats.effect.IOFiber$$Lambda$758.0x0000000800ec4c40.apply
  [17] cats.effect.unsafe.WorkerThread.blockOn
  [18] scala.concurrent.package$.blocking
  [19] cats.effect.IOFiber.runLoop
  [20] cats.effect.IOFiber.execR
  [21] cats.effect.IOFiber.run
  [22] cats.effect.unsafe.WorkerThread.run

--- 9210920493 ns (1.25%), 919 samples
  [ 0] rwsem_spin_on_owner_[k]
  [ 1] rwsem_optimistic_spin_[k]
  [ 2] rwsem_down_write_slowpath_[k]
  [ 3] down_write_[k]
  [ 4] do_unlinkat_[k]
  [ 5] __x64_sys_unlink_[k]
  [ 6] do_syscall_64_[k]
  [ 7] entry_SYSCALL_64_after_hwframe_[k]
  [ 8] __GI_unlink
  [ 9] sun.nio.fs.UnixNativeDispatcher.unlink0
  [10] sun.nio.fs.UnixNativeDispatcher.unlink
  [11] sun.nio.fs.UnixFileSystemProvider.implDelete
  [12] sun.nio.fs.AbstractFileSystemProvider.deleteIfExists
  [13] java.nio.file.Files.deleteIfExists
  [14] java.nio.file.Files.copy
  [15] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [16] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [17] jdk.nio.zipfs.ZipPath.newFileChannel
  [18] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [19] java.nio.channels.FileChannel.open
  [20] java.nio.channels.FileChannel.open
  [21] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [22] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$63.0x0000000800d35a20.apply
  [23] cats.effect.IOFiber.$anonfun$8
  [24] cats.effect.IOFiber$$Lambda$758.0x0000000800ec4c40.apply
  [25] cats.effect.unsafe.WorkerThread.blockOn
  [26] scala.concurrent.package$.blocking
  [27] cats.effect.IOFiber.runLoop
  [28] cats.effect.IOFiber.execR
  [29] cats.effect.IOFiber.run
  [30] cats.effect.unsafe.WorkerThread.run

--- 8843796846 ns (1.20%), 882 samples
  [ 0] _raw_spin_unlock_irqrestore_[k]
  [ 1] __wake_up_common_lock_[k]
  [ 2] __wake_up_[k]
  [ 3] fsnotify_insert_event_[k]
  [ 4] inotify_handle_inode_event_[k]
  [ 5] fsnotify_handle_inode_event.isra.0_[k]
  [ 6] send_to_group_[k]
  [ 7] fsnotify_[k]
  [ 8] __fsnotify_parent_[k]
  [ 9] vfs_write_[k]
  [10] ksys_write_[k]
  [11] __x64_sys_write_[k]
  [12] do_syscall_64_[k]
  [13] entry_SYSCALL_64_after_hwframe_[k]
  [14] write
  [15] sun.nio.ch.FileDispatcherImpl.write0
  [16] sun.nio.ch.FileDispatcherImpl.write
  [17] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.IOUtil.write
  [20] sun.nio.ch.FileChannelImpl.write
  [21] java.nio.channels.Channels.writeFullyImpl
  [22] java.nio.channels.Channels.writeFully
  [23] java.nio.channels.Channels$1.write
  [24] java.io.InputStream.transferTo
  [25] java.nio.file.Files.copy
  [26] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [27] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [28] jdk.nio.zipfs.ZipPath.newFileChannel
  [29] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [30] java.nio.channels.FileChannel.open
  [31] java.nio.channels.FileChannel.open
  [32] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [33] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$63.0x0000000800d35a20.apply
  [34] cats.effect.IOFiber.$anonfun$8
  [35] cats.effect.IOFiber$$Lambda$758.0x0000000800ec4c40.apply
  [36] cats.effect.unsafe.WorkerThread.blockOn
  [37] scala.concurrent.package$.blocking
  [38] cats.effect.IOFiber.runLoop
  [39] cats.effect.IOFiber.execR
  [40] cats.effect.IOFiber.run
  [41] cats.effect.unsafe.WorkerThread.run

--- 8277038752 ns (1.13%), 826 samples
  [ 0] rwsem_spin_on_owner_[k]
  [ 1] rwsem_optimistic_spin_[k]
  [ 2] rwsem_down_write_slowpath_[k]
  [ 3] down_write_[k]
  [ 4] open_last_lookups_[k]
  [ 5] path_openat_[k]
  [ 6] do_filp_open_[k]
  [ 7] do_sys_openat2_[k]
  [ 8] __x64_sys_openat_[k]
  [ 9] do_syscall_64_[k]
  [10] entry_SYSCALL_64_after_hwframe_[k]
  [11] __open64
  [12] [unknown]
  [13] sun.nio.fs.UnixNativeDispatcher.open0
  [14] sun.nio.fs.UnixNativeDispatcher.open
  [15] sun.nio.fs.UnixChannelFactory.open
  [16] sun.nio.fs.UnixChannelFactory.newFileChannel
  [17] sun.nio.fs.UnixChannelFactory.newFileChannel
  [18] sun.nio.fs.UnixFileSystemProvider.newByteChannel
  [19] java.nio.file.spi.FileSystemProvider.newOutputStream
  [20] java.nio.file.Files.newOutputStream
  [21] java.nio.file.Files.copy
  [22] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [23] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [24] jdk.nio.zipfs.ZipPath.newFileChannel
  [25] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [26] java.nio.channels.FileChannel.open
  [27] java.nio.channels.FileChannel.open
  [28] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [29] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$63.0x0000000800d35a20.apply
  [30] cats.effect.IOFiber.$anonfun$8
  [31] cats.effect.IOFiber$$Lambda$758.0x0000000800ec4c40.apply
  [32] cats.effect.unsafe.WorkerThread.blockOn
  [33] scala.concurrent.package$.blocking
  [34] cats.effect.IOFiber.runLoop
  [35] cats.effect.IOFiber.execR
  [36] cats.effect.IOFiber.run
  [37] cats.effect.unsafe.WorkerThread.run

--- 7836111892 ns (1.07%), 782 samples
  [ 0] rwsem_spin_on_owner_[k]
  [ 1] rwsem_optimistic_spin_[k]
  [ 2] rwsem_down_write_slowpath_[k]
  [ 3] down_write_[k]
  [ 4] open_last_lookups_[k]
  [ 5] path_openat_[k]
  [ 6] do_filp_open_[k]
  [ 7] do_sys_openat2_[k]
  [ 8] __x64_sys_openat_[k]
  [ 9] do_syscall_64_[k]
  [10] entry_SYSCALL_64_after_hwframe_[k]
  [11] __open64
  [12] [unknown]
  [13] sun.nio.fs.UnixNativeDispatcher.open0
  [14] sun.nio.fs.UnixNativeDispatcher.open
  [15] sun.nio.fs.UnixChannelFactory.open
  [16] sun.nio.fs.UnixChannelFactory.newFileChannel
  [17] sun.nio.fs.UnixChannelFactory.newFileChannel
  [18] sun.nio.fs.UnixFileSystemProvider.newByteChannel
  [19] java.nio.file.Files.newByteChannel
  [20] java.nio.file.Files.createFile
  [21] java.nio.file.TempFileHelper.create
  [22] java.nio.file.TempFileHelper.createTempFile
  [23] java.nio.file.Files.createTempFile
  [24] jdk.nio.zipfs.ZipFileSystem.createTempFileInSameDirectoryAs
  [25] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [26] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [27] jdk.nio.zipfs.ZipPath.newFileChannel
  [28] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [29] java.nio.channels.FileChannel.open
  [30] java.nio.channels.FileChannel.open
  [31] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [32] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$63.0x0000000800d35a20.apply
  [33] cats.effect.IOFiber.$anonfun$8
  [34] cats.effect.IOFiber$$Lambda$758.0x0000000800ec4c40.apply
  [35] cats.effect.unsafe.WorkerThread.blockOn
  [36] scala.concurrent.package$.blocking
  [37] cats.effect.IOFiber.runLoop
  [38] cats.effect.IOFiber.execR
  [39] cats.effect.IOFiber.run
  [40] cats.effect.unsafe.WorkerThread.run

--- 6655404202 ns (0.91%), 664 samples
  [ 0] rwsem_spin_on_owner_[k]
  [ 1] rwsem_optimistic_spin_[k]
  [ 2] rwsem_down_write_slowpath_[k]
  [ 3] down_write_[k]
  [ 4] do_unlinkat_[k]
  [ 5] __x64_sys_unlink_[k]
  [ 6] do_syscall_64_[k]
  [ 7] entry_SYSCALL_64_after_hwframe_[k]
  [ 8] __GI_unlink
  [ 9] sun.nio.fs.UnixNativeDispatcher.unlink0
  [10] sun.nio.fs.UnixNativeDispatcher.unlink
  [11] sun.nio.fs.UnixFileSystemProvider.implDelete
  [12] sun.nio.fs.AbstractFileSystemProvider.delete
  [13] java.nio.file.Files.delete
  [14] jdk.nio.zipfs.ZipFileSystem.removeTempPathForEntry
  [15] jdk.nio.zipfs.ZipFileSystem$1.implCloseChannel
  [16] java.nio.channels.spi.AbstractInterruptibleChannel.close
  [17] fs2.io.file.FilesCompanionPlatform.openFileChannel$$anonfun$1$$anonfun$1
  [18] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$openFileChannel$$anonfun$1$$anonfun$adapted$1
  [19] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$773.0x0000000800ec6ce0.apply
  [20] cats.effect.IOFiber.$anonfun$8
  [21] cats.effect.IOFiber$$Lambda$758.0x0000000800ec4c40.apply
  [22] cats.effect.unsafe.WorkerThread.blockOn
  [23] scala.concurrent.package$.blocking
  [24] cats.effect.IOFiber.runLoop
  [25] cats.effect.IOFiber.execR
  [26] cats.effect.IOFiber.run
  [27] cats.effect.unsafe.WorkerThread.run

--- 6397170782 ns (0.87%), 638 samples
  [ 0] memmove_[k]
  [ 1] dnode_set_blksz?[zfs]_[k]
  [ 2] dmu_object_set_blocksize?[zfs]_[k]
  [ 3] zfs_grow_blocksize?[zfs]_[k]
  [ 4] zfs_write?[zfs]_[k]
  [ 5] zpl_iter_write?[zfs]_[k]
  [ 6] new_sync_write_[k]
  [ 7] vfs_write_[k]
  [ 8] ksys_write_[k]
  [ 9] __x64_sys_write_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] write
  [13] sun.nio.ch.FileDispatcherImpl.write0
  [14] sun.nio.ch.FileDispatcherImpl.write
  [15] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [16] sun.nio.ch.IOUtil.write
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.FileChannelImpl.write
  [19] java.nio.channels.Channels.writeFullyImpl
  [20] java.nio.channels.Channels.writeFully
  [21] java.nio.channels.Channels$1.write
  [22] java.io.InputStream.transferTo
  [23] java.nio.file.Files.copy
  [24] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [25] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [26] jdk.nio.zipfs.ZipPath.newFileChannel
  [27] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [28] java.nio.channels.FileChannel.open
  [29] java.nio.channels.FileChannel.open
  [30] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [31] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$63.0x0000000800d35a20.apply
  [32] cats.effect.IOFiber.$anonfun$8
  [33] cats.effect.IOFiber$$Lambda$758.0x0000000800ec4c40.apply
  [34] cats.effect.unsafe.WorkerThread.blockOn
  [35] scala.concurrent.package$.blocking
  [36] cats.effect.IOFiber.runLoop
  [37] cats.effect.IOFiber.execR
  [38] cats.effect.IOFiber.run
  [39] cats.effect.unsafe.WorkerThread.run

--- 5923103838 ns (0.81%), 591 samples
  [ 0] osq_lock_[k]
  [ 1] rwsem_optimistic_spin_[k]
  [ 2] rwsem_down_write_slowpath_[k]
  [ 3] down_write_[k]
  [ 4] do_unlinkat_[k]
  [ 5] __x64_sys_unlink_[k]
  [ 6] do_syscall_64_[k]
  [ 7] entry_SYSCALL_64_after_hwframe_[k]
  [ 8] __GI_unlink
  [ 9] sun.nio.fs.UnixNativeDispatcher.unlink0
  [10] sun.nio.fs.UnixNativeDispatcher.unlink
  [11] sun.nio.fs.UnixFileSystemProvider.implDelete
  [12] sun.nio.fs.AbstractFileSystemProvider.deleteIfExists
  [13] java.nio.file.Files.deleteIfExists
  [14] java.nio.file.Files.copy
  [15] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [16] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [17] jdk.nio.zipfs.ZipPath.newFileChannel
  [18] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [19] java.nio.channels.FileChannel.open
  [20] java.nio.channels.FileChannel.open
  [21] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [22] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$63.0x0000000800d35a20.apply
  [23] cats.effect.IOFiber.$anonfun$8
  [24] cats.effect.IOFiber$$Lambda$758.0x0000000800ec4c40.apply
  [25] cats.effect.unsafe.WorkerThread.blockOn
  [26] scala.concurrent.package$.blocking
  [27] cats.effect.IOFiber.runLoop
  [28] cats.effect.IOFiber.execR
  [29] cats.effect.IOFiber.run
  [30] cats.effect.unsafe.WorkerThread.run

--- 5541997682 ns (0.75%), 553 samples
  [ 0] inflate
  [ 1] java.util.zip.Inflater.inflateBytesBytes
  [ 2] java.util.zip.Inflater.inflate
  [ 3] java.util.zip.InflaterInputStream.read
  [ 4] java.io.InputStream.transferTo
  [ 5] java.nio.file.Files.copy
  [ 6] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [ 7] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [ 8] jdk.nio.zipfs.ZipPath.newFileChannel
  [ 9] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [10] java.nio.channels.FileChannel.open
  [11] java.nio.channels.FileChannel.open
  [12] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [13] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$63.0x0000000800d35a20.apply
  [14] cats.effect.IOFiber.$anonfun$8
  [15] cats.effect.IOFiber$$Lambda$758.0x0000000800ec4c40.apply
  [16] cats.effect.unsafe.WorkerThread.blockOn
  [17] scala.concurrent.package$.blocking
  [18] cats.effect.IOFiber.runLoop
  [19] cats.effect.IOFiber.execR
  [20] cats.effect.IOFiber.run
  [21] cats.effect.unsafe.WorkerThread.run

--- 5511762089 ns (0.75%), 550 samples
  [ 0] rwsem_spin_on_owner_[k]
  [ 1] rwsem_optimistic_spin_[k]
  [ 2] rwsem_down_write_slowpath_[k]
  [ 3] down_write_[k]
  [ 4] do_unlinkat_[k]
  [ 5] __x64_sys_unlink_[k]
  [ 6] do_syscall_64_[k]
  [ 7] entry_SYSCALL_64_after_hwframe_[k]
  [ 8] __GI_unlink
  [ 9] sun.nio.fs.UnixNativeDispatcher.unlink0
  [10] sun.nio.fs.UnixNativeDispatcher.unlink
  [11] sun.nio.fs.UnixFileSystemProvider.implDelete
  [12] sun.nio.fs.AbstractFileSystemProvider.deleteIfExists
  [13] java.nio.file.Files.deleteIfExists
  [14] java.nio.file.Files.copy
  [15] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [16] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [17] jdk.nio.zipfs.ZipPath.newFileChannel
  [18] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [19] java.nio.channels.FileChannel.open
  [20] java.nio.channels.FileChannel.open
  [21] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [22] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$63.0x0000000800d35a20.apply
  [23] cats.effect.IOFiber.$anonfun$8
  [24] cats.effect.IOFiber$$Lambda$758.0x0000000800ec4c40.apply
  [25] cats.effect.unsafe.WorkerThread.blockOn
  [26] scala.concurrent.package$.blocking
  [27] cats.effect.IOFiber.runLoop
  [28] cats.effect.IOFiber.execR
  [29] cats.effect.IOFiber.run
  [30] cats.effect.unsafe.WorkerThread.run

--- 5239068845 ns (0.71%), 523 samples
  [ 0] rwsem_spin_on_owner_[k]
  [ 1] rwsem_optimistic_spin_[k]
  [ 2] rwsem_down_write_slowpath_[k]
  [ 3] down_write_[k]
  [ 4] open_last_lookups_[k]
  [ 5] path_openat_[k]
  [ 6] do_filp_open_[k]
  [ 7] do_sys_openat2_[k]
  [ 8] __x64_sys_openat_[k]
  [ 9] do_syscall_64_[k]
  [10] entry_SYSCALL_64_after_hwframe_[k]
  [11] __open64
  [12] [unknown]
  [13] sun.nio.fs.UnixNativeDispatcher.open0
  [14] sun.nio.fs.UnixNativeDispatcher.open
  [15] sun.nio.fs.UnixChannelFactory.open
  [16] sun.nio.fs.UnixChannelFactory.newFileChannel
  [17] sun.nio.fs.UnixChannelFactory.newFileChannel
  [18] sun.nio.fs.UnixFileSystemProvider.newByteChannel
  [19] java.nio.file.spi.FileSystemProvider.newOutputStream
  [20] java.nio.file.Files.newOutputStream
  [21] java.nio.file.Files.copy
  [22] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [23] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [24] jdk.nio.zipfs.ZipPath.newFileChannel
  [25] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [26] java.nio.channels.FileChannel.open
  [27] java.nio.channels.FileChannel.open
  [28] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [29] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$63.0x0000000800d35a20.apply
  [30] cats.effect.IOFiber.$anonfun$8
  [31] cats.effect.IOFiber$$Lambda$758.0x0000000800ec4c40.apply
  [32] cats.effect.unsafe.WorkerThread.blockOn
  [33] scala.concurrent.package$.blocking
  [34] cats.effect.IOFiber.runLoop
  [35] cats.effect.IOFiber.execR
  [36] cats.effect.IOFiber.run
  [37] cats.effect.unsafe.WorkerThread.run

--- 4861684950 ns (0.66%), 485 samples
  [ 0] _raw_spin_unlock_irqrestore_[k]
  [ 1] __wake_up_common_lock_[k]
  [ 2] __wake_up_[k]
  [ 3] fsnotify_insert_event_[k]
  [ 4] inotify_handle_inode_event_[k]
  [ 5] fsnotify_handle_inode_event.isra.0_[k]
  [ 6] send_to_group_[k]
  [ 7] fsnotify_[k]
  [ 8] __fsnotify_parent_[k]
  [ 9] vfs_write_[k]
  [10] ksys_write_[k]
  [11] __x64_sys_write_[k]
  [12] do_syscall_64_[k]
  [13] entry_SYSCALL_64_after_hwframe_[k]
  [14] write
  [15] sun.nio.ch.FileDispatcherImpl.write0
  [16] sun.nio.ch.FileDispatcherImpl.write
  [17] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.IOUtil.write
  [20] sun.nio.ch.FileChannelImpl.write
  [21] java.nio.channels.Channels.writeFullyImpl
  [22] java.nio.channels.Channels.writeFully
  [23] java.nio.channels.Channels$1.write
  [24] java.io.InputStream.transferTo
  [25] java.nio.file.Files.copy
  [26] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [27] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [28] jdk.nio.zipfs.ZipPath.newFileChannel
  [29] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [30] java.nio.channels.FileChannel.open
  [31] java.nio.channels.FileChannel.open
  [32] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [33] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$63.0x0000000800d35a20.apply
  [34] cats.effect.IOFiber.$anonfun$8
  [35] cats.effect.IOFiber$$Lambda$758.0x0000000800ec4c40.apply
  [36] cats.effect.unsafe.WorkerThread.blockOn
  [37] scala.concurrent.package$.blocking
  [38] cats.effect.IOFiber.runLoop
  [39] cats.effect.IOFiber.execR
  [40] cats.effect.IOFiber.run
  [41] cats.effect.unsafe.WorkerThread.run

--- 4488338440 ns (0.61%), 448 samples
  [ 0] rwsem_spin_on_owner_[k]
  [ 1] rwsem_optimistic_spin_[k]
  [ 2] rwsem_down_write_slowpath_[k]
  [ 3] down_write_[k]
  [ 4] open_last_lookups_[k]
  [ 5] path_openat_[k]
  [ 6] do_filp_open_[k]
  [ 7] do_sys_openat2_[k]
  [ 8] __x64_sys_openat_[k]
  [ 9] do_syscall_64_[k]
  [10] entry_SYSCALL_64_after_hwframe_[k]
  [11] __open64
  [12] [unknown]
  [13] sun.nio.fs.UnixNativeDispatcher.open0
  [14] sun.nio.fs.UnixNativeDispatcher.open
  [15] sun.nio.fs.UnixChannelFactory.open
  [16] sun.nio.fs.UnixChannelFactory.newFileChannel
  [17] sun.nio.fs.UnixChannelFactory.newFileChannel
  [18] sun.nio.fs.UnixFileSystemProvider.newByteChannel
  [19] java.nio.file.Files.newByteChannel
  [20] java.nio.file.Files.createFile
  [21] java.nio.file.TempFileHelper.create
  [22] java.nio.file.TempFileHelper.createTempFile
  [23] java.nio.file.Files.createTempFile
  [24] jdk.nio.zipfs.ZipFileSystem.createTempFileInSameDirectoryAs
  [25] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [26] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [27] jdk.nio.zipfs.ZipPath.newFileChannel
  [28] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [29] java.nio.channels.FileChannel.open
  [30] java.nio.channels.FileChannel.open
  [31] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [32] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$63.0x0000000800d35a20.apply
  [33] cats.effect.IOFiber.$anonfun$8
  [34] cats.effect.IOFiber$$Lambda$758.0x0000000800ec4c40.apply
  [35] cats.effect.unsafe.WorkerThread.blockOn
  [36] scala.concurrent.package$.blocking
  [37] cats.effect.IOFiber.runLoop
  [38] cats.effect.IOFiber.execR
  [39] cats.effect.IOFiber.run
  [40] cats.effect.unsafe.WorkerThread.run

--- 4358231003 ns (0.59%), 435 samples
  [ 0] osq_lock_[k]
  [ 1] rwsem_optimistic_spin_[k]
  [ 2] rwsem_down_write_slowpath_[k]
  [ 3] down_write_[k]
  [ 4] open_last_lookups_[k]
  [ 5] path_openat_[k]
  [ 6] do_filp_open_[k]
  [ 7] do_sys_openat2_[k]
  [ 8] __x64_sys_openat_[k]
  [ 9] do_syscall_64_[k]
  [10] entry_SYSCALL_64_after_hwframe_[k]
  [11] __open64
  [12] [unknown]
  [13] sun.nio.fs.UnixNativeDispatcher.open0
  [14] sun.nio.fs.UnixNativeDispatcher.open
  [15] sun.nio.fs.UnixChannelFactory.open
  [16] sun.nio.fs.UnixChannelFactory.newFileChannel
  [17] sun.nio.fs.UnixChannelFactory.newFileChannel
  [18] sun.nio.fs.UnixFileSystemProvider.newByteChannel
  [19] java.nio.file.spi.FileSystemProvider.newOutputStream
  [20] java.nio.file.Files.newOutputStream
  [21] java.nio.file.Files.copy
  [22] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [23] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [24] jdk.nio.zipfs.ZipPath.newFileChannel
  [25] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [26] java.nio.channels.FileChannel.open
  [27] java.nio.channels.FileChannel.open
  [28] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [29] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$63.0x0000000800d35a20.apply
  [30] cats.effect.IOFiber.$anonfun$8
  [31] cats.effect.IOFiber$$Lambda$758.0x0000000800ec4c40.apply
  [32] cats.effect.unsafe.WorkerThread.blockOn
  [33] scala.concurrent.package$.blocking
  [34] cats.effect.IOFiber.runLoop
  [35] cats.effect.IOFiber.execR
  [36] cats.effect.IOFiber.run
  [37] cats.effect.unsafe.WorkerThread.run

--- 4128713020 ns (0.56%), 412 samples
  [ 0] rwsem_spin_on_owner_[k]
  [ 1] rwsem_optimistic_spin_[k]
  [ 2] rwsem_down_write_slowpath_[k]
  [ 3] down_write_[k]
  [ 4] do_unlinkat_[k]
  [ 5] __x64_sys_unlink_[k]
  [ 6] do_syscall_64_[k]
  [ 7] entry_SYSCALL_64_after_hwframe_[k]
  [ 8] __GI_unlink
  [ 9] sun.nio.fs.UnixNativeDispatcher.unlink0
  [10] sun.nio.fs.UnixNativeDispatcher.unlink
  [11] sun.nio.fs.UnixFileSystemProvider.implDelete
  [12] sun.nio.fs.AbstractFileSystemProvider.delete
  [13] java.nio.file.Files.delete
  [14] jdk.nio.zipfs.ZipFileSystem.removeTempPathForEntry
  [15] jdk.nio.zipfs.ZipFileSystem$1.implCloseChannel
  [16] java.nio.channels.spi.AbstractInterruptibleChannel.close
  [17] fs2.io.file.FilesCompanionPlatform.openFileChannel$$anonfun$1$$anonfun$1
  [18] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$openFileChannel$$anonfun$1$$anonfun$adapted$1
  [19] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$773.0x0000000800ec6ce0.apply
  [20] cats.effect.IOFiber.$anonfun$8
  [21] cats.effect.IOFiber$$Lambda$758.0x0000000800ec4c40.apply
  [22] cats.effect.unsafe.WorkerThread.blockOn
  [23] scala.concurrent.package$.blocking
  [24] cats.effect.IOFiber.runLoop
  [25] cats.effect.IOFiber.execR
  [26] cats.effect.IOFiber.run
  [27] cats.effect.unsafe.WorkerThread.run

--- 3727209799 ns (0.51%), 372 samples
  [ 0] osq_lock_[k]
  [ 1] rwsem_optimistic_spin_[k]
  [ 2] rwsem_down_write_slowpath_[k]
  [ 3] down_write_[k]
  [ 4] do_unlinkat_[k]
  [ 5] __x64_sys_unlink_[k]
  [ 6] do_syscall_64_[k]
  [ 7] entry_SYSCALL_64_after_hwframe_[k]
  [ 8] __GI_unlink
  [ 9] sun.nio.fs.UnixNativeDispatcher.unlink0
  [10] sun.nio.fs.UnixNativeDispatcher.unlink
  [11] sun.nio.fs.UnixFileSystemProvider.implDelete
  [12] sun.nio.fs.AbstractFileSystemProvider.deleteIfExists
  [13] java.nio.file.Files.deleteIfExists
  [14] java.nio.file.Files.copy
  [15] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [16] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [17] jdk.nio.zipfs.ZipPath.newFileChannel
  [18] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [19] java.nio.channels.FileChannel.open
  [20] java.nio.channels.FileChannel.open
  [21] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [22] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$63.0x0000000800d35a20.apply
  [23] cats.effect.IOFiber.$anonfun$8
  [24] cats.effect.IOFiber$$Lambda$758.0x0000000800ec4c40.apply
  [25] cats.effect.unsafe.WorkerThread.blockOn
  [26] scala.concurrent.package$.blocking
  [27] cats.effect.IOFiber.runLoop
  [28] cats.effect.IOFiber.execR
  [29] cats.effect.IOFiber.run
  [30] cats.effect.unsafe.WorkerThread.run

--- 3388251932 ns (0.46%), 338 samples
  [ 0] memmove_[k]
  [ 1] dnode_set_blksz?[zfs]_[k]
  [ 2] dmu_object_set_blocksize?[zfs]_[k]
  [ 3] zfs_grow_blocksize?[zfs]_[k]
  [ 4] zfs_write?[zfs]_[k]
  [ 5] zpl_iter_write?[zfs]_[k]
  [ 6] new_sync_write_[k]
  [ 7] vfs_write_[k]
  [ 8] ksys_write_[k]
  [ 9] __x64_sys_write_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] write
  [13] sun.nio.ch.FileDispatcherImpl.write0
  [14] sun.nio.ch.FileDispatcherImpl.write
  [15] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [16] sun.nio.ch.IOUtil.write
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.FileChannelImpl.write
  [19] java.nio.channels.Channels.writeFullyImpl
  [20] java.nio.channels.Channels.writeFully
  [21] java.nio.channels.Channels$1.write
  [22] java.io.InputStream.transferTo
  [23] java.nio.file.Files.copy
  [24] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [25] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [26] jdk.nio.zipfs.ZipPath.newFileChannel
  [27] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [28] java.nio.channels.FileChannel.open
  [29] java.nio.channels.FileChannel.open
  [30] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [31] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$63.0x0000000800d35a20.apply
  [32] cats.effect.IOFiber.$anonfun$8
  [33] cats.effect.IOFiber$$Lambda$758.0x0000000800ec4c40.apply
  [34] cats.effect.unsafe.WorkerThread.blockOn
  [35] scala.concurrent.package$.blocking
  [36] cats.effect.IOFiber.runLoop
  [37] cats.effect.IOFiber.execR
  [38] cats.effect.IOFiber.run
  [39] cats.effect.unsafe.WorkerThread.run

--- 3256791129 ns (0.44%), 325 samples
  [ 0] osq_lock_[k]
  [ 1] rwsem_optimistic_spin_[k]
  [ 2] rwsem_down_write_slowpath_[k]
  [ 3] down_write_[k]
  [ 4] do_unlinkat_[k]
  [ 5] __x64_sys_unlink_[k]
  [ 6] do_syscall_64_[k]
  [ 7] entry_SYSCALL_64_after_hwframe_[k]
  [ 8] __GI_unlink
  [ 9] sun.nio.fs.UnixNativeDispatcher.unlink0
  [10] sun.nio.fs.UnixNativeDispatcher.unlink
  [11] sun.nio.fs.UnixFileSystemProvider.implDelete
  [12] sun.nio.fs.AbstractFileSystemProvider.delete
  [13] java.nio.file.Files.delete
  [14] jdk.nio.zipfs.ZipFileSystem.removeTempPathForEntry
  [15] jdk.nio.zipfs.ZipFileSystem$1.implCloseChannel
  [16] java.nio.channels.spi.AbstractInterruptibleChannel.close
  [17] fs2.io.file.FilesCompanionPlatform.openFileChannel$$anonfun$1$$anonfun$1
  [18] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$openFileChannel$$anonfun$1$$anonfun$adapted$1
  [19] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$773.0x0000000800ec6ce0.apply
  [20] cats.effect.IOFiber.$anonfun$8
  [21] cats.effect.IOFiber$$Lambda$758.0x0000000800ec4c40.apply
  [22] cats.effect.unsafe.WorkerThread.blockOn
  [23] scala.concurrent.package$.blocking
  [24] cats.effect.IOFiber.runLoop
  [25] cats.effect.IOFiber.execR
  [26] cats.effect.IOFiber.run
  [27] cats.effect.unsafe.WorkerThread.run

--- 3216433013 ns (0.44%), 321 samples
  [ 0] osq_lock_[k]
  [ 1] rwsem_optimistic_spin_[k]
  [ 2] rwsem_down_write_slowpath_[k]
  [ 3] down_write_[k]
  [ 4] open_last_lookups_[k]
  [ 5] path_openat_[k]
  [ 6] do_filp_open_[k]
  [ 7] do_sys_openat2_[k]
  [ 8] __x64_sys_openat_[k]
  [ 9] do_syscall_64_[k]
  [10] entry_SYSCALL_64_after_hwframe_[k]
  [11] __open64
  [12] [unknown]
  [13] sun.nio.fs.UnixNativeDispatcher.open0
  [14] sun.nio.fs.UnixNativeDispatcher.open
  [15] sun.nio.fs.UnixChannelFactory.open
  [16] sun.nio.fs.UnixChannelFactory.newFileChannel
  [17] sun.nio.fs.UnixChannelFactory.newFileChannel
  [18] sun.nio.fs.UnixFileSystemProvider.newByteChannel
  [19] java.nio.file.Files.newByteChannel
  [20] java.nio.file.Files.createFile
  [21] java.nio.file.TempFileHelper.create
  [22] java.nio.file.TempFileHelper.createTempFile
  [23] java.nio.file.Files.createTempFile
  [24] jdk.nio.zipfs.ZipFileSystem.createTempFileInSameDirectoryAs
  [25] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [26] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [27] jdk.nio.zipfs.ZipPath.newFileChannel
  [28] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [29] java.nio.channels.FileChannel.open
  [30] java.nio.channels.FileChannel.open
  [31] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [32] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$63.0x0000000800d35a20.apply
  [33] cats.effect.IOFiber.$anonfun$8
  [34] cats.effect.IOFiber$$Lambda$758.0x0000000800ec4c40.apply
  [35] cats.effect.unsafe.WorkerThread.blockOn
  [36] scala.concurrent.package$.blocking
  [37] cats.effect.IOFiber.runLoop
  [38] cats.effect.IOFiber.execR
  [39] cats.effect.IOFiber.run
  [40] cats.effect.unsafe.WorkerThread.run

--- 3076326536 ns (0.42%), 307 samples
  [ 0] inflate
  [ 1] java.util.zip.Inflater.inflateBytesBytes
  [ 2] java.util.zip.Inflater.inflate
  [ 3] java.util.zip.InflaterInputStream.read
  [ 4] java.io.InputStream.transferTo
  [ 5] java.nio.file.Files.copy
  [ 6] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [ 7] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [ 8] jdk.nio.zipfs.ZipPath.newFileChannel
  [ 9] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [10] java.nio.channels.FileChannel.open
  [11] java.nio.channels.FileChannel.open
  [12] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [13] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$63.0x0000000800d35a20.apply
  [14] cats.effect.IOFiber.$anonfun$8
  [15] cats.effect.IOFiber$$Lambda$758.0x0000000800ec4c40.apply
  [16] cats.effect.unsafe.WorkerThread.blockOn
  [17] scala.concurrent.package$.blocking
  [18] cats.effect.IOFiber.runLoop
  [19] cats.effect.IOFiber.execR
  [20] cats.effect.IOFiber.run
  [21] cats.effect.unsafe.WorkerThread.run

--- 2985057823 ns (0.41%), 298 samples
  [ 0] osq_lock_[k]
  [ 1] rwsem_optimistic_spin_[k]
  [ 2] rwsem_down_write_slowpath_[k]
  [ 3] down_write_[k]
  [ 4] open_last_lookups_[k]
  [ 5] path_openat_[k]
  [ 6] do_filp_open_[k]
  [ 7] do_sys_openat2_[k]
  [ 8] __x64_sys_openat_[k]
  [ 9] do_syscall_64_[k]
  [10] entry_SYSCALL_64_after_hwframe_[k]
  [11] __open64
  [12] [unknown]
  [13] sun.nio.fs.UnixNativeDispatcher.open0
  [14] sun.nio.fs.UnixNativeDispatcher.open
  [15] sun.nio.fs.UnixChannelFactory.open
  [16] sun.nio.fs.UnixChannelFactory.newFileChannel
  [17] sun.nio.fs.UnixChannelFactory.newFileChannel
  [18] sun.nio.fs.UnixFileSystemProvider.newByteChannel
  [19] java.nio.file.Files.newByteChannel
  [20] java.nio.file.Files.createFile
  [21] java.nio.file.TempFileHelper.create
  [22] java.nio.file.TempFileHelper.createTempFile
  [23] java.nio.file.Files.createTempFile
  [24] jdk.nio.zipfs.ZipFileSystem.createTempFileInSameDirectoryAs
  [25] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [26] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [27] jdk.nio.zipfs.ZipPath.newFileChannel
  [28] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [29] java.nio.channels.FileChannel.open
  [30] java.nio.channels.FileChannel.open
  [31] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [32] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$63.0x0000000800d35a20.apply
  [33] cats.effect.IOFiber.$anonfun$8
  [34] cats.effect.IOFiber$$Lambda$758.0x0000000800ec4c40.apply
  [35] cats.effect.unsafe.WorkerThread.blockOn
  [36] scala.concurrent.package$.blocking
  [37] cats.effect.IOFiber.runLoop
  [38] cats.effect.IOFiber.execR
  [39] cats.effect.IOFiber.run
  [40] cats.effect.unsafe.WorkerThread.run

--- 2984504378 ns (0.41%), 298 samples
  [ 0] osq_lock_[k]
  [ 1] rwsem_optimistic_spin_[k]
  [ 2] rwsem_down_write_slowpath_[k]
  [ 3] down_write_[k]
  [ 4] open_last_lookups_[k]
  [ 5] path_openat_[k]
  [ 6] do_filp_open_[k]
  [ 7] do_sys_openat2_[k]
  [ 8] __x64_sys_openat_[k]
  [ 9] do_syscall_64_[k]
  [10] entry_SYSCALL_64_after_hwframe_[k]
  [11] __open64
  [12] [unknown]
  [13] sun.nio.fs.UnixNativeDispatcher.open0
  [14] sun.nio.fs.UnixNativeDispatcher.open
  [15] sun.nio.fs.UnixChannelFactory.open
  [16] sun.nio.fs.UnixChannelFactory.newFileChannel
  [17] sun.nio.fs.UnixChannelFactory.newFileChannel
  [18] sun.nio.fs.UnixFileSystemProvider.newByteChannel
  [19] java.nio.file.spi.FileSystemProvider.newOutputStream
  [20] java.nio.file.Files.newOutputStream
  [21] java.nio.file.Files.copy
  [22] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [23] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [24] jdk.nio.zipfs.ZipPath.newFileChannel
  [25] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [26] java.nio.channels.FileChannel.open
  [27] java.nio.channels.FileChannel.open
  [28] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [29] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$63.0x0000000800d35a20.apply
  [30] cats.effect.IOFiber.$anonfun$8
  [31] cats.effect.IOFiber$$Lambda$758.0x0000000800ec4c40.apply
  [32] cats.effect.unsafe.WorkerThread.blockOn
  [33] scala.concurrent.package$.blocking
  [34] cats.effect.IOFiber.runLoop
  [35] cats.effect.IOFiber.execR
  [36] cats.effect.IOFiber.run
  [37] cats.effect.unsafe.WorkerThread.run

--- 2866062894 ns (0.39%), 286 samples
  [ 0] __memset_avx2_unaligned_erms
  [ 1] MemAllocator::allocate() const
  [ 2] TypeArrayKlass::allocate_common(int, bool, JavaThread*)
  [ 3] JVMCIRuntime::new_array_common(JavaThread*, Klass*, int, bool)
  [ 4] fs2.io.file.FileHandleCompanionPlatform$$anon$1.read$$anonfun$1
  [ 5] fs2.io.file.FileHandleCompanionPlatform$$anon$1$$Lambda$887.0x0000000800ee5ce0.apply
  [ 6] cats.effect.IOFiber.$anonfun$8
  [ 7] cats.effect.IOFiber$$Lambda$758.0x0000000800ec4c40.apply
  [ 8] cats.effect.unsafe.WorkerThread.blockOn
  [ 9] scala.concurrent.package$.blocking
  [10] cats.effect.IOFiber.runLoop
  [11] cats.effect.IOFiber.execR
  [12] cats.effect.IOFiber.run
  [13] cats.effect.unsafe.WorkerThread.run

--- 2466967249 ns (0.34%), 246 samples
  [ 0] find_vmap_area_[k]
  [ 1] check_heap_object_[k]
  [ 2] __check_object_size.part.0_[k]
  [ 3] __check_object_size_[k]
  [ 4] zfs_uiomove_iter?[zfs]_[k]
  [ 5] zfs_uiomove?[zfs]_[k]
  [ 6] dmu_write_uio_dnode?[zfs]_[k]
  [ 7] dmu_write_uio_dbuf?[zfs]_[k]
  [ 8] zfs_write?[zfs]_[k]
  [ 9] zpl_iter_write?[zfs]_[k]
  [10] new_sync_write_[k]
  [11] vfs_write_[k]
  [12] ksys_write_[k]
  [13] __x64_sys_write_[k]
  [14] do_syscall_64_[k]
  [15] entry_SYSCALL_64_after_hwframe_[k]
  [16] write
  [17] sun.nio.ch.FileDispatcherImpl.write0
  [18] sun.nio.ch.FileDispatcherImpl.write
  [19] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [20] sun.nio.ch.IOUtil.write
  [21] sun.nio.ch.IOUtil.write
  [22] sun.nio.ch.FileChannelImpl.write
  [23] java.nio.channels.Channels.writeFullyImpl
  [24] java.nio.channels.Channels.writeFully
  [25] java.nio.channels.Channels$1.write
  [26] java.io.InputStream.transferTo
  [27] java.nio.file.Files.copy
  [28] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [29] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [30] jdk.nio.zipfs.ZipPath.newFileChannel
  [31] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [32] java.nio.channels.FileChannel.open
  [33] java.nio.channels.FileChannel.open
  [34] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [35] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$63.0x0000000800d35a20.apply
  [36] cats.effect.IOFiber.$anonfun$8
  [37] cats.effect.IOFiber$$Lambda$758.0x0000000800ec4c40.apply
  [38] cats.effect.unsafe.WorkerThread.blockOn
  [39] scala.concurrent.package$.blocking
  [40] cats.effect.IOFiber.runLoop
  [41] cats.effect.IOFiber.execR
  [42] cats.effect.IOFiber.run
  [43] cats.effect.unsafe.WorkerThread.run

--- 2113662889 ns (0.29%), 211 samples
  [ 0] osq_lock_[k]
  [ 1] rwsem_optimistic_spin_[k]
  [ 2] rwsem_down_write_slowpath_[k]
  [ 3] down_write_[k]
  [ 4] do_unlinkat_[k]
  [ 5] __x64_sys_unlink_[k]
  [ 6] do_syscall_64_[k]
  [ 7] entry_SYSCALL_64_after_hwframe_[k]
  [ 8] __GI_unlink
  [ 9] sun.nio.fs.UnixNativeDispatcher.unlink0
  [10] sun.nio.fs.UnixNativeDispatcher.unlink
  [11] sun.nio.fs.UnixFileSystemProvider.implDelete
  [12] sun.nio.fs.AbstractFileSystemProvider.delete
  [13] java.nio.file.Files.delete
  [14] jdk.nio.zipfs.ZipFileSystem.removeTempPathForEntry
  [15] jdk.nio.zipfs.ZipFileSystem$1.implCloseChannel
  [16] java.nio.channels.spi.AbstractInterruptibleChannel.close
  [17] fs2.io.file.FilesCompanionPlatform.openFileChannel$$anonfun$1$$anonfun$1
  [18] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$openFileChannel$$anonfun$1$$anonfun$adapted$1
  [19] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$773.0x0000000800ec6ce0.apply
  [20] cats.effect.IOFiber.$anonfun$8
  [21] cats.effect.IOFiber$$Lambda$758.0x0000000800ec4c40.apply
  [22] cats.effect.unsafe.WorkerThread.blockOn
  [23] scala.concurrent.package$.blocking
  [24] cats.effect.IOFiber.runLoop
  [25] cats.effect.IOFiber.execR
  [26] cats.effect.IOFiber.run
  [27] cats.effect.unsafe.WorkerThread.run

--- 2105634053 ns (0.29%), 210 samples
  [ 0] copy_user_generic_string_[k]
  [ 1] zfs_uiomove_iter?[zfs]_[k]
  [ 2] zfs_uiomove?[zfs]_[k]
  [ 3] dmu_read_uio_dnode?[zfs]_[k]
  [ 4] dmu_read_uio_dbuf?[zfs]_[k]
  [ 5] zfs_read?[zfs]_[k]
  [ 6] zpl_iter_read?[zfs]_[k]
  [ 7] new_sync_read_[k]
  [ 8] vfs_read_[k]
  [ 9] __x64_sys_pread64_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] __libc_pread64
  [13] sun.nio.ch.FileDispatcherImpl.pread0
  [14] sun.nio.ch.FileDispatcherImpl.pread
  [15] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [16] sun.nio.ch.IOUtil.read
  [17] sun.nio.ch.IOUtil.read
  [18] sun.nio.ch.FileChannelImpl.readInternal
  [19] sun.nio.ch.FileChannelImpl.read
  [20] jdk.nio.zipfs.ZipFileSystem$1.read
  [21] fs2.io.file.FileHandleCompanionPlatform$$anon$1.read$$anonfun$1
  [22] fs2.io.file.FileHandleCompanionPlatform$$anon$1$$Lambda$887.0x0000000800ee5ce0.apply
  [23] cats.effect.IOFiber.$anonfun$8
  [24] cats.effect.IOFiber$$Lambda$758.0x0000000800ec4c40.apply
  [25] cats.effect.unsafe.WorkerThread.blockOn
  [26] scala.concurrent.package$.blocking
  [27] cats.effect.IOFiber.runLoop
  [28] cats.effect.IOFiber.execR
  [29] cats.effect.IOFiber.run
  [30] cats.effect.unsafe.WorkerThread.run

--- 1794037459 ns (0.24%), 179 samples
  [ 0] __memset_avx2_unaligned_erms
  [ 1] MemAllocator::allocate() const
  [ 2] TypeArrayKlass::allocate_common(int, bool, JavaThread*)
  [ 3] JVMCIRuntime::new_array_common(JavaThread*, Klass*, int, bool)
  [ 4] fs2.Pull$OuterRun$1.out
  [ 5] fs2.Pull$.fs2$Pull$ViewRunner$1$$_$outLoop$1
  [ 6] fs2.Pull$ViewRunner$1.out
  [ 7] fs2.Pull$.go$1$$anonfun$1
  [ 8] fs2.Pull$$$Lambda$833.0x0000000800ed7248.apply
  [ 9] fs2.Pull$.interruptGuard$1$$anonfun$1
  [10] fs2.Pull$$$Lambda$563.0x0000000800e4e7d0.apply
  [11] cats.effect.IOFiber.succeeded
  [12] cats.effect.IOFiber.runLoop
  [13] cats.effect.IOFiber.execR
  [14] cats.effect.IOFiber.run
  [15] cats.effect.unsafe.WorkerThread.run

--- 1713220915 ns (0.23%), 171 samples
  [ 0] java.util.Arrays.copyOfRange
  [ 1] java.lang.StringLatin1.newString
  [ 2] java.lang.StringBuilder.toString
  [ 3] java.lang.StringBuilder.toString
  [ 4] scala.collection.mutable.StringBuilder.result
  [ 5] scala.collection.mutable.StringBuilder.toString
  [ 6] fs2.Collector$Builder$$anon$4.result
  [ 7] fs2.Collector$Builder$$anon$4.result
  [ 8] fs2.Stream$CompileOps.to$$anonfun$1$$anonfun$2
  [ 9] fs2.Stream$CompileOps$$Lambda$428.0x0000000800e1f720.apply
  [10] cats.Monad.map$$anonfun$1
  [11] cats.Monad$$Lambda$431.0x0000000800e1b000.apply
  [12] cats.effect.IOFiber.succeeded
  [13] cats.effect.IOFiber.runLoop
  [14] cats.effect.IOFiber.execR
  [15] cats.effect.IOFiber.run
  [16] cats.effect.unsafe.WorkerThread.run

--- 1594037551 ns (0.22%), 159 samples
  [ 0] find_vmap_area_[k]
  [ 1] check_heap_object_[k]
  [ 2] __check_object_size.part.0_[k]
  [ 3] __check_object_size_[k]
  [ 4] zfs_uiomove_iter?[zfs]_[k]
  [ 5] zfs_uiomove?[zfs]_[k]
  [ 6] dmu_write_uio_dnode?[zfs]_[k]
  [ 7] dmu_write_uio_dbuf?[zfs]_[k]
  [ 8] zfs_write?[zfs]_[k]
  [ 9] zpl_iter_write?[zfs]_[k]
  [10] new_sync_write_[k]
  [11] vfs_write_[k]
  [12] ksys_write_[k]
  [13] __x64_sys_write_[k]
  [14] do_syscall_64_[k]
  [15] entry_SYSCALL_64_after_hwframe_[k]
  [16] write
  [17] sun.nio.ch.FileDispatcherImpl.write0
  [18] sun.nio.ch.FileDispatcherImpl.write
  [19] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [20] sun.nio.ch.IOUtil.write
  [21] sun.nio.ch.IOUtil.write
  [22] sun.nio.ch.FileChannelImpl.write
  [23] java.nio.channels.Channels.writeFullyImpl
  [24] java.nio.channels.Channels.writeFully
  [25] java.nio.channels.Channels$1.write
  [26] java.io.InputStream.transferTo
  [27] java.nio.file.Files.copy
  [28] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [29] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [30] jdk.nio.zipfs.ZipPath.newFileChannel
  [31] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [32] java.nio.channels.FileChannel.open
  [33] java.nio.channels.FileChannel.open
  [34] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [35] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$63.0x0000000800d35a20.apply
  [36] cats.effect.IOFiber.$anonfun$8
  [37] cats.effect.IOFiber$$Lambda$758.0x0000000800ec4c40.apply
  [38] cats.effect.unsafe.WorkerThread.blockOn
  [39] scala.concurrent.package$.blocking
  [40] cats.effect.IOFiber.runLoop
  [41] cats.effect.IOFiber.execR
  [42] cats.effect.IOFiber.run
  [43] cats.effect.unsafe.WorkerThread.run

--- 1553837160 ns (0.21%), 155 samples
  [ 0] _raw_spin_unlock_irqrestore_[k]
  [ 1] __wake_up_common_lock_[k]
  [ 2] __wake_up_[k]
  [ 3] fsnotify_insert_event_[k]
  [ 4] inotify_handle_inode_event_[k]
  [ 5] fsnotify_handle_inode_event.isra.0_[k]
  [ 6] send_to_group_[k]
  [ 7] fsnotify_[k]
  [ 8] open_last_lookups_[k]
  [ 9] path_openat_[k]
  [10] do_filp_open_[k]
  [11] do_sys_openat2_[k]
  [12] __x64_sys_openat_[k]
  [13] do_syscall_64_[k]
  [14] entry_SYSCALL_64_after_hwframe_[k]
  [15] __open64
  [16] [unknown]
  [17] sun.nio.fs.UnixNativeDispatcher.open0
  [18] sun.nio.fs.UnixNativeDispatcher.open
  [19] sun.nio.fs.UnixChannelFactory.open
  [20] sun.nio.fs.UnixChannelFactory.newFileChannel
  [21] sun.nio.fs.UnixChannelFactory.newFileChannel
  [22] sun.nio.fs.UnixFileSystemProvider.newByteChannel
  [23] java.nio.file.Files.newByteChannel
  [24] java.nio.file.Files.createFile
  [25] java.nio.file.TempFileHelper.create
  [26] java.nio.file.TempFileHelper.createTempFile
  [27] java.nio.file.Files.createTempFile
  [28] jdk.nio.zipfs.ZipFileSystem.createTempFileInSameDirectoryAs
  [29] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [30] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [31] jdk.nio.zipfs.ZipPath.newFileChannel
  [32] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [33] java.nio.channels.FileChannel.open
  [34] java.nio.channels.FileChannel.open
  [35] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [36] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$63.0x0000000800d35a20.apply
  [37] cats.effect.IOFiber.$anonfun$8
  [38] cats.effect.IOFiber$$Lambda$758.0x0000000800ec4c40.apply
  [39] cats.effect.unsafe.WorkerThread.blockOn
  [40] scala.concurrent.package$.blocking
  [41] cats.effect.IOFiber.runLoop
  [42] cats.effect.IOFiber.execR
  [43] cats.effect.IOFiber.run
  [44] cats.effect.unsafe.WorkerThread.run

--- 1492806636 ns (0.20%), 149 samples
  [ 0] __memset_avx2_unaligned_erms
  [ 1] MemAllocator::allocate() const
  [ 2] TypeArrayKlass::allocate_common(int, bool, JavaThread*)
  [ 3] JVMCIRuntime::new_array_common(JavaThread*, Klass*, int, bool)
  [ 4] fs2.io.file.FileHandleCompanionPlatform$$anon$1.read$$anonfun$1
  [ 5] fs2.io.file.FileHandleCompanionPlatform$$anon$1$$Lambda$887.0x0000000800ee5ce0.apply
  [ 6] cats.effect.IOFiber.$anonfun$8
  [ 7] cats.effect.IOFiber$$Lambda$758.0x0000000800ec4c40.apply
  [ 8] cats.effect.unsafe.WorkerThread.blockOn
  [ 9] scala.concurrent.package$.blocking
  [10] cats.effect.IOFiber.runLoop
  [11] cats.effect.IOFiber.execR
  [12] cats.effect.IOFiber.run
  [13] cats.effect.unsafe.WorkerThread.run

--- 1434142471 ns (0.20%), 143 samples
  [ 0] memset_[k]
  [ 1] dnode_set_blksz?[zfs]_[k]
  [ 2] dmu_object_set_blocksize?[zfs]_[k]
  [ 3] zfs_grow_blocksize?[zfs]_[k]
  [ 4] zfs_write?[zfs]_[k]
  [ 5] zpl_iter_write?[zfs]_[k]
  [ 6] new_sync_write_[k]
  [ 7] vfs_write_[k]
  [ 8] ksys_write_[k]
  [ 9] __x64_sys_write_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] write
  [13] sun.nio.ch.FileDispatcherImpl.write0
  [14] sun.nio.ch.FileDispatcherImpl.write
  [15] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [16] sun.nio.ch.IOUtil.write
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.FileChannelImpl.write
  [19] java.nio.channels.Channels.writeFullyImpl
  [20] java.nio.channels.Channels.writeFully
  [21] java.nio.channels.Channels$1.write
  [22] java.io.InputStream.transferTo
  [23] java.nio.file.Files.copy
  [24] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [25] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [26] jdk.nio.zipfs.ZipPath.newFileChannel
  [27] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [28] java.nio.channels.FileChannel.open
  [29] java.nio.channels.FileChannel.open
  [30] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [31] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$63.0x0000000800d35a20.apply
  [32] cats.effect.IOFiber.$anonfun$8
  [33] cats.effect.IOFiber$$Lambda$758.0x0000000800ec4c40.apply
  [34] cats.effect.unsafe.WorkerThread.blockOn
  [35] scala.concurrent.package$.blocking
  [36] cats.effect.IOFiber.runLoop
  [37] cats.effect.IOFiber.execR
  [38] cats.effect.IOFiber.run
  [39] cats.effect.unsafe.WorkerThread.run

--- 1432845903 ns (0.20%), 143 samples
  [ 0] __memset_avx2_unaligned_erms
  [ 1] MemAllocator::allocate() const
  [ 2] TypeArrayKlass::allocate_common(int, bool, JavaThread*)
  [ 3] JVMCIRuntime::new_array_common(JavaThread*, Klass*, int, bool)
  [ 4] fs2.Stream$CompileOps$$Lambda$428.0x0000000800e1f720.apply
  [ 5] cats.Monad.map$$anonfun$1
  [ 6] cats.Monad$$Lambda$431.0x0000000800e1b000.apply
  [ 7] cats.effect.IOFiber.succeeded
  [ 8] cats.effect.IOFiber.runLoop
  [ 9] cats.effect.IOFiber.execR
  [10] cats.effect.IOFiber.run
  [11] cats.effect.unsafe.WorkerThread.run

--- 1403526060 ns (0.19%), 140 samples
  [ 0] _raw_spin_unlock_irqrestore_[k]
  [ 1] try_to_wake_up_[k]
  [ 2] wake_up_q_[k]
  [ 3] futex_wake_[k]
  [ 4] do_futex_[k]
  [ 5] __x64_sys_futex_[k]
  [ 6] do_syscall_64_[k]
  [ 7] entry_SYSCALL_64_after_hwframe_[k]
  [ 8] pthread_cond_signal@@GLIBC_2.3.2
  [ 9] jdk.internal.misc.Unsafe.unpark
  [10] java.util.concurrent.locks.LockSupport.unpark
  [11] cats.effect.unsafe.WorkStealingThreadPool.notifyParked
  [12] cats.effect.unsafe.WorkerThread.blockOn
  [13] scala.concurrent.package$.blocking
  [14] cats.effect.IOFiber.runLoop
  [15] cats.effect.IOFiber.execR
  [16] cats.effect.IOFiber.run
  [17] cats.effect.unsafe.WorkerThread.run

--- 1402747555 ns (0.19%), 140 samples
  [ 0] jlong_disjoint_arraycopy
  [ 1] jdk.internal.misc.Unsafe.copyMemory0
  [ 2] jdk.internal.misc.Unsafe.copyMemory
  [ 3] jdk.internal.misc.ScopedMemoryAccess.copyMemoryInternal
  [ 4] jdk.internal.misc.ScopedMemoryAccess.copyMemory
  [ 5] java.nio.ByteBuffer.putBuffer
  [ 6] java.nio.ByteBuffer.put
  [ 7] sun.nio.ch.IOUtil.write
  [ 8] sun.nio.ch.IOUtil.write
  [ 9] sun.nio.ch.FileChannelImpl.write
  [10] java.nio.channels.Channels.writeFullyImpl
  [11] java.nio.channels.Channels.writeFully
  [12] java.nio.channels.Channels$1.write
  [13] java.io.InputStream.transferTo
  [14] java.nio.file.Files.copy
  [15] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [16] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [17] jdk.nio.zipfs.ZipPath.newFileChannel
  [18] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [19] java.nio.channels.FileChannel.open
  [20] java.nio.channels.FileChannel.open
  [21] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [22] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$63.0x0000000800d35a20.apply
  [23] cats.effect.IOFiber.$anonfun$8
  [24] cats.effect.IOFiber$$Lambda$758.0x0000000800ec4c40.apply
  [25] cats.effect.unsafe.WorkerThread.blockOn
  [26] scala.concurrent.package$.blocking
  [27] cats.effect.IOFiber.runLoop
  [28] cats.effect.IOFiber.execR
  [29] cats.effect.IOFiber.run
  [30] cats.effect.unsafe.WorkerThread.run

--- 1373376297 ns (0.19%), 137 samples
  [ 0] copy_user_generic_string_[k]
  [ 1] zfs_uiomove_iter?[zfs]_[k]
  [ 2] zfs_uiomove?[zfs]_[k]
  [ 3] dmu_write_uio_dnode?[zfs]_[k]
  [ 4] dmu_write_uio_dbuf?[zfs]_[k]
  [ 5] zfs_write?[zfs]_[k]
  [ 6] zpl_iter_write?[zfs]_[k]
  [ 7] new_sync_write_[k]
  [ 8] vfs_write_[k]
  [ 9] ksys_write_[k]
  [10] __x64_sys_write_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] write
  [14] sun.nio.ch.FileDispatcherImpl.write0
  [15] sun.nio.ch.FileDispatcherImpl.write
  [16] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.FileChannelImpl.write
  [20] java.nio.channels.Channels.writeFullyImpl
  [21] java.nio.channels.Channels.writeFully
  [22] java.nio.channels.Channels$1.write
  [23] java.io.InputStream.transferTo
  [24] java.nio.file.Files.copy
  [25] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [26] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [27] jdk.nio.zipfs.ZipPath.newFileChannel
  [28] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [29] java.nio.channels.FileChannel.open
  [30] java.nio.channels.FileChannel.open
  [31] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [32] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$63.0x0000000800d35a20.apply
  [33] cats.effect.IOFiber.$anonfun$8
  [34] cats.effect.IOFiber$$Lambda$758.0x0000000800ec4c40.apply
  [35] cats.effect.unsafe.WorkerThread.blockOn
  [36] scala.concurrent.package$.blocking
  [37] cats.effect.IOFiber.runLoop
  [38] cats.effect.IOFiber.execR
  [39] cats.effect.IOFiber.run
  [40] cats.effect.unsafe.WorkerThread.run

--- 1373009808 ns (0.19%), 137 samples
  [ 0] __memmove_avx_unaligned_erms
  [ 1] java.util.zip.Inflater.inflateBytesBytes
  [ 2] java.util.zip.Inflater.inflate
  [ 3] java.util.zip.InflaterInputStream.read
  [ 4] java.io.InputStream.transferTo
  [ 5] java.nio.file.Files.copy
  [ 6] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [ 7] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [ 8] jdk.nio.zipfs.ZipPath.newFileChannel
  [ 9] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [10] java.nio.channels.FileChannel.open
  [11] java.nio.channels.FileChannel.open
  [12] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [13] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$63.0x0000000800d35a20.apply
  [14] cats.effect.IOFiber.$anonfun$8
  [15] cats.effect.IOFiber$$Lambda$758.0x0000000800ec4c40.apply
  [16] cats.effect.unsafe.WorkerThread.blockOn
  [17] scala.concurrent.package$.blocking
  [18] cats.effect.IOFiber.runLoop
  [19] cats.effect.IOFiber.execR
  [20] cats.effect.IOFiber.run
  [21] cats.effect.unsafe.WorkerThread.run

--- 1363484188 ns (0.19%), 136 samples
  [ 0] _raw_spin_unlock_irqrestore_[k]
  [ 1] __wake_up_common_lock_[k]
  [ 2] __wake_up_[k]
  [ 3] fsnotify_insert_event_[k]
  [ 4] inotify_handle_inode_event_[k]
  [ 5] fsnotify_handle_inode_event.isra.0_[k]
  [ 6] send_to_group_[k]
  [ 7] fsnotify_[k]
  [ 8] vfs_unlink_[k]
  [ 9] do_unlinkat_[k]
  [10] __x64_sys_unlink_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] __GI_unlink
  [14] sun.nio.fs.UnixNativeDispatcher.unlink0
  [15] sun.nio.fs.UnixNativeDispatcher.unlink
  [16] sun.nio.fs.UnixFileSystemProvider.implDelete
  [17] sun.nio.fs.AbstractFileSystemProvider.delete
  [18] java.nio.file.Files.delete
  [19] jdk.nio.zipfs.ZipFileSystem.removeTempPathForEntry
  [20] jdk.nio.zipfs.ZipFileSystem$1.implCloseChannel
  [21] java.nio.channels.spi.AbstractInterruptibleChannel.close
  [22] fs2.io.file.FilesCompanionPlatform.openFileChannel$$anonfun$1$$anonfun$1
  [23] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$openFileChannel$$anonfun$1$$anonfun$adapted$1
  [24] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$773.0x0000000800ec6ce0.apply
  [25] cats.effect.IOFiber.$anonfun$8
  [26] cats.effect.IOFiber$$Lambda$758.0x0000000800ec4c40.apply
  [27] cats.effect.unsafe.WorkerThread.blockOn
  [28] scala.concurrent.package$.blocking
  [29] cats.effect.IOFiber.runLoop
  [30] cats.effect.IOFiber.execR
  [31] cats.effect.IOFiber.run
  [32] cats.effect.unsafe.WorkerThread.run

--- 1273502163 ns (0.17%), 127 samples
  [ 0] _raw_spin_unlock_irqrestore_[k]
  [ 1] __wake_up_common_lock_[k]
  [ 2] __wake_up_[k]
  [ 3] fsnotify_insert_event_[k]
  [ 4] inotify_handle_inode_event_[k]
  [ 5] fsnotify_handle_inode_event.isra.0_[k]
  [ 6] send_to_group_[k]
  [ 7] fsnotify_[k]
  [ 8] vfs_unlink_[k]
  [ 9] do_unlinkat_[k]
  [10] __x64_sys_unlink_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] __GI_unlink
  [14] sun.nio.fs.UnixNativeDispatcher.unlink0
  [15] sun.nio.fs.UnixNativeDispatcher.unlink
  [16] sun.nio.fs.UnixFileSystemProvider.implDelete
  [17] sun.nio.fs.AbstractFileSystemProvider.deleteIfExists
  [18] java.nio.file.Files.deleteIfExists
  [19] java.nio.file.Files.copy
  [20] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [21] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [22] jdk.nio.zipfs.ZipPath.newFileChannel
  [23] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [24] java.nio.channels.FileChannel.open
  [25] java.nio.channels.FileChannel.open
  [26] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [27] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$63.0x0000000800d35a20.apply
  [28] cats.effect.IOFiber.$anonfun$8
  [29] cats.effect.IOFiber$$Lambda$758.0x0000000800ec4c40.apply
  [30] cats.effect.unsafe.WorkerThread.blockOn
  [31] scala.concurrent.package$.blocking
  [32] cats.effect.IOFiber.runLoop
  [33] cats.effect.IOFiber.execR
  [34] cats.effect.IOFiber.run
  [35] cats.effect.unsafe.WorkerThread.run

--- 1253164765 ns (0.17%), 125 samples
  [ 0] refill_stock_[k]
  [ 1] try_charge_memcg_[k]
  [ 2] obj_cgroup_charge_[k]
  [ 3] __kmalloc_[k]
  [ 4] inotify_handle_inode_event_[k]
  [ 5] fsnotify_handle_inode_event.isra.0_[k]
  [ 6] send_to_group_[k]
  [ 7] fsnotify_[k]
  [ 8] __fsnotify_parent_[k]
  [ 9] vfs_write_[k]
  [10] ksys_write_[k]
  [11] __x64_sys_write_[k]
  [12] do_syscall_64_[k]
  [13] entry_SYSCALL_64_after_hwframe_[k]
  [14] write
  [15] sun.nio.ch.FileDispatcherImpl.write0
  [16] sun.nio.ch.FileDispatcherImpl.write
  [17] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.IOUtil.write
  [20] sun.nio.ch.FileChannelImpl.write
  [21] java.nio.channels.Channels.writeFullyImpl
  [22] java.nio.channels.Channels.writeFully
  [23] java.nio.channels.Channels$1.write
  [24] java.io.InputStream.transferTo
  [25] java.nio.file.Files.copy
  [26] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [27] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [28] jdk.nio.zipfs.ZipPath.newFileChannel
  [29] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [30] java.nio.channels.FileChannel.open
  [31] java.nio.channels.FileChannel.open
  [32] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [33] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$63.0x0000000800d35a20.apply
  [34] cats.effect.IOFiber.$anonfun$8
  [35] cats.effect.IOFiber$$Lambda$758.0x0000000800ec4c40.apply
  [36] cats.effect.unsafe.WorkerThread.blockOn
  [37] scala.concurrent.package$.blocking
  [38] cats.effect.IOFiber.runLoop
  [39] cats.effect.IOFiber.execR
  [40] cats.effect.IOFiber.run
  [41] cats.effect.unsafe.WorkerThread.run

--- 1252243794 ns (0.17%), 125 samples
  [ 0] __memset_avx2_unaligned_erms
  [ 1] MemAllocator::allocate() const
  [ 2] TypeArrayKlass::allocate_common(int, bool, JavaThread*)
  [ 3] JVMCIRuntime::new_array_common(JavaThread*, Klass*, int, bool)
  [ 4] java.lang.Math.max
  [ 5] scala.runtime.RichInt$.max$extension
  [ 6] fs2.text$utf8$.lastIncompleteBytes$1
  [ 7] fs2.text$utf8$.processSingleChunk$1
  [ 8] fs2.text$utf8$.doPull$1$$anonfun$1
  [ 9] fs2.text$utf8$$$Lambda$982.0x0000000800f13990.apply
  [10] fs2.Pull$$anon$1.cont
  [11] fs2.Pull$.fs2$Pull$$$bindBindAux
  [12] fs2.Pull$BindBind.cont
  [13] fs2.Pull$ContP.apply
  [14] fs2.Pull$ContP.apply$
  [15] fs2.Pull$Bind.apply
  [16] fs2.Pull$Bind.apply
  [17] fs2.Pull$UnconsRunR$1.out$$anonfun$2
  [18] fs2.Pull$UnconsRunR$1$$Lambda$867.0x0000000800edeba0.apply
  [19] fs2.Pull$.interruptGuard$1$$anonfun$1
  [20] fs2.Pull$$$Lambda$563.0x0000000800e4e7d0.apply
  [21] cats.effect.IOFiber.succeeded
  [22] cats.effect.IOFiber.runLoop
  [23] cats.effect.IOFiber.execR
  [24] cats.effect.IOFiber.run
  [25] cats.effect.unsafe.WorkerThread.run

--- 1233128470 ns (0.17%), 123 samples
  [ 0] fsnotify_[k]
  [ 1] __fsnotify_parent_[k]
  [ 2] vfs_write_[k]
  [ 3] ksys_write_[k]
  [ 4] __x64_sys_write_[k]
  [ 5] do_syscall_64_[k]
  [ 6] entry_SYSCALL_64_after_hwframe_[k]
  [ 7] write
  [ 8] sun.nio.ch.FileDispatcherImpl.write0
  [ 9] sun.nio.ch.FileDispatcherImpl.write
  [10] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [11] sun.nio.ch.IOUtil.write
  [12] sun.nio.ch.IOUtil.write
  [13] sun.nio.ch.FileChannelImpl.write
  [14] java.nio.channels.Channels.writeFullyImpl
  [15] java.nio.channels.Channels.writeFully
  [16] java.nio.channels.Channels$1.write
  [17] java.io.InputStream.transferTo
  [18] java.nio.file.Files.copy
  [19] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [20] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [21] jdk.nio.zipfs.ZipPath.newFileChannel
  [22] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [23] java.nio.channels.FileChannel.open
  [24] java.nio.channels.FileChannel.open
  [25] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [26] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$63.0x0000000800d35a20.apply
  [27] cats.effect.IOFiber.$anonfun$8
  [28] cats.effect.IOFiber$$Lambda$758.0x0000000800ec4c40.apply
  [29] cats.effect.unsafe.WorkerThread.blockOn
  [30] scala.concurrent.package$.blocking
  [31] cats.effect.IOFiber.runLoop
  [32] cats.effect.IOFiber.execR
  [33] cats.effect.IOFiber.run
  [34] cats.effect.unsafe.WorkerThread.run

--- 1202023326 ns (0.16%), 120 samples
  [ 0] jbyte_disjoint_arraycopy
  [ 1] jdk.internal.misc.Unsafe.copyMemory0
  [ 2] jdk.internal.misc.Unsafe.copyMemory
  [ 3] jdk.internal.misc.ScopedMemoryAccess.copyMemoryInternal
  [ 4] jdk.internal.misc.ScopedMemoryAccess.copyMemory
  [ 5] java.nio.ByteBuffer.putBuffer
  [ 6] java.nio.ByteBuffer.put
  [ 7] java.nio.HeapByteBuffer.put
  [ 8] sun.nio.ch.IOUtil.read
  [ 9] sun.nio.ch.IOUtil.read
  [10] sun.nio.ch.FileChannelImpl.readInternal
  [11] sun.nio.ch.FileChannelImpl.read
  [12] jdk.nio.zipfs.ZipFileSystem$1.read
  [13] fs2.io.file.FileHandleCompanionPlatform$$anon$1.read$$anonfun$1
  [14] fs2.io.file.FileHandleCompanionPlatform$$anon$1$$Lambda$887.0x0000000800ee5ce0.apply
  [15] cats.effect.IOFiber.$anonfun$8
  [16] cats.effect.IOFiber$$Lambda$758.0x0000000800ec4c40.apply
  [17] cats.effect.unsafe.WorkerThread.blockOn
  [18] scala.concurrent.package$.blocking
  [19] cats.effect.IOFiber.runLoop
  [20] cats.effect.IOFiber.execR
  [21] cats.effect.IOFiber.run
  [22] cats.effect.unsafe.WorkerThread.run

--- 1192846405 ns (0.16%), 119 samples
  [ 0] copy_user_generic_string_[k]
  [ 1] zfs_uiomove_iter?[zfs]_[k]
  [ 2] zfs_uiomove?[zfs]_[k]
  [ 3] dmu_read_uio_dnode?[zfs]_[k]
  [ 4] dmu_read_uio_dbuf?[zfs]_[k]
  [ 5] zfs_read?[zfs]_[k]
  [ 6] zpl_iter_read?[zfs]_[k]
  [ 7] new_sync_read_[k]
  [ 8] vfs_read_[k]
  [ 9] __x64_sys_pread64_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] __libc_pread64
  [13] sun.nio.ch.FileDispatcherImpl.pread0
  [14] sun.nio.ch.FileDispatcherImpl.pread
  [15] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [16] sun.nio.ch.IOUtil.read
  [17] sun.nio.ch.IOUtil.read
  [18] sun.nio.ch.FileChannelImpl.readInternal
  [19] sun.nio.ch.FileChannelImpl.read
  [20] jdk.nio.zipfs.ZipFileSystem$1.read
  [21] fs2.io.file.FileHandleCompanionPlatform$$anon$1.read$$anonfun$1
  [22] fs2.io.file.FileHandleCompanionPlatform$$anon$1$$Lambda$887.0x0000000800ee5ce0.apply
  [23] cats.effect.IOFiber.$anonfun$8
  [24] cats.effect.IOFiber$$Lambda$758.0x0000000800ec4c40.apply
  [25] cats.effect.unsafe.WorkerThread.blockOn
  [26] scala.concurrent.package$.blocking
  [27] cats.effect.IOFiber.runLoop
  [28] cats.effect.IOFiber.execR
  [29] cats.effect.IOFiber.run
  [30] cats.effect.unsafe.WorkerThread.run

--- 1192601109 ns (0.16%), 119 samples
  [ 0] cats.effect.IOFiber.succeeded
  [ 1] cats.effect.IOFiber.runLoop
  [ 2] cats.effect.IOFiber.execR
  [ 3] cats.effect.IOFiber.run
  [ 4] cats.effect.unsafe.WorkerThread.run

--- 1142703674 ns (0.16%), 114 samples
  [ 0] _raw_spin_unlock_irqrestore_[k]
  [ 1] __wake_up_common_lock_[k]
  [ 2] __wake_up_[k]
  [ 3] fsnotify_insert_event_[k]
  [ 4] inotify_handle_inode_event_[k]
  [ 5] fsnotify_handle_inode_event.isra.0_[k]
  [ 6] send_to_group_[k]
  [ 7] fsnotify_[k]
  [ 8] open_last_lookups_[k]
  [ 9] path_openat_[k]
  [10] do_filp_open_[k]
  [11] do_sys_openat2_[k]
  [12] __x64_sys_openat_[k]
  [13] do_syscall_64_[k]
  [14] entry_SYSCALL_64_after_hwframe_[k]
  [15] __open64
  [16] [unknown]
  [17] sun.nio.fs.UnixNativeDispatcher.open0
  [18] sun.nio.fs.UnixNativeDispatcher.open
  [19] sun.nio.fs.UnixChannelFactory.open
  [20] sun.nio.fs.UnixChannelFactory.newFileChannel
  [21] sun.nio.fs.UnixChannelFactory.newFileChannel
  [22] sun.nio.fs.UnixFileSystemProvider.newByteChannel
  [23] java.nio.file.spi.FileSystemProvider.newOutputStream
  [24] java.nio.file.Files.newOutputStream
  [25] java.nio.file.Files.copy
  [26] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [27] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [28] jdk.nio.zipfs.ZipPath.newFileChannel
  [29] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [30] java.nio.channels.FileChannel.open
  [31] java.nio.channels.FileChannel.open
  [32] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [33] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$63.0x0000000800d35a20.apply
  [34] cats.effect.IOFiber.$anonfun$8
  [35] cats.effect.IOFiber$$Lambda$758.0x0000000800ec4c40.apply
  [36] cats.effect.unsafe.WorkerThread.blockOn
  [37] scala.concurrent.package$.blocking
  [38] cats.effect.IOFiber.runLoop
  [39] cats.effect.IOFiber.execR
  [40] cats.effect.IOFiber.run
  [41] cats.effect.unsafe.WorkerThread.run

--- 1132628258 ns (0.15%), 113 samples
  [ 0] refill_obj_stock_[k]
  [ 1] obj_cgroup_charge_[k]
  [ 2] __kmalloc_[k]
  [ 3] inotify_handle_inode_event_[k]
  [ 4] fsnotify_handle_inode_event.isra.0_[k]
  [ 5] send_to_group_[k]
  [ 6] fsnotify_[k]
  [ 7] __fsnotify_parent_[k]
  [ 8] vfs_write_[k]
  [ 9] ksys_write_[k]
  [10] __x64_sys_write_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] write
  [14] sun.nio.ch.FileDispatcherImpl.write0
  [15] sun.nio.ch.FileDispatcherImpl.write
  [16] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.FileChannelImpl.write
  [20] java.nio.channels.Channels.writeFullyImpl
  [21] java.nio.channels.Channels.writeFully
  [22] java.nio.channels.Channels$1.write
  [23] java.io.InputStream.transferTo
  [24] java.nio.file.Files.copy
  [25] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [26] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [27] jdk.nio.zipfs.ZipPath.newFileChannel
  [28] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [29] java.nio.channels.FileChannel.open
  [30] java.nio.channels.FileChannel.open
  [31] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [32] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$63.0x0000000800d35a20.apply
  [33] cats.effect.IOFiber.$anonfun$8
  [34] cats.effect.IOFiber$$Lambda$758.0x0000000800ec4c40.apply
  [35] cats.effect.unsafe.WorkerThread.blockOn
  [36] scala.concurrent.package$.blocking
  [37] cats.effect.IOFiber.runLoop
  [38] cats.effect.IOFiber.execR
  [39] cats.effect.IOFiber.run
  [40] cats.effect.unsafe.WorkerThread.run

--- 1122446094 ns (0.15%), 112 samples
  [ 0] java.util.Arrays.copyOfRange
  [ 1] java.lang.String.<init>
  [ 2] java.lang.String.<init>
  [ 3] fs2.text$utf8$.processSingleChunk$1
  [ 4] fs2.text$utf8$.doPull$1$$anonfun$1
  [ 5] fs2.text$utf8$$$Lambda$982.0x0000000800f13990.apply
  [ 6] fs2.Pull$$anon$1.cont
  [ 7] fs2.Pull$.fs2$Pull$$$bindBindAux
  [ 8] fs2.Pull$BindBind.cont
  [ 9] fs2.Pull$ContP.apply
  [10] fs2.Pull$ContP.apply$
  [11] fs2.Pull$Bind.apply
  [12] fs2.Pull$Bind.apply
  [13] fs2.Pull$UnconsRunR$1.out$$anonfun$2
  [14] fs2.Pull$UnconsRunR$1$$Lambda$867.0x0000000800edeba0.apply
  [15] fs2.Pull$.interruptGuard$1$$anonfun$1
  [16] fs2.Pull$$$Lambda$563.0x0000000800e4e7d0.apply
  [17] cats.effect.IOFiber.succeeded
  [18] cats.effect.IOFiber.runLoop
  [19] cats.effect.IOFiber.execR
  [20] cats.effect.IOFiber.run
  [21] cats.effect.unsafe.WorkerThread.run

--- 1112377753 ns (0.15%), 111 samples
  [ 0] java.lang.System.arraycopy
  [ 1] java.lang.String.getBytes
  [ 2] java.lang.AbstractStringBuilder.putStringAt
  [ 3] java.lang.AbstractStringBuilder.putStringAt
  [ 4] java.lang.AbstractStringBuilder.append
  [ 5] java.lang.StringBuilder.append
  [ 6] java.lang.StringBuilder.append
  [ 7] scala.collection.mutable.StringBuilder.addAll
  [ 8] scala.collection.mutable.StringBuilder.$plus$plus$eq
  [ 9] fs2.Collector$Builder$$anon$4.$plus$eq$$anonfun$1
  [10] fs2.Collector$Builder$$anon$4$$Lambda$1008.0x0000000800f1c408.applyVoid
  [11] scala.runtime.function.JProcedure1.apply
  [12] scala.runtime.function.JProcedure1.apply
  [13] fs2.Chunk.foreach
  [14] fs2.Collector$Builder$$anon$4.$plus$eq
  [15] fs2.Stream$CompileOps.to$$anonfun$1$$anonfun$1
  [16] fs2.Stream$CompileOps$$Lambda$361.0x0000000800e01920.apply
  [17] fs2.Pull$OuterRun$1.out
  [18] fs2.Pull$.fs2$Pull$ViewRunner$1$$_$outLoop$1
  [19] fs2.Pull$ViewRunner$1.out
  [20] fs2.Pull$.go$1$$anonfun$1
  [21] fs2.Pull$$$Lambda$833.0x0000000800ed7248.apply
  [22] fs2.Pull$.interruptGuard$1$$anonfun$1
  [23] fs2.Pull$$$Lambda$563.0x0000000800e4e7d0.apply
  [24] cats.effect.IOFiber.succeeded
  [25] cats.effect.IOFiber.runLoop
  [26] cats.effect.IOFiber.execR
  [27] cats.effect.IOFiber.run
  [28] cats.effect.unsafe.WorkerThread.run

--- 1112311821 ns (0.15%), 111 samples
  [ 0] __memset_avx2_unaligned_erms
  [ 1] MemAllocator::allocate() const
  [ 2] TypeArrayKlass::allocate_common(int, bool, JavaThread*)
  [ 3] JVMCIRuntime::new_array_common(JavaThread*, Klass*, int, bool)
  [ 4] fs2.text$utf8$.processSingleChunk$1
  [ 5] fs2.text$utf8$.doPull$1$$anonfun$1
  [ 6] fs2.text$utf8$$$Lambda$982.0x0000000800f13990.apply
  [ 7] fs2.Pull$$anon$1.cont
  [ 8] fs2.Pull$.fs2$Pull$$$bindBindAux
  [ 9] fs2.Pull$BindBind.cont
  [10] fs2.Pull$ContP.apply
  [11] fs2.Pull$ContP.apply$
  [12] fs2.Pull$Bind.apply
  [13] fs2.Pull$Bind.apply
  [14] fs2.Pull$UnconsRunR$1.out$$anonfun$2
  [15] fs2.Pull$UnconsRunR$1$$Lambda$867.0x0000000800edeba0.apply
  [16] fs2.Pull$.interruptGuard$1$$anonfun$1
  [17] fs2.Pull$$$Lambda$563.0x0000000800e4e7d0.apply
  [18] cats.effect.IOFiber.succeeded
  [19] cats.effect.IOFiber.runLoop
  [20] cats.effect.IOFiber.execR
  [21] cats.effect.IOFiber.run
  [22] cats.effect.unsafe.WorkerThread.run

--- 1021793781 ns (0.14%), 102 samples
  [ 0] java.util.Arrays.copyOfRange
  [ 1] java.lang.StringLatin1.newString
  [ 2] java.lang.StringBuilder.toString
  [ 3] java.lang.StringBuilder.toString
  [ 4] scala.collection.mutable.StringBuilder.result
  [ 5] scala.collection.mutable.StringBuilder.toString
  [ 6] fs2.Collector$Builder$$anon$4.result
  [ 7] fs2.Collector$Builder$$anon$4.result
  [ 8] fs2.Stream$CompileOps.to$$anonfun$1$$anonfun$2
  [ 9] fs2.Stream$CompileOps$$Lambda$428.0x0000000800e1f720.apply
  [10] cats.Monad.map$$anonfun$1
  [11] cats.Monad$$Lambda$431.0x0000000800e1b000.apply
  [12] cats.effect.IOFiber.succeeded
  [13] cats.effect.IOFiber.runLoop
  [14] cats.effect.IOFiber.execR
  [15] cats.effect.IOFiber.run
  [16] cats.effect.unsafe.WorkerThread.run

--- 1001942704 ns (0.14%), 100 samples
  [ 0] java.nio.HeapByteBuffer.<init>
  [ 1] java.nio.ByteBuffer.allocate
  [ 2] fs2.io.file.FileHandleCompanionPlatform$$anon$1.read$$anonfun$1
  [ 3] fs2.io.file.FileHandleCompanionPlatform$$anon$1$$Lambda$887.0x0000000800ee5ce0.apply
  [ 4] cats.effect.IOFiber.$anonfun$8
  [ 5] cats.effect.IOFiber$$Lambda$758.0x0000000800ec4c40.apply
  [ 6] cats.effect.unsafe.WorkerThread.blockOn
  [ 7] scala.concurrent.package$.blocking
  [ 8] cats.effect.IOFiber.runLoop
  [ 9] cats.effect.IOFiber.execR
  [10] cats.effect.IOFiber.run
  [11] cats.effect.unsafe.WorkerThread.run

--- 1001585295 ns (0.14%), 100 samples
  [ 0] /usr/lib/x86_64-linux-gnu/libz.so.1.2.11
  [ 1] java.util.zip.Inflater.inflateBytesBytes
  [ 2] java.util.zip.Inflater.inflate
  [ 3] java.util.zip.InflaterInputStream.read
  [ 4] java.io.InputStream.transferTo
  [ 5] java.nio.file.Files.copy
  [ 6] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [ 7] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [ 8] jdk.nio.zipfs.ZipPath.newFileChannel
  [ 9] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [10] java.nio.channels.FileChannel.open
  [11] java.nio.channels.FileChannel.open
  [12] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [13] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$63.0x0000000800d35a20.apply
  [14] cats.effect.IOFiber.$anonfun$8
  [15] cats.effect.IOFiber$$Lambda$758.0x0000000800ec4c40.apply
  [16] cats.effect.unsafe.WorkerThread.blockOn
  [17] scala.concurrent.package$.blocking
  [18] cats.effect.IOFiber.runLoop
  [19] cats.effect.IOFiber.execR
  [20] cats.effect.IOFiber.run
  [21] cats.effect.unsafe.WorkerThread.run

--- 961903174 ns (0.13%), 96 samples
  [ 0] java.lang.System.arraycopy
  [ 1] fs2.Chunk$ArraySlice.copyToArray
  [ 2] fs2.Chunk.toArray
  [ 3] fs2.text$utf8$.processSingleChunk$1
  [ 4] fs2.text$utf8$.doPull$1$$anonfun$1
  [ 5] fs2.text$utf8$$$Lambda$982.0x0000000800f13990.apply
  [ 6] fs2.Pull$$anon$1.cont
  [ 7] fs2.Pull$.fs2$Pull$$$bindBindAux
  [ 8] fs2.Pull$BindBind.cont
  [ 9] fs2.Pull$ContP.apply
  [10] fs2.Pull$ContP.apply$
  [11] fs2.Pull$Bind.apply
  [12] fs2.Pull$Bind.apply
  [13] fs2.Pull$UnconsRunR$1.out$$anonfun$2
  [14] fs2.Pull$UnconsRunR$1$$Lambda$867.0x0000000800edeba0.apply
  [15] fs2.Pull$.interruptGuard$1$$anonfun$1
  [16] fs2.Pull$$$Lambda$563.0x0000000800e4e7d0.apply
  [17] cats.effect.IOFiber.succeeded
  [18] cats.effect.IOFiber.runLoop
  [19] cats.effect.IOFiber.execR
  [20] cats.effect.IOFiber.run
  [21] cats.effect.unsafe.WorkerThread.run

--- 961532932 ns (0.13%), 96 samples
  [ 0] __memset_avx2_unaligned_erms
  [ 1] MemAllocator::allocate() const
  [ 2] TypeArrayKlass::allocate_common(int, bool, JavaThread*)
  [ 3] JVMCIRuntime::new_array_common(JavaThread*, Klass*, int, bool)
  [ 4] java.lang.Math.max
  [ 5] scala.runtime.RichInt$.max$extension
  [ 6] fs2.text$utf8$.lastIncompleteBytes$1
  [ 7] fs2.text$utf8$.processSingleChunk$1
  [ 8] fs2.text$utf8$.doPull$1$$anonfun$1
  [ 9] fs2.text$utf8$$$Lambda$982.0x0000000800f13990.apply
  [10] fs2.Pull$$anon$1.cont
  [11] fs2.Pull$.fs2$Pull$$$bindBindAux
  [12] fs2.Pull$BindBind.cont
  [13] fs2.Pull$ContP.apply
  [14] fs2.Pull$ContP.apply$
  [15] fs2.Pull$Bind.apply
  [16] fs2.Pull$Bind.apply
  [17] fs2.Pull$UnconsRunR$1.out$$anonfun$2
  [18] fs2.Pull$UnconsRunR$1$$Lambda$867.0x0000000800edeba0.apply
  [19] fs2.Pull$.interruptGuard$1$$anonfun$1
  [20] fs2.Pull$$$Lambda$563.0x0000000800e4e7d0.apply
  [21] cats.effect.IOFiber.succeeded
  [22] cats.effect.IOFiber.runLoop
  [23] cats.effect.IOFiber.execR
  [24] cats.effect.IOFiber.run
  [25] cats.effect.unsafe.WorkerThread.run

--- 952060008 ns (0.13%), 95 samples
  [ 0] java.util.Arrays.copyOf
  [ 1] java.lang.AbstractStringBuilder.ensureCapacityInternal
  [ 2] java.lang.AbstractStringBuilder.append
  [ 3] java.lang.StringBuilder.append
  [ 4] java.lang.StringBuilder.append
  [ 5] scala.collection.mutable.StringBuilder.addAll
  [ 6] scala.collection.mutable.StringBuilder.$plus$plus$eq
  [ 7] fs2.Collector$Builder$$anon$4.$plus$eq$$anonfun$1
  [ 8] fs2.Collector$Builder$$anon$4$$Lambda$1008.0x0000000800f1c408.applyVoid
  [ 9] scala.runtime.function.JProcedure1.apply
  [10] scala.runtime.function.JProcedure1.apply
  [11] fs2.Chunk.foreach
  [12] fs2.Collector$Builder$$anon$4.$plus$eq
  [13] fs2.Stream$CompileOps.to$$anonfun$1$$anonfun$1
  [14] fs2.Stream$CompileOps$$Lambda$361.0x0000000800e01920.apply
  [15] fs2.Pull$OuterRun$1.out
  [16] fs2.Pull$.fs2$Pull$ViewRunner$1$$_$outLoop$1
  [17] fs2.Pull$ViewRunner$1.out
  [18] fs2.Pull$.go$1$$anonfun$1
  [19] fs2.Pull$$$Lambda$833.0x0000000800ed7248.apply
  [20] fs2.Pull$.interruptGuard$1$$anonfun$1
  [21] fs2.Pull$$$Lambda$563.0x0000000800e4e7d0.apply
  [22] cats.effect.IOFiber.succeeded
  [23] cats.effect.IOFiber.runLoop
  [24] cats.effect.IOFiber.execR
  [25] cats.effect.IOFiber.run
  [26] cats.effect.unsafe.WorkerThread.run

--- 862237574 ns (0.12%), 86 samples
  [ 0] copy_user_generic_string_[k]
  [ 1] zfs_uiomove_iter?[zfs]_[k]
  [ 2] zfs_uiomove?[zfs]_[k]
  [ 3] dmu_write_uio_dnode?[zfs]_[k]
  [ 4] dmu_write_uio_dbuf?[zfs]_[k]
  [ 5] zfs_write?[zfs]_[k]
  [ 6] zpl_iter_write?[zfs]_[k]
  [ 7] new_sync_write_[k]
  [ 8] vfs_write_[k]
  [ 9] ksys_write_[k]
  [10] __x64_sys_write_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] write
  [14] sun.nio.ch.FileDispatcherImpl.write0
  [15] sun.nio.ch.FileDispatcherImpl.write
  [16] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.FileChannelImpl.write
  [20] java.nio.channels.Channels.writeFullyImpl
  [21] java.nio.channels.Channels.writeFully
  [22] java.nio.channels.Channels$1.write
  [23] java.io.InputStream.transferTo
  [24] java.nio.file.Files.copy
  [25] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [26] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [27] jdk.nio.zipfs.ZipPath.newFileChannel
  [28] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [29] java.nio.channels.FileChannel.open
  [30] java.nio.channels.FileChannel.open
  [31] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [32] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$63.0x0000000800d35a20.apply
  [33] cats.effect.IOFiber.$anonfun$8
  [34] cats.effect.IOFiber$$Lambda$758.0x0000000800ec4c40.apply
  [35] cats.effect.unsafe.WorkerThread.blockOn
  [36] scala.concurrent.package$.blocking
  [37] cats.effect.IOFiber.runLoop
  [38] cats.effect.IOFiber.execR
  [39] cats.effect.IOFiber.run
  [40] cats.effect.unsafe.WorkerThread.run

--- 861823318 ns (0.12%), 86 samples
  [ 0] __memset_avx2_unaligned_erms
  [ 1] MemAllocator::allocate() const
  [ 2] TypeArrayKlass::allocate_common(int, bool, JavaThread*)
  [ 3] JVMCIRuntime::new_array_common(JavaThread*, Klass*, int, bool)
  [ 4] jdk.nio.zipfs.ZipFileSystem.getInflater
  [ 5] jdk.nio.zipfs.ZipFileSystem.getInputStream
  [ 6] jdk.nio.zipfs.ZipFileSystem.newInputStream
  [ 7] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [ 8] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [ 9] jdk.nio.zipfs.ZipPath.newFileChannel
  [10] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [11] java.nio.channels.FileChannel.open
  [12] java.nio.channels.FileChannel.open
  [13] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [14] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$63.0x0000000800d35a20.apply
  [15] cats.effect.IOFiber.$anonfun$8
  [16] cats.effect.IOFiber$$Lambda$758.0x0000000800ec4c40.apply
  [17] cats.effect.unsafe.WorkerThread.blockOn
  [18] scala.concurrent.package$.blocking
  [19] cats.effect.IOFiber.runLoop
  [20] cats.effect.IOFiber.execR
  [21] cats.effect.IOFiber.run
  [22] cats.effect.unsafe.WorkerThread.run

--- 852280525 ns (0.12%), 85 samples
  [ 0] _raw_spin_unlock_irqrestore_[k]
  [ 1] try_to_wake_up_[k]
  [ 2] wake_up_q_[k]
  [ 3] futex_wake_[k]
  [ 4] do_futex_[k]
  [ 5] __x64_sys_futex_[k]
  [ 6] do_syscall_64_[k]
  [ 7] entry_SYSCALL_64_after_hwframe_[k]
  [ 8] pthread_cond_signal@@GLIBC_2.3.2
  [ 9] jdk.internal.misc.Unsafe.unpark
  [10] java.util.concurrent.locks.LockSupport.unpark
  [11] java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext
  [12] java.util.concurrent.locks.AbstractQueuedSynchronizer.release
  [13] java.util.concurrent.locks.ReentrantLock.unlock
  [14] java.util.concurrent.ArrayBlockingQueue.offer
  [15] cats.effect.IOPlatform.unsafeRunTimed$$anonfun$1
  [16] cats.effect.IOPlatform$$Lambda$300.0x0000000800deb980.applyVoid
  [17] scala.runtime.function.JProcedure1.apply
  [18] scala.runtime.function.JProcedure1.apply
  [19] cats.effect.IO.unsafeRunAsync$$anonfun$3
  [20] cats.effect.IO$$Lambda$318.0x0000000800df0ed8.applyVoid
  [21] scala.runtime.function.JProcedure1.apply
  [22] scala.runtime.function.JProcedure1.apply
  [23] cats.effect.IO.$anonfun$6$$anonfun$3
  [24] cats.effect.IO$$Lambda$1297.0x0000000800f69de0.applyVoid
  [25] scala.runtime.function.JProcedure1.apply
  [26] scala.runtime.function.JProcedure1.apply
  [27] cats.effect.kernel.Outcome.fold
  [28] cats.effect.kernel.Outcome.fold$
  [29] cats.effect.kernel.Outcome$Succeeded.fold
  [30] cats.effect.IO.$anonfun$6
  [31] cats.effect.IO$$Lambda$331.0x0000000800df36b8.applyVoid
  [32] scala.runtime.function.JProcedure1.apply
  [33] scala.runtime.function.JProcedure1.apply
  [34] cats.effect.CallbackStack.apply
  [35] cats.effect.IOFiber.done
  [36] cats.effect.IOFiber.runTerminusSuccessK
  [37] cats.effect.IOFiber.succeeded
  [38] cats.effect.IOFiber.runLoop
  [39] cats.effect.IOFiber.execR
  [40] cats.effect.IOFiber.run
  [41] cats.effect.unsafe.WorkerThread.run

--- 812214656 ns (0.11%), 81 samples
  [ 0] page_counter_try_charge_[k]
  [ 1] try_charge_memcg_[k]
  [ 2] obj_cgroup_charge_[k]
  [ 3] __kmalloc_[k]
  [ 4] inotify_handle_inode_event_[k]
  [ 5] fsnotify_handle_inode_event.isra.0_[k]
  [ 6] send_to_group_[k]
  [ 7] fsnotify_[k]
  [ 8] __fsnotify_parent_[k]
  [ 9] vfs_write_[k]
  [10] ksys_write_[k]
  [11] __x64_sys_write_[k]
  [12] do_syscall_64_[k]
  [13] entry_SYSCALL_64_after_hwframe_[k]
  [14] write
  [15] sun.nio.ch.FileDispatcherImpl.write0
  [16] sun.nio.ch.FileDispatcherImpl.write
  [17] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.IOUtil.write
  [20] sun.nio.ch.FileChannelImpl.write
  [21] java.nio.channels.Channels.writeFullyImpl
  [22] java.nio.channels.Channels.writeFully
  [23] java.nio.channels.Channels$1.write
  [24] java.io.InputStream.transferTo
  [25] java.nio.file.Files.copy
  [26] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [27] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [28] jdk.nio.zipfs.ZipPath.newFileChannel
  [29] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [30] java.nio.channels.FileChannel.open
  [31] java.nio.channels.FileChannel.open
  [32] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [33] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$63.0x0000000800d35a20.apply
  [34] cats.effect.IOFiber.$anonfun$8
  [35] cats.effect.IOFiber$$Lambda$758.0x0000000800ec4c40.apply
  [36] cats.effect.unsafe.WorkerThread.blockOn
  [37] scala.concurrent.package$.blocking
  [38] cats.effect.IOFiber.runLoop
  [39] cats.effect.IOFiber.execR
  [40] cats.effect.IOFiber.run
  [41] cats.effect.unsafe.WorkerThread.run

--- 792165325 ns (0.11%), 79 samples
  [ 0] spl_kmem_cache_alloc?[spl]_[k]
  [ 1] zio_data_buf_alloc?[zfs]_[k]
  [ 2] arc_get_data_buf?[zfs]_[k]
  [ 3] arc_buf_alloc_impl?[zfs]_[k]
  [ 4] arc_alloc_buf?[zfs]_[k]
  [ 5] dbuf_new_size?[zfs]_[k]
  [ 6] dnode_set_blksz?[zfs]_[k]
  [ 7] dmu_object_set_blocksize?[zfs]_[k]
  [ 8] zfs_grow_blocksize?[zfs]_[k]
  [ 9] zfs_write?[zfs]_[k]
  [10] zpl_iter_write?[zfs]_[k]
  [11] new_sync_write_[k]
  [12] vfs_write_[k]
  [13] ksys_write_[k]
  [14] __x64_sys_write_[k]
  [15] do_syscall_64_[k]
  [16] entry_SYSCALL_64_after_hwframe_[k]
  [17] write
  [18] sun.nio.ch.FileDispatcherImpl.write0
  [19] sun.nio.ch.FileDispatcherImpl.write
  [20] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [21] sun.nio.ch.IOUtil.write
  [22] sun.nio.ch.IOUtil.write
  [23] sun.nio.ch.FileChannelImpl.write
  [24] java.nio.channels.Channels.writeFullyImpl
  [25] java.nio.channels.Channels.writeFully
  [26] java.nio.channels.Channels$1.write
  [27] java.io.InputStream.transferTo
  [28] java.nio.file.Files.copy
  [29] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [30] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [31] jdk.nio.zipfs.ZipPath.newFileChannel
  [32] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [33] java.nio.channels.FileChannel.open
  [34] java.nio.channels.FileChannel.open
  [35] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [36] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$63.0x0000000800d35a20.apply
  [37] cats.effect.IOFiber.$anonfun$8
  [38] cats.effect.IOFiber$$Lambda$758.0x0000000800ec4c40.apply
  [39] cats.effect.unsafe.WorkerThread.blockOn
  [40] scala.concurrent.package$.blocking
  [41] cats.effect.IOFiber.runLoop
  [42] cats.effect.IOFiber.execR
  [43] cats.effect.IOFiber.run
  [44] cats.effect.unsafe.WorkerThread.run

--- 792043119 ns (0.11%), 79 samples
  [ 0] send_to_group_[k]
  [ 1] fsnotify_[k]
  [ 2] __fsnotify_parent_[k]
  [ 3] vfs_write_[k]
  [ 4] ksys_write_[k]
  [ 5] __x64_sys_write_[k]
  [ 6] do_syscall_64_[k]
  [ 7] entry_SYSCALL_64_after_hwframe_[k]
  [ 8] write
  [ 9] sun.nio.ch.FileDispatcherImpl.write0
  [10] sun.nio.ch.FileDispatcherImpl.write
  [11] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [12] sun.nio.ch.IOUtil.write
  [13] sun.nio.ch.IOUtil.write
  [14] sun.nio.ch.FileChannelImpl.write
  [15] java.nio.channels.Channels.writeFullyImpl
  [16] java.nio.channels.Channels.writeFully
  [17] java.nio.channels.Channels$1.write
  [18] java.io.InputStream.transferTo
  [19] java.nio.file.Files.copy
  [20] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [21] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [22] jdk.nio.zipfs.ZipPath.newFileChannel
  [23] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [24] java.nio.channels.FileChannel.open
  [25] java.nio.channels.FileChannel.open
  [26] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [27] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$63.0x0000000800d35a20.apply
  [28] cats.effect.IOFiber.$anonfun$8
  [29] cats.effect.IOFiber$$Lambda$758.0x0000000800ec4c40.apply
  [30] cats.effect.unsafe.WorkerThread.blockOn
  [31] scala.concurrent.package$.blocking
  [32] cats.effect.IOFiber.runLoop
  [33] cats.effect.IOFiber.execR
  [34] cats.effect.IOFiber.run
  [35] cats.effect.unsafe.WorkerThread.run

--- 791275432 ns (0.11%), 79 samples
  [ 0] __memset_avx2_unaligned_erms
  [ 1] MemAllocator::allocate() const
  [ 2] TypeArrayKlass::allocate_common(int, bool, JavaThread*)
  [ 3] JVMCIRuntime::new_array_common(JavaThread*, Klass*, int, bool)
  [ 4] fs2.Stream$CompileOps$$Lambda$428.0x0000000800e1f720.apply
  [ 5] cats.Monad.map$$anonfun$1
  [ 6] cats.Monad$$Lambda$431.0x0000000800e1b000.apply
  [ 7] cats.effect.IOFiber.succeeded
  [ 8] cats.effect.IOFiber.runLoop
  [ 9] cats.effect.IOFiber.execR
  [10] cats.effect.IOFiber.run
  [11] cats.effect.unsafe.WorkerThread.run

--- 771640878 ns (0.11%), 77 samples
  [ 0] __memset_avx2_unaligned_erms
  [ 1] MemAllocator::allocate() const
  [ 2] TypeArrayKlass::allocate_common(int, bool, JavaThread*)
  [ 3] JVMCIRuntime::new_array_common(JavaThread*, Klass*, int, bool)
  [ 4] fs2.Pull$OuterRun$1.out
  [ 5] fs2.Pull$.fs2$Pull$ViewRunner$1$$_$outLoop$1
  [ 6] fs2.Pull$ViewRunner$1.out
  [ 7] fs2.Pull$.go$1$$anonfun$1
  [ 8] fs2.Pull$$$Lambda$833.0x0000000800ed7248.apply
  [ 9] fs2.Pull$.interruptGuard$1$$anonfun$1
  [10] fs2.Pull$$$Lambda$563.0x0000000800e4e7d0.apply
  [11] cats.effect.IOFiber.succeeded
  [12] cats.effect.IOFiber.runLoop
  [13] cats.effect.IOFiber.execR
  [14] cats.effect.IOFiber.run
  [15] cats.effect.unsafe.WorkerThread.run

--- 771616377 ns (0.11%), 77 samples
  [ 0] __memmove_avx_unaligned_erms
  [ 1] java.util.zip.Inflater.inflateBytesBytes
  [ 2] java.util.zip.Inflater.inflate
  [ 3] java.util.zip.InflaterInputStream.read
  [ 4] java.io.InputStream.transferTo
  [ 5] java.nio.file.Files.copy
  [ 6] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [ 7] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [ 8] jdk.nio.zipfs.ZipPath.newFileChannel
  [ 9] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [10] java.nio.channels.FileChannel.open
  [11] java.nio.channels.FileChannel.open
  [12] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [13] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$63.0x0000000800d35a20.apply
  [14] cats.effect.IOFiber.$anonfun$8
  [15] cats.effect.IOFiber$$Lambda$758.0x0000000800ec4c40.apply
  [16] cats.effect.unsafe.WorkerThread.blockOn
  [17] scala.concurrent.package$.blocking
  [18] cats.effect.IOFiber.runLoop
  [19] cats.effect.IOFiber.execR
  [20] cats.effect.IOFiber.run
  [21] cats.effect.unsafe.WorkerThread.run

--- 751905521 ns (0.10%), 75 samples
  [ 0] cats.effect.tracing.RingBuffer.push
  [ 1] cats.effect.IOFiber.pushTracingEvent
  [ 2] cats.effect.IOFiber.runLoop
  [ 3] cats.effect.IOFiber.execR
  [ 4] cats.effect.IOFiber.run
  [ 5] cats.effect.unsafe.WorkerThread.run

--- 751819731 ns (0.10%), 75 samples
  [ 0] memset_[k]
  [ 1] dnode_set_blksz?[zfs]_[k]
  [ 2] dmu_object_set_blocksize?[zfs]_[k]
  [ 3] zfs_grow_blocksize?[zfs]_[k]
  [ 4] zfs_write?[zfs]_[k]
  [ 5] zpl_iter_write?[zfs]_[k]
  [ 6] new_sync_write_[k]
  [ 7] vfs_write_[k]
  [ 8] ksys_write_[k]
  [ 9] __x64_sys_write_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] write
  [13] sun.nio.ch.FileDispatcherImpl.write0
  [14] sun.nio.ch.FileDispatcherImpl.write
  [15] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [16] sun.nio.ch.IOUtil.write
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.FileChannelImpl.write
  [19] java.nio.channels.Channels.writeFullyImpl
  [20] java.nio.channels.Channels.writeFully
  [21] java.nio.channels.Channels$1.write
  [22] java.io.InputStream.transferTo
  [23] java.nio.file.Files.copy
  [24] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [25] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [26] jdk.nio.zipfs.ZipPath.newFileChannel
  [27] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [28] java.nio.channels.FileChannel.open
  [29] java.nio.channels.FileChannel.open
  [30] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [31] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$63.0x0000000800d35a20.apply
  [32] cats.effect.IOFiber.$anonfun$8
  [33] cats.effect.IOFiber$$Lambda$758.0x0000000800ec4c40.apply
  [34] cats.effect.unsafe.WorkerThread.blockOn
  [35] scala.concurrent.package$.blocking
  [36] cats.effect.IOFiber.runLoop
  [37] cats.effect.IOFiber.execR
  [38] cats.effect.IOFiber.run
  [39] cats.effect.unsafe.WorkerThread.run

--- 751219702 ns (0.10%), 75 samples
  [ 0] java.lang.StringCoding.hasNegatives
  [ 1] java.lang.String.<init>
  [ 2] java.lang.String.<init>
  [ 3] fs2.text$utf8$.processSingleChunk$1
  [ 4] fs2.text$utf8$.doPull$1$$anonfun$1
  [ 5] fs2.text$utf8$$$Lambda$982.0x0000000800f13990.apply
  [ 6] fs2.Pull$$anon$1.cont
  [ 7] fs2.Pull$.fs2$Pull$$$bindBindAux
  [ 8] fs2.Pull$BindBind.cont
  [ 9] fs2.Pull$ContP.apply
  [10] fs2.Pull$ContP.apply$
  [11] fs2.Pull$Bind.apply
  [12] fs2.Pull$Bind.apply
  [13] fs2.Pull$UnconsRunR$1.out$$anonfun$2
  [14] fs2.Pull$UnconsRunR$1$$Lambda$867.0x0000000800edeba0.apply
  [15] fs2.Pull$.interruptGuard$1$$anonfun$1
  [16] fs2.Pull$$$Lambda$563.0x0000000800e4e7d0.apply
  [17] cats.effect.IOFiber.succeeded
  [18] cats.effect.IOFiber.runLoop
  [19] cats.effect.IOFiber.execR
  [20] cats.effect.IOFiber.run
  [21] cats.effect.unsafe.WorkerThread.run

--- 741473819 ns (0.10%), 74 samples
  [ 0] _raw_spin_unlock_irqrestore_[k]
  [ 1] __wake_up_common_lock_[k]
  [ 2] __wake_up_[k]
  [ 3] fsnotify_insert_event_[k]
  [ 4] inotify_handle_inode_event_[k]
  [ 5] fsnotify_handle_inode_event.isra.0_[k]
  [ 6] send_to_group_[k]
  [ 7] fsnotify_[k]
  [ 8] open_last_lookups_[k]
  [ 9] path_openat_[k]
  [10] do_filp_open_[k]
  [11] do_sys_openat2_[k]
  [12] __x64_sys_openat_[k]
  [13] do_syscall_64_[k]
  [14] entry_SYSCALL_64_after_hwframe_[k]
  [15] __open64
  [16] [unknown]
  [17] sun.nio.fs.UnixNativeDispatcher.open0
  [18] sun.nio.fs.UnixNativeDispatcher.open
  [19] sun.nio.fs.UnixChannelFactory.open
  [20] sun.nio.fs.UnixChannelFactory.newFileChannel
  [21] sun.nio.fs.UnixChannelFactory.newFileChannel
  [22] sun.nio.fs.UnixFileSystemProvider.newByteChannel
  [23] java.nio.file.Files.newByteChannel
  [24] java.nio.file.Files.createFile
  [25] java.nio.file.TempFileHelper.create
  [26] java.nio.file.TempFileHelper.createTempFile
  [27] java.nio.file.Files.createTempFile
  [28] jdk.nio.zipfs.ZipFileSystem.createTempFileInSameDirectoryAs
  [29] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [30] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [31] jdk.nio.zipfs.ZipPath.newFileChannel
  [32] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [33] java.nio.channels.FileChannel.open
  [34] java.nio.channels.FileChannel.open
  [35] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [36] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$63.0x0000000800d35a20.apply
  [37] cats.effect.IOFiber.$anonfun$8
  [38] cats.effect.IOFiber$$Lambda$758.0x0000000800ec4c40.apply
  [39] cats.effect.unsafe.WorkerThread.blockOn
  [40] scala.concurrent.package$.blocking
  [41] cats.effect.IOFiber.runLoop
  [42] cats.effect.IOFiber.execR
  [43] cats.effect.IOFiber.run
  [44] cats.effect.unsafe.WorkerThread.run

--- 730986496 ns (0.10%), 73 samples
  [ 0] java.lang.System.arraycopy
  [ 1] fs2.Chunk$ArraySlice.copyToArray
  [ 2] fs2.Chunk.toArray
  [ 3] fs2.text$utf8$.processSingleChunk$1
  [ 4] fs2.text$utf8$.doPull$1$$anonfun$1
  [ 5] fs2.text$utf8$$$Lambda$982.0x0000000800f13990.apply
  [ 6] fs2.Pull$$anon$1.cont
  [ 7] fs2.Pull$.fs2$Pull$$$bindBindAux
  [ 8] fs2.Pull$BindBind.cont
  [ 9] fs2.Pull$ContP.apply
  [10] fs2.Pull$ContP.apply$
  [11] fs2.Pull$Bind.apply
  [12] fs2.Pull$Bind.apply
  [13] fs2.Pull$UnconsRunR$1.out$$anonfun$2
  [14] fs2.Pull$UnconsRunR$1$$Lambda$867.0x0000000800edeba0.apply
  [15] fs2.Pull$.interruptGuard$1$$anonfun$1
  [16] fs2.Pull$$$Lambda$563.0x0000000800e4e7d0.apply
  [17] cats.effect.IOFiber.succeeded
  [18] cats.effect.IOFiber.runLoop
  [19] cats.effect.IOFiber.execR
  [20] cats.effect.IOFiber.run
  [21] cats.effect.unsafe.WorkerThread.run

--- 711516392 ns (0.10%), 71 samples
  [ 0] fsnotify_[k]
  [ 1] __fsnotify_parent_[k]
  [ 2] vfs_write_[k]
  [ 3] ksys_write_[k]
  [ 4] __x64_sys_write_[k]
  [ 5] do_syscall_64_[k]
  [ 6] entry_SYSCALL_64_after_hwframe_[k]
  [ 7] write
  [ 8] sun.nio.ch.FileDispatcherImpl.write0
  [ 9] sun.nio.ch.FileDispatcherImpl.write
  [10] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [11] sun.nio.ch.IOUtil.write
  [12] sun.nio.ch.IOUtil.write
  [13] sun.nio.ch.FileChannelImpl.write
  [14] java.nio.channels.Channels.writeFullyImpl
  [15] java.nio.channels.Channels.writeFully
  [16] java.nio.channels.Channels$1.write
  [17] java.io.InputStream.transferTo
  [18] java.nio.file.Files.copy
  [19] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [20] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [21] jdk.nio.zipfs.ZipPath.newFileChannel
  [22] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [23] java.nio.channels.FileChannel.open
  [24] java.nio.channels.FileChannel.open
  [25] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [26] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$63.0x0000000800d35a20.apply
  [27] cats.effect.IOFiber.$anonfun$8
  [28] cats.effect.IOFiber$$Lambda$758.0x0000000800ec4c40.apply
  [29] cats.effect.unsafe.WorkerThread.blockOn
  [30] scala.concurrent.package$.blocking
  [31] cats.effect.IOFiber.runLoop
  [32] cats.effect.IOFiber.execR
  [33] cats.effect.IOFiber.run
  [34] cats.effect.unsafe.WorkerThread.run

--- 691917395 ns (0.09%), 69 samples
  [ 0] itable stub
  [ 1] cats.effect.IOFiber.runLoop
  [ 2] cats.effect.IOFiber.execR
  [ 3] cats.effect.IOFiber.run
  [ 4] cats.effect.unsafe.WorkerThread.run

--- 691766374 ns (0.09%), 69 samples
  [ 0] java.util.concurrent.ConcurrentLinkedQueue.poll
  [ 1] cats.effect.unsafe.ScalQueue.poll
  [ 2] cats.effect.unsafe.WorkerThread.run

--- 691571846 ns (0.09%), 69 samples
  [ 0] _raw_spin_unlock_irqrestore_[k]
  [ 1] __wake_up_common_lock_[k]
  [ 2] __wake_up_[k]
  [ 3] fsnotify_insert_event_[k]
  [ 4] inotify_handle_inode_event_[k]
  [ 5] fsnotify_handle_inode_event.isra.0_[k]
  [ 6] send_to_group_[k]
  [ 7] fsnotify_[k]
  [ 8] open_last_lookups_[k]
  [ 9] path_openat_[k]
  [10] do_filp_open_[k]
  [11] do_sys_openat2_[k]
  [12] __x64_sys_openat_[k]
  [13] do_syscall_64_[k]
  [14] entry_SYSCALL_64_after_hwframe_[k]
  [15] __open64
  [16] [unknown]
  [17] sun.nio.fs.UnixNativeDispatcher.open0
  [18] sun.nio.fs.UnixNativeDispatcher.open
  [19] sun.nio.fs.UnixChannelFactory.open
  [20] sun.nio.fs.UnixChannelFactory.newFileChannel
  [21] sun.nio.fs.UnixChannelFactory.newFileChannel
  [22] sun.nio.fs.UnixFileSystemProvider.newByteChannel
  [23] java.nio.file.spi.FileSystemProvider.newOutputStream
  [24] java.nio.file.Files.newOutputStream
  [25] java.nio.file.Files.copy
  [26] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [27] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [28] jdk.nio.zipfs.ZipPath.newFileChannel
  [29] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [30] java.nio.channels.FileChannel.open
  [31] java.nio.channels.FileChannel.open
  [32] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [33] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$63.0x0000000800d35a20.apply
  [34] cats.effect.IOFiber.$anonfun$8
  [35] cats.effect.IOFiber$$Lambda$758.0x0000000800ec4c40.apply
  [36] cats.effect.unsafe.WorkerThread.blockOn
  [37] scala.concurrent.package$.blocking
  [38] cats.effect.IOFiber.runLoop
  [39] cats.effect.IOFiber.execR
  [40] cats.effect.IOFiber.run
  [41] cats.effect.unsafe.WorkerThread.run

--- 681444271 ns (0.09%), 68 samples
  [ 0] refill_stock_[k]
  [ 1] try_charge_memcg_[k]
  [ 2] obj_cgroup_charge_[k]
  [ 3] __kmalloc_[k]
  [ 4] inotify_handle_inode_event_[k]
  [ 5] fsnotify_handle_inode_event.isra.0_[k]
  [ 6] send_to_group_[k]
  [ 7] fsnotify_[k]
  [ 8] __fsnotify_parent_[k]
  [ 9] vfs_write_[k]
  [10] ksys_write_[k]
  [11] __x64_sys_write_[k]
  [12] do_syscall_64_[k]
  [13] entry_SYSCALL_64_after_hwframe_[k]
  [14] write
  [15] sun.nio.ch.FileDispatcherImpl.write0
  [16] sun.nio.ch.FileDispatcherImpl.write
  [17] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.IOUtil.write
  [20] sun.nio.ch.FileChannelImpl.write
  [21] java.nio.channels.Channels.writeFullyImpl
  [22] java.nio.channels.Channels.writeFully
  [23] java.nio.channels.Channels$1.write
  [24] java.io.InputStream.transferTo
  [25] java.nio.file.Files.copy
  [26] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [27] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [28] jdk.nio.zipfs.ZipPath.newFileChannel
  [29] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [30] java.nio.channels.FileChannel.open
  [31] java.nio.channels.FileChannel.open
  [32] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [33] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$63.0x0000000800d35a20.apply
  [34] cats.effect.IOFiber.$anonfun$8
  [35] cats.effect.IOFiber$$Lambda$758.0x0000000800ec4c40.apply
  [36] cats.effect.unsafe.WorkerThread.blockOn
  [37] scala.concurrent.package$.blocking
  [38] cats.effect.IOFiber.runLoop
  [39] cats.effect.IOFiber.execR
  [40] cats.effect.IOFiber.run
  [41] cats.effect.unsafe.WorkerThread.run

--- 681410726 ns (0.09%), 68 samples
  [ 0] jlong_disjoint_arraycopy
  [ 1] jdk.internal.misc.Unsafe.copyMemory0
  [ 2] jdk.internal.misc.Unsafe.copyMemory
  [ 3] jdk.internal.misc.ScopedMemoryAccess.copyMemoryInternal
  [ 4] jdk.internal.misc.ScopedMemoryAccess.copyMemory
  [ 5] java.nio.ByteBuffer.putBuffer
  [ 6] java.nio.ByteBuffer.put
  [ 7] sun.nio.ch.IOUtil.write
  [ 8] sun.nio.ch.IOUtil.write
  [ 9] sun.nio.ch.FileChannelImpl.write
  [10] java.nio.channels.Channels.writeFullyImpl
  [11] java.nio.channels.Channels.writeFully
  [12] java.nio.channels.Channels$1.write
  [13] java.io.InputStream.transferTo
  [14] java.nio.file.Files.copy
  [15] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [16] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [17] jdk.nio.zipfs.ZipPath.newFileChannel
  [18] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [19] java.nio.channels.FileChannel.open
  [20] java.nio.channels.FileChannel.open
  [21] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [22] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$63.0x0000000800d35a20.apply
  [23] cats.effect.IOFiber.$anonfun$8
  [24] cats.effect.IOFiber$$Lambda$758.0x0000000800ec4c40.apply
  [25] cats.effect.unsafe.WorkerThread.blockOn
  [26] scala.concurrent.package$.blocking
  [27] cats.effect.IOFiber.runLoop
  [28] cats.effect.IOFiber.execR
  [29] cats.effect.IOFiber.run
  [30] cats.effect.unsafe.WorkerThread.run

--- 671505742 ns (0.09%), 67 samples
  [ 0] _raw_spin_unlock_irqrestore_[k]
  [ 1] __wake_up_common_lock_[k]
  [ 2] __wake_up_[k]
  [ 3] fsnotify_insert_event_[k]
  [ 4] inotify_handle_inode_event_[k]
  [ 5] fsnotify_handle_inode_event.isra.0_[k]
  [ 6] send_to_group_[k]
  [ 7] fsnotify_[k]
  [ 8] vfs_unlink_[k]
  [ 9] do_unlinkat_[k]
  [10] __x64_sys_unlink_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] __GI_unlink
  [14] sun.nio.fs.UnixNativeDispatcher.unlink0
  [15] sun.nio.fs.UnixNativeDispatcher.unlink
  [16] sun.nio.fs.UnixFileSystemProvider.implDelete
  [17] sun.nio.fs.AbstractFileSystemProvider.deleteIfExists
  [18] java.nio.file.Files.deleteIfExists
  [19] java.nio.file.Files.copy
  [20] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [21] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [22] jdk.nio.zipfs.ZipPath.newFileChannel
  [23] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [24] java.nio.channels.FileChannel.open
  [25] java.nio.channels.FileChannel.open
  [26] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [27] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$63.0x0000000800d35a20.apply
  [28] cats.effect.IOFiber.$anonfun$8
  [29] cats.effect.IOFiber$$Lambda$758.0x0000000800ec4c40.apply
  [30] cats.effect.unsafe.WorkerThread.blockOn
  [31] scala.concurrent.package$.blocking
  [32] cats.effect.IOFiber.runLoop
  [33] cats.effect.IOFiber.execR
  [34] cats.effect.IOFiber.run
  [35] cats.effect.unsafe.WorkerThread.run

--- 661777641 ns (0.09%), 66 samples
  [ 0] zfs_write?[zfs]_[k]
  [ 1] zpl_iter_write?[zfs]_[k]
  [ 2] new_sync_write_[k]
  [ 3] vfs_write_[k]
  [ 4] ksys_write_[k]
  [ 5] __x64_sys_write_[k]
  [ 6] do_syscall_64_[k]
  [ 7] entry_SYSCALL_64_after_hwframe_[k]
  [ 8] write
  [ 9] sun.nio.ch.FileDispatcherImpl.write0
  [10] sun.nio.ch.FileDispatcherImpl.write
  [11] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [12] sun.nio.ch.IOUtil.write
  [13] sun.nio.ch.IOUtil.write
  [14] sun.nio.ch.FileChannelImpl.write
  [15] java.nio.channels.Channels.writeFullyImpl
  [16] java.nio.channels.Channels.writeFully
  [17] java.nio.channels.Channels$1.write
  [18] java.io.InputStream.transferTo
  [19] java.nio.file.Files.copy
  [20] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [21] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [22] jdk.nio.zipfs.ZipPath.newFileChannel
  [23] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [24] java.nio.channels.FileChannel.open
  [25] java.nio.channels.FileChannel.open
  [26] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [27] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$63.0x0000000800d35a20.apply
  [28] cats.effect.IOFiber.$anonfun$8
  [29] cats.effect.IOFiber$$Lambda$758.0x0000000800ec4c40.apply
  [30] cats.effect.unsafe.WorkerThread.blockOn
  [31] scala.concurrent.package$.blocking
  [32] cats.effect.IOFiber.runLoop
  [33] cats.effect.IOFiber.execR
  [34] cats.effect.IOFiber.run
  [35] cats.effect.unsafe.WorkerThread.run

--- 661023180 ns (0.09%), 66 samples
  [ 0] __memset_avx2_unaligned_erms
  [ 1] MemAllocator::allocate() const
  [ 2] TypeArrayKlass::allocate_common(int, bool, JavaThread*)
  [ 3] JVMCIRuntime::new_array_common(JavaThread*, Klass*, int, bool)
  [ 4] fs2.text$utf8$.processSingleChunk$1
  [ 5] fs2.text$utf8$.doPull$1$$anonfun$1
  [ 6] fs2.text$utf8$$$Lambda$982.0x0000000800f13990.apply
  [ 7] fs2.Pull$$anon$1.cont
  [ 8] fs2.Pull$.fs2$Pull$$$bindBindAux
  [ 9] fs2.Pull$BindBind.cont
  [10] fs2.Pull$ContP.apply
  [11] fs2.Pull$ContP.apply$
  [12] fs2.Pull$Bind.apply
  [13] fs2.Pull$Bind.apply
  [14] fs2.Pull$UnconsRunR$1.out$$anonfun$2
  [15] fs2.Pull$UnconsRunR$1$$Lambda$867.0x0000000800edeba0.apply
  [16] fs2.Pull$.interruptGuard$1$$anonfun$1
  [17] fs2.Pull$$$Lambda$563.0x0000000800e4e7d0.apply
  [18] cats.effect.IOFiber.succeeded
  [19] cats.effect.IOFiber.runLoop
  [20] cats.effect.IOFiber.execR
  [21] cats.effect.IOFiber.run
  [22] cats.effect.unsafe.WorkerThread.run

--- 641624948 ns (0.09%), 64 samples
  [ 0] _raw_spin_unlock_irqrestore_[k]
  [ 1] __wake_up_common_lock_[k]
  [ 2] __wake_up_[k]
  [ 3] fsnotify_insert_event_[k]
  [ 4] inotify_handle_inode_event_[k]
  [ 5] fsnotify_handle_inode_event.isra.0_[k]
  [ 6] send_to_group_[k]
  [ 7] fsnotify_[k]
  [ 8] vfs_unlink_[k]
  [ 9] do_unlinkat_[k]
  [10] __x64_sys_unlink_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] __GI_unlink
  [14] sun.nio.fs.UnixNativeDispatcher.unlink0
  [15] sun.nio.fs.UnixNativeDispatcher.unlink
  [16] sun.nio.fs.UnixFileSystemProvider.implDelete
  [17] sun.nio.fs.AbstractFileSystemProvider.delete
  [18] java.nio.file.Files.delete
  [19] jdk.nio.zipfs.ZipFileSystem.removeTempPathForEntry
  [20] jdk.nio.zipfs.ZipFileSystem$1.implCloseChannel
  [21] java.nio.channels.spi.AbstractInterruptibleChannel.close
  [22] fs2.io.file.FilesCompanionPlatform.openFileChannel$$anonfun$1$$anonfun$1
  [23] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$openFileChannel$$anonfun$1$$anonfun$adapted$1
  [24] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$773.0x0000000800ec6ce0.apply
  [25] cats.effect.IOFiber.$anonfun$8
  [26] cats.effect.IOFiber$$Lambda$758.0x0000000800ec4c40.apply
  [27] cats.effect.unsafe.WorkerThread.blockOn
  [28] scala.concurrent.package$.blocking
  [29] cats.effect.IOFiber.runLoop
  [30] cats.effect.IOFiber.execR
  [31] cats.effect.IOFiber.run
  [32] cats.effect.unsafe.WorkerThread.run

--- 641098301 ns (0.09%), 64 samples
  [ 0] /usr/lib/x86_64-linux-gnu/libz.so.1.2.11
  [ 1] [unknown]
  [ 2] java.util.zip.Inflater.inflateBytesBytes
  [ 3] java.util.zip.Inflater.inflate
  [ 4] java.util.zip.InflaterInputStream.read
  [ 5] java.io.InputStream.transferTo
  [ 6] java.nio.file.Files.copy
  [ 7] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [ 8] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [ 9] jdk.nio.zipfs.ZipPath.newFileChannel
  [10] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [11] java.nio.channels.FileChannel.open
  [12] java.nio.channels.FileChannel.open
  [13] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [14] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$63.0x0000000800d35a20.apply
  [15] cats.effect.IOFiber.$anonfun$8
  [16] cats.effect.IOFiber$$Lambda$758.0x0000000800ec4c40.apply
  [17] cats.effect.unsafe.WorkerThread.blockOn
  [18] scala.concurrent.package$.blocking
  [19] cats.effect.IOFiber.runLoop
  [20] cats.effect.IOFiber.execR
  [21] cats.effect.IOFiber.run
  [22] cats.effect.unsafe.WorkerThread.run

--- 631318719 ns (0.09%), 63 samples
  [ 0] scala.reflect.ManifestFactory$ByteManifest.newArray
  [ 1] scala.reflect.ManifestFactory$ByteManifest.newArray
  [ 2] scala.runtime.Arrays$.newGenericArray
  [ 3] fs2.Chunk.toArray
  [ 4] fs2.text$utf8$.processSingleChunk$1
  [ 5] fs2.text$utf8$.doPull$1$$anonfun$1
  [ 6] fs2.text$utf8$$$Lambda$982.0x0000000800f13990.apply
  [ 7] fs2.Pull$$anon$1.cont
  [ 8] fs2.Pull$.fs2$Pull$$$bindBindAux
  [ 9] fs2.Pull$BindBind.cont
  [10] fs2.Pull$ContP.apply
  [11] fs2.Pull$ContP.apply$
  [12] fs2.Pull$Bind.apply
  [13] fs2.Pull$Bind.apply
  [14] fs2.Pull$UnconsRunR$1.out$$anonfun$2
  [15] fs2.Pull$UnconsRunR$1$$Lambda$867.0x0000000800edeba0.apply
  [16] fs2.Pull$.interruptGuard$1$$anonfun$1
  [17] fs2.Pull$$$Lambda$563.0x0000000800e4e7d0.apply
  [18] cats.effect.IOFiber.succeeded
  [19] cats.effect.IOFiber.runLoop
  [20] cats.effect.IOFiber.execR
  [21] cats.effect.IOFiber.run
  [22] cats.effect.unsafe.WorkerThread.run

--- 621416118 ns (0.08%), 62 samples
  [ 0] java.util.Arrays.copyOfRange
  [ 1] java.lang.String.<init>
  [ 2] java.lang.String.<init>
  [ 3] fs2.text$utf8$.processSingleChunk$1
  [ 4] fs2.text$utf8$.doPull$1$$anonfun$1
  [ 5] fs2.text$utf8$$$Lambda$982.0x0000000800f13990.apply
  [ 6] fs2.Pull$$anon$1.cont
  [ 7] fs2.Pull$.fs2$Pull$$$bindBindAux
  [ 8] fs2.Pull$BindBind.cont
  [ 9] fs2.Pull$ContP.apply
  [10] fs2.Pull$ContP.apply$
  [11] fs2.Pull$Bind.apply
  [12] fs2.Pull$Bind.apply
  [13] fs2.Pull$UnconsRunR$1.out$$anonfun$2
  [14] fs2.Pull$UnconsRunR$1$$Lambda$867.0x0000000800edeba0.apply
  [15] fs2.Pull$.interruptGuard$1$$anonfun$1
  [16] fs2.Pull$$$Lambda$563.0x0000000800e4e7d0.apply
  [17] cats.effect.IOFiber.succeeded
  [18] cats.effect.IOFiber.runLoop
  [19] cats.effect.IOFiber.execR
  [20] cats.effect.IOFiber.run
  [21] cats.effect.unsafe.WorkerThread.run

--- 591647286 ns (0.08%), 59 samples
  [ 0] copy_user_generic_string_[k]
  [ 1] zfs_uiomove_iter?[zfs]_[k]
  [ 2] zfs_uiomove?[zfs]_[k]
  [ 3] dmu_read_uio_dnode?[zfs]_[k]
  [ 4] dmu_read_uio_dbuf?[zfs]_[k]
  [ 5] mappedread?[zfs]_[k]
  [ 6] zfs_read?[zfs]_[k]
  [ 7] zpl_iter_read?[zfs]_[k]
  [ 8] new_sync_read_[k]
  [ 9] vfs_read_[k]
  [10] __x64_sys_pread64_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] __libc_pread64
  [14] sun.nio.ch.FileDispatcherImpl.pread0
  [15] sun.nio.ch.FileDispatcherImpl.pread
  [16] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [17] sun.nio.ch.IOUtil.read
  [18] sun.nio.ch.IOUtil.read
  [19] sun.nio.ch.FileChannelImpl.readInternal
  [20] sun.nio.ch.FileChannelImpl.read
  [21] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [22] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [23] jdk.nio.zipfs.ZipFileSystem$2.fill
  [24] java.util.zip.InflaterInputStream.read
  [25] java.io.InputStream.transferTo
  [26] java.nio.file.Files.copy
  [27] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [28] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [29] jdk.nio.zipfs.ZipPath.newFileChannel
  [30] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [31] java.nio.channels.FileChannel.open
  [32] java.nio.channels.FileChannel.open
  [33] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [34] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$63.0x0000000800d35a20.apply
  [35] cats.effect.IOFiber.$anonfun$8
  [36] cats.effect.IOFiber$$Lambda$758.0x0000000800ec4c40.apply
  [37] cats.effect.unsafe.WorkerThread.blockOn
  [38] scala.concurrent.package$.blocking
  [39] cats.effect.IOFiber.runLoop
  [40] cats.effect.IOFiber.execR
  [41] cats.effect.IOFiber.run
  [42] cats.effect.unsafe.WorkerThread.run

--- 591106907 ns (0.08%), 59 samples
  [ 0] jbyte_disjoint_arraycopy
  [ 1] jdk.internal.misc.Unsafe.copyMemory0
  [ 2] jdk.internal.misc.Unsafe.copyMemory
  [ 3] jdk.internal.misc.ScopedMemoryAccess.copyMemoryInternal
  [ 4] jdk.internal.misc.ScopedMemoryAccess.copyMemory
  [ 5] java.nio.ByteBuffer.putBuffer
  [ 6] java.nio.ByteBuffer.put
  [ 7] java.nio.HeapByteBuffer.put
  [ 8] sun.nio.ch.IOUtil.read
  [ 9] sun.nio.ch.IOUtil.read
  [10] sun.nio.ch.FileChannelImpl.readInternal
  [11] sun.nio.ch.FileChannelImpl.read
  [12] jdk.nio.zipfs.ZipFileSystem$1.read
  [13] fs2.io.file.FileHandleCompanionPlatform$$anon$1.read$$anonfun$1
  [14] fs2.io.file.FileHandleCompanionPlatform$$anon$1$$Lambda$887.0x0000000800ee5ce0.apply
  [15] cats.effect.IOFiber.$anonfun$8
  [16] cats.effect.IOFiber$$Lambda$758.0x0000000800ec4c40.apply
  [17] cats.effect.unsafe.WorkerThread.blockOn
  [18] scala.concurrent.package$.blocking
  [19] cats.effect.IOFiber.runLoop
  [20] cats.effect.IOFiber.execR
  [21] cats.effect.IOFiber.run
  [22] cats.effect.unsafe.WorkerThread.run

--- 581009005 ns (0.08%), 58 samples
  [ 0] java.lang.System.arraycopy
  [ 1] java.lang.String.getBytes
  [ 2] java.lang.AbstractStringBuilder.putStringAt
  [ 3] java.lang.AbstractStringBuilder.putStringAt
  [ 4] java.lang.AbstractStringBuilder.append
  [ 5] java.lang.StringBuilder.append
  [ 6] java.lang.StringBuilder.append
  [ 7] scala.collection.mutable.StringBuilder.addAll
  [ 8] scala.collection.mutable.StringBuilder.$plus$plus$eq
  [ 9] fs2.Collector$Builder$$anon$4.$plus$eq$$anonfun$1
  [10] fs2.Collector$Builder$$anon$4$$Lambda$1008.0x0000000800f1c408.applyVoid
  [11] scala.runtime.function.JProcedure1.apply
  [12] scala.runtime.function.JProcedure1.apply
  [13] fs2.Chunk.foreach
  [14] fs2.Collector$Builder$$anon$4.$plus$eq
  [15] fs2.Stream$CompileOps.to$$anonfun$1$$anonfun$1
  [16] fs2.Stream$CompileOps$$Lambda$361.0x0000000800e01920.apply
  [17] fs2.Pull$OuterRun$1.out
  [18] fs2.Pull$.fs2$Pull$ViewRunner$1$$_$outLoop$1
  [19] fs2.Pull$ViewRunner$1.out
  [20] fs2.Pull$.go$1$$anonfun$1
  [21] fs2.Pull$$$Lambda$833.0x0000000800ed7248.apply
  [22] fs2.Pull$.interruptGuard$1$$anonfun$1
  [23] fs2.Pull$$$Lambda$563.0x0000000800e4e7d0.apply
  [24] cats.effect.IOFiber.succeeded
  [25] cats.effect.IOFiber.runLoop
  [26] cats.effect.IOFiber.execR
  [27] cats.effect.IOFiber.run
  [28] cats.effect.unsafe.WorkerThread.run

--- 571249822 ns (0.08%), 57 samples
  [ 0] refill_obj_stock_[k]
  [ 1] obj_cgroup_charge_[k]
  [ 2] __kmalloc_[k]
  [ 3] inotify_handle_inode_event_[k]
  [ 4] fsnotify_handle_inode_event.isra.0_[k]
  [ 5] send_to_group_[k]
  [ 6] fsnotify_[k]
  [ 7] __fsnotify_parent_[k]
  [ 8] vfs_write_[k]
  [ 9] ksys_write_[k]
  [10] __x64_sys_write_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] write
  [14] sun.nio.ch.FileDispatcherImpl.write0
  [15] sun.nio.ch.FileDispatcherImpl.write
  [16] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.FileChannelImpl.write
  [20] java.nio.channels.Channels.writeFullyImpl
  [21] java.nio.channels.Channels.writeFully
  [22] java.nio.channels.Channels$1.write
  [23] java.io.InputStream.transferTo
  [24] java.nio.file.Files.copy
  [25] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [26] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [27] jdk.nio.zipfs.ZipPath.newFileChannel
  [28] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [29] java.nio.channels.FileChannel.open
  [30] java.nio.channels.FileChannel.open
  [31] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [32] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$63.0x0000000800d35a20.apply
  [33] cats.effect.IOFiber.$anonfun$8
  [34] cats.effect.IOFiber$$Lambda$758.0x0000000800ec4c40.apply
  [35] cats.effect.unsafe.WorkerThread.blockOn
  [36] scala.concurrent.package$.blocking
  [37] cats.effect.IOFiber.runLoop
  [38] cats.effect.IOFiber.execR
  [39] cats.effect.IOFiber.run
  [40] cats.effect.unsafe.WorkerThread.run

--- 551288141 ns (0.08%), 55 samples
  [ 0] itable stub
  [ 1] cats.effect.IOFiber.succeeded
  [ 2] cats.effect.IOFiber.runLoop
  [ 3] cats.effect.IOFiber.execR
  [ 4] cats.effect.IOFiber.run
  [ 5] cats.effect.unsafe.WorkerThread.run

--- 551061181 ns (0.08%), 55 samples
  [ 0] __memset_avx2_unaligned_erms
  [ 1] MemAllocator::allocate() const
  [ 2] TypeArrayKlass::allocate_common(int, bool, JavaThread*)
  [ 3] JVMCIRuntime::new_array_common(JavaThread*, Klass*, int, bool)
  [ 4] jdk.nio.zipfs.ZipFileSystem.getInflater
  [ 5] jdk.nio.zipfs.ZipFileSystem.getInputStream
  [ 6] jdk.nio.zipfs.ZipFileSystem.newInputStream
  [ 7] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [ 8] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [ 9] jdk.nio.zipfs.ZipPath.newFileChannel
  [10] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [11] java.nio.channels.FileChannel.open
  [12] java.nio.channels.FileChannel.open
  [13] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [14] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$63.0x0000000800d35a20.apply
  [15] cats.effect.IOFiber.$anonfun$8
  [16] cats.effect.IOFiber$$Lambda$758.0x0000000800ec4c40.apply
  [17] cats.effect.unsafe.WorkerThread.blockOn
  [18] scala.concurrent.package$.blocking
  [19] cats.effect.IOFiber.runLoop
  [20] cats.effect.IOFiber.execR
  [21] cats.effect.IOFiber.run
  [22] cats.effect.unsafe.WorkerThread.run

--- 541120338 ns (0.07%), 54 samples
  [ 0] java.util.zip.InflaterInputStream.<init>
  [ 1] jdk.nio.zipfs.ZipFileSystem$2.<init>
  [ 2] jdk.nio.zipfs.ZipFileSystem.getInputStream
  [ 3] jdk.nio.zipfs.ZipFileSystem.newInputStream
  [ 4] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [ 5] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [ 6] jdk.nio.zipfs.ZipPath.newFileChannel
  [ 7] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [ 8] java.nio.channels.FileChannel.open
  [ 9] java.nio.channels.FileChannel.open
  [10] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [11] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$63.0x0000000800d35a20.apply
  [12] cats.effect.IOFiber.$anonfun$8
  [13] cats.effect.IOFiber$$Lambda$758.0x0000000800ec4c40.apply
  [14] cats.effect.unsafe.WorkerThread.blockOn
  [15] scala.concurrent.package$.blocking
  [16] cats.effect.IOFiber.runLoop
  [17] cats.effect.IOFiber.execR
  [18] cats.effect.IOFiber.run
  [19] cats.effect.unsafe.WorkerThread.run

--- 531518450 ns (0.07%), 53 samples
  [ 0] _raw_spin_unlock_irqrestore_[k]
  [ 1] try_to_wake_up_[k]
  [ 2] wake_up_q_[k]
  [ 3] futex_wake_[k]
  [ 4] do_futex_[k]
  [ 5] __x64_sys_futex_[k]
  [ 6] do_syscall_64_[k]
  [ 7] entry_SYSCALL_64_after_hwframe_[k]
  [ 8] pthread_cond_signal@@GLIBC_2.3.2
  [ 9] jdk.internal.misc.Unsafe.unpark
  [10] java.util.concurrent.locks.LockSupport.unpark
  [11] java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext
  [12] java.util.concurrent.locks.AbstractQueuedSynchronizer.release
  [13] java.util.concurrent.locks.ReentrantLock.unlock
  [14] java.util.concurrent.ArrayBlockingQueue.offer
  [15] cats.effect.IOPlatform.unsafeRunTimed$$anonfun$1
  [16] cats.effect.IOPlatform$$Lambda$300.0x0000000800deb980.applyVoid
  [17] scala.runtime.function.JProcedure1.apply
  [18] scala.runtime.function.JProcedure1.apply
  [19] cats.effect.IO.unsafeRunAsync$$anonfun$3
  [20] cats.effect.IO$$Lambda$318.0x0000000800df0ed8.applyVoid
  [21] scala.runtime.function.JProcedure1.apply
  [22] scala.runtime.function.JProcedure1.apply
  [23] cats.effect.IO.$anonfun$6$$anonfun$3
  [24] cats.effect.IO$$Lambda$1297.0x0000000800f69de0.applyVoid
  [25] scala.runtime.function.JProcedure1.apply
  [26] scala.runtime.function.JProcedure1.apply
  [27] cats.effect.kernel.Outcome.fold
  [28] cats.effect.kernel.Outcome.fold$
  [29] cats.effect.kernel.Outcome$Succeeded.fold
  [30] cats.effect.IO.$anonfun$6
  [31] cats.effect.IO$$Lambda$331.0x0000000800df36b8.applyVoid
  [32] scala.runtime.function.JProcedure1.apply
  [33] scala.runtime.function.JProcedure1.apply
  [34] cats.effect.CallbackStack.apply
  [35] cats.effect.IOFiber.done
  [36] cats.effect.IOFiber.runTerminusSuccessK
  [37] cats.effect.IOFiber.succeeded
  [38] cats.effect.IOFiber.runLoop
  [39] cats.effect.IOFiber.execR
  [40] cats.effect.IOFiber.run
  [41] cats.effect.unsafe.WorkerThread.run

--- 521998878 ns (0.07%), 52 samples
  [ 0] java.util.concurrent.ConcurrentLinkedQueue.poll
  [ 1] cats.effect.unsafe.ScalQueue.poll
  [ 2] cats.effect.unsafe.WorkerThread.run

--- 501456161 ns (0.07%), 50 samples
  [ 0] _raw_spin_unlock_irqrestore_[k]
  [ 1] try_to_wake_up_[k]
  [ 2] wake_up_q_[k]
  [ 3] futex_wake_[k]
  [ 4] do_futex_[k]
  [ 5] __x64_sys_futex_[k]
  [ 6] do_syscall_64_[k]
  [ 7] entry_SYSCALL_64_after_hwframe_[k]
  [ 8] pthread_cond_signal@@GLIBC_2.3.2
  [ 9] jdk.internal.misc.Unsafe.unpark
  [10] java.util.concurrent.locks.LockSupport.unpark
  [11] java.util.concurrent.LinkedTransferQueue$Node.tryMatch
  [12] java.util.concurrent.LinkedTransferQueue.xfer
  [13] java.util.concurrent.LinkedTransferQueue.transfer
  [14] cats.effect.unsafe.WorkerThread.blockOn
  [15] scala.concurrent.package$.blocking
  [16] cats.effect.IOFiber.runLoop
  [17] cats.effect.IOFiber.execR
  [18] cats.effect.IOFiber.run
  [19] cats.effect.unsafe.WorkerThread.run

--- 491045614 ns (0.07%), 49 samples
  [ 0] java.nio.HeapByteBuffer.<init>
  [ 1] java.nio.ByteBuffer.allocate
  [ 2] fs2.io.file.FileHandleCompanionPlatform$$anon$1.read$$anonfun$1
  [ 3] fs2.io.file.FileHandleCompanionPlatform$$anon$1$$Lambda$887.0x0000000800ee5ce0.apply
  [ 4] cats.effect.IOFiber.$anonfun$8
  [ 5] cats.effect.IOFiber$$Lambda$758.0x0000000800ec4c40.apply
  [ 6] cats.effect.unsafe.WorkerThread.blockOn
  [ 7] scala.concurrent.package$.blocking
  [ 8] cats.effect.IOFiber.runLoop
  [ 9] cats.effect.IOFiber.execR
  [10] cats.effect.IOFiber.run
  [11] cats.effect.unsafe.WorkerThread.run

--- 481270923 ns (0.07%), 48 samples
  [ 0] try_charge_memcg_[k]
  [ 1] obj_cgroup_charge_[k]
  [ 2] __kmalloc_[k]
  [ 3] inotify_handle_inode_event_[k]
  [ 4] fsnotify_handle_inode_event.isra.0_[k]
  [ 5] send_to_group_[k]
  [ 6] fsnotify_[k]
  [ 7] __fsnotify_parent_[k]
  [ 8] vfs_write_[k]
  [ 9] ksys_write_[k]
  [10] __x64_sys_write_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] write
  [14] sun.nio.ch.FileDispatcherImpl.write0
  [15] sun.nio.ch.FileDispatcherImpl.write
  [16] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.FileChannelImpl.write
  [20] java.nio.channels.Channels.writeFullyImpl
  [21] java.nio.channels.Channels.writeFully
  [22] java.nio.channels.Channels$1.write
  [23] java.io.InputStream.transferTo
  [24] java.nio.file.Files.copy
  [25] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [26] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [27] jdk.nio.zipfs.ZipPath.newFileChannel
  [28] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [29] java.nio.channels.FileChannel.open
  [30] java.nio.channels.FileChannel.open
  [31] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [32] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$63.0x0000000800d35a20.apply
  [33] cats.effect.IOFiber.$anonfun$8
  [34] cats.effect.IOFiber$$Lambda$758.0x0000000800ec4c40.apply
  [35] cats.effect.unsafe.WorkerThread.blockOn
  [36] scala.concurrent.package$.blocking
  [37] cats.effect.IOFiber.runLoop
  [38] cats.effect.IOFiber.execR
  [39] cats.effect.IOFiber.run
  [40] cats.effect.unsafe.WorkerThread.run

--- 481076713 ns (0.07%), 48 samples
  [ 0] cats.effect.IOFiber.succeeded
  [ 1] cats.effect.IOFiber.runLoop
  [ 2] cats.effect.IOFiber.execR
  [ 3] cats.effect.IOFiber.run
  [ 4] cats.effect.unsafe.WorkerThread.run

--- 481048230 ns (0.07%), 48 samples
  [ 0] java.lang.invoke.MethodHandle.invokeBasic
  [ 1] [unknown_Java]

--- 471211964 ns (0.06%), 47 samples
  [ 0] dsl_dir_tempreserve_impl.constprop.0?[zfs]_[k]
  [ 1] dsl_dir_tempreserve_space?[zfs]_[k]
  [ 2] dmu_tx_try_assign?[zfs]_[k]
  [ 3] dmu_tx_assign?[zfs]_[k]
  [ 4] zfs_write?[zfs]_[k]
  [ 5] zpl_iter_write?[zfs]_[k]
  [ 6] new_sync_write_[k]
  [ 7] vfs_write_[k]
  [ 8] ksys_write_[k]
  [ 9] __x64_sys_write_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] write
  [13] sun.nio.ch.FileDispatcherImpl.write0
  [14] sun.nio.ch.FileDispatcherImpl.write
  [15] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [16] sun.nio.ch.IOUtil.write
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.FileChannelImpl.write
  [19] java.nio.channels.Channels.writeFullyImpl
  [20] java.nio.channels.Channels.writeFully
  [21] java.nio.channels.Channels$1.write
  [22] java.io.InputStream.transferTo
  [23] java.nio.file.Files.copy
  [24] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [25] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [26] jdk.nio.zipfs.ZipPath.newFileChannel
  [27] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [28] java.nio.channels.FileChannel.open
  [29] java.nio.channels.FileChannel.open
  [30] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [31] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$63.0x0000000800d35a20.apply
  [32] cats.effect.IOFiber.$anonfun$8
  [33] cats.effect.IOFiber$$Lambda$758.0x0000000800ec4c40.apply
  [34] cats.effect.unsafe.WorkerThread.blockOn
  [35] scala.concurrent.package$.blocking
  [36] cats.effect.IOFiber.runLoop
  [37] cats.effect.IOFiber.execR
  [38] cats.effect.IOFiber.run
  [39] cats.effect.unsafe.WorkerThread.run

--- 471187282 ns (0.06%), 47 samples
  [ 0] inotify_handle_inode_event_[k]
  [ 1] fsnotify_handle_inode_event.isra.0_[k]
  [ 2] send_to_group_[k]
  [ 3] fsnotify_[k]
  [ 4] __fsnotify_parent_[k]
  [ 5] vfs_write_[k]
  [ 6] ksys_write_[k]
  [ 7] __x64_sys_write_[k]
  [ 8] do_syscall_64_[k]
  [ 9] entry_SYSCALL_64_after_hwframe_[k]
  [10] write
  [11] sun.nio.ch.FileDispatcherImpl.write0
  [12] sun.nio.ch.FileDispatcherImpl.write
  [13] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [14] sun.nio.ch.IOUtil.write
  [15] sun.nio.ch.IOUtil.write
  [16] sun.nio.ch.FileChannelImpl.write
  [17] java.nio.channels.Channels.writeFullyImpl
  [18] java.nio.channels.Channels.writeFully
  [19] java.nio.channels.Channels$1.write
  [20] java.io.InputStream.transferTo
  [21] java.nio.file.Files.copy
  [22] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [23] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [24] jdk.nio.zipfs.ZipPath.newFileChannel
  [25] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [26] java.nio.channels.FileChannel.open
  [27] java.nio.channels.FileChannel.open
  [28] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [29] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$63.0x0000000800d35a20.apply
  [30] cats.effect.IOFiber.$anonfun$8
  [31] cats.effect.IOFiber$$Lambda$758.0x0000000800ec4c40.apply
  [32] cats.effect.unsafe.WorkerThread.blockOn
  [33] scala.concurrent.package$.blocking
  [34] cats.effect.IOFiber.runLoop
  [35] cats.effect.IOFiber.execR
  [36] cats.effect.IOFiber.run
  [37] cats.effect.unsafe.WorkerThread.run

--- 460800869 ns (0.06%), 46 samples
  [ 0] java.util.Arrays.copyOf
  [ 1] java.lang.AbstractStringBuilder.ensureCapacityInternal
  [ 2] java.lang.AbstractStringBuilder.append
  [ 3] java.lang.StringBuilder.append
  [ 4] java.lang.StringBuilder.append
  [ 5] scala.collection.mutable.StringBuilder.addAll
  [ 6] scala.collection.mutable.StringBuilder.$plus$plus$eq
  [ 7] fs2.Collector$Builder$$anon$4.$plus$eq$$anonfun$1
  [ 8] fs2.Collector$Builder$$anon$4$$Lambda$1008.0x0000000800f1c408.applyVoid
  [ 9] scala.runtime.function.JProcedure1.apply
  [10] scala.runtime.function.JProcedure1.apply
  [11] fs2.Chunk.foreach
  [12] fs2.Collector$Builder$$anon$4.$plus$eq
  [13] fs2.Stream$CompileOps.to$$anonfun$1$$anonfun$1
  [14] fs2.Stream$CompileOps$$Lambda$361.0x0000000800e01920.apply
  [15] fs2.Pull$OuterRun$1.out
  [16] fs2.Pull$.fs2$Pull$ViewRunner$1$$_$outLoop$1
  [17] fs2.Pull$ViewRunner$1.out
  [18] fs2.Pull$.go$1$$anonfun$1
  [19] fs2.Pull$$$Lambda$833.0x0000000800ed7248.apply
  [20] fs2.Pull$.interruptGuard$1$$anonfun$1
  [21] fs2.Pull$$$Lambda$563.0x0000000800e4e7d0.apply
  [22] cats.effect.IOFiber.succeeded
  [23] cats.effect.IOFiber.runLoop
  [24] cats.effect.IOFiber.execR
  [25] cats.effect.IOFiber.run
  [26] cats.effect.unsafe.WorkerThread.run

--- 460683522 ns (0.06%), 46 samples
  [ 0] java.lang.StringCoding.hasNegatives
  [ 1] java.lang.String.<init>
  [ 2] java.lang.String.<init>
  [ 3] fs2.text$utf8$.processSingleChunk$1
  [ 4] fs2.text$utf8$.doPull$1$$anonfun$1
  [ 5] fs2.text$utf8$$$Lambda$982.0x0000000800f13990.apply
  [ 6] fs2.Pull$$anon$1.cont
  [ 7] fs2.Pull$.fs2$Pull$$$bindBindAux
  [ 8] fs2.Pull$BindBind.cont
  [ 9] fs2.Pull$ContP.apply
  [10] fs2.Pull$ContP.apply$
  [11] fs2.Pull$Bind.apply
  [12] fs2.Pull$Bind.apply
  [13] fs2.Pull$UnconsRunR$1.out$$anonfun$2
  [14] fs2.Pull$UnconsRunR$1$$Lambda$867.0x0000000800edeba0.apply
  [15] fs2.Pull$.interruptGuard$1$$anonfun$1
  [16] fs2.Pull$$$Lambda$563.0x0000000800e4e7d0.apply
  [17] cats.effect.IOFiber.succeeded
  [18] cats.effect.IOFiber.runLoop
  [19] cats.effect.IOFiber.execR
  [20] cats.effect.IOFiber.run
  [21] cats.effect.unsafe.WorkerThread.run

--- 451377019 ns (0.06%), 45 samples
  [ 0] sa_attr_op?[zfs]_[k]
  [ 1] sa_bulk_update_impl?[zfs]_[k]
  [ 2] sa_bulk_update?[zfs]_[k]
  [ 3] zfs_write?[zfs]_[k]
  [ 4] zpl_iter_write?[zfs]_[k]
  [ 5] new_sync_write_[k]
  [ 6] vfs_write_[k]
  [ 7] ksys_write_[k]
  [ 8] __x64_sys_write_[k]
  [ 9] do_syscall_64_[k]
  [10] entry_SYSCALL_64_after_hwframe_[k]
  [11] write
  [12] sun.nio.ch.FileDispatcherImpl.write0
  [13] sun.nio.ch.FileDispatcherImpl.write
  [14] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [15] sun.nio.ch.IOUtil.write
  [16] sun.nio.ch.IOUtil.write
  [17] sun.nio.ch.FileChannelImpl.write
  [18] java.nio.channels.Channels.writeFullyImpl
  [19] java.nio.channels.Channels.writeFully
  [20] java.nio.channels.Channels$1.write
  [21] java.io.InputStream.transferTo
  [22] java.nio.file.Files.copy
  [23] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [24] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [25] jdk.nio.zipfs.ZipPath.newFileChannel
  [26] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [27] java.nio.channels.FileChannel.open
  [28] java.nio.channels.FileChannel.open
  [29] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [30] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$63.0x0000000800d35a20.apply
  [31] cats.effect.IOFiber.$anonfun$8
  [32] cats.effect.IOFiber$$Lambda$758.0x0000000800ec4c40.apply
  [33] cats.effect.unsafe.WorkerThread.blockOn
  [34] scala.concurrent.package$.blocking
  [35] cats.effect.IOFiber.runLoop
  [36] cats.effect.IOFiber.execR
  [37] cats.effect.IOFiber.run
  [38] cats.effect.unsafe.WorkerThread.run

--- 451062810 ns (0.06%), 45 samples
  [ 0] _raw_spin_unlock_irqrestore_[k]
  [ 1] try_to_wake_up_[k]
  [ 2] wake_up_q_[k]
  [ 3] rwsem_wake.isra.0_[k]
  [ 4] up_write_[k]
  [ 5] open_last_lookups_[k]
  [ 6] path_openat_[k]
  [ 7] do_filp_open_[k]
  [ 8] do_sys_openat2_[k]
  [ 9] __x64_sys_openat_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] __open64
  [13] [unknown]
  [14] sun.nio.fs.UnixNativeDispatcher.open0
  [15] sun.nio.fs.UnixNativeDispatcher.open
  [16] sun.nio.fs.UnixChannelFactory.open
  [17] sun.nio.fs.UnixChannelFactory.newFileChannel
  [18] sun.nio.fs.UnixChannelFactory.newFileChannel
  [19] sun.nio.fs.UnixFileSystemProvider.newByteChannel
  [20] java.nio.file.Files.newByteChannel
  [21] java.nio.file.Files.createFile
  [22] java.nio.file.TempFileHelper.create
  [23] java.nio.file.TempFileHelper.createTempFile
  [24] java.nio.file.Files.createTempFile
  [25] jdk.nio.zipfs.ZipFileSystem.createTempFileInSameDirectoryAs
  [26] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [27] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [28] jdk.nio.zipfs.ZipPath.newFileChannel
  [29] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [30] java.nio.channels.FileChannel.open
  [31] java.nio.channels.FileChannel.open
  [32] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [33] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$63.0x0000000800d35a20.apply
  [34] cats.effect.IOFiber.$anonfun$8
  [35] cats.effect.IOFiber$$Lambda$758.0x0000000800ec4c40.apply
  [36] cats.effect.unsafe.WorkerThread.blockOn
  [37] scala.concurrent.package$.blocking
  [38] cats.effect.IOFiber.runLoop
  [39] cats.effect.IOFiber.execR
  [40] cats.effect.IOFiber.run
  [41] cats.effect.unsafe.WorkerThread.run

--- 441130827 ns (0.06%), 44 samples
  [ 0] cats.effect.IOFiber.runLoop
  [ 1] cats.effect.IOFiber.execR
  [ 2] cats.effect.IOFiber.run
  [ 3] cats.effect.unsafe.WorkerThread.run

--- 441022598 ns (0.06%), 44 samples
  [ 0] send_to_group_[k]
  [ 1] fsnotify_[k]
  [ 2] __fsnotify_parent_[k]
  [ 3] vfs_write_[k]
  [ 4] ksys_write_[k]
  [ 5] __x64_sys_write_[k]
  [ 6] do_syscall_64_[k]
  [ 7] entry_SYSCALL_64_after_hwframe_[k]
  [ 8] write
  [ 9] sun.nio.ch.FileDispatcherImpl.write0
  [10] sun.nio.ch.FileDispatcherImpl.write
  [11] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [12] sun.nio.ch.IOUtil.write
  [13] sun.nio.ch.IOUtil.write
  [14] sun.nio.ch.FileChannelImpl.write
  [15] java.nio.channels.Channels.writeFullyImpl
  [16] java.nio.channels.Channels.writeFully
  [17] java.nio.channels.Channels$1.write
  [18] java.io.InputStream.transferTo
  [19] java.nio.file.Files.copy
  [20] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [21] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [22] jdk.nio.zipfs.ZipPath.newFileChannel
  [23] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [24] java.nio.channels.FileChannel.open
  [25] java.nio.channels.FileChannel.open
  [26] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [27] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$63.0x0000000800d35a20.apply
  [28] cats.effect.IOFiber.$anonfun$8
  [29] cats.effect.IOFiber$$Lambda$758.0x0000000800ec4c40.apply
  [30] cats.effect.unsafe.WorkerThread.blockOn
  [31] scala.concurrent.package$.blocking
  [32] cats.effect.IOFiber.runLoop
  [33] cats.effect.IOFiber.execR
  [34] cats.effect.IOFiber.run
  [35] cats.effect.unsafe.WorkerThread.run

--- 440761683 ns (0.06%), 44 samples
  [ 0] jbyte_disjoint_arraycopy
  [ 1] jdk.internal.misc.Unsafe.copyMemory0
  [ 2] jdk.internal.misc.Unsafe.copyMemory
  [ 3] jdk.internal.misc.ScopedMemoryAccess.copyMemoryInternal
  [ 4] jdk.internal.misc.ScopedMemoryAccess.copyMemory
  [ 5] java.nio.ByteBuffer.putBuffer
  [ 6] java.nio.ByteBuffer.put
  [ 7] java.nio.HeapByteBuffer.put
  [ 8] sun.nio.ch.IOUtil.read
  [ 9] sun.nio.ch.IOUtil.read
  [10] sun.nio.ch.FileChannelImpl.readInternal
  [11] sun.nio.ch.FileChannelImpl.read
  [12] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [13] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [14] jdk.nio.zipfs.ZipFileSystem$2.fill
  [15] java.util.zip.InflaterInputStream.read
  [16] java.io.InputStream.transferTo
  [17] java.nio.file.Files.copy
  [18] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [19] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [20] jdk.nio.zipfs.ZipPath.newFileChannel
  [21] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [22] java.nio.channels.FileChannel.open
  [23] java.nio.channels.FileChannel.open
  [24] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [25] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$63.0x0000000800d35a20.apply
  [26] cats.effect.IOFiber.$anonfun$8
  [27] cats.effect.IOFiber$$Lambda$758.0x0000000800ec4c40.apply
  [28] cats.effect.unsafe.WorkerThread.blockOn
  [29] scala.concurrent.package$.blocking
  [30] cats.effect.IOFiber.runLoop
  [31] cats.effect.IOFiber.execR
  [32] cats.effect.IOFiber.run
  [33] cats.effect.unsafe.WorkerThread.run

--- 431182749 ns (0.06%), 43 samples
  [ 0] zil_aitx_compare?[zfs]_[k]
  [ 1] zil_itx_assign?[zfs]_[k]
  [ 2] zfs_log_write?[zfs]_[k]
  [ 3] zfs_write?[zfs]_[k]
  [ 4] zpl_iter_write?[zfs]_[k]
  [ 5] new_sync_write_[k]
  [ 6] vfs_write_[k]
  [ 7] ksys_write_[k]
  [ 8] __x64_sys_write_[k]
  [ 9] do_syscall_64_[k]
  [10] entry_SYSCALL_64_after_hwframe_[k]
  [11] write
  [12] sun.nio.ch.FileDispatcherImpl.write0
  [13] sun.nio.ch.FileDispatcherImpl.write
  [14] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [15] sun.nio.ch.IOUtil.write
  [16] sun.nio.ch.IOUtil.write
  [17] sun.nio.ch.FileChannelImpl.write
  [18] java.nio.channels.Channels.writeFullyImpl
  [19] java.nio.channels.Channels.writeFully
  [20] java.nio.channels.Channels$1.write
  [21] java.io.InputStream.transferTo
  [22] java.nio.file.Files.copy
  [23] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [24] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [25] jdk.nio.zipfs.ZipPath.newFileChannel
  [26] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [27] java.nio.channels.FileChannel.open
  [28] java.nio.channels.FileChannel.open
  [29] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [30] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$63.0x0000000800d35a20.apply
  [31] cats.effect.IOFiber.$anonfun$8
  [32] cats.effect.IOFiber$$Lambda$758.0x0000000800ec4c40.apply
  [33] cats.effect.unsafe.WorkerThread.blockOn
  [34] scala.concurrent.package$.blocking
  [35] cats.effect.IOFiber.runLoop
  [36] cats.effect.IOFiber.execR
  [37] cats.effect.IOFiber.run
  [38] cats.effect.unsafe.WorkerThread.run

--- 431157022 ns (0.06%), 43 samples
  [ 0] strcpy_[k]
  [ 1] fsnotify_handle_inode_event.isra.0_[k]
  [ 2] send_to_group_[k]
  [ 3] fsnotify_[k]
  [ 4] __fsnotify_parent_[k]
  [ 5] vfs_write_[k]
  [ 6] ksys_write_[k]
  [ 7] __x64_sys_write_[k]
  [ 8] do_syscall_64_[k]
  [ 9] entry_SYSCALL_64_after_hwframe_[k]
  [10] write
  [11] sun.nio.ch.FileDispatcherImpl.write0
  [12] sun.nio.ch.FileDispatcherImpl.write
  [13] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [14] sun.nio.ch.IOUtil.write
  [15] sun.nio.ch.IOUtil.write
  [16] sun.nio.ch.FileChannelImpl.write
  [17] java.nio.channels.Channels.writeFullyImpl
  [18] java.nio.channels.Channels.writeFully
  [19] java.nio.channels.Channels$1.write
  [20] java.io.InputStream.transferTo
  [21] java.nio.file.Files.copy
  [22] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [23] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [24] jdk.nio.zipfs.ZipPath.newFileChannel
  [25] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [26] java.nio.channels.FileChannel.open
  [27] java.nio.channels.FileChannel.open
  [28] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [29] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$63.0x0000000800d35a20.apply
  [30] cats.effect.IOFiber.$anonfun$8
  [31] cats.effect.IOFiber$$Lambda$758.0x0000000800ec4c40.apply
  [32] cats.effect.unsafe.WorkerThread.blockOn
  [33] scala.concurrent.package$.blocking
  [34] cats.effect.IOFiber.runLoop
  [35] cats.effect.IOFiber.execR
  [36] cats.effect.IOFiber.run
  [37] cats.effect.unsafe.WorkerThread.run

--- 431048612 ns (0.06%), 43 samples
  [ 0] __kmalloc_[k]
  [ 1] inotify_handle_inode_event_[k]
  [ 2] fsnotify_handle_inode_event.isra.0_[k]
  [ 3] send_to_group_[k]
  [ 4] fsnotify_[k]
  [ 5] __fsnotify_parent_[k]
  [ 6] vfs_write_[k]
  [ 7] ksys_write_[k]
  [ 8] __x64_sys_write_[k]
  [ 9] do_syscall_64_[k]
  [10] entry_SYSCALL_64_after_hwframe_[k]
  [11] write
  [12] sun.nio.ch.FileDispatcherImpl.write0
  [13] sun.nio.ch.FileDispatcherImpl.write
  [14] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [15] sun.nio.ch.IOUtil.write
  [16] sun.nio.ch.IOUtil.write
  [17] sun.nio.ch.FileChannelImpl.write
  [18] java.nio.channels.Channels.writeFullyImpl
  [19] java.nio.channels.Channels.writeFully
  [20] java.nio.channels.Channels$1.write
  [21] java.io.InputStream.transferTo
  [22] java.nio.file.Files.copy
  [23] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [24] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [25] jdk.nio.zipfs.ZipPath.newFileChannel
  [26] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [27] java.nio.channels.FileChannel.open
  [28] java.nio.channels.FileChannel.open
  [29] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [30] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$63.0x0000000800d35a20.apply
  [31] cats.effect.IOFiber.$anonfun$8
  [32] cats.effect.IOFiber$$Lambda$758.0x0000000800ec4c40.apply
  [33] cats.effect.unsafe.WorkerThread.blockOn
  [34] scala.concurrent.package$.blocking
  [35] cats.effect.IOFiber.runLoop
  [36] cats.effect.IOFiber.execR
  [37] cats.effect.IOFiber.run
  [38] cats.effect.unsafe.WorkerThread.run

--- 421066686 ns (0.06%), 42 samples
  [ 0] spl_kmem_cache_alloc?[spl]_[k]
  [ 1] zio_data_buf_alloc?[zfs]_[k]
  [ 2] arc_get_data_buf?[zfs]_[k]
  [ 3] arc_buf_alloc_impl?[zfs]_[k]
  [ 4] arc_alloc_buf?[zfs]_[k]
  [ 5] dbuf_new_size?[zfs]_[k]
  [ 6] dnode_set_blksz?[zfs]_[k]
  [ 7] dmu_object_set_blocksize?[zfs]_[k]
  [ 8] zfs_grow_blocksize?[zfs]_[k]
  [ 9] zfs_write?[zfs]_[k]
  [10] zpl_iter_write?[zfs]_[k]
  [11] new_sync_write_[k]
  [12] vfs_write_[k]
  [13] ksys_write_[k]
  [14] __x64_sys_write_[k]
  [15] do_syscall_64_[k]
  [16] entry_SYSCALL_64_after_hwframe_[k]
  [17] write
  [18] sun.nio.ch.FileDispatcherImpl.write0
  [19] sun.nio.ch.FileDispatcherImpl.write
  [20] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [21] sun.nio.ch.IOUtil.write
  [22] sun.nio.ch.IOUtil.write
  [23] sun.nio.ch.FileChannelImpl.write
  [24] java.nio.channels.Channels.writeFullyImpl
  [25] java.nio.channels.Channels.writeFully
  [26] java.nio.channels.Channels$1.write
  [27] java.io.InputStream.transferTo
  [28] java.nio.file.Files.copy
  [29] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [30] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [31] jdk.nio.zipfs.ZipPath.newFileChannel
  [32] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [33] java.nio.channels.FileChannel.open
  [34] java.nio.channels.FileChannel.open
  [35] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [36] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$63.0x0000000800d35a20.apply
  [37] cats.effect.IOFiber.$anonfun$8
  [38] cats.effect.IOFiber$$Lambda$758.0x0000000800ec4c40.apply
  [39] cats.effect.unsafe.WorkerThread.blockOn
  [40] scala.concurrent.package$.blocking
  [41] cats.effect.IOFiber.runLoop
  [42] cats.effect.IOFiber.execR
  [43] cats.effect.IOFiber.run
  [44] cats.effect.unsafe.WorkerThread.run

--- 420919389 ns (0.06%), 42 samples
  [ 0] page_counter_try_charge_[k]
  [ 1] try_charge_memcg_[k]
  [ 2] obj_cgroup_charge_[k]
  [ 3] __kmalloc_[k]
  [ 4] inotify_handle_inode_event_[k]
  [ 5] fsnotify_handle_inode_event.isra.0_[k]
  [ 6] send_to_group_[k]
  [ 7] fsnotify_[k]
  [ 8] __fsnotify_parent_[k]
  [ 9] vfs_write_[k]
  [10] ksys_write_[k]
  [11] __x64_sys_write_[k]
  [12] do_syscall_64_[k]
  [13] entry_SYSCALL_64_after_hwframe_[k]
  [14] write
  [15] sun.nio.ch.FileDispatcherImpl.write0
  [16] sun.nio.ch.FileDispatcherImpl.write
  [17] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.IOUtil.write
  [20] sun.nio.ch.FileChannelImpl.write
  [21] java.nio.channels.Channels.writeFullyImpl
  [22] java.nio.channels.Channels.writeFully
  [23] java.nio.channels.Channels$1.write
  [24] java.io.InputStream.transferTo
  [25] java.nio.file.Files.copy
  [26] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [27] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [28] jdk.nio.zipfs.ZipPath.newFileChannel
  [29] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [30] java.nio.channels.FileChannel.open
  [31] java.nio.channels.FileChannel.open
  [32] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [33] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$63.0x0000000800d35a20.apply
  [34] cats.effect.IOFiber.$anonfun$8
  [35] cats.effect.IOFiber$$Lambda$758.0x0000000800ec4c40.apply
  [36] cats.effect.unsafe.WorkerThread.blockOn
  [37] scala.concurrent.package$.blocking
  [38] cats.effect.IOFiber.runLoop
  [39] cats.effect.IOFiber.execR
  [40] cats.effect.IOFiber.run
  [41] cats.effect.unsafe.WorkerThread.run

--- 411032748 ns (0.06%), 41 samples
  [ 0] cats.effect.IOFiber.runLoop
  [ 1] cats.effect.IOFiber.execR
  [ 2] cats.effect.IOFiber.run
  [ 3] cats.effect.unsafe.WorkerThread.run

--- 391184754 ns (0.05%), 39 samples
  [ 0] memset_[k]
  [ 1] spl_kmem_cache_alloc?[spl]_[k]
  [ 2] zio_data_buf_alloc?[zfs]_[k]
  [ 3] arc_get_data_buf?[zfs]_[k]
  [ 4] arc_buf_alloc_impl?[zfs]_[k]
  [ 5] arc_alloc_buf?[zfs]_[k]
  [ 6] dbuf_new_size?[zfs]_[k]
  [ 7] dnode_set_blksz?[zfs]_[k]
  [ 8] dmu_object_set_blocksize?[zfs]_[k]
  [ 9] zfs_grow_blocksize?[zfs]_[k]
  [10] zfs_write?[zfs]_[k]
  [11] zpl_iter_write?[zfs]_[k]
  [12] new_sync_write_[k]
  [13] vfs_write_[k]
  [14] ksys_write_[k]
  [15] __x64_sys_write_[k]
  [16] do_syscall_64_[k]
  [17] entry_SYSCALL_64_after_hwframe_[k]
  [18] write
  [19] sun.nio.ch.FileDispatcherImpl.write0
  [20] sun.nio.ch.FileDispatcherImpl.write
  [21] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [22] sun.nio.ch.IOUtil.write
  [23] sun.nio.ch.IOUtil.write
  [24] sun.nio.ch.FileChannelImpl.write
  [25] java.nio.channels.Channels.writeFullyImpl
  [26] java.nio.channels.Channels.writeFully
  [27] java.nio.channels.Channels$1.write
  [28] java.io.InputStream.transferTo
  [29] java.nio.file.Files.copy
  [30] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [31] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [32] jdk.nio.zipfs.ZipPath.newFileChannel
  [33] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [34] java.nio.channels.FileChannel.open
  [35] java.nio.channels.FileChannel.open
  [36] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [37] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$63.0x0000000800d35a20.apply
  [38] cats.effect.IOFiber.$anonfun$8
  [39] cats.effect.IOFiber$$Lambda$758.0x0000000800ec4c40.apply
  [40] cats.effect.unsafe.WorkerThread.blockOn
  [41] scala.concurrent.package$.blocking
  [42] cats.effect.IOFiber.runLoop
  [43] cats.effect.IOFiber.execR
  [44] cats.effect.IOFiber.run
  [45] cats.effect.unsafe.WorkerThread.run

--- 390851286 ns (0.05%), 39 samples
  [ 0] java.util.zip.InflaterInputStream.<init>
  [ 1] jdk.nio.zipfs.ZipFileSystem$2.<init>
  [ 2] jdk.nio.zipfs.ZipFileSystem.getInputStream
  [ 3] jdk.nio.zipfs.ZipFileSystem.newInputStream
  [ 4] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [ 5] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [ 6] jdk.nio.zipfs.ZipPath.newFileChannel
  [ 7] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [ 8] java.nio.channels.FileChannel.open
  [ 9] java.nio.channels.FileChannel.open
  [10] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [11] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$63.0x0000000800d35a20.apply
  [12] cats.effect.IOFiber.$anonfun$8
  [13] cats.effect.IOFiber$$Lambda$758.0x0000000800ec4c40.apply
  [14] cats.effect.unsafe.WorkerThread.blockOn
  [15] scala.concurrent.package$.blocking
  [16] cats.effect.IOFiber.runLoop
  [17] cats.effect.IOFiber.execR
  [18] cats.effect.IOFiber.run
  [19] cats.effect.unsafe.WorkerThread.run

--- 390753020 ns (0.05%), 39 samples
  [ 0] write
  [ 1] sun.nio.ch.FileDispatcherImpl.write0
  [ 2] sun.nio.ch.FileDispatcherImpl.write
  [ 3] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [ 4] sun.nio.ch.IOUtil.write
  [ 5] sun.nio.ch.IOUtil.write
  [ 6] sun.nio.ch.FileChannelImpl.write
  [ 7] java.nio.channels.Channels.writeFullyImpl
  [ 8] java.nio.channels.Channels.writeFully
  [ 9] java.nio.channels.Channels$1.write
  [10] java.io.InputStream.transferTo
  [11] java.nio.file.Files.copy
  [12] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [13] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [14] jdk.nio.zipfs.ZipPath.newFileChannel
  [15] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [16] java.nio.channels.FileChannel.open
  [17] java.nio.channels.FileChannel.open
  [18] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [19] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$63.0x0000000800d35a20.apply
  [20] cats.effect.IOFiber.$anonfun$8
  [21] cats.effect.IOFiber$$Lambda$758.0x0000000800ec4c40.apply
  [22] cats.effect.unsafe.WorkerThread.blockOn
  [23] scala.concurrent.package$.blocking
  [24] cats.effect.IOFiber.runLoop
  [25] cats.effect.IOFiber.execR
  [26] cats.effect.IOFiber.run
  [27] cats.effect.unsafe.WorkerThread.run

--- 380916910 ns (0.05%), 38 samples
  [ 0] vfs_write_[k]
  [ 1] ksys_write_[k]
  [ 2] __x64_sys_write_[k]
  [ 3] do_syscall_64_[k]
  [ 4] entry_SYSCALL_64_after_hwframe_[k]
  [ 5] write
  [ 6] sun.nio.ch.FileDispatcherImpl.write0
  [ 7] sun.nio.ch.FileDispatcherImpl.write
  [ 8] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [ 9] sun.nio.ch.IOUtil.write
  [10] sun.nio.ch.IOUtil.write
  [11] sun.nio.ch.FileChannelImpl.write
  [12] java.nio.channels.Channels.writeFullyImpl
  [13] java.nio.channels.Channels.writeFully
  [14] java.nio.channels.Channels$1.write
  [15] java.io.InputStream.transferTo
  [16] java.nio.file.Files.copy
  [17] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [18] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [19] jdk.nio.zipfs.ZipPath.newFileChannel
  [20] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [21] java.nio.channels.FileChannel.open
  [22] java.nio.channels.FileChannel.open
  [23] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [24] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$63.0x0000000800d35a20.apply
  [25] cats.effect.IOFiber.$anonfun$8
  [26] cats.effect.IOFiber$$Lambda$758.0x0000000800ec4c40.apply
  [27] cats.effect.unsafe.WorkerThread.blockOn
  [28] scala.concurrent.package$.blocking
  [29] cats.effect.IOFiber.runLoop
  [30] cats.effect.IOFiber.execR
  [31] cats.effect.IOFiber.run
  [32] cats.effect.unsafe.WorkerThread.run

--- 377922165 ns (0.05%), 37 samples
  [ 0] _raw_spin_unlock_irqrestore_[k]
  [ 1] try_to_wake_up_[k]
  [ 2] wake_up_q_[k]
  [ 3] futex_wake_[k]
  [ 4] do_futex_[k]
  [ 5] __x64_sys_futex_[k]
  [ 6] do_syscall_64_[k]
  [ 7] entry_SYSCALL_64_after_hwframe_[k]
  [ 8] pthread_cond_signal@@GLIBC_2.3.2
  [ 9] jdk.internal.misc.Unsafe.unpark
  [10] java.util.concurrent.locks.LockSupport.unpark
  [11] cats.effect.unsafe.WorkStealingThreadPool.notifyParked
  [12] cats.effect.unsafe.WorkStealingThreadPool.scheduleExternal
  [13] cats.effect.unsafe.WorkStealingThreadPool.execute
  [14] cats.effect.IO.unsafeRunFiber
  [15] cats.effect.IO.unsafeRunAsync
  [16] cats.effect.IOPlatform.unsafeRunTimed
  [17] cats.effect.IOPlatform.unsafeRunSync
  [18] com.scalamandra.ZipBench.streamFoldStrings
  [19] com.scalamandra.jmh_generated.ZipBench_streamFoldStrings_jmhTest.streamFoldStrings_thrpt_jmhStub
  [20] com.scalamandra.jmh_generated.ZipBench_streamFoldStrings_jmhTest.streamFoldStrings_Throughput
  [21] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [22] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [23] java.lang.reflect.Method.invoke
  [24] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [25] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [26] java.util.concurrent.FutureTask.run
  [27] java.util.concurrent.Executors$RunnableAdapter.call
  [28] java.util.concurrent.FutureTask.run
  [29] java.util.concurrent.ThreadPoolExecutor.runWorker
  [30] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [31] java.lang.Thread.run

--- 370948907 ns (0.05%), 37 samples
  [ 0] memcg_slab_post_alloc_hook_[k]
  [ 1] __kmalloc_[k]
  [ 2] inotify_handle_inode_event_[k]
  [ 3] fsnotify_handle_inode_event.isra.0_[k]
  [ 4] send_to_group_[k]
  [ 5] fsnotify_[k]
  [ 6] __fsnotify_parent_[k]
  [ 7] vfs_write_[k]
  [ 8] ksys_write_[k]
  [ 9] __x64_sys_write_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] write
  [13] sun.nio.ch.FileDispatcherImpl.write0
  [14] sun.nio.ch.FileDispatcherImpl.write
  [15] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [16] sun.nio.ch.IOUtil.write
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.FileChannelImpl.write
  [19] java.nio.channels.Channels.writeFullyImpl
  [20] java.nio.channels.Channels.writeFully
  [21] java.nio.channels.Channels$1.write
  [22] java.io.InputStream.transferTo
  [23] java.nio.file.Files.copy
  [24] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [25] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [26] jdk.nio.zipfs.ZipPath.newFileChannel
  [27] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [28] java.nio.channels.FileChannel.open
  [29] java.nio.channels.FileChannel.open
  [30] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [31] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$63.0x0000000800d35a20.apply
  [32] cats.effect.IOFiber.$anonfun$8
  [33] cats.effect.IOFiber$$Lambda$758.0x0000000800ec4c40.apply
  [34] cats.effect.unsafe.WorkerThread.blockOn
  [35] scala.concurrent.package$.blocking
  [36] cats.effect.IOFiber.runLoop
  [37] cats.effect.IOFiber.execR
  [38] cats.effect.IOFiber.run
  [39] cats.effect.unsafe.WorkerThread.run

--- 370597599 ns (0.05%), 37 samples
  [ 0] jbyte_disjoint_arraycopy
  [ 1] jdk.internal.misc.Unsafe.copyMemory0
  [ 2] jdk.internal.misc.Unsafe.copyMemory
  [ 3] jdk.internal.misc.ScopedMemoryAccess.copyMemoryInternal
  [ 4] jdk.internal.misc.ScopedMemoryAccess.copyMemory
  [ 5] java.nio.ByteBuffer.putBuffer
  [ 6] java.nio.ByteBuffer.put
  [ 7] java.nio.HeapByteBuffer.put
  [ 8] sun.nio.ch.IOUtil.read
  [ 9] sun.nio.ch.IOUtil.read
  [10] sun.nio.ch.FileChannelImpl.readInternal
  [11] sun.nio.ch.FileChannelImpl.read
  [12] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [13] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [14] jdk.nio.zipfs.ZipFileSystem$2.fill
  [15] java.util.zip.InflaterInputStream.read
  [16] java.io.InputStream.transferTo
  [17] java.nio.file.Files.copy
  [18] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [19] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [20] jdk.nio.zipfs.ZipPath.newFileChannel
  [21] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [22] java.nio.channels.FileChannel.open
  [23] java.nio.channels.FileChannel.open
  [24] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [25] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$63.0x0000000800d35a20.apply
  [26] cats.effect.IOFiber.$anonfun$8
  [27] cats.effect.IOFiber$$Lambda$758.0x0000000800ec4c40.apply
  [28] cats.effect.unsafe.WorkerThread.blockOn
  [29] scala.concurrent.package$.blocking
  [30] cats.effect.IOFiber.runLoop
  [31] cats.effect.IOFiber.execR
  [32] cats.effect.IOFiber.run
  [33] cats.effect.unsafe.WorkerThread.run

--- 361185309 ns (0.05%), 36 samples
  [ 0] __vfprintf_internal
  [ 1] [unknown]
  [ 2] java.lang.Thread.setNativeName
  [ 3] java.lang.Thread.setName
  [ 4] cats.effect.unsafe.WorkerThread.init
  [ 5] cats.effect.unsafe.WorkerThread.run

--- 350932804 ns (0.05%), 35 samples
  [ 0] try_charge_memcg_[k]
  [ 1] obj_cgroup_charge_[k]
  [ 2] __kmalloc_[k]
  [ 3] inotify_handle_inode_event_[k]
  [ 4] fsnotify_handle_inode_event.isra.0_[k]
  [ 5] send_to_group_[k]
  [ 6] fsnotify_[k]
  [ 7] __fsnotify_parent_[k]
  [ 8] vfs_write_[k]
  [ 9] ksys_write_[k]
  [10] __x64_sys_write_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] write
  [14] sun.nio.ch.FileDispatcherImpl.write0
  [15] sun.nio.ch.FileDispatcherImpl.write
  [16] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.FileChannelImpl.write
  [20] java.nio.channels.Channels.writeFullyImpl
  [21] java.nio.channels.Channels.writeFully
  [22] java.nio.channels.Channels$1.write
  [23] java.io.InputStream.transferTo
  [24] java.nio.file.Files.copy
  [25] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [26] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [27] jdk.nio.zipfs.ZipPath.newFileChannel
  [28] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [29] java.nio.channels.FileChannel.open
  [30] java.nio.channels.FileChannel.open
  [31] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [32] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$63.0x0000000800d35a20.apply
  [33] cats.effect.IOFiber.$anonfun$8
  [34] cats.effect.IOFiber$$Lambda$758.0x0000000800ec4c40.apply
  [35] cats.effect.unsafe.WorkerThread.blockOn
  [36] scala.concurrent.package$.blocking
  [37] cats.effect.IOFiber.runLoop
  [38] cats.effect.IOFiber.execR
  [39] cats.effect.IOFiber.run
  [40] cats.effect.unsafe.WorkerThread.run

--- 350888667 ns (0.05%), 35 samples
  [ 0] zfs_write?[zfs]_[k]
  [ 1] zpl_iter_write?[zfs]_[k]
  [ 2] new_sync_write_[k]
  [ 3] vfs_write_[k]
  [ 4] ksys_write_[k]
  [ 5] __x64_sys_write_[k]
  [ 6] do_syscall_64_[k]
  [ 7] entry_SYSCALL_64_after_hwframe_[k]
  [ 8] write
  [ 9] sun.nio.ch.FileDispatcherImpl.write0
  [10] sun.nio.ch.FileDispatcherImpl.write
  [11] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [12] sun.nio.ch.IOUtil.write
  [13] sun.nio.ch.IOUtil.write
  [14] sun.nio.ch.FileChannelImpl.write
  [15] java.nio.channels.Channels.writeFullyImpl
  [16] java.nio.channels.Channels.writeFully
  [17] java.nio.channels.Channels$1.write
  [18] java.io.InputStream.transferTo
  [19] java.nio.file.Files.copy
  [20] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [21] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [22] jdk.nio.zipfs.ZipPath.newFileChannel
  [23] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [24] java.nio.channels.FileChannel.open
  [25] java.nio.channels.FileChannel.open
  [26] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [27] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$63.0x0000000800d35a20.apply
  [28] cats.effect.IOFiber.$anonfun$8
  [29] cats.effect.IOFiber$$Lambda$758.0x0000000800ec4c40.apply
  [30] cats.effect.unsafe.WorkerThread.blockOn
  [31] scala.concurrent.package$.blocking
  [32] cats.effect.IOFiber.runLoop
  [33] cats.effect.IOFiber.execR
  [34] cats.effect.IOFiber.run
  [35] cats.effect.unsafe.WorkerThread.run

--- 350696199 ns (0.05%), 35 samples
  [ 0] scala.reflect.ManifestFactory$ByteManifest.newArray
  [ 1] scala.reflect.ManifestFactory$ByteManifest.newArray
  [ 2] scala.runtime.Arrays$.newGenericArray
  [ 3] fs2.Chunk.toArray
  [ 4] fs2.text$utf8$.processSingleChunk$1
  [ 5] fs2.text$utf8$.doPull$1$$anonfun$1
  [ 6] fs2.text$utf8$$$Lambda$982.0x0000000800f13990.apply
  [ 7] fs2.Pull$$anon$1.cont
  [ 8] fs2.Pull$.fs2$Pull$$$bindBindAux
  [ 9] fs2.Pull$BindBind.cont
  [10] fs2.Pull$ContP.apply
  [11] fs2.Pull$ContP.apply$
  [12] fs2.Pull$Bind.apply
  [13] fs2.Pull$Bind.apply
  [14] fs2.Pull$UnconsRunR$1.out$$anonfun$2
  [15] fs2.Pull$UnconsRunR$1$$Lambda$867.0x0000000800edeba0.apply
  [16] fs2.Pull$.interruptGuard$1$$anonfun$1
  [17] fs2.Pull$$$Lambda$563.0x0000000800e4e7d0.apply
  [18] cats.effect.IOFiber.succeeded
  [19] cats.effect.IOFiber.runLoop
  [20] cats.effect.IOFiber.execR
  [21] cats.effect.IOFiber.run
  [22] cats.effect.unsafe.WorkerThread.run

--- 340882191 ns (0.05%), 34 samples
  [ 0] __get_obj_cgroup_from_memcg_[k]
  [ 1] get_obj_cgroup_from_current_[k]
  [ 2] __kmalloc_[k]
  [ 3] inotify_handle_inode_event_[k]
  [ 4] fsnotify_handle_inode_event.isra.0_[k]
  [ 5] send_to_group_[k]
  [ 6] fsnotify_[k]
  [ 7] __fsnotify_parent_[k]
  [ 8] vfs_write_[k]
  [ 9] ksys_write_[k]
  [10] __x64_sys_write_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] write
  [14] sun.nio.ch.FileDispatcherImpl.write0
  [15] sun.nio.ch.FileDispatcherImpl.write
  [16] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.FileChannelImpl.write
  [20] java.nio.channels.Channels.writeFullyImpl
  [21] java.nio.channels.Channels.writeFully
  [22] java.nio.channels.Channels$1.write
  [23] java.io.InputStream.transferTo
  [24] java.nio.file.Files.copy
  [25] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [26] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [27] jdk.nio.zipfs.ZipPath.newFileChannel
  [28] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [29] java.nio.channels.FileChannel.open
  [30] java.nio.channels.FileChannel.open
  [31] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [32] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$63.0x0000000800d35a20.apply
  [33] cats.effect.IOFiber.$anonfun$8
  [34] cats.effect.IOFiber$$Lambda$758.0x0000000800ec4c40.apply
  [35] cats.effect.unsafe.WorkerThread.blockOn
  [36] scala.concurrent.package$.blocking
  [37] cats.effect.IOFiber.runLoop
  [38] cats.effect.IOFiber.execR
  [39] cats.effect.IOFiber.run
  [40] cats.effect.unsafe.WorkerThread.run

--- 331393295 ns (0.05%), 33 samples
  [ 0] futex_q_lock_[k]
  [ 1] futex_wait_setup_[k]
  [ 2] futex_wait_[k]
  [ 3] do_futex_[k]
  [ 4] __x64_sys_futex_[k]
  [ 5] do_syscall_64_[k]
  [ 6] entry_SYSCALL_64_after_hwframe_[k]
  [ 7] __futex_abstimed_wait_cancelable64
  [ 8] [unknown]
  [ 9] jdk.internal.misc.Unsafe.park
  [10] java.util.concurrent.locks.LockSupport.park
  [11] cats.effect.unsafe.WorkerThread.parkLoop$1
  [12] cats.effect.unsafe.WorkerThread.run

--- 330945180 ns (0.05%), 33 samples
  [ 0] memset_[k]
  [ 1] spl_kmem_cache_alloc?[spl]_[k]
  [ 2] zio_data_buf_alloc?[zfs]_[k]
  [ 3] arc_get_data_buf?[zfs]_[k]
  [ 4] arc_buf_alloc_impl?[zfs]_[k]
  [ 5] arc_alloc_buf?[zfs]_[k]
  [ 6] dbuf_new_size?[zfs]_[k]
  [ 7] dnode_set_blksz?[zfs]_[k]
  [ 8] dmu_object_set_blocksize?[zfs]_[k]
  [ 9] zfs_grow_blocksize?[zfs]_[k]
  [10] zfs_write?[zfs]_[k]
  [11] zpl_iter_write?[zfs]_[k]
  [12] new_sync_write_[k]
  [13] vfs_write_[k]
  [14] ksys_write_[k]
  [15] __x64_sys_write_[k]
  [16] do_syscall_64_[k]
  [17] entry_SYSCALL_64_after_hwframe_[k]
  [18] write
  [19] sun.nio.ch.FileDispatcherImpl.write0
  [20] sun.nio.ch.FileDispatcherImpl.write
  [21] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [22] sun.nio.ch.IOUtil.write
  [23] sun.nio.ch.IOUtil.write
  [24] sun.nio.ch.FileChannelImpl.write
  [25] java.nio.channels.Channels.writeFullyImpl
  [26] java.nio.channels.Channels.writeFully
  [27] java.nio.channels.Channels$1.write
  [28] java.io.InputStream.transferTo
  [29] java.nio.file.Files.copy
  [30] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [31] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [32] jdk.nio.zipfs.ZipPath.newFileChannel
  [33] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [34] java.nio.channels.FileChannel.open
  [35] java.nio.channels.FileChannel.open
  [36] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [37] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$63.0x0000000800d35a20.apply
  [38] cats.effect.IOFiber.$anonfun$8
  [39] cats.effect.IOFiber$$Lambda$758.0x0000000800ec4c40.apply
  [40] cats.effect.unsafe.WorkerThread.blockOn
  [41] scala.concurrent.package$.blocking
  [42] cats.effect.IOFiber.runLoop
  [43] cats.effect.IOFiber.execR
  [44] cats.effect.IOFiber.run
  [45] cats.effect.unsafe.WorkerThread.run

--- 330878079 ns (0.05%), 33 samples
  [ 0] copy_user_generic_string_[k]
  [ 1] zfs_uiomove_iter?[zfs]_[k]
  [ 2] zfs_uiomove?[zfs]_[k]
  [ 3] dmu_read_uio_dnode?[zfs]_[k]
  [ 4] dmu_read_uio_dbuf?[zfs]_[k]
  [ 5] mappedread?[zfs]_[k]
  [ 6] zfs_read?[zfs]_[k]
  [ 7] zpl_iter_read?[zfs]_[k]
  [ 8] new_sync_read_[k]
  [ 9] vfs_read_[k]
  [10] __x64_sys_pread64_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] __libc_pread64
  [14] sun.nio.ch.FileDispatcherImpl.pread0
  [15] sun.nio.ch.FileDispatcherImpl.pread
  [16] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [17] sun.nio.ch.IOUtil.read
  [18] sun.nio.ch.IOUtil.read
  [19] sun.nio.ch.FileChannelImpl.readInternal
  [20] sun.nio.ch.FileChannelImpl.read
  [21] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [22] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [23] jdk.nio.zipfs.ZipFileSystem$2.fill
  [24] java.util.zip.InflaterInputStream.read
  [25] java.io.InputStream.transferTo
  [26] java.nio.file.Files.copy
  [27] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [28] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [29] jdk.nio.zipfs.ZipPath.newFileChannel
  [30] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [31] java.nio.channels.FileChannel.open
  [32] java.nio.channels.FileChannel.open
  [33] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [34] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$63.0x0000000800d35a20.apply
  [35] cats.effect.IOFiber.$anonfun$8
  [36] cats.effect.IOFiber$$Lambda$758.0x0000000800ec4c40.apply
  [37] cats.effect.unsafe.WorkerThread.blockOn
  [38] scala.concurrent.package$.blocking
  [39] cats.effect.IOFiber.runLoop
  [40] cats.effect.IOFiber.execR
  [41] cats.effect.IOFiber.run
  [42] cats.effect.unsafe.WorkerThread.run

--- 321314293 ns (0.04%), 32 samples
  [ 0] __schedule_[k]
  [ 1] schedule_[k]
  [ 2] futex_wait_queue_[k]
  [ 3] futex_wait_[k]
  [ 4] do_futex_[k]
  [ 5] __x64_sys_futex_[k]
  [ 6] do_syscall_64_[k]
  [ 7] entry_SYSCALL_64_after_hwframe_[k]
  [ 8] __futex_abstimed_wait_cancelable64
  [ 9] [unknown]
  [10] jdk.internal.misc.Unsafe.park
  [11] java.util.concurrent.locks.LockSupport.park
  [12] cats.effect.unsafe.WorkerThread.parkLoop$1
  [13] cats.effect.unsafe.WorkerThread.run

--- 320903808 ns (0.04%), 32 samples
  [ 0] kfree_[k]
  [ 1] spl_kmem_free_impl?[spl]_[k]
  [ 2] spl_kmem_free?[spl]_[k]
  [ 3] dmu_tx_destroy?[zfs]_[k]
  [ 4] dmu_tx_commit?[zfs]_[k]
  [ 5] zfs_write?[zfs]_[k]
  [ 6] zpl_iter_write?[zfs]_[k]
  [ 7] new_sync_write_[k]
  [ 8] vfs_write_[k]
  [ 9] ksys_write_[k]
  [10] __x64_sys_write_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] write
  [14] sun.nio.ch.FileDispatcherImpl.write0
  [15] sun.nio.ch.FileDispatcherImpl.write
  [16] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.FileChannelImpl.write
  [20] java.nio.channels.Channels.writeFullyImpl
  [21] java.nio.channels.Channels.writeFully
  [22] java.nio.channels.Channels$1.write
  [23] java.io.InputStream.transferTo
  [24] java.nio.file.Files.copy
  [25] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [26] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [27] jdk.nio.zipfs.ZipPath.newFileChannel
  [28] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [29] java.nio.channels.FileChannel.open
  [30] java.nio.channels.FileChannel.open
  [31] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [32] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$63.0x0000000800d35a20.apply
  [33] cats.effect.IOFiber.$anonfun$8
  [34] cats.effect.IOFiber$$Lambda$758.0x0000000800ec4c40.apply
  [35] cats.effect.unsafe.WorkerThread.blockOn
  [36] scala.concurrent.package$.blocking
  [37] cats.effect.IOFiber.runLoop
  [38] cats.effect.IOFiber.execR
  [39] cats.effect.IOFiber.run
  [40] cats.effect.unsafe.WorkerThread.run

--- 320741358 ns (0.04%), 32 samples
  [ 0] refill_obj_stock_[k]
  [ 1] obj_cgroup_charge_[k]
  [ 2] __kmalloc_[k]
  [ 3] inotify_handle_inode_event_[k]
  [ 4] fsnotify_handle_inode_event.isra.0_[k]
  [ 5] send_to_group_[k]
  [ 6] fsnotify_[k]
  [ 7] vfs_unlink_[k]
  [ 8] do_unlinkat_[k]
  [ 9] __x64_sys_unlink_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] __GI_unlink
  [13] sun.nio.fs.UnixNativeDispatcher.unlink0
  [14] sun.nio.fs.UnixNativeDispatcher.unlink
  [15] sun.nio.fs.UnixFileSystemProvider.implDelete
  [16] sun.nio.fs.AbstractFileSystemProvider.delete
  [17] java.nio.file.Files.delete
  [18] jdk.nio.zipfs.ZipFileSystem.removeTempPathForEntry
  [19] jdk.nio.zipfs.ZipFileSystem$1.implCloseChannel
  [20] java.nio.channels.spi.AbstractInterruptibleChannel.close
  [21] fs2.io.file.FilesCompanionPlatform.openFileChannel$$anonfun$1$$anonfun$1
  [22] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$openFileChannel$$anonfun$1$$anonfun$adapted$1
  [23] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$773.0x0000000800ec6ce0.apply
  [24] cats.effect.IOFiber.$anonfun$8
  [25] cats.effect.IOFiber$$Lambda$758.0x0000000800ec4c40.apply
  [26] cats.effect.unsafe.WorkerThread.blockOn
  [27] scala.concurrent.package$.blocking
  [28] cats.effect.IOFiber.runLoop
  [29] cats.effect.IOFiber.execR
  [30] cats.effect.IOFiber.run
  [31] cats.effect.unsafe.WorkerThread.run

--- 311195710 ns (0.04%), 31 samples
  [ 0] Unsafe_Park
  [ 1] jdk.internal.misc.Unsafe.park
  [ 2] java.util.concurrent.locks.LockSupport.park
  [ 3] cats.effect.unsafe.WorkerThread.parkLoop$1
  [ 4] cats.effect.unsafe.WorkerThread.run

--- 310865848 ns (0.04%), 31 samples
  [ 0] mod_memcg_state_[k]
  [ 1] memcg_account_kmem_[k]
  [ 2] obj_cgroup_charge_[k]
  [ 3] __kmalloc_[k]
  [ 4] inotify_handle_inode_event_[k]
  [ 5] fsnotify_handle_inode_event.isra.0_[k]
  [ 6] send_to_group_[k]
  [ 7] fsnotify_[k]
  [ 8] __fsnotify_parent_[k]
  [ 9] vfs_write_[k]
  [10] ksys_write_[k]
  [11] __x64_sys_write_[k]
  [12] do_syscall_64_[k]
  [13] entry_SYSCALL_64_after_hwframe_[k]
  [14] write
  [15] sun.nio.ch.FileDispatcherImpl.write0
  [16] sun.nio.ch.FileDispatcherImpl.write
  [17] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.IOUtil.write
  [20] sun.nio.ch.FileChannelImpl.write
  [21] java.nio.channels.Channels.writeFullyImpl
  [22] java.nio.channels.Channels.writeFully
  [23] java.nio.channels.Channels$1.write
  [24] java.io.InputStream.transferTo
  [25] java.nio.file.Files.copy
  [26] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [27] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [28] jdk.nio.zipfs.ZipPath.newFileChannel
  [29] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [30] java.nio.channels.FileChannel.open
  [31] java.nio.channels.FileChannel.open
  [32] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [33] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$63.0x0000000800d35a20.apply
  [34] cats.effect.IOFiber.$anonfun$8
  [35] cats.effect.IOFiber$$Lambda$758.0x0000000800ec4c40.apply
  [36] cats.effect.unsafe.WorkerThread.blockOn
  [37] scala.concurrent.package$.blocking
  [38] cats.effect.IOFiber.runLoop
  [39] cats.effect.IOFiber.execR
  [40] cats.effect.IOFiber.run
  [41] cats.effect.unsafe.WorkerThread.run

--- 310662146 ns (0.04%), 31 samples
  [ 0] __rcu_read_lock_[k]
  [ 1] __kmalloc_[k]
  [ 2] inotify_handle_inode_event_[k]
  [ 3] fsnotify_handle_inode_event.isra.0_[k]
  [ 4] send_to_group_[k]
  [ 5] fsnotify_[k]
  [ 6] __fsnotify_parent_[k]
  [ 7] vfs_write_[k]
  [ 8] ksys_write_[k]
  [ 9] __x64_sys_write_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] write
  [13] sun.nio.ch.FileDispatcherImpl.write0
  [14] sun.nio.ch.FileDispatcherImpl.write
  [15] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [16] sun.nio.ch.IOUtil.write
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.FileChannelImpl.write
  [19] java.nio.channels.Channels.writeFullyImpl
  [20] java.nio.channels.Channels.writeFully
  [21] java.nio.channels.Channels$1.write
  [22] java.io.InputStream.transferTo
  [23] java.nio.file.Files.copy
  [24] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [25] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [26] jdk.nio.zipfs.ZipPath.newFileChannel
  [27] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [28] java.nio.channels.FileChannel.open
  [29] java.nio.channels.FileChannel.open
  [30] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [31] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$63.0x0000000800d35a20.apply
  [32] cats.effect.IOFiber.$anonfun$8
  [33] cats.effect.IOFiber$$Lambda$758.0x0000000800ec4c40.apply
  [34] cats.effect.unsafe.WorkerThread.blockOn
  [35] scala.concurrent.package$.blocking
  [36] cats.effect.IOFiber.runLoop
  [37] cats.effect.IOFiber.execR
  [38] cats.effect.IOFiber.run
  [39] cats.effect.unsafe.WorkerThread.run

--- 302485715 ns (0.04%), 30 samples
  [ 0] void WeakProcessor::Task::work<G1STWIsAliveClosure, G1KeepAliveClosure>(unsigned int, G1STWIsAliveClosure*, G1KeepAliveClosure*)
  [ 1] GangWorker::loop()
  [ 2] GangWorker::run()
  [ 3] Thread::call_run()
  [ 4] thread_native_entry(Thread*)
  [ 5] start_thread

--- 300674297 ns (0.04%), 30 samples
  [ 0] vfs_write_[k]
  [ 1] ksys_write_[k]
  [ 2] __x64_sys_write_[k]
  [ 3] do_syscall_64_[k]
  [ 4] entry_SYSCALL_64_after_hwframe_[k]
  [ 5] write
  [ 6] sun.nio.ch.FileDispatcherImpl.write0
  [ 7] sun.nio.ch.FileDispatcherImpl.write
  [ 8] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [ 9] sun.nio.ch.IOUtil.write
  [10] sun.nio.ch.IOUtil.write
  [11] sun.nio.ch.FileChannelImpl.write
  [12] java.nio.channels.Channels.writeFullyImpl
  [13] java.nio.channels.Channels.writeFully
  [14] java.nio.channels.Channels$1.write
  [15] java.io.InputStream.transferTo
  [16] java.nio.file.Files.copy
  [17] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [18] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [19] jdk.nio.zipfs.ZipPath.newFileChannel
  [20] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [21] java.nio.channels.FileChannel.open
  [22] java.nio.channels.FileChannel.open
  [23] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [24] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$63.0x0000000800d35a20.apply
  [25] cats.effect.IOFiber.$anonfun$8
  [26] cats.effect.IOFiber$$Lambda$758.0x0000000800ec4c40.apply
  [27] cats.effect.unsafe.WorkerThread.blockOn
  [28] scala.concurrent.package$.blocking
  [29] cats.effect.IOFiber.runLoop
  [30] cats.effect.IOFiber.execR
  [31] cats.effect.IOFiber.run
  [32] cats.effect.unsafe.WorkerThread.run

--- 300672147 ns (0.04%), 30 samples
  [ 0] syscall_enter_from_user_mode_[k]
  [ 1] do_syscall_64_[k]
  [ 2] entry_SYSCALL_64_after_hwframe_[k]
  [ 3] write
  [ 4] sun.nio.ch.FileDispatcherImpl.write0
  [ 5] sun.nio.ch.FileDispatcherImpl.write
  [ 6] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [ 7] sun.nio.ch.IOUtil.write
  [ 8] sun.nio.ch.IOUtil.write
  [ 9] sun.nio.ch.FileChannelImpl.write
  [10] java.nio.channels.Channels.writeFullyImpl
  [11] java.nio.channels.Channels.writeFully
  [12] java.nio.channels.Channels$1.write
  [13] java.io.InputStream.transferTo
  [14] java.nio.file.Files.copy
  [15] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [16] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [17] jdk.nio.zipfs.ZipPath.newFileChannel
  [18] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [19] java.nio.channels.FileChannel.open
  [20] java.nio.channels.FileChannel.open
  [21] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [22] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$63.0x0000000800d35a20.apply
  [23] cats.effect.IOFiber.$anonfun$8
  [24] cats.effect.IOFiber$$Lambda$758.0x0000000800ec4c40.apply
  [25] cats.effect.unsafe.WorkerThread.blockOn
  [26] scala.concurrent.package$.blocking
  [27] cats.effect.IOFiber.runLoop
  [28] cats.effect.IOFiber.execR
  [29] cats.effect.IOFiber.run
  [30] cats.effect.unsafe.WorkerThread.run

--- 290787084 ns (0.04%), 29 samples
  [ 0] find_vmap_area_[k]
  [ 1] check_heap_object_[k]
  [ 2] __check_object_size.part.0_[k]
  [ 3] __check_object_size_[k]
  [ 4] zfs_uiomove_iter?[zfs]_[k]
  [ 5] zfs_uiomove?[zfs]_[k]
  [ 6] dmu_read_uio_dnode?[zfs]_[k]
  [ 7] dmu_read_uio_dbuf?[zfs]_[k]
  [ 8] mappedread?[zfs]_[k]
  [ 9] zfs_read?[zfs]_[k]
  [10] zpl_iter_read?[zfs]_[k]
  [11] new_sync_read_[k]
  [12] vfs_read_[k]
  [13] __x64_sys_pread64_[k]
  [14] do_syscall_64_[k]
  [15] entry_SYSCALL_64_after_hwframe_[k]
  [16] __libc_pread64
  [17] sun.nio.ch.FileDispatcherImpl.pread0
  [18] sun.nio.ch.FileDispatcherImpl.pread
  [19] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [20] sun.nio.ch.IOUtil.read
  [21] sun.nio.ch.IOUtil.read
  [22] sun.nio.ch.FileChannelImpl.readInternal
  [23] sun.nio.ch.FileChannelImpl.read
  [24] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [25] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [26] jdk.nio.zipfs.ZipFileSystem$Entry.readLocEXTT
  [27] jdk.nio.zipfs.ZipFileSystem$Entry.readExtra
  [28] jdk.nio.zipfs.ZipFileSystem$Entry.readCEN
  [29] jdk.nio.zipfs.ZipFileSystem$Entry.<init>
  [30] jdk.nio.zipfs.ZipFileSystem.getEntry
  [31] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [32] jdk.nio.zipfs.ZipPath.newFileChannel
  [33] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [34] java.nio.channels.FileChannel.open
  [35] java.nio.channels.FileChannel.open
  [36] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [37] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$63.0x0000000800d35a20.apply
  [38] cats.effect.IOFiber.$anonfun$8
  [39] cats.effect.IOFiber$$Lambda$758.0x0000000800ec4c40.apply
  [40] cats.effect.unsafe.WorkerThread.blockOn
  [41] scala.concurrent.package$.blocking
  [42] cats.effect.IOFiber.runLoop
  [43] cats.effect.IOFiber.execR
  [44] cats.effect.IOFiber.run
  [45] cats.effect.unsafe.WorkerThread.run

--- 290774201 ns (0.04%), 29 samples
  [ 0] _raw_spin_unlock_irqrestore_[k]
  [ 1] try_to_wake_up_[k]
  [ 2] wake_up_q_[k]
  [ 3] futex_wake_[k]
  [ 4] do_futex_[k]
  [ 5] __x64_sys_futex_[k]
  [ 6] do_syscall_64_[k]
  [ 7] entry_SYSCALL_64_after_hwframe_[k]
  [ 8] pthread_cond_signal@@GLIBC_2.3.2
  [ 9] jdk.internal.misc.Unsafe.unpark
  [10] java.util.concurrent.locks.LockSupport.unpark
  [11] java.util.concurrent.LinkedTransferQueue$Node.tryMatch
  [12] java.util.concurrent.LinkedTransferQueue.xfer
  [13] java.util.concurrent.LinkedTransferQueue.transfer
  [14] cats.effect.unsafe.WorkerThread.blockOn
  [15] scala.concurrent.package$.blocking
  [16] cats.effect.IOFiber.runLoop
  [17] cats.effect.IOFiber.execR
  [18] cats.effect.IOFiber.run
  [19] cats.effect.unsafe.WorkerThread.run

--- 280756696 ns (0.04%), 28 samples
  [ 0] __get_obj_cgroup_from_memcg_[k]
  [ 1] get_obj_cgroup_from_current_[k]
  [ 2] __kmalloc_[k]
  [ 3] inotify_handle_inode_event_[k]
  [ 4] fsnotify_handle_inode_event.isra.0_[k]
  [ 5] send_to_group_[k]
  [ 6] fsnotify_[k]
  [ 7] __fsnotify_parent_[k]
  [ 8] vfs_write_[k]
  [ 9] ksys_write_[k]
  [10] __x64_sys_write_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] write
  [14] sun.nio.ch.FileDispatcherImpl.write0
  [15] sun.nio.ch.FileDispatcherImpl.write
  [16] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.FileChannelImpl.write
  [20] java.nio.channels.Channels.writeFullyImpl
  [21] java.nio.channels.Channels.writeFully
  [22] java.nio.channels.Channels$1.write
  [23] java.io.InputStream.transferTo
  [24] java.nio.file.Files.copy
  [25] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [26] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [27] jdk.nio.zipfs.ZipPath.newFileChannel
  [28] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [29] java.nio.channels.FileChannel.open
  [30] java.nio.channels.FileChannel.open
  [31] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [32] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$63.0x0000000800d35a20.apply
  [33] cats.effect.IOFiber.$anonfun$8
  [34] cats.effect.IOFiber$$Lambda$758.0x0000000800ec4c40.apply
  [35] cats.effect.unsafe.WorkerThread.blockOn
  [36] scala.concurrent.package$.blocking
  [37] cats.effect.IOFiber.runLoop
  [38] cats.effect.IOFiber.execR
  [39] cats.effect.IOFiber.run
  [40] cats.effect.unsafe.WorkerThread.run

--- 280734607 ns (0.04%), 28 samples
  [ 0] _raw_spin_unlock_irqrestore_[k]
  [ 1] try_to_wake_up_[k]
  [ 2] wake_up_q_[k]
  [ 3] futex_wake_[k]
  [ 4] do_futex_[k]
  [ 5] __x64_sys_futex_[k]
  [ 6] do_syscall_64_[k]
  [ 7] entry_SYSCALL_64_after_hwframe_[k]
  [ 8] pthread_cond_signal@@GLIBC_2.3.2
  [ 9] jdk.internal.misc.Unsafe.unpark
  [10] java.util.concurrent.locks.LockSupport.unpark
  [11] cats.effect.unsafe.WorkStealingThreadPool.notifyParked
  [12] cats.effect.unsafe.WorkerThread.blockOn
  [13] scala.concurrent.package$.blocking
  [14] cats.effect.IOFiber.runLoop
  [15] cats.effect.IOFiber.execR
  [16] cats.effect.IOFiber.run
  [17] cats.effect.unsafe.WorkerThread.run

--- 280495637 ns (0.04%), 28 samples
  [ 0] memcg_slab_post_alloc_hook_[k]
  [ 1] __kmalloc_[k]
  [ 2] inotify_handle_inode_event_[k]
  [ 3] fsnotify_handle_inode_event.isra.0_[k]
  [ 4] send_to_group_[k]
  [ 5] fsnotify_[k]
  [ 6] __fsnotify_parent_[k]
  [ 7] vfs_write_[k]
  [ 8] ksys_write_[k]
  [ 9] __x64_sys_write_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] write
  [13] sun.nio.ch.FileDispatcherImpl.write0
  [14] sun.nio.ch.FileDispatcherImpl.write
  [15] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [16] sun.nio.ch.IOUtil.write
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.FileChannelImpl.write
  [19] java.nio.channels.Channels.writeFullyImpl
  [20] java.nio.channels.Channels.writeFully
  [21] java.nio.channels.Channels$1.write
  [22] java.io.InputStream.transferTo
  [23] java.nio.file.Files.copy
  [24] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [25] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [26] jdk.nio.zipfs.ZipPath.newFileChannel
  [27] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [28] java.nio.channels.FileChannel.open
  [29] java.nio.channels.FileChannel.open
  [30] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [31] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$63.0x0000000800d35a20.apply
  [32] cats.effect.IOFiber.$anonfun$8
  [33] cats.effect.IOFiber$$Lambda$758.0x0000000800ec4c40.apply
  [34] cats.effect.unsafe.WorkerThread.blockOn
  [35] scala.concurrent.package$.blocking
  [36] cats.effect.IOFiber.runLoop
  [37] cats.effect.IOFiber.execR
  [38] cats.effect.IOFiber.run
  [39] cats.effect.unsafe.WorkerThread.run

--- 270721148 ns (0.04%), 27 samples
  [ 0] kmem_cache_free_[k]
  [ 1] spl_kmem_cache_free?[spl]_[k]
  [ 2] zio_data_buf_free?[zfs]_[k]
  [ 3] zil_itx_destroy?[zfs]_[k]
  [ 4] zil_remove_async?[zfs]_[k]
  [ 5] zfs_log_remove?[zfs]_[k]
  [ 6] zfs_remove?[zfs]_[k]
  [ 7] zpl_unlink?[zfs]_[k]
  [ 8] vfs_unlink_[k]
  [ 9] do_unlinkat_[k]
  [10] __x64_sys_unlink_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] __GI_unlink
  [14] sun.nio.fs.UnixNativeDispatcher.unlink0
  [15] sun.nio.fs.UnixNativeDispatcher.unlink
  [16] sun.nio.fs.UnixFileSystemProvider.implDelete
  [17] sun.nio.fs.AbstractFileSystemProvider.delete
  [18] java.nio.file.Files.delete
  [19] jdk.nio.zipfs.ZipFileSystem.removeTempPathForEntry
  [20] jdk.nio.zipfs.ZipFileSystem$1.implCloseChannel
  [21] java.nio.channels.spi.AbstractInterruptibleChannel.close
  [22] fs2.io.file.FilesCompanionPlatform.openFileChannel$$anonfun$1$$anonfun$1
  [23] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$openFileChannel$$anonfun$1$$anonfun$adapted$1
  [24] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$773.0x0000000800ec6ce0.apply
  [25] cats.effect.IOFiber.$anonfun$8
  [26] cats.effect.IOFiber$$Lambda$758.0x0000000800ec4c40.apply
  [27] cats.effect.unsafe.WorkerThread.blockOn
  [28] scala.concurrent.package$.blocking
  [29] cats.effect.IOFiber.runLoop
  [30] cats.effect.IOFiber.execR
  [31] cats.effect.IOFiber.run
  [32] cats.effect.unsafe.WorkerThread.run

--- 270690483 ns (0.04%), 27 samples
  [ 0] refill_stock_[k]
  [ 1] obj_cgroup_uncharge_pages_[k]
  [ 2] refill_obj_stock_[k]
  [ 3] obj_cgroup_charge_[k]
  [ 4] __kmalloc_[k]
  [ 5] inotify_handle_inode_event_[k]
  [ 6] fsnotify_handle_inode_event.isra.0_[k]
  [ 7] send_to_group_[k]
  [ 8] fsnotify_[k]
  [ 9] __fsnotify_parent_[k]
  [10] vfs_write_[k]
  [11] ksys_write_[k]
  [12] __x64_sys_write_[k]
  [13] do_syscall_64_[k]
  [14] entry_SYSCALL_64_after_hwframe_[k]
  [15] write
  [16] sun.nio.ch.FileDispatcherImpl.write0
  [17] sun.nio.ch.FileDispatcherImpl.write
  [18] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [19] sun.nio.ch.IOUtil.write
  [20] sun.nio.ch.IOUtil.write
  [21] sun.nio.ch.FileChannelImpl.write
  [22] java.nio.channels.Channels.writeFullyImpl
  [23] java.nio.channels.Channels.writeFully
  [24] java.nio.channels.Channels$1.write
  [25] java.io.InputStream.transferTo
  [26] java.nio.file.Files.copy
  [27] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [28] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [29] jdk.nio.zipfs.ZipPath.newFileChannel
  [30] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [31] java.nio.channels.FileChannel.open
  [32] java.nio.channels.FileChannel.open
  [33] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [34] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$63.0x0000000800d35a20.apply
  [35] cats.effect.IOFiber.$anonfun$8
  [36] cats.effect.IOFiber$$Lambda$758.0x0000000800ec4c40.apply
  [37] cats.effect.unsafe.WorkerThread.blockOn
  [38] scala.concurrent.package$.blocking
  [39] cats.effect.IOFiber.runLoop
  [40] cats.effect.IOFiber.execR
  [41] cats.effect.IOFiber.run
  [42] cats.effect.unsafe.WorkerThread.run

--- 270677889 ns (0.04%), 27 samples
  [ 0] kfree_[k]
  [ 1] spl_kmem_free_impl?[spl]_[k]
  [ 2] spl_kmem_free?[spl]_[k]
  [ 3] dsl_dir_tempreserve_clear?[zfs]_[k]
  [ 4] dmu_tx_commit?[zfs]_[k]
  [ 5] zfs_write?[zfs]_[k]
  [ 6] zpl_iter_write?[zfs]_[k]
  [ 7] new_sync_write_[k]
  [ 8] vfs_write_[k]
  [ 9] ksys_write_[k]
  [10] __x64_sys_write_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] write
  [14] sun.nio.ch.FileDispatcherImpl.write0
  [15] sun.nio.ch.FileDispatcherImpl.write
  [16] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.FileChannelImpl.write
  [20] java.nio.channels.Channels.writeFullyImpl
  [21] java.nio.channels.Channels.writeFully
  [22] java.nio.channels.Channels$1.write
  [23] java.io.InputStream.transferTo
  [24] java.nio.file.Files.copy
  [25] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [26] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [27] jdk.nio.zipfs.ZipPath.newFileChannel
  [28] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [29] java.nio.channels.FileChannel.open
  [30] java.nio.channels.FileChannel.open
  [31] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [32] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$63.0x0000000800d35a20.apply
  [33] cats.effect.IOFiber.$anonfun$8
  [34] cats.effect.IOFiber$$Lambda$758.0x0000000800ec4c40.apply
  [35] cats.effect.unsafe.WorkerThread.blockOn
  [36] scala.concurrent.package$.blocking
  [37] cats.effect.IOFiber.runLoop
  [38] cats.effect.IOFiber.execR
  [39] cats.effect.IOFiber.run
  [40] cats.effect.unsafe.WorkerThread.run

--- 270675022 ns (0.04%), 27 samples
  [ 0] _raw_spin_unlock_irqrestore_[k]
  [ 1] __wake_up_common_lock_[k]
  [ 2] __wake_up_[k]
  [ 3] fsnotify_insert_event_[k]
  [ 4] inotify_handle_inode_event_[k]
  [ 5] fsnotify_handle_inode_event.isra.0_[k]
  [ 6] send_to_group_[k]
  [ 7] fsnotify_[k]
  [ 8] __fsnotify_parent_[k]
  [ 9] __fput_[k]
  [10] ____fput_[k]
  [11] task_work_run_[k]
  [12] exit_to_user_mode_loop_[k]
  [13] exit_to_user_mode_prepare_[k]
  [14] syscall_exit_to_user_mode_[k]
  [15] do_syscall_64_[k]
  [16] entry_SYSCALL_64_after_hwframe_[k]
  [17] __close
  [18] java.io.FileDescriptor.close0
  [19] java.io.FileDescriptor.close
  [20] java.io.FileDescriptor$1.close
  [21] sun.nio.ch.FileChannelImpl$Closer.run
  [22] jdk.internal.ref.CleanerImpl$PhantomCleanableRef.performCleanup
  [23] jdk.internal.ref.PhantomCleanable.clean
  [24] sun.nio.ch.FileChannelImpl.implCloseChannel
  [25] java.nio.channels.spi.AbstractInterruptibleChannel.close
  [26] java.nio.file.Files.createFile
  [27] java.nio.file.TempFileHelper.create
  [28] java.nio.file.TempFileHelper.createTempFile
  [29] java.nio.file.Files.createTempFile
  [30] jdk.nio.zipfs.ZipFileSystem.createTempFileInSameDirectoryAs
  [31] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [32] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [33] jdk.nio.zipfs.ZipPath.newFileChannel
  [34] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [35] java.nio.channels.FileChannel.open
  [36] java.nio.channels.FileChannel.open
  [37] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [38] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$63.0x0000000800d35a20.apply
  [39] cats.effect.IOFiber.$anonfun$8
  [40] cats.effect.IOFiber$$Lambda$758.0x0000000800ec4c40.apply
  [41] cats.effect.unsafe.WorkerThread.blockOn
  [42] scala.concurrent.package$.blocking
  [43] cats.effect.IOFiber.runLoop
  [44] cats.effect.IOFiber.execR
  [45] cats.effect.IOFiber.run
  [46] cats.effect.unsafe.WorkerThread.run

--- 270639323 ns (0.04%), 27 samples
  [ 0] obj_cgroup_charge_[k]
  [ 1] __kmalloc_[k]
  [ 2] inotify_handle_inode_event_[k]
  [ 3] fsnotify_handle_inode_event.isra.0_[k]
  [ 4] send_to_group_[k]
  [ 5] fsnotify_[k]
  [ 6] __fsnotify_parent_[k]
  [ 7] vfs_write_[k]
  [ 8] ksys_write_[k]
  [ 9] __x64_sys_write_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] write
  [13] sun.nio.ch.FileDispatcherImpl.write0
  [14] sun.nio.ch.FileDispatcherImpl.write
  [15] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [16] sun.nio.ch.IOUtil.write
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.FileChannelImpl.write
  [19] java.nio.channels.Channels.writeFullyImpl
  [20] java.nio.channels.Channels.writeFully
  [21] java.nio.channels.Channels$1.write
  [22] java.io.InputStream.transferTo
  [23] java.nio.file.Files.copy
  [24] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [25] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [26] jdk.nio.zipfs.ZipPath.newFileChannel
  [27] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [28] java.nio.channels.FileChannel.open
  [29] java.nio.channels.FileChannel.open
  [30] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [31] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$63.0x0000000800d35a20.apply
  [32] cats.effect.IOFiber.$anonfun$8
  [33] cats.effect.IOFiber$$Lambda$758.0x0000000800ec4c40.apply
  [34] cats.effect.unsafe.WorkerThread.blockOn
  [35] scala.concurrent.package$.blocking
  [36] cats.effect.IOFiber.runLoop
  [37] cats.effect.IOFiber.execR
  [38] cats.effect.IOFiber.run
  [39] cats.effect.unsafe.WorkerThread.run

--- 260780292 ns (0.04%), 26 samples
  [ 0] itable stub
  [ 1] cats.effect.IOFiber.next$2
  [ 2] cats.effect.IOFiber.runLoop
  [ 3] cats.effect.IOFiber.execR
  [ 4] cats.effect.IOFiber.run
  [ 5] cats.effect.unsafe.WorkerThread.run

--- 260744437 ns (0.04%), 26 samples
  [ 0] kfree_[k]
  [ 1] spl_kmem_free_impl?[spl]_[k]
  [ 2] spl_kmem_free?[spl]_[k]
  [ 3] dsl_dir_tempreserve_clear?[zfs]_[k]
  [ 4] dmu_tx_commit?[zfs]_[k]
  [ 5] zfs_write?[zfs]_[k]
  [ 6] zpl_iter_write?[zfs]_[k]
  [ 7] new_sync_write_[k]
  [ 8] vfs_write_[k]
  [ 9] ksys_write_[k]
  [10] __x64_sys_write_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] write
  [14] sun.nio.ch.FileDispatcherImpl.write0
  [15] sun.nio.ch.FileDispatcherImpl.write
  [16] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.FileChannelImpl.write
  [20] java.nio.channels.Channels.writeFullyImpl
  [21] java.nio.channels.Channels.writeFully
  [22] java.nio.channels.Channels$1.write
  [23] java.io.InputStream.transferTo
  [24] java.nio.file.Files.copy
  [25] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [26] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [27] jdk.nio.zipfs.ZipPath.newFileChannel
  [28] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [29] java.nio.channels.FileChannel.open
  [30] java.nio.channels.FileChannel.open
  [31] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [32] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$63.0x0000000800d35a20.apply
  [33] cats.effect.IOFiber.$anonfun$8
  [34] cats.effect.IOFiber$$Lambda$758.0x0000000800ec4c40.apply
  [35] cats.effect.unsafe.WorkerThread.blockOn
  [36] scala.concurrent.package$.blocking
  [37] cats.effect.IOFiber.runLoop
  [38] cats.effect.IOFiber.execR
  [39] cats.effect.IOFiber.run
  [40] cats.effect.unsafe.WorkerThread.run

--- 260709366 ns (0.04%), 26 samples
  [ 0] _raw_spin_unlock_irqrestore_[k]
  [ 1] __wake_up_common_lock_[k]
  [ 2] __wake_up_[k]
  [ 3] fsnotify_insert_event_[k]
  [ 4] inotify_handle_inode_event_[k]
  [ 5] fsnotify_handle_inode_event.isra.0_[k]
  [ 6] send_to_group_[k]
  [ 7] fsnotify_[k]
  [ 8] __fsnotify_parent_[k]
  [ 9] __fput_[k]
  [10] ____fput_[k]
  [11] task_work_run_[k]
  [12] exit_to_user_mode_loop_[k]
  [13] exit_to_user_mode_prepare_[k]
  [14] syscall_exit_to_user_mode_[k]
  [15] do_syscall_64_[k]
  [16] entry_SYSCALL_64_after_hwframe_[k]
  [17] __close
  [18] java.io.FileDescriptor.close0
  [19] java.io.FileDescriptor.close
  [20] java.io.FileDescriptor$1.close
  [21] sun.nio.ch.FileChannelImpl$Closer.run
  [22] jdk.internal.ref.CleanerImpl$PhantomCleanableRef.performCleanup
  [23] jdk.internal.ref.PhantomCleanable.clean
  [24] sun.nio.ch.FileChannelImpl.implCloseChannel
  [25] java.nio.channels.spi.AbstractInterruptibleChannel.close
  [26] java.nio.channels.Channels$1.close
  [27] java.nio.file.Files.copy
  [28] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [29] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [30] jdk.nio.zipfs.ZipPath.newFileChannel
  [31] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [32] java.nio.channels.FileChannel.open
  [33] java.nio.channels.FileChannel.open
  [34] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [35] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$63.0x0000000800d35a20.apply
  [36] cats.effect.IOFiber.$anonfun$8
  [37] cats.effect.IOFiber$$Lambda$758.0x0000000800ec4c40.apply
  [38] cats.effect.unsafe.WorkerThread.blockOn
  [39] scala.concurrent.package$.blocking
  [40] cats.effect.IOFiber.runLoop
  [41] cats.effect.IOFiber.execR
  [42] cats.effect.IOFiber.run
  [43] cats.effect.unsafe.WorkerThread.run

--- 260703438 ns (0.04%), 26 samples
  [ 0] zfs_log_write?[zfs]_[k]
  [ 1] zfs_write?[zfs]_[k]
  [ 2] zpl_iter_write?[zfs]_[k]
  [ 3] new_sync_write_[k]
  [ 4] vfs_write_[k]
  [ 5] ksys_write_[k]
  [ 6] __x64_sys_write_[k]
  [ 7] do_syscall_64_[k]
  [ 8] entry_SYSCALL_64_after_hwframe_[k]
  [ 9] write
  [10] sun.nio.ch.FileDispatcherImpl.write0
  [11] sun.nio.ch.FileDispatcherImpl.write
  [12] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [13] sun.nio.ch.IOUtil.write
  [14] sun.nio.ch.IOUtil.write
  [15] sun.nio.ch.FileChannelImpl.write
  [16] java.nio.channels.Channels.writeFullyImpl
  [17] java.nio.channels.Channels.writeFully
  [18] java.nio.channels.Channels$1.write
  [19] java.io.InputStream.transferTo
  [20] java.nio.file.Files.copy
  [21] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [22] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [23] jdk.nio.zipfs.ZipPath.newFileChannel
  [24] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [25] java.nio.channels.FileChannel.open
  [26] java.nio.channels.FileChannel.open
  [27] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [28] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$63.0x0000000800d35a20.apply
  [29] cats.effect.IOFiber.$anonfun$8
  [30] cats.effect.IOFiber$$Lambda$758.0x0000000800ec4c40.apply
  [31] cats.effect.unsafe.WorkerThread.blockOn
  [32] scala.concurrent.package$.blocking
  [33] cats.effect.IOFiber.runLoop
  [34] cats.effect.IOFiber.execR
  [35] cats.effect.IOFiber.run
  [36] cats.effect.unsafe.WorkerThread.run

--- 260686445 ns (0.04%), 26 samples
  [ 0] dnode_set_blksz?[zfs]_[k]
  [ 1] dmu_object_set_blocksize?[zfs]_[k]
  [ 2] zfs_grow_blocksize?[zfs]_[k]
  [ 3] zfs_write?[zfs]_[k]
  [ 4] zpl_iter_write?[zfs]_[k]
  [ 5] new_sync_write_[k]
  [ 6] vfs_write_[k]
  [ 7] ksys_write_[k]
  [ 8] __x64_sys_write_[k]
  [ 9] do_syscall_64_[k]
  [10] entry_SYSCALL_64_after_hwframe_[k]
  [11] write
  [12] sun.nio.ch.FileDispatcherImpl.write0
  [13] sun.nio.ch.FileDispatcherImpl.write
  [14] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [15] sun.nio.ch.IOUtil.write
  [16] sun.nio.ch.IOUtil.write
  [17] sun.nio.ch.FileChannelImpl.write
  [18] java.nio.channels.Channels.writeFullyImpl
  [19] java.nio.channels.Channels.writeFully
  [20] java.nio.channels.Channels$1.write
  [21] java.io.InputStream.transferTo
  [22] java.nio.file.Files.copy
  [23] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [24] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [25] jdk.nio.zipfs.ZipPath.newFileChannel
  [26] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [27] java.nio.channels.FileChannel.open
  [28] java.nio.channels.FileChannel.open
  [29] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [30] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$63.0x0000000800d35a20.apply
  [31] cats.effect.IOFiber.$anonfun$8
  [32] cats.effect.IOFiber$$Lambda$758.0x0000000800ec4c40.apply
  [33] cats.effect.unsafe.WorkerThread.blockOn
  [34] scala.concurrent.package$.blocking
  [35] cats.effect.IOFiber.runLoop
  [36] cats.effect.IOFiber.execR
  [37] cats.effect.IOFiber.run
  [38] cats.effect.unsafe.WorkerThread.run

--- 260668299 ns (0.04%), 26 samples
  [ 0] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 1] dmu_write_uio_dnode?[zfs]_[k]
  [ 2] dmu_write_uio_dbuf?[zfs]_[k]
  [ 3] zfs_write?[zfs]_[k]
  [ 4] zpl_iter_write?[zfs]_[k]
  [ 5] new_sync_write_[k]
  [ 6] vfs_write_[k]
  [ 7] ksys_write_[k]
  [ 8] __x64_sys_write_[k]
  [ 9] do_syscall_64_[k]
  [10] entry_SYSCALL_64_after_hwframe_[k]
  [11] write
  [12] sun.nio.ch.FileDispatcherImpl.write0
  [13] sun.nio.ch.FileDispatcherImpl.write
  [14] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [15] sun.nio.ch.IOUtil.write
  [16] sun.nio.ch.IOUtil.write
  [17] sun.nio.ch.FileChannelImpl.write
  [18] java.nio.channels.Channels.writeFullyImpl
  [19] java.nio.channels.Channels.writeFully
  [20] java.nio.channels.Channels$1.write
  [21] java.io.InputStream.transferTo
  [22] java.nio.file.Files.copy
  [23] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [24] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [25] jdk.nio.zipfs.ZipPath.newFileChannel
  [26] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [27] java.nio.channels.FileChannel.open
  [28] java.nio.channels.FileChannel.open
  [29] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [30] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$63.0x0000000800d35a20.apply
  [31] cats.effect.IOFiber.$anonfun$8
  [32] cats.effect.IOFiber$$Lambda$758.0x0000000800ec4c40.apply
  [33] cats.effect.unsafe.WorkerThread.blockOn
  [34] scala.concurrent.package$.blocking
  [35] cats.effect.IOFiber.runLoop
  [36] cats.effect.IOFiber.execR
  [37] cats.effect.IOFiber.run
  [38] cats.effect.unsafe.WorkerThread.run

--- 260656932 ns (0.04%), 26 samples
  [ 0] dnode_hold_impl?[zfs]_[k]
  [ 1] dnode_hold?[zfs]_[k]
  [ 2] dmu_object_set_blocksize?[zfs]_[k]
  [ 3] zfs_grow_blocksize?[zfs]_[k]
  [ 4] zfs_write?[zfs]_[k]
  [ 5] zpl_iter_write?[zfs]_[k]
  [ 6] new_sync_write_[k]
  [ 7] vfs_write_[k]
  [ 8] ksys_write_[k]
  [ 9] __x64_sys_write_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] write
  [13] sun.nio.ch.FileDispatcherImpl.write0
  [14] sun.nio.ch.FileDispatcherImpl.write
  [15] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [16] sun.nio.ch.IOUtil.write
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.FileChannelImpl.write
  [19] java.nio.channels.Channels.writeFullyImpl
  [20] java.nio.channels.Channels.writeFully
  [21] java.nio.channels.Channels$1.write
  [22] java.io.InputStream.transferTo
  [23] java.nio.file.Files.copy
  [24] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [25] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [26] jdk.nio.zipfs.ZipPath.newFileChannel
  [27] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [28] java.nio.channels.FileChannel.open
  [29] java.nio.channels.FileChannel.open
  [30] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [31] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$63.0x0000000800d35a20.apply
  [32] cats.effect.IOFiber.$anonfun$8
  [33] cats.effect.IOFiber$$Lambda$758.0x0000000800ec4c40.apply
  [34] cats.effect.unsafe.WorkerThread.blockOn
  [35] scala.concurrent.package$.blocking
  [36] cats.effect.IOFiber.runLoop
  [37] cats.effect.IOFiber.execR
  [38] cats.effect.IOFiber.run
  [39] cats.effect.unsafe.WorkerThread.run

--- 260569315 ns (0.04%), 26 samples
  [ 0] __kmalloc_[k]
  [ 1] inotify_handle_inode_event_[k]
  [ 2] fsnotify_handle_inode_event.isra.0_[k]
  [ 3] send_to_group_[k]
  [ 4] fsnotify_[k]
  [ 5] __fsnotify_parent_[k]
  [ 6] vfs_write_[k]
  [ 7] ksys_write_[k]
  [ 8] __x64_sys_write_[k]
  [ 9] do_syscall_64_[k]
  [10] entry_SYSCALL_64_after_hwframe_[k]
  [11] write
  [12] sun.nio.ch.FileDispatcherImpl.write0
  [13] sun.nio.ch.FileDispatcherImpl.write
  [14] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [15] sun.nio.ch.IOUtil.write
  [16] sun.nio.ch.IOUtil.write
  [17] sun.nio.ch.FileChannelImpl.write
  [18] java.nio.channels.Channels.writeFullyImpl
  [19] java.nio.channels.Channels.writeFully
  [20] java.nio.channels.Channels$1.write
  [21] java.io.InputStream.transferTo
  [22] java.nio.file.Files.copy
  [23] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [24] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [25] jdk.nio.zipfs.ZipPath.newFileChannel
  [26] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [27] java.nio.channels.FileChannel.open
  [28] java.nio.channels.FileChannel.open
  [29] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [30] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$63.0x0000000800d35a20.apply
  [31] cats.effect.IOFiber.$anonfun$8
  [32] cats.effect.IOFiber$$Lambda$758.0x0000000800ec4c40.apply
  [33] cats.effect.unsafe.WorkerThread.blockOn
  [34] scala.concurrent.package$.blocking
  [35] cats.effect.IOFiber.runLoop
  [36] cats.effect.IOFiber.execR
  [37] cats.effect.IOFiber.run
  [38] cats.effect.unsafe.WorkerThread.run

--- 260565861 ns (0.04%), 26 samples
  [ 0] inotify_handle_inode_event_[k]
  [ 1] fsnotify_handle_inode_event.isra.0_[k]
  [ 2] send_to_group_[k]
  [ 3] fsnotify_[k]
  [ 4] __fsnotify_parent_[k]
  [ 5] vfs_write_[k]
  [ 6] ksys_write_[k]
  [ 7] __x64_sys_write_[k]
  [ 8] do_syscall_64_[k]
  [ 9] entry_SYSCALL_64_after_hwframe_[k]
  [10] write
  [11] sun.nio.ch.FileDispatcherImpl.write0
  [12] sun.nio.ch.FileDispatcherImpl.write
  [13] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [14] sun.nio.ch.IOUtil.write
  [15] sun.nio.ch.IOUtil.write
  [16] sun.nio.ch.FileChannelImpl.write
  [17] java.nio.channels.Channels.writeFullyImpl
  [18] java.nio.channels.Channels.writeFully
  [19] java.nio.channels.Channels$1.write
  [20] java.io.InputStream.transferTo
  [21] java.nio.file.Files.copy
  [22] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [23] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [24] jdk.nio.zipfs.ZipPath.newFileChannel
  [25] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [26] java.nio.channels.FileChannel.open
  [27] java.nio.channels.FileChannel.open
  [28] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [29] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$63.0x0000000800d35a20.apply
  [30] cats.effect.IOFiber.$anonfun$8
  [31] cats.effect.IOFiber$$Lambda$758.0x0000000800ec4c40.apply
  [32] cats.effect.unsafe.WorkerThread.blockOn
  [33] scala.concurrent.package$.blocking
  [34] cats.effect.IOFiber.runLoop
  [35] cats.effect.IOFiber.execR
  [36] cats.effect.IOFiber.run
  [37] cats.effect.unsafe.WorkerThread.run

--- 260440053 ns (0.04%), 26 samples
  [ 0] cats.effect.tracing.RingBuffer.push
  [ 1] cats.effect.IOFiber.pushTracingEvent
  [ 2] cats.effect.IOFiber.runLoop
  [ 3] cats.effect.IOFiber.execR
  [ 4] cats.effect.IOFiber.run
  [ 5] cats.effect.unsafe.WorkerThread.run

--- 255410962 ns (0.03%), 25 samples
  [ 0] _raw_spin_unlock_irqrestore_[k]
  [ 1] hrtimer_start_range_ns_[k]
  [ 2] hrtimer_sleeper_start_expires_[k]
  [ 3] futex_wait_queue_[k]
  [ 4] futex_wait_[k]
  [ 5] do_futex_[k]
  [ 6] __x64_sys_futex_[k]
  [ 7] do_syscall_64_[k]
  [ 8] entry_SYSCALL_64_after_hwframe_[k]
  [ 9] __futex_abstimed_wait_cancelable64
  [10] [unknown]
  [11] jdk.internal.misc.Unsafe.park
  [12] java.util.concurrent.locks.LockSupport.parkNanos
  [13] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos
  [14] java.util.concurrent.ArrayBlockingQueue.poll
  [15] cats.effect.IOPlatform.$anonfun$1
  [16] cats.effect.IOPlatform$$Lambda$354.0x0000000800dfaba8.apply
  [17] scala.concurrent.BlockContext$DefaultBlockContext$.blockOn
  [18] scala.concurrent.package$.blocking
  [19] cats.effect.IOPlatform.unsafeRunTimed
  [20] cats.effect.IOPlatform.unsafeRunSync
  [21] com.scalamandra.ZipBench.streamFoldStrings
  [22] com.scalamandra.jmh_generated.ZipBench_streamFoldStrings_jmhTest.streamFoldStrings_thrpt_jmhStub
  [23] com.scalamandra.jmh_generated.ZipBench_streamFoldStrings_jmhTest.streamFoldStrings_Throughput
  [24] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [25] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [26] java.lang.reflect.Method.invoke
  [27] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [28] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [29] java.util.concurrent.FutureTask.run
  [30] java.util.concurrent.Executors$RunnableAdapter.call
  [31] java.util.concurrent.FutureTask.run
  [32] java.util.concurrent.ThreadPoolExecutor.runWorker
  [33] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [34] java.lang.Thread.run

--- 250577489 ns (0.03%), 25 samples
  [ 0] java.io.InputStream.transferTo
  [ 1] java.nio.file.Files.copy
  [ 2] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [ 3] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [ 4] jdk.nio.zipfs.ZipPath.newFileChannel
  [ 5] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [ 6] java.nio.channels.FileChannel.open
  [ 7] java.nio.channels.FileChannel.open
  [ 8] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [ 9] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$63.0x0000000800d35a20.apply
  [10] cats.effect.IOFiber.$anonfun$8
  [11] cats.effect.IOFiber$$Lambda$758.0x0000000800ec4c40.apply
  [12] cats.effect.unsafe.WorkerThread.blockOn
  [13] scala.concurrent.package$.blocking
  [14] cats.effect.IOFiber.runLoop
  [15] cats.effect.IOFiber.execR
  [16] cats.effect.IOFiber.run
  [17] cats.effect.unsafe.WorkerThread.run

--- 250521272 ns (0.03%), 25 samples
  [ 0] native_queued_spin_lock_slowpath.part.0_[k]
  [ 1] native_queued_spin_lock_slowpath_[k]
  [ 2] _raw_spin_lock_[k]
  [ 3] fsnotify_insert_event_[k]
  [ 4] inotify_handle_inode_event_[k]
  [ 5] fsnotify_handle_inode_event.isra.0_[k]
  [ 6] send_to_group_[k]
  [ 7] fsnotify_[k]
  [ 8] __fsnotify_parent_[k]
  [ 9] vfs_write_[k]
  [10] ksys_write_[k]
  [11] __x64_sys_write_[k]
  [12] do_syscall_64_[k]
  [13] entry_SYSCALL_64_after_hwframe_[k]
  [14] write
  [15] sun.nio.ch.FileDispatcherImpl.write0
  [16] sun.nio.ch.FileDispatcherImpl.write
  [17] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.IOUtil.write
  [20] sun.nio.ch.FileChannelImpl.write
  [21] java.nio.channels.Channels.writeFullyImpl
  [22] java.nio.channels.Channels.writeFully
  [23] java.nio.channels.Channels$1.write
  [24] java.io.InputStream.transferTo
  [25] java.nio.file.Files.copy
  [26] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [27] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [28] jdk.nio.zipfs.ZipPath.newFileChannel
  [29] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [30] java.nio.channels.FileChannel.open
  [31] java.nio.channels.FileChannel.open
  [32] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [33] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$63.0x0000000800d35a20.apply
  [34] cats.effect.IOFiber.$anonfun$8
  [35] cats.effect.IOFiber$$Lambda$758.0x0000000800ec4c40.apply
  [36] cats.effect.unsafe.WorkerThread.blockOn
  [37] scala.concurrent.package$.blocking
  [38] cats.effect.IOFiber.runLoop
  [39] cats.effect.IOFiber.execR
  [40] cats.effect.IOFiber.run
  [41] cats.effect.unsafe.WorkerThread.run

--- 240893670 ns (0.03%), 24 samples
  [ 0] itable stub
  [ 1] cats.effect.IOFiber.runLoop
  [ 2] cats.effect.IOFiber.execR
  [ 3] cats.effect.IOFiber.run
  [ 4] cats.effect.unsafe.WorkerThread.run

--- 240794034 ns (0.03%), 24 samples
  [ 0] java.lang.ClassValue$ClassValueMap.loadFromCache
  [ 1] java.lang.ClassValue$ClassValueMap.probeHomeLocation
  [ 2] java.lang.ClassValue.get
  [ 3] cats.effect.tracing.TracingPlatform.calculateTracingEvent
  [ 4] cats.effect.IO$.uncancelable
  [ 5] cats.effect.IO$.bracketFull
  [ 6] cats.effect.IO$$anon$2.bracketFull
  [ 7] cats.effect.IO$$anon$2.bracketFull
  [ 8] cats.effect.kernel.Resource.loop$1
  [ 9] cats.effect.kernel.Resource.fold
  [10] cats.effect.kernel.Resource.use
  [11] fs2.Compiler$Target.compile
  [12] fs2.Compiler$Target.compile$
  [13] fs2.Compiler$Target$ConcurrentTarget.compile
  [14] fs2.CompilerLowPriority1$$anon$2.apply
  [15] fs2.Stream$CompileOps.to$$anonfun$1
  [16] fs2.Stream$CompileOps$$Lambda$218.0x0000000800db6ba0.apply
  [17] cats.effect.IOFiber.next$2
  [18] cats.effect.IOFiber.runLoop
  [19] cats.effect.IOFiber.execR
  [20] cats.effect.IOFiber.run
  [21] cats.effect.unsafe.WorkerThread.run

--- 240722339 ns (0.03%), 24 samples
  [ 0] _raw_spin_unlock_irqrestore_[k]
  [ 1] try_to_wake_up_[k]
  [ 2] wake_up_q_[k]
  [ 3] rwsem_wake.isra.0_[k]
  [ 4] up_write_[k]
  [ 5] open_last_lookups_[k]
  [ 6] path_openat_[k]
  [ 7] do_filp_open_[k]
  [ 8] do_sys_openat2_[k]
  [ 9] __x64_sys_openat_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] __open64
  [13] [unknown]
  [14] sun.nio.fs.UnixNativeDispatcher.open0
  [15] sun.nio.fs.UnixNativeDispatcher.open
  [16] sun.nio.fs.UnixChannelFactory.open
  [17] sun.nio.fs.UnixChannelFactory.newFileChannel
  [18] sun.nio.fs.UnixChannelFactory.newFileChannel
  [19] sun.nio.fs.UnixFileSystemProvider.newByteChannel
  [20] java.nio.file.spi.FileSystemProvider.newOutputStream
  [21] java.nio.file.Files.newOutputStream
  [22] java.nio.file.Files.copy
  [23] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [24] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [25] jdk.nio.zipfs.ZipPath.newFileChannel
  [26] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [27] java.nio.channels.FileChannel.open
  [28] java.nio.channels.FileChannel.open
  [29] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [30] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$63.0x0000000800d35a20.apply
  [31] cats.effect.IOFiber.$anonfun$8
  [32] cats.effect.IOFiber$$Lambda$758.0x0000000800ec4c40.apply
  [33] cats.effect.unsafe.WorkerThread.blockOn
  [34] scala.concurrent.package$.blocking
  [35] cats.effect.IOFiber.runLoop
  [36] cats.effect.IOFiber.execR
  [37] cats.effect.IOFiber.run
  [38] cats.effect.unsafe.WorkerThread.run

--- 240600785 ns (0.03%), 24 samples
  [ 0] __fget_light_[k]
  [ 1] __fdget_pos_[k]
  [ 2] ksys_write_[k]
  [ 3] __x64_sys_write_[k]
  [ 4] do_syscall_64_[k]
  [ 5] entry_SYSCALL_64_after_hwframe_[k]
  [ 6] write
  [ 7] sun.nio.ch.FileDispatcherImpl.write0
  [ 8] sun.nio.ch.FileDispatcherImpl.write
  [ 9] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [10] sun.nio.ch.IOUtil.write
  [11] sun.nio.ch.IOUtil.write
  [12] sun.nio.ch.FileChannelImpl.write
  [13] java.nio.channels.Channels.writeFullyImpl
  [14] java.nio.channels.Channels.writeFully
  [15] java.nio.channels.Channels$1.write
  [16] java.io.InputStream.transferTo
  [17] java.nio.file.Files.copy
  [18] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [19] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [20] jdk.nio.zipfs.ZipPath.newFileChannel
  [21] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [22] java.nio.channels.FileChannel.open
  [23] java.nio.channels.FileChannel.open
  [24] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [25] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$63.0x0000000800d35a20.apply
  [26] cats.effect.IOFiber.$anonfun$8
  [27] cats.effect.IOFiber$$Lambda$758.0x0000000800ec4c40.apply
  [28] cats.effect.unsafe.WorkerThread.blockOn
  [29] scala.concurrent.package$.blocking
  [30] cats.effect.IOFiber.runLoop
  [31] cats.effect.IOFiber.execR
  [32] cats.effect.IOFiber.run
  [33] cats.effect.unsafe.WorkerThread.run

--- 240583662 ns (0.03%), 24 samples
  [ 0] zil_aitx_compare?[zfs]_[k]
  [ 1] zil_itx_assign?[zfs]_[k]
  [ 2] zfs_log_write?[zfs]_[k]
  [ 3] zfs_write?[zfs]_[k]
  [ 4] zpl_iter_write?[zfs]_[k]
  [ 5] new_sync_write_[k]
  [ 6] vfs_write_[k]
  [ 7] ksys_write_[k]
  [ 8] __x64_sys_write_[k]
  [ 9] do_syscall_64_[k]
  [10] entry_SYSCALL_64_after_hwframe_[k]
  [11] write
  [12] sun.nio.ch.FileDispatcherImpl.write0
  [13] sun.nio.ch.FileDispatcherImpl.write
  [14] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [15] sun.nio.ch.IOUtil.write
  [16] sun.nio.ch.IOUtil.write
  [17] sun.nio.ch.FileChannelImpl.write
  [18] java.nio.channels.Channels.writeFullyImpl
  [19] java.nio.channels.Channels.writeFully
  [20] java.nio.channels.Channels$1.write
  [21] java.io.InputStream.transferTo
  [22] java.nio.file.Files.copy
  [23] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [24] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [25] jdk.nio.zipfs.ZipPath.newFileChannel
  [26] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [27] java.nio.channels.FileChannel.open
  [28] java.nio.channels.FileChannel.open
  [29] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [30] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$63.0x0000000800d35a20.apply
  [31] cats.effect.IOFiber.$anonfun$8
  [32] cats.effect.IOFiber$$Lambda$758.0x0000000800ec4c40.apply
  [33] cats.effect.unsafe.WorkerThread.blockOn
  [34] scala.concurrent.package$.blocking
  [35] cats.effect.IOFiber.runLoop
  [36] cats.effect.IOFiber.execR
  [37] cats.effect.IOFiber.run
  [38] cats.effect.unsafe.WorkerThread.run

--- 240583270 ns (0.03%), 24 samples
  [ 0] refill_stock_[k]
  [ 1] obj_cgroup_uncharge_pages_[k]
  [ 2] refill_obj_stock_[k]
  [ 3] obj_cgroup_charge_[k]
  [ 4] __kmalloc_[k]
  [ 5] inotify_handle_inode_event_[k]
  [ 6] fsnotify_handle_inode_event.isra.0_[k]
  [ 7] send_to_group_[k]
  [ 8] fsnotify_[k]
  [ 9] __fsnotify_parent_[k]
  [10] vfs_write_[k]
  [11] ksys_write_[k]
  [12] __x64_sys_write_[k]
  [13] do_syscall_64_[k]
  [14] entry_SYSCALL_64_after_hwframe_[k]
  [15] write
  [16] sun.nio.ch.FileDispatcherImpl.write0
  [17] sun.nio.ch.FileDispatcherImpl.write
  [18] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [19] sun.nio.ch.IOUtil.write
  [20] sun.nio.ch.IOUtil.write
  [21] sun.nio.ch.FileChannelImpl.write
  [22] java.nio.channels.Channels.writeFullyImpl
  [23] java.nio.channels.Channels.writeFully
  [24] java.nio.channels.Channels$1.write
  [25] java.io.InputStream.transferTo
  [26] java.nio.file.Files.copy
  [27] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [28] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [29] jdk.nio.zipfs.ZipPath.newFileChannel
  [30] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [31] java.nio.channels.FileChannel.open
  [32] java.nio.channels.FileChannel.open
  [33] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [34] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$63.0x0000000800d35a20.apply
  [35] cats.effect.IOFiber.$anonfun$8
  [36] cats.effect.IOFiber$$Lambda$758.0x0000000800ec4c40.apply
  [37] cats.effect.unsafe.WorkerThread.blockOn
  [38] scala.concurrent.package$.blocking
  [39] cats.effect.IOFiber.runLoop
  [40] cats.effect.IOFiber.execR
  [41] cats.effect.IOFiber.run
  [42] cats.effect.unsafe.WorkerThread.run

--- 240512464 ns (0.03%), 24 samples
  [ 0] itable stub
  [ 1] cats.effect.IOFiber.succeeded
  [ 2] cats.effect.IOFiber.runLoop
  [ 3] cats.effect.IOFiber.execR
  [ 4] cats.effect.IOFiber.run
  [ 5] cats.effect.unsafe.WorkerThread.run

--- 240497984 ns (0.03%), 24 samples
  [ 0] fs2.Pull$.go$1$$anonfun$1
  [ 1] fs2.Pull$$$Lambda$833.0x0000000800ed7248.apply
  [ 2] fs2.Pull$.interruptGuard$1$$anonfun$1
  [ 3] fs2.Pull$$$Lambda$563.0x0000000800e4e7d0.apply
  [ 4] cats.effect.IOFiber.succeeded
  [ 5] cats.effect.IOFiber.runLoop
  [ 6] cats.effect.IOFiber.execR
  [ 7] cats.effect.IOFiber.run
  [ 8] cats.effect.unsafe.WorkerThread.run

--- 240408571 ns (0.03%), 24 samples
  [ 0] itable stub
  [ 1] cats.Monad.map$$anonfun$1
  [ 2] cats.Monad$$Lambda$431.0x0000000800e1b000.apply
  [ 3] cats.effect.IOFiber.succeeded
  [ 4] cats.effect.IOFiber.runLoop
  [ 5] cats.effect.IOFiber.execR
  [ 6] cats.effect.IOFiber.run
  [ 7] cats.effect.unsafe.WorkerThread.run

--- 232145178 ns (0.03%), 23 samples
  [ 0] HeapRegionManager::par_iterate(HeapRegionClosure*, HeapRegionClaimer*, unsigned int) const
  [ 1] G1PrepareEvacuationTask::work(unsigned int)
  [ 2] GangWorker::loop()
  [ 3] GangWorker::run()
  [ 4] Thread::call_run()
  [ 5] thread_native_entry(Thread*)
  [ 6] start_thread

--- 230653568 ns (0.03%), 23 samples
  [ 0] fsnotify_insert_event_[k]
  [ 1] inotify_handle_inode_event_[k]
  [ 2] fsnotify_handle_inode_event.isra.0_[k]
  [ 3] send_to_group_[k]
  [ 4] fsnotify_[k]
  [ 5] __fsnotify_parent_[k]
  [ 6] vfs_write_[k]
  [ 7] ksys_write_[k]
  [ 8] __x64_sys_write_[k]
  [ 9] do_syscall_64_[k]
  [10] entry_SYSCALL_64_after_hwframe_[k]
  [11] write
  [12] sun.nio.ch.FileDispatcherImpl.write0
  [13] sun.nio.ch.FileDispatcherImpl.write
  [14] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [15] sun.nio.ch.IOUtil.write
  [16] sun.nio.ch.IOUtil.write
  [17] sun.nio.ch.FileChannelImpl.write
  [18] java.nio.channels.Channels.writeFullyImpl
  [19] java.nio.channels.Channels.writeFully
  [20] java.nio.channels.Channels$1.write
  [21] java.io.InputStream.transferTo
  [22] java.nio.file.Files.copy
  [23] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [24] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [25] jdk.nio.zipfs.ZipPath.newFileChannel
  [26] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [27] java.nio.channels.FileChannel.open
  [28] java.nio.channels.FileChannel.open
  [29] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [30] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$63.0x0000000800d35a20.apply
  [31] cats.effect.IOFiber.$anonfun$8
  [32] cats.effect.IOFiber$$Lambda$758.0x0000000800ec4c40.apply
  [33] cats.effect.unsafe.WorkerThread.blockOn
  [34] scala.concurrent.package$.blocking
  [35] cats.effect.IOFiber.runLoop
  [36] cats.effect.IOFiber.execR
  [37] cats.effect.IOFiber.run
  [38] cats.effect.unsafe.WorkerThread.run

--- 230646821 ns (0.03%), 23 samples
  [ 0] _raw_spin_unlock_irqrestore_[k]
  [ 1] try_to_wake_up_[k]
  [ 2] wake_up_q_[k]
  [ 3] rwsem_wake.isra.0_[k]
  [ 4] up_write_[k]
  [ 5] do_unlinkat_[k]
  [ 6] __x64_sys_unlink_[k]
  [ 7] do_syscall_64_[k]
  [ 8] entry_SYSCALL_64_after_hwframe_[k]
  [ 9] __GI_unlink
  [10] sun.nio.fs.UnixNativeDispatcher.unlink0
  [11] sun.nio.fs.UnixNativeDispatcher.unlink
  [12] sun.nio.fs.UnixFileSystemProvider.implDelete
  [13] sun.nio.fs.AbstractFileSystemProvider.deleteIfExists
  [14] java.nio.file.Files.deleteIfExists
  [15] java.nio.file.Files.copy
  [16] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [17] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [18] jdk.nio.zipfs.ZipPath.newFileChannel
  [19] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [20] java.nio.channels.FileChannel.open
  [21] java.nio.channels.FileChannel.open
  [22] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [23] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$63.0x0000000800d35a20.apply
  [24] cats.effect.IOFiber.$anonfun$8
  [25] cats.effect.IOFiber$$Lambda$758.0x0000000800ec4c40.apply
  [26] cats.effect.unsafe.WorkerThread.blockOn
  [27] scala.concurrent.package$.blocking
  [28] cats.effect.IOFiber.runLoop
  [29] cats.effect.IOFiber.execR
  [30] cats.effect.IOFiber.run
  [31] cats.effect.unsafe.WorkerThread.run

--- 230613060 ns (0.03%), 23 samples
  [ 0] dmu_tx_try_assign?[zfs]_[k]
  [ 1] dmu_tx_assign?[zfs]_[k]
  [ 2] zfs_write?[zfs]_[k]
  [ 3] zpl_iter_write?[zfs]_[k]
  [ 4] new_sync_write_[k]
  [ 5] vfs_write_[k]
  [ 6] ksys_write_[k]
  [ 7] __x64_sys_write_[k]
  [ 8] do_syscall_64_[k]
  [ 9] entry_SYSCALL_64_after_hwframe_[k]
  [10] write
  [11] sun.nio.ch.FileDispatcherImpl.write0
  [12] sun.nio.ch.FileDispatcherImpl.write
  [13] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [14] sun.nio.ch.IOUtil.write
  [15] sun.nio.ch.IOUtil.write
  [16] sun.nio.ch.FileChannelImpl.write
  [17] java.nio.channels.Channels.writeFullyImpl
  [18] java.nio.channels.Channels.writeFully
  [19] java.nio.channels.Channels$1.write
  [20] java.io.InputStream.transferTo
  [21] java.nio.file.Files.copy
  [22] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [23] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [24] jdk.nio.zipfs.ZipPath.newFileChannel
  [25] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [26] java.nio.channels.FileChannel.open
  [27] java.nio.channels.FileChannel.open
  [28] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [29] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$63.0x0000000800d35a20.apply
  [30] cats.effect.IOFiber.$anonfun$8
  [31] cats.effect.IOFiber$$Lambda$758.0x0000000800ec4c40.apply
  [32] cats.effect.unsafe.WorkerThread.blockOn
  [33] scala.concurrent.package$.blocking
  [34] cats.effect.IOFiber.runLoop
  [35] cats.effect.IOFiber.execR
  [36] cats.effect.IOFiber.run
  [37] cats.effect.unsafe.WorkerThread.run

--- 230553005 ns (0.03%), 23 samples
  [ 0] cats.effect.IOFiber.runLoop
  [ 1] cats.effect.IOFiber.execR
  [ 2] cats.effect.IOFiber.run
  [ 3] cats.effect.unsafe.WorkerThread.run

--- 230527232 ns (0.03%), 23 samples
  [ 0] itable stub
  [ 1] cats.effect.IOFiber.runLoop
  [ 2] cats.effect.IOFiber.execR
  [ 3] cats.effect.IOFiber.run
  [ 4] cats.effect.unsafe.WorkerThread.run

--- 230510396 ns (0.03%), 23 samples
  [ 0] do_sched_yield_[k]
  [ 1] __x64_sys_sched_yield_[k]
  [ 2] do_syscall_64_[k]
  [ 3] entry_SYSCALL_64_after_hwframe_[k]
  [ 4] __GI___sched_yield
  [ 5] java.lang.Thread.yield
  [ 6] java.util.concurrent.LinkedTransferQueue.awaitMatch
  [ 7] java.util.concurrent.LinkedTransferQueue.xfer
  [ 8] java.util.concurrent.LinkedTransferQueue.poll
  [ 9] cats.effect.unsafe.WorkerThread.run

--- 230442841 ns (0.03%), 23 samples
  [ 0] fsnotify_[k]
  [ 1] open_last_lookups_[k]
  [ 2] path_openat_[k]
  [ 3] do_filp_open_[k]
  [ 4] do_sys_openat2_[k]
  [ 5] __x64_sys_openat_[k]
  [ 6] do_syscall_64_[k]
  [ 7] entry_SYSCALL_64_after_hwframe_[k]
  [ 8] __open64
  [ 9] [unknown]
  [10] sun.nio.fs.UnixNativeDispatcher.open0
  [11] sun.nio.fs.UnixNativeDispatcher.open
  [12] sun.nio.fs.UnixChannelFactory.open
  [13] sun.nio.fs.UnixChannelFactory.newFileChannel
  [14] sun.nio.fs.UnixChannelFactory.newFileChannel
  [15] sun.nio.fs.UnixFileSystemProvider.newByteChannel
  [16] java.nio.file.spi.FileSystemProvider.newOutputStream
  [17] java.nio.file.Files.newOutputStream
  [18] java.nio.file.Files.copy
  [19] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [20] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [21] jdk.nio.zipfs.ZipPath.newFileChannel
  [22] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [23] java.nio.channels.FileChannel.open
  [24] java.nio.channels.FileChannel.open
  [25] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [26] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$63.0x0000000800d35a20.apply
  [27] cats.effect.IOFiber.$anonfun$8
  [28] cats.effect.IOFiber$$Lambda$758.0x0000000800ec4c40.apply
  [29] cats.effect.unsafe.WorkerThread.blockOn
  [30] scala.concurrent.package$.blocking
  [31] cats.effect.IOFiber.runLoop
  [32] cats.effect.IOFiber.execR
  [33] cats.effect.IOFiber.run
  [34] cats.effect.unsafe.WorkerThread.run

--- 220637446 ns (0.03%), 22 samples
  [ 0] zio_create?[zfs]_[k]
  [ 1] zio_null?[zfs]_[k]
  [ 2] zio_root?[zfs]_[k]
  [ 3] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 4] dmu_read_uio_dnode?[zfs]_[k]
  [ 5] dmu_read_uio_dbuf?[zfs]_[k]
  [ 6] mappedread?[zfs]_[k]
  [ 7] zfs_read?[zfs]_[k]
  [ 8] zpl_iter_read?[zfs]_[k]
  [ 9] new_sync_read_[k]
  [10] vfs_read_[k]
  [11] __x64_sys_pread64_[k]
  [12] do_syscall_64_[k]
  [13] entry_SYSCALL_64_after_hwframe_[k]
  [14] __libc_pread64
  [15] sun.nio.ch.FileDispatcherImpl.pread0
  [16] sun.nio.ch.FileDispatcherImpl.pread
  [17] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [18] sun.nio.ch.IOUtil.read
  [19] sun.nio.ch.IOUtil.read
  [20] sun.nio.ch.FileChannelImpl.readInternal
  [21] sun.nio.ch.FileChannelImpl.read
  [22] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [23] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [24] jdk.nio.zipfs.ZipFileSystem$2.fill
  [25] java.util.zip.InflaterInputStream.read
  [26] java.io.InputStream.transferTo
  [27] java.nio.file.Files.copy
  [28] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [29] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [30] jdk.nio.zipfs.ZipPath.newFileChannel
  [31] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [32] java.nio.channels.FileChannel.open
  [33] java.nio.channels.FileChannel.open
  [34] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [35] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$63.0x0000000800d35a20.apply
  [36] cats.effect.IOFiber.$anonfun$8
  [37] cats.effect.IOFiber$$Lambda$758.0x0000000800ec4c40.apply
  [38] cats.effect.unsafe.WorkerThread.blockOn
  [39] scala.concurrent.package$.blocking
  [40] cats.effect.IOFiber.runLoop
  [41] cats.effect.IOFiber.execR
  [42] cats.effect.IOFiber.run
  [43] cats.effect.unsafe.WorkerThread.run

--- 220619041 ns (0.03%), 22 samples
  [ 0] memset_[k]
  [ 1] spl_kmem_cache_alloc?[spl]_[k]
  [ 2] zio_data_buf_alloc?[zfs]_[k]
  [ 3] zil_itx_create?[zfs]_[k]
  [ 4] zfs_log_write?[zfs]_[k]
  [ 5] zfs_write?[zfs]_[k]
  [ 6] zpl_iter_write?[zfs]_[k]
  [ 7] new_sync_write_[k]
  [ 8] vfs_write_[k]
  [ 9] ksys_write_[k]
  [10] __x64_sys_write_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] write
  [14] sun.nio.ch.FileDispatcherImpl.write0
  [15] sun.nio.ch.FileDispatcherImpl.write
  [16] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.FileChannelImpl.write
  [20] java.nio.channels.Channels.writeFullyImpl
  [21] java.nio.channels.Channels.writeFully
  [22] java.nio.channels.Channels$1.write
  [23] java.io.InputStream.transferTo
  [24] java.nio.file.Files.copy
  [25] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [26] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [27] jdk.nio.zipfs.ZipPath.newFileChannel
  [28] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [29] java.nio.channels.FileChannel.open
  [30] java.nio.channels.FileChannel.open
  [31] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [32] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$63.0x0000000800d35a20.apply
  [33] cats.effect.IOFiber.$anonfun$8
  [34] cats.effect.IOFiber$$Lambda$758.0x0000000800ec4c40.apply
  [35] cats.effect.unsafe.WorkerThread.blockOn
  [36] scala.concurrent.package$.blocking
  [37] cats.effect.IOFiber.runLoop
  [38] cats.effect.IOFiber.execR
  [39] cats.effect.IOFiber.run
  [40] cats.effect.unsafe.WorkerThread.run

--- 220592720 ns (0.03%), 22 samples
  [ 0] __GI___prctl
  [ 1] [unknown]
  [ 2] java.lang.Thread.setNativeName
  [ 3] java.lang.Thread.setName
  [ 4] cats.effect.unsafe.WorkerThread.init
  [ 5] cats.effect.unsafe.WorkerThread.run

--- 220578661 ns (0.03%), 22 samples
  [ 0] find_vmap_area_[k]
  [ 1] check_heap_object_[k]
  [ 2] __check_object_size.part.0_[k]
  [ 3] __check_object_size_[k]
  [ 4] zfs_uiomove_iter?[zfs]_[k]
  [ 5] zfs_uiomove?[zfs]_[k]
  [ 6] dmu_read_uio_dnode?[zfs]_[k]
  [ 7] dmu_read_uio_dbuf?[zfs]_[k]
  [ 8] mappedread?[zfs]_[k]
  [ 9] zfs_read?[zfs]_[k]
  [10] zpl_iter_read?[zfs]_[k]
  [11] new_sync_read_[k]
  [12] vfs_read_[k]
  [13] __x64_sys_pread64_[k]
  [14] do_syscall_64_[k]
  [15] entry_SYSCALL_64_after_hwframe_[k]
  [16] __libc_pread64
  [17] sun.nio.ch.FileDispatcherImpl.pread0
  [18] sun.nio.ch.FileDispatcherImpl.pread
  [19] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [20] sun.nio.ch.IOUtil.read
  [21] sun.nio.ch.IOUtil.read
  [22] sun.nio.ch.FileChannelImpl.readInternal
  [23] sun.nio.ch.FileChannelImpl.read
  [24] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [25] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [26] jdk.nio.zipfs.ZipFileSystem$Entry.readLocEXTT
  [27] jdk.nio.zipfs.ZipFileSystem$Entry.readExtra
  [28] jdk.nio.zipfs.ZipFileSystem$Entry.readCEN
  [29] jdk.nio.zipfs.ZipFileSystem$Entry.<init>
  [30] jdk.nio.zipfs.ZipFileSystem.getEntry
  [31] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [32] jdk.nio.zipfs.ZipPath.newFileChannel
  [33] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [34] java.nio.channels.FileChannel.open
  [35] java.nio.channels.FileChannel.open
  [36] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [37] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$63.0x0000000800d35a20.apply
  [38] cats.effect.IOFiber.$anonfun$8
  [39] cats.effect.IOFiber$$Lambda$758.0x0000000800ec4c40.apply
  [40] cats.effect.unsafe.WorkerThread.blockOn
  [41] scala.concurrent.package$.blocking
  [42] cats.effect.IOFiber.runLoop
  [43] cats.effect.IOFiber.execR
  [44] cats.effect.IOFiber.run
  [45] cats.effect.unsafe.WorkerThread.run

--- 220475722 ns (0.03%), 22 samples
  [ 0] jni_GetPrimitiveArrayCritical
  [ 1] java.util.zip.Inflater.inflateBytesBytes
  [ 2] java.util.zip.Inflater.inflate
  [ 3] java.util.zip.InflaterInputStream.read
  [ 4] java.io.InputStream.transferTo
  [ 5] java.nio.file.Files.copy
  [ 6] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [ 7] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [ 8] jdk.nio.zipfs.ZipPath.newFileChannel
  [ 9] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [10] java.nio.channels.FileChannel.open
  [11] java.nio.channels.FileChannel.open
  [12] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [13] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$63.0x0000000800d35a20.apply
  [14] cats.effect.IOFiber.$anonfun$8
  [15] cats.effect.IOFiber$$Lambda$758.0x0000000800ec4c40.apply
  [16] cats.effect.unsafe.WorkerThread.blockOn
  [17] scala.concurrent.package$.blocking
  [18] cats.effect.IOFiber.runLoop
  [19] cats.effect.IOFiber.execR
  [20] cats.effect.IOFiber.run
  [21] cats.effect.unsafe.WorkerThread.run

--- 220376885 ns (0.03%), 22 samples
  [ 0] rwsem_spin_on_owner_[k]
  [ 1] rwsem_optimistic_spin_[k]
  [ 2] rwsem_down_write_slowpath_[k]
  [ 3] down_write_[k]
  [ 4] open_last_lookups_[k]
  [ 5] path_openat_[k]
  [ 6] do_filp_open_[k]
  [ 7] do_sys_openat2_[k]
  [ 8] __x64_sys_openat_[k]
  [ 9] do_syscall_64_[k]
  [10] entry_SYSCALL_64_after_hwframe_[k]
  [11] __open64
  [12] [unknown]
  [13] sun.nio.fs.UnixNativeDispatcher.open0
  [14] sun.nio.fs.UnixNativeDispatcher.open
  [15] sun.nio.fs.UnixChannelFactory.open
  [16] sun.nio.fs.UnixChannelFactory.newFileChannel
  [17] sun.nio.fs.UnixChannelFactory.newFileChannel
  [18] sun.nio.fs.UnixFileSystemProvider.newByteChannel
  [19] java.nio.file.spi.FileSystemProvider.newOutputStream
  [20] java.nio.file.Files.newOutputStream
  [21] java.nio.file.Files.copy
  [22] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [23] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [24] jdk.nio.zipfs.ZipPath.newFileChannel
  [25] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [26] java.nio.channels.FileChannel.open
  [27] java.nio.channels.FileChannel.open
  [28] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [29] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$63.0x0000000800d35a20.apply
  [30] cats.effect.IOFiber.$anonfun$8
  [31] cats.effect.IOFiber$$Lambda$758.0x0000000800ec4c40.apply
  [32] cats.effect.unsafe.WorkerThread.blockOn
  [33] scala.concurrent.package$.blocking
  [34] cats.effect.IOFiber.runLoop
  [35] cats.effect.IOFiber.execR
  [36] cats.effect.IOFiber.run
  [37] cats.effect.unsafe.WorkerThread.run

--- 210566500 ns (0.03%), 21 samples
  [ 0] kmem_cache_free_[k]
  [ 1] spl_kmem_cache_free?[spl]_[k]
  [ 2] zio_data_buf_free?[zfs]_[k]
  [ 3] zil_itx_destroy?[zfs]_[k]
  [ 4] zil_remove_async?[zfs]_[k]
  [ 5] zfs_log_remove?[zfs]_[k]
  [ 6] zfs_remove?[zfs]_[k]
  [ 7] zpl_unlink?[zfs]_[k]
  [ 8] vfs_unlink_[k]
  [ 9] do_unlinkat_[k]
  [10] __x64_sys_unlink_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] __GI_unlink
  [14] sun.nio.fs.UnixNativeDispatcher.unlink0
  [15] sun.nio.fs.UnixNativeDispatcher.unlink
  [16] sun.nio.fs.UnixFileSystemProvider.implDelete
  [17] sun.nio.fs.AbstractFileSystemProvider.delete
  [18] java.nio.file.Files.delete
  [19] jdk.nio.zipfs.ZipFileSystem.removeTempPathForEntry
  [20] jdk.nio.zipfs.ZipFileSystem$1.implCloseChannel
  [21] java.nio.channels.spi.AbstractInterruptibleChannel.close
  [22] fs2.io.file.FilesCompanionPlatform.openFileChannel$$anonfun$1$$anonfun$1
  [23] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$openFileChannel$$anonfun$1$$anonfun$adapted$1
  [24] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$773.0x0000000800ec6ce0.apply
  [25] cats.effect.IOFiber.$anonfun$8
  [26] cats.effect.IOFiber$$Lambda$758.0x0000000800ec4c40.apply
  [27] cats.effect.unsafe.WorkerThread.blockOn
  [28] scala.concurrent.package$.blocking
  [29] cats.effect.IOFiber.runLoop
  [30] cats.effect.IOFiber.execR
  [31] cats.effect.IOFiber.run
  [32] cats.effect.unsafe.WorkerThread.run

--- 210506790 ns (0.03%), 21 samples
  [ 0] sun.nio.ch.FileDispatcherImpl.write0
  [ 1] sun.nio.ch.FileDispatcherImpl.write
  [ 2] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [ 3] sun.nio.ch.IOUtil.write
  [ 4] sun.nio.ch.IOUtil.write
  [ 5] sun.nio.ch.FileChannelImpl.write
  [ 6] java.nio.channels.Channels.writeFullyImpl
  [ 7] java.nio.channels.Channels.writeFully
  [ 8] java.nio.channels.Channels$1.write
  [ 9] java.io.InputStream.transferTo
  [10] java.nio.file.Files.copy
  [11] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [12] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [13] jdk.nio.zipfs.ZipPath.newFileChannel
  [14] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [15] java.nio.channels.FileChannel.open
  [16] java.nio.channels.FileChannel.open
  [17] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [18] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$63.0x0000000800d35a20.apply
  [19] cats.effect.IOFiber.$anonfun$8
  [20] cats.effect.IOFiber$$Lambda$758.0x0000000800ec4c40.apply
  [21] cats.effect.unsafe.WorkerThread.blockOn
  [22] scala.concurrent.package$.blocking
  [23] cats.effect.IOFiber.runLoop
  [24] cats.effect.IOFiber.execR
  [25] cats.effect.IOFiber.run
  [26] cats.effect.unsafe.WorkerThread.run

--- 210501695 ns (0.03%), 21 samples
  [ 0] jni_GetPrimitiveArrayCritical
  [ 1] Java_java_util_zip_Inflater_inflateBytesBytes
  [ 2] java.util.zip.Inflater.inflateBytesBytes
  [ 3] java.util.zip.Inflater.inflate
  [ 4] java.util.zip.InflaterInputStream.read
  [ 5] java.io.InputStream.transferTo
  [ 6] java.nio.file.Files.copy
  [ 7] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [ 8] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [ 9] jdk.nio.zipfs.ZipPath.newFileChannel
  [10] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [11] java.nio.channels.FileChannel.open
  [12] java.nio.channels.FileChannel.open
  [13] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [14] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$63.0x0000000800d35a20.apply
  [15] cats.effect.IOFiber.$anonfun$8
  [16] cats.effect.IOFiber$$Lambda$758.0x0000000800ec4c40.apply
  [17] cats.effect.unsafe.WorkerThread.blockOn
  [18] scala.concurrent.package$.blocking
  [19] cats.effect.IOFiber.runLoop
  [20] cats.effect.IOFiber.execR
  [21] cats.effect.IOFiber.run
  [22] cats.effect.unsafe.WorkerThread.run

--- 210490275 ns (0.03%), 21 samples
  [ 0] dsl_dir_tempreserve_impl.constprop.0?[zfs]_[k]
  [ 1] dsl_dir_tempreserve_space?[zfs]_[k]
  [ 2] dmu_tx_try_assign?[zfs]_[k]
  [ 3] dmu_tx_assign?[zfs]_[k]
  [ 4] zfs_write?[zfs]_[k]
  [ 5] zpl_iter_write?[zfs]_[k]
  [ 6] new_sync_write_[k]
  [ 7] vfs_write_[k]
  [ 8] ksys_write_[k]
  [ 9] __x64_sys_write_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] write
  [13] sun.nio.ch.FileDispatcherImpl.write0
  [14] sun.nio.ch.FileDispatcherImpl.write
  [15] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [16] sun.nio.ch.IOUtil.write
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.FileChannelImpl.write
  [19] java.nio.channels.Channels.writeFullyImpl
  [20] java.nio.channels.Channels.writeFully
  [21] java.nio.channels.Channels$1.write
  [22] java.io.InputStream.transferTo
  [23] java.nio.file.Files.copy
  [24] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [25] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [26] jdk.nio.zipfs.ZipPath.newFileChannel
  [27] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [28] java.nio.channels.FileChannel.open
  [29] java.nio.channels.FileChannel.open
  [30] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [31] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$63.0x0000000800d35a20.apply
  [32] cats.effect.IOFiber.$anonfun$8
  [33] cats.effect.IOFiber$$Lambda$758.0x0000000800ec4c40.apply
  [34] cats.effect.unsafe.WorkerThread.blockOn
  [35] scala.concurrent.package$.blocking
  [36] cats.effect.IOFiber.runLoop
  [37] cats.effect.IOFiber.execR
  [38] cats.effect.IOFiber.run
  [39] cats.effect.unsafe.WorkerThread.run

--- 210463271 ns (0.03%), 21 samples
  [ 0] refill_obj_stock_[k]
  [ 1] obj_cgroup_charge_[k]
  [ 2] __kmalloc_[k]
  [ 3] inotify_handle_inode_event_[k]
  [ 4] fsnotify_handle_inode_event.isra.0_[k]
  [ 5] send_to_group_[k]
  [ 6] fsnotify_[k]
  [ 7] open_last_lookups_[k]
  [ 8] path_openat_[k]
  [ 9] do_filp_open_[k]
  [10] do_sys_openat2_[k]
  [11] __x64_sys_openat_[k]
  [12] do_syscall_64_[k]
  [13] entry_SYSCALL_64_after_hwframe_[k]
  [14] __open64
  [15] [unknown]
  [16] sun.nio.fs.UnixNativeDispatcher.open0
  [17] sun.nio.fs.UnixNativeDispatcher.open
  [18] sun.nio.fs.UnixChannelFactory.open
  [19] sun.nio.fs.UnixChannelFactory.newFileChannel
  [20] sun.nio.fs.UnixChannelFactory.newFileChannel
  [21] sun.nio.fs.UnixFileSystemProvider.newByteChannel
  [22] java.nio.file.Files.newByteChannel
  [23] java.nio.file.Files.createFile
  [24] java.nio.file.TempFileHelper.create
  [25] java.nio.file.TempFileHelper.createTempFile
  [26] java.nio.file.Files.createTempFile
  [27] jdk.nio.zipfs.ZipFileSystem.createTempFileInSameDirectoryAs
  [28] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [29] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [30] jdk.nio.zipfs.ZipPath.newFileChannel
  [31] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [32] java.nio.channels.FileChannel.open
  [33] java.nio.channels.FileChannel.open
  [34] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [35] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$63.0x0000000800d35a20.apply
  [36] cats.effect.IOFiber.$anonfun$8
  [37] cats.effect.IOFiber$$Lambda$758.0x0000000800ec4c40.apply
  [38] cats.effect.unsafe.WorkerThread.blockOn
  [39] scala.concurrent.package$.blocking
  [40] cats.effect.IOFiber.runLoop
  [41] cats.effect.IOFiber.execR
  [42] cats.effect.IOFiber.run
  [43] cats.effect.unsafe.WorkerThread.run

--- 210412840 ns (0.03%), 21 samples
  [ 0] memset_[k]
  [ 1] getname_flags.part.0_[k]
  [ 2] getname_[k]
  [ 3] do_sys_openat2_[k]
  [ 4] __x64_sys_openat_[k]
  [ 5] do_syscall_64_[k]
  [ 6] entry_SYSCALL_64_after_hwframe_[k]
  [ 7] __open64
  [ 8] [unknown]
  [ 9] sun.nio.fs.UnixNativeDispatcher.open0
  [10] sun.nio.fs.UnixNativeDispatcher.open
  [11] sun.nio.fs.UnixChannelFactory.open
  [12] sun.nio.fs.UnixChannelFactory.newFileChannel
  [13] sun.nio.fs.UnixChannelFactory.newFileChannel
  [14] sun.nio.fs.UnixFileSystemProvider.newFileChannel
  [15] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [16] jdk.nio.zipfs.ZipPath.newFileChannel
  [17] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [18] java.nio.channels.FileChannel.open
  [19] java.nio.channels.FileChannel.open
  [20] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [21] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$63.0x0000000800d35a20.apply
  [22] cats.effect.IOFiber.$anonfun$8
  [23] cats.effect.IOFiber$$Lambda$758.0x0000000800ec4c40.apply
  [24] cats.effect.unsafe.WorkerThread.blockOn
  [25] scala.concurrent.package$.blocking
  [26] cats.effect.IOFiber.runLoop
  [27] cats.effect.IOFiber.execR
  [28] cats.effect.IOFiber.run
  [29] cats.effect.unsafe.WorkerThread.run

--- 210404557 ns (0.03%), 21 samples
  [ 0] cats.effect.ByteStack$.pop
  [ 1] cats.effect.IOFiber.succeeded
  [ 2] cats.effect.IOFiber.runLoop
  [ 3] cats.effect.IOFiber.execR
  [ 4] cats.effect.IOFiber.run
  [ 5] cats.effect.unsafe.WorkerThread.run

--- 210368011 ns (0.03%), 21 samples
  [ 0] itable stub
  [ 1] cats.effect.kernel.SyncRef.spin$4
  [ 2] cats.effect.kernel.SyncRef.modify$$anonfun$1
  [ 3] cats.effect.kernel.SyncRef$$Lambda$490.0x0000000800e34e98.apply
  [ 4] cats.effect.IOFiber.runLoop
  [ 5] cats.effect.IOFiber.execR
  [ 6] cats.effect.IOFiber.run
  [ 7] cats.effect.unsafe.WorkerThread.run

--- 204252133 ns (0.03%), 20 samples
  [ 0] cats.effect.unsafe.ThreadSafeHashtable.put
  [ 1] cats.effect.unsafe.StripedHashtable.put
  [ 2] cats.effect.IO.unsafeRunFiber
  [ 3] cats.effect.IO.unsafeRunAsync
  [ 4] cats.effect.IOPlatform.unsafeRunTimed
  [ 5] cats.effect.IOPlatform.unsafeRunSync
  [ 6] com.scalamandra.ZipBench.streamFoldStrings
  [ 7] com.scalamandra.jmh_generated.ZipBench_streamFoldStrings_jmhTest.streamFoldStrings_thrpt_jmhStub
  [ 8] com.scalamandra.jmh_generated.ZipBench_streamFoldStrings_jmhTest.streamFoldStrings_Throughput
  [ 9] jdk.internal.reflect.GeneratedMethodAccessor1.invoke
  [10] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [11] java.lang.reflect.Method.invoke
  [12] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [13] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [14] java.util.concurrent.FutureTask.run
  [15] java.util.concurrent.Executors$RunnableAdapter.call
  [16] java.util.concurrent.FutureTask.run
  [17] java.util.concurrent.ThreadPoolExecutor.runWorker
  [18] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [19] java.lang.Thread.run

--- 200553703 ns (0.03%), 20 samples
  [ 0] find_vmap_area_[k]
  [ 1] check_heap_object_[k]
  [ 2] __check_object_size.part.0_[k]
  [ 3] __check_object_size_[k]
  [ 4] zfs_uiomove_iter?[zfs]_[k]
  [ 5] zfs_uiomove?[zfs]_[k]
  [ 6] dmu_read_uio_dnode?[zfs]_[k]
  [ 7] dmu_read_uio_dbuf?[zfs]_[k]
  [ 8] mappedread?[zfs]_[k]
  [ 9] zfs_read?[zfs]_[k]
  [10] zpl_iter_read?[zfs]_[k]
  [11] new_sync_read_[k]
  [12] vfs_read_[k]
  [13] __x64_sys_pread64_[k]
  [14] do_syscall_64_[k]
  [15] entry_SYSCALL_64_after_hwframe_[k]
  [16] __libc_pread64
  [17] sun.nio.ch.FileDispatcherImpl.pread0
  [18] sun.nio.ch.FileDispatcherImpl.pread
  [19] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [20] sun.nio.ch.IOUtil.read
  [21] sun.nio.ch.IOUtil.read
  [22] sun.nio.ch.FileChannelImpl.readInternal
  [23] sun.nio.ch.FileChannelImpl.read
  [24] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [25] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [26] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.initDataPos
  [27] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [28] jdk.nio.zipfs.ZipFileSystem$2.fill
  [29] java.util.zip.InflaterInputStream.read
  [30] java.io.InputStream.transferTo
  [31] java.nio.file.Files.copy
  [32] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [33] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [34] jdk.nio.zipfs.ZipPath.newFileChannel
  [35] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [36] java.nio.channels.FileChannel.open
  [37] java.nio.channels.FileChannel.open
  [38] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [39] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$63.0x0000000800d35a20.apply
  [40] cats.effect.IOFiber.$anonfun$8
  [41] cats.effect.IOFiber$$Lambda$758.0x0000000800ec4c40.apply
  [42] cats.effect.unsafe.WorkerThread.blockOn
  [43] scala.concurrent.package$.blocking
  [44] cats.effect.IOFiber.runLoop
  [45] cats.effect.IOFiber.execR
  [46] cats.effect.IOFiber.run
  [47] cats.effect.unsafe.WorkerThread.run

--- 200534143 ns (0.03%), 20 samples
  [ 0] dmu_tx_hold_sa?[zfs]_[k]
  [ 1] zfs_write?[zfs]_[k]
  [ 2] zpl_iter_write?[zfs]_[k]
  [ 3] new_sync_write_[k]
  [ 4] vfs_write_[k]
  [ 5] ksys_write_[k]
  [ 6] __x64_sys_write_[k]
  [ 7] do_syscall_64_[k]
  [ 8] entry_SYSCALL_64_after_hwframe_[k]
  [ 9] write
  [10] sun.nio.ch.FileDispatcherImpl.write0
  [11] sun.nio.ch.FileDispatcherImpl.write
  [12] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [13] sun.nio.ch.IOUtil.write
  [14] sun.nio.ch.IOUtil.write
  [15] sun.nio.ch.FileChannelImpl.write
  [16] java.nio.channels.Channels.writeFullyImpl
  [17] java.nio.channels.Channels.writeFully
  [18] java.nio.channels.Channels$1.write
  [19] java.io.InputStream.transferTo
  [20] java.nio.file.Files.copy
  [21] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [22] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [23] jdk.nio.zipfs.ZipPath.newFileChannel
  [24] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [25] java.nio.channels.FileChannel.open
  [26] java.nio.channels.FileChannel.open
  [27] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [28] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$63.0x0000000800d35a20.apply
  [29] cats.effect.IOFiber.$anonfun$8
  [30] cats.effect.IOFiber$$Lambda$758.0x0000000800ec4c40.apply
  [31] cats.effect.unsafe.WorkerThread.blockOn
  [32] scala.concurrent.package$.blocking
  [33] cats.effect.IOFiber.runLoop
  [34] cats.effect.IOFiber.execR
  [35] cats.effect.IOFiber.run
  [36] cats.effect.unsafe.WorkerThread.run

--- 200531291 ns (0.03%), 20 samples
  [ 0] dsl_dir_phys?[zfs]_[k]
  [ 1] dsl_dir_tempreserve_space?[zfs]_[k]
  [ 2] dmu_tx_try_assign?[zfs]_[k]
  [ 3] dmu_tx_assign?[zfs]_[k]
  [ 4] zfs_write?[zfs]_[k]
  [ 5] zpl_iter_write?[zfs]_[k]
  [ 6] new_sync_write_[k]
  [ 7] vfs_write_[k]
  [ 8] ksys_write_[k]
  [ 9] __x64_sys_write_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] write
  [13] sun.nio.ch.FileDispatcherImpl.write0
  [14] sun.nio.ch.FileDispatcherImpl.write
  [15] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [16] sun.nio.ch.IOUtil.write
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.FileChannelImpl.write
  [19] java.nio.channels.Channels.writeFullyImpl
  [20] java.nio.channels.Channels.writeFully
  [21] java.nio.channels.Channels$1.write
  [22] java.io.InputStream.transferTo
  [23] java.nio.file.Files.copy
  [24] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [25] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [26] jdk.nio.zipfs.ZipPath.newFileChannel
  [27] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [28] java.nio.channels.FileChannel.open
  [29] java.nio.channels.FileChannel.open
  [30] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [31] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$63.0x0000000800d35a20.apply
  [32] cats.effect.IOFiber.$anonfun$8
  [33] cats.effect.IOFiber$$Lambda$758.0x0000000800ec4c40.apply
  [34] cats.effect.unsafe.WorkerThread.blockOn
  [35] scala.concurrent.package$.blocking
  [36] cats.effect.IOFiber.runLoop
  [37] cats.effect.IOFiber.execR
  [38] cats.effect.IOFiber.run
  [39] cats.effect.unsafe.WorkerThread.run

--- 200522922 ns (0.03%), 20 samples
  [ 0] memset_[k]
  [ 1] spl_kmem_cache_alloc?[spl]_[k]
  [ 2] zio_data_buf_alloc?[zfs]_[k]
  [ 3] arc_get_data_buf?[zfs]_[k]
  [ 4] arc_buf_alloc_impl?[zfs]_[k]
  [ 5] arc_alloc_buf?[zfs]_[k]
  [ 6] dbuf_alloc_arcbuf?[zfs]_[k]
  [ 7] dbuf_noread?[zfs]_[k]
  [ 8] dmu_buf_will_fill?[zfs]_[k]
  [ 9] dmu_write_uio_dnode?[zfs]_[k]
  [10] dmu_write_uio_dbuf?[zfs]_[k]
  [11] zfs_write?[zfs]_[k]
  [12] zpl_iter_write?[zfs]_[k]
  [13] new_sync_write_[k]
  [14] vfs_write_[k]
  [15] ksys_write_[k]
  [16] __x64_sys_write_[k]
  [17] do_syscall_64_[k]
  [18] entry_SYSCALL_64_after_hwframe_[k]
  [19] write
  [20] sun.nio.ch.FileDispatcherImpl.write0
  [21] sun.nio.ch.FileDispatcherImpl.write
  [22] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [23] sun.nio.ch.IOUtil.write
  [24] sun.nio.ch.IOUtil.write
  [25] sun.nio.ch.FileChannelImpl.write
  [26] java.nio.channels.Channels.writeFullyImpl
  [27] java.nio.channels.Channels.writeFully
  [28] java.nio.channels.Channels$1.write
  [29] java.io.InputStream.transferTo
  [30] java.nio.file.Files.copy
  [31] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [32] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [33] jdk.nio.zipfs.ZipPath.newFileChannel
  [34] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [35] java.nio.channels.FileChannel.open
  [36] java.nio.channels.FileChannel.open
  [37] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [38] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$63.0x0000000800d35a20.apply
  [39] cats.effect.IOFiber.$anonfun$8
  [40] cats.effect.IOFiber$$Lambda$758.0x0000000800ec4c40.apply
  [41] cats.effect.unsafe.WorkerThread.blockOn
  [42] scala.concurrent.package$.blocking
  [43] cats.effect.IOFiber.runLoop
  [44] cats.effect.IOFiber.execR
  [45] cats.effect.IOFiber.run
  [46] cats.effect.unsafe.WorkerThread.run

--- 200519997 ns (0.03%), 20 samples
  [ 0] cats.effect.IOFiber.succeeded
  [ 1] cats.effect.IOFiber.runLoop
  [ 2] cats.effect.IOFiber.execR
  [ 3] cats.effect.IOFiber.run
  [ 4] cats.effect.unsafe.WorkerThread.run

--- 200509737 ns (0.03%), 20 samples
  [ 0] _raw_spin_unlock_irqrestore_[k]
  [ 1] hrtimer_start_range_ns_[k]
  [ 2] hrtimer_sleeper_start_expires_[k]
  [ 3] futex_wait_queue_[k]
  [ 4] futex_wait_[k]
  [ 5] do_futex_[k]
  [ 6] __x64_sys_futex_[k]
  [ 7] do_syscall_64_[k]
  [ 8] entry_SYSCALL_64_after_hwframe_[k]
  [ 9] __futex_abstimed_wait_cancelable64
  [10] [unknown]
  [11] jdk.internal.misc.Unsafe.park
  [12] java.util.concurrent.locks.LockSupport.parkNanos
  [13] java.util.concurrent.LinkedTransferQueue.awaitMatch
  [14] java.util.concurrent.LinkedTransferQueue.xfer
  [15] java.util.concurrent.LinkedTransferQueue.poll
  [16] cats.effect.unsafe.WorkerThread.run

          ns  percent  samples  top
  ----------  -------  -------  ---
124888804343   17.01%    12466  /usr/lib/x86_64-linux-gnu/libz.so.1.2.11
 52750198374    7.18%     5264  rwsem_spin_on_owner_[k]
 30501303445    4.15%     3041  _raw_spin_unlock_irqrestore_[k]
 29016009605    3.95%     2896  osq_lock_[k]
 14960380452    2.04%     1493  __memset_avx2_unaligned_erms
 12041908415    1.64%     1201  mutex_lock_[k]
 10858237572    1.48%     1083  memset_[k]
 10156326514    1.38%     1013  memmove_[k]
  9129302058    1.24%      911  inflate
  8722554735    1.19%      870  _raw_spin_lock_[k]
  7769759129    1.06%      775  mutex_unlock_[k]
  7039612572    0.96%      702  __kmalloc_node_[k]
  6918644092    0.94%      690  copy_user_generic_string_[k]
  5886142390    0.80%      587  find_vmap_area_[k]
  5665091969    0.77%      565  kfree_[k]
  4913167910    0.67%      489  kmem_cache_alloc_[k]
  4853212057    0.66%      484  percpu_counter_add_batch_[k]
  4759411344    0.65%      475  java.util.Arrays.copyOfRange
  4700680863    0.64%      469  itable stub
  4219880694    0.57%      421  refill_stock_[k]
  4150254788    0.57%      414  cats.effect.IOFiber.runLoop
  3807210655    0.52%      380  java.lang.System.arraycopy
  3748759619    0.51%      374  fsnotify_[k]
  3237467042    0.44%      323  refill_obj_stock_[k]
  3218994325    0.44%      321  down_read_[k]
  3138236608    0.43%      313  zrl_add_impl?[zfs]_[k]
  3126769350    0.43%      312  cats.effect.IOFiber.succeeded
  3097377757    0.42%      309  memcg_slab_post_alloc_hook_[k]
  3055418985    0.42%      305  jbyte_disjoint_arraycopy
  3018610128    0.41%      301  kmem_cache_free_[k]
  2747417085    0.37%      274  dbuf_find?[zfs]_[k]
  2694193255    0.37%      268  java.lang.ClassValue$ClassValueMap.loadFromCache
  2586885740    0.35%      258  _raw_spin_unlock_[k]
  2366309046    0.32%      236  spl_kmem_cache_alloc?[spl]_[k]
  2164907676    0.29%      216  cats.effect.tracing.RingBuffer.push
  2164307974    0.29%      216  jlong_disjoint_arraycopy
  2154993583    0.29%      215  send_to_group_[k]
  2154653055    0.29%      215  __memmove_avx_unaligned_erms
  2065724185    0.28%      206  sa_attr_op?[zfs]_[k]
  2064839006    0.28%      206  page_counter_try_charge_[k]
  2064624414    0.28%      206  __rcu_read_lock_[k]
  2045483723    0.28%      204  dbuf_read?[zfs]_[k]
  2026349562    0.28%      202  syscall_enter_from_user_mode_[k]
  2019222042    0.28%      201  cats.effect.tracing.TracingPlatform.calculateTracingEvent
  1914829786    0.26%      191  __cond_resched_[k]
  1845034413    0.25%      184  arc_buf_access?[zfs]_[k]
  1835002527    0.25%      183  dbuf_rele_and_unlock?[zfs]_[k]
  1834757064    0.25%      183  dnode_hold_impl?[zfs]_[k]
  1814993489    0.25%      181  spl_mutex_clear_owner?[zfs]_[k]
  1773556905    0.24%      177  java.util.Arrays.copyOf
  1755854457    0.24%      175  java.util.concurrent.ConcurrentLinkedQueue.poll
  1754727490    0.24%      175  spl_mutex_set_owner?[zfs]_[k]
  1748534540    0.24%      174  java.lang.ref.Reference.get
  1714039765    0.23%      171  inotify_handle_inode_event_[k]
  1704630550    0.23%      170  up_read_[k]
  1688877148    0.23%      168  java.lang.ClassValue.getCacheCarefully
  1654072100    0.23%      165  __get_obj_cgroup_from_memcg_[k]
  1623975067    0.22%      162  dsl_dir_tempreserve_impl.constprop.0?[zfs]_[k]
  1594599286    0.22%      159  u8_textprep_str?[zunicode]_[k]
  1586891784    0.22%      158  zap_hash?[zfs]_[k]
  1573818511    0.21%      157  dbuf_hold_impl?[zfs]_[k]
  1523019292    0.21%      152  java.nio.HeapByteBuffer.<init>
  1514092486    0.21%      151  kmalloc_slab_[k]
  1513639206    0.21%      151  try_charge_memcg_[k]
  1433409017    0.20%      143  mod_memcg_state_[k]
  1385443780    0.19%      138  java.lang.ClassValue$ClassValueMap.getCache
  1363623940    0.19%      136  strlen_[k]
  1343582987    0.18%      134  cityhash4?[zcommon]_[k]
  1312969524    0.18%      131  __kmalloc_[k]
  1292813362    0.18%      129  __rcu_read_unlock_[k]
  1272004007    0.17%      127  java.lang.StringCoding.hasNegatives
  1263219036    0.17%      126  zrl_remove?[zfs]_[k]
  1233540260    0.17%      123  memcg_slab_free_hook_[k]
  1222381062    0.17%      122  fs2.Pull$.fs2$Pull$$$_$viewL$1
  1213099684    0.17%      121  RW_WRITE_HELD?[zfs]_[k]
  1203148983    0.16%      120  __cv_broadcast?[spl]_[k]
  1183096726    0.16%      118  list_head?[zfs]_[k]
  1145643690    0.16%      114  __schedule_[k]
  1142984127    0.16%      114  zil_aitx_compare?[zfs]_[k]
  1132840949    0.15%      113  ___slab_alloc_[k]
  1092837985    0.15%      109  dmu_tx_try_assign?[zfs]_[k]
  1082878345    0.15%      108  zfs_write?[zfs]_[k]
  1062863525    0.14%      106  __list_add?[zfs]_[k]
  1022748322    0.14%      102  __list_del_entry?[zfs]_[k]
  1022598662    0.14%      102  is_vmalloc_addr_[k]
  1012733656    0.14%      101  arch_atomic64_sub_return.constprop.0?[zfs]_[k]
  1002862852    0.14%      100  kmem_flags_convert?[spl]_[k]
  1002052083    0.14%      100  scala.reflect.ManifestFactory$ByteManifest.newArray
   992907496    0.14%       99  spl_kmem_cache_free?[spl]_[k]
   992574123    0.14%       99  strcpy_[k]
   982439446    0.13%       97  dsl_dir_phys?[zfs]_[k]
   972933341    0.13%       97  cats.effect.unsafe.WorkerThread.run
   972318396    0.13%       97  __d_lookup_[k]
   962565222    0.13%       96  should_failslab_[k]
   962429982    0.13%       96  dmu_buf_hold_array_by_dnode?[zfs]_[k]
   962036902    0.13%       96  java.util.zip.InflaterInputStream.<init>
   960176921    0.13%       95  jdk.internal.misc.Unsafe.allocateInstance
   942588781    0.13%       94  avl_find?[zavl]_[k]
   911999959    0.12%       91  native_queued_spin_lock_slowpath.part.0_[k]
   902478778    0.12%       90  spl_kmem_alloc_impl?[spl]_[k]
   898127146    0.12%       89  __tls_get_addr
   892149359    0.12%       89  __fget_light_[k]
   862376394    0.12%       86  __x86_return_thunk_[k]
   852263139    0.12%       85  arch_atomic64_read?[zfs]_[k]
   852088321    0.12%       85  apparmor_file_permission_[k]
   832296640    0.11%       83  zio_create?[zfs]_[k]
   831828498    0.11%       83  __libc_pread64
   821954181    0.11%       82  obj_cgroup_charge_[k]
   821709841    0.11%       82  link_path_walk.part.0.constprop.0_[k]
   812037731    0.11%       81  __fsnotify_parent_[k]
   792319876    0.11%       79  dbuf_read_verify_dnode_crypt?[zfs]_[k]
   792238317    0.11%       79  zio_wait?[zfs]_[k]
   791632876    0.11%       79  jni_GetPrimitiveArrayCritical
   782440692    0.11%       78  zap_lockdir_impl?[zfs]_[k]
   761902513    0.10%       76  list_del?[zfs]_[k]
   751912445    0.10%       75  rw_owner?[zfs]_[k]
   731900881    0.10%       73  dbuf_find_dirty_lte?[zfs]_[k]
   731848911    0.10%       73  fsnotify_insert_event_[k]
   712097434    0.10%       71  wmsum_add?[zfs]_[k]
   712053128    0.10%       71  aggsum_add?[zfs]_[k]
   711272938    0.10%       71  rwsem_optimistic_spin_[k]
   701717140    0.10%       70  dsl_dir_tempreserve_clear?[zfs]_[k]
   701330534    0.10%       70  cats.effect.ByteStack$.pop
   692701187    0.09%       69  futex_wake_[k]
   691637234    0.09%       69  vfs_write_[k]
   691565959    0.09%       69  get_obj_cgroup_from_current_[k]
   682133158    0.09%       68  list_empty?[zfs]_[k]
   681773675    0.09%       68  list_insert_tail?[zfs]_[k]
   661879821    0.09%       66  zap_leaf_array_read?[zfs]_[k]
   661861683    0.09%       66  zio_done?[zfs]_[k]
   661611643    0.09%       66  inotify_merge_[k]
   661472982    0.09%       66  zpl_revalidate?[zfs]_[k]
   651815070    0.09%       65  __vfprintf_internal
   641803485    0.09%       64  spl_fstrans_check?[spl]_[k]
   631690093    0.09%       63  zfs_acl_next_ace?[zfs]_[k]
   631222986    0.09%       63  fs2.Pull$.go$1$$anonfun$1
   611623245    0.08%       61  list_is_empty?[zfs]_[k]
   611603913    0.08%       61  multilist_link_active?[zfs]_[k]
   611365624    0.08%       61  fs2.Pull$.fs2$Pull$$$_$go$1
   604722515    0.08%       60  MemAllocator::allocate() const
   591607339    0.08%       59  strncpy_from_user_[k]
   591579437    0.08%       59  dmu_object_size_from_db?[zfs]_[k]
   591482287    0.08%       59  zfs_log_write?[zfs]_[k]
   591197326    0.08%       59  write
   561812709    0.08%       56  __x86_indirect_thunk_rax_[k]
   561465847    0.08%       56  __dmu_object_info_from_dnode?[zfs]_[k]
   561356588    0.08%       56  __lookup_mnt_[k]
   551316616    0.08%       55  vfs_read_[k]
   551182842    0.08%       55  inode_permission_[k]
   541489804    0.07%       54  ktime_get_raw_ts64_[k]
   531561962    0.07%       53  dmu_tx_hold_dnode_impl?[zfs]_[k]
   531500030    0.07%       53  zap_leaf_lookup?[zfs]_[k]
   531157716    0.07%       53  java.io.InputStream.transferTo
   521522766    0.07%       52  arc_tempreserve_space?[zfs]_[k]
   521411725    0.07%       52  dmu_tx_commit?[zfs]_[k]
   521363041    0.07%       52  __list_del?[zfs]_[k]
   521337461    0.07%       52  read_tsc_[k]
   521211532    0.07%       52  cats.Monad$$Lambda$431.0x0000000800e1b000.apply
   514267150    0.07%       51  Unsafe_Park
   511331420    0.07%       51  zfs_mknode?[zfs]_[k]
   511064884    0.07%       51  cats.effect.ArrayStack.pop
   501195965    0.07%       50  generic_permission_[k]
   493139394    0.07%       49  futex_q_lock_[k]
   491313209    0.07%       49  dnode_set_blksz?[zfs]_[k]
   491286541    0.07%       49  zfs_read?[zfs]_[k]
   491209179    0.07%       49  zfs_dirent_lock?[zfs]_[k]
   491172344    0.07%       49  consume_obj_stock_[k]
   490827672    0.07%       49  fs2.Pull$.fs2$Pull$$$_$getCont$1
   481264004    0.07%       48  dmu_tx_hold_sa?[zfs]_[k]
   481193912    0.07%       48  zfs_rangelock_exit?[zfs]_[k]
   481048230    0.07%       48  java.lang.invoke.MethodHandle.invokeBasic
   471265898    0.06%       47  spl_kmem_free?[spl]_[k]
   471236016    0.06%       47  avl_remove?[zavl]_[k]
   471203434    0.06%       47  dmu_buf_will_dirty_impl?[zfs]_[k]
   471194540    0.06%       47  dbuf_dirty?[zfs]_[k]
   471057616    0.06%       47  lockref_get_not_zero_[k]
   471031345    0.06%       47  propagate_protected_usage_[k]
   461170884    0.06%       46  rrm_exit?[zfs]_[k]
   461002461    0.06%       46  sun.nio.ch.NativeThreadSet.add
   451110588    0.06%       45  txg_list_add?[zfs]_[k]
   451042305    0.06%       45  cats.effect.ByteStack$.push
   450957996    0.06%       45  dput_[k]
   450955478    0.06%       45  lockref_put_return_[k]
   442944248    0.06%       44  java.lang.ThreadLocal$ThreadLocalMap.getEntry
   442833680    0.06%       44  jdk.internal.misc.Unsafe.compareAndSetReference
   441097116    0.06%       44  down_write_[k]
   441097037    0.06%       44  __srcu_read_lock_[k]
   441074984    0.06%       44  __virt_addr_valid_[k]
   431204403    0.06%       43  zio_wait_for_children?[zfs]_[k]
   430970218    0.06%       43  cats.effect.ArrayStack.push
   421509849    0.06%       42  ObjArrayAllocator::initialize(HeapWordImpl**) const
   421194170    0.06%       42  list_create.constprop.0?[zfs]_[k]
   421044656    0.06%       42  put_cred?[spl]_[k]
   421043403    0.06%       42  dnode_hash?[zfs]_[k]
   420995255    0.06%       42  dnode_rele_and_unlock?[zfs]_[k]
   420990614    0.06%       42  metaslab_class_get_dspace?[zfs]_[k]
   420931103    0.06%       42  mod_objcg_state_[k]
   420784914    0.06%       42  G1CollectedHeap::mem_allocate(unsigned long, bool*)
   412069436    0.06%       41  futex_wake_mark_[k]
   411138550    0.06%       41  mze_compare?[zfs]_[k]
Async profiler results:
  profile/com.scalamandra.ZipBench.streamFoldStrings-Throughput-fileName-under64kb.txt/summary-cpu.txt


# JMH version: 1.32
# VM version: JDK 17.0.6, Java HotSpot(TM) 64-Bit Server VM, 17.0.6+9-LTS-jvmci-22.3-b11
# VM invoker: /home/rajven/graal/java17/bin/java
# VM options: -XX:ThreadPriorityPolicy=1 -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCIProduct -XX:JVMCIThreadsPerNativeLibraryRuntime=1 -XX:-UnlockExperimentalVMOptions
# Blackhole mode: full + dont-inline hint
# Warmup: 20 iterations, 10 s each
# Measurement: 20 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.scalamandra.ZipBench.streamFoldStrings
# Parameters: (fileName = over64kb.txt)

# Run progress: 90,00% complete, ETA 00:06:44
# Fork: 1 of 1
# Preparing profilers: AsyncProfiler 
Java HotSpot(TM) 64-Bit Server VM warning: -XX:ThreadPriorityPolicy=1 may require system level permission, e.g., being the root user. If the necessary permission is not possessed, changes to priority will be silently ignored.
# Warmup Iteration   1: 48,418 ops/s
# Warmup Iteration   2: 56,656 ops/s
# Warmup Iteration   3: 60,697 ops/s
# Warmup Iteration   4: 57,666 ops/s
# Warmup Iteration   5: 59,124 ops/s
# Warmup Iteration   6: 59,990 ops/s
# Warmup Iteration   7: 60,325 ops/s
# Warmup Iteration   8: 59,822 ops/s
# Warmup Iteration   9: 59,233 ops/s
# Warmup Iteration  10: 60,830 ops/s
# Warmup Iteration  11: 59,830 ops/s
# Warmup Iteration  12: 58,442 ops/s
# Warmup Iteration  13: 61,858 ops/s
# Warmup Iteration  14: 59,959 ops/s
# Warmup Iteration  15: 60,780 ops/s
# Warmup Iteration  16: 60,251 ops/s
# Warmup Iteration  17: 60,749 ops/s
# Warmup Iteration  18: 60,872 ops/s
# Warmup Iteration  19: 60,154 ops/s
# Warmup Iteration  20: 60,522 ops/s
Iteration   1: 58,439 ops/s
Iteration   2: 59,645 ops/s
Iteration   3: 60,631 ops/s
Iteration   4: 62,119 ops/s
Iteration   5: 61,436 ops/s
Iteration   6: 57,697 ops/s
Iteration   7: 61,643 ops/s
Iteration   8: 61,696 ops/s
Iteration   9: 61,038 ops/s
Iteration  10: 61,269 ops/s
Iteration  11: 61,403 ops/s
Iteration  12: 59,747 ops/s
Iteration  13: 62,159 ops/s
Iteration  14: 61,844 ops/s
Iteration  15: 60,068 ops/s
Iteration  16: 60,562 ops/s
Iteration  17: 62,106 ops/s
Iteration  18: 61,020 ops/s
Iteration  19: 58,690 ops/s
Iteration  20: [WARN] Unknown argument: summary
60,761 ops/s
                 ·async: (text only)

# Processing profiler results: AsyncProfiler 


Result "com.scalamandra.ZipBench.streamFoldStrings":
  60,699 ±(99.9%) 1,118 ops/s [Average]
  (min, avg, max) = (57,697, 60,699, 62,159), stdev = 1,288
  CI (99.9%): [59,580, 61,817] (assumes normal distribution)

Secondary result "com.scalamandra.ZipBench.streamFoldStrings:·async":
--- Execution profile ---
Total samples       : 103835
GC_active           : 74 (0.07%)
unknown_Java        : 168 (0.16%)

--- 132255223527 ns (12.70%), 13191 samples
  [ 0] /usr/lib/x86_64-linux-gnu/libz.so.1.2.11
  [ 1] [unknown]
  [ 2] java.util.zip.Inflater.inflateBytesBytes
  [ 3] java.util.zip.Inflater.inflate
  [ 4] java.util.zip.InflaterInputStream.read
  [ 5] java.io.InputStream.transferTo
  [ 6] java.nio.file.Files.copy
  [ 7] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [ 8] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [ 9] jdk.nio.zipfs.ZipPath.newFileChannel
  [10] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [11] java.nio.channels.FileChannel.open
  [12] java.nio.channels.FileChannel.open
  [13] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [14] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$65.0x0000000800d354a0.apply
  [15] cats.effect.IOFiber.$anonfun$8
  [16] cats.effect.IOFiber$$Lambda$668.0x0000000800ea8d20.apply
  [17] cats.effect.unsafe.WorkerThread.blockOn
  [18] scala.concurrent.package$.blocking
  [19] cats.effect.IOFiber.runLoop
  [20] cats.effect.IOFiber.execR
  [21] cats.effect.IOFiber.run
  [22] cats.effect.unsafe.WorkerThread.run

--- 100494730438 ns (9.65%), 10020 samples
  [ 0] /usr/lib/x86_64-linux-gnu/libz.so.1.2.11
  [ 1] java.util.zip.Inflater.inflateBytesBytes
  [ 2] java.util.zip.Inflater.inflate
  [ 3] java.util.zip.InflaterInputStream.read
  [ 4] java.io.InputStream.transferTo
  [ 5] java.nio.file.Files.copy
  [ 6] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [ 7] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [ 8] jdk.nio.zipfs.ZipPath.newFileChannel
  [ 9] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [10] java.nio.channels.FileChannel.open
  [11] java.nio.channels.FileChannel.open
  [12] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [13] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$65.0x0000000800d354a0.apply
  [14] cats.effect.IOFiber.$anonfun$8
  [15] cats.effect.IOFiber$$Lambda$668.0x0000000800ea8d20.apply
  [16] cats.effect.unsafe.WorkerThread.blockOn
  [17] scala.concurrent.package$.blocking
  [18] cats.effect.IOFiber.runLoop
  [19] cats.effect.IOFiber.execR
  [20] cats.effect.IOFiber.run
  [21] cats.effect.unsafe.WorkerThread.run

--- 42715618101 ns (4.10%), 4260 samples
  [ 0] /usr/lib/x86_64-linux-gnu/libz.so.1.2.11
  [ 1] [unknown]
  [ 2] java.util.zip.Inflater.inflateBytesBytes
  [ 3] java.util.zip.Inflater.inflate
  [ 4] java.util.zip.InflaterInputStream.read
  [ 5] java.io.InputStream.transferTo
  [ 6] java.nio.file.Files.copy
  [ 7] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [ 8] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [ 9] jdk.nio.zipfs.ZipPath.newFileChannel
  [10] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [11] java.nio.channels.FileChannel.open
  [12] java.nio.channels.FileChannel.open
  [13] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [14] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$65.0x0000000800d354a0.apply
  [15] cats.effect.IOFiber.$anonfun$8
  [16] cats.effect.IOFiber$$Lambda$668.0x0000000800ea8d20.apply
  [17] cats.effect.unsafe.WorkerThread.blockOn
  [18] scala.concurrent.package$.blocking
  [19] cats.effect.IOFiber.runLoop
  [20] cats.effect.IOFiber.execR
  [21] cats.effect.IOFiber.run
  [22] cats.effect.unsafe.WorkerThread.run

--- 32714010537 ns (3.14%), 3262 samples
  [ 0] /usr/lib/x86_64-linux-gnu/libz.so.1.2.11
  [ 1] java.util.zip.Inflater.inflateBytesBytes
  [ 2] java.util.zip.Inflater.inflate
  [ 3] java.util.zip.InflaterInputStream.read
  [ 4] java.io.InputStream.transferTo
  [ 5] java.nio.file.Files.copy
  [ 6] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [ 7] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [ 8] jdk.nio.zipfs.ZipPath.newFileChannel
  [ 9] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [10] java.nio.channels.FileChannel.open
  [11] java.nio.channels.FileChannel.open
  [12] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [13] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$65.0x0000000800d354a0.apply
  [14] cats.effect.IOFiber.$anonfun$8
  [15] cats.effect.IOFiber$$Lambda$668.0x0000000800ea8d20.apply
  [16] cats.effect.unsafe.WorkerThread.blockOn
  [17] scala.concurrent.package$.blocking
  [18] cats.effect.IOFiber.runLoop
  [19] cats.effect.IOFiber.execR
  [20] cats.effect.IOFiber.run
  [21] cats.effect.unsafe.WorkerThread.run

--- 29154905331 ns (2.80%), 2905 samples
  [ 0] _raw_spin_unlock_irqrestore_[k]
  [ 1] __wake_up_common_lock_[k]
  [ 2] __wake_up_[k]
  [ 3] fsnotify_insert_event_[k]
  [ 4] inotify_handle_inode_event_[k]
  [ 5] fsnotify_handle_inode_event.isra.0_[k]
  [ 6] send_to_group_[k]
  [ 7] fsnotify_[k]
  [ 8] __fsnotify_parent_[k]
  [ 9] vfs_write_[k]
  [10] ksys_write_[k]
  [11] __x64_sys_write_[k]
  [12] do_syscall_64_[k]
  [13] entry_SYSCALL_64_after_hwframe_[k]
  [14] write
  [15] sun.nio.ch.FileDispatcherImpl.write0
  [16] sun.nio.ch.FileDispatcherImpl.write
  [17] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.IOUtil.write
  [20] sun.nio.ch.FileChannelImpl.write
  [21] java.nio.channels.Channels.writeFullyImpl
  [22] java.nio.channels.Channels.writeFully
  [23] java.nio.channels.Channels$1.write
  [24] java.io.InputStream.transferTo
  [25] java.nio.file.Files.copy
  [26] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [27] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [28] jdk.nio.zipfs.ZipPath.newFileChannel
  [29] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [30] java.nio.channels.FileChannel.open
  [31] java.nio.channels.FileChannel.open
  [32] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [33] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$65.0x0000000800d354a0.apply
  [34] cats.effect.IOFiber.$anonfun$8
  [35] cats.effect.IOFiber$$Lambda$668.0x0000000800ea8d20.apply
  [36] cats.effect.unsafe.WorkerThread.blockOn
  [37] scala.concurrent.package$.blocking
  [38] cats.effect.IOFiber.runLoop
  [39] cats.effect.IOFiber.execR
  [40] cats.effect.IOFiber.run
  [41] cats.effect.unsafe.WorkerThread.run

--- 26451235394 ns (2.54%), 2639 samples
  [ 0] java.util.Arrays.copyOf
  [ 1] java.lang.AbstractStringBuilder.ensureCapacityInternal
  [ 2] java.lang.AbstractStringBuilder.append
  [ 3] java.lang.StringBuilder.append
  [ 4] java.lang.StringBuilder.append
  [ 5] scala.collection.mutable.StringBuilder.addAll
  [ 6] scala.collection.mutable.StringBuilder.$plus$plus$eq
  [ 7] fs2.Collector$Builder$$anon$4.$plus$eq$$anonfun$1
  [ 8] fs2.Collector$Builder$$anon$4$$Lambda$794.0x0000000800ed9080.applyVoid
  [ 9] scala.runtime.function.JProcedure1.apply
  [10] scala.runtime.function.JProcedure1.apply
  [11] fs2.Chunk.foreach
  [12] fs2.Collector$Builder$$anon$4.$plus$eq
  [13] fs2.Stream$CompileOps.to$$anonfun$1$$anonfun$1
  [14] fs2.Stream$CompileOps$$Lambda$367.0x0000000800e03c48.apply
  [15] fs2.Pull$OuterRun$1.out
  [16] fs2.Pull$.go$1$$anonfun$1
  [17] fs2.Pull$$$Lambda$698.0x0000000800eb0220.apply
  [18] fs2.Pull$.interruptGuard$1$$anonfun$1
  [19] fs2.Pull$$$Lambda$518.0x0000000800e3f6e0.apply
  [20] cats.effect.IOFiber.succeeded
  [21] cats.effect.IOFiber.runLoop
  [22] cats.effect.IOFiber.autoCedeR
  [23] cats.effect.IOFiber.run
  [24] cats.effect.unsafe.WorkerThread.run

--- 21960325808 ns (2.11%), 2190 samples
  [ 0] __memset_avx2_unaligned_erms
  [ 1] MemAllocator::allocate() const
  [ 2] TypeArrayKlass::allocate_common(int, bool, JavaThread*)
  [ 3] JVMCIRuntime::new_array_common(JavaThread*, Klass*, int, bool)
  [ 4] fs2.Pull$OuterRun$1.out
  [ 5] fs2.Pull$.go$1$$anonfun$1
  [ 6] fs2.Pull$$$Lambda$698.0x0000000800eb0220.apply
  [ 7] fs2.Pull$.interruptGuard$1$$anonfun$1
  [ 8] fs2.Pull$$$Lambda$518.0x0000000800e3f6e0.apply
  [ 9] cats.effect.IOFiber.succeeded
  [10] cats.effect.IOFiber.runLoop
  [11] cats.effect.IOFiber.autoCedeR
  [12] cats.effect.IOFiber.run
  [13] cats.effect.unsafe.WorkerThread.run

--- 13471083702 ns (1.29%), 1343 samples
  [ 0] inflate
  [ 1] java.util.zip.Inflater.inflateBytesBytes
  [ 2] java.util.zip.Inflater.inflate
  [ 3] java.util.zip.InflaterInputStream.read
  [ 4] java.io.InputStream.transferTo
  [ 5] java.nio.file.Files.copy
  [ 6] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [ 7] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [ 8] jdk.nio.zipfs.ZipPath.newFileChannel
  [ 9] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [10] java.nio.channels.FileChannel.open
  [11] java.nio.channels.FileChannel.open
  [12] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [13] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$65.0x0000000800d354a0.apply
  [14] cats.effect.IOFiber.$anonfun$8
  [15] cats.effect.IOFiber$$Lambda$668.0x0000000800ea8d20.apply
  [16] cats.effect.unsafe.WorkerThread.blockOn
  [17] scala.concurrent.package$.blocking
  [18] cats.effect.IOFiber.runLoop
  [19] cats.effect.IOFiber.execR
  [20] cats.effect.IOFiber.run
  [21] cats.effect.unsafe.WorkerThread.run

--- 10464554157 ns (1.00%), 1044 samples
  [ 0] java.util.Arrays.copyOfRange
  [ 1] java.lang.StringLatin1.newString
  [ 2] java.lang.StringBuilder.toString
  [ 3] java.lang.StringBuilder.toString
  [ 4] scala.collection.mutable.StringBuilder.result
  [ 5] scala.collection.mutable.StringBuilder.toString
  [ 6] fs2.Collector$Builder$$anon$4.result
  [ 7] fs2.Collector$Builder$$anon$4.result
  [ 8] fs2.Stream$CompileOps.to$$anonfun$1$$anonfun$2
  [ 9] fs2.Stream$CompileOps$$Lambda$414.0x0000000800e19310.apply
  [10] cats.Monad.map$$anonfun$1
  [11] cats.Monad$$Lambda$419.0x0000000800e1a250.apply
  [12] cats.effect.IOFiber.succeeded
  [13] cats.effect.IOFiber.runLoop
  [14] cats.effect.IOFiber.autoCedeR
  [15] cats.effect.IOFiber.run
  [16] cats.effect.unsafe.WorkerThread.run

--- 9660536070 ns (0.93%), 963 samples
  [ 0] _raw_spin_unlock_irqrestore_[k]
  [ 1] __wake_up_common_lock_[k]
  [ 2] __wake_up_[k]
  [ 3] fsnotify_insert_event_[k]
  [ 4] inotify_handle_inode_event_[k]
  [ 5] fsnotify_handle_inode_event.isra.0_[k]
  [ 6] send_to_group_[k]
  [ 7] fsnotify_[k]
  [ 8] __fsnotify_parent_[k]
  [ 9] vfs_write_[k]
  [10] ksys_write_[k]
  [11] __x64_sys_write_[k]
  [12] do_syscall_64_[k]
  [13] entry_SYSCALL_64_after_hwframe_[k]
  [14] write
  [15] sun.nio.ch.FileDispatcherImpl.write0
  [16] sun.nio.ch.FileDispatcherImpl.write
  [17] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.IOUtil.write
  [20] sun.nio.ch.FileChannelImpl.write
  [21] java.nio.channels.Channels.writeFullyImpl
  [22] java.nio.channels.Channels.writeFully
  [23] java.nio.channels.Channels$1.write
  [24] java.io.InputStream.transferTo
  [25] java.nio.file.Files.copy
  [26] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [27] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [28] jdk.nio.zipfs.ZipPath.newFileChannel
  [29] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [30] java.nio.channels.FileChannel.open
  [31] java.nio.channels.FileChannel.open
  [32] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [33] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$65.0x0000000800d354a0.apply
  [34] cats.effect.IOFiber.$anonfun$8
  [35] cats.effect.IOFiber$$Lambda$668.0x0000000800ea8d20.apply
  [36] cats.effect.unsafe.WorkerThread.blockOn
  [37] scala.concurrent.package$.blocking
  [38] cats.effect.IOFiber.runLoop
  [39] cats.effect.IOFiber.execR
  [40] cats.effect.IOFiber.run
  [41] cats.effect.unsafe.WorkerThread.run

--- 9168774238 ns (0.88%), 914 samples
  [ 0] void OopOopIterateDispatch<G1CMOopClosure>::Table::oop_oop_iterate<InstanceKlass, narrowOop>(G1CMOopClosure*, oopDesc*, Klass*)
  [ 1] void G1CMTask::process_grey_task_entry<true>(G1TaskQueueEntry)
  [ 2] G1CMTask::do_marking_step(double, bool, bool)
  [ 3] G1CMConcurrentMarkingTask::work(unsigned int)
  [ 4] GangWorker::loop()
  [ 5] GangWorker::run()
  [ 6] Thread::call_run()
  [ 7] thread_native_entry(Thread*)
  [ 8] start_thread

--- 9132502197 ns (0.88%), 911 samples
  [ 0] java.util.Arrays.copyOf
  [ 1] java.lang.AbstractStringBuilder.ensureCapacityInternal
  [ 2] java.lang.AbstractStringBuilder.append
  [ 3] java.lang.StringBuilder.append
  [ 4] java.lang.StringBuilder.append
  [ 5] scala.collection.mutable.StringBuilder.addAll
  [ 6] scala.collection.mutable.StringBuilder.$plus$plus$eq
  [ 7] fs2.Collector$Builder$$anon$4.$plus$eq$$anonfun$1
  [ 8] fs2.Collector$Builder$$anon$4$$Lambda$794.0x0000000800ed9080.applyVoid
  [ 9] scala.runtime.function.JProcedure1.apply
  [10] scala.runtime.function.JProcedure1.apply
  [11] fs2.Chunk.foreach
  [12] fs2.Collector$Builder$$anon$4.$plus$eq
  [13] fs2.Stream$CompileOps.to$$anonfun$1$$anonfun$1
  [14] fs2.Stream$CompileOps$$Lambda$367.0x0000000800e03c48.apply
  [15] fs2.Pull$OuterRun$1.out
  [16] fs2.Pull$.go$1$$anonfun$1
  [17] fs2.Pull$$$Lambda$698.0x0000000800eb0220.apply
  [18] fs2.Pull$.interruptGuard$1$$anonfun$1
  [19] fs2.Pull$$$Lambda$518.0x0000000800e3f6e0.apply
  [20] cats.effect.IOFiber.succeeded
  [21] cats.effect.IOFiber.runLoop
  [22] cats.effect.IOFiber.autoCedeR
  [23] cats.effect.IOFiber.run
  [24] cats.effect.unsafe.WorkerThread.run

--- 7549172782 ns (0.72%), 753 samples
  [ 0] __memset_avx2_unaligned_erms
  [ 1] MemAllocator::allocate() const
  [ 2] TypeArrayKlass::allocate_common(int, bool, JavaThread*)
  [ 3] JVMCIRuntime::new_array_common(JavaThread*, Klass*, int, bool)
  [ 4] fs2.Stream$CompileOps$$Lambda$414.0x0000000800e19310.apply
  [ 5] cats.Monad.map$$anonfun$1
  [ 6] cats.Monad$$Lambda$419.0x0000000800e1a250.apply
  [ 7] cats.effect.IOFiber.succeeded
  [ 8] cats.effect.IOFiber.runLoop
  [ 9] cats.effect.IOFiber.autoCedeR
  [10] cats.effect.IOFiber.run
  [11] cats.effect.unsafe.WorkerThread.run

--- 7259097740 ns (0.70%), 724 samples
  [ 0] __memset_avx2_unaligned_erms
  [ 1] MemAllocator::allocate() const
  [ 2] TypeArrayKlass::allocate_common(int, bool, JavaThread*)
  [ 3] JVMCIRuntime::new_array_common(JavaThread*, Klass*, int, bool)
  [ 4] fs2.Pull$OuterRun$1.out
  [ 5] fs2.Pull$.go$1$$anonfun$1
  [ 6] fs2.Pull$$$Lambda$698.0x0000000800eb0220.apply
  [ 7] fs2.Pull$.interruptGuard$1$$anonfun$1
  [ 8] fs2.Pull$$$Lambda$518.0x0000000800e3f6e0.apply
  [ 9] cats.effect.IOFiber.succeeded
  [10] cats.effect.IOFiber.runLoop
  [11] cats.effect.IOFiber.autoCedeR
  [12] cats.effect.IOFiber.run
  [13] cats.effect.unsafe.WorkerThread.run

--- 6882291123 ns (0.66%), 686 samples
  [ 0] G1RebuildRemSetTask::G1RebuildRemSetHeapRegionClosure::do_heap_region(HeapRegion*)
  [ 1] HeapRegionManager::par_iterate(HeapRegionClosure*, HeapRegionClaimer*, unsigned int) const
  [ 2] G1RebuildRemSetTask::work(unsigned int)
  [ 3] GangWorker::loop()
  [ 4] GangWorker::run()
  [ 5] Thread::call_run()
  [ 6] thread_native_entry(Thread*)
  [ 7] start_thread

--- 6575927196 ns (0.63%), 655 samples
  [ 0] copy_user_generic_string_[k]
  [ 1] zfs_uiomove_iter?[zfs]_[k]
  [ 2] zfs_uiomove?[zfs]_[k]
  [ 3] dmu_write_uio_dnode?[zfs]_[k]
  [ 4] dmu_write_uio_dbuf?[zfs]_[k]
  [ 5] zfs_write?[zfs]_[k]
  [ 6] zpl_iter_write?[zfs]_[k]
  [ 7] new_sync_write_[k]
  [ 8] vfs_write_[k]
  [ 9] ksys_write_[k]
  [10] __x64_sys_write_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] write
  [14] sun.nio.ch.FileDispatcherImpl.write0
  [15] sun.nio.ch.FileDispatcherImpl.write
  [16] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.FileChannelImpl.write
  [20] java.nio.channels.Channels.writeFullyImpl
  [21] java.nio.channels.Channels.writeFully
  [22] java.nio.channels.Channels$1.write
  [23] java.io.InputStream.transferTo
  [24] java.nio.file.Files.copy
  [25] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [26] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [27] jdk.nio.zipfs.ZipPath.newFileChannel
  [28] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [29] java.nio.channels.FileChannel.open
  [30] java.nio.channels.FileChannel.open
  [31] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [32] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$65.0x0000000800d354a0.apply
  [33] cats.effect.IOFiber.$anonfun$8
  [34] cats.effect.IOFiber$$Lambda$668.0x0000000800ea8d20.apply
  [35] cats.effect.unsafe.WorkerThread.blockOn
  [36] scala.concurrent.package$.blocking
  [37] cats.effect.IOFiber.runLoop
  [38] cats.effect.IOFiber.execR
  [39] cats.effect.IOFiber.run
  [40] cats.effect.unsafe.WorkerThread.run

--- 6531411059 ns (0.63%), 651 samples
  [ 0] copy_user_generic_string_[k]
  [ 1] zfs_uiomove_iter?[zfs]_[k]
  [ 2] zfs_uiomove?[zfs]_[k]
  [ 3] dmu_read_uio_dnode?[zfs]_[k]
  [ 4] dmu_read_uio_dbuf?[zfs]_[k]
  [ 5] zfs_read?[zfs]_[k]
  [ 6] zpl_iter_read?[zfs]_[k]
  [ 7] new_sync_read_[k]
  [ 8] vfs_read_[k]
  [ 9] __x64_sys_pread64_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] __libc_pread64
  [13] sun.nio.ch.FileDispatcherImpl.pread0
  [14] sun.nio.ch.FileDispatcherImpl.pread
  [15] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [16] sun.nio.ch.IOUtil.read
  [17] sun.nio.ch.IOUtil.read
  [18] sun.nio.ch.FileChannelImpl.readInternal
  [19] sun.nio.ch.FileChannelImpl.read
  [20] jdk.nio.zipfs.ZipFileSystem$1.read
  [21] fs2.io.file.FileHandleCompanionPlatform$$anon$1.read$$anonfun$1
  [22] fs2.io.file.FileHandleCompanionPlatform$$anon$1$$Lambda$720.0x0000000800eb7150.apply
  [23] cats.effect.IOFiber.$anonfun$8
  [24] cats.effect.IOFiber$$Lambda$668.0x0000000800ea8d20.apply
  [25] cats.effect.unsafe.WorkerThread.blockOn
  [26] scala.concurrent.package$.blocking
  [27] cats.effect.IOFiber.runLoop
  [28] cats.effect.IOFiber.autoCedeR
  [29] cats.effect.IOFiber.run
  [30] cats.effect.unsafe.WorkerThread.run

--- 6385460967 ns (0.61%), 636 samples
  [ 0] memset_[k]
  [ 1] dbuf_read_impl.constprop.0?[zfs]_[k]
  [ 2] dbuf_read?[zfs]_[k]
  [ 3] dmu_tx_check_ioerr?[zfs]_[k]
  [ 4] dmu_tx_count_write?[zfs]_[k]
  [ 5] dmu_tx_hold_write_by_dnode?[zfs]_[k]
  [ 6] zfs_write?[zfs]_[k]
  [ 7] zpl_iter_write?[zfs]_[k]
  [ 8] new_sync_write_[k]
  [ 9] vfs_write_[k]
  [10] ksys_write_[k]
  [11] __x64_sys_write_[k]
  [12] do_syscall_64_[k]
  [13] entry_SYSCALL_64_after_hwframe_[k]
  [14] write
  [15] sun.nio.ch.FileDispatcherImpl.write0
  [16] sun.nio.ch.FileDispatcherImpl.write
  [17] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.IOUtil.write
  [20] sun.nio.ch.FileChannelImpl.write
  [21] java.nio.channels.Channels.writeFullyImpl
  [22] java.nio.channels.Channels.writeFully
  [23] java.nio.channels.Channels$1.write
  [24] java.io.InputStream.transferTo
  [25] java.nio.file.Files.copy
  [26] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [27] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [28] jdk.nio.zipfs.ZipPath.newFileChannel
  [29] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [30] java.nio.channels.FileChannel.open
  [31] java.nio.channels.FileChannel.open
  [32] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [33] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$65.0x0000000800d354a0.apply
  [34] cats.effect.IOFiber.$anonfun$8
  [35] cats.effect.IOFiber$$Lambda$668.0x0000000800ea8d20.apply
  [36] cats.effect.unsafe.WorkerThread.blockOn
  [37] scala.concurrent.package$.blocking
  [38] cats.effect.IOFiber.runLoop
  [39] cats.effect.IOFiber.execR
  [40] cats.effect.IOFiber.run
  [41] cats.effect.unsafe.WorkerThread.run

--- 6131173106 ns (0.59%), 611 samples
  [ 0] void OopOopIterateDispatch<G1CMOopClosure>::Table::oop_oop_iterate<ObjArrayKlass, narrowOop>(G1CMOopClosure*, oopDesc*, Klass*)
  [ 1] void G1CMTask::process_grey_task_entry<true>(G1TaskQueueEntry)
  [ 2] G1CMTask::do_marking_step(double, bool, bool)
  [ 3] G1CMConcurrentMarkingTask::work(unsigned int)
  [ 4] GangWorker::loop()
  [ 5] GangWorker::run()
  [ 6] Thread::call_run()
  [ 7] thread_native_entry(Thread*)
  [ 8] start_thread

--- 5864130253 ns (0.56%), 585 samples
  [ 0] java.lang.System.arraycopy
  [ 1] java.lang.String.getBytes
  [ 2] java.lang.AbstractStringBuilder.putStringAt
  [ 3] java.lang.AbstractStringBuilder.putStringAt
  [ 4] java.lang.AbstractStringBuilder.append
  [ 5] java.lang.StringBuilder.append
  [ 6] java.lang.StringBuilder.append
  [ 7] scala.collection.mutable.StringBuilder.addAll
  [ 8] scala.collection.mutable.StringBuilder.$plus$plus$eq
  [ 9] fs2.Collector$Builder$$anon$4.$plus$eq$$anonfun$1
  [10] fs2.Collector$Builder$$anon$4$$Lambda$794.0x0000000800ed9080.applyVoid
  [11] scala.runtime.function.JProcedure1.apply
  [12] scala.runtime.function.JProcedure1.apply
  [13] fs2.Chunk.foreach
  [14] fs2.Collector$Builder$$anon$4.$plus$eq
  [15] fs2.Stream$CompileOps.to$$anonfun$1$$anonfun$1
  [16] fs2.Stream$CompileOps$$Lambda$367.0x0000000800e03c48.apply
  [17] fs2.Pull$OuterRun$1.out
  [18] fs2.Pull$.go$1$$anonfun$1
  [19] fs2.Pull$$$Lambda$698.0x0000000800eb0220.apply
  [20] fs2.Pull$.interruptGuard$1$$anonfun$1
  [21] fs2.Pull$$$Lambda$518.0x0000000800e3f6e0.apply
  [22] cats.effect.IOFiber.succeeded
  [23] cats.effect.IOFiber.runLoop
  [24] cats.effect.IOFiber.autoCedeR
  [25] cats.effect.IOFiber.run
  [26] cats.effect.unsafe.WorkerThread.run

--- 5784350928 ns (0.56%), 576 samples
  [ 0] CompiledMethod::cleanup_inline_caches_impl(bool, bool)
  [ 1] CompiledMethod::unload_nmethod_caches(bool)
  [ 2] nmethod::do_unloading(bool)
  [ 3] CodeCacheUnloadingTask::work(unsigned int)
  [ 4] G1ParallelCleaningTask::work(unsigned int)
  [ 5] GangWorker::loop()
  [ 6] GangWorker::run()
  [ 7] Thread::call_run()
  [ 8] thread_native_entry(Thread*)
  [ 9] start_thread

--- 5386190637 ns (0.52%), 537 samples
  [ 0] void OopOopIterateDispatch<G1CMOopClosure>::Table::oop_oop_iterate<InstanceKlass, narrowOop>(G1CMOopClosure*, oopDesc*, Klass*)
  [ 1] void G1CMTask::process_grey_task_entry<true>(G1TaskQueueEntry)
  [ 2] G1CMTask::drain_local_queue(bool) [clone .part.0] [clone .constprop.1]
  [ 3] G1CMTask::do_marking_step(double, bool, bool)
  [ 4] G1CMConcurrentMarkingTask::work(unsigned int)
  [ 5] GangWorker::loop()
  [ 6] GangWorker::run()
  [ 7] Thread::call_run()
  [ 8] thread_native_entry(Thread*)
  [ 9] start_thread

--- 4444060980 ns (0.43%), 443 samples
  [ 0] void OopOopIterateDispatch<G1RebuildRemSetClosure>::Table::oop_oop_iterate<InstanceKlass, narrowOop>(G1RebuildRemSetClosure*, oopDesc*, Klass*)
  [ 1] G1RebuildRemSetTask::G1RebuildRemSetHeapRegionClosure::do_heap_region(HeapRegion*)
  [ 2] HeapRegionManager::par_iterate(HeapRegionClosure*, HeapRegionClaimer*, unsigned int) const
  [ 3] G1RebuildRemSetTask::work(unsigned int)
  [ 4] GangWorker::loop()
  [ 5] GangWorker::run()
  [ 6] Thread::call_run()
  [ 7] thread_native_entry(Thread*)
  [ 8] start_thread

--- 4373607079 ns (0.42%), 436 samples
  [ 0] void OopOopIterateDispatch<G1CMOopClosure>::Table::oop_oop_iterate<InstanceMirrorKlass, narrowOop>(G1CMOopClosure*, oopDesc*, Klass*)
  [ 1] void G1CMTask::process_grey_task_entry<true>(G1TaskQueueEntry)
  [ 2] G1CMTask::do_marking_step(double, bool, bool)
  [ 3] G1CMConcurrentMarkingTask::work(unsigned int)
  [ 4] GangWorker::loop()
  [ 5] GangWorker::run()
  [ 6] Thread::call_run()
  [ 7] thread_native_entry(Thread*)
  [ 8] start_thread

--- 4238436243 ns (0.41%), 422 samples
  [ 0] __memset_avx2_unaligned_erms
  [ 1] MarkBitMap::do_clear(MemRegion, bool)
  [ 2] G1ClearBitMapTask::G1ClearBitmapHRClosure::do_heap_region(HeapRegion*)
  [ 3] HeapRegionManager::par_iterate(HeapRegionClosure*, HeapRegionClaimer*, unsigned int) const
  [ 4] G1ClearBitMapTask::work(unsigned int)
  [ 5] GangWorker::loop()
  [ 6] GangWorker::run()
  [ 7] Thread::call_run()
  [ 8] thread_native_entry(Thread*)
  [ 9] start_thread

--- 4150261367 ns (0.40%), 414 samples
  [ 0] inflate
  [ 1] java.util.zip.Inflater.inflateBytesBytes
  [ 2] java.util.zip.Inflater.inflate
  [ 3] java.util.zip.InflaterInputStream.read
  [ 4] java.io.InputStream.transferTo
  [ 5] java.nio.file.Files.copy
  [ 6] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [ 7] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [ 8] jdk.nio.zipfs.ZipPath.newFileChannel
  [ 9] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [10] java.nio.channels.FileChannel.open
  [11] java.nio.channels.FileChannel.open
  [12] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [13] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$65.0x0000000800d354a0.apply
  [14] cats.effect.IOFiber.$anonfun$8
  [15] cats.effect.IOFiber$$Lambda$668.0x0000000800ea8d20.apply
  [16] cats.effect.unsafe.WorkerThread.blockOn
  [17] scala.concurrent.package$.blocking
  [18] cats.effect.IOFiber.runLoop
  [19] cats.effect.IOFiber.execR
  [20] cats.effect.IOFiber.run
  [21] cats.effect.unsafe.WorkerThread.run

--- 3858986978 ns (0.37%), 385 samples
  [ 0] __memset_avx2_unaligned_erms
  [ 1] MemAllocator::allocate() const
  [ 2] TypeArrayKlass::allocate_common(int, bool, JavaThread*)
  [ 3] JVMCIRuntime::new_array_common(JavaThread*, Klass*, int, bool)
  [ 4] fs2.text$utf8$.processSingleChunk$1
  [ 5] fs2.text$utf8$.doPull$1$$anonfun$1
  [ 6] fs2.text$utf8$$$Lambda$771.0x0000000800ed4800.apply
  [ 7] fs2.Pull$$anon$1.cont
  [ 8] fs2.Pull$.fs2$Pull$$$bindBindAux
  [ 9] fs2.Pull$BindBind.cont
  [10] fs2.Pull$ContP.apply
  [11] fs2.Pull$ContP.apply$
  [12] fs2.Pull$Bind.apply
  [13] fs2.Pull$Bind.apply
  [14] fs2.Pull$UnconsRunR$1.out$$anonfun$2
  [15] fs2.Pull$UnconsRunR$1$$Lambda$708.0x0000000800eb2820.apply
  [16] fs2.Pull$.interruptGuard$1$$anonfun$1
  [17] fs2.Pull$$$Lambda$518.0x0000000800e3f6e0.apply
  [18] cats.effect.IOFiber.succeeded
  [19] cats.effect.IOFiber.runLoop
  [20] cats.effect.IOFiber.autoCedeR
  [21] cats.effect.IOFiber.run
  [22] cats.effect.unsafe.WorkerThread.run

--- 3839523753 ns (0.37%), 383 samples
  [ 0] java.util.Arrays.copyOfRange
  [ 1] java.lang.String.<init>
  [ 2] java.lang.String.<init>
  [ 3] fs2.text$utf8$.processSingleChunk$1
  [ 4] fs2.text$utf8$.doPull$1$$anonfun$1
  [ 5] fs2.text$utf8$$$Lambda$771.0x0000000800ed4800.apply
  [ 6] fs2.Pull$$anon$1.cont
  [ 7] fs2.Pull$.fs2$Pull$$$bindBindAux
  [ 8] fs2.Pull$BindBind.cont
  [ 9] fs2.Pull$ContP.apply
  [10] fs2.Pull$ContP.apply$
  [11] fs2.Pull$Bind.apply
  [12] fs2.Pull$Bind.apply
  [13] fs2.Pull$UnconsRunR$1.out$$anonfun$2
  [14] fs2.Pull$UnconsRunR$1$$Lambda$708.0x0000000800eb2820.apply
  [15] fs2.Pull$.interruptGuard$1$$anonfun$1
  [16] fs2.Pull$$$Lambda$518.0x0000000800e3f6e0.apply
  [17] cats.effect.IOFiber.succeeded
  [18] cats.effect.IOFiber.runLoop
  [19] cats.effect.IOFiber.autoCedeR
  [20] cats.effect.IOFiber.run
  [21] cats.effect.unsafe.WorkerThread.run

--- 3748888062 ns (0.36%), 374 samples
  [ 0] __memset_avx2_unaligned_erms
  [ 1] MemAllocator::allocate() const
  [ 2] TypeArrayKlass::allocate_common(int, bool, JavaThread*)
  [ 3] JVMCIRuntime::new_array_common(JavaThread*, Klass*, int, bool)
  [ 4] fs2.io.file.FileHandleCompanionPlatform$$anon$1.read$$anonfun$1
  [ 5] fs2.io.file.FileHandleCompanionPlatform$$anon$1$$Lambda$720.0x0000000800eb7150.apply
  [ 6] cats.effect.IOFiber.$anonfun$8
  [ 7] cats.effect.IOFiber$$Lambda$668.0x0000000800ea8d20.apply
  [ 8] cats.effect.unsafe.WorkerThread.blockOn
  [ 9] scala.concurrent.package$.blocking
  [10] cats.effect.IOFiber.runLoop
  [11] cats.effect.IOFiber.autoCedeR
  [12] cats.effect.IOFiber.run
  [13] cats.effect.unsafe.WorkerThread.run

--- 3690544833 ns (0.35%), 368 samples
  [ 0] jlong_disjoint_arraycopy
  [ 1] jdk.internal.misc.Unsafe.copyMemory0
  [ 2] jdk.internal.misc.Unsafe.copyMemory
  [ 3] jdk.internal.misc.ScopedMemoryAccess.copyMemoryInternal
  [ 4] jdk.internal.misc.ScopedMemoryAccess.copyMemory
  [ 5] java.nio.ByteBuffer.putBuffer
  [ 6] java.nio.ByteBuffer.put
  [ 7] sun.nio.ch.IOUtil.write
  [ 8] sun.nio.ch.IOUtil.write
  [ 9] sun.nio.ch.FileChannelImpl.write
  [10] java.nio.channels.Channels.writeFullyImpl
  [11] java.nio.channels.Channels.writeFully
  [12] java.nio.channels.Channels$1.write
  [13] java.io.InputStream.transferTo
  [14] java.nio.file.Files.copy
  [15] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [16] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [17] jdk.nio.zipfs.ZipPath.newFileChannel
  [18] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [19] java.nio.channels.FileChannel.open
  [20] java.nio.channels.FileChannel.open
  [21] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [22] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$65.0x0000000800d354a0.apply
  [23] cats.effect.IOFiber.$anonfun$8
  [24] cats.effect.IOFiber$$Lambda$668.0x0000000800ea8d20.apply
  [25] cats.effect.unsafe.WorkerThread.blockOn
  [26] scala.concurrent.package$.blocking
  [27] cats.effect.IOFiber.runLoop
  [28] cats.effect.IOFiber.execR
  [29] cats.effect.IOFiber.run
  [30] cats.effect.unsafe.WorkerThread.run

--- 3628825193 ns (0.35%), 362 samples
  [ 0] __memset_avx2_unaligned_erms
  [ 1] MemAllocator::allocate() const
  [ 2] TypeArrayKlass::allocate_common(int, bool, JavaThread*)
  [ 3] JVMCIRuntime::new_array_common(JavaThread*, Klass*, int, bool)
  [ 4] java.lang.Math.max
  [ 5] scala.runtime.RichInt$.max$extension
  [ 6] fs2.text$utf8$.lastIncompleteBytes$1
  [ 7] fs2.text$utf8$.processSingleChunk$1
  [ 8] fs2.text$utf8$.doPull$1$$anonfun$1
  [ 9] fs2.text$utf8$$$Lambda$771.0x0000000800ed4800.apply
  [10] fs2.Pull$$anon$1.cont
  [11] fs2.Pull$.fs2$Pull$$$bindBindAux
  [12] fs2.Pull$BindBind.cont
  [13] fs2.Pull$ContP.apply
  [14] fs2.Pull$ContP.apply$
  [15] fs2.Pull$Bind.apply
  [16] fs2.Pull$Bind.apply
  [17] fs2.Pull$UnconsRunR$1.out$$anonfun$2
  [18] fs2.Pull$UnconsRunR$1$$Lambda$708.0x0000000800eb2820.apply
  [19] fs2.Pull$.interruptGuard$1$$anonfun$1
  [20] fs2.Pull$$$Lambda$518.0x0000000800e3f6e0.apply
  [21] cats.effect.IOFiber.succeeded
  [22] cats.effect.IOFiber.runLoop
  [23] cats.effect.IOFiber.autoCedeR
  [24] cats.effect.IOFiber.run
  [25] cats.effect.unsafe.WorkerThread.run

--- 3617546666 ns (0.35%), 361 samples
  [ 0] java.util.Arrays.copyOfRange
  [ 1] java.lang.StringLatin1.newString
  [ 2] java.lang.StringBuilder.toString
  [ 3] java.lang.StringBuilder.toString
  [ 4] scala.collection.mutable.StringBuilder.result
  [ 5] scala.collection.mutable.StringBuilder.toString
  [ 6] fs2.Collector$Builder$$anon$4.result
  [ 7] fs2.Collector$Builder$$anon$4.result
  [ 8] fs2.Stream$CompileOps.to$$anonfun$1$$anonfun$2
  [ 9] fs2.Stream$CompileOps$$Lambda$414.0x0000000800e19310.apply
  [10] cats.Monad.map$$anonfun$1
  [11] cats.Monad$$Lambda$419.0x0000000800e1a250.apply
  [12] cats.effect.IOFiber.succeeded
  [13] cats.effect.IOFiber.runLoop
  [14] cats.effect.IOFiber.autoCedeR
  [15] cats.effect.IOFiber.run
  [16] cats.effect.unsafe.WorkerThread.run

--- 3321381610 ns (0.32%), 331 samples
  [ 0] fsnotify_[k]
  [ 1] __fsnotify_parent_[k]
  [ 2] vfs_write_[k]
  [ 3] ksys_write_[k]
  [ 4] __x64_sys_write_[k]
  [ 5] do_syscall_64_[k]
  [ 6] entry_SYSCALL_64_after_hwframe_[k]
  [ 7] write
  [ 8] sun.nio.ch.FileDispatcherImpl.write0
  [ 9] sun.nio.ch.FileDispatcherImpl.write
  [10] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [11] sun.nio.ch.IOUtil.write
  [12] sun.nio.ch.IOUtil.write
  [13] sun.nio.ch.FileChannelImpl.write
  [14] java.nio.channels.Channels.writeFullyImpl
  [15] java.nio.channels.Channels.writeFully
  [16] java.nio.channels.Channels$1.write
  [17] java.io.InputStream.transferTo
  [18] java.nio.file.Files.copy
  [19] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [20] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [21] jdk.nio.zipfs.ZipPath.newFileChannel
  [22] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [23] java.nio.channels.FileChannel.open
  [24] java.nio.channels.FileChannel.open
  [25] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [26] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$65.0x0000000800d354a0.apply
  [27] cats.effect.IOFiber.$anonfun$8
  [28] cats.effect.IOFiber$$Lambda$668.0x0000000800ea8d20.apply
  [29] cats.effect.unsafe.WorkerThread.blockOn
  [30] scala.concurrent.package$.blocking
  [31] cats.effect.IOFiber.runLoop
  [32] cats.effect.IOFiber.execR
  [33] cats.effect.IOFiber.run
  [34] cats.effect.unsafe.WorkerThread.run

--- 3258906578 ns (0.31%), 325 samples
  [ 0] __memmove_avx_unaligned_erms
  [ 1] java.util.zip.Inflater.inflateBytesBytes
  [ 2] java.util.zip.Inflater.inflate
  [ 3] java.util.zip.InflaterInputStream.read
  [ 4] java.io.InputStream.transferTo
  [ 5] java.nio.file.Files.copy
  [ 6] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [ 7] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [ 8] jdk.nio.zipfs.ZipPath.newFileChannel
  [ 9] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [10] java.nio.channels.FileChannel.open
  [11] java.nio.channels.FileChannel.open
  [12] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [13] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$65.0x0000000800d354a0.apply
  [14] cats.effect.IOFiber.$anonfun$8
  [15] cats.effect.IOFiber$$Lambda$668.0x0000000800ea8d20.apply
  [16] cats.effect.unsafe.WorkerThread.blockOn
  [17] scala.concurrent.package$.blocking
  [18] cats.effect.IOFiber.runLoop
  [19] cats.effect.IOFiber.execR
  [20] cats.effect.IOFiber.run
  [21] cats.effect.unsafe.WorkerThread.run

--- 3072946979 ns (0.30%), 306 samples
  [ 0] nmethod::oops_do(OopClosure*, bool)
  [ 1] ClosureIsUnloadingBehaviour::is_unloading(CompiledMethod*) const
  [ 2] nmethod::do_unloading(bool)
  [ 3] CodeCacheUnloadingTask::work(unsigned int)
  [ 4] G1ParallelCleaningTask::work(unsigned int)
  [ 5] GangWorker::loop()
  [ 6] GangWorker::run()
  [ 7] Thread::call_run()
  [ 8] thread_native_entry(Thread*)
  [ 9] start_thread

--- 2930378248 ns (0.28%), 292 samples
  [ 0] send_to_group_[k]
  [ 1] fsnotify_[k]
  [ 2] __fsnotify_parent_[k]
  [ 3] vfs_write_[k]
  [ 4] ksys_write_[k]
  [ 5] __x64_sys_write_[k]
  [ 6] do_syscall_64_[k]
  [ 7] entry_SYSCALL_64_after_hwframe_[k]
  [ 8] write
  [ 9] sun.nio.ch.FileDispatcherImpl.write0
  [10] sun.nio.ch.FileDispatcherImpl.write
  [11] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [12] sun.nio.ch.IOUtil.write
  [13] sun.nio.ch.IOUtil.write
  [14] sun.nio.ch.FileChannelImpl.write
  [15] java.nio.channels.Channels.writeFullyImpl
  [16] java.nio.channels.Channels.writeFully
  [17] java.nio.channels.Channels$1.write
  [18] java.io.InputStream.transferTo
  [19] java.nio.file.Files.copy
  [20] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [21] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [22] jdk.nio.zipfs.ZipPath.newFileChannel
  [23] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [24] java.nio.channels.FileChannel.open
  [25] java.nio.channels.FileChannel.open
  [26] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [27] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$65.0x0000000800d354a0.apply
  [28] cats.effect.IOFiber.$anonfun$8
  [29] cats.effect.IOFiber$$Lambda$668.0x0000000800ea8d20.apply
  [30] cats.effect.unsafe.WorkerThread.blockOn
  [31] scala.concurrent.package$.blocking
  [32] cats.effect.IOFiber.runLoop
  [33] cats.effect.IOFiber.execR
  [34] cats.effect.IOFiber.run
  [35] cats.effect.unsafe.WorkerThread.run

--- 2899120504 ns (0.28%), 289 samples
  [ 0] refill_obj_stock_[k]
  [ 1] obj_cgroup_charge_[k]
  [ 2] __kmalloc_[k]
  [ 3] inotify_handle_inode_event_[k]
  [ 4] fsnotify_handle_inode_event.isra.0_[k]
  [ 5] send_to_group_[k]
  [ 6] fsnotify_[k]
  [ 7] __fsnotify_parent_[k]
  [ 8] vfs_write_[k]
  [ 9] ksys_write_[k]
  [10] __x64_sys_write_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] write
  [14] sun.nio.ch.FileDispatcherImpl.write0
  [15] sun.nio.ch.FileDispatcherImpl.write
  [16] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.FileChannelImpl.write
  [20] java.nio.channels.Channels.writeFullyImpl
  [21] java.nio.channels.Channels.writeFully
  [22] java.nio.channels.Channels$1.write
  [23] java.io.InputStream.transferTo
  [24] java.nio.file.Files.copy
  [25] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [26] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [27] jdk.nio.zipfs.ZipPath.newFileChannel
  [28] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [29] java.nio.channels.FileChannel.open
  [30] java.nio.channels.FileChannel.open
  [31] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [32] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$65.0x0000000800d354a0.apply
  [33] cats.effect.IOFiber.$anonfun$8
  [34] cats.effect.IOFiber$$Lambda$668.0x0000000800ea8d20.apply
  [35] cats.effect.unsafe.WorkerThread.blockOn
  [36] scala.concurrent.package$.blocking
  [37] cats.effect.IOFiber.runLoop
  [38] cats.effect.IOFiber.execR
  [39] cats.effect.IOFiber.run
  [40] cats.effect.unsafe.WorkerThread.run

--- 2868493466 ns (0.28%), 286 samples
  [ 0] void OopOopIterateDispatch<G1CMOopClosure>::Table::oop_oop_iterate<ObjArrayKlass, narrowOop>(G1CMOopClosure*, oopDesc*, Klass*)
  [ 1] void G1CMTask::process_grey_task_entry<true>(G1TaskQueueEntry)
  [ 2] G1CMTask::drain_local_queue(bool) [clone .part.0] [clone .constprop.1]
  [ 3] G1CMTask::do_marking_step(double, bool, bool)
  [ 4] G1CMConcurrentMarkingTask::work(unsigned int)
  [ 5] GangWorker::loop()
  [ 6] GangWorker::run()
  [ 7] Thread::call_run()
  [ 8] thread_native_entry(Thread*)
  [ 9] start_thread

--- 2857599885 ns (0.27%), 285 samples
  [ 0] G1CMTask::do_marking_step(double, bool, bool)
  [ 1] G1CMConcurrentMarkingTask::work(unsigned int)
  [ 2] GangWorker::loop()
  [ 3] GangWorker::run()
  [ 4] Thread::call_run()
  [ 5] thread_native_entry(Thread*)
  [ 6] start_thread

--- 2849197901 ns (0.27%), 284 samples
  [ 0] refill_stock_[k]
  [ 1] try_charge_memcg_[k]
  [ 2] obj_cgroup_charge_[k]
  [ 3] __kmalloc_[k]
  [ 4] inotify_handle_inode_event_[k]
  [ 5] fsnotify_handle_inode_event.isra.0_[k]
  [ 6] send_to_group_[k]
  [ 7] fsnotify_[k]
  [ 8] __fsnotify_parent_[k]
  [ 9] vfs_write_[k]
  [10] ksys_write_[k]
  [11] __x64_sys_write_[k]
  [12] do_syscall_64_[k]
  [13] entry_SYSCALL_64_after_hwframe_[k]
  [14] write
  [15] sun.nio.ch.FileDispatcherImpl.write0
  [16] sun.nio.ch.FileDispatcherImpl.write
  [17] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.IOUtil.write
  [20] sun.nio.ch.FileChannelImpl.write
  [21] java.nio.channels.Channels.writeFullyImpl
  [22] java.nio.channels.Channels.writeFully
  [23] java.nio.channels.Channels$1.write
  [24] java.io.InputStream.transferTo
  [25] java.nio.file.Files.copy
  [26] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [27] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [28] jdk.nio.zipfs.ZipPath.newFileChannel
  [29] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [30] java.nio.channels.FileChannel.open
  [31] java.nio.channels.FileChannel.open
  [32] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [33] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$65.0x0000000800d354a0.apply
  [34] cats.effect.IOFiber.$anonfun$8
  [35] cats.effect.IOFiber$$Lambda$668.0x0000000800ea8d20.apply
  [36] cats.effect.unsafe.WorkerThread.blockOn
  [37] scala.concurrent.package$.blocking
  [38] cats.effect.IOFiber.runLoop
  [39] cats.effect.IOFiber.execR
  [40] cats.effect.IOFiber.run
  [41] cats.effect.unsafe.WorkerThread.run

--- 2650007234 ns (0.25%), 264 samples
  [ 0] copy_user_generic_string_[k]
  [ 1] zfs_uiomove_iter?[zfs]_[k]
  [ 2] zfs_uiomove?[zfs]_[k]
  [ 3] dmu_read_uio_dnode?[zfs]_[k]
  [ 4] dmu_read_uio_dbuf?[zfs]_[k]
  [ 5] mappedread?[zfs]_[k]
  [ 6] zfs_read?[zfs]_[k]
  [ 7] zpl_iter_read?[zfs]_[k]
  [ 8] new_sync_read_[k]
  [ 9] vfs_read_[k]
  [10] __x64_sys_pread64_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] __libc_pread64
  [14] sun.nio.ch.FileDispatcherImpl.pread0
  [15] sun.nio.ch.FileDispatcherImpl.pread
  [16] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [17] sun.nio.ch.IOUtil.read
  [18] sun.nio.ch.IOUtil.read
  [19] sun.nio.ch.FileChannelImpl.readInternal
  [20] sun.nio.ch.FileChannelImpl.read
  [21] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [22] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [23] jdk.nio.zipfs.ZipFileSystem$2.fill
  [24] java.util.zip.InflaterInputStream.read
  [25] java.io.InputStream.transferTo
  [26] java.nio.file.Files.copy
  [27] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [28] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [29] jdk.nio.zipfs.ZipPath.newFileChannel
  [30] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [31] java.nio.channels.FileChannel.open
  [32] java.nio.channels.FileChannel.open
  [33] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [34] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$65.0x0000000800d354a0.apply
  [35] cats.effect.IOFiber.$anonfun$8
  [36] cats.effect.IOFiber$$Lambda$668.0x0000000800ea8d20.apply
  [37] cats.effect.unsafe.WorkerThread.blockOn
  [38] scala.concurrent.package$.blocking
  [39] cats.effect.IOFiber.runLoop
  [40] cats.effect.IOFiber.execR
  [41] cats.effect.IOFiber.run
  [42] cats.effect.unsafe.WorkerThread.run

--- 2631817672 ns (0.25%), 262 samples
  [ 0] find_vmap_area_[k]
  [ 1] check_heap_object_[k]
  [ 2] __check_object_size.part.0_[k]
  [ 3] __check_object_size_[k]
  [ 4] zfs_uiomove_iter?[zfs]_[k]
  [ 5] zfs_uiomove?[zfs]_[k]
  [ 6] dmu_write_uio_dnode?[zfs]_[k]
  [ 7] dmu_write_uio_dbuf?[zfs]_[k]
  [ 8] zfs_write?[zfs]_[k]
  [ 9] zpl_iter_write?[zfs]_[k]
  [10] new_sync_write_[k]
  [11] vfs_write_[k]
  [12] ksys_write_[k]
  [13] __x64_sys_write_[k]
  [14] do_syscall_64_[k]
  [15] entry_SYSCALL_64_after_hwframe_[k]
  [16] write
  [17] sun.nio.ch.FileDispatcherImpl.write0
  [18] sun.nio.ch.FileDispatcherImpl.write
  [19] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [20] sun.nio.ch.IOUtil.write
  [21] sun.nio.ch.IOUtil.write
  [22] sun.nio.ch.FileChannelImpl.write
  [23] java.nio.channels.Channels.writeFullyImpl
  [24] java.nio.channels.Channels.writeFully
  [25] java.nio.channels.Channels$1.write
  [26] java.io.InputStream.transferTo
  [27] java.nio.file.Files.copy
  [28] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [29] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [30] jdk.nio.zipfs.ZipPath.newFileChannel
  [31] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [32] java.nio.channels.FileChannel.open
  [33] java.nio.channels.FileChannel.open
  [34] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [35] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$65.0x0000000800d354a0.apply
  [36] cats.effect.IOFiber.$anonfun$8
  [37] cats.effect.IOFiber$$Lambda$668.0x0000000800ea8d20.apply
  [38] cats.effect.unsafe.WorkerThread.blockOn
  [39] scala.concurrent.package$.blocking
  [40] cats.effect.IOFiber.runLoop
  [41] cats.effect.IOFiber.execR
  [42] cats.effect.IOFiber.run
  [43] cats.effect.unsafe.WorkerThread.run

--- 2629494154 ns (0.25%), 262 samples
  [ 0] void G1CMTask::process_grey_task_entry<true>(G1TaskQueueEntry)
  [ 1] G1CMTask::do_marking_step(double, bool, bool)
  [ 2] G1CMConcurrentMarkingTask::work(unsigned int)
  [ 3] GangWorker::loop()
  [ 4] GangWorker::run()
  [ 5] Thread::call_run()
  [ 6] thread_native_entry(Thread*)
  [ 7] start_thread

--- 2628191945 ns (0.25%), 262 samples
  [ 0] __memset_avx2_unaligned_erms
  [ 1] MemAllocator::allocate() const
  [ 2] TypeArrayKlass::allocate_common(int, bool, JavaThread*)
  [ 3] JVMCIRuntime::new_array_common(JavaThread*, Klass*, int, bool)
  [ 4] fs2.Pull$OuterRun$1.out
  [ 5] fs2.Pull$.go$1$$anonfun$1
  [ 6] fs2.Pull$$$Lambda$698.0x0000000800eb0220.apply
  [ 7] fs2.Pull$.interruptGuard$1$$anonfun$1
  [ 8] fs2.Pull$$$Lambda$518.0x0000000800e3f6e0.apply
  [ 9] cats.effect.IOFiber.succeeded
  [10] cats.effect.IOFiber.runLoop
  [11] cats.effect.IOFiber.execR
  [12] cats.effect.IOFiber.run
  [13] cats.effect.unsafe.WorkerThread.run

--- 2627774176 ns (0.25%), 262 samples
  [ 0] void G1RebuildRemSetClosure::do_oop_work<narrowOop>(narrowOop*)
  [ 1] G1RebuildRemSetTask::G1RebuildRemSetHeapRegionClosure::do_heap_region(HeapRegion*)
  [ 2] HeapRegionManager::par_iterate(HeapRegionClosure*, HeapRegionClaimer*, unsigned int) const
  [ 3] G1RebuildRemSetTask::work(unsigned int)
  [ 4] GangWorker::loop()
  [ 5] GangWorker::run()
  [ 6] Thread::call_run()
  [ 7] thread_native_entry(Thread*)
  [ 8] start_thread

--- 2578618711 ns (0.25%), 257 samples
  [ 0] java.util.Arrays.copyOf
  [ 1] java.lang.AbstractStringBuilder.ensureCapacityInternal
  [ 2] java.lang.AbstractStringBuilder.append
  [ 3] java.lang.StringBuilder.append
  [ 4] java.lang.StringBuilder.append
  [ 5] scala.collection.mutable.StringBuilder.addAll
  [ 6] scala.collection.mutable.StringBuilder.$plus$plus$eq
  [ 7] fs2.Collector$Builder$$anon$4.$plus$eq$$anonfun$1
  [ 8] fs2.Collector$Builder$$anon$4$$Lambda$794.0x0000000800ed9080.applyVoid
  [ 9] scala.runtime.function.JProcedure1.apply
  [10] scala.runtime.function.JProcedure1.apply
  [11] fs2.Chunk.foreach
  [12] fs2.Collector$Builder$$anon$4.$plus$eq
  [13] fs2.Stream$CompileOps.to$$anonfun$1$$anonfun$1
  [14] fs2.Stream$CompileOps$$Lambda$367.0x0000000800e03c48.apply
  [15] fs2.Pull$OuterRun$1.out
  [16] fs2.Pull$.go$1$$anonfun$1
  [17] fs2.Pull$$$Lambda$698.0x0000000800eb0220.apply
  [18] fs2.Pull$.interruptGuard$1$$anonfun$1
  [19] fs2.Pull$$$Lambda$518.0x0000000800e3f6e0.apply
  [20] cats.effect.IOFiber.succeeded
  [21] cats.effect.IOFiber.runLoop
  [22] cats.effect.IOFiber.execR
  [23] cats.effect.IOFiber.run
  [24] cats.effect.unsafe.WorkerThread.run

--- 2555597635 ns (0.25%), 255 samples
  [ 0] java.lang.System.arraycopy
  [ 1] fs2.Chunk$ArraySlice.copyToArray
  [ 2] fs2.Chunk.toArray
  [ 3] fs2.text$utf8$.processSingleChunk$1
  [ 4] fs2.text$utf8$.doPull$1$$anonfun$1
  [ 5] fs2.text$utf8$$$Lambda$771.0x0000000800ed4800.apply
  [ 6] fs2.Pull$$anon$1.cont
  [ 7] fs2.Pull$.fs2$Pull$$$bindBindAux
  [ 8] fs2.Pull$BindBind.cont
  [ 9] fs2.Pull$ContP.apply
  [10] fs2.Pull$ContP.apply$
  [11] fs2.Pull$Bind.apply
  [12] fs2.Pull$Bind.apply
  [13] fs2.Pull$UnconsRunR$1.out$$anonfun$2
  [14] fs2.Pull$UnconsRunR$1$$Lambda$708.0x0000000800eb2820.apply
  [15] fs2.Pull$.interruptGuard$1$$anonfun$1
  [16] fs2.Pull$$$Lambda$518.0x0000000800e3f6e0.apply
  [17] cats.effect.IOFiber.succeeded
  [18] cats.effect.IOFiber.runLoop
  [19] cats.effect.IOFiber.autoCedeR
  [20] cats.effect.IOFiber.run
  [21] cats.effect.unsafe.WorkerThread.run

--- 2509296654 ns (0.24%), 250 samples
  [ 0] memset_[k]
  [ 1] dbuf_read_impl.constprop.0?[zfs]_[k]
  [ 2] dbuf_read?[zfs]_[k]
  [ 3] dmu_buf_will_dirty_impl?[zfs]_[k]
  [ 4] dmu_buf_will_dirty?[zfs]_[k]
  [ 5] dmu_write_uio_dnode?[zfs]_[k]
  [ 6] dmu_write_uio_dbuf?[zfs]_[k]
  [ 7] zfs_write?[zfs]_[k]
  [ 8] zpl_iter_write?[zfs]_[k]
  [ 9] new_sync_write_[k]
  [10] vfs_write_[k]
  [11] ksys_write_[k]
  [12] __x64_sys_write_[k]
  [13] do_syscall_64_[k]
  [14] entry_SYSCALL_64_after_hwframe_[k]
  [15] write
  [16] sun.nio.ch.FileDispatcherImpl.write0
  [17] sun.nio.ch.FileDispatcherImpl.write
  [18] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [19] sun.nio.ch.IOUtil.write
  [20] sun.nio.ch.IOUtil.write
  [21] sun.nio.ch.FileChannelImpl.write
  [22] java.nio.channels.Channels.writeFullyImpl
  [23] java.nio.channels.Channels.writeFully
  [24] java.nio.channels.Channels$1.write
  [25] java.io.InputStream.transferTo
  [26] java.nio.file.Files.copy
  [27] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [28] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [29] jdk.nio.zipfs.ZipPath.newFileChannel
  [30] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [31] java.nio.channels.FileChannel.open
  [32] java.nio.channels.FileChannel.open
  [33] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [34] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$65.0x0000000800d354a0.apply
  [35] cats.effect.IOFiber.$anonfun$8
  [36] cats.effect.IOFiber$$Lambda$668.0x0000000800ea8d20.apply
  [37] cats.effect.unsafe.WorkerThread.blockOn
  [38] scala.concurrent.package$.blocking
  [39] cats.effect.IOFiber.runLoop
  [40] cats.effect.IOFiber.execR
  [41] cats.effect.IOFiber.run
  [42] cats.effect.unsafe.WorkerThread.run

--- 2458822866 ns (0.24%), 245 samples
  [ 0] copy_user_generic_string_[k]
  [ 1] zfs_uiomove_iter?[zfs]_[k]
  [ 2] zfs_uiomove?[zfs]_[k]
  [ 3] dmu_read_uio_dnode?[zfs]_[k]
  [ 4] dmu_read_uio_dbuf?[zfs]_[k]
  [ 5] zfs_read?[zfs]_[k]
  [ 6] zpl_iter_read?[zfs]_[k]
  [ 7] new_sync_read_[k]
  [ 8] vfs_read_[k]
  [ 9] __x64_sys_pread64_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] __libc_pread64
  [13] sun.nio.ch.FileDispatcherImpl.pread0
  [14] sun.nio.ch.FileDispatcherImpl.pread
  [15] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [16] sun.nio.ch.IOUtil.read
  [17] sun.nio.ch.IOUtil.read
  [18] sun.nio.ch.FileChannelImpl.readInternal
  [19] sun.nio.ch.FileChannelImpl.read
  [20] jdk.nio.zipfs.ZipFileSystem$1.read
  [21] fs2.io.file.FileHandleCompanionPlatform$$anon$1.read$$anonfun$1
  [22] fs2.io.file.FileHandleCompanionPlatform$$anon$1$$Lambda$720.0x0000000800eb7150.apply
  [23] cats.effect.IOFiber.$anonfun$8
  [24] cats.effect.IOFiber$$Lambda$668.0x0000000800ea8d20.apply
  [25] cats.effect.unsafe.WorkerThread.blockOn
  [26] scala.concurrent.package$.blocking
  [27] cats.effect.IOFiber.runLoop
  [28] cats.effect.IOFiber.autoCedeR
  [29] cats.effect.IOFiber.run
  [30] cats.effect.unsafe.WorkerThread.run

--- 2449520539 ns (0.24%), 244 samples
  [ 0] memset_[k]
  [ 1] dbuf_read_impl.constprop.0?[zfs]_[k]
  [ 2] dbuf_read?[zfs]_[k]
  [ 3] dmu_tx_check_ioerr?[zfs]_[k]
  [ 4] dmu_tx_count_write?[zfs]_[k]
  [ 5] dmu_tx_hold_write_by_dnode?[zfs]_[k]
  [ 6] zfs_write?[zfs]_[k]
  [ 7] zpl_iter_write?[zfs]_[k]
  [ 8] new_sync_write_[k]
  [ 9] vfs_write_[k]
  [10] ksys_write_[k]
  [11] __x64_sys_write_[k]
  [12] do_syscall_64_[k]
  [13] entry_SYSCALL_64_after_hwframe_[k]
  [14] write
  [15] sun.nio.ch.FileDispatcherImpl.write0
  [16] sun.nio.ch.FileDispatcherImpl.write
  [17] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.IOUtil.write
  [20] sun.nio.ch.FileChannelImpl.write
  [21] java.nio.channels.Channels.writeFullyImpl
  [22] java.nio.channels.Channels.writeFully
  [23] java.nio.channels.Channels$1.write
  [24] java.io.InputStream.transferTo
  [25] java.nio.file.Files.copy
  [26] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [27] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [28] jdk.nio.zipfs.ZipPath.newFileChannel
  [29] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [30] java.nio.channels.FileChannel.open
  [31] java.nio.channels.FileChannel.open
  [32] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [33] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$65.0x0000000800d354a0.apply
  [34] cats.effect.IOFiber.$anonfun$8
  [35] cats.effect.IOFiber$$Lambda$668.0x0000000800ea8d20.apply
  [36] cats.effect.unsafe.WorkerThread.blockOn
  [37] scala.concurrent.package$.blocking
  [38] cats.effect.IOFiber.runLoop
  [39] cats.effect.IOFiber.execR
  [40] cats.effect.IOFiber.run
  [41] cats.effect.unsafe.WorkerThread.run

--- 2345846853 ns (0.23%), 234 samples
  [ 0] __memset_avx2_unaligned_erms
  [ 1] MemAllocator::allocate() const
  [ 2] TypeArrayKlass::allocate_common(int, bool, JavaThread*)
  [ 3] JVMCIRuntime::new_array_common(JavaThread*, Klass*, int, bool)
  [ 4] fs2.Stream$CompileOps$$Lambda$414.0x0000000800e19310.apply
  [ 5] cats.Monad.map$$anonfun$1
  [ 6] cats.Monad$$Lambda$419.0x0000000800e1a250.apply
  [ 7] cats.effect.IOFiber.succeeded
  [ 8] cats.effect.IOFiber.runLoop
  [ 9] cats.effect.IOFiber.autoCedeR
  [10] cats.effect.IOFiber.run
  [11] cats.effect.unsafe.WorkerThread.run

--- 2266045662 ns (0.22%), 226 samples
  [ 0] /usr/lib/x86_64-linux-gnu/libz.so.1.2.11
  [ 1] [unknown]
  [ 2] java.util.zip.Inflater.inflateBytesBytes
  [ 3] java.util.zip.Inflater.inflate
  [ 4] java.util.zip.InflaterInputStream.read
  [ 5] java.io.InputStream.transferTo
  [ 6] java.nio.file.Files.copy
  [ 7] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [ 8] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [ 9] jdk.nio.zipfs.ZipPath.newFileChannel
  [10] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [11] java.nio.channels.FileChannel.open
  [12] java.nio.channels.FileChannel.open
  [13] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [14] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$65.0x0000000800d354a0.apply
  [15] cats.effect.IOFiber.$anonfun$8
  [16] cats.effect.IOFiber$$Lambda$668.0x0000000800ea8d20.apply
  [17] cats.effect.unsafe.WorkerThread.blockOn
  [18] scala.concurrent.package$.blocking
  [19] cats.effect.IOFiber.runLoop
  [20] cats.effect.IOFiber.execR
  [21] cats.effect.IOFiber.run
  [22] cats.effect.unsafe.WorkerThread.run

--- 2226098512 ns (0.21%), 222 samples
  [ 0] page_counter_try_charge_[k]
  [ 1] try_charge_memcg_[k]
  [ 2] obj_cgroup_charge_[k]
  [ 3] __kmalloc_[k]
  [ 4] inotify_handle_inode_event_[k]
  [ 5] fsnotify_handle_inode_event.isra.0_[k]
  [ 6] send_to_group_[k]
  [ 7] fsnotify_[k]
  [ 8] __fsnotify_parent_[k]
  [ 9] vfs_write_[k]
  [10] ksys_write_[k]
  [11] __x64_sys_write_[k]
  [12] do_syscall_64_[k]
  [13] entry_SYSCALL_64_after_hwframe_[k]
  [14] write
  [15] sun.nio.ch.FileDispatcherImpl.write0
  [16] sun.nio.ch.FileDispatcherImpl.write
  [17] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.IOUtil.write
  [20] sun.nio.ch.FileChannelImpl.write
  [21] java.nio.channels.Channels.writeFullyImpl
  [22] java.nio.channels.Channels.writeFully
  [23] java.nio.channels.Channels$1.write
  [24] java.io.InputStream.transferTo
  [25] java.nio.file.Files.copy
  [26] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [27] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [28] jdk.nio.zipfs.ZipPath.newFileChannel
  [29] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [30] java.nio.channels.FileChannel.open
  [31] java.nio.channels.FileChannel.open
  [32] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [33] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$65.0x0000000800d354a0.apply
  [34] cats.effect.IOFiber.$anonfun$8
  [35] cats.effect.IOFiber$$Lambda$668.0x0000000800ea8d20.apply
  [36] cats.effect.unsafe.WorkerThread.blockOn
  [37] scala.concurrent.package$.blocking
  [38] cats.effect.IOFiber.runLoop
  [39] cats.effect.IOFiber.execR
  [40] cats.effect.IOFiber.run
  [41] cats.effect.unsafe.WorkerThread.run

--- 2203367843 ns (0.21%), 220 samples
  [ 0] SpinPause
  [ 1] G1CMTask::do_marking_step(double, bool, bool)
  [ 2] G1CMConcurrentMarkingTask::work(unsigned int)
  [ 3] GangWorker::loop()
  [ 4] GangWorker::run()
  [ 5] Thread::call_run()
  [ 6] thread_native_entry(Thread*)
  [ 7] start_thread

--- 2185846146 ns (0.21%), 218 samples
  [ 0] jlong_disjoint_arraycopy
  [ 1] jdk.internal.misc.Unsafe.copyMemory0
  [ 2] jdk.internal.misc.Unsafe.copyMemory
  [ 3] jdk.internal.misc.ScopedMemoryAccess.copyMemoryInternal
  [ 4] jdk.internal.misc.ScopedMemoryAccess.copyMemory
  [ 5] java.nio.ByteBuffer.putBuffer
  [ 6] java.nio.ByteBuffer.put
  [ 7] java.nio.HeapByteBuffer.put
  [ 8] sun.nio.ch.IOUtil.read
  [ 9] sun.nio.ch.IOUtil.read
  [10] sun.nio.ch.FileChannelImpl.readInternal
  [11] sun.nio.ch.FileChannelImpl.read
  [12] jdk.nio.zipfs.ZipFileSystem$1.read
  [13] fs2.io.file.FileHandleCompanionPlatform$$anon$1.read$$anonfun$1
  [14] fs2.io.file.FileHandleCompanionPlatform$$anon$1$$Lambda$720.0x0000000800eb7150.apply
  [15] cats.effect.IOFiber.$anonfun$8
  [16] cats.effect.IOFiber$$Lambda$668.0x0000000800ea8d20.apply
  [17] cats.effect.unsafe.WorkerThread.blockOn
  [18] scala.concurrent.package$.blocking
  [19] cats.effect.IOFiber.runLoop
  [20] cats.effect.IOFiber.autoCedeR
  [21] cats.effect.IOFiber.run
  [22] cats.effect.unsafe.WorkerThread.run

--- 2175696893 ns (0.21%), 217 samples
  [ 0] java.lang.StringCoding.hasNegatives
  [ 1] java.lang.String.<init>
  [ 2] java.lang.String.<init>
  [ 3] fs2.text$utf8$.processSingleChunk$1
  [ 4] fs2.text$utf8$.doPull$1$$anonfun$1
  [ 5] fs2.text$utf8$$$Lambda$771.0x0000000800ed4800.apply
  [ 6] fs2.Pull$$anon$1.cont
  [ 7] fs2.Pull$.fs2$Pull$$$bindBindAux
  [ 8] fs2.Pull$BindBind.cont
  [ 9] fs2.Pull$ContP.apply
  [10] fs2.Pull$ContP.apply$
  [11] fs2.Pull$Bind.apply
  [12] fs2.Pull$Bind.apply
  [13] fs2.Pull$UnconsRunR$1.out$$anonfun$2
  [14] fs2.Pull$UnconsRunR$1$$Lambda$708.0x0000000800eb2820.apply
  [15] fs2.Pull$.interruptGuard$1$$anonfun$1
  [16] fs2.Pull$$$Lambda$518.0x0000000800e3f6e0.apply
  [17] cats.effect.IOFiber.succeeded
  [18] cats.effect.IOFiber.runLoop
  [19] cats.effect.IOFiber.autoCedeR
  [20] cats.effect.IOFiber.run
  [21] cats.effect.unsafe.WorkerThread.run

--- 2089269067 ns (0.20%), 208 samples
  [ 0] copy_user_generic_string_[k]
  [ 1] zfs_uiomove_iter?[zfs]_[k]
  [ 2] zfs_uiomove?[zfs]_[k]
  [ 3] dmu_write_uio_dnode?[zfs]_[k]
  [ 4] dmu_write_uio_dbuf?[zfs]_[k]
  [ 5] zfs_write?[zfs]_[k]
  [ 6] zpl_iter_write?[zfs]_[k]
  [ 7] new_sync_write_[k]
  [ 8] vfs_write_[k]
  [ 9] ksys_write_[k]
  [10] __x64_sys_write_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] write
  [14] sun.nio.ch.FileDispatcherImpl.write0
  [15] sun.nio.ch.FileDispatcherImpl.write
  [16] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.FileChannelImpl.write
  [20] java.nio.channels.Channels.writeFullyImpl
  [21] java.nio.channels.Channels.writeFully
  [22] java.nio.channels.Channels$1.write
  [23] java.io.InputStream.transferTo
  [24] java.nio.file.Files.copy
  [25] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [26] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [27] jdk.nio.zipfs.ZipPath.newFileChannel
  [28] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [29] java.nio.channels.FileChannel.open
  [30] java.nio.channels.FileChannel.open
  [31] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [32] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$65.0x0000000800d354a0.apply
  [33] cats.effect.IOFiber.$anonfun$8
  [34] cats.effect.IOFiber$$Lambda$668.0x0000000800ea8d20.apply
  [35] cats.effect.unsafe.WorkerThread.blockOn
  [36] scala.concurrent.package$.blocking
  [37] cats.effect.IOFiber.runLoop
  [38] cats.effect.IOFiber.execR
  [39] cats.effect.IOFiber.run
  [40] cats.effect.unsafe.WorkerThread.run

--- 1927061783 ns (0.18%), 192 samples
  [ 0] zfs_write?[zfs]_[k]
  [ 1] zpl_iter_write?[zfs]_[k]
  [ 2] new_sync_write_[k]
  [ 3] vfs_write_[k]
  [ 4] ksys_write_[k]
  [ 5] __x64_sys_write_[k]
  [ 6] do_syscall_64_[k]
  [ 7] entry_SYSCALL_64_after_hwframe_[k]
  [ 8] write
  [ 9] sun.nio.ch.FileDispatcherImpl.write0
  [10] sun.nio.ch.FileDispatcherImpl.write
  [11] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [12] sun.nio.ch.IOUtil.write
  [13] sun.nio.ch.IOUtil.write
  [14] sun.nio.ch.FileChannelImpl.write
  [15] java.nio.channels.Channels.writeFullyImpl
  [16] java.nio.channels.Channels.writeFully
  [17] java.nio.channels.Channels$1.write
  [18] java.io.InputStream.transferTo
  [19] java.nio.file.Files.copy
  [20] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [21] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [22] jdk.nio.zipfs.ZipPath.newFileChannel
  [23] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [24] java.nio.channels.FileChannel.open
  [25] java.nio.channels.FileChannel.open
  [26] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [27] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$65.0x0000000800d354a0.apply
  [28] cats.effect.IOFiber.$anonfun$8
  [29] cats.effect.IOFiber$$Lambda$668.0x0000000800ea8d20.apply
  [30] cats.effect.unsafe.WorkerThread.blockOn
  [31] scala.concurrent.package$.blocking
  [32] cats.effect.IOFiber.runLoop
  [33] cats.effect.IOFiber.execR
  [34] cats.effect.IOFiber.run
  [35] cats.effect.unsafe.WorkerThread.run

--- 1794724581 ns (0.17%), 179 samples
  [ 0] java.lang.System.arraycopy
  [ 1] java.lang.String.getBytes
  [ 2] java.lang.AbstractStringBuilder.putStringAt
  [ 3] java.lang.AbstractStringBuilder.putStringAt
  [ 4] java.lang.AbstractStringBuilder.append
  [ 5] java.lang.StringBuilder.append
  [ 6] java.lang.StringBuilder.append
  [ 7] scala.collection.mutable.StringBuilder.addAll
  [ 8] scala.collection.mutable.StringBuilder.$plus$plus$eq
  [ 9] fs2.Collector$Builder$$anon$4.$plus$eq$$anonfun$1
  [10] fs2.Collector$Builder$$anon$4$$Lambda$794.0x0000000800ed9080.applyVoid
  [11] scala.runtime.function.JProcedure1.apply
  [12] scala.runtime.function.JProcedure1.apply
  [13] fs2.Chunk.foreach
  [14] fs2.Collector$Builder$$anon$4.$plus$eq
  [15] fs2.Stream$CompileOps.to$$anonfun$1$$anonfun$1
  [16] fs2.Stream$CompileOps$$Lambda$367.0x0000000800e03c48.apply
  [17] fs2.Pull$OuterRun$1.out
  [18] fs2.Pull$.go$1$$anonfun$1
  [19] fs2.Pull$$$Lambda$698.0x0000000800eb0220.apply
  [20] fs2.Pull$.interruptGuard$1$$anonfun$1
  [21] fs2.Pull$$$Lambda$518.0x0000000800e3f6e0.apply
  [22] cats.effect.IOFiber.succeeded
  [23] cats.effect.IOFiber.runLoop
  [24] cats.effect.IOFiber.autoCedeR
  [25] cats.effect.IOFiber.run
  [26] cats.effect.unsafe.WorkerThread.run

--- 1656763247 ns (0.16%), 165 samples
  [ 0] inotify_handle_inode_event_[k]
  [ 1] fsnotify_handle_inode_event.isra.0_[k]
  [ 2] send_to_group_[k]
  [ 3] fsnotify_[k]
  [ 4] __fsnotify_parent_[k]
  [ 5] vfs_write_[k]
  [ 6] ksys_write_[k]
  [ 7] __x64_sys_write_[k]
  [ 8] do_syscall_64_[k]
  [ 9] entry_SYSCALL_64_after_hwframe_[k]
  [10] write
  [11] sun.nio.ch.FileDispatcherImpl.write0
  [12] sun.nio.ch.FileDispatcherImpl.write
  [13] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [14] sun.nio.ch.IOUtil.write
  [15] sun.nio.ch.IOUtil.write
  [16] sun.nio.ch.FileChannelImpl.write
  [17] java.nio.channels.Channels.writeFullyImpl
  [18] java.nio.channels.Channels.writeFully
  [19] java.nio.channels.Channels$1.write
  [20] java.io.InputStream.transferTo
  [21] java.nio.file.Files.copy
  [22] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [23] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [24] jdk.nio.zipfs.ZipPath.newFileChannel
  [25] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [26] java.nio.channels.FileChannel.open
  [27] java.nio.channels.FileChannel.open
  [28] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [29] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$65.0x0000000800d354a0.apply
  [30] cats.effect.IOFiber.$anonfun$8
  [31] cats.effect.IOFiber$$Lambda$668.0x0000000800ea8d20.apply
  [32] cats.effect.unsafe.WorkerThread.blockOn
  [33] scala.concurrent.package$.blocking
  [34] cats.effect.IOFiber.runLoop
  [35] cats.effect.IOFiber.execR
  [36] cats.effect.IOFiber.run
  [37] cats.effect.unsafe.WorkerThread.run

--- 1635847595 ns (0.16%), 163 samples
  [ 0] try_charge_memcg_[k]
  [ 1] obj_cgroup_charge_[k]
  [ 2] __kmalloc_[k]
  [ 3] inotify_handle_inode_event_[k]
  [ 4] fsnotify_handle_inode_event.isra.0_[k]
  [ 5] send_to_group_[k]
  [ 6] fsnotify_[k]
  [ 7] __fsnotify_parent_[k]
  [ 8] vfs_write_[k]
  [ 9] ksys_write_[k]
  [10] __x64_sys_write_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] write
  [14] sun.nio.ch.FileDispatcherImpl.write0
  [15] sun.nio.ch.FileDispatcherImpl.write
  [16] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.FileChannelImpl.write
  [20] java.nio.channels.Channels.writeFullyImpl
  [21] java.nio.channels.Channels.writeFully
  [22] java.nio.channels.Channels$1.write
  [23] java.io.InputStream.transferTo
  [24] java.nio.file.Files.copy
  [25] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [26] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [27] jdk.nio.zipfs.ZipPath.newFileChannel
  [28] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [29] java.nio.channels.FileChannel.open
  [30] java.nio.channels.FileChannel.open
  [31] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [32] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$65.0x0000000800d354a0.apply
  [33] cats.effect.IOFiber.$anonfun$8
  [34] cats.effect.IOFiber$$Lambda$668.0x0000000800ea8d20.apply
  [35] cats.effect.unsafe.WorkerThread.blockOn
  [36] scala.concurrent.package$.blocking
  [37] cats.effect.IOFiber.runLoop
  [38] cats.effect.IOFiber.execR
  [39] cats.effect.IOFiber.run
  [40] cats.effect.unsafe.WorkerThread.run

--- 1566059553 ns (0.15%), 156 samples
  [ 0] copy_user_generic_string_[k]
  [ 1] zfs_uiomove_iter?[zfs]_[k]
  [ 2] zfs_uiomove?[zfs]_[k]
  [ 3] dmu_read_uio_dnode?[zfs]_[k]
  [ 4] dmu_read_uio_dbuf?[zfs]_[k]
  [ 5] zfs_read?[zfs]_[k]
  [ 6] zpl_iter_read?[zfs]_[k]
  [ 7] new_sync_read_[k]
  [ 8] vfs_read_[k]
  [ 9] __x64_sys_pread64_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] __libc_pread64
  [13] sun.nio.ch.FileDispatcherImpl.pread0
  [14] sun.nio.ch.FileDispatcherImpl.pread
  [15] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [16] sun.nio.ch.IOUtil.read
  [17] sun.nio.ch.IOUtil.read
  [18] sun.nio.ch.FileChannelImpl.readInternal
  [19] sun.nio.ch.FileChannelImpl.read
  [20] jdk.nio.zipfs.ZipFileSystem$1.read
  [21] fs2.io.file.FileHandleCompanionPlatform$$anon$1.read$$anonfun$1
  [22] fs2.io.file.FileHandleCompanionPlatform$$anon$1$$Lambda$720.0x0000000800eb7150.apply
  [23] cats.effect.IOFiber.$anonfun$8
  [24] cats.effect.IOFiber$$Lambda$668.0x0000000800ea8d20.apply
  [25] cats.effect.unsafe.WorkerThread.blockOn
  [26] scala.concurrent.package$.blocking
  [27] cats.effect.IOFiber.runLoop
  [28] cats.effect.IOFiber.execR
  [29] cats.effect.IOFiber.run
  [30] cats.effect.unsafe.WorkerThread.run

--- 1484795028 ns (0.14%), 148 samples
  [ 0] G1CMTask::drain_local_queue(bool) [clone .part.0] [clone .constprop.1]
  [ 1] G1CMTask::do_marking_step(double, bool, bool)
  [ 2] G1CMConcurrentMarkingTask::work(unsigned int)
  [ 3] GangWorker::loop()
  [ 4] GangWorker::run()
  [ 5] Thread::call_run()
  [ 6] thread_native_entry(Thread*)
  [ 7] start_thread

--- 1473665004 ns (0.14%), 147 samples
  [ 0] /usr/lib/x86_64-linux-gnu/libz.so.1.2.11
  [ 1] java.util.zip.Inflater.inflateBytesBytes
  [ 2] java.util.zip.Inflater.inflate
  [ 3] java.util.zip.InflaterInputStream.read
  [ 4] java.io.InputStream.transferTo
  [ 5] java.nio.file.Files.copy
  [ 6] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [ 7] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [ 8] jdk.nio.zipfs.ZipPath.newFileChannel
  [ 9] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [10] java.nio.channels.FileChannel.open
  [11] java.nio.channels.FileChannel.open
  [12] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [13] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$65.0x0000000800d354a0.apply
  [14] cats.effect.IOFiber.$anonfun$8
  [15] cats.effect.IOFiber$$Lambda$668.0x0000000800ea8d20.apply
  [16] cats.effect.unsafe.WorkerThread.blockOn
  [17] scala.concurrent.package$.blocking
  [18] cats.effect.IOFiber.runLoop
  [19] cats.effect.IOFiber.execR
  [20] cats.effect.IOFiber.run
  [21] cats.effect.unsafe.WorkerThread.run

--- 1455625140 ns (0.14%), 145 samples
  [ 0] zil_aitx_compare?[zfs]_[k]
  [ 1] zil_itx_assign?[zfs]_[k]
  [ 2] zfs_log_write?[zfs]_[k]
  [ 3] zfs_write?[zfs]_[k]
  [ 4] zpl_iter_write?[zfs]_[k]
  [ 5] new_sync_write_[k]
  [ 6] vfs_write_[k]
  [ 7] ksys_write_[k]
  [ 8] __x64_sys_write_[k]
  [ 9] do_syscall_64_[k]
  [10] entry_SYSCALL_64_after_hwframe_[k]
  [11] write
  [12] sun.nio.ch.FileDispatcherImpl.write0
  [13] sun.nio.ch.FileDispatcherImpl.write
  [14] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [15] sun.nio.ch.IOUtil.write
  [16] sun.nio.ch.IOUtil.write
  [17] sun.nio.ch.FileChannelImpl.write
  [18] java.nio.channels.Channels.writeFullyImpl
  [19] java.nio.channels.Channels.writeFully
  [20] java.nio.channels.Channels$1.write
  [21] java.io.InputStream.transferTo
  [22] java.nio.file.Files.copy
  [23] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [24] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [25] jdk.nio.zipfs.ZipPath.newFileChannel
  [26] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [27] java.nio.channels.FileChannel.open
  [28] java.nio.channels.FileChannel.open
  [29] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [30] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$65.0x0000000800d354a0.apply
  [31] cats.effect.IOFiber.$anonfun$8
  [32] cats.effect.IOFiber$$Lambda$668.0x0000000800ea8d20.apply
  [33] cats.effect.unsafe.WorkerThread.blockOn
  [34] scala.concurrent.package$.blocking
  [35] cats.effect.IOFiber.runLoop
  [36] cats.effect.IOFiber.execR
  [37] cats.effect.IOFiber.run
  [38] cats.effect.unsafe.WorkerThread.run

--- 1454488419 ns (0.14%), 145 samples
  [ 0] native_queued_spin_lock_slowpath.part.0_[k]
  [ 1] native_queued_spin_lock_slowpath_[k]
  [ 2] _raw_spin_lock_[k]
  [ 3] fsnotify_insert_event_[k]
  [ 4] inotify_handle_inode_event_[k]
  [ 5] fsnotify_handle_inode_event.isra.0_[k]
  [ 6] send_to_group_[k]
  [ 7] fsnotify_[k]
  [ 8] __fsnotify_parent_[k]
  [ 9] vfs_write_[k]
  [10] ksys_write_[k]
  [11] __x64_sys_write_[k]
  [12] do_syscall_64_[k]
  [13] entry_SYSCALL_64_after_hwframe_[k]
  [14] write
  [15] sun.nio.ch.FileDispatcherImpl.write0
  [16] sun.nio.ch.FileDispatcherImpl.write
  [17] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.IOUtil.write
  [20] sun.nio.ch.FileChannelImpl.write
  [21] java.nio.channels.Channels.writeFullyImpl
  [22] java.nio.channels.Channels.writeFully
  [23] java.nio.channels.Channels$1.write
  [24] java.io.InputStream.transferTo
  [25] java.nio.file.Files.copy
  [26] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [27] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [28] jdk.nio.zipfs.ZipPath.newFileChannel
  [29] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [30] java.nio.channels.FileChannel.open
  [31] java.nio.channels.FileChannel.open
  [32] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [33] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$65.0x0000000800d354a0.apply
  [34] cats.effect.IOFiber.$anonfun$8
  [35] cats.effect.IOFiber$$Lambda$668.0x0000000800ea8d20.apply
  [36] cats.effect.unsafe.WorkerThread.blockOn
  [37] scala.concurrent.package$.blocking
  [38] cats.effect.IOFiber.runLoop
  [39] cats.effect.IOFiber.execR
  [40] cats.effect.IOFiber.run
  [41] cats.effect.unsafe.WorkerThread.run

--- 1442734418 ns (0.14%), 144 samples
  [ 0] __memset_avx2_unaligned_erms
  [ 1] MemAllocator::allocate() const
  [ 2] TypeArrayKlass::allocate_common(int, bool, JavaThread*)
  [ 3] JVMCIRuntime::new_array_common(JavaThread*, Klass*, int, bool)
  [ 4] fs2.io.file.FileHandleCompanionPlatform$$anon$1.read$$anonfun$1
  [ 5] fs2.io.file.FileHandleCompanionPlatform$$anon$1$$Lambda$720.0x0000000800eb7150.apply
  [ 6] cats.effect.IOFiber.$anonfun$8
  [ 7] cats.effect.IOFiber$$Lambda$668.0x0000000800ea8d20.apply
  [ 8] cats.effect.unsafe.WorkerThread.blockOn
  [ 9] scala.concurrent.package$.blocking
  [10] cats.effect.IOFiber.runLoop
  [11] cats.effect.IOFiber.autoCedeR
  [12] cats.effect.IOFiber.run
  [13] cats.effect.unsafe.WorkerThread.run

--- 1434277336 ns (0.14%), 143 samples
  [ 0] memmove_[k]
  [ 1] dnode_set_blksz?[zfs]_[k]
  [ 2] dmu_object_set_blocksize?[zfs]_[k]
  [ 3] zfs_grow_blocksize?[zfs]_[k]
  [ 4] zfs_write?[zfs]_[k]
  [ 5] zpl_iter_write?[zfs]_[k]
  [ 6] new_sync_write_[k]
  [ 7] vfs_write_[k]
  [ 8] ksys_write_[k]
  [ 9] __x64_sys_write_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] write
  [13] sun.nio.ch.FileDispatcherImpl.write0
  [14] sun.nio.ch.FileDispatcherImpl.write
  [15] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [16] sun.nio.ch.IOUtil.write
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.FileChannelImpl.write
  [19] java.nio.channels.Channels.writeFullyImpl
  [20] java.nio.channels.Channels.writeFully
  [21] java.nio.channels.Channels$1.write
  [22] java.io.InputStream.transferTo
  [23] java.nio.file.Files.copy
  [24] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [25] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [26] jdk.nio.zipfs.ZipPath.newFileChannel
  [27] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [28] java.nio.channels.FileChannel.open
  [29] java.nio.channels.FileChannel.open
  [30] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [31] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$65.0x0000000800d354a0.apply
  [32] cats.effect.IOFiber.$anonfun$8
  [33] cats.effect.IOFiber$$Lambda$668.0x0000000800ea8d20.apply
  [34] cats.effect.unsafe.WorkerThread.blockOn
  [35] scala.concurrent.package$.blocking
  [36] cats.effect.IOFiber.runLoop
  [37] cats.effect.IOFiber.execR
  [38] cats.effect.IOFiber.run
  [39] cats.effect.unsafe.WorkerThread.run

--- 1423731903 ns (0.14%), 142 samples
  [ 0] java.nio.HeapByteBuffer.<init>
  [ 1] java.nio.ByteBuffer.allocate
  [ 2] fs2.io.file.FileHandleCompanionPlatform$$anon$1.read$$anonfun$1
  [ 3] fs2.io.file.FileHandleCompanionPlatform$$anon$1$$Lambda$720.0x0000000800eb7150.apply
  [ 4] cats.effect.IOFiber.$anonfun$8
  [ 5] cats.effect.IOFiber$$Lambda$668.0x0000000800ea8d20.apply
  [ 6] cats.effect.unsafe.WorkerThread.blockOn
  [ 7] scala.concurrent.package$.blocking
  [ 8] cats.effect.IOFiber.runLoop
  [ 9] cats.effect.IOFiber.autoCedeR
  [10] cats.effect.IOFiber.run
  [11] cats.effect.unsafe.WorkerThread.run

--- 1415474350 ns (0.14%), 141 samples
  [ 0] find_vmap_area_[k]
  [ 1] check_heap_object_[k]
  [ 2] __check_object_size.part.0_[k]
  [ 3] __check_object_size_[k]
  [ 4] zfs_uiomove_iter?[zfs]_[k]
  [ 5] zfs_uiomove?[zfs]_[k]
  [ 6] dmu_read_uio_dnode?[zfs]_[k]
  [ 7] dmu_read_uio_dbuf?[zfs]_[k]
  [ 8] mappedread?[zfs]_[k]
  [ 9] zfs_read?[zfs]_[k]
  [10] zpl_iter_read?[zfs]_[k]
  [11] new_sync_read_[k]
  [12] vfs_read_[k]
  [13] __x64_sys_pread64_[k]
  [14] do_syscall_64_[k]
  [15] entry_SYSCALL_64_after_hwframe_[k]
  [16] __libc_pread64
  [17] sun.nio.ch.FileDispatcherImpl.pread0
  [18] sun.nio.ch.FileDispatcherImpl.pread
  [19] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [20] sun.nio.ch.IOUtil.read
  [21] sun.nio.ch.IOUtil.read
  [22] sun.nio.ch.FileChannelImpl.readInternal
  [23] sun.nio.ch.FileChannelImpl.read
  [24] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [25] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [26] jdk.nio.zipfs.ZipFileSystem$2.fill
  [27] java.util.zip.InflaterInputStream.read
  [28] java.io.InputStream.transferTo
  [29] java.nio.file.Files.copy
  [30] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [31] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [32] jdk.nio.zipfs.ZipPath.newFileChannel
  [33] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [34] java.nio.channels.FileChannel.open
  [35] java.nio.channels.FileChannel.open
  [36] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [37] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$65.0x0000000800d354a0.apply
  [38] cats.effect.IOFiber.$anonfun$8
  [39] cats.effect.IOFiber$$Lambda$668.0x0000000800ea8d20.apply
  [40] cats.effect.unsafe.WorkerThread.blockOn
  [41] scala.concurrent.package$.blocking
  [42] cats.effect.IOFiber.runLoop
  [43] cats.effect.IOFiber.execR
  [44] cats.effect.IOFiber.run
  [45] cats.effect.unsafe.WorkerThread.run

--- 1363253786 ns (0.13%), 136 samples
  [ 0] memcg_slab_post_alloc_hook_[k]
  [ 1] __kmalloc_[k]
  [ 2] inotify_handle_inode_event_[k]
  [ 3] fsnotify_handle_inode_event.isra.0_[k]
  [ 4] send_to_group_[k]
  [ 5] fsnotify_[k]
  [ 6] __fsnotify_parent_[k]
  [ 7] vfs_write_[k]
  [ 8] ksys_write_[k]
  [ 9] __x64_sys_write_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] write
  [13] sun.nio.ch.FileDispatcherImpl.write0
  [14] sun.nio.ch.FileDispatcherImpl.write
  [15] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [16] sun.nio.ch.IOUtil.write
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.FileChannelImpl.write
  [19] java.nio.channels.Channels.writeFullyImpl
  [20] java.nio.channels.Channels.writeFully
  [21] java.nio.channels.Channels$1.write
  [22] java.io.InputStream.transferTo
  [23] java.nio.file.Files.copy
  [24] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [25] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [26] jdk.nio.zipfs.ZipPath.newFileChannel
  [27] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [28] java.nio.channels.FileChannel.open
  [29] java.nio.channels.FileChannel.open
  [30] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [31] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$65.0x0000000800d354a0.apply
  [32] cats.effect.IOFiber.$anonfun$8
  [33] cats.effect.IOFiber$$Lambda$668.0x0000000800ea8d20.apply
  [34] cats.effect.unsafe.WorkerThread.blockOn
  [35] scala.concurrent.package$.blocking
  [36] cats.effect.IOFiber.runLoop
  [37] cats.effect.IOFiber.execR
  [38] cats.effect.IOFiber.run
  [39] cats.effect.unsafe.WorkerThread.run

--- 1353164668 ns (0.13%), 135 samples
  [ 0] __memset_avx2_unaligned_erms
  [ 1] MemAllocator::allocate() const
  [ 2] TypeArrayKlass::allocate_common(int, bool, JavaThread*)
  [ 3] JVMCIRuntime::new_array_common(JavaThread*, Klass*, int, bool)
  [ 4] fs2.text$utf8$.processSingleChunk$1
  [ 5] fs2.text$utf8$.doPull$1$$anonfun$1
  [ 6] fs2.text$utf8$$$Lambda$771.0x0000000800ed4800.apply
  [ 7] fs2.Pull$$anon$1.cont
  [ 8] fs2.Pull$.fs2$Pull$$$bindBindAux
  [ 9] fs2.Pull$BindBind.cont
  [10] fs2.Pull$ContP.apply
  [11] fs2.Pull$ContP.apply$
  [12] fs2.Pull$Bind.apply
  [13] fs2.Pull$Bind.apply
  [14] fs2.Pull$UnconsRunR$1.out$$anonfun$2
  [15] fs2.Pull$UnconsRunR$1$$Lambda$708.0x0000000800eb2820.apply
  [16] fs2.Pull$.interruptGuard$1$$anonfun$1
  [17] fs2.Pull$$$Lambda$518.0x0000000800e3f6e0.apply
  [18] cats.effect.IOFiber.succeeded
  [19] cats.effect.IOFiber.runLoop
  [20] cats.effect.IOFiber.autoCedeR
  [21] cats.effect.IOFiber.run
  [22] cats.effect.unsafe.WorkerThread.run

--- 1332662365 ns (0.13%), 133 samples
  [ 0] __memset_avx2_unaligned_erms
  [ 1] MemAllocator::allocate() const
  [ 2] TypeArrayKlass::allocate_common(int, bool, JavaThread*)
  [ 3] JVMCIRuntime::new_array_common(JavaThread*, Klass*, int, bool)
  [ 4] java.lang.Math.max
  [ 5] scala.runtime.RichInt$.max$extension
  [ 6] fs2.text$utf8$.lastIncompleteBytes$1
  [ 7] fs2.text$utf8$.processSingleChunk$1
  [ 8] fs2.text$utf8$.doPull$1$$anonfun$1
  [ 9] fs2.text$utf8$$$Lambda$771.0x0000000800ed4800.apply
  [10] fs2.Pull$$anon$1.cont
  [11] fs2.Pull$.fs2$Pull$$$bindBindAux
  [12] fs2.Pull$BindBind.cont
  [13] fs2.Pull$ContP.apply
  [14] fs2.Pull$ContP.apply$
  [15] fs2.Pull$Bind.apply
  [16] fs2.Pull$Bind.apply
  [17] fs2.Pull$UnconsRunR$1.out$$anonfun$2
  [18] fs2.Pull$UnconsRunR$1$$Lambda$708.0x0000000800eb2820.apply
  [19] fs2.Pull$.interruptGuard$1$$anonfun$1
  [20] fs2.Pull$$$Lambda$518.0x0000000800e3f6e0.apply
  [21] cats.effect.IOFiber.succeeded
  [22] cats.effect.IOFiber.runLoop
  [23] cats.effect.IOFiber.autoCedeR
  [24] cats.effect.IOFiber.run
  [25] cats.effect.unsafe.WorkerThread.run

--- 1322742425 ns (0.13%), 132 samples
  [ 0] TaskTerminator::offer_termination(TerminatorTerminator*)
  [ 1] G1CMTask::do_marking_step(double, bool, bool)
  [ 2] G1CMConcurrentMarkingTask::work(unsigned int)
  [ 3] GangWorker::loop()
  [ 4] GangWorker::run()
  [ 5] Thread::call_run()
  [ 6] thread_native_entry(Thread*)
  [ 7] start_thread

--- 1314448723 ns (0.13%), 131 samples
  [ 0] vfs_write_[k]
  [ 1] ksys_write_[k]
  [ 2] __x64_sys_write_[k]
  [ 3] do_syscall_64_[k]
  [ 4] entry_SYSCALL_64_after_hwframe_[k]
  [ 5] write
  [ 6] sun.nio.ch.FileDispatcherImpl.write0
  [ 7] sun.nio.ch.FileDispatcherImpl.write
  [ 8] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [ 9] sun.nio.ch.IOUtil.write
  [10] sun.nio.ch.IOUtil.write
  [11] sun.nio.ch.FileChannelImpl.write
  [12] java.nio.channels.Channels.writeFullyImpl
  [13] java.nio.channels.Channels.writeFully
  [14] java.nio.channels.Channels$1.write
  [15] java.io.InputStream.transferTo
  [16] java.nio.file.Files.copy
  [17] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [18] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [19] jdk.nio.zipfs.ZipPath.newFileChannel
  [20] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [21] java.nio.channels.FileChannel.open
  [22] java.nio.channels.FileChannel.open
  [23] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [24] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$65.0x0000000800d354a0.apply
  [25] cats.effect.IOFiber.$anonfun$8
  [26] cats.effect.IOFiber$$Lambda$668.0x0000000800ea8d20.apply
  [27] cats.effect.unsafe.WorkerThread.blockOn
  [28] scala.concurrent.package$.blocking
  [29] cats.effect.IOFiber.runLoop
  [30] cats.effect.IOFiber.execR
  [31] cats.effect.IOFiber.run
  [32] cats.effect.unsafe.WorkerThread.run

--- 1284002810 ns (0.12%), 128 samples
  [ 0] __kmalloc_[k]
  [ 1] inotify_handle_inode_event_[k]
  [ 2] fsnotify_handle_inode_event.isra.0_[k]
  [ 3] send_to_group_[k]
  [ 4] fsnotify_[k]
  [ 5] __fsnotify_parent_[k]
  [ 6] vfs_write_[k]
  [ 7] ksys_write_[k]
  [ 8] __x64_sys_write_[k]
  [ 9] do_syscall_64_[k]
  [10] entry_SYSCALL_64_after_hwframe_[k]
  [11] write
  [12] sun.nio.ch.FileDispatcherImpl.write0
  [13] sun.nio.ch.FileDispatcherImpl.write
  [14] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [15] sun.nio.ch.IOUtil.write
  [16] sun.nio.ch.IOUtil.write
  [17] sun.nio.ch.FileChannelImpl.write
  [18] java.nio.channels.Channels.writeFullyImpl
  [19] java.nio.channels.Channels.writeFully
  [20] java.nio.channels.Channels$1.write
  [21] java.io.InputStream.transferTo
  [22] java.nio.file.Files.copy
  [23] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [24] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [25] jdk.nio.zipfs.ZipPath.newFileChannel
  [26] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [27] java.nio.channels.FileChannel.open
  [28] java.nio.channels.FileChannel.open
  [29] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [30] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$65.0x0000000800d354a0.apply
  [31] cats.effect.IOFiber.$anonfun$8
  [32] cats.effect.IOFiber$$Lambda$668.0x0000000800ea8d20.apply
  [33] cats.effect.unsafe.WorkerThread.blockOn
  [34] scala.concurrent.package$.blocking
  [35] cats.effect.IOFiber.runLoop
  [36] cats.effect.IOFiber.execR
  [37] cats.effect.IOFiber.run
  [38] cats.effect.unsafe.WorkerThread.run

--- 1263706252 ns (0.12%), 126 samples
  [ 0] java.util.Arrays.copyOfRange
  [ 1] java.lang.String.<init>
  [ 2] java.lang.String.<init>
  [ 3] fs2.text$utf8$.processSingleChunk$1
  [ 4] fs2.text$utf8$.doPull$1$$anonfun$1
  [ 5] fs2.text$utf8$$$Lambda$771.0x0000000800ed4800.apply
  [ 6] fs2.Pull$$anon$1.cont
  [ 7] fs2.Pull$.fs2$Pull$$$bindBindAux
  [ 8] fs2.Pull$BindBind.cont
  [ 9] fs2.Pull$ContP.apply
  [10] fs2.Pull$ContP.apply$
  [11] fs2.Pull$Bind.apply
  [12] fs2.Pull$Bind.apply
  [13] fs2.Pull$UnconsRunR$1.out$$anonfun$2
  [14] fs2.Pull$UnconsRunR$1$$Lambda$708.0x0000000800eb2820.apply
  [15] fs2.Pull$.interruptGuard$1$$anonfun$1
  [16] fs2.Pull$$$Lambda$518.0x0000000800e3f6e0.apply
  [17] cats.effect.IOFiber.succeeded
  [18] cats.effect.IOFiber.runLoop
  [19] cats.effect.IOFiber.autoCedeR
  [20] cats.effect.IOFiber.run
  [21] cats.effect.unsafe.WorkerThread.run

--- 1263546990 ns (0.12%), 126 samples
  [ 0] scala.reflect.ManifestFactory$ByteManifest.newArray
  [ 1] scala.reflect.ManifestFactory$ByteManifest.newArray
  [ 2] scala.runtime.Arrays$.newGenericArray
  [ 3] fs2.Chunk.toArray
  [ 4] fs2.text$utf8$.processSingleChunk$1
  [ 5] fs2.text$utf8$.doPull$1$$anonfun$1
  [ 6] fs2.text$utf8$$$Lambda$771.0x0000000800ed4800.apply
  [ 7] fs2.Pull$$anon$1.cont
  [ 8] fs2.Pull$.fs2$Pull$$$bindBindAux
  [ 9] fs2.Pull$BindBind.cont
  [10] fs2.Pull$ContP.apply
  [11] fs2.Pull$ContP.apply$
  [12] fs2.Pull$Bind.apply
  [13] fs2.Pull$Bind.apply
  [14] fs2.Pull$UnconsRunR$1.out$$anonfun$2
  [15] fs2.Pull$UnconsRunR$1$$Lambda$708.0x0000000800eb2820.apply
  [16] fs2.Pull$.interruptGuard$1$$anonfun$1
  [17] fs2.Pull$$$Lambda$518.0x0000000800e3f6e0.apply
  [18] cats.effect.IOFiber.succeeded
  [19] cats.effect.IOFiber.runLoop
  [20] cats.effect.IOFiber.autoCedeR
  [21] cats.effect.IOFiber.run
  [22] cats.effect.unsafe.WorkerThread.run

--- 1253811184 ns (0.12%), 125 samples
  [ 0] jlong_disjoint_arraycopy
  [ 1] jdk.internal.misc.Unsafe.copyMemory0
  [ 2] jdk.internal.misc.Unsafe.copyMemory
  [ 3] jdk.internal.misc.ScopedMemoryAccess.copyMemoryInternal
  [ 4] jdk.internal.misc.ScopedMemoryAccess.copyMemory
  [ 5] java.nio.ByteBuffer.putBuffer
  [ 6] java.nio.ByteBuffer.put
  [ 7] sun.nio.ch.IOUtil.write
  [ 8] sun.nio.ch.IOUtil.write
  [ 9] sun.nio.ch.FileChannelImpl.write
  [10] java.nio.channels.Channels.writeFullyImpl
  [11] java.nio.channels.Channels.writeFully
  [12] java.nio.channels.Channels$1.write
  [13] java.io.InputStream.transferTo
  [14] java.nio.file.Files.copy
  [15] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [16] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [17] jdk.nio.zipfs.ZipPath.newFileChannel
  [18] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [19] java.nio.channels.FileChannel.open
  [20] java.nio.channels.FileChannel.open
  [21] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [22] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$65.0x0000000800d354a0.apply
  [23] cats.effect.IOFiber.$anonfun$8
  [24] cats.effect.IOFiber$$Lambda$668.0x0000000800ea8d20.apply
  [25] cats.effect.unsafe.WorkerThread.blockOn
  [26] scala.concurrent.package$.blocking
  [27] cats.effect.IOFiber.runLoop
  [28] cats.effect.IOFiber.execR
  [29] cats.effect.IOFiber.run
  [30] cats.effect.unsafe.WorkerThread.run

--- 1205248799 ns (0.12%), 120 samples
  [ 0] memset_[k]
  [ 1] spl_kmem_cache_alloc?[spl]_[k]
  [ 2] zio_data_buf_alloc?[zfs]_[k]
  [ 3] zil_itx_create?[zfs]_[k]
  [ 4] zfs_log_write?[zfs]_[k]
  [ 5] zfs_write?[zfs]_[k]
  [ 6] zpl_iter_write?[zfs]_[k]
  [ 7] new_sync_write_[k]
  [ 8] vfs_write_[k]
  [ 9] ksys_write_[k]
  [10] __x64_sys_write_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] write
  [14] sun.nio.ch.FileDispatcherImpl.write0
  [15] sun.nio.ch.FileDispatcherImpl.write
  [16] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.FileChannelImpl.write
  [20] java.nio.channels.Channels.writeFullyImpl
  [21] java.nio.channels.Channels.writeFully
  [22] java.nio.channels.Channels$1.write
  [23] java.io.InputStream.transferTo
  [24] java.nio.file.Files.copy
  [25] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [26] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [27] jdk.nio.zipfs.ZipPath.newFileChannel
  [28] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [29] java.nio.channels.FileChannel.open
  [30] java.nio.channels.FileChannel.open
  [31] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [32] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$65.0x0000000800d354a0.apply
  [33] cats.effect.IOFiber.$anonfun$8
  [34] cats.effect.IOFiber$$Lambda$668.0x0000000800ea8d20.apply
  [35] cats.effect.unsafe.WorkerThread.blockOn
  [36] scala.concurrent.package$.blocking
  [37] cats.effect.IOFiber.runLoop
  [38] cats.effect.IOFiber.execR
  [39] cats.effect.IOFiber.run
  [40] cats.effect.unsafe.WorkerThread.run

--- 1193295223 ns (0.11%), 119 samples
  [ 0] strcpy_[k]
  [ 1] fsnotify_handle_inode_event.isra.0_[k]
  [ 2] send_to_group_[k]
  [ 3] fsnotify_[k]
  [ 4] __fsnotify_parent_[k]
  [ 5] vfs_write_[k]
  [ 6] ksys_write_[k]
  [ 7] __x64_sys_write_[k]
  [ 8] do_syscall_64_[k]
  [ 9] entry_SYSCALL_64_after_hwframe_[k]
  [10] write
  [11] sun.nio.ch.FileDispatcherImpl.write0
  [12] sun.nio.ch.FileDispatcherImpl.write
  [13] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [14] sun.nio.ch.IOUtil.write
  [15] sun.nio.ch.IOUtil.write
  [16] sun.nio.ch.FileChannelImpl.write
  [17] java.nio.channels.Channels.writeFullyImpl
  [18] java.nio.channels.Channels.writeFully
  [19] java.nio.channels.Channels$1.write
  [20] java.io.InputStream.transferTo
  [21] java.nio.file.Files.copy
  [22] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [23] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [24] jdk.nio.zipfs.ZipPath.newFileChannel
  [25] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [26] java.nio.channels.FileChannel.open
  [27] java.nio.channels.FileChannel.open
  [28] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [29] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$65.0x0000000800d354a0.apply
  [30] cats.effect.IOFiber.$anonfun$8
  [31] cats.effect.IOFiber$$Lambda$668.0x0000000800ea8d20.apply
  [32] cats.effect.unsafe.WorkerThread.blockOn
  [33] scala.concurrent.package$.blocking
  [34] cats.effect.IOFiber.runLoop
  [35] cats.effect.IOFiber.execR
  [36] cats.effect.IOFiber.run
  [37] cats.effect.unsafe.WorkerThread.run

--- 1188556746 ns (0.11%), 119 samples
  [ 0] zap_pte_range_[k]
  [ 1] zap_pmd_range.isra.0_[k]
  [ 2] unmap_page_range_[k]
  [ 3] unmap_single_vma_[k]
  [ 4] unmap_vmas_[k]
  [ 5] unmap_region_[k]
  [ 6] __do_munmap_[k]
  [ 7] mmap_region_[k]
  [ 8] do_mmap_[k]
  [ 9] vm_mmap_pgoff_[k]
  [10] ksys_mmap_pgoff_[k]
  [11] __x64_sys_mmap_[k]
  [12] do_syscall_64_[k]
  [13] entry_SYSCALL_64_after_hwframe_[k]
  [14] __GI___mmap
  [15] G1PageBasedVirtualSpace::uncommit(unsigned long, unsigned long)
  [16] G1RegionsLargerThanCommitSizeMapper::uncommit_regions(unsigned int, unsigned long)
  [17] HeapRegionManager::uncommit_regions(unsigned int, unsigned int)
  [18] HeapRegionManager::uncommit_inactive_regions(unsigned int)
  [19] G1UncommitRegionTask::execute()
  [20] G1ServiceThread::run_task(G1ServiceTask*)
  [21] G1ServiceThread::run_service()
  [22] ConcurrentGCThread::run()
  [23] Thread::call_run()
  [24] thread_native_entry(Thread*)
  [25] start_thread

--- 1163740128 ns (0.11%), 116 samples
  [ 0] fsnotify_[k]
  [ 1] __fsnotify_parent_[k]
  [ 2] vfs_write_[k]
  [ 3] ksys_write_[k]
  [ 4] __x64_sys_write_[k]
  [ 5] do_syscall_64_[k]
  [ 6] entry_SYSCALL_64_after_hwframe_[k]
  [ 7] write
  [ 8] sun.nio.ch.FileDispatcherImpl.write0
  [ 9] sun.nio.ch.FileDispatcherImpl.write
  [10] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [11] sun.nio.ch.IOUtil.write
  [12] sun.nio.ch.IOUtil.write
  [13] sun.nio.ch.FileChannelImpl.write
  [14] java.nio.channels.Channels.writeFullyImpl
  [15] java.nio.channels.Channels.writeFully
  [16] java.nio.channels.Channels$1.write
  [17] java.io.InputStream.transferTo
  [18] java.nio.file.Files.copy
  [19] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [20] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [21] jdk.nio.zipfs.ZipPath.newFileChannel
  [22] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [23] java.nio.channels.FileChannel.open
  [24] java.nio.channels.FileChannel.open
  [25] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [26] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$65.0x0000000800d354a0.apply
  [27] cats.effect.IOFiber.$anonfun$8
  [28] cats.effect.IOFiber$$Lambda$668.0x0000000800ea8d20.apply
  [29] cats.effect.unsafe.WorkerThread.blockOn
  [30] scala.concurrent.package$.blocking
  [31] cats.effect.IOFiber.runLoop
  [32] cats.effect.IOFiber.execR
  [33] cats.effect.IOFiber.run
  [34] cats.effect.unsafe.WorkerThread.run

--- 1143336602 ns (0.11%), 114 samples
  [ 0] __get_obj_cgroup_from_memcg_[k]
  [ 1] get_obj_cgroup_from_current_[k]
  [ 2] __kmalloc_[k]
  [ 3] inotify_handle_inode_event_[k]
  [ 4] fsnotify_handle_inode_event.isra.0_[k]
  [ 5] send_to_group_[k]
  [ 6] fsnotify_[k]
  [ 7] __fsnotify_parent_[k]
  [ 8] vfs_write_[k]
  [ 9] ksys_write_[k]
  [10] __x64_sys_write_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] write
  [14] sun.nio.ch.FileDispatcherImpl.write0
  [15] sun.nio.ch.FileDispatcherImpl.write
  [16] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.FileChannelImpl.write
  [20] java.nio.channels.Channels.writeFullyImpl
  [21] java.nio.channels.Channels.writeFully
  [22] java.nio.channels.Channels$1.write
  [23] java.io.InputStream.transferTo
  [24] java.nio.file.Files.copy
  [25] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [26] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [27] jdk.nio.zipfs.ZipPath.newFileChannel
  [28] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [29] java.nio.channels.FileChannel.open
  [30] java.nio.channels.FileChannel.open
  [31] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [32] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$65.0x0000000800d354a0.apply
  [33] cats.effect.IOFiber.$anonfun$8
  [34] cats.effect.IOFiber$$Lambda$668.0x0000000800ea8d20.apply
  [35] cats.effect.unsafe.WorkerThread.blockOn
  [36] scala.concurrent.package$.blocking
  [37] cats.effect.IOFiber.runLoop
  [38] cats.effect.IOFiber.execR
  [39] cats.effect.IOFiber.run
  [40] cats.effect.unsafe.WorkerThread.run

--- 1133279557 ns (0.11%), 113 samples
  [ 0] zio_create?[zfs]_[k]
  [ 1] zio_null?[zfs]_[k]
  [ 2] zio_root?[zfs]_[k]
  [ 3] dmu_tx_count_write?[zfs]_[k]
  [ 4] dmu_tx_hold_write_by_dnode?[zfs]_[k]
  [ 5] zfs_write?[zfs]_[k]
  [ 6] zpl_iter_write?[zfs]_[k]
  [ 7] new_sync_write_[k]
  [ 8] vfs_write_[k]
  [ 9] ksys_write_[k]
  [10] __x64_sys_write_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] write
  [14] sun.nio.ch.FileDispatcherImpl.write0
  [15] sun.nio.ch.FileDispatcherImpl.write
  [16] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.FileChannelImpl.write
  [20] java.nio.channels.Channels.writeFullyImpl
  [21] java.nio.channels.Channels.writeFully
  [22] java.nio.channels.Channels$1.write
  [23] java.io.InputStream.transferTo
  [24] java.nio.file.Files.copy
  [25] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [26] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [27] jdk.nio.zipfs.ZipPath.newFileChannel
  [28] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [29] java.nio.channels.FileChannel.open
  [30] java.nio.channels.FileChannel.open
  [31] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [32] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$65.0x0000000800d354a0.apply
  [33] cats.effect.IOFiber.$anonfun$8
  [34] cats.effect.IOFiber$$Lambda$668.0x0000000800ea8d20.apply
  [35] cats.effect.unsafe.WorkerThread.blockOn
  [36] scala.concurrent.package$.blocking
  [37] cats.effect.IOFiber.runLoop
  [38] cats.effect.IOFiber.execR
  [39] cats.effect.IOFiber.run
  [40] cats.effect.unsafe.WorkerThread.run

--- 1133142380 ns (0.11%), 113 samples
  [ 0] clear_page_rep_[k]
  [ 1] get_page_from_freelist_[k]
  [ 2] __alloc_pages_[k]
  [ 3] __folio_alloc_[k]
  [ 4] vma_alloc_folio_[k]
  [ 5] do_anonymous_page_[k]
  [ 6] handle_pte_fault_[k]
  [ 7] __handle_mm_fault_[k]
  [ 8] handle_mm_fault_[k]
  [ 9] do_user_addr_fault_[k]
  [10] exc_page_fault_[k]
  [11] asm_exc_page_fault_[k]
  [12] __memset_avx2_unaligned_erms
  [13] MemAllocator::allocate() const
  [14] TypeArrayKlass::allocate_common(int, bool, JavaThread*)
  [15] JVMCIRuntime::new_array_common(JavaThread*, Klass*, int, bool)
  [16] java.lang.Math.max
  [17] scala.runtime.RichInt$.max$extension
  [18] fs2.text$utf8$.lastIncompleteBytes$1
  [19] fs2.text$utf8$.processSingleChunk$1
  [20] fs2.text$utf8$.doPull$1$$anonfun$1
  [21] fs2.text$utf8$$$Lambda$771.0x0000000800ed4800.apply
  [22] fs2.Pull$$anon$1.cont
  [23] fs2.Pull$.fs2$Pull$$$bindBindAux
  [24] fs2.Pull$BindBind.cont
  [25] fs2.Pull$ContP.apply
  [26] fs2.Pull$ContP.apply$
  [27] fs2.Pull$Bind.apply
  [28] fs2.Pull$Bind.apply
  [29] fs2.Pull$UnconsRunR$1.out$$anonfun$2
  [30] fs2.Pull$UnconsRunR$1$$Lambda$708.0x0000000800eb2820.apply
  [31] fs2.Pull$.interruptGuard$1$$anonfun$1
  [32] fs2.Pull$$$Lambda$518.0x0000000800e3f6e0.apply
  [33] cats.effect.IOFiber.succeeded
  [34] cats.effect.IOFiber.runLoop
  [35] cats.effect.IOFiber.autoCedeR
  [36] cats.effect.IOFiber.run
  [37] cats.effect.unsafe.WorkerThread.run

--- 1114348108 ns (0.11%), 111 samples
  [ 0] dsl_dir_tempreserve_impl.constprop.0?[zfs]_[k]
  [ 1] dsl_dir_tempreserve_space?[zfs]_[k]
  [ 2] dmu_tx_try_assign?[zfs]_[k]
  [ 3] dmu_tx_assign?[zfs]_[k]
  [ 4] zfs_write?[zfs]_[k]
  [ 5] zpl_iter_write?[zfs]_[k]
  [ 6] new_sync_write_[k]
  [ 7] vfs_write_[k]
  [ 8] ksys_write_[k]
  [ 9] __x64_sys_write_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] write
  [13] sun.nio.ch.FileDispatcherImpl.write0
  [14] sun.nio.ch.FileDispatcherImpl.write
  [15] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [16] sun.nio.ch.IOUtil.write
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.FileChannelImpl.write
  [19] java.nio.channels.Channels.writeFullyImpl
  [20] java.nio.channels.Channels.writeFully
  [21] java.nio.channels.Channels$1.write
  [22] java.io.InputStream.transferTo
  [23] java.nio.file.Files.copy
  [24] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [25] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [26] jdk.nio.zipfs.ZipPath.newFileChannel
  [27] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [28] java.nio.channels.FileChannel.open
  [29] java.nio.channels.FileChannel.open
  [30] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [31] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$65.0x0000000800d354a0.apply
  [32] cats.effect.IOFiber.$anonfun$8
  [33] cats.effect.IOFiber$$Lambda$668.0x0000000800ea8d20.apply
  [34] cats.effect.unsafe.WorkerThread.blockOn
  [35] scala.concurrent.package$.blocking
  [36] cats.effect.IOFiber.runLoop
  [37] cats.effect.IOFiber.execR
  [38] cats.effect.IOFiber.run
  [39] cats.effect.unsafe.WorkerThread.run

--- 1105638558 ns (0.11%), 110 samples
  [ 0] HeapRegionManager::par_iterate(HeapRegionClosure*, HeapRegionClaimer*, unsigned int) const
  [ 1] G1PrepareEvacuationTask::work(unsigned int)
  [ 2] GangWorker::loop()
  [ 3] GangWorker::run()
  [ 4] Thread::call_run()
  [ 5] thread_native_entry(Thread*)
  [ 6] start_thread

--- 1085566824 ns (0.10%), 108 samples
  [ 0] void WeakProcessor::Task::work<G1STWIsAliveClosure, G1KeepAliveClosure>(unsigned int, G1STWIsAliveClosure*, G1KeepAliveClosure*)
  [ 1] GangWorker::loop()
  [ 2] GangWorker::run()
  [ 3] Thread::call_run()
  [ 4] thread_native_entry(Thread*)
  [ 5] start_thread

--- 1032965047 ns (0.10%), 103 samples
  [ 0] __memset_avx2_unaligned_erms
  [ 1] MemAllocator::allocate() const
  [ 2] TypeArrayKlass::allocate_common(int, bool, JavaThread*)
  [ 3] JVMCIRuntime::new_array_common(JavaThread*, Klass*, int, bool)
  [ 4] fs2.Pull$OuterRun$1.out
  [ 5] fs2.Pull$.go$1$$anonfun$1
  [ 6] fs2.Pull$$$Lambda$698.0x0000000800eb0220.apply
  [ 7] fs2.Pull$.interruptGuard$1$$anonfun$1
  [ 8] fs2.Pull$$$Lambda$518.0x0000000800e3f6e0.apply
  [ 9] cats.effect.IOFiber.succeeded
  [10] cats.effect.IOFiber.runLoop
  [11] cats.effect.IOFiber.execR
  [12] cats.effect.IOFiber.run
  [13] cats.effect.unsafe.WorkerThread.run

--- 1032798444 ns (0.10%), 103 samples
  [ 0] clear_page_rep_[k]
  [ 1] get_page_from_freelist_[k]
  [ 2] __alloc_pages_[k]
  [ 3] __folio_alloc_[k]
  [ 4] vma_alloc_folio_[k]
  [ 5] do_anonymous_page_[k]
  [ 6] handle_pte_fault_[k]
  [ 7] __handle_mm_fault_[k]
  [ 8] handle_mm_fault_[k]
  [ 9] do_user_addr_fault_[k]
  [10] exc_page_fault_[k]
  [11] asm_exc_page_fault_[k]
  [12] __memset_avx2_unaligned_erms
  [13] MemAllocator::allocate() const
  [14] TypeArrayKlass::allocate_common(int, bool, JavaThread*)
  [15] JVMCIRuntime::new_array_common(JavaThread*, Klass*, int, bool)
  [16] fs2.io.file.FileHandleCompanionPlatform$$anon$1.read$$anonfun$1
  [17] fs2.io.file.FileHandleCompanionPlatform$$anon$1$$Lambda$720.0x0000000800eb7150.apply
  [18] cats.effect.IOFiber.$anonfun$8
  [19] cats.effect.IOFiber$$Lambda$668.0x0000000800ea8d20.apply
  [20] cats.effect.unsafe.WorkerThread.blockOn
  [21] scala.concurrent.package$.blocking
  [22] cats.effect.IOFiber.runLoop
  [23] cats.effect.IOFiber.autoCedeR
  [24] cats.effect.IOFiber.run
  [25] cats.effect.unsafe.WorkerThread.run

--- 1013571402 ns (0.10%), 101 samples
  [ 0] sa_attr_op?[zfs]_[k]
  [ 1] sa_bulk_update_impl?[zfs]_[k]
  [ 2] sa_bulk_update?[zfs]_[k]
  [ 3] zfs_write?[zfs]_[k]
  [ 4] zpl_iter_write?[zfs]_[k]
  [ 5] new_sync_write_[k]
  [ 6] vfs_write_[k]
  [ 7] ksys_write_[k]
  [ 8] __x64_sys_write_[k]
  [ 9] do_syscall_64_[k]
  [10] entry_SYSCALL_64_after_hwframe_[k]
  [11] write
  [12] sun.nio.ch.FileDispatcherImpl.write0
  [13] sun.nio.ch.FileDispatcherImpl.write
  [14] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [15] sun.nio.ch.IOUtil.write
  [16] sun.nio.ch.IOUtil.write
  [17] sun.nio.ch.FileChannelImpl.write
  [18] java.nio.channels.Channels.writeFullyImpl
  [19] java.nio.channels.Channels.writeFully
  [20] java.nio.channels.Channels$1.write
  [21] java.io.InputStream.transferTo
  [22] java.nio.file.Files.copy
  [23] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [24] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [25] jdk.nio.zipfs.ZipPath.newFileChannel
  [26] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [27] java.nio.channels.FileChannel.open
  [28] java.nio.channels.FileChannel.open
  [29] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [30] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$65.0x0000000800d354a0.apply
  [31] cats.effect.IOFiber.$anonfun$8
  [32] cats.effect.IOFiber$$Lambda$668.0x0000000800ea8d20.apply
  [33] cats.effect.unsafe.WorkerThread.blockOn
  [34] scala.concurrent.package$.blocking
  [35] cats.effect.IOFiber.runLoop
  [36] cats.effect.IOFiber.execR
  [37] cats.effect.IOFiber.run
  [38] cats.effect.unsafe.WorkerThread.run

--- 1003843479 ns (0.10%), 100 samples
  [ 0] java.lang.System.arraycopy
  [ 1] java.lang.String.getBytes
  [ 2] java.lang.AbstractStringBuilder.putStringAt
  [ 3] java.lang.AbstractStringBuilder.putStringAt
  [ 4] java.lang.AbstractStringBuilder.append
  [ 5] java.lang.StringBuilder.append
  [ 6] java.lang.StringBuilder.append
  [ 7] scala.collection.mutable.StringBuilder.addAll
  [ 8] scala.collection.mutable.StringBuilder.$plus$plus$eq
  [ 9] fs2.Collector$Builder$$anon$4.$plus$eq$$anonfun$1
  [10] fs2.Collector$Builder$$anon$4$$Lambda$794.0x0000000800ed9080.applyVoid
  [11] scala.runtime.function.JProcedure1.apply
  [12] scala.runtime.function.JProcedure1.apply
  [13] fs2.Chunk.foreach
  [14] fs2.Collector$Builder$$anon$4.$plus$eq
  [15] fs2.Stream$CompileOps.to$$anonfun$1$$anonfun$1
  [16] fs2.Stream$CompileOps$$Lambda$367.0x0000000800e03c48.apply
  [17] fs2.Pull$OuterRun$1.out
  [18] fs2.Pull$.go$1$$anonfun$1
  [19] fs2.Pull$$$Lambda$698.0x0000000800eb0220.apply
  [20] fs2.Pull$.interruptGuard$1$$anonfun$1
  [21] fs2.Pull$$$Lambda$518.0x0000000800e3f6e0.apply
  [22] cats.effect.IOFiber.succeeded
  [23] cats.effect.IOFiber.runLoop
  [24] cats.effect.IOFiber.execR
  [25] cats.effect.IOFiber.run
  [26] cats.effect.unsafe.WorkerThread.run

--- 1003816340 ns (0.10%), 100 samples
  [ 0] __memmove_avx_unaligned_erms
  [ 1] java.util.zip.Inflater.inflateBytesBytes
  [ 2] java.util.zip.Inflater.inflate
  [ 3] java.util.zip.InflaterInputStream.read
  [ 4] java.io.InputStream.transferTo
  [ 5] java.nio.file.Files.copy
  [ 6] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [ 7] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [ 8] jdk.nio.zipfs.ZipPath.newFileChannel
  [ 9] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [10] java.nio.channels.FileChannel.open
  [11] java.nio.channels.FileChannel.open
  [12] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [13] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$65.0x0000000800d354a0.apply
  [14] cats.effect.IOFiber.$anonfun$8
  [15] cats.effect.IOFiber$$Lambda$668.0x0000000800ea8d20.apply
  [16] cats.effect.unsafe.WorkerThread.blockOn
  [17] scala.concurrent.package$.blocking
  [18] cats.effect.IOFiber.runLoop
  [19] cats.effect.IOFiber.execR
  [20] cats.effect.IOFiber.run
  [21] cats.effect.unsafe.WorkerThread.run

--- 1003468326 ns (0.10%), 100 samples
  [ 0] page_counter_try_charge_[k]
  [ 1] try_charge_memcg_[k]
  [ 2] obj_cgroup_charge_[k]
  [ 3] __kmalloc_[k]
  [ 4] inotify_handle_inode_event_[k]
  [ 5] fsnotify_handle_inode_event.isra.0_[k]
  [ 6] send_to_group_[k]
  [ 7] fsnotify_[k]
  [ 8] __fsnotify_parent_[k]
  [ 9] vfs_write_[k]
  [10] ksys_write_[k]
  [11] __x64_sys_write_[k]
  [12] do_syscall_64_[k]
  [13] entry_SYSCALL_64_after_hwframe_[k]
  [14] write
  [15] sun.nio.ch.FileDispatcherImpl.write0
  [16] sun.nio.ch.FileDispatcherImpl.write
  [17] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.IOUtil.write
  [20] sun.nio.ch.FileChannelImpl.write
  [21] java.nio.channels.Channels.writeFullyImpl
  [22] java.nio.channels.Channels.writeFully
  [23] java.nio.channels.Channels$1.write
  [24] java.io.InputStream.transferTo
  [25] java.nio.file.Files.copy
  [26] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [27] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [28] jdk.nio.zipfs.ZipPath.newFileChannel
  [29] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [30] java.nio.channels.FileChannel.open
  [31] java.nio.channels.FileChannel.open
  [32] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [33] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$65.0x0000000800d354a0.apply
  [34] cats.effect.IOFiber.$anonfun$8
  [35] cats.effect.IOFiber$$Lambda$668.0x0000000800ea8d20.apply
  [36] cats.effect.unsafe.WorkerThread.blockOn
  [37] scala.concurrent.package$.blocking
  [38] cats.effect.IOFiber.runLoop
  [39] cats.effect.IOFiber.execR
  [40] cats.effect.IOFiber.run
  [41] cats.effect.unsafe.WorkerThread.run

--- 1003219195 ns (0.10%), 100 samples
  [ 0] __memset_avx2_unaligned_erms
  [ 1] MemAllocator::allocate() const
  [ 2] TypeArrayKlass::allocate_common(int, bool, JavaThread*)
  [ 3] JVMCIRuntime::new_array_common(JavaThread*, Klass*, int, bool)
  [ 4] fs2.io.file.FileHandleCompanionPlatform$$anon$1.read$$anonfun$1
  [ 5] fs2.io.file.FileHandleCompanionPlatform$$anon$1$$Lambda$720.0x0000000800eb7150.apply
  [ 6] cats.effect.IOFiber.$anonfun$8
  [ 7] cats.effect.IOFiber$$Lambda$668.0x0000000800ea8d20.apply
  [ 8] cats.effect.unsafe.WorkerThread.blockOn
  [ 9] scala.concurrent.package$.blocking
  [10] cats.effect.IOFiber.runLoop
  [11] cats.effect.IOFiber.execR
  [12] cats.effect.IOFiber.run
  [13] cats.effect.unsafe.WorkerThread.run

--- 992580189 ns (0.10%), 99 samples
  [ 0] clear_page_rep_[k]
  [ 1] get_page_from_freelist_[k]
  [ 2] __alloc_pages_[k]
  [ 3] __folio_alloc_[k]
  [ 4] vma_alloc_folio_[k]
  [ 5] do_anonymous_page_[k]
  [ 6] handle_pte_fault_[k]
  [ 7] __handle_mm_fault_[k]
  [ 8] handle_mm_fault_[k]
  [ 9] do_user_addr_fault_[k]
  [10] exc_page_fault_[k]
  [11] asm_exc_page_fault_[k]
  [12] __memset_avx2_unaligned_erms
  [13] MemAllocator::allocate() const
  [14] TypeArrayKlass::allocate_common(int, bool, JavaThread*)
  [15] JVMCIRuntime::new_array_common(JavaThread*, Klass*, int, bool)
  [16] fs2.text$utf8$.processSingleChunk$1
  [17] fs2.text$utf8$.doPull$1$$anonfun$1
  [18] fs2.text$utf8$$$Lambda$771.0x0000000800ed4800.apply
  [19] fs2.Pull$$anon$1.cont
  [20] fs2.Pull$.fs2$Pull$$$bindBindAux
  [21] fs2.Pull$BindBind.cont
  [22] fs2.Pull$ContP.apply
  [23] fs2.Pull$ContP.apply$
  [24] fs2.Pull$Bind.apply
  [25] fs2.Pull$Bind.apply
  [26] fs2.Pull$UnconsRunR$1.out$$anonfun$2
  [27] fs2.Pull$UnconsRunR$1$$Lambda$708.0x0000000800eb2820.apply
  [28] fs2.Pull$.interruptGuard$1$$anonfun$1
  [29] fs2.Pull$$$Lambda$518.0x0000000800e3f6e0.apply
  [30] cats.effect.IOFiber.succeeded
  [31] cats.effect.IOFiber.runLoop
  [32] cats.effect.IOFiber.autoCedeR
  [33] cats.effect.IOFiber.run
  [34] cats.effect.unsafe.WorkerThread.run

--- 973875113 ns (0.09%), 97 samples
  [ 0] CodeHeap::next_used(HeapBlock*) const
  [ 1] CodeCacheUnloadingTask::work(unsigned int)
  [ 2] G1ParallelCleaningTask::work(unsigned int)
  [ 3] GangWorker::loop()
  [ 4] GangWorker::run()
  [ 5] Thread::call_run()
  [ 6] thread_native_entry(Thread*)
  [ 7] start_thread

--- 952790517 ns (0.09%), 95 samples
  [ 0] void OopOopIterateDispatch<G1RebuildRemSetClosure>::Table::oop_oop_iterate<ObjArrayKlass, narrowOop>(G1RebuildRemSetClosure*, oopDesc*, Klass*)
  [ 1] G1RebuildRemSetTask::G1RebuildRemSetHeapRegionClosure::do_heap_region(HeapRegion*)
  [ 2] HeapRegionManager::par_iterate(HeapRegionClosure*, HeapRegionClaimer*, unsigned int) const
  [ 3] G1RebuildRemSetTask::work(unsigned int)
  [ 4] GangWorker::loop()
  [ 5] GangWorker::run()
  [ 6] Thread::call_run()
  [ 7] thread_native_entry(Thread*)
  [ 8] start_thread

--- 932797546 ns (0.09%), 93 samples
  [ 0] G1CMTask::drain_global_stack(bool) [clone .constprop.0]
  [ 1] G1CMTask::do_marking_step(double, bool, bool)
  [ 2] G1CMConcurrentMarkingTask::work(unsigned int)
  [ 3] GangWorker::loop()
  [ 4] GangWorker::run()
  [ 5] Thread::call_run()
  [ 6] thread_native_entry(Thread*)
  [ 7] start_thread

--- 931708117 ns (0.09%), 93 samples
  [ 0] jlong_disjoint_arraycopy
  [ 1] jdk.internal.misc.Unsafe.copyMemory0
  [ 2] jdk.internal.misc.Unsafe.copyMemory
  [ 3] jdk.internal.misc.ScopedMemoryAccess.copyMemoryInternal
  [ 4] jdk.internal.misc.ScopedMemoryAccess.copyMemory
  [ 5] java.nio.ByteBuffer.putBuffer
  [ 6] java.nio.ByteBuffer.put
  [ 7] java.nio.HeapByteBuffer.put
  [ 8] sun.nio.ch.IOUtil.read
  [ 9] sun.nio.ch.IOUtil.read
  [10] sun.nio.ch.FileChannelImpl.readInternal
  [11] sun.nio.ch.FileChannelImpl.read
  [12] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [13] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [14] jdk.nio.zipfs.ZipFileSystem$2.fill
  [15] java.util.zip.InflaterInputStream.read
  [16] java.io.InputStream.transferTo
  [17] java.nio.file.Files.copy
  [18] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [19] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [20] jdk.nio.zipfs.ZipPath.newFileChannel
  [21] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [22] java.nio.channels.FileChannel.open
  [23] java.nio.channels.FileChannel.open
  [24] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [25] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$65.0x0000000800d354a0.apply
  [26] cats.effect.IOFiber.$anonfun$8
  [27] cats.effect.IOFiber$$Lambda$668.0x0000000800ea8d20.apply
  [28] cats.effect.unsafe.WorkerThread.blockOn
  [29] scala.concurrent.package$.blocking
  [30] cats.effect.IOFiber.runLoop
  [31] cats.effect.IOFiber.execR
  [32] cats.effect.IOFiber.run
  [33] cats.effect.unsafe.WorkerThread.run

--- 913082450 ns (0.09%), 91 samples
  [ 0] refill_stock_[k]
  [ 1] try_charge_memcg_[k]
  [ 2] obj_cgroup_charge_[k]
  [ 3] __kmalloc_[k]
  [ 4] inotify_handle_inode_event_[k]
  [ 5] fsnotify_handle_inode_event.isra.0_[k]
  [ 6] send_to_group_[k]
  [ 7] fsnotify_[k]
  [ 8] __fsnotify_parent_[k]
  [ 9] vfs_write_[k]
  [10] ksys_write_[k]
  [11] __x64_sys_write_[k]
  [12] do_syscall_64_[k]
  [13] entry_SYSCALL_64_after_hwframe_[k]
  [14] write
  [15] sun.nio.ch.FileDispatcherImpl.write0
  [16] sun.nio.ch.FileDispatcherImpl.write
  [17] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.IOUtil.write
  [20] sun.nio.ch.FileChannelImpl.write
  [21] java.nio.channels.Channels.writeFullyImpl
  [22] java.nio.channels.Channels.writeFully
  [23] java.nio.channels.Channels$1.write
  [24] java.io.InputStream.transferTo
  [25] java.nio.file.Files.copy
  [26] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [27] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [28] jdk.nio.zipfs.ZipPath.newFileChannel
  [29] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [30] java.nio.channels.FileChannel.open
  [31] java.nio.channels.FileChannel.open
  [32] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [33] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$65.0x0000000800d354a0.apply
  [34] cats.effect.IOFiber.$anonfun$8
  [35] cats.effect.IOFiber$$Lambda$668.0x0000000800ea8d20.apply
  [36] cats.effect.unsafe.WorkerThread.blockOn
  [37] scala.concurrent.package$.blocking
  [38] cats.effect.IOFiber.runLoop
  [39] cats.effect.IOFiber.execR
  [40] cats.effect.IOFiber.run
  [41] cats.effect.unsafe.WorkerThread.run

--- 903116614 ns (0.09%), 90 samples
  [ 0] kfree_[k]
  [ 1] spl_kmem_free_impl?[spl]_[k]
  [ 2] spl_kmem_free?[spl]_[k]
  [ 3] dmu_tx_destroy?[zfs]_[k]
  [ 4] dmu_tx_commit?[zfs]_[k]
  [ 5] zfs_write?[zfs]_[k]
  [ 6] zpl_iter_write?[zfs]_[k]
  [ 7] new_sync_write_[k]
  [ 8] vfs_write_[k]
  [ 9] ksys_write_[k]
  [10] __x64_sys_write_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] write
  [14] sun.nio.ch.FileDispatcherImpl.write0
  [15] sun.nio.ch.FileDispatcherImpl.write
  [16] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.FileChannelImpl.write
  [20] java.nio.channels.Channels.writeFullyImpl
  [21] java.nio.channels.Channels.writeFully
  [22] java.nio.channels.Channels$1.write
  [23] java.io.InputStream.transferTo
  [24] java.nio.file.Files.copy
  [25] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [26] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [27] jdk.nio.zipfs.ZipPath.newFileChannel
  [28] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [29] java.nio.channels.FileChannel.open
  [30] java.nio.channels.FileChannel.open
  [31] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [32] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$65.0x0000000800d354a0.apply
  [33] cats.effect.IOFiber.$anonfun$8
  [34] cats.effect.IOFiber$$Lambda$668.0x0000000800ea8d20.apply
  [35] cats.effect.unsafe.WorkerThread.blockOn
  [36] scala.concurrent.package$.blocking
  [37] cats.effect.IOFiber.runLoop
  [38] cats.effect.IOFiber.execR
  [39] cats.effect.IOFiber.run
  [40] cats.effect.unsafe.WorkerThread.run

--- 903004518 ns (0.09%), 90 samples
  [ 0] _raw_spin_unlock_irqrestore_[k]
  [ 1] try_to_wake_up_[k]
  [ 2] wake_up_q_[k]
  [ 3] futex_wake_[k]
  [ 4] do_futex_[k]
  [ 5] __x64_sys_futex_[k]
  [ 6] do_syscall_64_[k]
  [ 7] entry_SYSCALL_64_after_hwframe_[k]
  [ 8] pthread_cond_signal@@GLIBC_2.3.2
  [ 9] jdk.internal.misc.Unsafe.unpark
  [10] java.util.concurrent.locks.LockSupport.unpark
  [11] cats.effect.unsafe.WorkStealingThreadPool.notifyParked
  [12] cats.effect.unsafe.WorkerThread.blockOn
  [13] scala.concurrent.package$.blocking
  [14] cats.effect.IOFiber.runLoop
  [15] cats.effect.IOFiber.autoCedeR
  [16] cats.effect.IOFiber.run
  [17] cats.effect.unsafe.WorkerThread.run

--- 902836811 ns (0.09%), 90 samples
  [ 0] kmem_cache_free_[k]
  [ 1] spl_kmem_cache_free?[spl]_[k]
  [ 2] zio_data_buf_free?[zfs]_[k]
  [ 3] zil_itx_destroy?[zfs]_[k]
  [ 4] zil_remove_async?[zfs]_[k]
  [ 5] zfs_log_remove?[zfs]_[k]
  [ 6] zfs_remove?[zfs]_[k]
  [ 7] zpl_unlink?[zfs]_[k]
  [ 8] vfs_unlink_[k]
  [ 9] do_unlinkat_[k]
  [10] __x64_sys_unlink_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] __GI_unlink
  [14] sun.nio.fs.UnixNativeDispatcher.unlink0
  [15] sun.nio.fs.UnixNativeDispatcher.unlink
  [16] sun.nio.fs.UnixFileSystemProvider.implDelete
  [17] sun.nio.fs.AbstractFileSystemProvider.delete
  [18] java.nio.file.Files.delete
  [19] jdk.nio.zipfs.ZipFileSystem.removeTempPathForEntry
  [20] jdk.nio.zipfs.ZipFileSystem$1.implCloseChannel
  [21] java.nio.channels.spi.AbstractInterruptibleChannel.close
  [22] fs2.io.file.FilesCompanionPlatform.openFileChannel$$anonfun$1$$anonfun$1
  [23] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$openFileChannel$$anonfun$1$$anonfun$adapted$1
  [24] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$683.0x0000000800ea9ef8.apply
  [25] cats.effect.IOFiber.$anonfun$8
  [26] cats.effect.IOFiber$$Lambda$668.0x0000000800ea8d20.apply
  [27] cats.effect.unsafe.WorkerThread.blockOn
  [28] scala.concurrent.package$.blocking
  [29] cats.effect.IOFiber.runLoop
  [30] cats.effect.IOFiber.autoCedeR
  [31] cats.effect.IOFiber.run
  [32] cats.effect.unsafe.WorkerThread.run

--- 893031440 ns (0.09%), 89 samples
  [ 0] obj_cgroup_charge_[k]
  [ 1] __kmalloc_[k]
  [ 2] inotify_handle_inode_event_[k]
  [ 3] fsnotify_handle_inode_event.isra.0_[k]
  [ 4] send_to_group_[k]
  [ 5] fsnotify_[k]
  [ 6] __fsnotify_parent_[k]
  [ 7] vfs_write_[k]
  [ 8] ksys_write_[k]
  [ 9] __x64_sys_write_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] write
  [13] sun.nio.ch.FileDispatcherImpl.write0
  [14] sun.nio.ch.FileDispatcherImpl.write
  [15] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [16] sun.nio.ch.IOUtil.write
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.FileChannelImpl.write
  [19] java.nio.channels.Channels.writeFullyImpl
  [20] java.nio.channels.Channels.writeFully
  [21] java.nio.channels.Channels$1.write
  [22] java.io.InputStream.transferTo
  [23] java.nio.file.Files.copy
  [24] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [25] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [26] jdk.nio.zipfs.ZipPath.newFileChannel
  [27] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [28] java.nio.channels.FileChannel.open
  [29] java.nio.channels.FileChannel.open
  [30] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [31] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$65.0x0000000800d354a0.apply
  [32] cats.effect.IOFiber.$anonfun$8
  [33] cats.effect.IOFiber$$Lambda$668.0x0000000800ea8d20.apply
  [34] cats.effect.unsafe.WorkerThread.blockOn
  [35] scala.concurrent.package$.blocking
  [36] cats.effect.IOFiber.runLoop
  [37] cats.effect.IOFiber.execR
  [38] cats.effect.IOFiber.run
  [39] cats.effect.unsafe.WorkerThread.run

--- 892732522 ns (0.09%), 89 samples
  [ 0] __memset_avx2_unaligned_erms
  [ 1] MemAllocator::allocate() const
  [ 2] TypeArrayKlass::allocate_common(int, bool, JavaThread*)
  [ 3] JVMCIRuntime::new_array_common(JavaThread*, Klass*, int, bool)
  [ 4] fs2.text$utf8$.processSingleChunk$1
  [ 5] fs2.text$utf8$.doPull$1$$anonfun$1
  [ 6] fs2.text$utf8$$$Lambda$771.0x0000000800ed4800.apply
  [ 7] fs2.Pull$$anon$1.cont
  [ 8] fs2.Pull$.fs2$Pull$$$bindBindAux
  [ 9] fs2.Pull$BindBind.cont
  [10] fs2.Pull$ContP.apply
  [11] fs2.Pull$ContP.apply$
  [12] fs2.Pull$Bind.apply
  [13] fs2.Pull$Bind.apply
  [14] fs2.Pull$UnconsRunR$1.out$$anonfun$2
  [15] fs2.Pull$UnconsRunR$1$$Lambda$708.0x0000000800eb2820.apply
  [16] fs2.Pull$.interruptGuard$1$$anonfun$1
  [17] fs2.Pull$$$Lambda$518.0x0000000800e3f6e0.apply
  [18] cats.effect.IOFiber.succeeded
  [19] cats.effect.IOFiber.runLoop
  [20] cats.effect.IOFiber.execR
  [21] cats.effect.IOFiber.run
  [22] cats.effect.unsafe.WorkerThread.run

--- 892562800 ns (0.09%), 89 samples
  [ 0] unsigned long BitMap::get_next_bit_impl<0ul, false>(unsigned long, unsigned long) const [clone .part.0] [clone .isra.0]
  [ 1] HeapRegionManager::par_iterate(HeapRegionClosure*, HeapRegionClaimer*, unsigned int) const
  [ 2] G1RebuildRemSetTask::work(unsigned int)
  [ 3] GangWorker::loop()
  [ 4] GangWorker::run()
  [ 5] Thread::call_run()
  [ 6] thread_native_entry(Thread*)
  [ 7] start_thread

--- 883408151 ns (0.08%), 88 samples
  [ 0] NativeCall::destination() const
  [ 1] CompiledMethod::cleanup_inline_caches_impl(bool, bool)
  [ 2] CompiledMethod::unload_nmethod_caches(bool)
  [ 3] nmethod::do_unloading(bool)
  [ 4] CodeCacheUnloadingTask::work(unsigned int)
  [ 5] G1ParallelCleaningTask::work(unsigned int)
  [ 6] GangWorker::loop()
  [ 7] GangWorker::run()
  [ 8] Thread::call_run()
  [ 9] thread_native_entry(Thread*)
  [10] start_thread

--- 864284662 ns (0.08%), 86 samples
  [ 0] memset_[k]
  [ 1] dbuf_read_impl.constprop.0?[zfs]_[k]
  [ 2] dbuf_read?[zfs]_[k]
  [ 3] dmu_buf_will_dirty_impl?[zfs]_[k]
  [ 4] dmu_buf_will_dirty?[zfs]_[k]
  [ 5] dmu_write_uio_dnode?[zfs]_[k]
  [ 6] dmu_write_uio_dbuf?[zfs]_[k]
  [ 7] zfs_write?[zfs]_[k]
  [ 8] zpl_iter_write?[zfs]_[k]
  [ 9] new_sync_write_[k]
  [10] vfs_write_[k]
  [11] ksys_write_[k]
  [12] __x64_sys_write_[k]
  [13] do_syscall_64_[k]
  [14] entry_SYSCALL_64_after_hwframe_[k]
  [15] write
  [16] sun.nio.ch.FileDispatcherImpl.write0
  [17] sun.nio.ch.FileDispatcherImpl.write
  [18] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [19] sun.nio.ch.IOUtil.write
  [20] sun.nio.ch.IOUtil.write
  [21] sun.nio.ch.FileChannelImpl.write
  [22] java.nio.channels.Channels.writeFullyImpl
  [23] java.nio.channels.Channels.writeFully
  [24] java.nio.channels.Channels$1.write
  [25] java.io.InputStream.transferTo
  [26] java.nio.file.Files.copy
  [27] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [28] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [29] jdk.nio.zipfs.ZipPath.newFileChannel
  [30] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [31] java.nio.channels.FileChannel.open
  [32] java.nio.channels.FileChannel.open
  [33] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [34] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$65.0x0000000800d354a0.apply
  [35] cats.effect.IOFiber.$anonfun$8
  [36] cats.effect.IOFiber$$Lambda$668.0x0000000800ea8d20.apply
  [37] cats.effect.unsafe.WorkerThread.blockOn
  [38] scala.concurrent.package$.blocking
  [39] cats.effect.IOFiber.runLoop
  [40] cats.effect.IOFiber.execR
  [41] cats.effect.IOFiber.run
  [42] cats.effect.unsafe.WorkerThread.run

--- 862873995 ns (0.08%), 86 samples
  [ 0] kfree_[k]
  [ 1] spl_kmem_free_impl?[spl]_[k]
  [ 2] spl_kmem_free?[spl]_[k]
  [ 3] dsl_dir_tempreserve_clear?[zfs]_[k]
  [ 4] dmu_tx_commit?[zfs]_[k]
  [ 5] zfs_write?[zfs]_[k]
  [ 6] zpl_iter_write?[zfs]_[k]
  [ 7] new_sync_write_[k]
  [ 8] vfs_write_[k]
  [ 9] ksys_write_[k]
  [10] __x64_sys_write_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] write
  [14] sun.nio.ch.FileDispatcherImpl.write0
  [15] sun.nio.ch.FileDispatcherImpl.write
  [16] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.FileChannelImpl.write
  [20] java.nio.channels.Channels.writeFullyImpl
  [21] java.nio.channels.Channels.writeFully
  [22] java.nio.channels.Channels$1.write
  [23] java.io.InputStream.transferTo
  [24] java.nio.file.Files.copy
  [25] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [26] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [27] jdk.nio.zipfs.ZipPath.newFileChannel
  [28] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [29] java.nio.channels.FileChannel.open
  [30] java.nio.channels.FileChannel.open
  [31] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [32] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$65.0x0000000800d354a0.apply
  [33] cats.effect.IOFiber.$anonfun$8
  [34] cats.effect.IOFiber$$Lambda$668.0x0000000800ea8d20.apply
  [35] cats.effect.unsafe.WorkerThread.blockOn
  [36] scala.concurrent.package$.blocking
  [37] cats.effect.IOFiber.runLoop
  [38] cats.effect.IOFiber.execR
  [39] cats.effect.IOFiber.run
  [40] cats.effect.unsafe.WorkerThread.run

--- 862764266 ns (0.08%), 86 samples
  [ 0] refill_obj_stock_[k]
  [ 1] obj_cgroup_charge_[k]
  [ 2] __kmalloc_[k]
  [ 3] inotify_handle_inode_event_[k]
  [ 4] fsnotify_handle_inode_event.isra.0_[k]
  [ 5] send_to_group_[k]
  [ 6] fsnotify_[k]
  [ 7] __fsnotify_parent_[k]
  [ 8] vfs_write_[k]
  [ 9] ksys_write_[k]
  [10] __x64_sys_write_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] write
  [14] sun.nio.ch.FileDispatcherImpl.write0
  [15] sun.nio.ch.FileDispatcherImpl.write
  [16] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.FileChannelImpl.write
  [20] java.nio.channels.Channels.writeFullyImpl
  [21] java.nio.channels.Channels.writeFully
  [22] java.nio.channels.Channels$1.write
  [23] java.io.InputStream.transferTo
  [24] java.nio.file.Files.copy
  [25] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [26] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [27] jdk.nio.zipfs.ZipPath.newFileChannel
  [28] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [29] java.nio.channels.FileChannel.open
  [30] java.nio.channels.FileChannel.open
  [31] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [32] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$65.0x0000000800d354a0.apply
  [33] cats.effect.IOFiber.$anonfun$8
  [34] cats.effect.IOFiber$$Lambda$668.0x0000000800ea8d20.apply
  [35] cats.effect.unsafe.WorkerThread.blockOn
  [36] scala.concurrent.package$.blocking
  [37] cats.effect.IOFiber.runLoop
  [38] cats.effect.IOFiber.execR
  [39] cats.effect.IOFiber.run
  [40] cats.effect.unsafe.WorkerThread.run

--- 853165007 ns (0.08%), 85 samples
  [ 0] java.util.Arrays.copyOf
  [ 1] java.lang.AbstractStringBuilder.ensureCapacityInternal
  [ 2] java.lang.AbstractStringBuilder.append
  [ 3] java.lang.StringBuilder.append
  [ 4] java.lang.StringBuilder.append
  [ 5] scala.collection.mutable.StringBuilder.addAll
  [ 6] scala.collection.mutable.StringBuilder.$plus$plus$eq
  [ 7] fs2.Collector$Builder$$anon$4.$plus$eq$$anonfun$1
  [ 8] fs2.Collector$Builder$$anon$4$$Lambda$794.0x0000000800ed9080.applyVoid
  [ 9] scala.runtime.function.JProcedure1.apply
  [10] scala.runtime.function.JProcedure1.apply
  [11] fs2.Chunk.foreach
  [12] fs2.Collector$Builder$$anon$4.$plus$eq
  [13] fs2.Stream$CompileOps.to$$anonfun$1$$anonfun$1
  [14] fs2.Stream$CompileOps$$Lambda$367.0x0000000800e03c48.apply
  [15] fs2.Pull$OuterRun$1.out
  [16] fs2.Pull$.go$1$$anonfun$1
  [17] fs2.Pull$$$Lambda$698.0x0000000800eb0220.apply
  [18] fs2.Pull$.interruptGuard$1$$anonfun$1
  [19] fs2.Pull$$$Lambda$518.0x0000000800e3f6e0.apply
  [20] cats.effect.IOFiber.succeeded
  [21] cats.effect.IOFiber.runLoop
  [22] cats.effect.IOFiber.execR
  [23] cats.effect.IOFiber.run
  [24] cats.effect.unsafe.WorkerThread.run

--- 852789752 ns (0.08%), 85 samples
  [ 0] write
  [ 1] sun.nio.ch.FileDispatcherImpl.write0
  [ 2] sun.nio.ch.FileDispatcherImpl.write
  [ 3] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [ 4] sun.nio.ch.IOUtil.write
  [ 5] sun.nio.ch.IOUtil.write
  [ 6] sun.nio.ch.FileChannelImpl.write
  [ 7] java.nio.channels.Channels.writeFullyImpl
  [ 8] java.nio.channels.Channels.writeFully
  [ 9] java.nio.channels.Channels$1.write
  [10] java.io.InputStream.transferTo
  [11] java.nio.file.Files.copy
  [12] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [13] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [14] jdk.nio.zipfs.ZipPath.newFileChannel
  [15] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [16] java.nio.channels.FileChannel.open
  [17] java.nio.channels.FileChannel.open
  [18] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [19] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$65.0x0000000800d354a0.apply
  [20] cats.effect.IOFiber.$anonfun$8
  [21] cats.effect.IOFiber$$Lambda$668.0x0000000800ea8d20.apply
  [22] cats.effect.unsafe.WorkerThread.blockOn
  [23] scala.concurrent.package$.blocking
  [24] cats.effect.IOFiber.runLoop
  [25] cats.effect.IOFiber.execR
  [26] cats.effect.IOFiber.run
  [27] cats.effect.unsafe.WorkerThread.run

--- 831617455 ns (0.08%), 83 samples
  [ 0] void OopOopIterateDispatch<G1CMOopClosure>::Table::oop_oop_iterate<InstanceKlass, narrowOop>(G1CMOopClosure*, oopDesc*, Klass*)
  [ 1] void G1CMTask::process_grey_task_entry<true>(G1TaskQueueEntry)
  [ 2] G1CMTask::drain_local_queue(bool) [clone .part.0] [clone .constprop.0]
  [ 3] G1CMTask::do_marking_step(double, bool, bool)
  [ 4] G1CMConcurrentMarkingTask::work(unsigned int)
  [ 5] GangWorker::loop()
  [ 6] GangWorker::run()
  [ 7] Thread::call_run()
  [ 8] thread_native_entry(Thread*)
  [ 9] start_thread

--- 824736660 ns (0.08%), 82 samples
  [ 0] free_unref_page_list_[k]
  [ 1] release_pages_[k]
  [ 2] free_pages_and_swap_cache_[k]
  [ 3] tlb_batch_pages_flush_[k]
  [ 4] tlb_finish_mmu_[k]
  [ 5] unmap_region_[k]
  [ 6] __do_munmap_[k]
  [ 7] mmap_region_[k]
  [ 8] do_mmap_[k]
  [ 9] vm_mmap_pgoff_[k]
  [10] ksys_mmap_pgoff_[k]
  [11] __x64_sys_mmap_[k]
  [12] do_syscall_64_[k]
  [13] entry_SYSCALL_64_after_hwframe_[k]
  [14] __GI___mmap
  [15] G1PageBasedVirtualSpace::uncommit(unsigned long, unsigned long)
  [16] G1RegionsLargerThanCommitSizeMapper::uncommit_regions(unsigned int, unsigned long)
  [17] HeapRegionManager::uncommit_regions(unsigned int, unsigned int)
  [18] HeapRegionManager::uncommit_inactive_regions(unsigned int)
  [19] G1UncommitRegionTask::execute()
  [20] G1ServiceThread::run_task(G1ServiceTask*)
  [21] G1ServiceThread::run_service()
  [22] ConcurrentGCThread::run()
  [23] Thread::call_run()
  [24] thread_native_entry(Thread*)
  [25] start_thread

--- 812005307 ns (0.08%), 81 samples
  [ 0] __memset_avx2_unaligned_erms
  [ 1] MemAllocator::allocate() const
  [ 2] TypeArrayKlass::allocate_common(int, bool, JavaThread*)
  [ 3] JVMCIRuntime::new_array_common(JavaThread*, Klass*, int, bool)
  [ 4] java.lang.Math.max
  [ 5] scala.runtime.RichInt$.max$extension
  [ 6] fs2.text$utf8$.lastIncompleteBytes$1
  [ 7] fs2.text$utf8$.processSingleChunk$1
  [ 8] fs2.text$utf8$.doPull$1$$anonfun$1
  [ 9] fs2.text$utf8$$$Lambda$771.0x0000000800ed4800.apply
  [10] fs2.Pull$$anon$1.cont
  [11] fs2.Pull$.fs2$Pull$$$bindBindAux
  [12] fs2.Pull$BindBind.cont
  [13] fs2.Pull$ContP.apply
  [14] fs2.Pull$ContP.apply$
  [15] fs2.Pull$Bind.apply
  [16] fs2.Pull$Bind.apply
  [17] fs2.Pull$UnconsRunR$1.out$$anonfun$2
  [18] fs2.Pull$UnconsRunR$1$$Lambda$708.0x0000000800eb2820.apply
  [19] fs2.Pull$.interruptGuard$1$$anonfun$1
  [20] fs2.Pull$$$Lambda$518.0x0000000800e3f6e0.apply
  [21] cats.effect.IOFiber.succeeded
  [22] cats.effect.IOFiber.runLoop
  [23] cats.effect.IOFiber.execR
  [24] cats.effect.IOFiber.run
  [25] cats.effect.unsafe.WorkerThread.run

--- 802724198 ns (0.08%), 80 samples
  [ 0] send_to_group_[k]
  [ 1] fsnotify_[k]
  [ 2] __fsnotify_parent_[k]
  [ 3] vfs_write_[k]
  [ 4] ksys_write_[k]
  [ 5] __x64_sys_write_[k]
  [ 6] do_syscall_64_[k]
  [ 7] entry_SYSCALL_64_after_hwframe_[k]
  [ 8] write
  [ 9] sun.nio.ch.FileDispatcherImpl.write0
  [10] sun.nio.ch.FileDispatcherImpl.write
  [11] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [12] sun.nio.ch.IOUtil.write
  [13] sun.nio.ch.IOUtil.write
  [14] sun.nio.ch.FileChannelImpl.write
  [15] java.nio.channels.Channels.writeFullyImpl
  [16] java.nio.channels.Channels.writeFully
  [17] java.nio.channels.Channels$1.write
  [18] java.io.InputStream.transferTo
  [19] java.nio.file.Files.copy
  [20] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [21] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [22] jdk.nio.zipfs.ZipPath.newFileChannel
  [23] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [24] java.nio.channels.FileChannel.open
  [25] java.nio.channels.FileChannel.open
  [26] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [27] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$65.0x0000000800d354a0.apply
  [28] cats.effect.IOFiber.$anonfun$8
  [29] cats.effect.IOFiber$$Lambda$668.0x0000000800ea8d20.apply
  [30] cats.effect.unsafe.WorkerThread.blockOn
  [31] scala.concurrent.package$.blocking
  [32] cats.effect.IOFiber.runLoop
  [33] cats.effect.IOFiber.execR
  [34] cats.effect.IOFiber.run
  [35] cats.effect.unsafe.WorkerThread.run

--- 792464033 ns (0.08%), 79 samples
  [ 0] dmu_tx_try_assign?[zfs]_[k]
  [ 1] dmu_tx_assign?[zfs]_[k]
  [ 2] zfs_write?[zfs]_[k]
  [ 3] zpl_iter_write?[zfs]_[k]
  [ 4] new_sync_write_[k]
  [ 5] vfs_write_[k]
  [ 6] ksys_write_[k]
  [ 7] __x64_sys_write_[k]
  [ 8] do_syscall_64_[k]
  [ 9] entry_SYSCALL_64_after_hwframe_[k]
  [10] write
  [11] sun.nio.ch.FileDispatcherImpl.write0
  [12] sun.nio.ch.FileDispatcherImpl.write
  [13] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [14] sun.nio.ch.IOUtil.write
  [15] sun.nio.ch.IOUtil.write
  [16] sun.nio.ch.FileChannelImpl.write
  [17] java.nio.channels.Channels.writeFullyImpl
  [18] java.nio.channels.Channels.writeFully
  [19] java.nio.channels.Channels$1.write
  [20] java.io.InputStream.transferTo
  [21] java.nio.file.Files.copy
  [22] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [23] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [24] jdk.nio.zipfs.ZipPath.newFileChannel
  [25] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [26] java.nio.channels.FileChannel.open
  [27] java.nio.channels.FileChannel.open
  [28] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [29] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$65.0x0000000800d354a0.apply
  [30] cats.effect.IOFiber.$anonfun$8
  [31] cats.effect.IOFiber$$Lambda$668.0x0000000800ea8d20.apply
  [32] cats.effect.unsafe.WorkerThread.blockOn
  [33] scala.concurrent.package$.blocking
  [34] cats.effect.IOFiber.runLoop
  [35] cats.effect.IOFiber.execR
  [36] cats.effect.IOFiber.run
  [37] cats.effect.unsafe.WorkerThread.run

--- 791544069 ns (0.08%), 79 samples
  [ 0] java.lang.System.arraycopy
  [ 1] fs2.Chunk$ArraySlice.copyToArray
  [ 2] fs2.Chunk.toArray
  [ 3] fs2.text$utf8$.processSingleChunk$1
  [ 4] fs2.text$utf8$.doPull$1$$anonfun$1
  [ 5] fs2.text$utf8$$$Lambda$771.0x0000000800ed4800.apply
  [ 6] fs2.Pull$$anon$1.cont
  [ 7] fs2.Pull$.fs2$Pull$$$bindBindAux
  [ 8] fs2.Pull$BindBind.cont
  [ 9] fs2.Pull$ContP.apply
  [10] fs2.Pull$ContP.apply$
  [11] fs2.Pull$Bind.apply
  [12] fs2.Pull$Bind.apply
  [13] fs2.Pull$UnconsRunR$1.out$$anonfun$2
  [14] fs2.Pull$UnconsRunR$1$$Lambda$708.0x0000000800eb2820.apply
  [15] fs2.Pull$.interruptGuard$1$$anonfun$1
  [16] fs2.Pull$$$Lambda$518.0x0000000800e3f6e0.apply
  [17] cats.effect.IOFiber.succeeded
  [18] cats.effect.IOFiber.runLoop
  [19] cats.effect.IOFiber.autoCedeR
  [20] cats.effect.IOFiber.run
  [21] cats.effect.unsafe.WorkerThread.run

--- 783354355 ns (0.08%), 78 samples
  [ 0] find_vmap_area_[k]
  [ 1] check_heap_object_[k]
  [ 2] __check_object_size.part.0_[k]
  [ 3] __check_object_size_[k]
  [ 4] zfs_uiomove_iter?[zfs]_[k]
  [ 5] zfs_uiomove?[zfs]_[k]
  [ 6] dmu_read_uio_dnode?[zfs]_[k]
  [ 7] dmu_read_uio_dbuf?[zfs]_[k]
  [ 8] zfs_read?[zfs]_[k]
  [ 9] zpl_iter_read?[zfs]_[k]
  [10] new_sync_read_[k]
  [11] vfs_read_[k]
  [12] __x64_sys_pread64_[k]
  [13] do_syscall_64_[k]
  [14] entry_SYSCALL_64_after_hwframe_[k]
  [15] __libc_pread64
  [16] sun.nio.ch.FileDispatcherImpl.pread0
  [17] sun.nio.ch.FileDispatcherImpl.pread
  [18] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [19] sun.nio.ch.IOUtil.read
  [20] sun.nio.ch.IOUtil.read
  [21] sun.nio.ch.FileChannelImpl.readInternal
  [22] sun.nio.ch.FileChannelImpl.read
  [23] jdk.nio.zipfs.ZipFileSystem$1.read
  [24] fs2.io.file.FileHandleCompanionPlatform$$anon$1.read$$anonfun$1
  [25] fs2.io.file.FileHandleCompanionPlatform$$anon$1$$Lambda$720.0x0000000800eb7150.apply
  [26] cats.effect.IOFiber.$anonfun$8
  [27] cats.effect.IOFiber$$Lambda$668.0x0000000800ea8d20.apply
  [28] cats.effect.unsafe.WorkerThread.blockOn
  [29] scala.concurrent.package$.blocking
  [30] cats.effect.IOFiber.runLoop
  [31] cats.effect.IOFiber.autoCedeR
  [32] cats.effect.IOFiber.run
  [33] cats.effect.unsafe.WorkerThread.run

--- 783083231 ns (0.08%), 78 samples
  [ 0] Assembler::locate_operand(unsigned char*, Assembler::WhichOperand)
  [ 1] oop_Relocation::oop_value()
  [ 2] nmethod::oops_do(OopClosure*, bool)
  [ 3] ClosureIsUnloadingBehaviour::is_unloading(CompiledMethod*) const
  [ 4] nmethod::do_unloading(bool)
  [ 5] CodeCacheUnloadingTask::work(unsigned int)
  [ 6] G1ParallelCleaningTask::work(unsigned int)
  [ 7] GangWorker::loop()
  [ 8] GangWorker::run()
  [ 9] Thread::call_run()
  [10] thread_native_entry(Thread*)
  [11] start_thread

--- 782570394 ns (0.08%), 78 samples
  [ 0] fsnotify_insert_event_[k]
  [ 1] inotify_handle_inode_event_[k]
  [ 2] fsnotify_handle_inode_event.isra.0_[k]
  [ 3] send_to_group_[k]
  [ 4] fsnotify_[k]
  [ 5] __fsnotify_parent_[k]
  [ 6] vfs_write_[k]
  [ 7] ksys_write_[k]
  [ 8] __x64_sys_write_[k]
  [ 9] do_syscall_64_[k]
  [10] entry_SYSCALL_64_after_hwframe_[k]
  [11] write
  [12] sun.nio.ch.FileDispatcherImpl.write0
  [13] sun.nio.ch.FileDispatcherImpl.write
  [14] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [15] sun.nio.ch.IOUtil.write
  [16] sun.nio.ch.IOUtil.write
  [17] sun.nio.ch.FileChannelImpl.write
  [18] java.nio.channels.Channels.writeFullyImpl
  [19] java.nio.channels.Channels.writeFully
  [20] java.nio.channels.Channels$1.write
  [21] java.io.InputStream.transferTo
  [22] java.nio.file.Files.copy
  [23] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [24] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [25] jdk.nio.zipfs.ZipPath.newFileChannel
  [26] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [27] java.nio.channels.FileChannel.open
  [28] java.nio.channels.FileChannel.open
  [29] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [30] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$65.0x0000000800d354a0.apply
  [31] cats.effect.IOFiber.$anonfun$8
  [32] cats.effect.IOFiber$$Lambda$668.0x0000000800ea8d20.apply
  [33] cats.effect.unsafe.WorkerThread.blockOn
  [34] scala.concurrent.package$.blocking
  [35] cats.effect.IOFiber.runLoop
  [36] cats.effect.IOFiber.execR
  [37] cats.effect.IOFiber.run
  [38] cats.effect.unsafe.WorkerThread.run

--- 782477062 ns (0.08%), 78 samples
  [ 0] syscall_enter_from_user_mode_[k]
  [ 1] do_syscall_64_[k]
  [ 2] entry_SYSCALL_64_after_hwframe_[k]
  [ 3] write
  [ 4] sun.nio.ch.FileDispatcherImpl.write0
  [ 5] sun.nio.ch.FileDispatcherImpl.write
  [ 6] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [ 7] sun.nio.ch.IOUtil.write
  [ 8] sun.nio.ch.IOUtil.write
  [ 9] sun.nio.ch.FileChannelImpl.write
  [10] java.nio.channels.Channels.writeFullyImpl
  [11] java.nio.channels.Channels.writeFully
  [12] java.nio.channels.Channels$1.write
  [13] java.io.InputStream.transferTo
  [14] java.nio.file.Files.copy
  [15] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [16] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [17] jdk.nio.zipfs.ZipPath.newFileChannel
  [18] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [19] java.nio.channels.FileChannel.open
  [20] java.nio.channels.FileChannel.open
  [21] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [22] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$65.0x0000000800d354a0.apply
  [23] cats.effect.IOFiber.$anonfun$8
  [24] cats.effect.IOFiber$$Lambda$668.0x0000000800ea8d20.apply
  [25] cats.effect.unsafe.WorkerThread.blockOn
  [26] scala.concurrent.package$.blocking
  [27] cats.effect.IOFiber.runLoop
  [28] cats.effect.IOFiber.execR
  [29] cats.effect.IOFiber.run
  [30] cats.effect.unsafe.WorkerThread.run

--- 777491812 ns (0.07%), 77 samples
  [ 0] free_unref_page_list_[k]
  [ 1] release_pages_[k]
  [ 2] free_pages_and_swap_cache_[k]
  [ 3] tlb_batch_pages_flush_[k]
  [ 4] tlb_flush_mmu_[k]
  [ 5] zap_pte_range_[k]
  [ 6] zap_pmd_range.isra.0_[k]
  [ 7] unmap_page_range_[k]
  [ 8] unmap_single_vma_[k]
  [ 9] unmap_vmas_[k]
  [10] unmap_region_[k]
  [11] __do_munmap_[k]
  [12] mmap_region_[k]
  [13] do_mmap_[k]
  [14] vm_mmap_pgoff_[k]
  [15] ksys_mmap_pgoff_[k]
  [16] __x64_sys_mmap_[k]
  [17] do_syscall_64_[k]
  [18] entry_SYSCALL_64_after_hwframe_[k]
  [19] __GI___mmap
  [20] G1PageBasedVirtualSpace::uncommit(unsigned long, unsigned long)
  [21] G1RegionsLargerThanCommitSizeMapper::uncommit_regions(unsigned int, unsigned long)
  [22] HeapRegionManager::uncommit_regions(unsigned int, unsigned int)
  [23] HeapRegionManager::uncommit_inactive_regions(unsigned int)
  [24] G1UncommitRegionTask::execute()
  [25] G1ServiceThread::run_task(G1ServiceTask*)
  [26] G1ServiceThread::run_service()
  [27] ConcurrentGCThread::run()
  [28] Thread::call_run()
  [29] thread_native_entry(Thread*)
  [30] start_thread

--- 772696936 ns (0.07%), 77 samples
  [ 0] inotify_merge_[k]
  [ 1] inotify_handle_inode_event_[k]
  [ 2] fsnotify_handle_inode_event.isra.0_[k]
  [ 3] send_to_group_[k]
  [ 4] fsnotify_[k]
  [ 5] __fsnotify_parent_[k]
  [ 6] vfs_write_[k]
  [ 7] ksys_write_[k]
  [ 8] __x64_sys_write_[k]
  [ 9] do_syscall_64_[k]
  [10] entry_SYSCALL_64_after_hwframe_[k]
  [11] write
  [12] sun.nio.ch.FileDispatcherImpl.write0
  [13] sun.nio.ch.FileDispatcherImpl.write
  [14] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [15] sun.nio.ch.IOUtil.write
  [16] sun.nio.ch.IOUtil.write
  [17] sun.nio.ch.FileChannelImpl.write
  [18] java.nio.channels.Channels.writeFullyImpl
  [19] java.nio.channels.Channels.writeFully
  [20] java.nio.channels.Channels$1.write
  [21] java.io.InputStream.transferTo
  [22] java.nio.file.Files.copy
  [23] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [24] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [25] jdk.nio.zipfs.ZipPath.newFileChannel
  [26] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [27] java.nio.channels.FileChannel.open
  [28] java.nio.channels.FileChannel.open
  [29] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [30] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$65.0x0000000800d354a0.apply
  [31] cats.effect.IOFiber.$anonfun$8
  [32] cats.effect.IOFiber$$Lambda$668.0x0000000800ea8d20.apply
  [33] cats.effect.unsafe.WorkerThread.blockOn
  [34] scala.concurrent.package$.blocking
  [35] cats.effect.IOFiber.runLoop
  [36] cats.effect.IOFiber.execR
  [37] cats.effect.IOFiber.run
  [38] cats.effect.unsafe.WorkerThread.run

--- 763190368 ns (0.07%), 76 samples
  [ 0] mod_memcg_state_[k]
  [ 1] memcg_account_kmem_[k]
  [ 2] obj_cgroup_charge_[k]
  [ 3] __kmalloc_[k]
  [ 4] inotify_handle_inode_event_[k]
  [ 5] fsnotify_handle_inode_event.isra.0_[k]
  [ 6] send_to_group_[k]
  [ 7] fsnotify_[k]
  [ 8] __fsnotify_parent_[k]
  [ 9] vfs_write_[k]
  [10] ksys_write_[k]
  [11] __x64_sys_write_[k]
  [12] do_syscall_64_[k]
  [13] entry_SYSCALL_64_after_hwframe_[k]
  [14] write
  [15] sun.nio.ch.FileDispatcherImpl.write0
  [16] sun.nio.ch.FileDispatcherImpl.write
  [17] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.IOUtil.write
  [20] sun.nio.ch.FileChannelImpl.write
  [21] java.nio.channels.Channels.writeFullyImpl
  [22] java.nio.channels.Channels.writeFully
  [23] java.nio.channels.Channels$1.write
  [24] java.io.InputStream.transferTo
  [25] java.nio.file.Files.copy
  [26] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [27] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [28] jdk.nio.zipfs.ZipPath.newFileChannel
  [29] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [30] java.nio.channels.FileChannel.open
  [31] java.nio.channels.FileChannel.open
  [32] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [33] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$65.0x0000000800d354a0.apply
  [34] cats.effect.IOFiber.$anonfun$8
  [35] cats.effect.IOFiber$$Lambda$668.0x0000000800ea8d20.apply
  [36] cats.effect.unsafe.WorkerThread.blockOn
  [37] scala.concurrent.package$.blocking
  [38] cats.effect.IOFiber.runLoop
  [39] cats.effect.IOFiber.execR
  [40] cats.effect.IOFiber.run
  [41] cats.effect.unsafe.WorkerThread.run

--- 753565581 ns (0.07%), 75 samples
  [ 0] dsl_dir_phys?[zfs]_[k]
  [ 1] dsl_dir_tempreserve_space?[zfs]_[k]
  [ 2] dmu_tx_try_assign?[zfs]_[k]
  [ 3] dmu_tx_assign?[zfs]_[k]
  [ 4] zfs_write?[zfs]_[k]
  [ 5] zpl_iter_write?[zfs]_[k]
  [ 6] new_sync_write_[k]
  [ 7] vfs_write_[k]
  [ 8] ksys_write_[k]
  [ 9] __x64_sys_write_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] write
  [13] sun.nio.ch.FileDispatcherImpl.write0
  [14] sun.nio.ch.FileDispatcherImpl.write
  [15] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [16] sun.nio.ch.IOUtil.write
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.FileChannelImpl.write
  [19] java.nio.channels.Channels.writeFullyImpl
  [20] java.nio.channels.Channels.writeFully
  [21] java.nio.channels.Channels$1.write
  [22] java.io.InputStream.transferTo
  [23] java.nio.file.Files.copy
  [24] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [25] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [26] jdk.nio.zipfs.ZipPath.newFileChannel
  [27] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [28] java.nio.channels.FileChannel.open
  [29] java.nio.channels.FileChannel.open
  [30] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [31] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$65.0x0000000800d354a0.apply
  [32] cats.effect.IOFiber.$anonfun$8
  [33] cats.effect.IOFiber$$Lambda$668.0x0000000800ea8d20.apply
  [34] cats.effect.unsafe.WorkerThread.blockOn
  [35] scala.concurrent.package$.blocking
  [36] cats.effect.IOFiber.runLoop
  [37] cats.effect.IOFiber.execR
  [38] cats.effect.IOFiber.run
  [39] cats.effect.unsafe.WorkerThread.run

--- 753039805 ns (0.07%), 75 samples
  [ 0] java.util.Arrays.copyOfRange
  [ 1] java.lang.String.<init>
  [ 2] java.lang.String.<init>
  [ 3] fs2.text$utf8$.processSingleChunk$1
  [ 4] fs2.text$utf8$.doPull$1$$anonfun$1
  [ 5] fs2.text$utf8$$$Lambda$771.0x0000000800ed4800.apply
  [ 6] fs2.Pull$$anon$1.cont
  [ 7] fs2.Pull$.fs2$Pull$$$bindBindAux
  [ 8] fs2.Pull$BindBind.cont
  [ 9] fs2.Pull$ContP.apply
  [10] fs2.Pull$ContP.apply$
  [11] fs2.Pull$Bind.apply
  [12] fs2.Pull$Bind.apply
  [13] fs2.Pull$UnconsRunR$1.out$$anonfun$2
  [14] fs2.Pull$UnconsRunR$1$$Lambda$708.0x0000000800eb2820.apply
  [15] fs2.Pull$.interruptGuard$1$$anonfun$1
  [16] fs2.Pull$$$Lambda$518.0x0000000800e3f6e0.apply
  [17] cats.effect.IOFiber.succeeded
  [18] cats.effect.IOFiber.runLoop
  [19] cats.effect.IOFiber.execR
  [20] cats.effect.IOFiber.run
  [21] cats.effect.unsafe.WorkerThread.run

--- 733029904 ns (0.07%), 73 samples
  [ 0] zfs_write?[zfs]_[k]
  [ 1] zpl_iter_write?[zfs]_[k]
  [ 2] new_sync_write_[k]
  [ 3] vfs_write_[k]
  [ 4] ksys_write_[k]
  [ 5] __x64_sys_write_[k]
  [ 6] do_syscall_64_[k]
  [ 7] entry_SYSCALL_64_after_hwframe_[k]
  [ 8] write
  [ 9] sun.nio.ch.FileDispatcherImpl.write0
  [10] sun.nio.ch.FileDispatcherImpl.write
  [11] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [12] sun.nio.ch.IOUtil.write
  [13] sun.nio.ch.IOUtil.write
  [14] sun.nio.ch.FileChannelImpl.write
  [15] java.nio.channels.Channels.writeFullyImpl
  [16] java.nio.channels.Channels.writeFully
  [17] java.nio.channels.Channels$1.write
  [18] java.io.InputStream.transferTo
  [19] java.nio.file.Files.copy
  [20] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [21] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [22] jdk.nio.zipfs.ZipPath.newFileChannel
  [23] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [24] java.nio.channels.FileChannel.open
  [25] java.nio.channels.FileChannel.open
  [26] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [27] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$65.0x0000000800d354a0.apply
  [28] cats.effect.IOFiber.$anonfun$8
  [29] cats.effect.IOFiber$$Lambda$668.0x0000000800ea8d20.apply
  [30] cats.effect.unsafe.WorkerThread.blockOn
  [31] scala.concurrent.package$.blocking
  [32] cats.effect.IOFiber.runLoop
  [33] cats.effect.IOFiber.execR
  [34] cats.effect.IOFiber.run
  [35] cats.effect.unsafe.WorkerThread.run

--- 732640037 ns (0.07%), 73 samples
  [ 0] copy_user_generic_string_[k]
  [ 1] zfs_uiomove_iter?[zfs]_[k]
  [ 2] zfs_uiomove?[zfs]_[k]
  [ 3] dmu_read_uio_dnode?[zfs]_[k]
  [ 4] dmu_read_uio_dbuf?[zfs]_[k]
  [ 5] mappedread?[zfs]_[k]
  [ 6] zfs_read?[zfs]_[k]
  [ 7] zpl_iter_read?[zfs]_[k]
  [ 8] new_sync_read_[k]
  [ 9] vfs_read_[k]
  [10] __x64_sys_pread64_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] __libc_pread64
  [14] sun.nio.ch.FileDispatcherImpl.pread0
  [15] sun.nio.ch.FileDispatcherImpl.pread
  [16] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [17] sun.nio.ch.IOUtil.read
  [18] sun.nio.ch.IOUtil.read
  [19] sun.nio.ch.FileChannelImpl.readInternal
  [20] sun.nio.ch.FileChannelImpl.read
  [21] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [22] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [23] jdk.nio.zipfs.ZipFileSystem$2.fill
  [24] java.util.zip.InflaterInputStream.read
  [25] java.io.InputStream.transferTo
  [26] java.nio.file.Files.copy
  [27] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [28] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [29] jdk.nio.zipfs.ZipPath.newFileChannel
  [30] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [31] java.nio.channels.FileChannel.open
  [32] java.nio.channels.FileChannel.open
  [33] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [34] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$65.0x0000000800d354a0.apply
  [35] cats.effect.IOFiber.$anonfun$8
  [36] cats.effect.IOFiber$$Lambda$668.0x0000000800ea8d20.apply
  [37] cats.effect.unsafe.WorkerThread.blockOn
  [38] scala.concurrent.package$.blocking
  [39] cats.effect.IOFiber.runLoop
  [40] cats.effect.IOFiber.execR
  [41] cats.effect.IOFiber.run
  [42] cats.effect.unsafe.WorkerThread.run

--- 721729240 ns (0.07%), 72 samples
  [ 0] java.lang.StringCoding.hasNegatives
  [ 1] java.lang.String.<init>
  [ 2] java.lang.String.<init>
  [ 3] fs2.text$utf8$.processSingleChunk$1
  [ 4] fs2.text$utf8$.doPull$1$$anonfun$1
  [ 5] fs2.text$utf8$$$Lambda$771.0x0000000800ed4800.apply
  [ 6] fs2.Pull$$anon$1.cont
  [ 7] fs2.Pull$.fs2$Pull$$$bindBindAux
  [ 8] fs2.Pull$BindBind.cont
  [ 9] fs2.Pull$ContP.apply
  [10] fs2.Pull$ContP.apply$
  [11] fs2.Pull$Bind.apply
  [12] fs2.Pull$Bind.apply
  [13] fs2.Pull$UnconsRunR$1.out$$anonfun$2
  [14] fs2.Pull$UnconsRunR$1$$Lambda$708.0x0000000800eb2820.apply
  [15] fs2.Pull$.interruptGuard$1$$anonfun$1
  [16] fs2.Pull$$$Lambda$518.0x0000000800e3f6e0.apply
  [17] cats.effect.IOFiber.succeeded
  [18] cats.effect.IOFiber.runLoop
  [19] cats.effect.IOFiber.autoCedeR
  [20] cats.effect.IOFiber.run
  [21] cats.effect.unsafe.WorkerThread.run

--- 703042684 ns (0.07%), 70 samples
  [ 0] G1ScanHRForRegionClosure::scan_heap_roots(HeapRegion*)
  [ 1] G1RemSet::scan_heap_roots(G1ParScanThreadState*, unsigned int, G1GCPhaseTimes::GCParPhases, G1GCPhaseTimes::GCParPhases, bool)
  [ 2] G1EvacuateRegionsTask::scan_roots(G1ParScanThreadState*, unsigned int)
  [ 3] G1EvacuateRegionsBaseTask::work(unsigned int)
  [ 4] GangWorker::loop()
  [ 5] GangWorker::run()
  [ 6] Thread::call_run()
  [ 7] thread_native_entry(Thread*)
  [ 8] start_thread

--- 702015525 ns (0.07%), 70 samples
  [ 0] zfs_log_write?[zfs]_[k]
  [ 1] zfs_write?[zfs]_[k]
  [ 2] zpl_iter_write?[zfs]_[k]
  [ 3] new_sync_write_[k]
  [ 4] vfs_write_[k]
  [ 5] ksys_write_[k]
  [ 6] __x64_sys_write_[k]
  [ 7] do_syscall_64_[k]
  [ 8] entry_SYSCALL_64_after_hwframe_[k]
  [ 9] write
  [10] sun.nio.ch.FileDispatcherImpl.write0
  [11] sun.nio.ch.FileDispatcherImpl.write
  [12] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [13] sun.nio.ch.IOUtil.write
  [14] sun.nio.ch.IOUtil.write
  [15] sun.nio.ch.FileChannelImpl.write
  [16] java.nio.channels.Channels.writeFullyImpl
  [17] java.nio.channels.Channels.writeFully
  [18] java.nio.channels.Channels$1.write
  [19] java.io.InputStream.transferTo
  [20] java.nio.file.Files.copy
  [21] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [22] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [23] jdk.nio.zipfs.ZipPath.newFileChannel
  [24] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [25] java.nio.channels.FileChannel.open
  [26] java.nio.channels.FileChannel.open
  [27] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [28] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$65.0x0000000800d354a0.apply
  [29] cats.effect.IOFiber.$anonfun$8
  [30] cats.effect.IOFiber$$Lambda$668.0x0000000800ea8d20.apply
  [31] cats.effect.unsafe.WorkerThread.blockOn
  [32] scala.concurrent.package$.blocking
  [33] cats.effect.IOFiber.runLoop
  [34] cats.effect.IOFiber.execR
  [35] cats.effect.IOFiber.run
  [36] cats.effect.unsafe.WorkerThread.run

--- 682753406 ns (0.07%), 68 samples
  [ 0] CompiledMethod::oops_reloc_begin() const
  [ 1] nmethod::oops_do(OopClosure*, bool)
  [ 2] ClosureIsUnloadingBehaviour::is_unloading(CompiledMethod*) const
  [ 3] nmethod::do_unloading(bool)
  [ 4] CodeCacheUnloadingTask::work(unsigned int)
  [ 5] G1ParallelCleaningTask::work(unsigned int)
  [ 6] GangWorker::loop()
  [ 7] GangWorker::run()
  [ 8] Thread::call_run()
  [ 9] thread_native_entry(Thread*)
  [10] start_thread

--- 682121538 ns (0.07%), 68 samples
  [ 0] zio_create?[zfs]_[k]
  [ 1] zio_null?[zfs]_[k]
  [ 2] zio_root?[zfs]_[k]
  [ 3] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 4] dmu_read_uio_dnode?[zfs]_[k]
  [ 5] dmu_read_uio_dbuf?[zfs]_[k]
  [ 6] mappedread?[zfs]_[k]
  [ 7] zfs_read?[zfs]_[k]
  [ 8] zpl_iter_read?[zfs]_[k]
  [ 9] new_sync_read_[k]
  [10] vfs_read_[k]
  [11] __x64_sys_pread64_[k]
  [12] do_syscall_64_[k]
  [13] entry_SYSCALL_64_after_hwframe_[k]
  [14] __libc_pread64
  [15] sun.nio.ch.FileDispatcherImpl.pread0
  [16] sun.nio.ch.FileDispatcherImpl.pread
  [17] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [18] sun.nio.ch.IOUtil.read
  [19] sun.nio.ch.IOUtil.read
  [20] sun.nio.ch.FileChannelImpl.readInternal
  [21] sun.nio.ch.FileChannelImpl.read
  [22] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [23] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [24] jdk.nio.zipfs.ZipFileSystem$2.fill
  [25] java.util.zip.InflaterInputStream.read
  [26] java.io.InputStream.transferTo
  [27] java.nio.file.Files.copy
  [28] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [29] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [30] jdk.nio.zipfs.ZipPath.newFileChannel
  [31] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [32] java.nio.channels.FileChannel.open
  [33] java.nio.channels.FileChannel.open
  [34] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [35] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$65.0x0000000800d354a0.apply
  [36] cats.effect.IOFiber.$anonfun$8
  [37] cats.effect.IOFiber$$Lambda$668.0x0000000800ea8d20.apply
  [38] cats.effect.unsafe.WorkerThread.blockOn
  [39] scala.concurrent.package$.blocking
  [40] cats.effect.IOFiber.runLoop
  [41] cats.effect.IOFiber.execR
  [42] cats.effect.IOFiber.run
  [43] cats.effect.unsafe.WorkerThread.run

--- 681645397 ns (0.07%), 68 samples
  [ 0] jlong_disjoint_arraycopy
  [ 1] jdk.internal.misc.Unsafe.copyMemory0
  [ 2] jdk.internal.misc.Unsafe.copyMemory
  [ 3] jdk.internal.misc.ScopedMemoryAccess.copyMemoryInternal
  [ 4] jdk.internal.misc.ScopedMemoryAccess.copyMemory
  [ 5] java.nio.ByteBuffer.putBuffer
  [ 6] java.nio.ByteBuffer.put
  [ 7] java.nio.HeapByteBuffer.put
  [ 8] sun.nio.ch.IOUtil.read
  [ 9] sun.nio.ch.IOUtil.read
  [10] sun.nio.ch.FileChannelImpl.readInternal
  [11] sun.nio.ch.FileChannelImpl.read
  [12] jdk.nio.zipfs.ZipFileSystem$1.read
  [13] fs2.io.file.FileHandleCompanionPlatform$$anon$1.read$$anonfun$1
  [14] fs2.io.file.FileHandleCompanionPlatform$$anon$1$$Lambda$720.0x0000000800eb7150.apply
  [15] cats.effect.IOFiber.$anonfun$8
  [16] cats.effect.IOFiber$$Lambda$668.0x0000000800ea8d20.apply
  [17] cats.effect.unsafe.WorkerThread.blockOn
  [18] scala.concurrent.package$.blocking
  [19] cats.effect.IOFiber.runLoop
  [20] cats.effect.IOFiber.autoCedeR
  [21] cats.effect.IOFiber.run
  [22] cats.effect.unsafe.WorkerThread.run

--- 673314187 ns (0.06%), 67 samples
  [ 0] void WeakProcessor::Task::work<G1CMIsAliveClosure, DoNothingClosure>(unsigned int, G1CMIsAliveClosure*, DoNothingClosure*)
  [ 1] GangWorker::loop()
  [ 2] GangWorker::run()
  [ 3] Thread::call_run()
  [ 4] thread_native_entry(Thread*)
  [ 5] start_thread

--- 672219444 ns (0.06%), 67 samples
  [ 0] jni_GetPrimitiveArrayCritical
  [ 1] Java_java_util_zip_Inflater_inflateBytesBytes
  [ 2] java.util.zip.Inflater.inflateBytesBytes
  [ 3] java.util.zip.Inflater.inflate
  [ 4] java.util.zip.InflaterInputStream.read
  [ 5] java.io.InputStream.transferTo
  [ 6] java.nio.file.Files.copy
  [ 7] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [ 8] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [ 9] jdk.nio.zipfs.ZipPath.newFileChannel
  [10] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [11] java.nio.channels.FileChannel.open
  [12] java.nio.channels.FileChannel.open
  [13] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [14] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$65.0x0000000800d354a0.apply
  [15] cats.effect.IOFiber.$anonfun$8
  [16] cats.effect.IOFiber$$Lambda$668.0x0000000800ea8d20.apply
  [17] cats.effect.unsafe.WorkerThread.blockOn
  [18] scala.concurrent.package$.blocking
  [19] cats.effect.IOFiber.runLoop
  [20] cats.effect.IOFiber.execR
  [21] cats.effect.IOFiber.run
  [22] cats.effect.unsafe.WorkerThread.run

--- 670799986 ns (0.06%), 67 samples
  [ 0] G1CMTask::get_entries_from_global_stack()
  [ 1] G1CMTask::drain_global_stack(bool)
  [ 2] G1CMTask::do_marking_step(double, bool, bool)
  [ 3] G1CMConcurrentMarkingTask::work(unsigned int)
  [ 4] GangWorker::loop()
  [ 5] GangWorker::run()
  [ 6] Thread::call_run()
  [ 7] thread_native_entry(Thread*)
  [ 8] start_thread

--- 662131166 ns (0.06%), 66 samples
  [ 0] G1ConcurrentMark::mark_in_next_bitmap(unsigned int, oopDesc*)
  [ 1] ClassLoaderData::ChunkedHandleList::oops_do(OopClosure*)
  [ 2] void OopOopIterateDispatch<G1RootRegionScanClosure>::Table::oop_oop_iterate<InstanceKlass, narrowOop>(G1RootRegionScanClosure*, oopDesc*, Klass*)
  [ 3] G1ConcurrentMark::scan_root_region(MemRegion const*, unsigned int)
  [ 4] G1CMRootRegionScanTask::work(unsigned int)
  [ 5] GangWorker::loop()
  [ 6] GangWorker::run()
  [ 7] Thread::call_run()
  [ 8] thread_native_entry(Thread*)
  [ 9] start_thread

--- 652851073 ns (0.06%), 65 samples
  [ 0] G1ParCopyClosure<(G1Barrier)1, true>::do_oop(oopDesc**)
  [ 1] ClassLoaderData::ChunkedHandleList::oops_do(OopClosure*)
  [ 2] G1CLDScanClosure::do_cld(ClassLoaderData*)
  [ 3] ClassLoaderDataGraph::roots_cld_do(CLDClosure*, CLDClosure*)
  [ 4] G1RootProcessor::process_java_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int)
  [ 5] G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int)
  [ 6] G1EvacuateRegionsTask::scan_roots(G1ParScanThreadState*, unsigned int)
  [ 7] G1EvacuateRegionsBaseTask::work(unsigned int)
  [ 8] GangWorker::loop()
  [ 9] GangWorker::run()
  [10] Thread::call_run()
  [11] thread_native_entry(Thread*)
  [12] start_thread

--- 652473418 ns (0.06%), 65 samples
  [ 0] CodeHeap::find_blob_unsafe(void*) const
  [ 1] CompiledMethod::cleanup_inline_caches_impl(bool, bool)
  [ 2] CompiledMethod::unload_nmethod_caches(bool)
  [ 3] nmethod::do_unloading(bool)
  [ 4] CodeCacheUnloadingTask::work(unsigned int)
  [ 5] G1ParallelCleaningTask::work(unsigned int)
  [ 6] GangWorker::loop()
  [ 7] GangWorker::run()
  [ 8] Thread::call_run()
  [ 9] thread_native_entry(Thread*)
  [10] start_thread

--- 652368164 ns (0.06%), 65 samples
  [ 0] __kmalloc_node_[k]
  [ 1] spl_kmem_alloc_impl?[spl]_[k]
  [ 2] spl_kmem_zalloc?[spl]_[k]
  [ 3] dsl_dir_tempreserve_impl.constprop.0?[zfs]_[k]
  [ 4] dsl_dir_tempreserve_space?[zfs]_[k]
  [ 5] dmu_tx_try_assign?[zfs]_[k]
  [ 6] dmu_tx_assign?[zfs]_[k]
  [ 7] zfs_write?[zfs]_[k]
  [ 8] zpl_iter_write?[zfs]_[k]
  [ 9] new_sync_write_[k]
  [10] vfs_write_[k]
  [11] ksys_write_[k]
  [12] __x64_sys_write_[k]
  [13] do_syscall_64_[k]
  [14] entry_SYSCALL_64_after_hwframe_[k]
  [15] write
  [16] sun.nio.ch.FileDispatcherImpl.write0
  [17] sun.nio.ch.FileDispatcherImpl.write
  [18] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [19] sun.nio.ch.IOUtil.write
  [20] sun.nio.ch.IOUtil.write
  [21] sun.nio.ch.FileChannelImpl.write
  [22] java.nio.channels.Channels.writeFullyImpl
  [23] java.nio.channels.Channels.writeFully
  [24] java.nio.channels.Channels$1.write
  [25] java.io.InputStream.transferTo
  [26] java.nio.file.Files.copy
  [27] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [28] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [29] jdk.nio.zipfs.ZipPath.newFileChannel
  [30] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [31] java.nio.channels.FileChannel.open
  [32] java.nio.channels.FileChannel.open
  [33] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [34] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$65.0x0000000800d354a0.apply
  [35] cats.effect.IOFiber.$anonfun$8
  [36] cats.effect.IOFiber$$Lambda$668.0x0000000800ea8d20.apply
  [37] cats.effect.unsafe.WorkerThread.blockOn
  [38] scala.concurrent.package$.blocking
  [39] cats.effect.IOFiber.runLoop
  [40] cats.effect.IOFiber.execR
  [41] cats.effect.IOFiber.run
  [42] cats.effect.unsafe.WorkerThread.run

--- 651783945 ns (0.06%), 65 samples
  [ 0] refill_stock_[k]
  [ 1] obj_cgroup_uncharge_pages_[k]
  [ 2] refill_obj_stock_[k]
  [ 3] obj_cgroup_charge_[k]
  [ 4] __kmalloc_[k]
  [ 5] inotify_handle_inode_event_[k]
  [ 6] fsnotify_handle_inode_event.isra.0_[k]
  [ 7] send_to_group_[k]
  [ 8] fsnotify_[k]
  [ 9] __fsnotify_parent_[k]
  [10] vfs_write_[k]
  [11] ksys_write_[k]
  [12] __x64_sys_write_[k]
  [13] do_syscall_64_[k]
  [14] entry_SYSCALL_64_after_hwframe_[k]
  [15] write
  [16] sun.nio.ch.FileDispatcherImpl.write0
  [17] sun.nio.ch.FileDispatcherImpl.write
  [18] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [19] sun.nio.ch.IOUtil.write
  [20] sun.nio.ch.IOUtil.write
  [21] sun.nio.ch.FileChannelImpl.write
  [22] java.nio.channels.Channels.writeFullyImpl
  [23] java.nio.channels.Channels.writeFully
  [24] java.nio.channels.Channels$1.write
  [25] java.io.InputStream.transferTo
  [26] java.nio.file.Files.copy
  [27] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [28] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [29] jdk.nio.zipfs.ZipPath.newFileChannel
  [30] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [31] java.nio.channels.FileChannel.open
  [32] java.nio.channels.FileChannel.open
  [33] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [34] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$65.0x0000000800d354a0.apply
  [35] cats.effect.IOFiber.$anonfun$8
  [36] cats.effect.IOFiber$$Lambda$668.0x0000000800ea8d20.apply
  [37] cats.effect.unsafe.WorkerThread.blockOn
  [38] scala.concurrent.package$.blocking
  [39] cats.effect.IOFiber.runLoop
  [40] cats.effect.IOFiber.execR
  [41] cats.effect.IOFiber.run
  [42] cats.effect.unsafe.WorkerThread.run

--- 643005078 ns (0.06%), 64 samples
  [ 0] G1ParScanThreadState::trim_queue_to_threshold(unsigned int)
  [ 1] G1ParEvacuateFollowersClosure::do_void()
  [ 2] G1EvacuateRegionsTask::evacuate_live_objects(G1ParScanThreadState*, unsigned int)
  [ 3] G1EvacuateRegionsBaseTask::work(unsigned int)
  [ 4] GangWorker::loop()
  [ 5] GangWorker::run()
  [ 6] Thread::call_run()
  [ 7] thread_native_entry(Thread*)
  [ 8] start_thread

--- 632181432 ns (0.06%), 63 samples
  [ 0] zio_wait?[zfs]_[k]
  [ 1] dmu_tx_count_write?[zfs]_[k]
  [ 2] dmu_tx_hold_write_by_dnode?[zfs]_[k]
  [ 3] zfs_write?[zfs]_[k]
  [ 4] zpl_iter_write?[zfs]_[k]
  [ 5] new_sync_write_[k]
  [ 6] vfs_write_[k]
  [ 7] ksys_write_[k]
  [ 8] __x64_sys_write_[k]
  [ 9] do_syscall_64_[k]
  [10] entry_SYSCALL_64_after_hwframe_[k]
  [11] write
  [12] sun.nio.ch.FileDispatcherImpl.write0
  [13] sun.nio.ch.FileDispatcherImpl.write
  [14] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [15] sun.nio.ch.IOUtil.write
  [16] sun.nio.ch.IOUtil.write
  [17] sun.nio.ch.FileChannelImpl.write
  [18] java.nio.channels.Channels.writeFullyImpl
  [19] java.nio.channels.Channels.writeFully
  [20] java.nio.channels.Channels$1.write
  [21] java.io.InputStream.transferTo
  [22] java.nio.file.Files.copy
  [23] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [24] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [25] jdk.nio.zipfs.ZipPath.newFileChannel
  [26] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [27] java.nio.channels.FileChannel.open
  [28] java.nio.channels.FileChannel.open
  [29] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [30] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$65.0x0000000800d354a0.apply
  [31] cats.effect.IOFiber.$anonfun$8
  [32] cats.effect.IOFiber$$Lambda$668.0x0000000800ea8d20.apply
  [33] cats.effect.unsafe.WorkerThread.blockOn
  [34] scala.concurrent.package$.blocking
  [35] cats.effect.IOFiber.runLoop
  [36] cats.effect.IOFiber.execR
  [37] cats.effect.IOFiber.run
  [38] cats.effect.unsafe.WorkerThread.run

--- 622123199 ns (0.06%), 62 samples
  [ 0] memset_[k]
  [ 1] spl_kmem_cache_alloc?[spl]_[k]
  [ 2] zio_create?[zfs]_[k]
  [ 3] zio_null?[zfs]_[k]
  [ 4] zio_root?[zfs]_[k]
  [ 5] dmu_tx_count_write?[zfs]_[k]
  [ 6] dmu_tx_hold_write_by_dnode?[zfs]_[k]
  [ 7] zfs_write?[zfs]_[k]
  [ 8] zpl_iter_write?[zfs]_[k]
  [ 9] new_sync_write_[k]
  [10] vfs_write_[k]
  [11] ksys_write_[k]
  [12] __x64_sys_write_[k]
  [13] do_syscall_64_[k]
  [14] entry_SYSCALL_64_after_hwframe_[k]
  [15] write
  [16] sun.nio.ch.FileDispatcherImpl.write0
  [17] sun.nio.ch.FileDispatcherImpl.write
  [18] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [19] sun.nio.ch.IOUtil.write
  [20] sun.nio.ch.IOUtil.write
  [21] sun.nio.ch.FileChannelImpl.write
  [22] java.nio.channels.Channels.writeFullyImpl
  [23] java.nio.channels.Channels.writeFully
  [24] java.nio.channels.Channels$1.write
  [25] java.io.InputStream.transferTo
  [26] java.nio.file.Files.copy
  [27] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [28] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [29] jdk.nio.zipfs.ZipPath.newFileChannel
  [30] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [31] java.nio.channels.FileChannel.open
  [32] java.nio.channels.FileChannel.open
  [33] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [34] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$65.0x0000000800d354a0.apply
  [35] cats.effect.IOFiber.$anonfun$8
  [36] cats.effect.IOFiber$$Lambda$668.0x0000000800ea8d20.apply
  [37] cats.effect.unsafe.WorkerThread.blockOn
  [38] scala.concurrent.package$.blocking
  [39] cats.effect.IOFiber.runLoop
  [40] cats.effect.IOFiber.execR
  [41] cats.effect.IOFiber.run
  [42] cats.effect.unsafe.WorkerThread.run

--- 621812200 ns (0.06%), 62 samples
  [ 0] sun.nio.ch.FileDispatcherImpl.write0
  [ 1] sun.nio.ch.FileDispatcherImpl.write
  [ 2] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [ 3] sun.nio.ch.IOUtil.write
  [ 4] sun.nio.ch.IOUtil.write
  [ 5] sun.nio.ch.FileChannelImpl.write
  [ 6] java.nio.channels.Channels.writeFullyImpl
  [ 7] java.nio.channels.Channels.writeFully
  [ 8] java.nio.channels.Channels$1.write
  [ 9] java.io.InputStream.transferTo
  [10] java.nio.file.Files.copy
  [11] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [12] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [13] jdk.nio.zipfs.ZipPath.newFileChannel
  [14] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [15] java.nio.channels.FileChannel.open
  [16] java.nio.channels.FileChannel.open
  [17] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [18] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$65.0x0000000800d354a0.apply
  [19] cats.effect.IOFiber.$anonfun$8
  [20] cats.effect.IOFiber$$Lambda$668.0x0000000800ea8d20.apply
  [21] cats.effect.unsafe.WorkerThread.blockOn
  [22] scala.concurrent.package$.blocking
  [23] cats.effect.IOFiber.runLoop
  [24] cats.effect.IOFiber.execR
  [25] cats.effect.IOFiber.run
  [26] cats.effect.unsafe.WorkerThread.run

--- 621739383 ns (0.06%), 62 samples
  [ 0] java.lang.System.arraycopy
  [ 1] fs2.Chunk$ArraySlice.copyToArray
  [ 2] fs2.Chunk.toArray
  [ 3] fs2.text$utf8$.processSingleChunk$1
  [ 4] fs2.text$utf8$.doPull$1$$anonfun$1
  [ 5] fs2.text$utf8$$$Lambda$771.0x0000000800ed4800.apply
  [ 6] fs2.Pull$$anon$1.cont
  [ 7] fs2.Pull$.fs2$Pull$$$bindBindAux
  [ 8] fs2.Pull$BindBind.cont
  [ 9] fs2.Pull$ContP.apply
  [10] fs2.Pull$ContP.apply$
  [11] fs2.Pull$Bind.apply
  [12] fs2.Pull$Bind.apply
  [13] fs2.Pull$UnconsRunR$1.out$$anonfun$2
  [14] fs2.Pull$UnconsRunR$1$$Lambda$708.0x0000000800eb2820.apply
  [15] fs2.Pull$.interruptGuard$1$$anonfun$1
  [16] fs2.Pull$$$Lambda$518.0x0000000800e3f6e0.apply
  [17] cats.effect.IOFiber.succeeded
  [18] cats.effect.IOFiber.runLoop
  [19] cats.effect.IOFiber.execR
  [20] cats.effect.IOFiber.run
  [21] cats.effect.unsafe.WorkerThread.run

--- 612826378 ns (0.06%), 61 samples
  [ 0] copy_user_generic_string_[k]
  [ 1] zfs_uiomove_iter?[zfs]_[k]
  [ 2] zfs_uiomove?[zfs]_[k]
  [ 3] dmu_read_uio_dnode?[zfs]_[k]
  [ 4] dmu_read_uio_dbuf?[zfs]_[k]
  [ 5] zfs_read?[zfs]_[k]
  [ 6] zpl_iter_read?[zfs]_[k]
  [ 7] new_sync_read_[k]
  [ 8] vfs_read_[k]
  [ 9] __x64_sys_pread64_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] __libc_pread64
  [13] sun.nio.ch.FileDispatcherImpl.pread0
  [14] sun.nio.ch.FileDispatcherImpl.pread
  [15] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [16] sun.nio.ch.IOUtil.read
  [17] sun.nio.ch.IOUtil.read
  [18] sun.nio.ch.FileChannelImpl.readInternal
  [19] sun.nio.ch.FileChannelImpl.read
  [20] jdk.nio.zipfs.ZipFileSystem$1.read
  [21] fs2.io.file.FileHandleCompanionPlatform$$anon$1.read$$anonfun$1
  [22] fs2.io.file.FileHandleCompanionPlatform$$anon$1$$Lambda$720.0x0000000800eb7150.apply
  [23] cats.effect.IOFiber.$anonfun$8
  [24] cats.effect.IOFiber$$Lambda$668.0x0000000800ea8d20.apply
  [25] cats.effect.unsafe.WorkerThread.blockOn
  [26] scala.concurrent.package$.blocking
  [27] cats.effect.IOFiber.runLoop
  [28] cats.effect.IOFiber.execR
  [29] cats.effect.IOFiber.run
  [30] cats.effect.unsafe.WorkerThread.run

--- 601894552 ns (0.06%), 60 samples
  [ 0] void G1CMTask::process_grey_task_entry<true>(G1TaskQueueEntry)
  [ 1] G1CMTask::drain_local_queue(bool) [clone .part.0] [clone .constprop.1]
  [ 2] G1CMTask::do_marking_step(double, bool, bool)
  [ 3] G1CMConcurrentMarkingTask::work(unsigned int)
  [ 4] GangWorker::loop()
  [ 5] GangWorker::run()
  [ 6] Thread::call_run()
  [ 7] thread_native_entry(Thread*)
  [ 8] start_thread

--- 592917078 ns (0.06%), 59 samples
  [ 0] find_vmap_area_[k]
  [ 1] check_heap_object_[k]
  [ 2] __check_object_size.part.0_[k]
  [ 3] __check_object_size_[k]
  [ 4] zfs_uiomove_iter?[zfs]_[k]
  [ 5] zfs_uiomove?[zfs]_[k]
  [ 6] dmu_write_uio_dnode?[zfs]_[k]
  [ 7] dmu_write_uio_dbuf?[zfs]_[k]
  [ 8] zfs_write?[zfs]_[k]
  [ 9] zpl_iter_write?[zfs]_[k]
  [10] new_sync_write_[k]
  [11] vfs_write_[k]
  [12] ksys_write_[k]
  [13] __x64_sys_write_[k]
  [14] do_syscall_64_[k]
  [15] entry_SYSCALL_64_after_hwframe_[k]
  [16] write
  [17] sun.nio.ch.FileDispatcherImpl.write0
  [18] sun.nio.ch.FileDispatcherImpl.write
  [19] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [20] sun.nio.ch.IOUtil.write
  [21] sun.nio.ch.IOUtil.write
  [22] sun.nio.ch.FileChannelImpl.write
  [23] java.nio.channels.Channels.writeFullyImpl
  [24] java.nio.channels.Channels.writeFully
  [25] java.nio.channels.Channels$1.write
  [26] java.io.InputStream.transferTo
  [27] java.nio.file.Files.copy
  [28] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [29] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [30] jdk.nio.zipfs.ZipPath.newFileChannel
  [31] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [32] java.nio.channels.FileChannel.open
  [33] java.nio.channels.FileChannel.open
  [34] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [35] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$65.0x0000000800d354a0.apply
  [36] cats.effect.IOFiber.$anonfun$8
  [37] cats.effect.IOFiber$$Lambda$668.0x0000000800ea8d20.apply
  [38] cats.effect.unsafe.WorkerThread.blockOn
  [39] scala.concurrent.package$.blocking
  [40] cats.effect.IOFiber.runLoop
  [41] cats.effect.IOFiber.execR
  [42] cats.effect.IOFiber.run
  [43] cats.effect.unsafe.WorkerThread.run

--- 592481606 ns (0.06%), 59 samples
  [ 0] __fget_light_[k]
  [ 1] __fdget_pos_[k]
  [ 2] ksys_write_[k]
  [ 3] __x64_sys_write_[k]
  [ 4] do_syscall_64_[k]
  [ 5] entry_SYSCALL_64_after_hwframe_[k]
  [ 6] write
  [ 7] sun.nio.ch.FileDispatcherImpl.write0
  [ 8] sun.nio.ch.FileDispatcherImpl.write
  [ 9] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [10] sun.nio.ch.IOUtil.write
  [11] sun.nio.ch.IOUtil.write
  [12] sun.nio.ch.FileChannelImpl.write
  [13] java.nio.channels.Channels.writeFullyImpl
  [14] java.nio.channels.Channels.writeFully
  [15] java.nio.channels.Channels$1.write
  [16] java.io.InputStream.transferTo
  [17] java.nio.file.Files.copy
  [18] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [19] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [20] jdk.nio.zipfs.ZipPath.newFileChannel
  [21] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [22] java.nio.channels.FileChannel.open
  [23] java.nio.channels.FileChannel.open
  [24] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [25] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$65.0x0000000800d354a0.apply
  [26] cats.effect.IOFiber.$anonfun$8
  [27] cats.effect.IOFiber$$Lambda$668.0x0000000800ea8d20.apply
  [28] cats.effect.unsafe.WorkerThread.blockOn
  [29] scala.concurrent.package$.blocking
  [30] cats.effect.IOFiber.runLoop
  [31] cats.effect.IOFiber.execR
  [32] cats.effect.IOFiber.run
  [33] cats.effect.unsafe.WorkerThread.run

--- 581815630 ns (0.06%), 58 samples
  [ 0] kmem_cache_alloc_[k]
  [ 1] spl_kmem_cache_alloc?[spl]_[k]
  [ 2] zio_data_buf_alloc?[zfs]_[k]
  [ 3] zil_itx_create?[zfs]_[k]
  [ 4] zfs_log_write?[zfs]_[k]
  [ 5] zfs_write?[zfs]_[k]
  [ 6] zpl_iter_write?[zfs]_[k]
  [ 7] new_sync_write_[k]
  [ 8] vfs_write_[k]
  [ 9] ksys_write_[k]
  [10] __x64_sys_write_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] write
  [14] sun.nio.ch.FileDispatcherImpl.write0
  [15] sun.nio.ch.FileDispatcherImpl.write
  [16] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.FileChannelImpl.write
  [20] java.nio.channels.Channels.writeFullyImpl
  [21] java.nio.channels.Channels.writeFully
  [22] java.nio.channels.Channels$1.write
  [23] java.io.InputStream.transferTo
  [24] java.nio.file.Files.copy
  [25] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [26] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [27] jdk.nio.zipfs.ZipPath.newFileChannel
  [28] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [29] java.nio.channels.FileChannel.open
  [30] java.nio.channels.FileChannel.open
  [31] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [32] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$65.0x0000000800d354a0.apply
  [33] cats.effect.IOFiber.$anonfun$8
  [34] cats.effect.IOFiber$$Lambda$668.0x0000000800ea8d20.apply
  [35] cats.effect.unsafe.WorkerThread.blockOn
  [36] scala.concurrent.package$.blocking
  [37] cats.effect.IOFiber.runLoop
  [38] cats.effect.IOFiber.execR
  [39] cats.effect.IOFiber.run
  [40] cats.effect.unsafe.WorkerThread.run

--- 581327857 ns (0.06%), 58 samples
  [ 0] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 1] dmu_read_uio_dnode?[zfs]_[k]
  [ 2] dmu_read_uio_dbuf?[zfs]_[k]
  [ 3] mappedread?[zfs]_[k]
  [ 4] zfs_read?[zfs]_[k]
  [ 5] zpl_iter_read?[zfs]_[k]
  [ 6] new_sync_read_[k]
  [ 7] vfs_read_[k]
  [ 8] __x64_sys_pread64_[k]
  [ 9] do_syscall_64_[k]
  [10] entry_SYSCALL_64_after_hwframe_[k]
  [11] __libc_pread64
  [12] sun.nio.ch.FileDispatcherImpl.pread0
  [13] sun.nio.ch.FileDispatcherImpl.pread
  [14] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [15] sun.nio.ch.IOUtil.read
  [16] sun.nio.ch.IOUtil.read
  [17] sun.nio.ch.FileChannelImpl.readInternal
  [18] sun.nio.ch.FileChannelImpl.read
  [19] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [20] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [21] jdk.nio.zipfs.ZipFileSystem$2.fill
  [22] java.util.zip.InflaterInputStream.read
  [23] java.io.InputStream.transferTo
  [24] java.nio.file.Files.copy
  [25] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [26] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [27] jdk.nio.zipfs.ZipPath.newFileChannel
  [28] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [29] java.nio.channels.FileChannel.open
  [30] java.nio.channels.FileChannel.open
  [31] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [32] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$65.0x0000000800d354a0.apply
  [33] cats.effect.IOFiber.$anonfun$8
  [34] cats.effect.IOFiber$$Lambda$668.0x0000000800ea8d20.apply
  [35] cats.effect.unsafe.WorkerThread.blockOn
  [36] scala.concurrent.package$.blocking
  [37] cats.effect.IOFiber.runLoop
  [38] cats.effect.IOFiber.execR
  [39] cats.effect.IOFiber.run
  [40] cats.effect.unsafe.WorkerThread.run

--- 562058488 ns (0.05%), 56 samples
  [ 0] void OopOopIterateDispatch<G1RebuildRemSetClosure>::Table::oop_oop_iterate<InstanceKlass, narrowOop>(G1RebuildRemSetClosure*, oopDesc*, Klass*)
  [ 1] HeapRegionManager::par_iterate(HeapRegionClosure*, HeapRegionClaimer*, unsigned int) const
  [ 2] G1RebuildRemSetTask::work(unsigned int)
  [ 3] GangWorker::loop()
  [ 4] GangWorker::run()
  [ 5] Thread::call_run()
  [ 6] thread_native_entry(Thread*)
  [ 7] start_thread

--- 561911374 ns (0.05%), 56 samples
  [ 0] __kmalloc_node_[k]
  [ 1] spl_kmem_alloc_impl?[spl]_[k]
  [ 2] spl_kmem_alloc?[spl]_[k]
  [ 3] zfs_rangelock_enter_impl?[zfs]_[k]
  [ 4] zfs_rangelock_enter?[zfs]_[k]
  [ 5] zfs_write?[zfs]_[k]
  [ 6] zpl_iter_write?[zfs]_[k]
  [ 7] new_sync_write_[k]
  [ 8] vfs_write_[k]
  [ 9] ksys_write_[k]
  [10] __x64_sys_write_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] write
  [14] sun.nio.ch.FileDispatcherImpl.write0
  [15] sun.nio.ch.FileDispatcherImpl.write
  [16] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.FileChannelImpl.write
  [20] java.nio.channels.Channels.writeFullyImpl
  [21] java.nio.channels.Channels.writeFully
  [22] java.nio.channels.Channels$1.write
  [23] java.io.InputStream.transferTo
  [24] java.nio.file.Files.copy
  [25] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [26] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [27] jdk.nio.zipfs.ZipPath.newFileChannel
  [28] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [29] java.nio.channels.FileChannel.open
  [30] java.nio.channels.FileChannel.open
  [31] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [32] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$65.0x0000000800d354a0.apply
  [33] cats.effect.IOFiber.$anonfun$8
  [34] cats.effect.IOFiber$$Lambda$668.0x0000000800ea8d20.apply
  [35] cats.effect.unsafe.WorkerThread.blockOn
  [36] scala.concurrent.package$.blocking
  [37] cats.effect.IOFiber.runLoop
  [38] cats.effect.IOFiber.execR
  [39] cats.effect.IOFiber.run
  [40] cats.effect.unsafe.WorkerThread.run

--- 561504608 ns (0.05%), 56 samples
  [ 0] memmove_[k]
  [ 1] dnode_set_blksz?[zfs]_[k]
  [ 2] dmu_object_set_blocksize?[zfs]_[k]
  [ 3] zfs_grow_blocksize?[zfs]_[k]
  [ 4] zfs_write?[zfs]_[k]
  [ 5] zpl_iter_write?[zfs]_[k]
  [ 6] new_sync_write_[k]
  [ 7] vfs_write_[k]
  [ 8] ksys_write_[k]
  [ 9] __x64_sys_write_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] write
  [13] sun.nio.ch.FileDispatcherImpl.write0
  [14] sun.nio.ch.FileDispatcherImpl.write
  [15] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [16] sun.nio.ch.IOUtil.write
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.FileChannelImpl.write
  [19] java.nio.channels.Channels.writeFullyImpl
  [20] java.nio.channels.Channels.writeFully
  [21] java.nio.channels.Channels$1.write
  [22] java.io.InputStream.transferTo
  [23] java.nio.file.Files.copy
  [24] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [25] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [26] jdk.nio.zipfs.ZipPath.newFileChannel
  [27] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [28] java.nio.channels.FileChannel.open
  [29] java.nio.channels.FileChannel.open
  [30] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [31] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$65.0x0000000800d354a0.apply
  [32] cats.effect.IOFiber.$anonfun$8
  [33] cats.effect.IOFiber$$Lambda$668.0x0000000800ea8d20.apply
  [34] cats.effect.unsafe.WorkerThread.blockOn
  [35] scala.concurrent.package$.blocking
  [36] cats.effect.IOFiber.runLoop
  [37] cats.effect.IOFiber.execR
  [38] cats.effect.IOFiber.run
  [39] cats.effect.unsafe.WorkerThread.run

--- 552070275 ns (0.05%), 55 samples
  [ 0] __fsnotify_parent_[k]
  [ 1] vfs_write_[k]
  [ 2] ksys_write_[k]
  [ 3] __x64_sys_write_[k]
  [ 4] do_syscall_64_[k]
  [ 5] entry_SYSCALL_64_after_hwframe_[k]
  [ 6] write
  [ 7] sun.nio.ch.FileDispatcherImpl.write0
  [ 8] sun.nio.ch.FileDispatcherImpl.write
  [ 9] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [10] sun.nio.ch.IOUtil.write
  [11] sun.nio.ch.IOUtil.write
  [12] sun.nio.ch.FileChannelImpl.write
  [13] java.nio.channels.Channels.writeFullyImpl
  [14] java.nio.channels.Channels.writeFully
  [15] java.nio.channels.Channels$1.write
  [16] java.io.InputStream.transferTo
  [17] java.nio.file.Files.copy
  [18] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [19] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [20] jdk.nio.zipfs.ZipPath.newFileChannel
  [21] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [22] java.nio.channels.FileChannel.open
  [23] java.nio.channels.FileChannel.open
  [24] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [25] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$65.0x0000000800d354a0.apply
  [26] cats.effect.IOFiber.$anonfun$8
  [27] cats.effect.IOFiber$$Lambda$668.0x0000000800ea8d20.apply
  [28] cats.effect.unsafe.WorkerThread.blockOn
  [29] scala.concurrent.package$.blocking
  [30] cats.effect.IOFiber.runLoop
  [31] cats.effect.IOFiber.execR
  [32] cats.effect.IOFiber.run
  [33] cats.effect.unsafe.WorkerThread.run

--- 551500878 ns (0.05%), 55 samples
  [ 0] do_user_addr_fault_[k]
  [ 1] exc_page_fault_[k]
  [ 2] asm_exc_page_fault_[k]
  [ 3] __memset_avx2_unaligned_erms
  [ 4] MemAllocator::allocate() const
  [ 5] TypeArrayKlass::allocate_common(int, bool, JavaThread*)
  [ 6] JVMCIRuntime::new_array_common(JavaThread*, Klass*, int, bool)
  [ 7] fs2.text$utf8$.processSingleChunk$1
  [ 8] fs2.text$utf8$.doPull$1$$anonfun$1
  [ 9] fs2.text$utf8$$$Lambda$771.0x0000000800ed4800.apply
  [10] fs2.Pull$$anon$1.cont
  [11] fs2.Pull$.fs2$Pull$$$bindBindAux
  [12] fs2.Pull$BindBind.cont
  [13] fs2.Pull$ContP.apply
  [14] fs2.Pull$ContP.apply$
  [15] fs2.Pull$Bind.apply
  [16] fs2.Pull$Bind.apply
  [17] fs2.Pull$UnconsRunR$1.out$$anonfun$2
  [18] fs2.Pull$UnconsRunR$1$$Lambda$708.0x0000000800eb2820.apply
  [19] fs2.Pull$.interruptGuard$1$$anonfun$1
  [20] fs2.Pull$$$Lambda$518.0x0000000800e3f6e0.apply
  [21] cats.effect.IOFiber.succeeded
  [22] cats.effect.IOFiber.runLoop
  [23] cats.effect.IOFiber.autoCedeR
  [24] cats.effect.IOFiber.run
  [25] cats.effect.unsafe.WorkerThread.run

--- 551415952 ns (0.05%), 55 samples
  [ 0] __rcu_read_lock_[k]
  [ 1] __kmalloc_[k]
  [ 2] inotify_handle_inode_event_[k]
  [ 3] fsnotify_handle_inode_event.isra.0_[k]
  [ 4] send_to_group_[k]
  [ 5] fsnotify_[k]
  [ 6] __fsnotify_parent_[k]
  [ 7] vfs_write_[k]
  [ 8] ksys_write_[k]
  [ 9] __x64_sys_write_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] write
  [13] sun.nio.ch.FileDispatcherImpl.write0
  [14] sun.nio.ch.FileDispatcherImpl.write
  [15] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [16] sun.nio.ch.IOUtil.write
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.FileChannelImpl.write
  [19] java.nio.channels.Channels.writeFullyImpl
  [20] java.nio.channels.Channels.writeFully
  [21] java.nio.channels.Channels$1.write
  [22] java.io.InputStream.transferTo
  [23] java.nio.file.Files.copy
  [24] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [25] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [26] jdk.nio.zipfs.ZipPath.newFileChannel
  [27] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [28] java.nio.channels.FileChannel.open
  [29] java.nio.channels.FileChannel.open
  [30] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [31] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$65.0x0000000800d354a0.apply
  [32] cats.effect.IOFiber.$anonfun$8
  [33] cats.effect.IOFiber$$Lambda$668.0x0000000800ea8d20.apply
  [34] cats.effect.unsafe.WorkerThread.blockOn
  [35] scala.concurrent.package$.blocking
  [36] cats.effect.IOFiber.runLoop
  [37] cats.effect.IOFiber.execR
  [38] cats.effect.IOFiber.run
  [39] cats.effect.unsafe.WorkerThread.run

--- 551402794 ns (0.05%), 55 samples
  [ 0] jbyte_disjoint_arraycopy
  [ 1] jdk.internal.misc.Unsafe.copyMemory0
  [ 2] jdk.internal.misc.Unsafe.copyMemory
  [ 3] jdk.internal.misc.ScopedMemoryAccess.copyMemoryInternal
  [ 4] jdk.internal.misc.ScopedMemoryAccess.copyMemory
  [ 5] java.nio.ByteBuffer.putBuffer
  [ 6] java.nio.ByteBuffer.put
  [ 7] sun.nio.ch.IOUtil.write
  [ 8] sun.nio.ch.IOUtil.write
  [ 9] sun.nio.ch.FileChannelImpl.write
  [10] java.nio.channels.Channels.writeFullyImpl
  [11] java.nio.channels.Channels.writeFully
  [12] java.nio.channels.Channels$1.write
  [13] java.io.InputStream.transferTo
  [14] java.nio.file.Files.copy
  [15] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [16] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [17] jdk.nio.zipfs.ZipPath.newFileChannel
  [18] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [19] java.nio.channels.FileChannel.open
  [20] java.nio.channels.FileChannel.open
  [21] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [22] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$65.0x0000000800d354a0.apply
  [23] cats.effect.IOFiber.$anonfun$8
  [24] cats.effect.IOFiber$$Lambda$668.0x0000000800ea8d20.apply
  [25] cats.effect.unsafe.WorkerThread.blockOn
  [26] scala.concurrent.package$.blocking
  [27] cats.effect.IOFiber.runLoop
  [28] cats.effect.IOFiber.execR
  [29] cats.effect.IOFiber.run
  [30] cats.effect.unsafe.WorkerThread.run

--- 542459749 ns (0.05%), 54 samples
  [ 0] __kmalloc_node_[k]
  [ 1] spl_kmem_alloc_impl?[spl]_[k]
  [ 2] spl_kmem_zalloc?[spl]_[k]
  [ 3] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 4] dmu_write_uio_dnode?[zfs]_[k]
  [ 5] dmu_write_uio_dbuf?[zfs]_[k]
  [ 6] zfs_write?[zfs]_[k]
  [ 7] zpl_iter_write?[zfs]_[k]
  [ 8] new_sync_write_[k]
  [ 9] vfs_write_[k]
  [10] ksys_write_[k]
  [11] __x64_sys_write_[k]
  [12] do_syscall_64_[k]
  [13] entry_SYSCALL_64_after_hwframe_[k]
  [14] write
  [15] sun.nio.ch.FileDispatcherImpl.write0
  [16] sun.nio.ch.FileDispatcherImpl.write
  [17] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.IOUtil.write
  [20] sun.nio.ch.FileChannelImpl.write
  [21] java.nio.channels.Channels.writeFullyImpl
  [22] java.nio.channels.Channels.writeFully
  [23] java.nio.channels.Channels$1.write
  [24] java.io.InputStream.transferTo
  [25] java.nio.file.Files.copy
  [26] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [27] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [28] jdk.nio.zipfs.ZipPath.newFileChannel
  [29] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [30] java.nio.channels.FileChannel.open
  [31] java.nio.channels.FileChannel.open
  [32] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [33] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$65.0x0000000800d354a0.apply
  [34] cats.effect.IOFiber.$anonfun$8
  [35] cats.effect.IOFiber$$Lambda$668.0x0000000800ea8d20.apply
  [36] cats.effect.unsafe.WorkerThread.blockOn
  [37] scala.concurrent.package$.blocking
  [38] cats.effect.IOFiber.runLoop
  [39] cats.effect.IOFiber.execR
  [40] cats.effect.IOFiber.run
  [41] cats.effect.unsafe.WorkerThread.run

--- 542123366 ns (0.05%), 54 samples
  [ 0] Assembler::locate_operand(unsigned char*, Assembler::WhichOperand)
  [ 1] metadata_Relocation::metadata_value()
  [ 2] CompiledMethod::cleanup_inline_caches_impl(bool, bool)
  [ 3] CompiledMethod::unload_nmethod_caches(bool)
  [ 4] nmethod::do_unloading(bool)
  [ 5] CodeCacheUnloadingTask::work(unsigned int)
  [ 6] G1ParallelCleaningTask::work(unsigned int)
  [ 7] GangWorker::loop()
  [ 8] GangWorker::run()
  [ 9] Thread::call_run()
  [10] thread_native_entry(Thread*)
  [11] start_thread

--- 541335608 ns (0.05%), 54 samples
  [ 0] void OopOopIterateDispatch<G1RebuildRemSetClosure>::Table::oop_oop_iterate<InstanceMirrorKlass, narrowOop>(G1RebuildRemSetClosure*, oopDesc*, Klass*)
  [ 1] G1RebuildRemSetTask::G1RebuildRemSetHeapRegionClosure::do_heap_region(HeapRegion*)
  [ 2] HeapRegionManager::par_iterate(HeapRegionClosure*, HeapRegionClaimer*, unsigned int) const
  [ 3] G1RebuildRemSetTask::work(unsigned int)
  [ 4] GangWorker::loop()
  [ 5] GangWorker::run()
  [ 6] Thread::call_run()
  [ 7] thread_native_entry(Thread*)
  [ 8] start_thread

--- 532398949 ns (0.05%), 53 samples
  [ 0] void OopOopIterateDispatch<G1ScanCardClosure>::Table::oop_oop_iterate<InstanceKlass, narrowOop>(G1ScanCardClosure*, oopDesc*, Klass*)
  [ 1] G1ScanHRForRegionClosure::scan_heap_roots(HeapRegion*)
  [ 2] G1RemSet::scan_heap_roots(G1ParScanThreadState*, unsigned int, G1GCPhaseTimes::GCParPhases, G1GCPhaseTimes::GCParPhases, bool)
  [ 3] G1EvacuateRegionsTask::scan_roots(G1ParScanThreadState*, unsigned int)
  [ 4] G1EvacuateRegionsBaseTask::work(unsigned int)
  [ 5] GangWorker::loop()
  [ 6] GangWorker::run()
  [ 7] Thread::call_run()
  [ 8] thread_native_entry(Thread*)
  [ 9] start_thread

--- 531834721 ns (0.05%), 53 samples
  [ 0] dmu_tx_count_write?[zfs]_[k]
  [ 1] dmu_tx_hold_write_by_dnode?[zfs]_[k]
  [ 2] zfs_write?[zfs]_[k]
  [ 3] zpl_iter_write?[zfs]_[k]
  [ 4] new_sync_write_[k]
  [ 5] vfs_write_[k]
  [ 6] ksys_write_[k]
  [ 7] __x64_sys_write_[k]
  [ 8] do_syscall_64_[k]
  [ 9] entry_SYSCALL_64_after_hwframe_[k]
  [10] write
  [11] sun.nio.ch.FileDispatcherImpl.write0
  [12] sun.nio.ch.FileDispatcherImpl.write
  [13] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [14] sun.nio.ch.IOUtil.write
  [15] sun.nio.ch.IOUtil.write
  [16] sun.nio.ch.FileChannelImpl.write
  [17] java.nio.channels.Channels.writeFullyImpl
  [18] java.nio.channels.Channels.writeFully
  [19] java.nio.channels.Channels$1.write
  [20] java.io.InputStream.transferTo
  [21] java.nio.file.Files.copy
  [22] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [23] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [24] jdk.nio.zipfs.ZipPath.newFileChannel
  [25] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [26] java.nio.channels.FileChannel.open
  [27] java.nio.channels.FileChannel.open
  [28] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [29] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$65.0x0000000800d354a0.apply
  [30] cats.effect.IOFiber.$anonfun$8
  [31] cats.effect.IOFiber$$Lambda$668.0x0000000800ea8d20.apply
  [32] cats.effect.unsafe.WorkerThread.blockOn
  [33] scala.concurrent.package$.blocking
  [34] cats.effect.IOFiber.runLoop
  [35] cats.effect.IOFiber.execR
  [36] cats.effect.IOFiber.run
  [37] cats.effect.unsafe.WorkerThread.run

--- 521806134 ns (0.05%), 52 samples
  [ 0] jlong_disjoint_arraycopy
  [ 1] jdk.internal.misc.Unsafe.copyMemory0
  [ 2] jdk.internal.misc.Unsafe.copyMemory
  [ 3] jdk.internal.misc.ScopedMemoryAccess.copyMemoryInternal
  [ 4] jdk.internal.misc.ScopedMemoryAccess.copyMemory
  [ 5] java.nio.ByteBuffer.putBuffer
  [ 6] java.nio.ByteBuffer.put
  [ 7] java.nio.HeapByteBuffer.put
  [ 8] sun.nio.ch.IOUtil.read
  [ 9] sun.nio.ch.IOUtil.read
  [10] sun.nio.ch.FileChannelImpl.readInternal
  [11] sun.nio.ch.FileChannelImpl.read
  [12] jdk.nio.zipfs.ZipFileSystem$1.read
  [13] fs2.io.file.FileHandleCompanionPlatform$$anon$1.read$$anonfun$1
  [14] fs2.io.file.FileHandleCompanionPlatform$$anon$1$$Lambda$720.0x0000000800eb7150.apply
  [15] cats.effect.IOFiber.$anonfun$8
  [16] cats.effect.IOFiber$$Lambda$668.0x0000000800ea8d20.apply
  [17] cats.effect.unsafe.WorkerThread.blockOn
  [18] scala.concurrent.package$.blocking
  [19] cats.effect.IOFiber.runLoop
  [20] cats.effect.IOFiber.execR
  [21] cats.effect.IOFiber.run
  [22] cats.effect.unsafe.WorkerThread.run

--- 521571402 ns (0.05%), 52 samples
  [ 0] clear_page_rep_[k]
  [ 1] get_page_from_freelist_[k]
  [ 2] __alloc_pages_[k]
  [ 3] __folio_alloc_[k]
  [ 4] vma_alloc_folio_[k]
  [ 5] do_anonymous_page_[k]
  [ 6] handle_pte_fault_[k]
  [ 7] __handle_mm_fault_[k]
  [ 8] handle_mm_fault_[k]
  [ 9] do_user_addr_fault_[k]
  [10] exc_page_fault_[k]
  [11] asm_exc_page_fault_[k]
  [12] __memset_avx2_unaligned_erms
  [13] MemAllocator::allocate() const
  [14] TypeArrayKlass::allocate_common(int, bool, JavaThread*)
  [15] JVMCIRuntime::new_array_common(JavaThread*, Klass*, int, bool)
  [16] fs2.Pull$OuterRun$1.out
  [17] fs2.Pull$.go$1$$anonfun$1
  [18] fs2.Pull$$$Lambda$698.0x0000000800eb0220.apply
  [19] fs2.Pull$.interruptGuard$1$$anonfun$1
  [20] fs2.Pull$$$Lambda$518.0x0000000800e3f6e0.apply
  [21] cats.effect.IOFiber.succeeded
  [22] cats.effect.IOFiber.runLoop
  [23] cats.effect.IOFiber.autoCedeR
  [24] cats.effect.IOFiber.run
  [25] cats.effect.unsafe.WorkerThread.run

--- 521479648 ns (0.05%), 52 samples
  [ 0] do_user_addr_fault_[k]
  [ 1] exc_page_fault_[k]
  [ 2] asm_exc_page_fault_[k]
  [ 3] __memset_avx2_unaligned_erms
  [ 4] MemAllocator::allocate() const
  [ 5] TypeArrayKlass::allocate_common(int, bool, JavaThread*)
  [ 6] JVMCIRuntime::new_array_common(JavaThread*, Klass*, int, bool)
  [ 7] java.lang.Math.max
  [ 8] scala.runtime.RichInt$.max$extension
  [ 9] fs2.text$utf8$.lastIncompleteBytes$1
  [10] fs2.text$utf8$.processSingleChunk$1
  [11] fs2.text$utf8$.doPull$1$$anonfun$1
  [12] fs2.text$utf8$$$Lambda$771.0x0000000800ed4800.apply
  [13] fs2.Pull$$anon$1.cont
  [14] fs2.Pull$.fs2$Pull$$$bindBindAux
  [15] fs2.Pull$BindBind.cont
  [16] fs2.Pull$ContP.apply
  [17] fs2.Pull$ContP.apply$
  [18] fs2.Pull$Bind.apply
  [19] fs2.Pull$Bind.apply
  [20] fs2.Pull$UnconsRunR$1.out$$anonfun$2
  [21] fs2.Pull$UnconsRunR$1$$Lambda$708.0x0000000800eb2820.apply
  [22] fs2.Pull$.interruptGuard$1$$anonfun$1
  [23] fs2.Pull$$$Lambda$518.0x0000000800e3f6e0.apply
  [24] cats.effect.IOFiber.succeeded
  [25] cats.effect.IOFiber.runLoop
  [26] cats.effect.IOFiber.autoCedeR
  [27] cats.effect.IOFiber.run
  [28] cats.effect.unsafe.WorkerThread.run

--- 521434865 ns (0.05%), 52 samples
  [ 0] _raw_spin_lock_[k]
  [ 1] zfs_write?[zfs]_[k]
  [ 2] zpl_iter_write?[zfs]_[k]
  [ 3] new_sync_write_[k]
  [ 4] vfs_write_[k]
  [ 5] ksys_write_[k]
  [ 6] __x64_sys_write_[k]
  [ 7] do_syscall_64_[k]
  [ 8] entry_SYSCALL_64_after_hwframe_[k]
  [ 9] write
  [10] sun.nio.ch.FileDispatcherImpl.write0
  [11] sun.nio.ch.FileDispatcherImpl.write
  [12] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [13] sun.nio.ch.IOUtil.write
  [14] sun.nio.ch.IOUtil.write
  [15] sun.nio.ch.FileChannelImpl.write
  [16] java.nio.channels.Channels.writeFullyImpl
  [17] java.nio.channels.Channels.writeFully
  [18] java.nio.channels.Channels$1.write
  [19] java.io.InputStream.transferTo
  [20] java.nio.file.Files.copy
  [21] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [22] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [23] jdk.nio.zipfs.ZipPath.newFileChannel
  [24] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [25] java.nio.channels.FileChannel.open
  [26] java.nio.channels.FileChannel.open
  [27] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [28] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$65.0x0000000800d354a0.apply
  [29] cats.effect.IOFiber.$anonfun$8
  [30] cats.effect.IOFiber$$Lambda$668.0x0000000800ea8d20.apply
  [31] cats.effect.unsafe.WorkerThread.blockOn
  [32] scala.concurrent.package$.blocking
  [33] cats.effect.IOFiber.runLoop
  [34] cats.effect.IOFiber.execR
  [35] cats.effect.IOFiber.run
  [36] cats.effect.unsafe.WorkerThread.run

--- 512586595 ns (0.05%), 51 samples
  [ 0] __kmalloc_node_[k]
  [ 1] spl_kmem_alloc_impl?[spl]_[k]
  [ 2] spl_kmem_zalloc?[spl]_[k]
  [ 3] dmu_tx_create_dd?[zfs]_[k]
  [ 4] dmu_tx_create?[zfs]_[k]
  [ 5] zfs_write?[zfs]_[k]
  [ 6] zpl_iter_write?[zfs]_[k]
  [ 7] new_sync_write_[k]
  [ 8] vfs_write_[k]
  [ 9] ksys_write_[k]
  [10] __x64_sys_write_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] write
  [14] sun.nio.ch.FileDispatcherImpl.write0
  [15] sun.nio.ch.FileDispatcherImpl.write
  [16] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.FileChannelImpl.write
  [20] java.nio.channels.Channels.writeFullyImpl
  [21] java.nio.channels.Channels.writeFully
  [22] java.nio.channels.Channels$1.write
  [23] java.io.InputStream.transferTo
  [24] java.nio.file.Files.copy
  [25] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [26] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [27] jdk.nio.zipfs.ZipPath.newFileChannel
  [28] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [29] java.nio.channels.FileChannel.open
  [30] java.nio.channels.FileChannel.open
  [31] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [32] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$65.0x0000000800d354a0.apply
  [33] cats.effect.IOFiber.$anonfun$8
  [34] cats.effect.IOFiber$$Lambda$668.0x0000000800ea8d20.apply
  [35] cats.effect.unsafe.WorkerThread.blockOn
  [36] scala.concurrent.package$.blocking
  [37] cats.effect.IOFiber.runLoop
  [38] cats.effect.IOFiber.execR
  [39] cats.effect.IOFiber.run
  [40] cats.effect.unsafe.WorkerThread.run

--- 512241950 ns (0.05%), 51 samples
  [ 0] ___slab_alloc_[k]
  [ 1] __kmalloc_[k]
  [ 2] inotify_handle_inode_event_[k]
  [ 3] fsnotify_handle_inode_event.isra.0_[k]
  [ 4] send_to_group_[k]
  [ 5] fsnotify_[k]
  [ 6] __fsnotify_parent_[k]
  [ 7] vfs_write_[k]
  [ 8] ksys_write_[k]
  [ 9] __x64_sys_write_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] write
  [13] sun.nio.ch.FileDispatcherImpl.write0
  [14] sun.nio.ch.FileDispatcherImpl.write
  [15] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [16] sun.nio.ch.IOUtil.write
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.FileChannelImpl.write
  [19] java.nio.channels.Channels.writeFullyImpl
  [20] java.nio.channels.Channels.writeFully
  [21] java.nio.channels.Channels$1.write
  [22] java.io.InputStream.transferTo
  [23] java.nio.file.Files.copy
  [24] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [25] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [26] jdk.nio.zipfs.ZipPath.newFileChannel
  [27] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [28] java.nio.channels.FileChannel.open
  [29] java.nio.channels.FileChannel.open
  [30] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [31] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$65.0x0000000800d354a0.apply
  [32] cats.effect.IOFiber.$anonfun$8
  [33] cats.effect.IOFiber$$Lambda$668.0x0000000800ea8d20.apply
  [34] cats.effect.unsafe.WorkerThread.blockOn
  [35] scala.concurrent.package$.blocking
  [36] cats.effect.IOFiber.runLoop
  [37] cats.effect.IOFiber.execR
  [38] cats.effect.IOFiber.run
  [39] cats.effect.unsafe.WorkerThread.run

--- 512017428 ns (0.05%), 51 samples
  [ 0] zil_aitx_compare?[zfs]_[k]
  [ 1] zil_itx_assign?[zfs]_[k]
  [ 2] zfs_log_write?[zfs]_[k]
  [ 3] zfs_write?[zfs]_[k]
  [ 4] zpl_iter_write?[zfs]_[k]
  [ 5] new_sync_write_[k]
  [ 6] vfs_write_[k]
  [ 7] ksys_write_[k]
  [ 8] __x64_sys_write_[k]
  [ 9] do_syscall_64_[k]
  [10] entry_SYSCALL_64_after_hwframe_[k]
  [11] write
  [12] sun.nio.ch.FileDispatcherImpl.write0
  [13] sun.nio.ch.FileDispatcherImpl.write
  [14] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [15] sun.nio.ch.IOUtil.write
  [16] sun.nio.ch.IOUtil.write
  [17] sun.nio.ch.FileChannelImpl.write
  [18] java.nio.channels.Channels.writeFullyImpl
  [19] java.nio.channels.Channels.writeFully
  [20] java.nio.channels.Channels$1.write
  [21] java.io.InputStream.transferTo
  [22] java.nio.file.Files.copy
  [23] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [24] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [25] jdk.nio.zipfs.ZipPath.newFileChannel
  [26] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [27] java.nio.channels.FileChannel.open
  [28] java.nio.channels.FileChannel.open
  [29] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [30] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$65.0x0000000800d354a0.apply
  [31] cats.effect.IOFiber.$anonfun$8
  [32] cats.effect.IOFiber$$Lambda$668.0x0000000800ea8d20.apply
  [33] cats.effect.unsafe.WorkerThread.blockOn
  [34] scala.concurrent.package$.blocking
  [35] cats.effect.IOFiber.runLoop
  [36] cats.effect.IOFiber.execR
  [37] cats.effect.IOFiber.run
  [38] cats.effect.unsafe.WorkerThread.run

--- 511928166 ns (0.05%), 51 samples
  [ 0] inotify_handle_inode_event_[k]
  [ 1] fsnotify_handle_inode_event.isra.0_[k]
  [ 2] send_to_group_[k]
  [ 3] fsnotify_[k]
  [ 4] __fsnotify_parent_[k]
  [ 5] vfs_write_[k]
  [ 6] ksys_write_[k]
  [ 7] __x64_sys_write_[k]
  [ 8] do_syscall_64_[k]
  [ 9] entry_SYSCALL_64_after_hwframe_[k]
  [10] write
  [11] sun.nio.ch.FileDispatcherImpl.write0
  [12] sun.nio.ch.FileDispatcherImpl.write
  [13] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [14] sun.nio.ch.IOUtil.write
  [15] sun.nio.ch.IOUtil.write
  [16] sun.nio.ch.FileChannelImpl.write
  [17] java.nio.channels.Channels.writeFullyImpl
  [18] java.nio.channels.Channels.writeFully
  [19] java.nio.channels.Channels$1.write
  [20] java.io.InputStream.transferTo
  [21] java.nio.file.Files.copy
  [22] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [23] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [24] jdk.nio.zipfs.ZipPath.newFileChannel
  [25] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [26] java.nio.channels.FileChannel.open
  [27] java.nio.channels.FileChannel.open
  [28] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [29] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$65.0x0000000800d354a0.apply
  [30] cats.effect.IOFiber.$anonfun$8
  [31] cats.effect.IOFiber$$Lambda$668.0x0000000800ea8d20.apply
  [32] cats.effect.unsafe.WorkerThread.blockOn
  [33] scala.concurrent.package$.blocking
  [34] cats.effect.IOFiber.runLoop
  [35] cats.effect.IOFiber.execR
  [36] cats.effect.IOFiber.run
  [37] cats.effect.unsafe.WorkerThread.run

--- 511845765 ns (0.05%), 51 samples
  [ 0] mutex_lock_[k]
  [ 1] dsl_dir_tempreserve_clear?[zfs]_[k]
  [ 2] dmu_tx_commit?[zfs]_[k]
  [ 3] zfs_write?[zfs]_[k]
  [ 4] zpl_iter_write?[zfs]_[k]
  [ 5] new_sync_write_[k]
  [ 6] vfs_write_[k]
  [ 7] ksys_write_[k]
  [ 8] __x64_sys_write_[k]
  [ 9] do_syscall_64_[k]
  [10] entry_SYSCALL_64_after_hwframe_[k]
  [11] write
  [12] sun.nio.ch.FileDispatcherImpl.write0
  [13] sun.nio.ch.FileDispatcherImpl.write
  [14] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [15] sun.nio.ch.IOUtil.write
  [16] sun.nio.ch.IOUtil.write
  [17] sun.nio.ch.FileChannelImpl.write
  [18] java.nio.channels.Channels.writeFullyImpl
  [19] java.nio.channels.Channels.writeFully
  [20] java.nio.channels.Channels$1.write
  [21] java.io.InputStream.transferTo
  [22] java.nio.file.Files.copy
  [23] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [24] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [25] jdk.nio.zipfs.ZipPath.newFileChannel
  [26] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [27] java.nio.channels.FileChannel.open
  [28] java.nio.channels.FileChannel.open
  [29] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [30] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$65.0x0000000800d354a0.apply
  [31] cats.effect.IOFiber.$anonfun$8
  [32] cats.effect.IOFiber$$Lambda$668.0x0000000800ea8d20.apply
  [33] cats.effect.unsafe.WorkerThread.blockOn
  [34] scala.concurrent.package$.blocking
  [35] cats.effect.IOFiber.runLoop
  [36] cats.effect.IOFiber.execR
  [37] cats.effect.IOFiber.run
  [38] cats.effect.unsafe.WorkerThread.run

--- 511574881 ns (0.05%), 51 samples
  [ 0] get_obj_cgroup_from_current_[k]
  [ 1] __kmalloc_[k]
  [ 2] inotify_handle_inode_event_[k]
  [ 3] fsnotify_handle_inode_event.isra.0_[k]
  [ 4] send_to_group_[k]
  [ 5] fsnotify_[k]
  [ 6] __fsnotify_parent_[k]
  [ 7] vfs_write_[k]
  [ 8] ksys_write_[k]
  [ 9] __x64_sys_write_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] write
  [13] sun.nio.ch.FileDispatcherImpl.write0
  [14] sun.nio.ch.FileDispatcherImpl.write
  [15] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [16] sun.nio.ch.IOUtil.write
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.FileChannelImpl.write
  [19] java.nio.channels.Channels.writeFullyImpl
  [20] java.nio.channels.Channels.writeFully
  [21] java.nio.channels.Channels$1.write
  [22] java.io.InputStream.transferTo
  [23] java.nio.file.Files.copy
  [24] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [25] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [26] jdk.nio.zipfs.ZipPath.newFileChannel
  [27] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [28] java.nio.channels.FileChannel.open
  [29] java.nio.channels.FileChannel.open
  [30] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [31] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$65.0x0000000800d354a0.apply
  [32] cats.effect.IOFiber.$anonfun$8
  [33] cats.effect.IOFiber$$Lambda$668.0x0000000800ea8d20.apply
  [34] cats.effect.unsafe.WorkerThread.blockOn
  [35] scala.concurrent.package$.blocking
  [36] cats.effect.IOFiber.runLoop
  [37] cats.effect.IOFiber.execR
  [38] cats.effect.IOFiber.run
  [39] cats.effect.unsafe.WorkerThread.run

--- 511200677 ns (0.05%), 51 samples
  [ 0] scala.reflect.ManifestFactory$ByteManifest.newArray
  [ 1] scala.reflect.ManifestFactory$ByteManifest.newArray
  [ 2] scala.runtime.Arrays$.newGenericArray
  [ 3] fs2.Chunk.toArray
  [ 4] fs2.text$utf8$.processSingleChunk$1
  [ 5] fs2.text$utf8$.doPull$1$$anonfun$1
  [ 6] fs2.text$utf8$$$Lambda$771.0x0000000800ed4800.apply
  [ 7] fs2.Pull$$anon$1.cont
  [ 8] fs2.Pull$.fs2$Pull$$$bindBindAux
  [ 9] fs2.Pull$BindBind.cont
  [10] fs2.Pull$ContP.apply
  [11] fs2.Pull$ContP.apply$
  [12] fs2.Pull$Bind.apply
  [13] fs2.Pull$Bind.apply
  [14] fs2.Pull$UnconsRunR$1.out$$anonfun$2
  [15] fs2.Pull$UnconsRunR$1$$Lambda$708.0x0000000800eb2820.apply
  [16] fs2.Pull$.interruptGuard$1$$anonfun$1
  [17] fs2.Pull$$$Lambda$518.0x0000000800e3f6e0.apply
  [18] cats.effect.IOFiber.succeeded
  [19] cats.effect.IOFiber.runLoop
  [20] cats.effect.IOFiber.autoCedeR
  [21] cats.effect.IOFiber.run
  [22] cats.effect.unsafe.WorkerThread.run

--- 501665552 ns (0.05%), 50 samples
  [ 0] oopDesc::size_given_klass(Klass*)
  [ 1] G1CMConcurrentMarkingTask::work(unsigned int)
  [ 2] GangWorker::loop()
  [ 3] GangWorker::run()
  [ 4] Thread::call_run()
  [ 5] thread_native_entry(Thread*)
  [ 6] start_thread

--- 491777890 ns (0.05%), 49 samples
  [ 0] fault_in_readable_[k]
  [ 1] fault_in_iov_iter_readable_[k]
  [ 2] zfs_uio_prefaultpages?[zfs]_[k]
  [ 3] zfs_write?[zfs]_[k]
  [ 4] zpl_iter_write?[zfs]_[k]
  [ 5] new_sync_write_[k]
  [ 6] vfs_write_[k]
  [ 7] ksys_write_[k]
  [ 8] __x64_sys_write_[k]
  [ 9] do_syscall_64_[k]
  [10] entry_SYSCALL_64_after_hwframe_[k]
  [11] write
  [12] sun.nio.ch.FileDispatcherImpl.write0
  [13] sun.nio.ch.FileDispatcherImpl.write
  [14] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [15] sun.nio.ch.IOUtil.write
  [16] sun.nio.ch.IOUtil.write
  [17] sun.nio.ch.FileChannelImpl.write
  [18] java.nio.channels.Channels.writeFullyImpl
  [19] java.nio.channels.Channels.writeFully
  [20] java.nio.channels.Channels$1.write
  [21] java.io.InputStream.transferTo
  [22] java.nio.file.Files.copy
  [23] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [24] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [25] jdk.nio.zipfs.ZipPath.newFileChannel
  [26] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [27] java.nio.channels.FileChannel.open
  [28] java.nio.channels.FileChannel.open
  [29] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [30] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$65.0x0000000800d354a0.apply
  [31] cats.effect.IOFiber.$anonfun$8
  [32] cats.effect.IOFiber$$Lambda$668.0x0000000800ea8d20.apply
  [33] cats.effect.unsafe.WorkerThread.blockOn
  [34] scala.concurrent.package$.blocking
  [35] cats.effect.IOFiber.runLoop
  [36] cats.effect.IOFiber.execR
  [37] cats.effect.IOFiber.run
  [38] cats.effect.unsafe.WorkerThread.run

--- 491290446 ns (0.05%), 49 samples
  [ 0] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 1] dmu_write_uio_dnode?[zfs]_[k]
  [ 2] dmu_write_uio_dbuf?[zfs]_[k]
  [ 3] zfs_write?[zfs]_[k]
  [ 4] zpl_iter_write?[zfs]_[k]
  [ 5] new_sync_write_[k]
  [ 6] vfs_write_[k]
  [ 7] ksys_write_[k]
  [ 8] __x64_sys_write_[k]
  [ 9] do_syscall_64_[k]
  [10] entry_SYSCALL_64_after_hwframe_[k]
  [11] write
  [12] sun.nio.ch.FileDispatcherImpl.write0
  [13] sun.nio.ch.FileDispatcherImpl.write
  [14] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [15] sun.nio.ch.IOUtil.write
  [16] sun.nio.ch.IOUtil.write
  [17] sun.nio.ch.FileChannelImpl.write
  [18] java.nio.channels.Channels.writeFullyImpl
  [19] java.nio.channels.Channels.writeFully
  [20] java.nio.channels.Channels$1.write
  [21] java.io.InputStream.transferTo
  [22] java.nio.file.Files.copy
  [23] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [24] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [25] jdk.nio.zipfs.ZipPath.newFileChannel
  [26] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [27] java.nio.channels.FileChannel.open
  [28] java.nio.channels.FileChannel.open
  [29] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [30] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$65.0x0000000800d354a0.apply
  [31] cats.effect.IOFiber.$anonfun$8
  [32] cats.effect.IOFiber$$Lambda$668.0x0000000800ea8d20.apply
  [33] cats.effect.unsafe.WorkerThread.blockOn
  [34] scala.concurrent.package$.blocking
  [35] cats.effect.IOFiber.runLoop
  [36] cats.effect.IOFiber.execR
  [37] cats.effect.IOFiber.run
  [38] cats.effect.unsafe.WorkerThread.run

--- 490976277 ns (0.05%), 49 samples
  [ 0] GenericTaskQueue<G1TaskQueueEntry, (MEMFLAGS)5, 131072u>::pop_local(G1TaskQueueEntry&, unsigned int) [clone .constprop.0]
  [ 1] G1CMTask::do_marking_step(double, bool, bool)
  [ 2] G1CMConcurrentMarkingTask::work(unsigned int)
  [ 3] GangWorker::loop()
  [ 4] GangWorker::run()
  [ 5] Thread::call_run()
  [ 6] thread_native_entry(Thread*)
  [ 7] start_thread

--- 482101116 ns (0.05%), 48 samples
  [ 0] clear_page_rep_[k]
  [ 1] get_page_from_freelist_[k]
  [ 2] __alloc_pages_[k]
  [ 3] __folio_alloc_[k]
  [ 4] vma_alloc_folio_[k]
  [ 5] do_anonymous_page_[k]
  [ 6] handle_pte_fault_[k]
  [ 7] __handle_mm_fault_[k]
  [ 8] handle_mm_fault_[k]
  [ 9] do_user_addr_fault_[k]
  [10] exc_page_fault_[k]
  [11] asm_exc_page_fault_[k]
  [12] __memset_avx2_unaligned_erms
  [13] MarkBitMap::do_clear(MemRegion, bool)
  [14] G1ClearBitMapTask::G1ClearBitmapHRClosure::do_heap_region(HeapRegion*)
  [15] HeapRegionManager::par_iterate(HeapRegionClosure*, HeapRegionClaimer*, unsigned int) const
  [16] G1ClearBitMapTask::work(unsigned int)
  [17] GangWorker::loop()
  [18] GangWorker::run()
  [19] Thread::call_run()
  [20] thread_native_entry(Thread*)
  [21] start_thread

--- 481765599 ns (0.05%), 48 samples
  [ 0] _raw_spin_lock_[k]
  [ 1] inotify_handle_inode_event_[k]
  [ 2] fsnotify_handle_inode_event.isra.0_[k]
  [ 3] send_to_group_[k]
  [ 4] fsnotify_[k]
  [ 5] __fsnotify_parent_[k]
  [ 6] vfs_write_[k]
  [ 7] ksys_write_[k]
  [ 8] __x64_sys_write_[k]
  [ 9] do_syscall_64_[k]
  [10] entry_SYSCALL_64_after_hwframe_[k]
  [11] write
  [12] sun.nio.ch.FileDispatcherImpl.write0
  [13] sun.nio.ch.FileDispatcherImpl.write
  [14] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [15] sun.nio.ch.IOUtil.write
  [16] sun.nio.ch.IOUtil.write
  [17] sun.nio.ch.FileChannelImpl.write
  [18] java.nio.channels.Channels.writeFullyImpl
  [19] java.nio.channels.Channels.writeFully
  [20] java.nio.channels.Channels$1.write
  [21] java.io.InputStream.transferTo
  [22] java.nio.file.Files.copy
  [23] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [24] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [25] jdk.nio.zipfs.ZipPath.newFileChannel
  [26] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [27] java.nio.channels.FileChannel.open
  [28] java.nio.channels.FileChannel.open
  [29] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [30] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$65.0x0000000800d354a0.apply
  [31] cats.effect.IOFiber.$anonfun$8
  [32] cats.effect.IOFiber$$Lambda$668.0x0000000800ea8d20.apply
  [33] cats.effect.unsafe.WorkerThread.blockOn
  [34] scala.concurrent.package$.blocking
  [35] cats.effect.IOFiber.runLoop
  [36] cats.effect.IOFiber.execR
  [37] cats.effect.IOFiber.run
  [38] cats.effect.unsafe.WorkerThread.run

--- 481016218 ns (0.05%), 48 samples
  [ 0] clear_page_rep_[k]
  [ 1] get_page_from_freelist_[k]
  [ 2] __alloc_pages_[k]
  [ 3] __folio_alloc_[k]
  [ 4] vma_alloc_folio_[k]
  [ 5] do_anonymous_page_[k]
  [ 6] handle_pte_fault_[k]
  [ 7] __handle_mm_fault_[k]
  [ 8] handle_mm_fault_[k]
  [ 9] do_user_addr_fault_[k]
  [10] exc_page_fault_[k]
  [11] asm_exc_page_fault_[k]
  [12] scala.reflect.ManifestFactory$ByteManifest.newArray
  [13] scala.reflect.ManifestFactory$ByteManifest.newArray
  [14] scala.runtime.Arrays$.newGenericArray
  [15] fs2.Chunk.toArray
  [16] fs2.text$utf8$.processSingleChunk$1
  [17] fs2.text$utf8$.doPull$1$$anonfun$1
  [18] fs2.text$utf8$$$Lambda$771.0x0000000800ed4800.apply
  [19] fs2.Pull$$anon$1.cont
  [20] fs2.Pull$.fs2$Pull$$$bindBindAux
  [21] fs2.Pull$BindBind.cont
  [22] fs2.Pull$ContP.apply
  [23] fs2.Pull$ContP.apply$
  [24] fs2.Pull$Bind.apply
  [25] fs2.Pull$Bind.apply
  [26] fs2.Pull$UnconsRunR$1.out$$anonfun$2
  [27] fs2.Pull$UnconsRunR$1$$Lambda$708.0x0000000800eb2820.apply
  [28] fs2.Pull$.interruptGuard$1$$anonfun$1
  [29] fs2.Pull$$$Lambda$518.0x0000000800e3f6e0.apply
  [30] cats.effect.IOFiber.succeeded
  [31] cats.effect.IOFiber.runLoop
  [32] cats.effect.IOFiber.autoCedeR
  [33] cats.effect.IOFiber.run
  [34] cats.effect.unsafe.WorkerThread.run

--- 472122527 ns (0.05%), 47 samples
  [ 0] memcg_slab_post_alloc_hook_[k]
  [ 1] __kmalloc_[k]
  [ 2] inotify_handle_inode_event_[k]
  [ 3] fsnotify_handle_inode_event.isra.0_[k]
  [ 4] send_to_group_[k]
  [ 5] fsnotify_[k]
  [ 6] __fsnotify_parent_[k]
  [ 7] vfs_write_[k]
  [ 8] ksys_write_[k]
  [ 9] __x64_sys_write_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] write
  [13] sun.nio.ch.FileDispatcherImpl.write0
  [14] sun.nio.ch.FileDispatcherImpl.write
  [15] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [16] sun.nio.ch.IOUtil.write
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.FileChannelImpl.write
  [19] java.nio.channels.Channels.writeFullyImpl
  [20] java.nio.channels.Channels.writeFully
  [21] java.nio.channels.Channels$1.write
  [22] java.io.InputStream.transferTo
  [23] java.nio.file.Files.copy
  [24] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [25] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [26] jdk.nio.zipfs.ZipPath.newFileChannel
  [27] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [28] java.nio.channels.FileChannel.open
  [29] java.nio.channels.FileChannel.open
  [30] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [31] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$65.0x0000000800d354a0.apply
  [32] cats.effect.IOFiber.$anonfun$8
  [33] cats.effect.IOFiber$$Lambda$668.0x0000000800ea8d20.apply
  [34] cats.effect.unsafe.WorkerThread.blockOn
  [35] scala.concurrent.package$.blocking
  [36] cats.effect.IOFiber.runLoop
  [37] cats.effect.IOFiber.execR
  [38] cats.effect.IOFiber.run
  [39] cats.effect.unsafe.WorkerThread.run

--- 472027135 ns (0.05%), 47 samples
  [ 0] nmethod::oops_do(OopClosure*, bool)
  [ 1] ClosureIsUnloadingBehaviour::is_unloading(CompiledMethod*) const
  [ 2] nmethod::is_unloading()
  [ 3] bool clean_if_nmethod_is_unloaded<CompiledIC>(CompiledIC*, unsigned char*, CompiledMethod*, bool)
  [ 4] CompiledMethod::cleanup_inline_caches_impl(bool, bool)
  [ 5] CompiledMethod::unload_nmethod_caches(bool)
  [ 6] nmethod::do_unloading(bool)
  [ 7] CodeCacheUnloadingTask::work(unsigned int)
  [ 8] G1ParallelCleaningTask::work(unsigned int)
  [ 9] GangWorker::loop()
  [10] GangWorker::run()
  [11] Thread::call_run()
  [12] thread_native_entry(Thread*)
  [13] start_thread

--- 471695787 ns (0.05%), 47 samples
  [ 0] native_queued_spin_lock_slowpath.part.0_[k]
  [ 1] native_queued_spin_lock_slowpath_[k]
  [ 2] _raw_spin_lock_[k]
  [ 3] fsnotify_insert_event_[k]
  [ 4] inotify_handle_inode_event_[k]
  [ 5] fsnotify_handle_inode_event.isra.0_[k]
  [ 6] send_to_group_[k]
  [ 7] fsnotify_[k]
  [ 8] __fsnotify_parent_[k]
  [ 9] vfs_write_[k]
  [10] ksys_write_[k]
  [11] __x64_sys_write_[k]
  [12] do_syscall_64_[k]
  [13] entry_SYSCALL_64_after_hwframe_[k]
  [14] write
  [15] sun.nio.ch.FileDispatcherImpl.write0
  [16] sun.nio.ch.FileDispatcherImpl.write
  [17] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.IOUtil.write
  [20] sun.nio.ch.FileChannelImpl.write
  [21] java.nio.channels.Channels.writeFullyImpl
  [22] java.nio.channels.Channels.writeFully
  [23] java.nio.channels.Channels$1.write
  [24] java.io.InputStream.transferTo
  [25] java.nio.file.Files.copy
  [26] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [27] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [28] jdk.nio.zipfs.ZipPath.newFileChannel
  [29] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [30] java.nio.channels.FileChannel.open
  [31] java.nio.channels.FileChannel.open
  [32] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [33] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$65.0x0000000800d354a0.apply
  [34] cats.effect.IOFiber.$anonfun$8
  [35] cats.effect.IOFiber$$Lambda$668.0x0000000800ea8d20.apply
  [36] cats.effect.unsafe.WorkerThread.blockOn
  [37] scala.concurrent.package$.blocking
  [38] cats.effect.IOFiber.runLoop
  [39] cats.effect.IOFiber.execR
  [40] cats.effect.IOFiber.run
  [41] cats.effect.unsafe.WorkerThread.run

--- 471418905 ns (0.05%), 47 samples
  [ 0] java.lang.StringCoding.hasNegatives
  [ 1] java.lang.String.<init>
  [ 2] java.lang.String.<init>
  [ 3] fs2.text$utf8$.processSingleChunk$1
  [ 4] fs2.text$utf8$.doPull$1$$anonfun$1
  [ 5] fs2.text$utf8$$$Lambda$771.0x0000000800ed4800.apply
  [ 6] fs2.Pull$$anon$1.cont
  [ 7] fs2.Pull$.fs2$Pull$$$bindBindAux
  [ 8] fs2.Pull$BindBind.cont
  [ 9] fs2.Pull$ContP.apply
  [10] fs2.Pull$ContP.apply$
  [11] fs2.Pull$Bind.apply
  [12] fs2.Pull$Bind.apply
  [13] fs2.Pull$UnconsRunR$1.out$$anonfun$2
  [14] fs2.Pull$UnconsRunR$1$$Lambda$708.0x0000000800eb2820.apply
  [15] fs2.Pull$.interruptGuard$1$$anonfun$1
  [16] fs2.Pull$$$Lambda$518.0x0000000800e3f6e0.apply
  [17] cats.effect.IOFiber.succeeded
  [18] cats.effect.IOFiber.runLoop
  [19] cats.effect.IOFiber.execR
  [20] cats.effect.IOFiber.run
  [21] cats.effect.unsafe.WorkerThread.run

--- 471257319 ns (0.05%), 47 samples
  [ 0] vfs_write_[k]
  [ 1] ksys_write_[k]
  [ 2] __x64_sys_write_[k]
  [ 3] do_syscall_64_[k]
  [ 4] entry_SYSCALL_64_after_hwframe_[k]
  [ 5] write
  [ 6] sun.nio.ch.FileDispatcherImpl.write0
  [ 7] sun.nio.ch.FileDispatcherImpl.write
  [ 8] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [ 9] sun.nio.ch.IOUtil.write
  [10] sun.nio.ch.IOUtil.write
  [11] sun.nio.ch.FileChannelImpl.write
  [12] java.nio.channels.Channels.writeFullyImpl
  [13] java.nio.channels.Channels.writeFully
  [14] java.nio.channels.Channels$1.write
  [15] java.io.InputStream.transferTo
  [16] java.nio.file.Files.copy
  [17] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [18] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [19] jdk.nio.zipfs.ZipPath.newFileChannel
  [20] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [21] java.nio.channels.FileChannel.open
  [22] java.nio.channels.FileChannel.open
  [23] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [24] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$65.0x0000000800d354a0.apply
  [25] cats.effect.IOFiber.$anonfun$8
  [26] cats.effect.IOFiber$$Lambda$668.0x0000000800ea8d20.apply
  [27] cats.effect.unsafe.WorkerThread.blockOn
  [28] scala.concurrent.package$.blocking
  [29] cats.effect.IOFiber.runLoop
  [30] cats.effect.IOFiber.execR
  [31] cats.effect.IOFiber.run
  [32] cats.effect.unsafe.WorkerThread.run

--- 462357302 ns (0.04%), 46 samples
  [ 0] jni_ReleasePrimitiveArrayCritical
  [ 1] Java_java_util_zip_Inflater_inflateBytesBytes
  [ 2] java.util.zip.Inflater.inflateBytesBytes
  [ 3] java.util.zip.Inflater.inflate
  [ 4] java.util.zip.InflaterInputStream.read
  [ 5] java.io.InputStream.transferTo
  [ 6] java.nio.file.Files.copy
  [ 7] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [ 8] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [ 9] jdk.nio.zipfs.ZipPath.newFileChannel
  [10] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [11] java.nio.channels.FileChannel.open
  [12] java.nio.channels.FileChannel.open
  [13] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [14] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$65.0x0000000800d354a0.apply
  [15] cats.effect.IOFiber.$anonfun$8
  [16] cats.effect.IOFiber$$Lambda$668.0x0000000800ea8d20.apply
  [17] cats.effect.unsafe.WorkerThread.blockOn
  [18] scala.concurrent.package$.blocking
  [19] cats.effect.IOFiber.runLoop
  [20] cats.effect.IOFiber.execR
  [21] cats.effect.IOFiber.run
  [22] cats.effect.unsafe.WorkerThread.run

--- 461473682 ns (0.04%), 46 samples
  [ 0] memset_[k]
  [ 1] spl_kmem_cache_alloc?[spl]_[k]
  [ 2] zio_create?[zfs]_[k]
  [ 3] zio_null?[zfs]_[k]
  [ 4] zio_root?[zfs]_[k]
  [ 5] dmu_buf_hold_array_by_dnode?[zfs]_[k]
  [ 6] dmu_read_uio_dnode?[zfs]_[k]
  [ 7] dmu_read_uio_dbuf?[zfs]_[k]
  [ 8] mappedread?[zfs]_[k]
  [ 9] zfs_read?[zfs]_[k]
  [10] zpl_iter_read?[zfs]_[k]
  [11] new_sync_read_[k]
  [12] vfs_read_[k]
  [13] __x64_sys_pread64_[k]
  [14] do_syscall_64_[k]
  [15] entry_SYSCALL_64_after_hwframe_[k]
  [16] __libc_pread64
  [17] sun.nio.ch.FileDispatcherImpl.pread0
  [18] sun.nio.ch.FileDispatcherImpl.pread
  [19] sun.nio.ch.IOUtil.readIntoNativeBuffer
  [20] sun.nio.ch.IOUtil.read
  [21] sun.nio.ch.IOUtil.read
  [22] sun.nio.ch.FileChannelImpl.readInternal
  [23] sun.nio.ch.FileChannelImpl.read
  [24] jdk.nio.zipfs.ZipFileSystem.readFullyAt
  [25] jdk.nio.zipfs.ZipFileSystem$EntryInputStream.read
  [26] jdk.nio.zipfs.ZipFileSystem$2.fill
  [27] java.util.zip.InflaterInputStream.read
  [28] java.io.InputStream.transferTo
  [29] java.nio.file.Files.copy
  [30] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [31] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [32] jdk.nio.zipfs.ZipPath.newFileChannel
  [33] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [34] java.nio.channels.FileChannel.open
  [35] java.nio.channels.FileChannel.open
  [36] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [37] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$65.0x0000000800d354a0.apply
  [38] cats.effect.IOFiber.$anonfun$8
  [39] cats.effect.IOFiber$$Lambda$668.0x0000000800ea8d20.apply
  [40] cats.effect.unsafe.WorkerThread.blockOn
  [41] scala.concurrent.package$.blocking
  [42] cats.effect.IOFiber.runLoop
  [43] cats.effect.IOFiber.execR
  [44] cats.effect.IOFiber.run
  [45] cats.effect.unsafe.WorkerThread.run

--- 461180868 ns (0.04%), 46 samples
  [ 0] try_charge_memcg_[k]
  [ 1] obj_cgroup_charge_[k]
  [ 2] __kmalloc_[k]
  [ 3] inotify_handle_inode_event_[k]
  [ 4] fsnotify_handle_inode_event.isra.0_[k]
  [ 5] send_to_group_[k]
  [ 6] fsnotify_[k]
  [ 7] __fsnotify_parent_[k]
  [ 8] vfs_write_[k]
  [ 9] ksys_write_[k]
  [10] __x64_sys_write_[k]
  [11] do_syscall_64_[k]
  [12] entry_SYSCALL_64_after_hwframe_[k]
  [13] write
  [14] sun.nio.ch.FileDispatcherImpl.write0
  [15] sun.nio.ch.FileDispatcherImpl.write
  [16] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [17] sun.nio.ch.IOUtil.write
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.FileChannelImpl.write
  [20] java.nio.channels.Channels.writeFullyImpl
  [21] java.nio.channels.Channels.writeFully
  [22] java.nio.channels.Channels$1.write
  [23] java.io.InputStream.transferTo
  [24] java.nio.file.Files.copy
  [25] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [26] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [27] jdk.nio.zipfs.ZipPath.newFileChannel
  [28] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [29] java.nio.channels.FileChannel.open
  [30] java.nio.channels.FileChannel.open
  [31] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [32] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$65.0x0000000800d354a0.apply
  [33] cats.effect.IOFiber.$anonfun$8
  [34] cats.effect.IOFiber$$Lambda$668.0x0000000800ea8d20.apply
  [35] cats.effect.unsafe.WorkerThread.blockOn
  [36] scala.concurrent.package$.blocking
  [37] cats.effect.IOFiber.runLoop
  [38] cats.effect.IOFiber.execR
  [39] cats.effect.IOFiber.run
  [40] cats.effect.unsafe.WorkerThread.run

--- 461129081 ns (0.04%), 46 samples
  [ 0] do_user_addr_fault_[k]
  [ 1] exc_page_fault_[k]
  [ 2] asm_exc_page_fault_[k]
  [ 3] __memset_avx2_unaligned_erms
  [ 4] MemAllocator::allocate() const
  [ 5] TypeArrayKlass::allocate_common(int, bool, JavaThread*)
  [ 6] JVMCIRuntime::new_array_common(JavaThread*, Klass*, int, bool)
  [ 7] fs2.io.file.FileHandleCompanionPlatform$$anon$1.read$$anonfun$1
  [ 8] fs2.io.file.FileHandleCompanionPlatform$$anon$1$$Lambda$720.0x0000000800eb7150.apply
  [ 9] cats.effect.IOFiber.$anonfun$8
  [10] cats.effect.IOFiber$$Lambda$668.0x0000000800ea8d20.apply
  [11] cats.effect.unsafe.WorkerThread.blockOn
  [12] scala.concurrent.package$.blocking
  [13] cats.effect.IOFiber.runLoop
  [14] cats.effect.IOFiber.autoCedeR
  [15] cats.effect.IOFiber.run
  [16] cats.effect.unsafe.WorkerThread.run

--- 451903539 ns (0.04%), 45 samples
  [ 0] kfree_[k]
  [ 1] spl_kmem_free_impl?[spl]_[k]
  [ 2] spl_kmem_free?[spl]_[k]
  [ 3] dmu_buf_rele_array?[zfs]_[k]
  [ 4] dmu_write_uio_dnode?[zfs]_[k]
  [ 5] dmu_write_uio_dbuf?[zfs]_[k]
  [ 6] zfs_write?[zfs]_[k]
  [ 7] zpl_iter_write?[zfs]_[k]
  [ 8] new_sync_write_[k]
  [ 9] vfs_write_[k]
  [10] ksys_write_[k]
  [11] __x64_sys_write_[k]
  [12] do_syscall_64_[k]
  [13] entry_SYSCALL_64_after_hwframe_[k]
  [14] write
  [15] sun.nio.ch.FileDispatcherImpl.write0
  [16] sun.nio.ch.FileDispatcherImpl.write
  [17] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.IOUtil.write
  [20] sun.nio.ch.FileChannelImpl.write
  [21] java.nio.channels.Channels.writeFullyImpl
  [22] java.nio.channels.Channels.writeFully
  [23] java.nio.channels.Channels$1.write
  [24] java.io.InputStream.transferTo
  [25] java.nio.file.Files.copy
  [26] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [27] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [28] jdk.nio.zipfs.ZipPath.newFileChannel
  [29] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [30] java.nio.channels.FileChannel.open
  [31] java.nio.channels.FileChannel.open
  [32] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [33] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$65.0x0000000800d354a0.apply
  [34] cats.effect.IOFiber.$anonfun$8
  [35] cats.effect.IOFiber$$Lambda$668.0x0000000800ea8d20.apply
  [36] cats.effect.unsafe.WorkerThread.blockOn
  [37] scala.concurrent.package$.blocking
  [38] cats.effect.IOFiber.runLoop
  [39] cats.effect.IOFiber.execR
  [40] cats.effect.IOFiber.run
  [41] cats.effect.unsafe.WorkerThread.run

--- 451562624 ns (0.04%), 45 samples
  [ 0] oopDesc::size_given_klass(Klass*)
  [ 1] G1CMTask::do_marking_step(double, bool, bool)
  [ 2] G1CMConcurrentMarkingTask::work(unsigned int)
  [ 3] GangWorker::loop()
  [ 4] GangWorker::run()
  [ 5] Thread::call_run()
  [ 6] thread_native_entry(Thread*)
  [ 7] start_thread

--- 450966173 ns (0.04%), 45 samples
  [ 0] java.nio.HeapByteBuffer.<init>
  [ 1] java.nio.ByteBuffer.allocate
  [ 2] fs2.io.file.FileHandleCompanionPlatform$$anon$1.read$$anonfun$1
  [ 3] fs2.io.file.FileHandleCompanionPlatform$$anon$1$$Lambda$720.0x0000000800eb7150.apply
  [ 4] cats.effect.IOFiber.$anonfun$8
  [ 5] cats.effect.IOFiber$$Lambda$668.0x0000000800ea8d20.apply
  [ 6] cats.effect.unsafe.WorkerThread.blockOn
  [ 7] scala.concurrent.package$.blocking
  [ 8] cats.effect.IOFiber.runLoop
  [ 9] cats.effect.IOFiber.autoCedeR
  [10] cats.effect.IOFiber.run
  [11] cats.effect.unsafe.WorkerThread.run

--- 441967766 ns (0.04%), 44 samples
  [ 0] kmem_cache_alloc_[k]
  [ 1] spl_kmem_cache_alloc?[spl]_[k]
  [ 2] zio_create?[zfs]_[k]
  [ 3] zio_null?[zfs]_[k]
  [ 4] zio_root?[zfs]_[k]
  [ 5] dmu_tx_count_write?[zfs]_[k]
  [ 6] dmu_tx_hold_write_by_dnode?[zfs]_[k]
  [ 7] zfs_write?[zfs]_[k]
  [ 8] zpl_iter_write?[zfs]_[k]
  [ 9] new_sync_write_[k]
  [10] vfs_write_[k]
  [11] ksys_write_[k]
  [12] __x64_sys_write_[k]
  [13] do_syscall_64_[k]
  [14] entry_SYSCALL_64_after_hwframe_[k]
  [15] write
  [16] sun.nio.ch.FileDispatcherImpl.write0
  [17] sun.nio.ch.FileDispatcherImpl.write
  [18] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [19] sun.nio.ch.IOUtil.write
  [20] sun.nio.ch.IOUtil.write
  [21] sun.nio.ch.FileChannelImpl.write
  [22] java.nio.channels.Channels.writeFullyImpl
  [23] java.nio.channels.Channels.writeFully
  [24] java.nio.channels.Channels$1.write
  [25] java.io.InputStream.transferTo
  [26] java.nio.file.Files.copy
  [27] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [28] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [29] jdk.nio.zipfs.ZipPath.newFileChannel
  [30] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [31] java.nio.channels.FileChannel.open
  [32] java.nio.channels.FileChannel.open
  [33] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [34] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$65.0x0000000800d354a0.apply
  [35] cats.effect.IOFiber.$anonfun$8
  [36] cats.effect.IOFiber$$Lambda$668.0x0000000800ea8d20.apply
  [37] cats.effect.unsafe.WorkerThread.blockOn
  [38] scala.concurrent.package$.blocking
  [39] cats.effect.IOFiber.runLoop
  [40] cats.effect.IOFiber.execR
  [41] cats.effect.IOFiber.run
  [42] cats.effect.unsafe.WorkerThread.run

--- 441953418 ns (0.04%), 44 samples
  [ 0] __kmalloc_node_[k]
  [ 1] spl_kmem_alloc_impl?[spl]_[k]
  [ 2] spl_kmem_alloc?[spl]_[k]
  [ 3] dsl_dir_tempreserve_space?[zfs]_[k]
  [ 4] dmu_tx_try_assign?[zfs]_[k]
  [ 5] dmu_tx_assign?[zfs]_[k]
  [ 6] zfs_write?[zfs]_[k]
  [ 7] zpl_iter_write?[zfs]_[k]
  [ 8] new_sync_write_[k]
  [ 9] vfs_write_[k]
  [10] ksys_write_[k]
  [11] __x64_sys_write_[k]
  [12] do_syscall_64_[k]
  [13] entry_SYSCALL_64_after_hwframe_[k]
  [14] write
  [15] sun.nio.ch.FileDispatcherImpl.write0
  [16] sun.nio.ch.FileDispatcherImpl.write
  [17] sun.nio.ch.IOUtil.writeFromNativeBuffer
  [18] sun.nio.ch.IOUtil.write
  [19] sun.nio.ch.IOUtil.write
  [20] sun.nio.ch.FileChannelImpl.write
  [21] java.nio.channels.Channels.writeFullyImpl
  [22] java.nio.channels.Channels.writeFully
  [23] java.nio.channels.Channels$1.write
  [24] java.io.InputStream.transferTo
  [25] java.nio.file.Files.copy
  [26] jdk.nio.zipfs.ZipFileSystem.getTempPathForEntry
  [27] jdk.nio.zipfs.ZipFileSystem.newFileChannel
  [28] jdk.nio.zipfs.ZipPath.newFileChannel
  [29] jdk.nio.zipfs.ZipFileSystemProvider.newFileChannel
  [30] java.nio.channels.FileChannel.open
  [31] java.nio.channels.FileChannel.open
  [32] fs2.io.file.FilesCompanionPlatform.fs2$io$file$FilesCompanionPlatform$AsyncFiles$$_$open$$anonfun$1
  [33] fs2.io.file.FilesCompanionPlatform$AsyncFiles$$Lambda$65.0x0000000800d354a0.apply
  [34] cats.effect.IOFiber.$anonfun$8
  [35] cats.effect.IOFiber$$Lambda$668.0x0000000800ea8d20.apply
  [36] cats.effect.unsafe.WorkerThread.blockOn
  [37] scala.concurrent.package$.blocking
  [38] cats.effect.IOFiber.runLoop
  [39] cats.effect.IOFiber.execR
  [40] cats.effect.IOFiber.run
  [41] cats.effect.unsafe.WorkerThread.run

          ns  percent  samples  top
  ----------  -------  -------  ---
312049835506   29.96%    31119  /usr/lib/x86_64-linux-gnu/libz.so.1.2.11
 67064630443    6.44%     6688  __memset_avx2_unaligned_erms
 45671706303    4.38%     4551  _raw_spin_unlock_irqrestore_[k]
 39266347546    3.77%     3917  java.util.Arrays.copyOf
 24250477394    2.33%     2416  copy_user_generic_string_[k]
 20489852346    1.97%     2044  java.util.Arrays.copyOfRange
 18433747342    1.77%     1836  memset_[k]
 18113050487    1.74%     1806  inflate
 16028641575    1.54%     1598  void OopOopIterateDispatch<G1CMOopClosure>::Table::oop_oop_iterate<InstanceKlass, narrowOop>(G1CMOopClosure*, oopDesc*, Klass*)
 13182961001    1.27%     1315  java.lang.System.arraycopy
 10299735972    0.99%     1027  clear_page_rep_[k]
 10067014364    0.97%     1004  jlong_disjoint_arraycopy
  9400662911    0.90%      937  void OopOopIterateDispatch<G1CMOopClosure>::Table::oop_oop_iterate<ObjArrayKlass, narrowOop>(G1CMOopClosure*, oopDesc*, Klass*)
  9023339223    0.87%      899  mutex_lock_[k]
  7356516684    0.71%      733  _raw_spin_lock_[k]
  6882291123    0.66%      686  G1RebuildRemSetTask::G1RebuildRemSetHeapRegionClosure::do_heap_region(HeapRegion*)
  6739176300    0.65%      670  find_vmap_area_[k]
  6352651923    0.61%      633  mutex_unlock_[k]
  6064752758    0.58%      604  __kmalloc_node_[k]
  5784350928    0.56%      576  CompiledMethod::cleanup_inline_caches_impl(bool, bool)
  5006119468    0.48%      499  void OopOopIterateDispatch<G1RebuildRemSetClosure>::Table::oop_oop_iterate<InstanceKlass, narrowOop>(G1RebuildRemSetClosure*, oopDesc*, Klass*)
  5005477778    0.48%      499  refill_stock_[k]
  4983436250    0.48%      497  do_user_addr_fault_[k]
  4817898332    0.46%      480  kfree_[k]
  4765958831    0.46%      475  fsnotify_[k]
  4614341052    0.44%      460  void OopOopIterateDispatch<G1CMOopClosure>::Table::oop_oop_iterate<InstanceMirrorKlass, narrowOop>(G1CMOopClosure*, oopDesc*, Klass*)
  4292733589    0.41%      428  __memmove_avx_unaligned_erms
  4057228522    0.39%      404  nmethod::oops_do(OopClosure*, bool)
  3942257452    0.38%      393  refill_obj_stock_[k]
  3883521045    0.37%      387  send_to_group_[k]
  3796616673    0.36%      378  percpu_counter_add_batch_[k]
  3550332207    0.34%      354  page_counter_try_charge_[k]
  3542357708    0.34%      353  void G1CMTask::process_grey_task_entry<true>(G1TaskQueueEntry)
  3529156212    0.34%      352  java.lang.StringCoding.hasNegatives
  3210585274    0.31%      320  kmem_cache_free_[k]
  2899329107    0.28%      289  memcg_slab_post_alloc_hook_[k]
  2867702592    0.28%      286  G1CMTask::do_marking_step(double, bool, bool)
  2850649146    0.27%      284  zfs_write?[zfs]_[k]
  2820584418    0.27%      281  kmem_cache_alloc_[k]
  2738856109    0.26%      273  zio_create?[zfs]_[k]
  2658449339    0.26%      265  native_queued_spin_lock_slowpath.part.0_[k]
  2640485104    0.25%      263  inotify_handle_inode_event_[k]
  2637853679    0.25%      263  void G1RebuildRemSetClosure::do_oop_work<narrowOop>(narrowOop*)
  2536343855    0.24%      253  java.nio.HeapByteBuffer.<init>
  2534567325    0.24%      253  SpinPause
  2441973958    0.23%      242  __schedule_[k]
  2417988317    0.23%      241  try_charge_memcg_[k]
  2378703604    0.23%      237  syscall_enter_from_user_mode_[k]
  2236206801    0.21%      223  scala.reflect.ManifestFactory$ByteManifest.newArray
  2208068985    0.21%      220  _raw_spin_unlock_[k]
  2100051989    0.20%      209  HeapRegionManager::par_iterate(HeapRegionClosure*, HeapRegionClaimer*, unsigned int) const
  2096264519    0.20%      209  rmqueue_pcplist.constprop.0_[k]
  2086066803    0.20%      208  memmove_[k]
  2045412877    0.20%      204  __rcu_read_lock_[k]
  2038004146    0.20%      203  zil_aitx_compare?[zfs]_[k]
  1996926501    0.19%      199  zrl_add_impl?[zfs]_[k]
  1887988508    0.18%      188  dbuf_find?[zfs]_[k]
  1857373808    0.18%      185  Assembler::locate_operand(unsigned char*, Assembler::WhichOperand)
  1836110905    0.18%      183  vfs_write_[k]
  1816188324    0.17%      181  __kmalloc_[k]
  1784452169    0.17%      178  TaskTerminator::offer_termination(TerminatorTerminator*)
  1776774294    0.17%      177  sa_attr_op?[zfs]_[k]
  1724925487    0.17%      172  __get_obj_cgroup_from_memcg_[k]
  1656970800    0.16%      165  down_read_[k]
  1656427152    0.16%      165  zio_wait?[zfs]_[k]
  1634459960    0.16%      163  strcpy_[k]
  1632251950    0.16%      162  free_unref_page_list_[k]
  1626660027    0.16%      162  spl_kmem_cache_alloc?[spl]_[k]
  1616132569    0.16%      161  kmalloc_slab_[k]
  1615165859    0.16%      161  __rcu_read_unlock_[k]
  1594750338    0.15%      159  dmu_buf_hold_array_by_dnode?[zfs]_[k]
  1565310935    0.15%      156  mod_memcg_state_[k]
  1555182597    0.15%      155  zio_done?[zfs]_[k]
  1524209381    0.15%      152  cats.effect.IOFiber.runLoop
  1515587852    0.15%      151  __cond_resched_[k]
  1494831676    0.14%      149  G1CMTask::drain_local_queue(bool) [clone .part.0] [clone .constprop.1]
  1455363675    0.14%      145  dsl_dir_tempreserve_impl.constprop.0?[zfs]_[k]
  1406093502    0.13%      140  arc_buf_access?[zfs]_[k]
  1385545883    0.13%      138  __fget_light_[k]
  1385292498    0.13%      138  list_head?[zfs]_[k]
  1374378622    0.13%      137  jni_GetPrimitiveArrayCritical
  1325205145    0.13%      132  ___slab_alloc_[k]
  1315407844    0.13%      131  spl_mutex_clear_owner?[zfs]_[k]
  1304523567    0.13%      130  sun.nio.ch.FileDispatcherImpl.write0
  1304386881    0.13%      130  dmu_tx_try_assign?[zfs]_[k]
  1265126508    0.12%      126  fsnotify_insert_event_[k]
  1253908077    0.12%      125  dbuf_rele_and_unlock?[zfs]_[k]
  1243894251    0.12%      124  obj_cgroup_charge_[k]
  1224470219    0.12%      122  write
  1213980318    0.12%      121  oopDesc::size_given_klass(Klass*)
  1208577878    0.12%      121  zap_pte_range_[k]
  1204803482    0.12%      120  apparmor_file_permission_[k]
  1193927770    0.11%      119  __list_del_entry?[zfs]_[k]
  1183308301    0.11%      118  G1CMTask::drain_global_stack(bool) [clone .constprop.0]
  1153781126    0.11%      115  zfs_log_write?[zfs]_[k]
  1152748967    0.11%      115  __handle_mm_fault_[k]
  1134396446    0.11%      113  NativeCall::destination() const
  1124366226    0.11%      112  spl_mutex_set_owner?[zfs]_[k]
  1105173164    0.11%      110  dbuf_read?[zfs]_[k]
  1093551218    0.10%      109  inotify_merge_[k]
  1093317425    0.10%      109  zio_wait_for_children?[zfs]_[k]
  1092982878    0.10%      109  cats.effect.tracing.RingBuffer.push
  1085566824    0.10%      108  void WeakProcessor::Task::work<G1STWIsAliveClosure, G1KeepAliveClosure>(unsigned int, G1STWIsAliveClosure*, G1KeepAliveClosure*)
  1074732187    0.10%      107  dsl_dir_phys?[zfs]_[k]
  1074423045    0.10%      107  CodeHeap::find_blob_unsafe(void*) const
  1074155548    0.10%      107  dbuf_hold_impl?[zfs]_[k]
  1063870877    0.10%      106  __list_add?[zfs]_[k]
  1054676593    0.10%      105  avl_find?[zavl]_[k]
  1053526511    0.10%      105  __fsnotify_parent_[k]
  1053388696    0.10%      105  read_tsc_[k]
  1053105746    0.10%      105  void OopOopIterateDispatch<G1RebuildRemSetClosure>::Table::oop_oop_iterate<ObjArrayKlass, narrowOop>(G1RebuildRemSetClosure*, oopDesc*, Klass*)
  1044143716    0.10%      104  dmu_zfetch_prepare?[zfs]_[k]
   993472845    0.10%       99  spl_kmem_cache_free?[spl]_[k]
   983353456    0.09%       98  cats.effect.IOFiber.succeeded
   974439085    0.09%       97  __x86_return_thunk_[k]
   973875113    0.09%       97  CodeHeap::next_used(HeapBlock*) const
   943711087    0.09%       94  java.util.zip.Inflater.inflate
   943270338    0.09%       94  up_read_[k]
   932311073    0.09%       93  zio_ready?[zfs]_[k]
   932061488    0.09%       93  fs2.Pull$.fs2$Pull$$$_$viewL$1
   923602197    0.09%       92  RelocIterator::advance_over_prefix()
   923073755    0.09%       92  itable stub
   912237755    0.09%       91  jbyte_disjoint_arraycopy
   903829787    0.09%       90  memcg_slab_free_hook_[k]
   903722115    0.09%       90  list_del?[zfs]_[k]
   892562800    0.09%       89  unsigned long BitMap::get_next_bit_impl<0ul, false>(unsigned long, unsigned long) const [clone .part.0] [clone .isra.0]
   874009444    0.08%       87  G1ParScanThreadState::trim_queue_to_threshold(unsigned int)
   863450636    0.08%       86  should_failslab_[k]
   863289806    0.08%       86  jni_ReleasePrimitiveArrayCritical
   862616390    0.08%       86  list_empty?[zfs]_[k]
   853052939    0.08%       85  G1ConcurrentMark::mark_in_next_bitmap(unsigned int, oopDesc*)
   843637596    0.08%       84  dbuf_find_dirty_lte?[zfs]_[k]
   842482403    0.08%       84  charge_memcg_[k]
   833612717    0.08%       83  __tls_get_addr
   813354569    0.08%       81  dbuf_read_verify_dnode_crypt?[zfs]_[k]
   813000916    0.08%       81  fault_in_readable_[k]
   812605203    0.08%       81  zrl_remove?[zfs]_[k]
   803966239    0.08%       80  cityhash4?[zcommon]_[k]
   784171458    0.08%       78  spl_kmem_alloc_impl?[spl]_[k]
   782188855    0.08%       78  __cv_broadcast?[spl]_[k]
   781942175    0.08%       78  do_anonymous_page_[k]
   772670472    0.07%       77  java.util.concurrent.ConcurrentLinkedQueue.poll
   763093612    0.07%       76  sun.nio.ch.FileChannelImpl.write
   753543306    0.07%       75  arch_atomic64_read?[zfs]_[k]
   753037690    0.07%       75  CompiledMethod::oops_reloc_begin() const
   751987066    0.07%       75  propagate_protected_usage_[k]
   742819619    0.07%       74  zpl_iter_write?[zfs]_[k]
   732066281    0.07%       73  arc_tempreserve_space?[zfs]_[k]
   731959399    0.07%       73  get_obj_cgroup_from_current_[k]
   713077498    0.07%       71  G1ScanHRForRegionClosure::scan_heap_roots(HeapRegion*)
   712722289    0.07%       71  list_is_empty?[zfs]_[k]
   702106742    0.07%       70  java.nio.Buffer.position
   693016494    0.07%       69  G1ParCopyClosure<(G1Barrier)1, true>::do_oop(oopDesc**)
   692611544    0.07%       69  arch_atomic64_sub_return.constprop.0?[zfs]_[k]
   690999264    0.07%       69  G1CMTask::get_entries_from_global_stack()
   682939683    0.07%       68  dmu_tx_hold_sa?[zfs]_[k]
   682508569    0.07%       68  ktime_get_raw_ts64_[k]
   682367106    0.07%       68  __list_del?[zfs]_[k]
   682181766    0.07%       68  dmu_tx_count_write?[zfs]_[k]
   673314187    0.06%       67  void WeakProcessor::Task::work<G1CMIsAliveClosure, DoNothingClosure>(unsigned int, G1CMIsAliveClosure*, DoNothingClosure*)
   672667099    0.06%       67  list_create.constprop.0?[zfs]_[k]
   672485768    0.06%       67  is_vmalloc_addr_[k]
   672471187    0.06%       67  sun.nio.ch.NativeThread.current
   672038939    0.06%       67  __libc_pread64
   662873923    0.06%       66  kmem_flags_convert?[spl]_[k]
   662447729    0.06%       66  lockref_get_not_zero_[k]
   661932669    0.06%       66  Java_java_util_zip_Inflater_inflateBytesBytes
   661811055    0.06%       66  zfs_rangelock_exit?[zfs]_[k]
   641989492    0.06%       64  mod_objcg_state_[k]
   633198004    0.06%       63  vdev_stat_update?[zfs]_[k]
   631400995    0.06%       63  java.util.zip.Inflater.inflateBytesBytes
   622852289    0.06%       62  dsl_dir_tempreserve_clear?[zfs]_[k]
   622140992    0.06%       62  consume_obj_stock_[k]
   621277636    0.06%       62  consume_stock_[k]
   591945981    0.06%       59  CollectedHeap::supports_object_pinning() const
   591525426    0.06%       59  void OopOopIterateDispatch<G1RebuildRemSetClosure>::Table::oop_oop_iterate<InstanceMirrorKlass, narrowOop>(G1RebuildRemSetClosure*, oopDesc*, Klass*)
   582662684    0.06%       58  void OopOopIterateDispatch<G1ScanCardClosure>::Table::oop_oop_iterate<InstanceKlass, narrowOop>(G1ScanCardClosure*, oopDesc*, Klass*)
   582608952    0.06%       58  fsnotify_handle_inode_event.isra.0_[k]
   582551094    0.06%       58  RelocIterator::initialize(CompiledMethod*, unsigned char*, unsigned char*)
   581887821    0.06%       58  count_memcg_events.constprop.0_[k]
   581791078    0.06%       58  void OopOopIterateDispatch<G1CMOopClosure>::Table::oop_oop_iterate<InstanceRefKlass, narrowOop>(G1CMOopClosure*, oopDesc*, Klass*)
   572875416    0.05%       57  dmu_tx_hold_dnode_impl?[zfs]_[k]
   572015592    0.05%       57  sun.nio.ch.NativeThreadSet.add
   571685905    0.05%       57  RW_WRITE_HELD?[zfs]_[k]
   571062833    0.05%       57  bool InstanceRefKlass::try_discover<narrowOop, G1CMOopClosure>(oopDesc*, ReferenceType, G1CMOopClosure*)
   561934200    0.05%       56  arc_memory_throttle?[zfs]_[k]
   561677990    0.05%       56  cats.effect.unsafe.WorkerThread.run
   542291429    0.05%       54  ClassLoaderData::ChunkedHandleList::oops_do(OopClosure*)
   542005984    0.05%       54  G1CMIsAliveClosure::do_object_b(oopDesc*)
   541899306    0.05%       54  avl_remove?[zavl]_[k]
   541734180    0.05%       54  dmu_tx_commit?[zfs]_[k]
   531465799    0.05%       53  sa_get_db?[zfs]_[k]
   531348881    0.05%       53  __mod_lruvec_page_state_[k]
   522318444    0.05%       52  void OopOopIterateBackwardsDispatch<G1ScanEvacuatedObjClosure>::Table::oop_oop_iterate_backwards<InstanceKlass, narrowOop>(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*)
   512319854    0.05%       51  arc_is_encrypted?[zfs]_[k]
   512175568    0.05%       51  __wake_up_common_lock_[k]
   511539971    0.05%       51  jshort_disjoint_arraycopy
   511501318    0.05%       51  handle_mm_fault_[k]
   502389986    0.05%       50  INIT_LIST_HEAD?[zfs]_[k]
   501572532    0.05%       50  blk_cgroup_congested_[k]
Async profiler results:
  profile/com.scalamandra.ZipBench.streamFoldStrings-Throughput-fileName-over64kb.txt/summary-cpu.txt


# Run complete. Total time: 01:07:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                             (fileName)   Mode  Cnt      Score      Error  Units
ZipBench.fs2ReadAllBytes           under64kb.txt  thrpt   20   2320,638 ±   23,833  ops/s
ZipBench.fs2ReadAllBytes:·async    under64kb.txt  thrpt             NaN               ---
ZipBench.fs2ReadAllBytes            over64kb.txt  thrpt   20     76,442 ±    1,518  ops/s
ZipBench.fs2ReadAllBytes:·async     over64kb.txt  thrpt             NaN               ---
ZipBench.nioInputStream            under64kb.txt  thrpt   20  14073,454 ± 1297,237  ops/s
ZipBench.nioInputStream:·async     under64kb.txt  thrpt             NaN               ---
ZipBench.nioInputStream             over64kb.txt  thrpt   20    178,065 ±   20,255  ops/s
ZipBench.nioInputStream:·async      over64kb.txt  thrpt             NaN               ---
ZipBench.nioReadAllBytes           under64kb.txt  thrpt   20  13769,310 ± 1137,724  ops/s
ZipBench.nioReadAllBytes:·async    under64kb.txt  thrpt             NaN               ---
ZipBench.nioReadAllBytes            over64kb.txt  thrpt   20    166,238 ±   14,678  ops/s
ZipBench.nioReadAllBytes:·async     over64kb.txt  thrpt             NaN               ---
ZipBench.streamFoldChunks          under64kb.txt  thrpt   20   2177,429 ±   27,791  ops/s
ZipBench.streamFoldChunks:·async   under64kb.txt  thrpt             NaN               ---
ZipBench.streamFoldChunks           over64kb.txt  thrpt   20     77,349 ±    1,037  ops/s
ZipBench.streamFoldChunks:·async    over64kb.txt  thrpt             NaN               ---
ZipBench.streamFoldStrings         under64kb.txt  thrpt   20   2135,587 ±   31,315  ops/s
ZipBench.streamFoldStrings:·async  under64kb.txt  thrpt             NaN               ---
ZipBench.streamFoldStrings          over64kb.txt  thrpt   20     60,699 ±    1,118  ops/s
ZipBench.streamFoldStrings:·async   over64kb.txt  thrpt             NaN               ---
